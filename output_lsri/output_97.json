{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/putonti/virMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-27T04:08:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-13T03:30:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.998115878050525,
      "result": {
        "original_header": "virMine 2.0",
        "type": "Text_excerpt",
        "value": "Novel viral species genomes \u2013 particularly those in high abundance \u2013 have been able to be identified directly from complex community viral metagenomes. Discovery of such viral genomes often relies heavily on manual curation and prior studies have employed a variety of different criteria when sifting through sequencing data. In an effort to provide a comprehensive means for the discovery of complete viral genomes from complex sequence data sets, we developed the tool virMine. Input can be either: (1) raw sequencing reads from short-read sequencing technologies or (2) long-read sequences or assembled contigs. Short-reads are processed and assembled. These assembled short-reads or supplied long-reads/contigs are then annotated, and individual contigs are scored based upon their likelihood of being viral in origin. Several filters have been implemented, allowing researchers to refine their search for their specific study system. virMine can be used to identify viruses in any niche and thus further our understanding of this vast reservoir of genetic diversity.\n \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9221989138182584,
      "result": {
        "original_header": "virMine Command Options",
        "type": "Text_excerpt",
        "value": "Optional filter parameters:\n*\t-m : minimum contig size\n*\t-M : maximum contig size\n*\t-c : minimum coverage\n*\t-cov : minimum SPAdes coverage\n*\t-g : includes genes of interest (parameter supplies protein sequences for these genes) \nAdditional parameters:\n*\t-t : number of threads\n*\t-b : blast option ['blastx' or 'blastp'] ('blastp' is faster)\n \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9836109042990345,
      "result": {
        "original_header": "Test Data",
        "type": "Text_excerpt",
        "value": "Artificial paired-end reads of _E. coli_ K12 (NC_000913.3) and Escherichia phage Lambda (J02459.1).\n \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9141364907802553,
      "result": {
        "original_header": "Further Details:",
        "type": "Text_excerpt",
        "value": "Further details about this tool can be found in Garretto et al. PeerJ 2019 (https://peerj.com/articles/6695/). A manuscript describing the upgrades implemented as part of v2.0 is currently under review.\n \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/putonti/virmine/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/putonti/virMine/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "putonti/virMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "virMine 2.0"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/putonti/virmine/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9396997782871525,
      "result": {
        "original_header": "virMine Command Options",
        "type": "Text_excerpt",
        "value": "Required parameters:\n*\t-v : list your viral database\n*\t-nv : list your nonviral database\n*\t-o : make an output file \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/putonti/virMine/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Thomas Hatzopoulos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "virMine 2.0"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the terms of the MIT License\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "virMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "putonti"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 57457,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3984,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2458,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/putonti/virmine/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "virMine 2.0",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Docker is the only prerequisite for this program to run, all other dependencies are handled by the Dockerfile.\nIf any section of the program causes an error or is unable to run, check that you have enough memory in your Docker resources.\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run with Paired-End Reads:",
        "parent_header": [
          "virMine 2.0",
          "virMine Command Options"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -a spades -p inputFiles/R1.fastq inputFiles/R2.fastq -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/output\n```"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run with Long-reads or Assembled Contigs:",
        "parent_header": [
          "virMine 2.0",
          "virMine Command Options"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -A inputFiles/assembled_contigs.fasta -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/output\n```\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Command to Run Test Data:",
        "parent_header": [
          "virMine 2.0",
          "Test Data"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -a all3 -p testFiles/test_data_R1.fastq testFiles/test_data_R2.fastq -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/testOutput\n```\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:40:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 1:",
        "parent_header": [
          "virMine 2.0",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Clone Project from GitHub\n```python\ngit clone https://github.com/putonti/virmine.git\n```\nMove paired-end fastq files, as well as the viral and nonviral databases, to the inputFiles folder prior to building the docker image.\n```python\nsudo docker build --tag virmine:latest virmine\n```\n```python\nsudo docker run -v ~/pathToLocalFolder/virmine:/virmineDockerOutputFolder -i -t virmine\n```"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 2:",
        "parent_header": [
          "virMine 2.0",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Docker Hub Link: https://hub.docker.com/repository/docker/genevievej16/virmine\n```python\ndocker pull genevievej16/virmine:latest\n```\nMove paired-end fastq files, as well as the viral and nonviral databases, to your local designated output folder prior to running the docker image. While in the docker you will access the input files from the virmineDockerOutputFolder rather than from the inputFiles folder.\n```python\nsudo docker run -v ~/pathToLocalFolder/virmine:/virmineDockerOutputFolder -i -t genevievej16/virmine\n```\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run with Paired-End Reads:",
        "parent_header": [
          "virMine 2.0",
          "virMine Command Options"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -a spades -p inputFiles/R1.fastq inputFiles/R2.fastq -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/output\n```"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run with Long-reads or Assembled Contigs:",
        "parent_header": [
          "virMine 2.0",
          "virMine Command Options"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -A inputFiles/assembled_contigs.fasta -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/output\n```\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Command to Run Test Data:",
        "parent_header": [
          "virMine 2.0",
          "Test Data"
        ],
        "type": "Text_excerpt",
        "value": "```python\npython3 virMine.py -a all3 -p testFiles/test_data_R1.fastq testFiles/test_data_R2.fastq -v inputFiles/viral_aa.fasta -nv inputFiles/nonviral_aa.fasta -o virmineDockerOutputFolder/testOutput\n```\n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Output",
        "parent_header": [
          "virMine 2.0",
          "Test Data"
        ],
        "type": "Text_excerpt",
        "value": "Running the test data using the option of all 3 assembly methods should result in 3 contigs (final_contigs.fasta), with 1 of those contigs being classified as viral (viral_contigs.fasta). Other output files include all predicted ORFs, the viral ORFs only, and all BLAST output files.  \n"
      },
      "source": "https://raw.githubusercontent.com/putonti/virmine/master/README.md",
      "technique": "header_analysis"
    }
  ]
}