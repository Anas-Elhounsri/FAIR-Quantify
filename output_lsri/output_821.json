{
  "application_domain": [
    {
      "confidence": 16.46,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9905087200158563,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Subset the reference data to Monocyte and DC subsets.",
        "parent_header": [
          "Query Villani etal.(2017) with Sincast"
        ],
        "type": "Text_excerpt",
        "value": "\r\nThis can be done in the same way as the common data frame subsetting in R.\r\n\r\n``` r\r\nreference <- reference[,reference$celltype%in%c('monocyte', 'CD141+ dendritic cell', 'CD1c+ dendritic cell',\r\n                                   'plasmacytoid dendritic cell', 'dendritic cell')]\r\n```\r\n\r\nand for reference color\r\n\r\n``` r\r\nreferenceColors <- c(\"#081d58\",\"#225ea8\",\"#1d91c0\",\"#253494\",\"#7fcdbb\",\"#c7e9b4\",\"#edf8b1\",\"#41b6c4\",\"#7a0177\",\"#ae017e\",\"#49006a\",\"#dd3497\",\"#5e2f0d\",\"#5e2f0d\",\"#8b4513\",\"#8b4513\",\"#8b4513\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\")\r\nnames(referenceColors) <-  c(\"kupffer cell\",\"microglia\",\"macrophage\",\"monocyte\",\"CD141+ dendritic cell\",\"CD1c+ dendritic cell\",\"plasmacytoid dendritic cell\",\"dendritic cell\",\"common myeloid progenitor\",\"common lymphoid progenitor\",\"granulocyte monocyte progenitor\",\"hematopoietic multipotent progenitor\",\"neutrophil\",\"granulocyte\",\"myelocyte\",\"metamyelocyte\",\"promyelocyte\",\"erythrocyte\",\"erythroblast\",\"proerythroblast\",\"endothelial progenitor\",\"hemogenic endothelium\",\"hemangioblast\")\r\nreferenceColors <- referenceColors[c('monocyte', 'CD141+ dendritic cell', 'CD1c+ dendritic cell', 'plasmacytoid dendritic cell', 'dendritic cell')]\r\n```\r\n\r\nNow we are ready for Sincast!\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Subset the reference data to Monocyte and DC subsets and build atlas.",
        "parent_header": [
          "Query Villani etal.(2017) with Sincast"
        ],
        "type": "Text_excerpt",
        "value": "\r\nThe procedure is the same as before. So we don't explain it again here.\r\n\r\n``` r\r\nreference <- featureWeighting(reference, clusterid = 'celltype',assay2rank = 'data')\r\nc(reference, query) %<-% filterData(reference, query)\r\nreference <- makeAtlas(reference = reference, col.by = 'celltype', colors = referenceColors, vis.atlas = T)\r\n```\r\n\r\n<img src=\"./figures/SincastDemo_subatlas.png\" width=\"50%\" style=\"display: block; margin: auto;\" />\r\n\r\nThe interactive 3D plot can be reviewed at [interactive\r\n3D plot](https://chart-studio.plotly.com/~meiosis/7/#/)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "Query Villani etal.(2017) with Sincast"
        ],
        "type": "Text_excerpt",
        "value": "Bian Z, Gong Y, Huang T, Lee CZW, Bian L, Bai Z, Shi H, Zeng Y, Liu C, He J, Zhou J, Li X, Li Z, Ni Y, Ma C, Cui L, Zhang R, Chan JKY, Ng LG, Lan Y, Ginhoux F, Liu B. Deciphering human macrophage development at single-cell resolution. Nature. 2020 Jun;582(7813):571-576. doi: 10.1038/s41586-020-2316-7. Epub 2020 May 20. PMID: 32499656.\r\n\r\nRajab N, Angel PW, Deng Y, Gu J, Jameson V, Kurowska-Stolarska M, Milling S, Pacheco CM, Rutar M, Laslett AL, L\u00ea Cao KA, Choi J, Wells CA. An integrated analysis of human myeloid cells identifies gaps in in vitro models of in vivo biology. Stem Cell Reports. 2021 Jun 8;16(6):1629-1643. doi: 10.1016/j.stemcr.2021.04.010. Epub 2021 May 13. PMID: 33989517; PMCID: PMC8190595.\r\n\r\nAngel PW, Rajab N, Deng Y, Pacheco CM, Chen T, L\u00ea Cao KA, Choi J, Wells CA. A simple, scalable approach to building a cross-platform transcriptome atlas. PLoS Comput Biol. 2020 Sep 28;16(9):e1008219. doi: 10.1371/journal.pcbi.1008219. PMID: 32986694; PMCID: PMC7544119.\r\n\r\nYidi Deng, Jarny Choi, Kim-Anh Le Cao. Sincast: a computational framework to predict cell identities in single cell transcriptomes using bulk atlases as references. bioRxiv 2021.11.07.467660; doi: https://doi.org/10.1101/2021.11.07.467660\r\n\r\nVillani AC, Satija R, Reynolds G, Sarkizova S, Shekhar K, Fletcher J, Griesbeck M, Butler A, Zheng S, Lazo S, Jardine L, Dixon D, Stephenson E, Nilsson E, Grundberg I, McDonald D, Filby A, Li W, De Jager PL, Rozenblatt-Rosen O, Lane AA, Haniffa M, Regev A, Hacohen N. Single-cell RNA-seq reveals new types of human blood dendritic cells, monocytes, and progenitors. Science. 2017 Apr 21;356(6335):eaah4573. doi: 10.1126/science.aah4573. PMID: 28428369; PMCID: PMC5775029.\r\n\r\n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/meiosis97/Sincast"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-07T15:54:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T03:05:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This is the very first Sincast version!"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction to Sincast!",
        "type": "Text_excerpt",
        "value": "\r\nYidi Deng,\r\nNOV, 9th, 2021\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9940591540443907,
      "result": {
        "original_header": "What is Sincast?",
        "type": "Text_excerpt",
        "value": "Sincast ([Deng et al. (2021)](https://doi.org/10.1101/2021.11.07.467660)) is a computational framework to query scRNA-seq data (SIN) by **projecting onto bulk reference atlases** (CAST). Prior to projection, single cell data are transformed to be directly comparable to bulk data, either with pseudo-bulk aggregation or graph-based imputation to address sparse single cell expression profiles. Sincast avoids batch effect correction, and cell identity is predicted along a continuum to highlight new cell states not found in the reference atlas.\r\n\r\n<img src=\"./figures/introduction.jpg\" width=\"80%\" style=\"display: block; margin: auto;\" />\r\n\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9849533281215138,
      "result": {
        "original_header": "Query Bian etal.(2020) with Sincast",
        "type": "Text_excerpt",
        "value": "\r\nThis is the very first Sincast version\\! Here I will give a very brief introduction to Sincast using the\r\n\r\n1.  Query data from [Bian et\r\n    al.(2020)](https://doi.org/10.1038/s41586-020-2316-7): **Deciphering\r\n    human macrophage development at single-cell resolution.**\r\n\r\n2.  Reference data from [Rajab et\r\n    al.(2021)](https://doi.org/10.1016/j.stemcr.2021.04.010): **An\r\n    integrated analysis of human myeloid cells identifies gaps in in\r\n    vitro models of in vivo biology**\r\n\r\nThe query data can be downloaded at NCBI\r\n[GSE133345](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE133345),\r\nand the reference data can be downloaded at the [Stemformatic data\r\nprotal](https://www.stemformatics.org/atlas/myeloid). They are also\r\navailable at our github page.\r\n\r\nNow download Sincast package to get started!\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897627933477156,
      "result": {
        "original_header": "Read your data",
        "type": "Text_excerpt",
        "value": "\r\n``` r\r\n#load the query data\r\nquery.annotation <- read.table('GSE133345_Annotations_of_all_1231_embryonic_cells_updated_0620.txt')\r\nquery.data <- read.table('GSE133345_Quality_controled_UMI_data_of_all_1231_embryonic_cells.txt')\r\n#load the reference data\r\nreference.data <- read.table('RajabRankedExpressionMatrix.txt', check.names = F)\r\nreference.annotation <- read.table('RajabSampleAnnotation.txt')\r\n```\r\n\r\nBoth the data matrix and the metadata matrix must be named. The data matrix is gene by cell, and the metadata matrix is cell by variable. Hence we need to first check that column names of data match row names of annotations.\r\n\r\nBASH2*\r\n\r\n    ## [1] TRUE\r\n\r\nBASH3*\r\n\r\n    ## [1] TRUE\r\n\r\nConvert the query and the reference to **SingleCellExperiment (sce)**\r\nObject. \r\n\r\nBASH4*\r\n\r\nThe reference data was [Rank\r\ntransformed](https://doi.org/10.1371/journal.pcbi.1008219) expression,\r\nso we store it in the *data* slot of the sce. Becasue reference bulk data is not sparse, we don't store the data as a sprase matrix to reduce memory usage. \r\nThe query data is in raw counts so we\r\nstore it in the *counts* slot. We specify data annotation by the *colData* argument.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9730096645284151,
      "result": {
        "original_header": "Preprocess your data",
        "type": "Text_excerpt",
        "value": "\r\nFirst, normalize query library size.\r\n\r\n``` r\r\nquery <- rcTransform(query)\r\n```\r\n\r\nSelect cell type discriminant genes of the reference. By setting *clusterid* to *celltype*, we tell the algorithm to select genes that are discriminant agasint the atlas annotation *celltype*, which is stored in the *ColData* of the reference (so *celltype* is a variable name in the reference annotation matrix).\r\n\r\nBASH2*\r\n\r\nRemove low quality genes and cells in the query. Then, filter both the\r\nquery and the reference data to the shared gene set between kept genes\r\nof the query and cell type discriminant genes of the reference.\r\n\r\nBASH3*\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8714743201386299,
      "result": {
        "original_header": "Build the atlas",
        "type": "Text_excerpt",
        "value": "\r\nIt\u2019s time to build a atlas, which is the PCA representation of the reference data. Lets first customize the atlas color for\r\nbetter visualization.\r\n\r\n``` r\r\nreferenceColors <- c(\"#081d58\",\"#225ea8\",\"#1d91c0\",\"#253494\",\"#7fcdbb\",\"#c7e9b4\",\"#edf8b1\",\"#41b6c4\",\"#7a0177\",\"#ae017e\",\"#49006a\",\"#dd3497\",\"#5e2f0d\",\"#5e2f0d\",\"#8b4513\",\"#8b4513\",\"#8b4513\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\")\r\nnames(referenceColors) <-  c(\"kupffer cell\",\"microglia\",\"macrophage\",\"monocyte\",\"CD141+ dendritic cell\",\"CD1c+ dendritic cell\",\"plasmacytoid dendritic cell\",\"dendritic cell\",\"common myeloid progenitor\",\"common lymphoid progenitor\",\"granulocyte monocyte progenitor\",\"hematopoietic multipotent progenitor\",\"neutrophil\",\"granulocyte\",\"myelocyte\",\"metamyelocyte\",\"promyelocyte\",\"erythrocyte\",\"erythroblast\",\"proerythroblast\",\"endothelial progenitor\",\"hemogenic endothelium\",\"hemangioblast\")\r\n```\r\n\r\nPerform PCA on the reference to build the atlas.\r\n\r\nBASH2*\r\n\r\n<img src=\"./figures/SincastDemo_atlas.png\" width=\"50%\" style=\"display: block; margin: auto;\" />\r\n\r\nThe interactive 3D plot can be reviewed at [interactive\r\n3D plot](https://chart-studio.plotly.com/~meiosis/1/#plot)\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/meiosis97/Sincast/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/meiosis97/Sincast/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meiosis97/Sincast"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction to Sincast!"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/introduction.jpg"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_impMap.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_MeanVar.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_project.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_projectCapybara.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_CapybaraHeatmap.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_subatlas.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_Villaniproject.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_diffusion.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install functions",
        "parent_header": [
          "Query Bian etal.(2020) with Sincast"
        ],
        "type": "Text_excerpt",
        "value": "\r\nMake sure that you have the latest version of devetools and run \r\n\r\n``` r\r\ndevtools::install_github('meiosis97/Sincast@main',subdir = 'pkg')\r\n```\r\n\r\nThis will automatically download the required R packages (a propmt will\r\nshow up)\r\n\r\nNow load Sincast functions into your global environment.\r\n\r\n``` r\r\nlibrary(Sincast)\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/meiosis97/Sincast/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/./figures/SincastDemo_atlas.png"
      },
      "source": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sincast"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "meiosis97"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 53542,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1822,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiosis97/Sincast/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:28:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}