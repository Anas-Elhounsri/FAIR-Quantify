{
  "application_domain": [
    {
      "confidence": 33.37,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "If you find this tool useful, please cite us!\n\n```\n@article{fast-gkm-svm,\n    author = {Blakely, Derrick and Collins, Eamon and Singh, Ritambhara and Norton, Andrew and Lanchantin, Jack and Qi, Yanjun},\n    title = \"{FastSK: fast sequence analysis with gapped string kernels}\",\n    journal = {Bioinformatics},\n    volume = {36},\n    number = {Supplement_2},\n    pages = {i857-i865},\n    year = {2020},\n    month = {12},\n    abstract = \"{Gapped k-mer kernels with support vector machines (gkm-SVMs) have achieved strong predictive performance on regulatory DNA sequences on modestly sized training sets. However, existing gkm-SVM algorithms suffer from slow kernel computation time, as they depend exponentially on the sub-sequence feature length, number of mismatch positions, and the task\u2019s alphabet size.In this work, we introduce a fast and scalable algorithm for calculating gapped k-mer string kernels. Our method, named FastSK, uses a simplified kernel formulation that decomposes the kernel calculation into a set of independent counting operations over the possible mismatch positions. This simplified decomposition allows us to devise a fast Monte Carlo approximation that rapidly converges. FastSK can scale to much greater feature lengths, allows us to consider more mismatches, and is performant on a variety of sequence analysis tasks. On multiple DNA transcription factor binding site prediction datasets, FastSK consistently matches or outperforms the state-of-the-art gkmSVM-2.0 algorithms in area under the ROC curve, while achieving average speedups in kernel computation of \u223c100\u00d7 and speedups of \u223c800\u00d7 for large feature lengths. We further show that FastSK outperforms character-level recurrent and convolutional neural networks while achieving low variance. We then extend FastSK to 7 English-language medical named entity recognition datasets and 10 protein remote homology detection datasets. FastSK consistently matches or outperforms these baselines.Our algorithm is available as a Python package and as C++ source code at https://github.com/QData/FastSKSupplementary data are available at Bioinformatics online.}\",\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btaa817},\n    url = {https://doi.org/10.1093/bioinformatics/btaa817},\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/36/Supplement\\_2/i857/35337038/btaa817.pdf},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Blakely, Derrick and Collins, Eamon and Singh, Ritambhara and Norton, Andrew and Lanchantin, Jack and Qi, Yanjun",
        "doi": "10.1093/bioinformatics/btaa817",
        "format": "bibtex",
        "title": "{FastSK: fast sequence analysis with gapped string kernels}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btaa817",
        "value": "@article{fast-gkm-svm,\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/36/Supplement\\_2/i857/35337038/btaa817.pdf},\n    url = {https://doi.org/10.1093/bioinformatics/btaa817},\n    doi = {10.1093/bioinformatics/btaa817},\n    issn = {1367-4803},\n    abstract = {{Gapped k-mer kernels with support vector machines (gkm-SVMs) have achieved strong predictive performance on regulatory DNA sequences on modestly sized training sets. However, existing gkm-SVM algorithms suffer from slow kernel computation time, as they depend exponentially on the sub-sequence feature length, number of mismatch positions, and the task\u2019s alphabet size.In this work, we introduce a fast and scalable algorithm for calculating gapped k-mer string kernels. Our method, named FastSK, uses a simplified kernel formulation that decomposes the kernel calculation into a set of independent counting operations over the possible mismatch positions. This simplified decomposition allows us to devise a fast Monte Carlo approximation that rapidly converges. FastSK can scale to much greater feature lengths, allows us to consider more mismatches, and is performant on a variety of sequence analysis tasks. On multiple DNA transcription factor binding site prediction datasets, FastSK consistently matches or outperforms the state-of-the-art gkmSVM-2.0 algorithms in area under the ROC curve, while achieving average speedups in kernel computation of \u223c100\u00d7 and speedups of \u223c800\u00d7 for large feature lengths. We further show that FastSK outperforms character-level recurrent and convolutional neural networks while achieving low variance. We then extend FastSK to 7 English-language medical named entity recognition datasets and 10 protein remote homology detection datasets. FastSK consistently matches or outperforms these baselines.Our algorithm is available as a Python package and as C++ source code at https://github.com/QData/FastSKSupplementary data are available at Bioinformatics online.}},\n    month = {12},\n    year = {2020},\n    pages = {i857-i865},\n    number = {Supplement_2},\n    volume = {36},\n    journal = {Bioinformatics},\n    title = {{FastSK: fast sequence analysis with gapped string kernels}},\n    author = {Blakely, Derrick and Collins, Eamon and Singh, Ritambhara and Norton, Andrew and Lanchantin, Jack and Qi, Yanjun},\n}"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QData/FastSK"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-20T20:50:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-14T15:16:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bioinformatics 2020: FastSK: Fast and Accurate Sequence Classification by making gkm-svm faster and scalable. https://fastsk.readthedocs.io/en/master/"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9954315027305709,
      "result": {
        "original_header": "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
        "type": "Text_excerpt",
        "value": "This Github repo provides improved algorithms for implementing gkm-svm string kernel calculations. We provide C++ version of the algorithm implementation and a python wrapper (making to a python package) for the C++ implementation. Our package provides fast and accuate gkm-svm based training SVM classifiers and regressors for gkm string kernel based sequence analysis.  \nThis Github is built with a novel and fast algorithm design for implementing gapped k-mer algorithm, [pybind11](https://github.com/pybind/pybind11), and [LIBSVM](https://github.com/cjlin1/libsvm).\n \n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QData/FastSK/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/QData/FastSK/wiki"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/QData/FastSK/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/docs/2demo/fastDemo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/docs/2demo/fastDemo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QData/FastSK/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "QData/FastSK"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/conda.recipe/build.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/spreadsheets/Figure5.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/spreadsheets/Table1.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/spreadsheets/Table2.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/neural_nets/trainsize_varyresults/dna.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/neural_nets/trainsize_varyresults/protein.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/results/neural_nets/trainsize_varyresults/nlp.png"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Installation\n==============\n\nTo use FastSK, you must be running Python 3.6+. Tensorflow needs to be installed for users, and Java needs to be installed for developers. A CUDA-compatible GPU is optional but will greatly improve speed. To install, simply run\n\n```\ngit clone --recursive https://github.com/QData/FastSK.git\ncd FastSK\npip install -r requirements.txt\npip install .\n```\n\nYou're now all set to use FastSK! "
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/docs/1start/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Way 1: from Pypi",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Installation via Pip Install (Linux and MacOS)"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npip install fastsk\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "You can check if fastsk library is installed correctly in python shell:",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "```\nfrom fastsk import FastSK\n\n## Compute kernel matrix\nfastsk = FastSK(g=10, m=6, t=1, approx=True)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Experimental Results, Baselines, Utility Codes and Setup",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "- We have provided all datasets we used in the subfolder \"data\"\n- We have provided all scripts we used to generate results under the subfolder \"results\"\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Grid Search for FastSK and gkm-svm baseline",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "To run a grid search over the hyperparameter space (g, m, and C) to find the optimal parameters, e.g, one utility code:\n```\ncd results/\npython run_gridsearch.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "When comparing with Deep Learning baselines",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "+ You do need to have pytorch installed\n```\npip install torch torchvision\n```\n+ One utility code: on all datasets with hyperparameter tuning of charCNN and each configure with 5 random-seeding repeats:\n```\ncd results/neural_nets\npython run_cnn_hyperTrTune.py \n```\n+ We have many other utility codes helping users to run CNN and RNN baselines\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some of our exprimental results comparing FastSK with baselines wrt performance and speed",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "\n<img src=\"results/spreadsheets/Figure5.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table1.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table2.png\" width=\"800\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some of our exprimental results comparing FastSK with Character based Convolutional Neural Nets (CharCNN) when varying training size.",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"results/neural_nets/trainsize_varyresults/dna.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/protein.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/nlp.png\" width=\"800\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To Do:",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "* a detailed user document, with example input files, output files, code, and perhaps a user group where people can post their questions\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/QData/FastSK/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cpp, gkm-svm, python-library, sequence-classification, string-classification, string-kernel"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastSK"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "QData"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 311571,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 125151,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 9625,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 972,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 345,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 71,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 51,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/QData/FastSK/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ec3bd",
          "type": "User"
        },
        "date_created": "2018-04-23T09:42:10Z",
        "date_published": "2018-04-23T10:20:25Z",
        "description": "Mostly cleaned up, some iterative improvement left. Make any suggestions you feel.",
        "html_url": "https://github.com/QData/FastSK/releases/tag/clean",
        "name": "Clean Code",
        "release_id": 10670897,
        "tag": "clean",
        "tarball_url": "https://api.github.com/repos/QData/FastSK/tarball/clean",
        "type": "Release",
        "url": "https://api.github.com/repos/QData/FastSK/releases/10670897",
        "value": "https://api.github.com/repos/QData/FastSK/releases/10670897",
        "zipball_url": "https://api.github.com/repos/QData/FastSK/zipball/clean"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.6+\n* setuptools version 42 or greater (run `pip install --upgrade setuptools`)\n* `pybind11` (run `pip install pybind11`)\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Way 2: Clone this repository and run:",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Installation via Pip Install (Linux and MacOS)"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/QData/FastSK.git\ncd FastSK\npip install -r requirements.txt\npip install .\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:43:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Jupyter notebook",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "- 'docs/2demo/fastDemo.ipynb'\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example python usage script: (assuming you have cloned FastSK.git)",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "```\ncd test\npython run_check.py \n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Grid Search for FastSK and gkm-svm baseline",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "To run a grid search over the hyperparameter space (g, m, and C) to find the optimal parameters, e.g, one utility code:\n```\ncd results/\npython run_gridsearch.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "When comparing with Deep Learning baselines",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "+ You do need to have pytorch installed\n```\npip install torch torchvision\n```\n+ One utility code: on all datasets with hyperparameter tuning of charCNN and each configure with 5 random-seeding repeats:\n```\ncd results/neural_nets\npython run_cnn_hyperTrTune.py \n```\n+ We have many other utility codes helping users to run CNN and RNN baselines\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some of our exprimental results comparing FastSK with baselines wrt performance and speed",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "\n<img src=\"results/spreadsheets/Figure5.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table1.png\" width=\"800\">\n\n<img src=\"results/spreadsheets/Table2.png\" width=\"800\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some of our exprimental results comparing FastSK with Character based Convolutional Neural Nets (CharCNN) when varying training size.",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"results/neural_nets/trainsize_varyresults/dna.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/protein.png\" width=\"800\">\n\n<img src=\"results/neural_nets/trainsize_varyresults/nlp.png\" width=\"800\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To Do:",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial",
          "Experimental Results, Baselines, Utility Codes and Setup"
        ],
        "type": "Text_excerpt",
        "value": "* a detailed user document, with example input files, output files, code, and perhaps a user group where people can post their questions\n\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Legacy: If you prefer using the executable made from the Pure C++ source code (without python wrapper or R wrapper)",
        "parent_header": [
          "FastSK: fast sequence analysis with gapped string kernels (Fast-GKM-SVM)",
          "Python Version Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "- you can clone this repository:\n```\ngit clone --recursive https://github.com/QData/FastSK.git\n```\nthen run\n```\ncd FastSK\nmake\n```\nA `fastsk` executable will be installed to the `bin` directory, which you can use for kernel computation and inference. For example:\n```\n./bin/fastsk -g 10 -m 6 -C 1 -t 1 -a data/EP300.train.fasta data/EP300.test.fasta\n```\nThis will run the approximate kernel algorithm on the EP300 TFBS dataset using a feature length of `g = 10` with up to `m = 6` mismatches. It will then train and evaluate an SVM classifier with the SVM parameter `C = 1`.\n"
      },
      "source": "https://raw.githubusercontent.com/QData/FastSK/master/README.md",
      "technique": "header_analysis"
    }
  ]
}