{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement:",
        "parent_header": [
          "KiU-Net 3D:"
        ],
        "type": "Text_excerpt",
        "value": "The dataloader code is inspired from <a href=\"https://github.com/cosmic-cortex/pytorch-UNet\"> pytorch-UNet </a>, [BraTS 2018 dataloader](https://github.com/ieee820/BraTS2018-tumor-segmentation) and [LiTS dataloader](https://github.com/assassint2017/MICCAI-LITS2017).\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 58.24,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation:",
        "type": "Text_excerpt",
        "value": "```bash \n@inproceedings{valanarasu2020kiu,\n  title={KiU-Net: Towards Accurate Segmentation of Biomedical Images Using Over-Complete Representations},\n  author={Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M},\n  booktitle={Medical Image Computing and Computer Assisted Intervention--MICCAI 2020: 23rd International Conference, Lima, Peru, October 4--8, 2020, Proceedings, Part IV 23},\n  pages={363--373},\n  year={2020},\n  organization={Springer}\n}\n```\n```bash\n@article{valanarasu2021kiu,\n  title={Kiu-net: Overcomplete convolutional architectures for biomedical image and volumetric segmentation},\n  author={Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M},\n  journal={IEEE Transactions on Medical Imaging},\n  year={2021},\n  publisher={IEEE}\n}\n```\nOpen an issue in case of any queries or mail me directly.\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M",
        "format": "bibtex",
        "title": "KiU-Net: Towards Accurate Segmentation of Biomedical Images Using Over-Complete Representations",
        "type": "Text_excerpt",
        "value": "@inproceedings{valanarasu2020kiu,\n    organization = {Springer},\n    year = {2020},\n    pages = {363--373},\n    booktitle = {Medical Image Computing and Computer Assisted Intervention--MICCAI 2020: 23rd International Conference, Lima, Peru, October 4--8, 2020, Proceedings, Part IV 23},\n    author = {Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M},\n    title = {KiU-Net: Towards Accurate Segmentation of Biomedical Images Using Over-Complete Representations},\n}"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M",
        "format": "bibtex",
        "title": "Kiu-net: Overcomplete convolutional architectures for biomedical image and volumetric segmentation",
        "type": "Text_excerpt",
        "value": "@article{valanarasu2021kiu,\n    publisher = {IEEE},\n    year = {2021},\n    journal = {IEEE Transactions on Medical Imaging},\n    author = {Valanarasu, Jeya Maria Jose and Sindagi, Vishwanath A and Hacihaliloglu, Ilker and Patel, Vishal M},\n    title = {Kiu-net: Overcomplete convolutional architectures for biomedical image and volumetric segmentation},\n}"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jeya-maria-jose/KiU-Net-pytorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-03T07:22:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T06:44:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Official Pytorch Code of KiU-Net for Image/3D Segmentation - MICCAI 2020 (Oral), IEEE TMI"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "In a generic \"encoder-decoder\" architecture , the initial few blocks of the encoder learn low-level features of the data while the later blocks learn the high-level features. Eventually, the encoder learns to map the data to lower dimensionality (in the spatial sense). The increasing receptive field size over the depth of the network, constrains the network to focus more on the higher-level features. In our proposed architecture , we introduce Ki-Net where we use overcomplete representations which constraints the receptive field from increasing. This is done by a simple change in the architecture of encoder where max-pooling is replaced by up-sampling. This helps the filters in deep layers focus more on the low-level details helping in fine segmentation.  This network, when augmented with U-Net is termed as KiU-Net which results in significant improvements in the case of segmenting small anatomical landmarks and blurred noisy boundaries while obtaining better overall performance. More details can be found in the paper.\n\n<p align=\"center\">\n  <img src=\"img/arch.png\" width=\"800\"/>\n</p>\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9430751199790867,
      "result": {
        "original_header": "KiU-Net-pytorch <a href=\"https://paperswithcode.com/sota/liver-segmentation-on-lits2017?p=kiu-net-overcomplete-convolutional\"><img alt=\"PWC\" src=\"https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/kiu-net-overcomplete-convolutional/liver-segmentation-on-lits2017\" /></a>",
        "type": "Text_excerpt",
        "value": "\nOfficial Pytorch Code for the paper [\"KiU-Net: Towards Accurate Segmentation of Biomedical Images using Over-complete Representations\"](https://arxiv.org/abs/2006.04878) , presented at MICCAI 2020 and its \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9784663565048927,
      "result": {
        "original_header": "About this repo:",
        "type": "Text_excerpt",
        "value": "It also has dataloaders organized for generic 2D image segmentation and 3D volumetric segmentation for BraTS, LiTS dataset; for easy benchmarking of medical image and volumetric segmentation algorithms. \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.904079732971292,
      "result": {
        "original_header": "Using the Code for BraTS Dataset",
        "type": "Text_excerpt",
        "value": "Check out [readme](https://github.com/jeya-maria-jose/KiU-Net-pytorch/tree/master/BRATS) in \"BRATS/\" folder for details on training KiU-Net 3D for BraTS dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.904079732971292,
      "result": {
        "original_header": "Using the Code for LiTS Dataset",
        "type": "Text_excerpt",
        "value": "Check out [readme](https://github.com/jeya-maria-jose/KiU-Net-pytorch/tree/master/LiTS) in \"LiTS/\" folder for details on training KiU-Net 3D for LiTS dataset.\n  \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Links for downloading the public Datasets:",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "1) GLAS Dataset - <a href=\"https://warwick.ac.uk/fac/sci/dcs/research/tia/glascontest/\"> Link (Original) </a> | <a href = \"https://drive.google.com/drive/folders/1dwhjqE0vC0KL_siGUeqMUq08KyO1bPKH?usp=sharing\"> Link (Resized) </a> \n2) RITE Dataset - <a href=\"https://medicine.uiowa.edu/eye/rite-dataset\"> Link (Original)</a> | <a href = \"https://drive.google.com/drive/folders/1WTPRJk8Q-Bx-uqMyfoL9JHi7vKotwgL8?usp=sharing\"> Link (Resized) </a> \n3) BraTS Dataset - <a href=\"https://www.med.upenn.edu/cbica/brats2020/data.html\"> Link </a>  \n4) LiTS Dataset - <a href=\"https://competitions.codalab.org/competitions/17094\"> Link </a>  \n5) Unfortunately, Brain Anatomy US dataset introduced in the paper cannot be made public because of pending IRB approval.\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jeya-maria-jose/KiU-Net-pytorch/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 80
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jeya-maria-jose/KiU-Net-pytorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KiU-Net-pytorch "
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/img/arch.png"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset Preparation",
        "parent_header": [
          "Using the Code for your dataset"
        ],
        "type": "Text_excerpt",
        "value": "Prepare the dataset in the following format for easy use of the code. The train and test folders should contain two subfolders each: img and label. Make sure the images their corresponding segmentation masks are placed under these folders and have the same name for easy correspondance. Please change the data loaders to your need if you prefer not preparing the dataset in this format.\n\n\n\n```bash\nTrain Folder-----\n      img----\n          0001.png\n          0002.png\n          .......\n      label---\n          0001.png\n          0002.png\n          .......\nValidation Folder-----\n      img----\n          0001.png\n          0002.png\n          .......\n      label---\n          0001.png\n          0002.png\n          .......\nTest Folder-----\n      img----\n          0001.png\n          0002.png\n          .......\n      label---\n          0001.png\n          0002.png\n          .......\n\n```\n\n\n- This code is written for binary segmentation of an grayscale image. For using RGB images, just change the number of channels in the first and last layers in kiunet class found in <code> arch/ae.py </code>. For using KiU-Net for segmentation of more than one class, change the number of channels in the softmax layer in kiunet class found in <code> arch/ae.py </code>. The code is written for images of dimenstions 128x128. Either resize your images to the exact dimension for using the code directly or make changes in the ratios in interpolation functions accordingly in case of using dimensions which are not powers of 2. \n\n- The ground truth images should have pixels corresponding to the labels. Example: In case of binary segmentation, the pixels in the GT should be 0 or 1.\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9093268898879292,
      "result": {
        "original_header": "About this repo:",
        "type": "Text_excerpt",
        "value": "This repo hosts the code for the following networks: \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999789537,
      "result": {
        "original_header": "Using the Code for your dataset",
        "type": "Text_excerpt",
        "value": "- Clone this repository:\n```bash\ngit clone https://github.com/jeya-maria-jose/KiU-Net-pytorch\ncd KiU-Net-pytorch\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997209519762494,
      "result": {
        "original_header": "Training Command:",
        "type": "Text_excerpt",
        "value": "```bash \npython train.py --train_dataset \"enter train directory\" --val_dataset \"enter validation directory\" --direc 'path for results to be saved' --batch_size 1 --epoch 400 --save_freq 10 --modelname \"kiunet\" --learning_rate 0.0001\n```\n```bash\nChange modelname to kiunet3d, reskiunet or densekiunet to train those architectures\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997085683093093,
      "result": {
        "original_header": "Testing Command:",
        "type": "Text_excerpt",
        "value": "```bash \npython test.py --loaddirec \"./saved_model_path/model_name.pth\" --val_dataset \"test dataset directory\" --direc 'path for results to be saved' --batch_size 1 --modelname \"kiunet\"\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.935023677956872,
      "result": {
        "original_header": "Training Command:",
        "type": "Text_excerpt",
        "value": "```bash \npython train.py --train_dataset \"enter train directory\" --val_dataset \"enter validation directory\" --direc 'path for results to be saved' --batch_size 1 --epoch 400 --save_freq 10 --modelname \"kiunet\" --learning_rate 0.0001\n```\n```bash\nChange modelname to kiunet3d, reskiunet or densekiunet to train those architectures\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9675623690319062,
      "result": {
        "original_header": "Testing Command:",
        "type": "Text_excerpt",
        "value": "```bash \npython test.py --loaddirec \"./saved_model_path/model_name.pth\" --val_dataset \"test dataset directory\" --direc 'path for results to be saved' --batch_size 1 --modelname \"kiunet\"\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "brats, deep-learning, deep-neural-networks, kiunet, lits-challenge, medical-image-segmentation, medical-imaging, pytorch, segmentation, semantic-segmentation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Jeya Maria Jose\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KiU-Net-pytorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jeya-maria-jose"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 229647,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 2115,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2010.01663.pdf"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2006.04878"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2010.01663.pdf\"> Paper (Journal Extension"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2006.04878\"> Paper (Conference"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jeya-maria-jose",
          "type": "User"
        },
        "date_created": "2020-06-22T16:52:25Z",
        "date_published": "2020-06-24T05:40:42Z",
        "html_url": "https://github.com/jeya-maria-jose/KiU-Net-pytorch/releases/tag/v1.0",
        "name": "v1.0",
        "release_id": 27857833,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/releases/27857833",
        "value": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/releases/27857833",
        "zipball_url": "https://api.github.com/repos/jeya-maria-jose/KiU-Net-pytorch/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites:",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "- Python 3.6\n- Pytorch 1.4\n\n<a href=\"https://pytorch.org/ \"> Pytorch Installation </a>  \n\n"
      },
      "source": "https://raw.githubusercontent.com/jeya-maria-jose/KiU-Net-pytorch/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:50:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 357
      },
      "technique": "GitHub_API"
    }
  ]
}