{
  "application_domain": [
    {
      "confidence": 0.9208504583821565,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TakahiroYamada/SBMLWebApp"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing Guide\n\nYou will need:\n\n- Node.js/io.js & npm\n- Bower\n- Gulp\n\n\n## Getting started\n\n1. Fork the project\n2. Clone your forked project by running `git clone git@github.com:{\n   YOUR_USERNAME }/tether.git`\n3. Run `npm install` to install both node modules and bower components\n4. Test that you can build the source by moving/renaming the existing `dist`\n   directory and running `npm run build`\n5. Assuming everything went well, you should now have a `dist` directory that\n   matches the one you moved in step 4\n\n\n## Writing code!\n\nWe use `gulp` to facilitate things like transpilation, minification, etc. so\ncan you focus on writing relevant code. If there is a fix or feature you would like\nto contribute, we ask that you take the following steps:\n\n1. Most of the _editable_ code lives in the `src` directory while built code\n   will end up in the `dist` directory upon running `npm run build`.\n\n2. Depending on how big your changes are, bump the version numbers appropriately\n   in `bower.json` and `package.json`. We try to follow semver, so a good rule\n   of thumb for how to bump the version is:\n   - A fix to existing code, perform a patch bump e.g. x.x.0 -> x.x.1\n   - New feature, perform a minor bump e.g. x.0.x -> x.1.x\n   - Breaking changes such a rewrite, perform a major bump e.g.\n     1.x.x -> 2.x.x\n\n   Versioning is hard, so just use good judgement and we'll be more than happy\n   to help out.\n\n   __NOTE__: There is a `gulp` task that will automate some of the versioning.\n   You can run `gulp version:{type}` where type is `patch|minor|major` to\n   update both `bower.json` and `package.json` as well as add the appropriate\n   git tag.\n\n3. Provide a thoughtful commit message and push your changes to your fork using\n   `git push origin master` (assuming your forked project is using `origin` for\n   the remote name and you are on the `master` branch).\n\n4. Open a Pull Request on GitHub with a description of your changes.\n\n\n## Testing\n\nWork in progress. We are hoping to add some tests, so if you would like to help\nus get started, feel free to contact us through the Issues or open a Pull\nRequest.\n\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/WebContent/tether-master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-09T02:51:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-01T08:35:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "SBMLWebApp",
          "Overview"
        ],
        "type": "Text_excerpt",
        "value": "In systems biology, it is very important to standardize the model for a given biological phenomenon\nand analyze the system based on this model. Such a model is most of the time based on ordinary differential equation (ODE).\n\nSuch a systems biology  model is normally described in a standard format, with [Systems Biology Markup Language (SBML)](http://sbml.org)\nbeing the de-facto standard in the field. Several software tools exist to create SBML models easily.\nRegarding the analysis of such models, which is mainly via simulation, steady state analysis, or parameter estimation.\n\n* `Time course simulation` provides the information of each species in the model over time which enables us to\nunderstand the dynamical variation of species in model.\n\n* `Steady state analysis` can give us the values of model objects after enough time has passed and a steady state is reached.\n\n* `Parameter estimation` focuses on the identification of unknown parameters\nin the model based on experimental data.\n\nTime course simulation, steady state simulation and parameter estimation are implemented in multiple\nlibraries and tools for SBML, e.g. COPASI, libroadrunner, or the Simulation Core Library. However, establishing the environment for such analysis\nis often difficult for biologists and a major obstacle to analyze ODE models easily."
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9455122454672343,
      "result": {
        "original_header": "Project goals",
        "type": "Text_excerpt",
        "value": "![GSOC 2017](./docs/images/gsoc-icon.png)\nThis project is part of [Google Summer of Code 2017](https://summerofcode.withgoogle.com/) with the goal of\ndeveloping a Web App for SBML models which provides functionality for \n* `time course simulation`\n* `steady state analysis`\n* `parameter estimation` \nThe Web App will provide options for uploading SBML models and experimental data files and run the respective\nsimulations with the models.\n \n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9382964668408789,
      "result": {
        "original_header": "Repository Content",
        "type": "Text_excerpt",
        "value": "This repository includes the following files and directories \n* `docs/` SBML example files for analysis\n* `examples/` SBML example files for analysis\n* `lib/` Library dependencies\n* `src/` Source code for web app\n* `WebContent/` Web content for web app\n* `README.md` Overview information\n* `pom.xml` Maven pom file\n \n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TakahiroYamada/SBMLWebApp/tree/master/WebContent/tether-master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tomcat download",
        "parent_header": [
          "SBMLWebApp",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Apache tomcat is not contained in the installation, but must be installed separately. During the development\n`Apache TomCat v6.0.48` is used which is available as `apache-tomcat-6.0.48.tar.gz` from\n`https://archive.apache.org/dist/tomcat/tomcat-6/v6.0.48/bin/`\n\nAfter download the files should be unpacked in the correct position (e.g. :`/Applications/`)."
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TakahiroYamada/SBMLWebApp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TakahiroYamada/SBMLWebApp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TakahiroYamada/SBMLWebApp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SBMLWebApp"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/docker/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/docker/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/docker/SBMLWebApp/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/docker/SBMLWebApp/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/./docs/images/gsoc-icon.png"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SBMLWebApp"
        ],
        "type": "Text_excerpt",
        "value": "This project is created in Java as a Maven project. To run the web app locally one can\nrun the server from within eclipse.\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Eclipse tomcat plugin installation",
        "parent_header": [
          "SBMLWebApp",
          "Installation",
          "Eclipse"
        ],
        "type": "Text_excerpt",
        "value": "When you use Eclipse , eclipse tomcat plugin is needed. This file can be downloaded following Task.\n1. Select Help - Eclipse Marketplace\n1. Type \"tomcat\" in find text box\n1. Install \"Eclipse Tomcat Plugin 9.1.2\"\n\nThen you start-up eclipse. When you can see the icon of tomcat in Eclipse , the install is accomplished.\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tomcat installation in Eclipse",
        "parent_header": [
          "SBMLWebApp",
          "Installation",
          "Eclipse"
        ],
        "type": "Text_excerpt",
        "value": "After you complete installation of eclipse tomcat plugin, you should choose the `tomcat version`\nand `tomcat home` from `Environment -> Tomcat`. For version, please check version 6.x and select\nthe aforementioned distribution of `apache-tomcat-6.0.48`.\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Jetbrains idea",
        "parent_header": [
          "SBMLWebApp",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* `Run | Edit Configurations | + | Tomcat Server | Local`\n* Select tomcat: `Configure -> Select apache-tomcat-6.0.48`\n* Select artifact to deploy: `Artifact GSOC_WebMavenProject:war`\n* Add external libraries to `java.library.path` in VM options i.e.\n```\n-Djava.library.path=/path/to/SBMLWebApp/lib/COPASI-4.19.140-Java-Bindings-Darwin\n```\n\nsee also https://www.jetbrains.com/help/idea/2017.1/run-debug-configuration-tomcat-server.html\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Image",
        "parent_header": [
          "SBMLWebApp",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Docker composed container of this application has been already prepared. If you felt annoying when you use this application via our server, running composed containers and executing analysis is better for you.\n\nDocker installation : https://docs.docker.com/engine/installation/\n\nDocker-compose installation : https://docs.docker.com/compose/install/\n\nWe have confirmed that the docker image works in the following environment.\n\n  . | OS version | docker | docker-compose \n-- | -- | -- | --\nmacOS | macOS Mojave 10.14.6 x86_64 | 20.10.7 | 1.29.2\nLinux | Ubuntu 18.04.6 LTS x86_64 | 20.10.8 | 1.17.1\n\n1. for macOS\n  ```sh\n  $ cd docker\n  $ export LOCAL_HOST_IP=$(/sbin/ifconfig en0 | awk '/inet / { print $2 }') # or export LOCAL_HOST_IP=(Your Private IP Address)\n  $ docker-compose up -d\n  ```\n\n2. for Linux\n  ```sh\n  $ cd docker\n  $ export DEV_ETHER=$(/sbin/route | grep default | awk '{print $8}')\n  $ export LOCAL_HOST_IP=$(/sbin/ifconfig $DEV_ETHER | awk '/inet / { print $2 }') # or export LOCAL_HOST_IP=(Your Private IP Address)\n  $ unset DEV_ETHER\n  $ sudo LOCAL_HOST_IP=$LOCAL_HOST_IP docker-compose up -d\n  ```\n\nThen you can execute analysis using your favorite browser with the URL of `http://localhost/SBMLWebApp/`\n\nWhen you want to finish it, please type `docker-compose down`.\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building the project via Maven",
        "parent_header": [
          "SBMLWebApp",
          "Installation",
          "Docker Image"
        ],
        "type": "Text_excerpt",
        "value": "After checking out the project using `git clone` make sure the folder `WebContent/` contains required third-party applications.\nIn some cases, recursive cloning might not work properly.\n\nThe followoing steps are only necesary if you cannot find the subfolders `CytoScape`, `ScrollTrigger`, and `FileSaver.js` within the folder `WebContent/` or if they are empty, please navigate to `WebContent/` and use `git clone` for these three:\n\n1. `git clone https://github.com/terwanerik/ScrollTrigger.git`\n2. `git clone https://github.com/eligrey/FileSaver.js.git` and\n3. `git clone https://github.com/cytoscape/cytoscape.js.git`\n\nNext, please rename the folder `cytoscape.js` to `CytoScape` and make sure that the right versions are present by checking out the following specific git tags within the correspoinding sub-repositories:\n\n* FileSaver.js : v2.0.4 \u2192 move to the folder and use `git checkout tags/v2.0.4`\n* cytoscape.js : v3.2.3 \u2192 move to the folder and use `git checkout tags/v3.2.3`\n* ScrollTrigger : v0.3.6 \u2192 move to the folder and use `git checkout tags/v0.3.6`\n\nNow, you should navigate back to the project's root folder where you can run\n```\nmvn package\n```\nto build the project.\n\nThe main problems that might prevent it from succesfully compiling the project could be missing links to required dependencies.\nYour system might not find the [Systems Biology Simulation Core Library (SBSCL)](https://github.com/draeger-lab/SBSCL) version 1.5, libSBML, or libSBMLsim.\nFor the libSBML dependency, it is, on most systems, sufficient to set the environment variable `LD_LIBRARY_PATH` to the directory where libSBML is installed on your system.\nLibSBMLsim and SBSCL can be copied over to the subfolder `lib` if missing:\n* `lib/SimulationCore/dist/SimulationCoreLibrary-1.5/SimulationCoreLibrary_v1.5_slim.jar`\n* `lib/libSBMLsim/build/src/bindings/java/libsbmlsimj.jar`.\nYou can download SBSCL version 1.5 from the [corresponding project](https://github.com/draeger-lab/SBSCL/tree/v1.5.0) and name it `SimulationCoreLibrary_v1.5_slim.jar` after placing it at the specified location.\nOn many systems you may need to build libSBMLsim yourself and place it in the right folder (see the [build instructions](https://github.com/libsbmlsim/libsbmlsim)).\nBefore proceeding, you may want to run `mvn clean` before attempting another build process with `mvn package`.\n\nIf everything worked as supposed, you should now find the `war` file in the subfolder `target` of the project's root.\nThe next steps are:\n1. Distributing created `war` file under target directory to the apache tomcat `webapp` directory\n2. Running RabbitMQ with `rabbitmq-server` after the configuration written before.\n3. Running TomCat with executing `startup.sh` under `bin` directory of apache tomcat.\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9374820652307005,
      "result": {
        "original_header": "Repository Content",
        "type": "Text_excerpt",
        "value": "This repository includes the following files and directories \n* `docs/` SBML example files for analysis\n* `examples/` SBML example files for analysis\n* `lib/` Library dependencies\n* `src/` Source code for web app\n* `WebContent/` Web content for web app\n* `README.md` Overview information\n* `pom.xml` Maven pom file\n \n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999994706371049,
      "result": {
        "original_header": "Additional information",
        "type": "Text_excerpt",
        "value": "GitHub: https://github.com/TakahiroYamada/SBMLWebApp  \nBlog: http://gsoc2017developwebservice.blogspot.jp  \nPivotalTracker: https://www.pivotaltracker.com/n/projects/2020229\n \n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TakahiroYamada/SBMLWebApp/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SBMLWebApp"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TakahiroYamada"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 845208,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 337664,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 273554,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 262173,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 224594,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Sass",
        "size": 22161,
        "type": "Programming_language",
        "value": "Sass"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CoffeeScript",
        "size": 8474,
        "type": "Programming_language",
        "value": "CoffeeScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1343,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Server",
        "parent_header": [
          "SBMLWebApp",
          "Installation",
          "Eclipse"
        ],
        "type": "Text_excerpt",
        "value": "After finishing the tomcat configuration one can run the server in Eclipse via:\n\n1. Clone repository `git clone https://github.com/TakahiroYamada/SBMLWebApp.git`\n1. Select `File -> Open Projects from File System`\n1. Choose the directory of this project in `Import source`\n1. Select `Properties -> Java Build Path -> Libraries - add library - Server Runtime - Apache Tomcat v6.0`\n"
      },
      "source": "https://raw.githubusercontent.com/TakahiroYamada/SBMLWebApp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:18:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}