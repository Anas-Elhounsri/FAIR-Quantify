{
  "application_domain": [
    {
      "confidence": 32.89,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BGI-shenzhen/LDBlockShow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-24T07:44:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-18T07:08:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LDBlockShow: a fast and convenient tool for visualizing linkage disequilibrium and haplotype blocks based on VCF files"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1 Introduction",
        "parent_header": [
          "LDBlockShow"
        ],
        "type": "Text_excerpt",
        "value": "<b>LDBlockShow</b> is a fast and effective tool to generate linkage disequilibrium (LD) heatmap from VCF files. It is more time and memory saving than other current tools. LDBlockShow can generate the plots of LD heatmap and interested statistics or annotation results simultaneously. In addition, it also supports subgroup analysis.\n\nThe <i><b>[LDBlockShow article](https://doi.org/10.1093/bib/bbaa227)</b></i> has been published in <b> [briefings in bioinformatics]( https://doi.org/10.1093/bib/bbaa227)</b>, please cited this article if possible\n \nPMID: [33126247](https://pubmed.ncbi.nlm.nih.gov/33126247)   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;           DOI:[10.1093/bib/bbaa227]( https://doi.org/10.1093/bib/bbaa227)\n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9965473238676957,
      "result": {
        "original_header": "5 Advantages",
        "type": "Text_excerpt",
        "value": "To evaluate the performance of LDBlockShow, we used test VCF files to generate the LD heatmap by using LDBlockShow, Haploview[4], LDheatmap[5] and gpart. The calculated r<sup>2</sup> and D\u2019values of LDBlockShow is the same with other tools. As shown in Figure below, LDBlockShow is more time and memory saving than other tools.\n</br></br>\n![Advantages](https://github.com/hewm2008/LDBlockShow/blob/main/example/Fig/out2.png)\n</br> The above figure shows the comparison of computing cost for LDBlockShow, Ldheatmap, Haploview and gpart. CPU time (A) and memory cost (B) for different methods are shown with a fixed SNP number of 100 and sample size ranging from 2,000 to 60,000. CPU time (C) and memory cost (D) for different methods are shown with a fixed sample size of 2,000 and SNP number ranged from 100 to 1,200. When testing datasets in A-D, both LDBlockShow and gpart finished the analyses within reasonable time and memory. We further tested their performance when handling large dataset. CPU time (E) and memory cost (F) for these two methods are shown with a fixed sample size of 100,000 and SNP number ranged from 300 to 2,500. Computation is performed with one thread of an Intel Xeon CPU E5-2630 v4.\n</br></br> As shown in Table below, LDBlockShow can generate the plots of LD heatmap and interested statistics or annotation results simultaneously. In addition, LDBlockShow also supports subgroup analysis.\n</br>\n|          <b>Performance</b>              |    <b>LDBlockShow</b>   |   <b>Haploview</b>    |  <b>LDheatmap</b>     |      <b>gpart</b>     |\n|:-----------------------------------------|:-----------------------:|:---------------------:|:---------------------:|:---------------------:|\n|<i><b>Input</b></i>                       |                         |                       |                       |                       |\n|Compressed VCF file                       |            &radic;      |        &times;        |         &times;       |         &times;       |\n|Uncompressed VCF file                     |            &radic;      |        &times;        |         &times;       |         &radic;       |\n|Support subgroup analysis                 |            &radic;      |        &times;        |         &times;       |         &times;       |\n|<i><b>Output</b></i>                      |                         |                       |                       |                       |\n|Visualize additional statistics           |            &radic;      |        &times;        |         &times;       |         &times;       |\n|Visualize genomic annotation              |            &radic;      |        &times;        |         &times;       |         &radic;       |\n|Compressed SVG                            |            &radic;      |        &times;        |         &times;       |         &times;       |\n|PNG file                                  |            &radic;      |        &radic;        |         &times;       |         &radic;       |\n|Block region                              |            &radic;      |        &radic;        |         &times;       |         &radic;       |\n|LD measurement                            |     R<sup>2</sup>/D'    |   R<sup>2</sup>/D'    |   R<sup>2</sup>       |    R<sup>2</sup>/D'   |  \n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.926328712331452,
      "result": {
        "original_header": "################swimming in the sky and flying in the sea",
        "type": "Text_excerpt",
        "value": "# LDBlockShow\n###  1 Introduction\n<b>LDBlockShow</b> is a fast and effective tool to generate linkage disequilibrium (LD) heatmap from VCF files. It is more time and memory saving than other current tools. LDBlockShow can generate the plots of LD heatmap and interested statistics or annotation results simultaneously. In addition, it also supports subgroup analysis. \n  </br> <b>2.2 Pre-install</b>\n  </br> LDblockshow is for Linux/Unix/macOS only. Before installing, please make sure the following pre-requirements are ready to use.\n  </br> 1) g++   : g++ with [--std=c++11](https://gcc.gnu.org/) > 4.8+ is recommended\n  </br> 2) zlib  : [zlib](https://zlib.net/) > 1.2.3 is recommended\n  </br> 3) Perl  : The [SVG.pm](https://metacpan.org/release/SVG) in Perl should be installed. LDBlockShow uses this module to plot figures. We have provided a built-in SVG module in the package. \n###  3 Parameter description\n------------\n</br><b>3.1 LDBlockShow</b>\n</br><b>3.1.1 Main parameter</b>\n```php\n ./bin/LDBlockShow\n\n        Usage: LDBlockShow  -InVCF  <in.vcf.gz>  -OutPut <outPrefix>  -Region  chr1:10000-20000\n\n                -InVCF          <str>     Input SNP VCF Format\n                -OutPut         <str>     OutPut File of LD Blocks\n                -Region         <str>     In One Region to show LD info svg Figure\n\n\n                -SeleVar        <int>     Select statistic for deal. 1: D' 2: R^2 3/4: Both [1]\n                -SubPop         <str>     SubGroup Sample File List[ALLsample]\n                -BlockType      <int>     method to detect Block [beta] [1]\n                                           1. Block by PLINK (Gabriel method)\n                                           2. Solid Spine of LD RR/D' 3. Blockcut with self-defined RR/D'\n                                           4. FixBlock by input blocks files 5. No Block\n\n                -InGWAS         <str>     InPut GWAS Pvalue File(chr site Pvalue)\n                -InGFF          <str>     InPut GFF3 file to show Gene CDS and name\n\n                -BlockCut       <float>   'Strong LD' cutoff and ratio for BlockType3[0.85:0.90]\n                -FixBlock       <str>      Input fixed block region\n                -MerMinSNPNum   <int>      merger color grids when SNPnumber over N[50]\n\n                -help                      Show more Parameters and help [hewm2008 v1.40]\n\n```\n</br> Details for above parameters:\n<pre>\n-InVCF          The input file in VCF format\n-OutPut         The output file directory and output file name prefix (e.g., /path/pop1)\n-Region         The defined region to show the LD heatmap (format: chr:start:end)\n \n-SeleVar        The LD measurement (1: D' 2: R^2 3/4: Both R^2 and D'), the default is 1.\n-SubPop         A sample list for subgroup analysis\n-BlockType      The definition of blocks. The default 1 is called by PLINK1 to generate the block defined by Gabriel et al.2. Solid spine of LD3 is also supported [2]. Users can also define their own cutoff of r2 and D' for blocks [3] combined with the option of \"-BlockCut\" or supply their own block region definition [4] combined with the option of \"-FixBlock\". 5 can be used as input if users prefer to not show the block region. \n-BlockCut       For block type 3, the defined cutoff for strong LD, and the ratio of strong LD SNP in one block. Default is 0.85:0.9. That's, if the user chose D' in the -SeleVar option, then in one block, the ratio of SNP pairs with' over 0.85 is 0.9.\n-FixBlock       For block type 4, users can use this option to supply a self-defined block region. The file contains three columns, including chromosome, block region start position, and block region end position.\n-MerMinSNPNum   The minimum SNP number to merge color grids with the same color. Default is 50. Details please see Fig 1 in this manual. \n</br><b>3.1.2 Other parameters</b>\nBASH2*\n</br> Details for above parameters:\n<pre>\n-InGenotype   Input file in genotype format.\n-InPlink      The prefix of input file in PLINK format.\n-MAF          Filter SNPs with low minor allele frequency (default <0.05)\n-HWE          Filter SNPs with low Exact test of Hardy-Weinberg Equilibrium Pvalue (default <0)\n-Het          Filter SNPs with high heterozygosis ratio (default >1.0)\n-Miss         Filter SNPs with high missing rate (default >0.25) \n</br><b>3.2 ShowLDSVG</b>\n</br>This program is designed for users to optimize the figure (e.g., change colors) generated by LDBlockShow.\n</br><b>3.2.1 Brief parameters</b>\nBASH3*\n<pre>\n-InPreFix     The prefix of input file (i.e., the output file of LDBlockShow)\n-OutPut       The out file (svg, png and pdf format plot files)\n-help         More parameters in detail\n</pre> \n</br><b>3.2.2 Detail parameters</b>\nBASH4*\n</br> Details for above parameters:\n<pre>\n-InGWAS         The statistics file (e.g., association statistics, but other values such as Tajima's D can also be accepted) for generate plot together with the LD plot. File formatted as: [chr position Pvalue]\n-NoLogP         By default, the P value from the -InGWAS file will be -log10 transformed, with this option, the P value will not be transformed.\n-Cutline        The significance cutline of the -InGWAS file.\n-TopSite        Users can use this option to assign one interested SNP in the GWAS plot (Default is the most significant SNP, can be changed with chr:pos).\n-PointSize      Users can use this option (any number over 0) to set the point size. \n-InGFF          The GFF file for genomic region annotation. By default, the gene name will be shown in the plot;\n-NoGeneName     Gene name will not be shown in the plot with this option.\n-SpeSNPName     With this option, users can input a file to indicate the names for interested SNPs, these names will be shown in the heatmap.\n-ShowGWASSpeSNP Users can use this option together with the file assigned by '-SpeSNPName' to show the names of interested SNPs in GWAS plot.\n-crGene         Define the colors of different genomic regions. By default, CDS, intron, UTR and intergenic regions will be shown in #e7298a, light blue, #7570b3, and #a6cee3, respectively. \n\nParameters to optimize the color of the heatmap:\n-crBegin        Color for no LD (R^2/D'=0) default: white\n-crMiddle       Color for R^2/D'=0.5, default: yellow\n-crEnd          Color for complete LD (R^2/D'=1), default: red\n-NumGradien     The number of gradients from crBegin to crEnd\n-crTagSNP       Color for the tag SNP. \n-ShowNum        Show the LD measurement value in the grids (not recommended when SNP number is over 50).\n-NoShowLDist    When the distance between SNPs over this number, their pairwise LD will not be showed in the figure. Default is 10,000,000.\n-MerMinSNPNum   When number of SNPs over the default 50, ShowLDSVG will merge adjacent same color grids. User can change this number to any integer numbers.\n-OutPng         Convert the SVG file to PNG file\n-OutPdf         Convert SVG file to Pdf file.\n-ResizeH        Set the height of the image (default 4096), which can be used to adjust the resolution for PNG file. The width will be adjusted automatically.\n</pre> \n</br><b>Note:</b> When SNP number is large (e.g., over 100), the output SVG file might be very large. ShowLDSVG will merge adjacent same color grids. With smaller number of gradients (set by -NumGradien), the figure will be compressed to be smaller. -MerMinSNPNum is used to set the minimum number of SNPs, that's, if there is more SNPs than this number (default 50), the output SVG will be compressed. \n<pre>\n#../../bin/LDBlockShow   -InVCF Test.vcf.gz   -OutPut  out   -Region  chr11:24100000:24200000  -OutPng -SeleVar 1\n../../bin/LDBlockShow   -InVCF Test.vcf.gz   -OutPut  out   -Region  chr11:24100000:24200000  -OutPng -SeleVar 2\n# [-SeleVar 1] is D',[-SeleVar 2] is RR ,[-SeleVar 3] are RR and D',[-SeleVar 4] are D' and RR # the default is D'\n</pre> \n\n###  5 Advantages\nTo evaluate the performance of LDBlockShow, we used test VCF files to generate the LD heatmap by using LDBlockShow, Haploview[4], LDheatmap[5] and gpart. The calculated r<sup>2</sup> and D\u2019values of LDBlockShow is the same with other tools. As shown in Figure below, LDBlockShow is more time and memory saving than other tools.\n</br></br>\n![Advantages](https://github.com/hewm2008/LDBlockShow/blob/main/example/Fig/out2.png)\n</br> The above figure shows the comparison of computing cost for LDBlockShow, Ldheatmap, Haploview and gpart. CPU time (A) and memory cost (B) for different methods are shown with a fixed SNP number of 100 and sample size ranging from 2,000 to 60,000. CPU time (C) and memory cost (D) for different methods are shown with a fixed sample size of 2,000 and SNP number ranged from 100 to 1,200. When testing datasets in A-D, both LDBlockShow and gpart finished the analyses within reasonable time and memory. We further tested their performance when handling large dataset. CPU time (E) and memory cost (F) for these two methods are shown with a fixed sample size of 100,000 and SNP number ranged from 300 to 2,500. Computation is performed with one thread of an Intel Xeon CPU E5-2630 v4.\n</br></br> As shown in Table below, LDBlockShow can generate the plots of LD heatmap and interested statistics or annotation results simultaneously. In addition, LDBlockShow also supports subgroup analysis.\n</br>\n|          <b>Performance</b>              |    <b>LDBlockShow</b>   |   <b>Haploview</b>    |  <b>LDheatmap</b>     |      <b>gpart</b>     |\n|:-----------------------------------------|:-----------------------:|:---------------------:|:---------------------:|:---------------------:|\n|<i><b>Input</b></i>                       |                         |                       |                       |                       |\n|Compressed VCF file                       |            &radic;      |        &times;        |         &times;       |         &times;       |\n|Uncompressed VCF file                     |            &radic;      |        &times;        |         &times;       |         &radic;       |\n|Support subgroup analysis                 |            &radic;      |        &times;        |         &times;       |         &times;       |\n|<i><b>Output</b></i>                      |                         |                       |                       |                       |\n|Visualize additional statistics           |            &radic;      |        &times;        |         &times;       |         &times;       |\n|Visualize genomic annotation              |            &radic;      |        &times;        |         &times;       |         &radic;       |\n|Compressed SVG                            |            &radic;      |        &times;        |         &times;       |         &times;       |\n|PNG file                                  |            &radic;      |        &radic;        |         &times;       |         &radic;       |\n|Block region                              |            &radic;      |        &radic;        |         &times;       |         &radic;       |\n|LD measurement                            |     R<sup>2</sup>/D'    |   R<sup>2</sup>/D'    |   R<sup>2</sup>       |    R<sup>2</sup>/D'   |  \n######################swimming in the sky and flying in the sea ############################# \n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BGI-shenzhen/LDBlockShow/tree/master/bin/svg_kit/batik-1.7/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BGI-shenzhen/LDBlockShow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BGI-shenzhen/LDBlockShow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LDBlockShow"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/src/make.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/src/LinuxStatic.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/example/Example4/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/example/Example3/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/example/Example2/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/example/Example1/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/bin/svg_kit/batik-1.7/lib/make-squiggle-app.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Example1/out.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Example2/out.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Example3/out.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Example4/out.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Fig/out2.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hewm2008/LDBlockShow/main/example/Fig/out1.png"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9674692653539371,
      "result": {
        "original_header": "################swimming in the sky and flying in the sea",
        "type": "Text_excerpt",
        "value": "###  2 Download and Install\n------------\nThe <b>new version</b> will be updated and maintained in <b>[hewm2008/LDBlockShow](https://github.com/hewm2008/LDBlockShow)</b>, please click below website to download the latest version\n</br><p align=\"center\"><b>[hewm2008/LDBlockShow](https://github.com/hewm2008/LDBlockShow)</b></p> \n<b> 2.1. linux/MaxOS&nbsp;&nbsp;&nbsp;   [Download](https://github.com/hewm2008/LDBlockShow/archive/v1.40.tar.gz)</b> \n  </br> <b>2.2 Pre-install</b>\n  </br> LDblockshow is for Linux/Unix/macOS only. Before installing, please make sure the following pre-requirements are ready to use.\n  </br> 1) g++   : g++ with [--std=c++11](https://gcc.gnu.org/) > 4.8+ is recommended\n  </br> 2) zlib  : [zlib](https://zlib.net/) > 1.2.3 is recommended\n  </br> 3) Perl  : The [SVG.pm](https://metacpan.org/release/SVG) in Perl should be installed. LDBlockShow uses this module to plot figures. We have provided a built-in SVG module in the package. \n\n</br> <b>2.3 Install</b>\n</br> Users can install it with the following options:\n</br> Option 1: \n<pre>\n        git clone https://github.com/hewm2008/LDBlockShow.git\n        cd LDBlockShow ; chmod 755 configure  ;  ./configure;\n        make;\n        mv LDBlockShow  bin/;    #     [rm *.o]\n</pre> \n</br>**Note:** If failed to link,try to <b>re-install</b> the libraries [**_zlib_**](https://zlib.net/) \n</br>Option 2:\n<pre>\n        tar -zxvf  LDBlockShowXXX.tar.gz\n        cd LDBlockShowXXX;  cd src;\n        sh  make.sh                         ## Linux :  [ make ; make clean ]\n        ../bin/LDBlockShow\n</pre>\n**Note:** For <b>macOS</b>, if plink doesn't work, please re-download [**mac _plinks_**](https://www.cog-genomics.org/plink2/) and put it into the directory [LDBlockShowXXX/bin]\n</br>**Note:** If failed to link,try to <b>re-install</b> the libraries [**_zlib_**](https://zlib.net/) \n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8359189117573562,
      "result": {
        "original_header": "################swimming in the sky and flying in the sea",
        "type": "Text_excerpt",
        "value": "</br><b>3.3 Output files</b>\n<pre>\nout.site.gz: Remained SNPs after filtering [chr site]\nout.blocks.gz: Block file [chr start end block_length SNP_number SNPs]\nout.TriangleV.gz: Region Pairwise R^2/D'\nout.svg: Output plot in SVG format\nout.png: Output plot in png format\nout.pdf: Output plot in pdf format\n</pre> \n\n###  4 Example\n------------ \n\n* Example 1)  show Figure with Defaut LD Blocks \n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gwas, ld, ld-block, ld-heatmap, linkage-disequilibria"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 BGI-shenzhen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LDBlockShow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BGI-shenzhen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1139728,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 922503,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 125446,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 84592,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 43953,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 27616,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 17630,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 7877,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 5333,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1163,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BGI-shenzhen/LDBlockShow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hewm2008",
          "type": "User"
        },
        "date_created": "2023-07-07T03:06:40Z",
        "date_published": "2023-07-07T03:07:49Z",
        "description": "This release [hewm2008/LDBlockShow-1.40.tar.gz](https://github.com/hewm2008/LDBlockShow/archive/v1.40.tar.gz) is  <b>stable and fast</b>. \r\nA  can deal with  >1w sites .   \r\nB  and also can take D' as a statistic to replace r<sup>2</sup>\r\nC  Three color gradient\r\nD new plot algorithm reduces output file saving\r\nE  can take plinks to cal the block.\r\nF  can read plinks format [-InPlink]    :    InPut Plink [bed+bim+fam] or [ped+map] file prefix  \r\nG If there is an SVG package in the system, use the system directly, if not, load the built-in program\r\nH  More low RAD mem.\r\nJ Can show the names of interested SNPs by input files\r\nK heatmap+Annotation+GWAS similar to LocusZoom\r\nL :fix a bug in the 1.36 \r\nM: modify the default value of  Filter Para [<b>-Het</b>] to :1.0 ,and creat a new Filter parameter <b>-HWE</b> 0  [Hardy-Weinberg Equilibrium]\r\n</br>\r\nif any bug and suggest  please  contact hewm2008\r\n</br>\r\n <b>Linux/MaxOS</b>   Download&nbsp;&nbsp;&nbsp; [LDBlockShow-1.40.tar.gz](https://github.com/hewm2008/LDBlockShow/archive/v1.40.tar.gz)",
        "html_url": "https://github.com/BGI-shenzhen/LDBlockShow/releases/tag/v1.40",
        "name": "LDBlockShow-1.40",
        "release_id": 111356770,
        "tag": "v1.40",
        "tarball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/tarball/v1.40",
        "type": "Release",
        "url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/111356770",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/111356770",
        "zipball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/zipball/v1.40"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hewm2008",
          "type": "User"
        },
        "date_created": "2021-04-25T02:37:00Z",
        "date_published": "2021-04-26T01:10:10Z",
        "description": "This release [LDBlockShow-1.39.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.39.tar.gz) is  <b>stable and fast</b>. \r\nA  can deal with  >1w sites .   \r\nB  and also can take D' as a statistic to replace r<sup>2</sup>\r\nC  Three color gradient\r\nD new plot algorithm reduces output file saving\r\nE  can take plinks to cal the block.\r\nF  can read plinks format [-InPlink]    :    InPut Plink [bed+bim+fam] or [ped+map] file prefix  \r\nG If there is an SVG package in the system, use the system directly, if not, load the built-in program\r\nH  More low RAD mem.\r\nJ Can show the names of interested SNPs by input files\r\nK heatmap+Annotation+GWAS similar to LocusZoom\r\nL :fix a bug in the 1.36 \r\n</br>\r\nif any bug and suggest  please  contact hewm2008\r\n</br>\r\n <b>Linux/MaxOS</b>   Download&nbsp;&nbsp;&nbsp; [LDBlockShow-1.39.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.39.tar.gz)\r\n ",
        "html_url": "https://github.com/BGI-shenzhen/LDBlockShow/releases/tag/v1.39",
        "name": "LDBlockShow-1.39",
        "release_id": 41978556,
        "tag": "v1.39",
        "tarball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/tarball/v1.39",
        "type": "Release",
        "url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/41978556",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/41978556",
        "zipball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/zipball/v1.39"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hewm2008",
          "type": "User"
        },
        "date_created": "2021-02-08T03:10:15Z",
        "date_published": "2021-02-08T03:12:06Z",
        "description": "This release [LDBlockShow-1.36.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.36.tar.gz) is  <b>stable and fast</b>. \r\nA  can deal with  >1w sites .   \r\nB  and also can take D' as a statistic to replace r<sup>2</sup>\r\nC  Three color gradient\r\nD new plot algorithm reduces output file saving\r\nE  can take plinks to cal the block.\r\nF  can read plinks format [-InPlink]    :    InPut Plink [bed+bim+fam] or [ped+map] file prefix  \r\nG If there is an SVG package in the system, use the system directly, if not, load the built-in program\r\nH  More low RAD mem.\r\nJ Can show the names of interested SNPs by input files\r\nK heatmap+Annotation+GWAS similar to LocusZoom\r\n</br>\r\nif any bug and suggest  please  contact hewm2008\r\n</br>\r\n <b>Linux/MaxOS</b>   Download&nbsp;&nbsp;&nbsp; [LDBlockShow-1.36.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.36.tar.gz)\r\n ",
        "html_url": "https://github.com/BGI-shenzhen/LDBlockShow/releases/tag/v1.36",
        "name": "LDBlockShow-1.36",
        "release_id": 37718703,
        "tag": "v1.36",
        "tarball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/tarball/v1.36",
        "type": "Release",
        "url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/37718703",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/37718703",
        "zipball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/zipball/v1.36"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hewm2008",
          "type": "User"
        },
        "date_created": "2020-08-07T03:01:05Z",
        "date_published": "2020-08-07T03:02:22Z",
        "description": "This release [LDBlockShow-1.32.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.32.tar.gz) is  <b>stable and fast</b>. \r\nA  can deal with  >1w sites .   \r\nB  and also can take D' as a statistic to replace r<sup>2</sup>\r\nC  Three color gradient\r\nD new plot algorithm reduces output file saving\r\nE  can take plinks to cal the block.\r\nF  can read plinks format [-InPlink]    :    InPut Plink [bed+bim+fam] or [ped+map] file prefix  \r\nG If there is an SVG package in the system, use the system directly, if not, load the built-in program\r\nH  More low RAD mem.\r\n</br>\r\nif any bug and suggest  please  contact hewm2008\r\n</br>\r\n <b>Linux/MaxOS</b>   Download&nbsp;&nbsp;&nbsp; [LDBlockShow-1.32.tar.gz](https://github.com/BGI-shenzhen/LDBlockShow/archive/v1.32.tar.gz)\r\n ",
        "html_url": "https://github.com/BGI-shenzhen/LDBlockShow/releases/tag/v1.32",
        "name": "LDBlockShow-1.32",
        "release_id": 29433687,
        "tag": "v1.32",
        "tarball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/tarball/v1.32",
        "type": "Release",
        "url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/29433687",
        "value": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/releases/29433687",
        "zipball_url": "https://api.github.com/repos/BGI-shenzhen/LDBlockShow/zipball/v1.32"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:59:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 136
      },
      "technique": "GitHub_API"
    }
  ]
}