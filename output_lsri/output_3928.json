{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "ccbmlib 1.0 - Conditional Correlated Bernoulli Models for Tanimoto Coefficient Distributions"
        ],
        "type": "Text_excerpt",
        "value": "For the theoretical background see the following references;\n- Vogt M & Bajorath J.\n  Introduction of the Conditional Correlated Bernoulli Model of similarity value distributions and its application\n  to the prospective prediction of fingerprint search performance.\n  J Chem Inf Model 51, 2496-2506, 2011. https://dx.doi.org/10.1021/ci2003472\n- Vogt M & Bajorath J.\n  Modeling Tanimoto similarity value distributions and predicting search results.\n  Mol Inf 36, 1600131, 2017.  https://doi.org/10.1002/minf.201600131\n- Vogt M & Bajorath J.\n  ccbmlib \u2013 a Python package for modeling Tanimoto similarity value distributions.\n  F1000Research 9(Chem Inf Sci), e100, 2020. https://doi.org/10.12688/f1000research.22292.1\n  \n  \n\n"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vogt-m/ccbmlib"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-31T13:55:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-21T21:49:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Modeling Tanimoto distributions for RDKit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9472342090877081,
      "result": {
        "original_header": "Synopsis",
        "type": "Text_excerpt",
        "value": "A package to model Tc value distributions for different fingerprints in RDKit.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9900239454214126,
      "result": {
        "original_header": "Jupyter notebook",
        "type": "Text_excerpt",
        "value": "The accompanying Jupyter notebook contains code\n- for generating statistics data for ChEMBL compounds and\n- for generating figures for quality assessment of the distribution models.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vogt-m/ccbmlib/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/ccbm_model_quality.ipynb"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/ccbm_model_quality.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vogt-m/ccbmlib/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vogt-m/ccbmlib"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install",
        "parent_header": [
          "ccbmlib 1.0 - Conditional Correlated Bernoulli Models for Tanimoto Coefficient Distributions"
        ],
        "type": "Text_excerpt",
        "value": "The package is designed to be installed as a Python package using the ``setup.py`` script.\n"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vogt-m/ccbmlib/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ccbmlib"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "vogt-m"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 38867,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 18541,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vogt-m",
          "type": "User"
        },
        "date_created": "2020-02-28T18:57:25Z",
        "date_published": "2020-02-28T18:59:26Z",
        "description": "Updated release containing some effciency improvements.\r\nsee also:\r\n Vogt M and Bajorath J. ccbmlib \u2013 a Python package for modeling Tanimoto similarity value distributions. F1000Research 2020, 9(Chem Inf Sci):100 (https://doi.org/10.12688/f1000research.22292.1) ",
        "html_url": "https://github.com/vogt-m/ccbmlib/releases/tag/1.1",
        "release_id": 24085623,
        "tag": "1.1",
        "tarball_url": "https://api.github.com/repos/vogt-m/ccbmlib/tarball/1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vogt-m/ccbmlib/releases/24085623",
        "value": "https://api.github.com/repos/vogt-m/ccbmlib/releases/24085623",
        "zipball_url": "https://api.github.com/repos/vogt-m/ccbmlib/zipball/1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vogt-m",
          "type": "User"
        },
        "date_created": "2020-02-03T20:42:37Z",
        "date_published": "2020-02-03T20:44:36Z",
        "description": "This release is associated with the publication \"ccbmlib \u2013 a Python Package for Modeling Tanimoto Similarity Value Distributions\" by Vogt M and Bajorath J on https://f1000research.com/cis",
        "html_url": "https://github.com/vogt-m/ccbmlib/releases/tag/v1.0",
        "name": "Initial release",
        "release_id": 23352896,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/vogt-m/ccbmlib/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/vogt-m/ccbmlib/releases/23352896",
        "value": "https://api.github.com/repos/vogt-m/ccbmlib/releases/23352896",
        "zipball_url": "https://api.github.com/repos/vogt-m/ccbmlib/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "ccbmlib 1.0 - Conditional Correlated Bernoulli Models for Tanimoto Coefficient Distributions"
        ],
        "type": "Text_excerpt",
        "value": "The package was built and tested using Python 3.7 and RDKit (2019.03.4).\nRDkit has to be installed. It is available from https://rdkit.org.\nApart from that only the popular extensions numpy and scipy are required.\n"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:37:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ccbmlib 1.0 - Conditional Correlated Bernoulli Models for Tanimoto Coefficient Distributions"
        ],
        "type": "Text_excerpt",
        "value": "Import the module ``models``:\n```Python\nimport ccbmlib.models as ccbm\n```\nSet the data directory for storing fingerprints and fingerprint statistics:\n```Python\nccbm.set_data_folder(\"data\")\n```\nThis folder will hold the relevant data for building the distribution models and serve as a permanent \nstorage space for the fingerprint and statistics files to avoid expensive recalculations.\n\nFingerprints and statistics are calculated on demand when the corresponding methods are called:\n```Python\nstats_morgan = ccbm.get_feature_statistics(\"chembl25_sample\", \"morgan\", {\"radius\":2}, \"chembl25_sample.smi\")\nstats_maccs = ccbm.get_feature_statistics(\"chembl25_sample\", \"maccs\", {}, \"chembl25_sample.smi\")\n```\nThe first parameter is a name identifying the data set. This name is used to store the fingerprint and statistics\ninformation  in the data folder. The second and third parameters define the fingerprint and the (optional) fingerprint\nparameters. The final parameter is a filename for the file containing the molecules in Smiles format.\nThe function returns a ``PairwiseStats`` object from which the distribution models cn be obtained.\nOnce the statistics have been saved in the data folders, subsequent calls do not need to supply the Smiles file as\nthe statistics will be retrieved from the data folder\n```Python\nstats_morgan = ccbm.get_feature_statistics(\"chembl25_sample\", \"morgan\", {\"radius\":2})\nstats_maccs = ccbm.get_feature_statistics(\"chembl25_sample\", \"maccs\")\n```\n\nThe module also contains methods for calculating fingerprints and Tanimoto coefficients, although the will not be as\nefficient as using the appropriate RDKit method directly. The following fingerprints are available:\n\n| Name | Method |\n| ---- | ------ |\n| atom_pairs | ``atom_pairs`` |\n| hashed_atom_pairs | ``hashed_atom_pairs`` |\n| avalon | ``avalon``|\n| maccs | ``maccs_keys`` |\n| morgan | ``morgan`` |\n| hashed_morgan | ``hashed_morgan`` |\n| rdkit | ``rdkit_fingerprint`` |\n| torsions | ``torsions`` |\n| hashed_torsions | ``hashed_torsions`` |\n\nThese methods return fingerprints as lists of features and can be used with the ``tc`` method to calculate the Tanimoto\ncoefficient. The distribution models are obtained from the stats objects using the``get_tc_distribution`` methods.\nThe method takes a fingerprint as an optional parameter to obtain the conditional models.\n\n```Python\nimport rdkit.Chem as Chem\nmol1 = Chem.MolFromSmiles(\"CCN(CC)n1c(=O)c(-c2cn[nH]c2)cc2c(C)nc(N)nc21\")\nmol2 = Chem.MolFromSmiles(\"FC(F)(F)c1cc(Br)ncc1-c1nc(N2CCOCC2)nc(N2CCOCC2)n1\")\n\nmaccs1 = ccbm.maccs_keys(mol1)\nmaccs2 = ccbm.maccs_keys(mol2)\nmaccs_tc = ccbm.tc(maccs1,maccs2)\nmorgan1 = ccbm.morgan(mol1,radius=2)\nmorgan2 = ccbm.morgan(mol2,radius=2)\nmorgan_tc = ccbm.tc(maccs1,maccs2)\nprint(\"MACCS Tc:\",maccs_tc)\nmaccs_dist = stats_maccs.get_tc_distribution()\nprint(\"Significance of MACCS Tc:\",maccs_dist.cdf(maccs_tc))\nprint(\"Morgan Tc:\",maccs_tc)\nmorgan_dist = stats_morgan.get_tc_distribution()\nprint(\"Significance of Morgan Tc:\",morgan_dist.cdf(morgan_tc))\nprint(\"Significance of the conditional models:\")\nmaccs_cnd = stats_maccs.get_tc_distribution(maccs1)\nmorgan_cnd = stats_morgan.get_tc_distribution(morgan1)\nprint(\"Conditional significance of MACCS Tc:\",maccs_cnd.cdf(maccs_tc))\nprint(\"Conditional significance of Morgan Tc:\",morgan_cnd.cdf(maccs_tc))\n```\n\n```\nMACCS Tc: 0.5494505494505495\nSignificance of MACCS Tc: 0.8664363371864638\nMorgan Tc: 0.5494505494505495\nSignificance of Morgan Tc: 0.9999997267443234\nSignificance of the conditional models:\nConditional significance of MACCS Tc: 0.7112894732958288\nConditional significance of Morgan Tc: 0.9999999992015902\n```\n\nUsing matplotlib the different distributions can be plotted\n\n```Python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx_range =  np.arange(0,1.0001,0.01)\np = [maccs_dist.pdf(x) for x in x_range]\nc = [maccs_dist.cdf(x) for x in x_range]\nplt.plot(x_range,p,'b:')\nplt.plot(x_range,c,'b')\n\np = [maccs_cnd.pdf(x) for x in x_range]\nc = [maccs_cnd.cdf(x) for x in x_range]\nplt.plot(x_range,p,'b:')\nplt.plot(x_range,c,'b')\nplt.show()\n```"
      },
      "source": "https://raw.githubusercontent.com/vogt-m/ccbmlib/master/README.md",
      "technique": "header_analysis"
    }
  ]
}