{
  "application_domain": [
    {
      "confidence": 20.46,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing `pyani`",
        "parent_header": [
          "`pyani`"
        ],
        "type": "Text_excerpt",
        "value": "A complete guide to citing `pyani` is included in the file [`CITATIONS`](CITATIONS). Please cite the following manuscript in your work, if you have found `pyani` useful:\n\n> Pritchard *et al.* (2016) \"Genomics and taxonomy in diagnostics for food security: soft-rotting enterobacterial plant pathogens\" *Anal. Methods* **8**, 12-24\nDOI: [10.1039/C5AY02550H](https://doi.org/10.1039/C5AY02550H)\n\n-----\n\n![macOS Python 3.11 build](https://github.com/widdowquinn/pyani/actions/workflows/build-macos.yml/badge.svg)\n![Linux Python 3.11 build](https://github.com/widdowquinn/pyani/actions/workflows/build-linux.yml/badge.svg)\n[![codecov.io coverage](https://img.shields.io/codecov/c/github/widdowquinn/pyani/master.svg)](https://codecov.io/github/widdowquinn/pyani)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/f3e56b2bf118471aabf09514a3e6af75)](https://www.codacy.com/manual/widdowquinn/pyani?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=widdowquinn/pyani&amp;utm_campaign=Badge_Grade)\n[![CodeFactor](https://www.codefactor.io/repository/github/widdowquinn/pyani/badge)](https://www.codefactor.io/repository/github/widdowquinn/pyani)\n[![documentation](https://readthedocs.org/projects/pyani/badge/?version=latest)](https://pyani.readthedocs.io/en/latest/?badge=latest)\n[![pyani sourcerank](https://img.shields.io/librariesio/sourcerank/pypi/pyani.svg?logo=koding&logoColor=white)](https://libraries.io/pypi/pyani)\n\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-22-orange.svg?style=flat-square)](#contributors-)\n\n\n[![pyani PyPi version](https://img.shields.io/pypi/v/pyani \"PyPI version\")](https://pypi.python.org/pypi/pyani)\n[![pyani licence](https://img.shields.io/pypi/l/pyani \"PyPI licence\")](https://github.com/widdowquinn/pyani/blob/master/LICENSE)\n[![pyani PyPi version](https://img.shields.io/pypi/format/pyani \"PyPI format\")](https://pypi.python.org/pypi/pyani)\n[![pyani PyPi version](https://img.shields.io/pypi/pyversions/pyani \"Python versions\")](https://pypi.python.org/pypi/pyani)\n[![pyani PyPi version](https://img.shields.io/pypi/dm/pyani \"PyPI downloads\")](https://pypi.python.org/pypi/pyani)\n\n[![GitHub Issues](https://img.shields.io/github/issues-closed/widdowquinn/pyani.svg)](https://github.com/widdowquinn/pyani/issues)\n[![GitHub Stars](https://img.shields.io/github/stars/widdowquinn/pyani.svg)](https://github.com/widdowquinn/pyani/stargazers)\n[![Code Style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n[![Anaconda-Server Badge](https://anaconda.org/bioconda/pyani/badges/version.svg)](https://anaconda.org/bioconda/pyani)\n[![Anaconda-Server Badge](https://anaconda.org/bioconda/pyani/badges/latest_release_date.svg)](https://anaconda.org/bioconda/pyani)\n\n[![Anaconda-Server Badge](https://anaconda.org/bioconda/pyani/badges/installer/conda.svg)](https://conda.anaconda.org/bioconda)\n[![Anaconda-Server Badge](https://anaconda.org/bioconda/pyani/badges/downloads.svg)](https://anaconda.org/bioconda/pyani)\n[![Anaconda-Server Badge](https://anaconda.org/bioconda/pyani/badges/platforms.svg)](https://anaconda.org/bioconda/pyani)\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/widdowquinn/pyani"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to `pyani`\n\nContributions, including bugfixes and addition of new features, are welcomed!\n\nThe `pyani` package is currently maintained on GitHub under two main branches:\n\n- `master` is the source code underpinning the most recent/current release of pyani. It should always be in sync with the latest release found at [https://github.com/widdowquinn/pyani/releases](https://github.com/widdowquinn/pyani/releases). The only time this code should not be in sync with the release is when there are modifications to documentation, or for a release candidate immediately preceding a release.\n- `development` is the current bleeding-edge version of `pyani`. It should (almost) always be in a working and usable condition, but may not be complete and/or some features may be missing or still under development.\n\nAdditional branches may also be found on GitHub, with bug fixes and or new features in varying stages of completeness.\n\n## Table of Contents\n\n<!-- TOC -->\n\n- [Contributing to `pyani`](#contributing-to-pyani)\n  - [Table of Contents](#table-of-contents)\n  - [Licensing](#licensing)\n  - [How to Contribute](#how-to-contribute)\n    - [Getting the source code](#getting-the-source-code)\n    - [Setting up a development environment](#setting-up-a-development-environment)\n      - [Cleaning up development environment](#cleaning-up-development-environment)\n    - [Editing source code](#editing-source-code)\n    - [Editing documentation](#editing-documentation)\n  - [Pull Requests](#pull-requests)\n    - [Naming your branch](#naming-your-branch)\n    - [Reviewing changes](#reviewing-changes)\n    - [Coding Conventions](#coding-conventions)\n    - [Code Style Checks](#code-style-checks)\n    - [Commit Message Convention](#commit-message-convention)\n    - [Pre-commit Checks](#pre-commit-checks)\n    - [Testing](#testing)\n    - [Local Testing](#local-testing)\n    - [Continuous Integration](#continuous-integration)\n  - [Versioning](#versioning)\n\n<!-- /TOC -->\n\n## Licensing\n\n`pyani` is shared under the [MIT License](https://opensource.org/licenses/MIT) (see LICENSE file for details), and any contributions you make will be licensed under this agreement.\n\n## How to Contribute\n\n### Getting the source code\n\nPlease fork the repository to your own GitHub account (you will need to create a GitHub account if you do not already have one), and clone the repository from your fork. Using SSH (recommended):\n\n```bash\ngit clone git@github.com:<YOUR USERNAME>/pyani.git\ncd pyani\n```\n\nor HTTPS:\n\n```bash\ngit clone https://github.com/<YOUR USERNAME>/pyani.git\ncd curveball\n```\n\n### Setting up a development environment\n\n`pyani` development makes use of the following tools and packages:\n\n- `Anaconda`/`Miniconda` for virtual environment management\n- `git` for version control\n- `pytest` for testing\n- `pre-commit` to manage pre-commit hooks\n- `doc8`, `flake8` and `pylint` for code linting\n- `black` for code formatting\n- `bandit` to identify security issues\n- `codecov` to measure code coverage\n\nTo set up a local development environment with these tools configured for `pyani` development, first create and activate a new `conda` environment:\n\n```bash\nconda create --yes --name pyani_dev python=3.7 && conda activate pyani_dev\n```\n\nthen set up `conda` channels for the required dependencies:\n\n```bash\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\n```\n\nand then use the command\n\n```bash\nmake setup_env\n```\n\nThis will install all dependencies for running and developing `pyani`, as well as pre-commit hooks. Once installation is complete, run the test suite to check installation, availability of dependencies, and code coverage:\n\n```bash\nmake test\n```\n\nIf you want to be able to edit source files and have those changes take immediate effect when calling `pyani` (useful for testing), clone the GitHub repository with:\n\n```bash\ngit clone https://github.com/widdowquinn/pyani.git\n```\n\nthen inside the new `pyani` directory run:\n\n```bash\npip install -e .\n```\n\nThis is the [`pip install --editable`](https://pip.pypa.io/en/stable/cli/pip_install/#install-editable) command, which links the installed package to the specified location (here `.`, i.e. the current directory) rather than the usual package location (`site-packages`). When using this option, edits to the source code are immediately available in the installed package. This allows you to test changes to the source code as you make them, without the need for an additional uninstall/install step.\n\n#### Cleaning up development environment\n\nYou can remove the `conda` development environment with the following commands:\n\n```bash\nconda deactivate\nconda remove -n pyani_dev --all\n```\n\n### Editing source code\n\nThe root directory of the repository has subdirectories specific for testing, packaging, and deploying `pyani`:\n\n- `pyani` source code is under the `pyani` subdirectory\n    - code for the CLI scripts is in the `pyani/scripts` subdirectory\n- tests (written for the `pytest` framework) and test/target data are in the `tests` subdirectory\n- documentation is found under the `docs` subdirectory\n\n### Editing documentation\n\nPackage documentation for `pyani` is found in the `docs` subdirectory. Both the package documentation and docstrings are written in [`reStructured Text`](http://sphinx-doc.org/rest.html) (i.e. `RST`), and to build the documentation you will need to install [`Sphinx`](https://www.sphinx-doc.org/en/master/).\n\nAlthough you can build the documentation in multiple formats, the default is the HTML website. Tho build the package docs and view them in your browser you can use the command:\n\n```bash\nmake docs\n```\n\nfrom the repository root directory\n\n## Pull Requests\n\nIf you plan to make a pull request, please begin by forking this repository, and creating a new branch with a short, descriptive name, instead of using the `development`, `version_0_2`, `version_0_3`, `main`, or `master` branch.\n\nA workflow might look like this:\n\n1. Identify something you think you can change or add\n2. Fork this repository into your own account (but [please add write access for repository maintainers](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/working-with-forks/allowing-changes-to-a-pull-request-branch-created-from-a-fork))\n3. Obtain source code and set up a development environment as described above\n4. Create a new branch with a short, descriptive name (for the thing you're fixing/adding), and work on this branch locally\n5. When you're finished, check the changes/additions with `flake8`/`black` and test locally with `pytest -v`.\n6. Commit the branch, and submit a pull request\n7. Continue the discussion in the [`Pull requests` section](https://github.com/widdowquinn/pyani/pulls) of this repository on GitHub.\n\n**All tests must pass before a pull request will be merged at `GitHub`.**\n\nPlease keep each pull request as *atomic* as possible - fixing or adding a single conceptually-complete issue/functionality. If you would like to add several features or fix several issues, please use a separate pull request for each one, where possible.\n\n### Naming your branch\n\n- If you are proposing a fix to an issue, please give your branch a name that reflects this. For example, if you were proposing to fix issue #150, please call your branch `issue_150` (or some similar variation).\n- If you are handling a pull request from a fork, with a view to merging, please indicate the PR number somewhere in the local branch name when you pull the forked version into the repository. For example, if you were handling pull request #250 which refers to a fork from `kenny_loggins/pyani`, please call your local branch `pr_250` (or some similar variation).\n\n### Reviewing changes\n\nWhen you have finished editing source or documentation, please check that everything you modified is committed:\n\n```bash\ngit status\n```\n\nPlease also review the differences that have been introduced relative to the `origin/master` or `origin/development` branch (as appropriate):\n\n```bash\ngit diff origin/master\n```\n\nPlease check your `git` log and consider rebasing or squashing any commits that have not been pushed:\n\n```bash\ngit log\n```\n\n### Coding Conventions\n\nSo far as is possible, we aim to follow the coding conventions as described in [PEP8](http://www.python.org/dev/peps/pep-0008/) and [PEP257](http://www.python.org/dev/peps/pep-0257/), but we have adopted `black` code styling, which does vary from the PEPs in places.\n\nWe are moving to writing all docstrings as reStructuredText, for usage with Sphinx.\n\n### Code Style Checks\n\nWe use the `flake8`, `doc8`, and `pylint` tools for style checks. These will be installed if you have used `make setup_env` to set up your development environment.\n\n### Commit Message Convention\n\n`git` commit messages are an important way to manage a readable revision history. We use the following conventions:\n\n- **If a commit fixes an issue, state this in the commit message**\n  - `GitHub` Projects picks up on terms like `fixes #123` and `closes #987`. Using these phrases makes project management much easier.\n\n- **Every commit gets a short description**\n  - The short description should be in *imperative form* and *around 50 characters or less*\n  - The short description can, but need not, include the name of the file that is modified\n  - There should be a short account of what the change does\n  - The short discription *should not only contain the name of the file that is modified*\n\nFor example, if the commit updates some documentation, the following are good short descriptions:\n\n- `update citations.rst to add new references`\n- `update docs to add new references; fixes #567`\n- `add new references to citations.rst`\n\nThe following are bad short descriptions\n\n- `update citations.rst` (does not say what was done)\n- `there were some new references so I added them` (not in imperative form)\n- `citations.rst` (does not say what was done)\n- `part of some doc updates` (does not say what was done)\n\n- **Some commits get long/extended descriptions**\n  - Long descriptions should be included where there is more information to share than can be fit in the short description\n  - Long descriptions are free-form\n  - Long descriptions should explain the *why* of the change. They may also explain the *what* at a high level, but should not be excessively detailed.\n  - They are \"long descriptions\", but they should be concise, precise and clear\n  - Paragraphs are fine\n  - Bullet points are fine\n\nA good long description could be\n\n> This fix improves efficiency of the veeblefetzer. The main change is replacing a\n> nested loop with asyncio calls to a new function `fetzveebles()`. This commit\n> makes affects `veebles.py`, and new tests are added in `test_veeblefetzer.py`.\n>\n> fixes #246\n\nA bad long description might be\n\n> So, because it was taking too long to fetz all the veebles I looked at the\n> structure. It took a while to identify the main problem, which was that there\n> were a bunch of nested loops. I timed these and it turned out that one of\n> them really hit performance. So I looked into a load of options (like\n> multiprocessing, threading and so on) but, inspired by a Stack Overflow\n> post (URL HERE:) I decided to try asyncio. After some trial and error I\n> managed to get something working with that. I also wrote some tests. I\n> also think this might fix one of the issues.\n\n### Pre-commit Checks\n\nThe `flake8` and `black` styles are enforced as pre-commit hooks using the `pre-commit` package (included in `requirements-dev.txt` and `requirements-pip.txt`).\n\nThe `black` and `flake8` hooks are defined in `.pre-commit-config.yaml`. Custom settings for `flake8` are held in `.flake8`.\n\nTo enable pre-commit checks in the codebase on your local machine (once `pre-commit` has been installed), execute the following command in the root directory of this repository:\n\n```bash\npre-commit install\n```\n\nThis is done automatically if you use `make setup_env` to set up your development environment.\n\n### Testing\n\nNew features or functions will not be accepted without tests. Bug fixes should ideally include an additional test to establish that the bug has been squashed. We expect that you will have run tests locally before a pull request is made.\n\nTests will also be run as part of continuous integration, and changes will not be accepted until continuous integration tests have been passed.\n\nTests are located in the `tests` subdirectory of this repository.\n\n### Local Testing\n\nWe currently use `pytest` for testing, and `codecov` to establish how much of the codebase is covered by tests. These can be installed as follows:\n\n```bash\nconda install pytest codecov\n```\n\n`pytest` can then be run on the codebase with\n\n```bash\npytest --cov-report=html --cov=pyani -v tests/\n```\n\n### Continuous Integration\n\nWhen you submit a pull request on GitHub, automated tests will be run, and results reported on the pull request. **All tests must pass before a pull request will be merged.**\n\nWe currently use [GitHub Actions](https://github.com/widdowquinn/pyani/actions/) to run tests. The configuration file can be found in the repository under `.github/workflows/`.\n\nCurrently, `pyani` is tested under Python 3.9 through 3.12, and coverage is reported at [`Codacy`](https://app.codacy.com/gh/widdowquinn/pyani/dashboard).\n\n## Versioning\n\nWe aim to comply with [`PEP440`](https://www.python.org/dev/peps/pep-0440/) and [semantic versioning](https://semver.org/).\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "`pyani`"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to contribute code to the `pyani` project (e.g. a bug fix or new feature), please refer to the [`CONTRIBUTING.md`](CONTRIBUTING.md) guide for more details.\n\n`pyani` is maintained by:\n\n- [Leighton Pritchard](https://pureportal.strath.ac.uk/en/persons/leighton-pritchard)\n- [Bailey Harrington](https://pureportal.strath.ac.uk/en/persons/bailey-harrington)\n\nand we are grateful to all who have contributed to this software:\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# CONTRIBUTORS.md\n\n- [Leighton Pritchard](https://github.com/widdowquinn)\n- [Bailey Harrington](https://github.com/baileythegreen)\n- [Peter Cock](https://github.com/peterjc)\n- [Rob Davey](http://www.earlham.ac.uk/rob-davey)\n- [Nick Waters](https://github.com/nickp60)\n- [ytanizaw](https://github.com/ytanizaw)\n- [Will Trimble](https://github.com/wltrimbl)  <!-- submitted PR was not merged -->\n- [\u00d6zcan Esen](https://github.com/ozcan)\n- [Bal\u00e1zs Brankovics](https://github.com/b-brankovics)\n- [Ram Krishna Shrestha](https://github.com/TSL-RamKrishna)  <!-- submitted PR was not merged -->\n- [Anuj Sharma](https://github.com/rknx)\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/CONTRIBUTORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors \u2728  (<a href=\"https://allcontributors.org/docs/en/emoji-key\">emoji key</a>):",
        "parent_header": [
          "`pyani`",
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "\n\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.strath.ac.uk/staff/pritchardleightondr/\"><img src=\"https://avatars.githubusercontent.com/u/63981?v=4?s=100\" width=\"100px;\" alt=\"Leighton Pritchard\"/><br /><sub><b>Leighton Pritchard</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=widdowquinn\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/widdowquinn/pyani/commits?author=widdowquinn\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#design-widdowquinn\" title=\"Design\">\ud83c\udfa8</a> <a href=\"#financial-widdowquinn\" title=\"Financial\">\ud83d\udcb5</a> <a href=\"#ideas-widdowquinn\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a> <a href=\"#infra-widdowquinn\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a> <a href=\"#projectManagement-widdowquinn\" title=\"Project Management\">\ud83d\udcc6</a> <a href=\"#tool-widdowquinn\" title=\"Tools\">\ud83d\udd27</a> <a href=\"https://github.com/widdowquinn/pyani/commits?author=widdowquinn\" title=\"Tests\">\u26a0\ufe0f</a> <a href=\"#tutorial-widdowquinn\" title=\"Tutorials\">\u2705</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/baileythegreen\"><img src=\"https://avatars.githubusercontent.com/u/12277715?v=4?s=100\" width=\"100px;\" alt=\"Bailey Harrington\"/><br /><sub><b>Bailey Harrington</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=baileythegreen\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/widdowquinn/pyani/commits?author=baileythegreen\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#design-baileythegreen\" title=\"Design\">\ud83c\udfa8</a> <a href=\"#ideas-baileythegreen\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a> <a href=\"#infra-baileythegreen\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a> <a href=\"#tool-baileythegreen\" title=\"Tools\">\ud83d\udd27</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://blastedbio.blogspot.com\"><img src=\"https://avatars.githubusercontent.com/u/63959?v=4?s=100\" width=\"100px;\" alt=\"Peter Cock\"/><br /><sub><b>Peter Cock</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=peterjc\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#ideas-peterjc\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://www.earlham.ac.uk/rob-davey\"><img src=\"https://avatars.githubusercontent.com/u/1872302?v=4?s=100\" width=\"100px;\" alt=\"Robert Davey\"/><br /><sub><b>Robert Davey</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=froggleston\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#ideas-froggleston\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nickp60\"><img src=\"https://avatars.githubusercontent.com/u/14367274?v=4?s=100\" width=\"100px;\" alt=\"Nick Waters\"/><br /><sub><b>Nick Waters</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=nickp60\" title=\"Documentation\">\ud83d\udcd6</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ytanizaw\"><img src=\"https://avatars.githubusercontent.com/u/2227458?v=4?s=100\" width=\"100px;\" alt=\"YT\"/><br /><sub><b>YT</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=ytanizaw\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#ideas-ytanizaw\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ozcan\"><img src=\"https://avatars.githubusercontent.com/u/940884?v=4?s=100\" width=\"100px;\" alt=\"\u00d6zcan Esen\"/><br /><sub><b>\u00d6zcan Esen</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=ozcan\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Aozcan\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://b-brankovics.github.io\"><img src=\"https://avatars.githubusercontent.com/u/6728856?v=4?s=100\" width=\"100px;\" alt=\"Bal\u00e1zs Brankovics\"/><br /><sub><b>Bal\u00e1zs Brankovics</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=b-brankovics\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Ab-brankovics\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sammywinchester19\"><img src=\"https://avatars.githubusercontent.com/u/67588791?v=4?s=100\" width=\"100px;\" alt=\"sammywinchester19\"/><br /><sub><b>sammywinchester19</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Asammywinchester19\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/TSL-RamKrishna\"><img src=\"https://avatars.githubusercontent.com/u/20773891?v=4?s=100\" width=\"100px;\" alt=\"Ram Krishna Shrestha\"/><br /><sub><b>Ram Krishna Shrestha</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=TSL-RamKrishna\" title=\"Tests\">\u26a0\ufe0f</a> <a href=\"https://github.com/widdowquinn/pyani/commits?author=TSL-RamKrishna\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#ideas-TSL-RamKrishna\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a> <a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3ATSL-RamKrishna\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/dparks1134\"><img src=\"https://avatars.githubusercontent.com/u/3688336?v=4?s=100\" width=\"100px;\" alt=\"Donovan Parks\"/><br /><sub><b>Donovan Parks</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Adparks1134\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.researchgate.net/profile/Zaki-Saati-Santamaria\"><img src=\"https://avatars.githubusercontent.com/u/50806485?v=4?s=100\" width=\"100px;\" alt=\"Zaki Saati Santamar\u00eda\"/><br /><sub><b>Zaki Saati Santamar\u00eda</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Azakisaati\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/neelam19051\"><img src=\"https://avatars.githubusercontent.com/u/97612372?v=4?s=100\" width=\"100px;\" alt=\"neelam19051\"/><br /><sub><b>neelam19051</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Aneelam19051\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jthomp28\"><img src=\"https://avatars.githubusercontent.com/u/73444930?v=4?s=100\" width=\"100px;\" alt=\"jthomp28\"/><br /><sub><b>jthomp28</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3Ajthomp28\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/louellette\"><img src=\"https://avatars.githubusercontent.com/u/24635515?v=4?s=100\" width=\"100px;\" alt=\"louellette\"/><br /><sub><b>louellette</b></sub></a><br /><a href=\"#ideas-louellette\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sbridel\"><img src=\"https://avatars.githubusercontent.com/u/7995272?v=4?s=100\" width=\"100px;\" alt=\"Seb.\"/><br /><sub><b>Seb.</b></sub></a><br /><a href=\"#ideas-sbridel\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ninjatacoshell\"><img src=\"https://avatars.githubusercontent.com/u/17790858?v=4?s=100\" width=\"100px;\" alt=\"ninjatacoshell\"/><br /><sub><b>ninjatacoshell</b></sub></a><br /><a href=\"#ideas-ninjatacoshell\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/phbrito\"><img src=\"https://avatars.githubusercontent.com/u/20931119?v=4?s=100\" width=\"100px;\" alt=\"Patricia H. Brito\"/><br /><sub><b>Patricia H. Brito</b></sub></a><br /><a href=\"#ideas-phbrito\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/ZiliaMR\"><img src=\"https://avatars.githubusercontent.com/u/17069965?v=4?s=100\" width=\"100px;\" alt=\"Zilia Y. Mu\u00f1oz Ramirez\"/><br /><sub><b>Zilia Y. Mu\u00f1oz Ramirez</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3AZiliaMR\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nclaesnacw\"><img src=\"https://avatars.githubusercontent.com/u/14940823?v=4?s=100\" width=\"100px;\" alt=\"nclaesnacw\"/><br /><sub><b>nclaesnacw</b></sub></a><br /><a href=\"#ideas-nclaesnacw\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/EricDeveaud\"><img src=\"https://avatars.githubusercontent.com/u/6849075?v=4?s=100\" width=\"100px;\" alt=\"Eric Deveaud\"/><br /><sub><b>Eric Deveaud</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/issues?q=author%3AEricDeveaud\" title=\"Bug reports\">\ud83d\udc1b</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/kiepczi\"><img src=\"https://avatars.githubusercontent.com/u/72203476?v=4?s=100\" width=\"100px;\" alt=\"Angelika Kiepas\"/><br /><sub><b>Angelika Kiepas</b></sub></a><br /><a href=\"https://github.com/widdowquinn/pyani/commits?author=kiepczi\" title=\"Code\">\ud83d\udcbb</a> <a href=\"#design-kiepczi\" title=\"Design\">\ud83c\udfa8</a> <a href=\"https://github.com/widdowquinn/pyani/commits?author=kiepczi\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n> (This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!)\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-12-30T18:48:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-29T22:35:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Application and Python module for average nucleotide identity analyses of microbes."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Average Nucleotide Identity (ANI)",
        "parent_header": [
          "`pyani`",
          "Method and Output Description"
        ],
        "type": "Text_excerpt",
        "value": "This module calculates Average Nucleotide Identity (ANI) according to one of a number of alternative methods described in, e.g.\n\n- Richter M, Rossello-Mora R (2009) Shifting the genomic gold standard for the prokaryotic species definition. Proc Natl Acad Sci USA 106: 19126-19131. doi:10.1073/pnas.0906412106. (ANI1020, ANIm, ANIb)\n- Goris J, Konstantinidis KT, Klappenbach JA, Coenye T, Vandamme P, et al. (2007) DNA-DNA hybridization values and their relationship to whole-genome sequence similarities. Int J Syst Evol Micr 57: 81-91. doi:10.1099/ijs.0.64483-0.\n\nANI is proposed to be the appropriate *in silico* substitute for DNA-DNA hybridisation (DDH), and so useful for delineating species boundaries. A typical percentage threshold for species boundary in the literature is 95% ANI (e.g. Richter et al. 2009).\n\nAll ANI methods follow the basic algorithm:\n\n- Align the genome of organism 1 against that of organism 2, and identify the matching regions.\n- Calculate the percentage nucleotide identity of the matching regions, as an average for all matching regions.\n\nMethods differ on: (1) what alignment algorithm is used, and the choice of parameters (this affects the aligned region boundaries); (2) what the input is for alignment (typically either fragments of fixed size, or the most complete assembly available).\n\n- **ANIm**: uses MUMmer (NUCmer) to align the input sequences\n- **ANIb**: uses BLASTN+ to align 1020nt fragments of the input sequences\n- **ANIblastall**: uses legacy BLASTN to align 10al20nt fragments of the input sequences\n- **TETRA**: calculates tetranucleotide frequencies of each input sequence\n\nThe algorithms take as input correctly-formatted FASTA multiple sequence files. All sequences for a single organism should be contained in only one sequence file. Although it is possible to provide new labels for each input genome for rendering graphical output, the names of these files are used for identification so it is best to name them sensibly.\n\nOutput is written to a named directory. The output files differ depending on the chosen ANI method.\n\n- **ANIm**: MUMmer/NUCmer `.delta` files, describing each pairwise sequence alignment. Output as tab-separated plain text format tables describing: alignment coverage; total alignment lengths; similarity errors; and percentage identity (ANIm).\n- **ANIb** and **ANIblastall**: FASTA sequences describing 1020nt fragments of each input sequence; BLAST nucleotide databases - one for each set of fragments; and BLASTN output files (tab-separated tabular format plain text) - one for each pairwise comparison of input sequences. Output as tab-separated plain text tables describing: alignment coverage; total alignment lengths; similarity errors; and percentage identity (ANIb or ANIblastall).\n- **TETRA**: Tab-separated plain text files describing the Pearson correlations between Z-score distributions for each tetranucleotide in each input sequence (TETRA).\n\nIf graphical output is chosen, the output directory will also contain PDF, PNG and EPS files representing the various output measures as a heatmap with row and column dendrograms. Other output formats (e.g. SVG) can be specified with the `--gformat` argument.\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.989307755964506,
      "result": {
        "original_header": "`pyani`",
        "type": "Text_excerpt",
        "value": "Application and Python module for whole-genome classification of microbes using Average Nucleotide Identity. \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9575832306230662,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "`pyani` is a software package and Python3 module that calculates average nucleotide identity (ANI) and related measures for whole genome comparisons, and renders relevant graphical summary output. \nWhere available, `pyani` can take advantage of multicore systems, and integrates with [SGE/OGE](http://gridscheduler.sourceforge.net/)-type job schedulers for the sequence comparisons. \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8368033096713465,
      "result": {
        "original_header": "Walkthrough: A First Analysis",
        "type": "Text_excerpt",
        "value": "The command-line interface to `pyani` uses subcommands. These separate individual steps of an analysis into separate actions. \n1. Download genomes\n2. Create a database to hold genome data and analysis results\n3. Perform ANI analysis\n4. Report and visualise analysis results\n5. Generate species hypotheses (classify genomes) using the analysis results \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976196304552275,
      "result": {
        "original_header": "2. Create an analysis database",
        "type": "Text_excerpt",
        "value": "`pyani` uses a database to store genome data and analysis results. This is convenient for data sharing and developing custom analyses, but also makes it easier to extend an existing ANI analysis with new genomes, without having to repeat calculations that were already performed. \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8857118538917722,
      "result": {
        "original_header": "3. Conduct ANI analysis",
        "type": "Text_excerpt",
        "value": "All four analysis commands operate in a similar way. The first two arguments are paths to directories: the first path is to a directory containing input genomes, and the second is the path to an output directory for storing intermediate results. The `-v` and `-l` arguments work as above, specifying verbose output and logging output to a file. \nYou will probably notice that the verbose output is very verbose, to enable informative identification of any problems. In particular, the verbose output (which is also written to the log file) writes out the command-lines used for the pairwise comparisons so, if something goes wrong, you can test whether a specific comparison can be run at the command-line *at all*, to aid diagnosis of any problems.\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.954423906535263,
      "result": {
        "original_header": "Rerunning the same analysis",
        "type": "Text_excerpt",
        "value": "One reason for using a database backend for analysis results is so that, for very large analyses, we do not ever need to recalculate a pairwise genome comparison. All the analysis subcommands check whether input genomes have been used before (using the unique MD5 hash for each genome to identify whether it's been used previously), and whether the comparison of two genomes has been run, with the particular analysis settings that were used. If either genome was not seen before, or if the analysis settings are different, the comparison is performed. \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9132379470562703,
      "result": {
        "original_header": "4. Reporting Analyses and Analysis Results",
        "type": "Text_excerpt",
        "value": "- `--runs`: show all analysis runs with results stored in the database\n- `--runs_genomes`: show all the analysis runs with results in the database, and all the genomes analysed in each run\n- `--genomes`: show all the genomes used for any analysis in the database\n- `--genomes_runs`: for each genome in the database, also list the analysis results it participates in\n- `--run_results`: show all the pairwise comparison results for a named run (run IDs can be obtained with the `--runs` argument \nThe report tables are written to a named directory (compulsory argument), and are written by default to a `.tab` plain-text format, but HTML and Excel format can also be requested with the `--formats` argument:\n```bash\n$ pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel,stdout\nINFO: Processed arguments: Namespace(cmdline='./pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel', dbpath='.pyani/pyanidb', formats='html,excel', func=<function subcmd_report at 0x10c674a60>, logfile=None, outdir='C_blochmannia_ANIm/', run_results=False, show_genomes=False, show_genomes_runs=False, show_runs=True, show_runs_genomes=False, verbose=True)\nINFO: command-line: ./pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel\nINFO: Creating output in formats: ['excel', 'tab', 'html']\nINFO: Using database: .pyani/pyanidb\nINFO: Writing table of pyani runs from the database to C_blochmannia_ANIm/runs.*\nINFO: Completed. Time taken: 0.937\n$ tree -L 1 C_blochmannia_ANIm/\nC_blochmannia_ANIm/\n\u251c\u2500\u2500 nucmer_output\n\u251c\u2500\u2500 runs.html\n\u251c\u2500\u2500 runs.tab\n\u2514\u2500\u2500 runs.xlsx\n```\nTo see all of the pairwise results for an individual run, the run ID must be provided. It is possible to get results for more than one run ID by providing a comma-separated list of run IDs (though each run's results will be provided in a separate file):\n```bash\n$ pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel --run_results 1,2,3,4\nINFO: Processed arguments: Namespace(cmdline='./pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel --run_results 1,2,3,4', dbpath='.pyani/pyanidb', formats='html,excel', func=<function subcmd_report at 0x108616a60>, logfile=None, outdir='C_blochmannia_ANIm/', run_results='1,2,3,4', show_genomes=False, show_genomes_runs=False, show_runs=True, show_runs_genomes=False, verbose=True)\nINFO: command-line: ./pyani report -v --runs -o C_blochmannia_ANIm/ --formats html,excel --run_results 1,2,3,4\nINFO: Creating output in formats: ['tab', 'excel', 'html']\nINFO: Using database: .pyani/pyanidb\nINFO: Writing table of pyani runs from the database to C_blochmannia_ANIm/runs.*\nINFO: Attempting to write results tables for runs: ['1', '2', '3', '4']\nINFO: Collecting data for run with ID: 1\nINFO: Collecting data for run with ID: 2\nINFO: Collecting data for run with ID: 3\nINFO: Collecting data for run with ID: 4\nINFO: Completed. Time taken: 1.285\n```\nYou can see a run's results in the terminal by specifying the `stdout` format. For example, to see the identity, coverage, and other output matrices, you would specify `--run_matrices <RUN>` and `--formats=stdout` as below:\n```bash\n$ pyani report -o C_blochmannia_ANIm --formats=stdout --run_matrices 1\nTABLE: C_blochmannia_ANIm/matrix_identity_1\n                                                    C. Blochmannia pennsylvanicus BPEN  C. Blochmannia floridanus  C. Blochmannia vafer BVAF  C. Blochmannia chromaiodes 640  B. endosymbiont of Polyrhachis (Hedomyrma) turneri 675  B. endosymbiont of Camponotus (Colobopsis) obliquus 757\nC. Blochmannia pennsylvanicus BPEN                                            1.000000                   0.834866                   0.836903                        0.980244                                           0.843700                                                0.829509\nC. Blochmannia floridanus                                                     0.834866                   1.000000                   0.828733                        0.834916                                           0.847060                                                0.857859\nC. Blochmannia vafer BVAF                                                     0.836903                   0.828733                   1.000000                        0.837811                                           0.866015                                                0.844438\nC. Blochmannia chromaiodes 640                                                0.980244                   0.834916                   0.837811                        1.000000                                           0.849834                                                0.834769\nB. endosymbiont of Polyrhachis (Hedomyrma) turn...                            0.843700                   0.847060                   0.866015                        0.849834                                           1.000000                                                0.844228\nB. endosymbiont of Camponotus (Colobopsis) obli...                            0.829509                   0.857859                   0.844438                        0.834769                                           0.844228                                                1.000000\n\nTABLE: C_blochmannia_ANIm/matrix_coverage_1\n                                                    C. Blochmannia pennsylvanicus BPEN  C. Blochmannia floridanus  C. Blochmannia vafer BVAF  C. Blochmannia chromaiodes 640  B. endosymbiont of Polyrhachis (Hedomyrma) turneri 675  B. endosymbiont of Camponotus (Colobopsis) obliquus 757\nC. Blochmannia pennsylvanicus BPEN                                            1.000000                   0.045736                   0.041404                        1.000306                                           0.017263                                                0.021027\nC. Blochmannia floridanus                                                     0.051317                   1.000000                   0.152609                        0.054930                                           0.016366                                                0.010749\nC. Blochmannia vafer BVAF                                                     0.045362                   0.149012                   1.000000                        0.046520                                           0.008356                                                0.014706\nC. Blochmannia chromaiodes 640                                                1.000856                   0.048983                   0.042485                        1.000000                                           0.014056                                                0.016140\nB. endosymbiont of Polyrhachis (Hedomyrma) turn...                            0.018238                   0.015410                   0.008058                        0.014841                                           1.000000                                                0.020416\nB. endosymbiont of Camponotus (Colobopsis) obli...                            0.021508                   0.009799                   0.013730                        0.016500                                           0.019766                                                1.000000\n\nTABLE: C_blochmannia_ANIm/matrix_aln_lengths_1\n                                                    C. Blochmannia pennsylvanicus BPEN  C. Blochmannia floridanus  C. Blochmannia vafer BVAF  C. Blochmannia chromaiodes 640  B. endosymbiont of Polyrhachis (Hedomyrma) turneri 675  B. endosymbiont of Camponotus (Colobopsis) obliquus 757\nC. Blochmannia pennsylvanicus BPEN                                            791654.0                    36207.0                    32778.0                        791896.0                                            13666.0                                                 16646.0\nC. Blochmannia floridanus                                                      36207.0                   705557.0                   107674.0                         38756.0                                            11547.0                                                  7584.0\nC. Blochmannia vafer BVAF                                                      32778.0                   107674.0                   722585.0                         33615.0                                             6038.0                                                 10626.0\nC. Blochmannia chromaiodes 640                                                791896.0                    38756.0                    33615.0                        791219.0                                            11121.0                                                 12770.0\nB. endosymbiont of Polyrhachis (Hedomyrma) turn...                             13666.0                    11547.0                     6038.0                         11121.0                                           749321.0                                                 15298.0\nB. endosymbiont of Camponotus (Colobopsis) obli...                             16646.0                     7584.0                    10626.0                         12770.0                                            15298.0                                                     NaN\n\nTABLE: C_blochmannia_ANIm/matrix_sim_errors_1\n                                                    C. Blochmannia pennsylvanicus BPEN  C. Blochmannia floridanus  C. Blochmannia vafer BVAF  C. Blochmannia chromaiodes 640  B. endosymbiont of Polyrhachis (Hedomyrma) turneri 675  B. endosymbiont of Camponotus (Colobopsis) obliquus 757\nC. Blochmannia pennsylvanicus BPEN                                                 0.0                     5979.0                     5346.0                         15645.0                                             2136.0                                                  2838.0\nC. Blochmannia floridanus                                                       5979.0                        0.0                    18441.0                          6398.0                                             1766.0                                                  1078.0\nC. Blochmannia vafer BVAF                                                       5346.0                    18441.0                        0.0                          5452.0                                              809.0                                                  1653.0\nC. Blochmannia chromaiodes 640                                                 15645.0                     6398.0                     5452.0                             0.0                                             1670.0                                                  2110.0\nB. endosymbiont of Polyrhachis (Hedomyrma) turn...                              2136.0                     1766.0                      809.0                          1670.0                                                0.0                                                  2383.0\nB. endosymbiont of Camponotus (Colobopsis) obli...                              2838.0                     1078.0                     1653.0                          2110.0                                             2383.0                                                     0.0\n\nTABLE: C_blochmannia_ANIm/matrix_hadamard_1\n                                                    C. Blochmannia pennsylvanicus BPEN  C. Blochmannia floridanus  C. Blochmannia vafer BVAF  C. Blochmannia chromaiodes 640  B. endosymbiont of Polyrhachis (Hedomyrma) turneri 675  B. endosymbiont of Camponotus (Colobopsis) obliquus 757\nC. Blochmannia pennsylvanicus BPEN                                            1.000000                   0.038183                   0.034652                        0.980543                                           0.014564                                                0.017442\nC. Blochmannia floridanus                                                     0.042843                   1.000000                   0.126472                        0.045862                                           0.013863                                                0.009221\nC. Blochmannia vafer BVAF                                                     0.037964                   0.123491                   1.000000                        0.038975                                           0.007237                                                0.012418\nC. Blochmannia chromaiodes 640                                                0.981082                   0.040896                   0.035594                        1.000000                                           0.011945                                                0.013473\nB. endosymbiont of Polyrhachis (Hedomyrma) turn...                            0.015387                   0.013053                   0.006978                        0.012613                                           1.000000                                                0.017236\nB. endosymbiont of Camponotus (Colobopsis) obli...                            0.017841                   0.008406                   0.011594                        0.013774                                           0.016687                                                1.000000\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9435533306585719,
      "result": {
        "original_header": "5. Generating graphical output for ANI",
        "type": "Text_excerpt",
        "value": "- percentage identity\n- percentage coverage (for both query and subject)\n- alignment length (total aligned length)\n- similarity errors (total number of mismatches, not including indels)\n- hadamard matrix (dot product of identity and coverage matrices) \n**NOTE:** Running `pyani plot` with a large number of genomes (~500) and the default figure output (`--method seaborn`) may reduce output figure quality: \n- labels in `.png` files may be difficult to read\n- `.pdf` files may render very slowly due to the large number of numerical values in heatmap cells. \nWith large datasets, `--method mpl` (matplotlib) is recommended. \nPlease be aware that the matrix orientation differs for these two options; so, with `seaborn` (the default, `--method seaborn`), the orientation of self-comparisons is top left to bottom right (`\\`), while with `matplotlib` (`--method mpl`) the orientation is bottom left to top right (`/`).\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8988665109539036,
      "result": {
        "original_header": "SGE/OGE",
        "type": "Text_excerpt",
        "value": "In order for this work, one must be able to submit jobs using the `qsub` command. By default, this will batch the pairwise comparisons in array jobs of 10,000, in order to avoid clogging the scheduler queue. Each comparison will be run as a single-core task in an array job.\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9890555525802318,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "Unless otherwise indicated, all code is subject to the following agreement:\n```text\n    (c) The James Hutton Institute 2014-2019\n    (c) The University of Strathclyde 2019-present\n    Author: Leighton Pritchard\n\n    Contact: leighton.pritchard@strath.ac.uk\n\n    Address:\n    Leighton Pritchard,\n    Strathclyde Institute of Pharmacy and Biomedical Sciences\n    161 Cathedral Street\n    Glasgow\n    G4 0RE,\n    Scotland,\n    UK\n\nThe MIT License\n\nCopyright (c) 2014-2019 The James Hutton Institute\nCopyright (c) 2014-present The James Hutton Institute\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation for stable version `pyani` v0.2.x",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "- [`pyani` v0.2.x Documentation](./README_v_0_2_x.md)\n\n**IF YOU WISH TO INSTALL THE STABLE VERSION OF `PYANI`, PLEASE FOLLOW THESE INSTRUCTIONS FOR INSTALLING v0.2.x**\n\nThe easiest way to install `pyani` v0.2 is to use `conda` or  `pip`. `conda` is recommended for the simplest installation of third-party tool dependencies (`mummer` and `BLAST`/`BLAST+`).\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation (v0.3)",
        "parent_header": [
          "`pyani`"
        ],
        "type": "Text_excerpt",
        "value": "This `README.md` file provides a quick overview and walkthrough for **THE DEVELOPMENT VERSION (v0.3+) OF `pyani`**, and full documentation can be found at the link below:\n\n- [`pyani` v0.3+ Documentation](https://readthedocs.org/projects/pyani/)\n\n**THIS README AND THE DOCUMENTATION AT `READTHEDOCS` REFERS TO A DEVELOPMENT VERSION OF `PYANI` (v0.3+). IT HAS A DIFFERENT COMMAND-LINE INTERFACE THAN THE STABLE `PYANI` VERSION (v0.2.x).**\n\n**THE STABLE VERSION OF `PYANI` (v0.2) DOES NOT HAVE THE `pyani` COMMAND**\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Older documentation (v0.2)",
        "parent_header": [
          "`pyani`",
          "Documentation (v0.3)"
        ],
        "type": "Text_excerpt",
        "value": "If you are using `pyani` v0.2.x, then please note that the command-line API has changed, and documentation for this version can be found at the following page:\n\n- [`pyani` v0.2.x Documentation](./README_v_0_2_x.md)\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyani.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/widdowquinn/pyani/wiki"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Download genome data",
        "parent_header": [
          "`pyani`",
          "Walkthrough: A First Analysis"
        ],
        "type": "Text_excerpt",
        "value": "The first step is to obtain genome data for analysis. `pyani` expects to find each individual genome in its own FASTA file (that file can contain multiple sequences - chromosomes and plasmids; sequenced scaffolds, etc). All the FASTA files for an analysis are expected to be located in a single subdirectory (with optional `labels` and `classes` files). You can arrange your data manually, but `pyani` provides a subcommand that downloads all genomes in a taxon subtree from NCBI, and organises them ready for use with `pyani`.\n\nWe'll use the `pyani download` subcommand to download all available genomes for *Candidatus Blochmannia* from NCBI. The taxon ID for this grouping is [203804](https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id=203804&lvl=3&lin=f&keep=1&srchmode=1&unlock).\n\n```bash\npyani download -o C_blochmannia --email my.email@my.domain -t 203804 -v -l C_blochmannia_dl.log\n```\n\nThe first argument is the output directory into which the downloaded genomes will be written (`-o C_blochmannia`). To download anything from NCBI we must provide an email address (`--email my.email@my.domain`), and to specify which taxon subtree we want to download we provide the taxon ID (`-t 203804`).\n\nHere we also request verbose output (`-v`), and write a log file for reproducible research/diagnosing bugs and errors (`-l C_blochmannia_dl.log`).\n\nThis produces a new subdirectory (`C_blochmannia`) with the following contents:\n\n```bash\n$ tree C_blochmannia\nC_blochmannia\n\u251c\u2500\u2500 GCF_000011745.1_ASM1174v1_genomic.fna\n\u251c\u2500\u2500 GCF_000011745.1_ASM1174v1_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000011745.1_ASM1174v1_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000011745.1_ASM1174v1_hashes.txt\n\u251c\u2500\u2500 GCF_000043285.1_ASM4328v1_genomic.fna\n\u251c\u2500\u2500 GCF_000043285.1_ASM4328v1_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000043285.1_ASM4328v1_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000043285.1_ASM4328v1_hashes.txt\n\u251c\u2500\u2500 GCF_000185985.2_ASM18598v2_genomic.fna\n\u251c\u2500\u2500 GCF_000185985.2_ASM18598v2_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000185985.2_ASM18598v2_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000185985.2_ASM18598v2_hashes.txt\n\u251c\u2500\u2500 GCF_000331065.1_ASM33106v1_genomic.fna\n\u251c\u2500\u2500 GCF_000331065.1_ASM33106v1_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000331065.1_ASM33106v1_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000331065.1_ASM33106v1_hashes.txt\n\u251c\u2500\u2500 GCF_000973505.1_ASM97350v1_genomic.fna\n\u251c\u2500\u2500 GCF_000973505.1_ASM97350v1_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000973505.1_ASM97350v1_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000973505.1_ASM97350v1_hashes.txt\n\u251c\u2500\u2500 GCF_000973545.1_ASM97354v1_genomic.fna\n\u251c\u2500\u2500 GCF_000973545.1_ASM97354v1_genomic.fna.gz\n\u251c\u2500\u2500 GCF_000973545.1_ASM97354v1_genomic.fna.md5\n\u251c\u2500\u2500 GCF_000973545.1_ASM97354v1_hashes.txt\n\u251c\u2500\u2500 classes.txt\n\u2514\u2500\u2500 labels.txt\n```\n\nSeven genomes have been downloaded, and each is represented by four files:\n\n- `_genomic.fna.gz`: the compressed genome sequence\n- `_genomic.fna`: the uncompressed genome sequence\n- `_genomic.fna.md5`: an MD5 hash/checksum of the (uncompressed) genome sequence; this was generated during the download\n- `_hashes.txt`: a list of MD5 hashes; this is provided by NCBI and is a reference to be sure that the download did not corrupt the genome sequence\n\nThere are two additional plain text files: `classes.txt` and `labels.txt`, which provide alternative labels for use in the analysis. These files are generated during the download.\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/widdowquinn/pyani/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bugs, issues, problems and questions",
        "parent_header": [
          "`pyani`"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to report a bug or problem with `pyani`, or ask a question of the developer(s), please raise an issue at the link below:\n\n- [`pyani` Issues page](https://github.com/widdowquinn/pyani/issues)\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 55
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/widdowquinn/pyani/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "widdowquinn/pyani"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyani"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/63981?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/12277715?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/63959?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/1872302?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/14367274?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/2227458?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/940884?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/6728856?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/67588791?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/20773891?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/3688336?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/50806485?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/97612372?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/73444930?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/24635515?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/7995272?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/17790858?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/20931119?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/17069965?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/14940823?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/6849075?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars.githubusercontent.com/u/72203476?v=4?s=100"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/widdowquinn/pyani/master/tests/test_ani_data/ANIm_percentage_identity.png"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/widdowquinn/pyani/master/tests/test_ani_data/ANIm_alignment_coverage.png"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/widdowquinn/pyani/master/tests/test_ani_data/ANIm_alignment_lengths.png"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/widdowquinn/pyani/master/tests/test_ani_data/ANIm_similarity_errors.png"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "IMPORTANT NOTICE",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**THIS REPOSITORY DEFAULT BRANCH CONTAINS A DEVELOPMENT VERSION OF `PYANI` (v0.3+). IT HAS A DIFFERENT COMMAND-LINE INTERFACE THAN THE STABLE `PYANI` VERSION (v0.2.x).**\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`conda`",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You will need to install the `bioconda` channel, following instructions at [https://bioconda.github.io/user/install.html](https://bioconda.github.io/user/install.html). Then, to create a new environment for `pyani` and install the program, issue the following command:\n\n```bash\nconda create --name pyani_env python=3.8 -y\nconda activate pyani_env\nconda install pyani\n```\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`pip`",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "`pip` will install `pyani` and its Python dependencies, but not the third-party tools.\n\n```bash\npip3 install pyani\n```\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Third-party tools",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Four alignment packages are required, to use all of `pyani`'s methods: `mummer`, `BLAST+`, legacy `BLAST`, and `fastANI`. (*Note that it is not necessary to install all four tools to use `pyani`. You need only install the tools that are required for the method you wish to use.*)\n\nThe simplest route to obtaining these tools is to use `conda`/`bioconda`:\n\n```bash\nconda install mummer blast legacy-blast fastani -y\n```\n\nBut they can also be installed by following instructions from the tools' own websites.\n\n- **BLAST+** (for `anib`) [ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/](ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/)\n- **legacy BLAST** (for `aniblastall`) [ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST/](ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST/)\n- **MUMmer** (for `anim`) [http://mummer.sourceforge.net/](ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST/)\n- **fastANI** (for `fastani`) [https://github.com/ParBLiSS/FastANI](https://github.com/ParBLiSS/FastANI)\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "NOTE: Installing legacy BLAST",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**The legacy BLAST executable available from NCBI will not run on macOS Big Sur.**\n\nIf you wish to use `pyani blastall` or the `ANIblastall` method with the legacy `pyani` interface, you will require a locally-installed copy of this package. This is one of the packages linked in the `requirements-thirdparty.txt` file.\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note: Installing fastANI",
        "parent_header": [
          "`pyani`",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**`fastANI` installation (via `conda`) will fail for Python 3.9 on macOS.**\n\nIf you are using Python \u22653.9 to run `pyani` on macOS, `fastANI` will fail to install due to errors in the `conda` recipe (for build `h0a26cfa_0`). Using an earlier version of Python may be the simplest solution. However, you can also install `fastANI` yourself\u2014via `conda`\u2014using a slightly altered version of the command produced from the `conda` recipe, as shown below.\n\n*N.B. We have placed the `fastANI` requirement in its own `requirements-fastani.txt` file so that this will not also cause other installations to fail.*\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bypassing `conda`",
        "parent_header": [
          "`pyani`",
          "Installation",
          "Note: Installing fastANI"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nc++ -O3 -DNDEBUG -std=c++11 -Isrc \\\n-I ${ENV_DIR}/lib/include -mmacosx-version-min=10.7 \\\n-stdlib=libc++ -Xpreprocessor -fopenmp -lomp \\\n-DUSE_BOOST src/cgi/core_genome_identity.cpp -o fastANI \\\n${ENV_DIR}/lib/lib/libboost_math_c99.a \\\n-lstdc++ -lz -lm\n```\n\nTwo alterations need to be made to the file name specified in the fifth line here:\n\n1. One of the `/lib`s should be removed.\n1. The file extension should be changed from `.a`, to `.dylib`.\n\nThe resultant command ought to look something like this (with ${ENV_DIR} being wherever you're installing `fastANI`):\n\n```bash\nc++ -O3 -DNDEBUG -std=c++11 -Isrc \\\n-I ${ENV_DIR}/lib/include -mmacosx-version-min=10.7 \\\n-stdlib=libc++ -Xpreprocessor -fopenmp -lomp \\\n-DUSE_BOOST src/cgi/core_genome_identity.cpp -o fastANI \\\n${ENV_DIR}/lib/libboost_math_c99.dylib \\\n-lstdc++ -lz -lm\n```\n\nFor a more technical overview of the issue, and other solutions that may be shared there, please see https://github.com/widdowquinn/pyani/issues/377.\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting",
        "parent_header": [
          "`pyani`",
          "Installation",
          "Note: Installing fastANI"
        ],
        "type": "Text_excerpt",
        "value": "This solution is how one of our developers managed to solve the problem. We hope it works for you, but can not guarantee this. Unfortunately, if this does not work for you, we will also not be able to troubleshoot the issue. In this instance, please file an issue at https://github.com/bioconda/bioconda-recipes.\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9349083044900248,
      "result": {
        "original_header": "Walkthrough: A First Analysis",
        "type": "Text_excerpt",
        "value": "The command-line interface to `pyani` uses subcommands. These separate individual steps of an analysis into separate actions. \nThe steps are described in detail with examples, below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999401467519351,
      "result": {
        "original_header": "2. Create an analysis database",
        "type": "Text_excerpt",
        "value": "To create a new, clean, database in the default location (`.pyani/pyanidb`) issue the command:\n```bash\npyani createdb -v -l C_blochmannia_createdb.log\n```\nAs above, the verbose (`-v`) and log file (`-l C_blochmannia_createdb.log`) options allow for reproducible work. The default database location is in the hidden directory (`.pyani`):\n```bash\n$ tree .pyani\n.pyani\n\u2514\u2500\u2500 pyanidb\n```\n \nSubsequent `pyani` commands will assume this location for the database, but you can specify the location when creating a database, or using an existing database.\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999992114973377,
      "result": {
        "original_header": "3. Conduct ANI analysis",
        "type": "Text_excerpt",
        "value": "In this walkthrough, we'll run ANIm on the downloaded genomes, using the command:\n```bash\npyani anim -i C_blochmannia -o C_blochmannia_ANIm -v -l C_blochmannia_ANIm.log \\\n    --name \"C. blochmannia run 1\" \\\n    --labels C_blochmannia/labels.txt --classes C_blochmannia/classes.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9982717869006167,
      "result": {
        "original_header": "Rerunning the same analysis",
        "type": "Text_excerpt",
        "value": "You can test this for yourself by running the analysis command again, as below. You will see a number of messages indicating that genomes have been seen before, and that analyses performed before were skipped:\n```bash\n$ pyani anim -i C_blochmannia -o C_blochmannia_ANIm -v -l C_blochmannia_ANIm.log \\\n    --name \"C. blochmannia run 2\" \\\n    --labels C_blochmannia/labels.txt --classes C_blochmannia/classes.txt\nINFO: command-line: pyani anim -i C_blochmannia -o C_blochmannia_ANIm -v -l C_blochmannia_ANIm.log\nINFO: Running ANIm analysis\nINFO: Adding analysis information to database .pyani/pyanidb\nINFO: Current analysis has ID 2 in this database\nINFO: Identifying input genome/hash files:\n[\u2026]\nINFO: Adding genome data to database...\nWARNING: Genome already in database with this hash and path!\nWARNING: Using existing genome from database, row 1\n[\u2026]\nINFO: Complete pairwise comparison list:\n    [(1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (2, 3), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 6), (4, 5), (4, 6), (5, 6)]\nINFO: Excluding pre-calculated comparisons\nINFO: Comparisons still to be performed:\n    []\nINFO: All comparison results already present in database (skipping comparisons)\nINFO: Completed. Time taken: 0.211\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9834194050437994,
      "result": {
        "original_header": "Arguments assigned by Pyani",
        "type": "Text_excerpt",
        "value": "The following arguments will be automatically set:\n```bash\n-N job_name  # this is the value passed to `--name`\n-cwd\n-o ./stdout  # cwd/ + \"stdout\"\n-e ./stderr  # cwd/ + \"stderr\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9795033180279593,
      "result": {
        "original_header": "Modifiable arguments",
        "type": "Text_excerpt",
        "value": "The number of pairwise comparisons submitted per chunk can be modified using:\n```bash\n--SGEgroupsize *number*\n```\nThe job prefix to use can be modified using:\n```bash\n--jobprefix *prefix*\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8258948633170793,
      "result": {
        "original_header": "3. Conduct ANI analysis",
        "type": "Text_excerpt",
        "value": "In this walkthrough, we'll run ANIm on the downloaded genomes, using the command:\n```bash\npyani anim -i C_blochmannia -o C_blochmannia_ANIm -v -l C_blochmannia_ANIm.log \\\n    --name \"C. blochmannia run 1\" \\\n    --labels C_blochmannia/labels.txt --classes C_blochmannia/classes.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8649624671121535,
      "result": {
        "original_header": "5. Generating graphical output for ANI",
        "type": "Text_excerpt",
        "value": "The output of a `pyani` run can also be represented graphically, using the `plot` subcommand. For example, the command:\n```bash\npyani plot -o C_blochmannia_ANIm --run_id 1 -v --formats png,pdf\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/widdowquinn/pyani/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ani, average-nucleotide-identity, bioinformatics, classification, taxonomy, taxonomy-assignment"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License\n\nCopyright (c) 2010-2019 The James Hutton Institute\nCopyright (c) 2019-present University of Strathclyde\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyani"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "widdowquinn"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 644184,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2883,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2024-08-09T07:16:52Z",
        "date_published": "2024-08-09T08:04:18Z",
        "description": "Minor update to increment version number in the code.",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.13.1",
        "name": "v0.2.13.1",
        "release_id": 169466789,
        "tag": "v0.2.13.1",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.13.1",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/169466789",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/169466789",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.13.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2024-08-08T16:46:47Z",
        "date_published": "2024-08-08T16:49:28Z",
        "description": "This release fixes a deprecated `matplotlib` call, and deprecated `pandas` calls.",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.13",
        "name": "v0.2.13",
        "release_id": 169373274,
        "tag": "v0.2.13",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.13",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/169373274",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/169373274",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baileythegreen",
          "type": "User"
        },
        "date_created": "2022-05-18T21:30:21Z",
        "date_published": "2022-07-28T17:24:10Z",
        "description": "This release fixes Issue #177: input filenames that contain an open or a closed parenthesis produce the message: 'WARNING: At least one BLAST run failed. ANIb may fail.'",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.12",
        "name": "v0.2.12",
        "release_id": 73088471,
        "tag": "v0.2.12",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.12",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/73088471",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/73088471",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2021-06-22T14:18:41Z",
        "date_published": "2021-06-22T14:23:38Z",
        "description": "This release fixes issues due to `pandas` API changes.\r\n\r\n- exceptions used in `pyani` are now found in `pandas.errors` not `pandas.io.common`\r\n- changes to the testing API (will not affect most users)",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.11",
        "name": "v0.2.11",
        "release_id": 45033389,
        "tag": "v0.2.11",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.11",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/45033389",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/45033389",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2020-02-12T08:18:12Z",
        "date_published": "2020-02-12T08:21:50Z",
        "description": "This release fixes the bug reported in issue #178 that affected graphical output if all input filenames could be interpreted as floating point numbers.",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.10",
        "name": "v0.2.10",
        "release_id": 23595339,
        "tag": "v0.2.10",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.10",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/23595339",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/23595339",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2019-05-21T15:23:54Z",
        "date_published": "2019-05-21T15:28:25Z",
        "description": "This release fixes issue #132 (TETRA analysis failing when one or more 4-mers are missing from input sequences).\r\n\r\nThanks to @ghbio for the bug report!",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.9",
        "name": "v0.2.9",
        "release_id": 17492294,
        "tag": "v0.2.9",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.9",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/17492294",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/17492294",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2019-03-05T20:20:44Z",
        "date_published": "2019-03-05T20:23:45Z",
        "description": "[![DOI](https://zenodo.org/badge/28641481.svg)](https://zenodo.org/badge/latestdoi/28641481)\r\n\r\nThis release implements several changes:\r\n\r\n- fixed warnings about deprecated usage of `pandas` and other syntax\r\n- ANIb now respects the `--workers` argument (PR #127 from [\u00d6zcan Esen](https://github.com/ozcan))\r\n- distance matrices are converted from square to condensed form for linkage analysis\r\n- `matplotlib` calls use new API ('false', 'off' -> False; 'true', 'on' -> True)\r\n- deprecate legacy BLAST testing: `ANIblastall` commands are no longer supported\r\n- update concordance tests (issue #105)\r\n- extend test suites (issue #104)\r\n- modify ANIm concordance test to accommodate new command structure\r\n- add `delta-filter` wrapper for compatibility with SGE/OGE schedulers",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.8",
        "name": "v0.2.8",
        "release_id": 15929554,
        "tag": "v0.2.8",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/15929554",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/15929554",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2017-10-25T09:35:38Z",
        "date_published": "2017-10-25T09:39:06Z",
        "description": "This release fixes issue #97 in which numeric arguments to the GenBank download script were not recognised.\r\n\r\n[![DOI](https://zenodo.org/badge/28641481.svg)](https://zenodo.org/badge/latestdoi/28641481)",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.7",
        "name": "v0.2.7",
        "release_id": 8251228,
        "tag": "v0.2.7",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/8251228",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/8251228",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2017-09-21T17:47:43Z",
        "date_published": "2017-09-21T17:48:55Z",
        "description": "This release fixes a PyPI installation problem, resulting from a badly-built `.whl` wheel.",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.5",
        "name": "v0.2.5: Fix for installation problem",
        "release_id": 7843819,
        "tag": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/7843819",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/7843819",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2017-08-10T10:03:05Z",
        "date_published": "2017-08-10T10:06:20Z",
        "description": "* `ANIm` now uses `delta-filter` to remove alignments of repeat regions (issue #91)\r\n* added `--filter_exe` option to specify location of `delta-filter` utility (issue #91)\r\n* fixed `--format` option so that GenBank downloads work again (issue #89)\r\n* add `--SGEargs` option to `average_nucleotide_identity.py` for custom qsub settings\r\n* `README.md` badges now clickable\r\n* `--version` switch added to `average_nucleotide_identity.py`\r\n* FTP timeouts are now caught differently in `genbank_get_genomes_by_taxon.py`\r\n* Additional characters in NCBI FTP URIs now escaped in `genbank_get_genomes_by_taxon.py` - should be fewer failed downloads\r\n* Modified error messaging when `NUCmer` alignment fails\r\n* `average_nucleotide_identity.py` argument documentation improvements\r\n* Script now fails immediately if label or class files missing (issue #78)\r\n* Changes to `--noclobber` log behaviour (issue #79)\r\n* fixed `--rerender` code (issue #85)",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.4",
        "name": "v0.2.4: Bugfixes and other improvements",
        "release_id": 7345548,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/7345548",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/7345548",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2017-03-24T10:44:22Z",
        "date_published": "2017-03-24T10:45:20Z",
        "description": "The previous release (0.2.2) on PyPI had script shebangs that pointed to a local development Python, in the wheel and egg distribution files. It is not possible to replace those files on PyPI, so a new release was made to fix this issue, and the old packages withdrawn.\r\n\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.438012.svg)](https://doi.org/10.5281/zenodo.438012)",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.3",
        "release_id": 5857017,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/5857017",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/5857017",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2017-03-21T17:08:15Z",
        "date_published": "2017-03-21T17:09:26Z",
        "description": "* fix for issue #53 (--maxmatch has no effect)\r\n* fix to `genbank_get_genomes_by_taxon.py` to account for NCBI FTP location changes\r\n* fixed issue #52 (local variable bug)\r\n* fixed issued #49 (TETRA failure) and #51 (matplotlib bug)\r\n* add several tests and support for `codecov.io`, `landscape.io` and `Travis-CI`\r\n* removed requirement for `rpy2`\r\n* moved scripts to `bin/` subdirectory\r\n\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.437159.svg)](https://doi.org/10.5281/zenodo.437159)",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.2",
        "name": "v0.2.2: NCBI changes and bugfixes",
        "release_id": 5820680,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/5820680",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/5820680",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2016-09-21T13:21:21Z",
        "date_published": "2016-09-21T13:25:15Z",
        "description": "`v0.2.1` introduces minor changes with respect to `v0.2.0`:\n- `genbank_get_genomes_by_taxon.py` uses the new NCBI FTP locations, and will attempt to identify and inform the user about failed downloads.\n- `seaborn` output can now handle larger (>500 genomes) datasets\n- better handling of missing class information\n- adds a Hadamard product output\n- you can now rerender graphics without recalculation of alignments\n- alignment output is zipped into an archive by default\n\nThere are also several bugfixes (see `CHANGES.md` for more details)\n\n[![DOI](https://zenodo.org/badge/28641481.svg)](https://zenodo.org/badge/latestdoi/28641481)\n",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.1",
        "release_id": 4192413,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/4192413",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/4192413",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2016-05-02T16:49:21Z",
        "date_published": "2016-05-02T17:02:05Z",
        "description": "Version 0.2.0 introduces a number of changes with respect to the v0.1 series of releases. Notably:\n- v0.2.0 is for use with Python 3\n- a longstanding bug in the `--fragsize` option is fixed\n- several pull requests for enhancements are merged\n- `BLAST`/`nucmer` results are now written to a subdirectory of the output folder, and are compressed to save disk space\n- a script to download publicly-available genomes from NCBI is provided\n\n[![DOI](https://zenodo.org/badge/3795/widdowquinn/pyani.svg)](https://zenodo.org/badge/latestdoi/3795/widdowquinn/pyani)\n",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.2.0",
        "release_id": 3141605,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/3141605",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/3141605",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2015-10-31T12:34:27Z",
        "date_published": "2015-10-31T12:35:47Z",
        "description": "This bump fixes some bugs (issues #5 and #11), and updates installation instructions reflecting the upload of this package to PyPI.\n\n[![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.32985.svg)](http://dx.doi.org/10.5281/zenodo.32985)\n",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.1.3.2",
        "release_id": 2051162,
        "tag": "v0.1.3.2",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/2051162",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/2051162",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "widdowquinn",
          "type": "User"
        },
        "date_created": "2015-10-05T11:19:47Z",
        "date_published": "2015-10-05T11:27:26Z",
        "description": "Release made solely to obtain a Zenodo DOI (10.5281/zenodo.31812)\n\n[![DOI](https://zenodo.org/badge/3795/widdowquinn/pyani.svg)](https://zenodo.org/badge/latestdoi/3795/widdowquinn/pyani)\n",
        "html_url": "https://github.com/widdowquinn/pyani/releases/tag/v0.1.3.1",
        "release_id": 1911065,
        "tag": "v0.1.3.1",
        "tarball_url": "https://api.github.com/repos/widdowquinn/pyani/tarball/v0.1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/widdowquinn/pyani/releases/1911065",
        "value": "https://api.github.com/repos/widdowquinn/pyani/releases/1911065",
        "zipball_url": "https://api.github.com/repos/widdowquinn/pyani/zipball/v0.1.3.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Script: `average_nucleotide_identity.py`",
        "parent_header": [
          "`pyani`",
          "Running `pyani` version 0.2.x"
        ],
        "type": "Text_excerpt",
        "value": "The `average_nucleotide_identity.py` script - installed as part of this package - enables straightforward ANI analysis at the command-line, and uses the `pyani` module behind the scenes.\n\nYou can get a summary of available command-line options with `average_nucleotide_identity.py -h`\n\n```bash\n$ ./average_nucleotide_identity.py -h\nusage: average_nucleotide_identity.py [-h] [-o OUTDIRNAME] [-i INDIRNAME] [-v]\n                                      [-f] [-s FRAGSIZE] [-l LOGFILE]\n                                      [--skip_nucmer] [--skip_blastn]\n                                      [--noclobber] [--nocompress] [-g]\n                                      [--gformat GFORMAT] [--gmethod GMETHOD]\n                                      [--labels LABELS] [--classes CLASSES]\n                                      [-m METHOD] [--scheduler SCHEDULER]\n                                      [--workers WORKERS]\n                                      [--SGEgroupsize SGEGROUPSIZE]\n                                      [--maxmatch] [--nucmer_exe NUCMER_EXE]\n                                      [--blastn_exe BLASTN_EXE]\n                                      [--makeblastdb_exe MAKEBLASTDB_EXE]\n                                      [--blastall_exe BLASTALL_EXE]\n                                      [--formatdb_exe FORMATDB_EXE]\n                                      [--write_excel] [--subsample SUBSAMPLE]\n                                      [--seed SEED] [--jobprefix JOBPREFIX]\n\n\n[\u2026]\n```\n\nExample data and output can be found in the directory `test_ani_data`. The data are chromosomes of four isolates of *Caulobacter*. Basic analyses can be performed with the command lines:\n\n```bash\n./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIm_output -m ANIm -g\n./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIb_output -m ANIb -g\n./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_ANIblastall_output -m ANIblastall -g\n./average_nucleotide_identity.py -i tests/test_ani_data/ -o tests/test_TETRA_output -m TETRA -g\n```\n\nThe graphical output below, supporting assignment of `NC_002696` and `NC_011916` to the same species (*C.crescentus*), and the other two isolates to distinct species (`NC_014100`:*C.segnis*; `NC_010338`:*C.* sp K31), was generated with the command-line:\n\n```bash\n./average_nucleotide_identity.py -v -i tests/test_ani_data/ \\\n    -o tests/test_ANIm_output/ -g --gformat png,pdf,eps \\\n    --classes tests/test_ani_data/classes.tab \\\n    --labels tests/test_ani_data/labels.tab\n```\n\n![ANIm percentage identity for *Caulobacter* test data](tests/test_ani_data/ANIm_percentage_identity.png \"ANIm percentage identity\")\n![ANIm alignment coverage for *Caulobacter* test data](tests/test_ani_data/ANIm_alignment_coverage.png \"ANIm alignment coverage\")\n![ANIm alignment length for *Caulobacter* test data](tests/test_ani_data/ANIm_alignment_lengths.png \"ANIm alignment length\")\n![ANIm alignment similarity errors for *Caulobacter* test data](tests/test_ani_data/ANIm_similarity_errors.png \"ANIm alignment similarity\")\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Script: `genbank_get_genomes_by_taxon.py`",
        "parent_header": [
          "`pyani`",
          "Running `pyani` version 0.2.x"
        ],
        "type": "Text_excerpt",
        "value": "The script `genbank_get_genomes_by_taxon.py`, installed by this package, enables download of genomes from NCBI, specified by taxon ID. The script will download all available assemblies for taxa at or below the specified node in the NCBI taxonomy tree.\n\nCommand-line options can be viewed using:\n\n```bash\n$ genbank_get_genomes_by_taxon.py -h\nusage: genbacnk_get_genomes_by_taxon.py [-h] [-o OUTDIRNAME] [-t TAXON] [-v]\n                                        [-f] [--noclobber] [-l LOGFILE]\n                                        [--format FORMAT] [--email EMAIL]\n                                        [--retries RETRIES]\n                                        [--batchsize BATCHSIZE]\n[\u2026]\n```\n\nFor example, the NCBI taxonomy ID for *Caulobacter* is 75, so all publicly-available *Caulobacter* sequences can be obtained using the command-line:\n\n```bash\n$ genbank_get_genomes_by_taxon.py -o Caulobacter_downloads -v -t 75 -l Caulobacter_downloads.log --email me@my.email.domain\nINFO: genbank_get_genomes_by_taxon.py: Mon Apr 18 17:22:54 2016\nINFO: command-line: /Users/lpritc/Virtualenvs/pyani3/bin/genbank_get_genomes_by_taxon.py -o Caulobacter_downloads -v -t 75 -l Caulobacter_downloads.log --email me@my.email.domain\nINFO: Namespace(batchsize=10000, email='me@my.email.domain', force=False, format='gbk,fasta', logfile='Caulobacter_downloads.log', noclobber=False, outdirname='Caulobacter_downloads', retries=20, taxon='75', verbose=True)\nINFO: Set NCBI contact email to me@my.email.domain\nINFO: Creating directory Caulobacter_downloads\nINFO: Output directory: Caulobacter_downloads\nINFO: Passed taxon IDs: 75\nINFO: Entrez ESearch with query: txid75[Organism:exp]\nINFO: Entrez ESearch returns 29 assembly IDs\nINFO: Identified 29 unique assemblies\nINFO: Taxon 75: 29 assemblies\n[\u2026]\nINFO: Assembly 639581: 271 contigs\nINFO: Assembly 233261: 17 contigs\nINFO: Assembly 575291: 48 contigs\nINFO: Mon Apr 18 17:25:46 2016\nINFO: Done.\n```\n\n**NOTE:** You must provide a valid email to identify yourself to NCBI for troubleshooting.\n\nThe number of attempted retries for each download, and the size of a batch download can be modified. By default, the script will attempt 20 download retries, and obtain sequences in batches of 10,000.\n\n-----\n"
      },
      "source": "https://raw.githubusercontent.com/widdowquinn/pyani/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "usage",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:54:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 192
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}