{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "scSemiCluster"
        ],
        "type": "Text_excerpt",
        "value": "-----\nOur paper is published in Bioinformatics. The details can be seen in <a href=\"https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btaa908/5937858\">article</a>. Please consider citing it.\n"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xuebaliang/scSemiCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "scSemiCluster"
        ],
        "type": "Text_excerpt",
        "value": "-----\nAuthor email: clandzyy@pku.edu.cn\n"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-30T01:16:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-15T07:08:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cell type classification and annotation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "scSemiCluster"
        ],
        "type": "Text_excerpt",
        "value": "-----\nThe identification of cell types plays an essential role in the analysis of scRNA-seq data, which, in turn, influences the discovery of regulatory genes that induce heterogeneity. Here, we propose a flexible single cell semi-supervised clustering and annotation framework, scSemiCluster. Notably, without explicit feature alignment and batch effect correction,  scSemiCluster outperforms other state-of-the-art, single-cell supervised classification and semi-supervised clustering annotation algorithms in both simulation and real data. In addition, scSemiCluster is suitable for cell annotation on single data and cross-data. \n"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xuebaliang/scSemiCluster/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xuebaliang/scSemiCluster/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xuebaliang/scSemiCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scSemiCluster"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/data/result/simulation_visualization.png"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xuebaliang/scSemiCluster/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scSemiCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xuebaliang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 37446,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "parent_header": [
          "scSemiCluster"
        ],
        "type": "Text_excerpt",
        "value": "-----\nPython >= 3.6\n\nTensorflow (GPU version) >= 1.14\n\nKeras >= 2.2\n\nigraph >= 0.1.11\n\nscanpy >= 1.4.3\n\nscikit-learn >= 0.22.2\n"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:50:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "scSemiCluster"
        ],
        "type": "Text_excerpt",
        "value": "-----\nWe have provided some explanatory descriptions for the codes implementation. Here, we use a mixed simulation data with two batches and seven cell types generated by Splatter  to give an example. You can download this data from folder \"scSemiCluster/data/simulation\". You just need to download all code files and focus on the \"scSemiCluster_model.py\" file. We take the batch 1 as the reference data and batch 2 as target data. The sample size of reference data is half of target data. And the size of each cell type is arranged in a proportional sequence with a ratio of 0.8. You can run the following code in your command lines:\n\npython scSemiCluster_model.py\n\nAfter finishing the entire training, you can get that the annotation accuracy and clustering ARI on the target data is 0.9748 and 0.9522, respectively. Besides, the target prediction information is in the \"target_prediction_matrix\" variable. It is a data frame, include four columns, they are true label, true cell type, cluster label, annotation cell type. You can save it in .csv file. In order to show that scSemiCluster deals with the batch effects well,  we use UMAP to visualize the learned latent space representation in a two dimensional plane. We also use the preprocessed data after selecting highly variable genes to reduce to 32 dimensions by PCA algorithm as the basis for the existence of batch effects. From the results in the figure below, SemiCluster not only pulls the seven cell populations apart, but also guarantees the reference data and target data are well mixed in each cell type. This demonstrates that our method can be an effective batch effect correction algorithm. In the future, we would continue to improve our tool to help our users as much as possible.\n\n![model](https://github.com/xuebaliang/scSemiCluster/blob/master/data/result/simulation_visualization.png)\n"
      },
      "source": "https://raw.githubusercontent.com/xuebaliang/scSemiCluster/master/README.md",
      "technique": "header_analysis"
    }
  ]
}