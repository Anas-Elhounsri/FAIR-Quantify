{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "RepairSig"
        ],
        "type": "Text_excerpt",
        "value": "Damian Wojtowicz, Jan Hoinka, Bayarbaatar Amgalan, Yoo-Ah Kim, Teresa M. Przytycka, [RepairSig: Deconvolution of DNA damage and repair contributions to the mutational landscape of cancer](https://www.sciencedirect.com/science/article/pii/S2405471221002829), Cell Systems, 2021.\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/RepairSig"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-05T21:21:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-07T19:50:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9751618075412505,
      "result": {
        "original_header": "RepairSig",
        "type": "Text_excerpt",
        "value": "Reference implementation of RepairSig, a computational approach that\naccounts for the non-additivity of  DNA damage and repair processes by\nmodeling the composition of primary mutagenic processes corresponding to\nDNA damage processes with normally functioning DNA repair mechanism and\nsecondary mutagenic processes which correspond to the deficiency of the\nDNA repair mechanism. RepairSig assumes signatures of the primary\nprocesses are known while signatures of the secondary processes are to be\ninferred. \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9033741998127873,
      "result": {
        "original_header": "Note",
        "type": "Text_excerpt",
        "value": "This project has been set up using PyScaffold 4.0. For details and usage\ninformation on PyScaffold see https://pyscaffold.org/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/RepairSig/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/RepairSig/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncbi/RepairSig"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepairSig"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RepairSig"
        ],
        "type": "Text_excerpt",
        "value": "Clone the repository to a local folder, then use pip to install the package locally. RepairSig will be commited to PyPI soon.\n```bash\ngit clone https://github.com/ncbi/RepairSig.git\ncd RepairSig\npip install -e ./\n\nrepairsig -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/RepairSig/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepairSig"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 56192,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "drivenbyentropy",
          "type": "User"
        },
        "date_created": "2021-04-27T22:26:57Z",
        "date_published": "2021-07-04T19:24:07Z",
        "description": "Reference implementation of RepairSig corresponding to the Cell Systems publication. ",
        "html_url": "https://github.com/ncbi/RepairSig/releases/tag/v1.0",
        "name": "RepairSig Reference Implementation ",
        "release_id": 45681296,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/ncbi/RepairSig/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ncbi/RepairSig/releases/45681296",
        "value": "https://api.github.com/repos/ncbi/RepairSig/releases/45681296",
        "zipball_url": "https://api.github.com/repos/ncbi/RepairSig/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "RepairSig"
        ],
        "type": "Text_excerpt",
        "value": "RepairSig requires Python 3.x and the following packages installed on your system:\n\n* Tensorflow 2.x\n* Numpy\n* Pandas\n* Matplotlib\n* Configargparse\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:52:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "RepairSig"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nrepairsig -h\nusage: repairsig [-h] -M MATRIX [MATRIX ...] [-P PRIMARY] [-N NUMPRI]\n                 [-Q SECONDARY] [-J NUMSEC] [-l] [-d DELIMITER] [-O OUT]\n                 [-v {CRITICAL,ERROR,WARNING,INFO,DEBUG}]\n                 [-e EPOCHS [EPOCHS ...]] [-s STEPSIZES [STEPSIZES ...]]\n                 [-o {adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} [{adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} ...]]\n                 [-c CONFIG]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -M MATRIX [MATRIX ...], --matrix MATRIX [MATRIX ...]\n                        Mutation count matrix, specified as mutational\n                        profiles for each of the L genomic regions\n  -l, --labels          Whether the input contains labels. If set, RepairSig\n                        will treat the first row/column of each input matrix\n                        as labels and use this information when generating the\n                        output files.\n  -d DELIMITER, --delimiter DELIMITER\n                        The delimiter used to separate the column in the input\n                        matrices. Default is tabulator. This delimiter will\n                        also be used for the output files.\n  -O OUT, --out OUT     Path to output folder. Folder will be created if it\n                        does not not exist. If omitted, the current folder\n                        will be used as the output directory. Existing files\n                        will be overwritten.\n  -v {CRITICAL,ERROR,WARNING,INFO,DEBUG}, --verbosity {CRITICAL,ERROR,WARNING,INFO,DEBUG}\n                        Set the verbosity level defining the detail of\n                        RepairSig messages to stdout.\n  -c CONFIG, --config CONFIG\n                        Config file path\n\nPrimary signature options (at least one option required):\n  -P PRIMARY, --primary PRIMARY\n                        File containing the primary signature matrix of size\n                        NxK. If omitted, primary signatures will be infered\n                        according to -N.\n  -N NUMPRI, --numpri NUMPRI\n                        Number of primary signatures to infer. If -P is\n                        specificed in addition to -N, RepairSig will infer N\n                        signatures while keeping the ones defined in P as\n                        static.\n\nSecondary signature options (at least one option required):\n  -Q SECONDARY, --secondary SECONDARY\n                        File containing the primary signature matrix of size\n                        JxK\n  -J NUMSEC, --numsec NUMSEC\n                        Number of secondary signatures to infer. If -Q is\n                        specified in addition to -J, RepairSig will infer J\n                        secondary signatures while keeping the ones in Q\n                        static. If J=0, and -Q is ommited, RepairSig defaults\n                        to the linear model.\n\nOptimizer options (all or none are required):\n  -e EPOCHS [EPOCHS ...], --epochs EPOCHS [EPOCHS ...]\n                        List of integers specifying the number of epochs in\n                        each optimization bracket. List must be of same size\n                        as -s and -o\n  -s STEPSIZES [STEPSIZES ...], --stepsizes STEPSIZES [STEPSIZES ...]\n                        List of integers specifying the stepsize for the\n                        corresponding bracket defined with -e. List must be of\n                        same size as -e and -o\n  -o {adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} [{adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} ...], --optimizers {adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} [{adadelta,adagrad,adam,adamax,nadam,rmaprop,sgd} ...]\n                        List of optimizers to use in each bracket defined with\n                        -e. List must be of same size as -e and -s\n\nArgs that start with '--' (eg. --matrix) can also be set in a config file\n(./src/repairsig/data/default.conf or specified via -c). Config\nfile syntax allows: key=value, flag=true, stuff=[a,b,c] (for details, see\nsyntax at https://goo.gl/R74nmi). If an arg is specified in more than one\nplace, then commandline values override config file values which override\ndefaults. \n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "RepairSig"
        ],
        "type": "Text_excerpt",
        "value": "To apply RepairSig on BRCA whole-genome sequencing data (Nik-Zainal et al., Nature 2016) with local regional activity using\n\n* strand-specific direction of gene transcription, run\n```\nrepairsig -c test_data/BRCA_T.conf -J 2 -O output_T\n```\n* discretized replication timing data, run\n```\nrepairsig -c test_data/BRCA_RT.conf -J 2 -O output_RT\n```\n\nMost input and parameters of the model (e.g. mutation counts, primary signatures) are defined in the provided config files via -c.\nHere, the number of secodary signatures to be inferred is 2.\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/RepairSig/main/README.md",
      "technique": "header_analysis"
    }
  ]
}