{
  "application_domain": [
    {
      "confidence": 18.75,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite iWhale? :blue_book:",
        "parent_header": [
          "iWhale"
        ],
        "type": "Text_excerpt",
        "value": "   Binatti A, Bresolin S, Bortoluzzi S, Coppe A.\n   [iWhale: A Computational Pipeline Based on Docker and SCons for Detection and Annotation of Somatic Variants in Cancer WES](https://academic.oup.com/bib/advance-article/doi/10.1093/bib/bbaa065/5840042). *Briefings in Bioinformics*. 2020 May 20:bbaa065. doi: 10.1093/bib/bbaa065.\n \n # iWhale data preparation\n\nDownload iWhale from [Docker Hub](https://hub.docker.com/):\n\n```\ndocker pull alexcoppe/iwhale\n```\nThe working directory **must** contain the following elements:\n- two directories for each sample: one for **tumor** and the other one for **control** samples. Each directory **must** include **two** fastq files \n- a text file called **tumor_control_samples.txt**\n- a python file called **configuration.py**\n\nThe working directory **must not contain** other directories except the ones of the samples indicated above\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and setting of reference genome",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The reference genome can be downloaded from [ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/](ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/) by using these commands:\n\n```\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz\n\n```\nThe reference genome of Epstein-Barr virus (EBV) is available in FASTA format from [https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta](https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta)\n\nCompress EBV reference genome into a .gz file\n```\n\ngzip EBV_reference_genome.fa\n```\nJoin all chromosomes into one big FASTA file with all human genome in it from FASTA headers\n\n```\nzcat Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz EBV_reference_genome.fa.gz > reference.fa\n\n```"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alexcoppe/iWhale"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-04T21:06:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-08T19:06:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":whale: Dockerized WES pipeline for variants identification in mathced tumor-normal samples"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Creation of the reference.fa.fai index.",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The produced files is:\n - reference.fa.fai\n\n```\nsamtools faidx reference.fa\n```\n "
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9582880743503985,
      "result": {
        "original_header": "Dockerized Whole Exome Sequencing (WES) pipeline",
        "type": "Text_excerpt",
        "value": "A pipeline for Whole Exome Sequencing (WES) variants identification in mathced tumor-normal samples. It runs into a [Docker](https://www.docker.com) container, ready to be downloaded and used on any operating system \nsupported by [Docker](https://www.docker.com/). \nThree variant calling softwares are used by the pipeline: [Mutect2](https://software.broadinstitute.org/gatk/gatk4) , [VarScan2](http://dkoboldt.github.io/varscan/), and [Strelka2](https://github.com/Illumina/strelka) and the user is allowed to choose which to use and change their default settings. \nIt runs on both genomes versions: **GRCh37** and **GRCh38** (beta version). \nA **pdf manual** for iWhale is available [here](http://compgen.bio.unipd.it/downloads/iwhale.pdf) \nAn image of the iWhale pipeline diagram is available [here](https://github.com/alexcoppe/iWhale/blob/master/iwhale.jpg?raw=true) \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9740150744335454,
      "result": {
        "original_header": "configuration.py file structure",
        "type": "Text_excerpt",
        "value": "The **configuration.py** file is essential. It is used to set parameters of the tools used by iWhale. All the possible parameters that you can set are gathered and explained in this file: [configuration.py](https://raw.githubusercontent.com/alexcoppe/iWhale/master/configuration.py). \nFor GRCh37 you can use a configuration.py file with only e parameter set (*exomeRegions*): **the exome regions in bed format, which is a very important parameter (the only one you must have to specify for GRCh37 version of the genome)**. To do it use the *exomeRegions* parameter which default value is:\n```\nexomeRegions = \"exome_regions.bed\"\n```\n**You have to change it to the exome interval used by your sequencing experiment** (SureSelect_Human_All_Exon_V5 in the example below).\n```\nexomeRegions = \"SureSelect_Human_All_Exon_V5.bed\"\n```\niWhale **also** needs the gziped version (made by bgzip) of the file and the **.tbi** index done using with these parameters (you need *tabix* and *bgzip* commands):\n```\nbgzip -c SureSelect_Human_All_Exon_V5.bed > SureSelect_Human_All_Exon_V5.bed.gz\ntabix -p bed -S 3  SureSelect_Human_All_Exon_V5.bed.gz\n```\nEvery MuTect2 and VarScan2 parameters can be set by using the **configuration.py** file. For example:\nBASH4*\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9360420363751756,
      "result": {
        "original_header": "Launching iWhale",
        "type": "Text_excerpt",
        "value": "The docker's run command is used to mention that we want to create an instance of an image. The image is then called a container. This is the command to launch an iWhale container:\n```\ndocker run --rm -it --name iwhalexp -v $(pwd):/working -v /home/user/databases:/annotations alexcoppe/iwhale\n```\n- --rm removes the container (it is optional)\n- -it used for interactive processes (like a shell)\n- --name used to name the container. If you do not assign a container name with the --name option, then the daemon generates a random string name for you\n- -v used to share the two folders that iWhale needs: the **working directory** (used in the example the current directory by $(pwd)) and the **folder including the databases files** (in the example, /home/user/databases)   \n- iwhale is the name of the docker image to be run\n- **iwhalexp** is the name of the iWhale docker container while **iwhale** is the name of the image \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9150032960598791,
      "result": {
        "original_header": "Testing the Docker image",
        "type": "Text_excerpt",
        "value": "You can download a small random sample (107M) in [tgz](http://compgen.bio.unipd.it/downloads/iwhale_example.tgz) format or as a [zip](http://compgen.bio.unipd.it/downloads/iwhale_example.zip) file for a fast testing of iWhale. It contains 1 simulated small tumor (*tumor_sample*) and 1 control sample (*control_sample*), a *configuration.py* file and a *tumor_control_samples.txt* files ready.\nThen do the following steps: \n4) Download the *CosmicCodingMuts.vcf.gz* and *cancer_gene_census.csv* files from [COSMIC](https://cancer.sanger.ac.uk/cosmic/download)  **version 37** or **version 38** of the genome using **your credentials**. You need to create a **.tbi** file from the *CosmicCodingMuts.vcf.gz* with these commands (needed the [tabix](http://www.htslib.org/doc/tabix.html) and [bgzip](http://www.htslib.org/doc/bgzip.html) softwares from [Samtools](http://www.htslib.org/)):\n```\ngunzip CosmicCodingMuts.vcf.gz\nbgzip -c CosmicCodingMuts.vcf > CosmicCodingMuts.vcf.gz\ntabix -p vcf CosmicCodingMuts.vcf.gz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8414691695271096,
      "result": {
        "original_header": "Re-launching iWhale",
        "type": "Text_excerpt",
        "value": "In case of iWhale accidentally stopped, you have to re-launch the same Docker container that was running before stopping. To do this use the following command:\n```\ndocker start -a iwhalexp\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999796787396741,
      "result": {
        "original_header": "Software versions currently used",
        "type": "Text_excerpt",
        "value": "| Program        | Description| Version |\n| ------------- |:-------------| :-------------| \n[Burrows-Wheeler Aligner (BWA)](http://bio-bwa.sourceforge.net/) |BWA is a software package for mapping low-divergent sequences against a large reference genome.| 0.7.17 |\n[Picard](https://broadinstitute.github.io/picard/) | A set of command line tools for manipulating high-throughput sequencing (HTS) data and formats.| 2.17.11 |\n[GATK4](https://software.broadinstitute.org/gatk/gatk4) | GATK4 is the first and only open-source software package that covers all major variant classes for both germline and cancer genome analysis. | 4.0.6.0 |\n[GATK3](https://gatkforums.broadinstitute.org/gatk/categories/gatk-guide) | A variety of tools with a primary focus on variant discovery and genotyping. | 3.8-1 |\n[Strelka2](https://github.com/Illumina/strelka) | Strelka2 is a fast and accurate small variant caller optimized for analysis of germline variation in small cohorts and somatic variation in tumor/normal sample pairs. | 2.9.2 |\n[VarScan](http://dkoboldt.github.io/varscan/)| VarScan is a platform-independent software tool developed at the Genome Institute at Washington University to detect variants in NGS data. | 2.4.2 |\n[SnpEff](http://snpeff.sourceforge.net/) | Genomic variant annotations and functional effect prediction toolbox. | 4_3t |\n[bedtools](https://bedtools.readthedocs.io/en/latest/)|Collectively, the bedtools utilities are a swiss-army knife of tools for a wide-range of genomics analysis tasks. | 2.17.0 | \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8196842167580789,
      "result": {
        "original_header": "Databases currently used",
        "type": "Text_excerpt",
        "value": "iWhale uses databases and sequences indicated in the table below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980795926805273,
      "result": {
        "original_header": "GRCh37",
        "type": "Text_excerpt",
        "value": "| Sequences or Databases | Description| Version |\n| ------------- |:-------------| :-------------| \n| [Human genome database](http://hgdownload.cse.ucsc.edu/goldenPath/hg19/chromosomes/) |Feb. 2009 assembly of the human genome (hg19,GRCh37 Genome Reference Consortium Human Reference 37|  hg19 or GRCh37|\n|[dbSNP](https://www.ncbi.nlm.nih.gov/snp)| dbSNP contains human single nucleotide variations, microsatellites, and small-scale insertions and deletions | All_20180418.vcf.gz|\n|[gnomAD](https://gnomad.broadinstitute.org/)| The Genome Aggregation Database (gnomAD), developed by an international coalition of investigators, with the goal of aggregating and harmonizing both exome and genome sequencing data from a wide variety of large-scale sequencing projects |2018-05-22|\n|[SnpEff GRCh37](http://snpeff.sourceforge.net/index.html)| SnpEff annotation for the human genome reference genome GRCh37)| GRCh37 |\n|[ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/)| ClinVar aggregates information about genomic variation and its relationship to human health |20190311|\n|[COSMIC](https://cancer.sanger.ac.uk/cosmic)|COSMIC, the Catalogue Of Somatic Mutations In Cancer, is the world's largest and most comprehensive resource for exploring the impact of somatic mutations in human cancer|v89|\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985307772803592,
      "result": {
        "original_header": "GRCh38",
        "type": "Text_excerpt",
        "value": "| Sequences or Databases | Description| Version |\n| ------------- |:-------------| :-------------| \n| [Human genome database](ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/) | GRCh38 version of the human genome |  hg19 or GRCh37|\n|[dbSNP](https://www.ncbi.nlm.nih.gov/snp)| dbSNP contains human single nucleotide variations, microsatellites, and small-scale insertions and deletions | All_20180418.vcf.gz|\n|[gnomAD](https://gnomad.broadinstitute.org/)| The Genome Aggregation Database (gnomAD), developed by an international coalition of investigators, with the goal of aggregating and harmonizing both exome and genome sequencing data from a wide variety of large-scale sequencing projects |2.1|\n|[SnpEff GRCh38](http://snpeff.sourceforge.net/index.html)| SnpEff annotation for the human genome reference genome GRCh38)| GGRCh38.86 |\n|[ClinVar](https://www.ncbi.nlm.nih.gov/clinvar/)| ClinVar aggregates information about genomic variation and its relationship to human health |20200316|\n|[COSMIC](https://cancer.sanger.ac.uk/cosmic)|COSMIC, the Catalogue Of Somatic Mutations In Cancer, is the world's largest and most comprehensive resource for exploring the impact of somatic mutations in human cancer|v90|\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Annotation data download",
        "parent_header": [
          "iWhale"
        ],
        "type": "Text_excerpt",
        "value": "Annotation data, except COSMIC files, can be downloaded from compgen.bio.unipd.it.\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GRCh37 genome",
        "parent_header": [
          "iWhale",
          "Annotation data download"
        ],
        "type": "Text_excerpt",
        "value": "For the GRCh37 genome this are the links:\n\n- Tar.gz version: [http://compgen.bio.unipd.it/downloads/annotations.tar.gz](http://compgen.bio.unipd.it/downloads/annotations.tar.gz)\n- Zip version: [http://compgen.bio.unipd.it/downloads/annotations.zip](http://compgen.bio.unipd.it/downloads/annotations.zip)\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GRCh38 genome (Beta Version)",
        "parent_header": [
          "iWhale",
          "Annotation data download"
        ],
        "type": "Text_excerpt",
        "value": "For the GRCh38 genome this are the links:\n- Tar.gz version: [http://compgen.bio.unipd.it/downloads/annotations_GRCh38.tar.gz](http://compgen.bio.unipd.it/downloads/annotations_GRCh38.tar.gz)\n\nDecompression takes a while. The version of used databases are listed below (\"Databases currently used\" section).\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "COSMIC annotation files",
        "parent_header": [
          "iWhale",
          "Annotation data download"
        ],
        "type": "Text_excerpt",
        "value": "COSMIC files, which are free only for academic researchers, can be downloaded from [https://cancer.sanger.ac.uk/cosmic/download](https://cancer.sanger.ac.uk/cosmic/download) after sign up and login. The needed files are:\n- *CosmicCodingMuts.vcf.gz*\n- *cancer_gene_census.csv*\n- *CosmicCodingMuts.vcf.gz.tbi*\n\n**Download the right version (GRCh38 or GRCh37) based on the data you are using\n**The *CosmicCodingMuts.vcf.gz.tbi* should be made by the user. See the Testing the Docker image** section to see how to make it.\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and setting of reference genome",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The reference genome can be downloaded from [ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/](ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/) by using these commands:\n\n```\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz\n\n```\nThe reference genome of Epstein-Barr virus (EBV) is available in FASTA format from [https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta](https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta)\n\nCompress EBV reference genome into a .gz file\n```\n\ngzip EBV_reference_genome.fa\n```\nJoin all chromosomes into one big FASTA file with all human genome in it from FASTA headers\n\n```\nzcat Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz EBV_reference_genome.fa.gz > reference.fa\n\n```"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "dbSNP download:",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "```\nwget ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b151_GRCh38p7/VCF/All_20180418.vcf.gz \n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Removing *chr* from dbSNP downloaded file (from chr1 to 1)",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "```\ngunzip All_20180418.vcf.gz\ncat All_20180418.vcf | sed 's/>chr/>/' > All_20180418_nochr.vcf\n```"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download of gnomAD data",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "Download gnomAD (version 2.0.2) data. \n\n```\nwget http://compgen.bio.unipd.it/downloads/gnomad.exomes.r2.0.2.sites.vcf.gz\nwget http://compgen.bio.unipd.it/downloads/gnomad.exomes.r2.0.2.sites.vcf.gz.tbi\n```\nThe **gnomad.exomes.r2.0.2.sites.vcf.gz** is compressed by *bgzip* and indexed by *tabix*.  \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download of ClinVar data",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "Download of ClinVar data from [https://ftp.ncbi.nlm.nih.gov/pub/clinvar/vcf_GRCh38/](https://ftp.ncbi.nlm.nih.gov/pub/clinvar/vcf_GRCh38/).\nObtained files:\n - clinvar.vcf.gz\n - clinvar.vcf.gz.tbi \n \nTheir date portion could be different, if so, remember to put the right filename in the configuration.py file:\n\n```\nclinvar = \"clinvar.vcf.gz\"\n```"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download of COSMIC data",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "COSMIC files, which are free only for academic researchers, can be downloaded from [https://cancer.sanger.ac.uk/cosmic/download](https://cancer.sanger.ac.uk/cosmic/download) after sign up and login. The needed files are:\n- *CosmicCodingMuts.vcf.gz*\n- *cancer_gene_census.csv*\n\nMaking the *.tbi* file:\n```\ngunzip CosmicCodingMuts.vcf.gz\njava -jar SnpSift.jar rmInfo CosmicCodingMuts.vcf AA > CosmicCodingMuts_noAA.vcf\nmv CosmicCodingMuts_noAA.vcf CosmicCodingMuts.vcf\nbgzip -c CosmicCodingMuts.vcf > CosmicCodingMuts.vcf.gz\ntabix -p vcf CosmicCodingMuts.vcf.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alexcoppe/iWhale/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alexcoppe/iWhale/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alexcoppe/iWhale"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iWhale"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and setting of reference genome",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The reference genome can be downloaded from [ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/](ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/) by using these commands:\n\n```\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz\n\n```\nThe reference genome of Epstein-Barr virus (EBV) is available in FASTA format from [https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta](https://www.ncbi.nlm.nih.gov/nuccore/AJ507799.2?report=fasta)\n\nCompress EBV reference genome into a .gz file\n```\n\ngzip EBV_reference_genome.fa\n```\nJoin all chromosomes into one big FASTA file with all human genome in it from FASTA headers\n\n```\nzcat Homo_sapiens.GRCh38.dna_sm.chromosome.1.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.2.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.3.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.4.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.5.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.6.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.7.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.8.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.9.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.10.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.11.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.12.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.13.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.14.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.15.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.16.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.17.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.18.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.19.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.20.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.21.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.22.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.X.fa.gz Homo_sapiens.GRCh38.dna_sm.chromosome.Y.fa.gz \\\nHomo_sapiens.GRCh38.dna_sm.chromosome.MT.fa.gz EBV_reference_genome.fa.gz > reference.fa\n\n```"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9032317301608614,
      "result": {
        "original_header": "Dockerized Whole Exome Sequencing (WES) pipeline",
        "type": "Text_excerpt",
        "value": "It runs on both genomes versions: **GRCh37** and **GRCh38** (beta version). \nA **pdf manual** for iWhale is available [here](http://compgen.bio.unipd.it/downloads/iwhale.pdf) \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9773769065427843,
      "result": {
        "original_header": "configuration.py file structure",
        "type": "Text_excerpt",
        "value": "**The configuration.py file is set for GRCh38** genome analyses. \nFor GRCh37 you can use a configuration.py file with only e parameter set (*exomeRegions*): **the exome regions in bed format, which is a very important parameter (the only one you must have to specify for GRCh37 version of the genome)**. To do it use the *exomeRegions* parameter which default value is:\n```\nexomeRegions = \"exome_regions.bed\"\n```\n**You have to change it to the exome interval used by your sequencing experiment** (SureSelect_Human_All_Exon_V5 in the example below).\n```\nexomeRegions = \"SureSelect_Human_All_Exon_V5.bed\"\n```\niWhale **also** needs the gziped version (made by bgzip) of the file and the **.tbi** index done using with these parameters (you need *tabix* and *bgzip* commands):\n```\nbgzip -c SureSelect_Human_All_Exon_V5.bed > SureSelect_Human_All_Exon_V5.bed.gz\ntabix -p bed -S 3  SureSelect_Human_All_Exon_V5.bed.gz\n```\nEvery MuTect2 and VarScan2 parameters can be set by using the **configuration.py** file. For example:\nBASH4*\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9661773916304902,
      "result": {
        "original_header": "Testing the Docker image",
        "type": "Text_excerpt",
        "value": "1) Install **Docker Community Edition (CE)** in your computer. Instructions and downloading links are here: [macOS](https://hub.docker.com/editions/community/docker-ce-desktop-mac), [Windows](https://hub.docker.com/editions/community/docker-ce-desktop-windows) and [Ubuntu](https://docs.docker.com/install/linux/docker-ce/ubuntu/)  \n4) Download the *CosmicCodingMuts.vcf.gz* and *cancer_gene_census.csv* files from [COSMIC](https://cancer.sanger.ac.uk/cosmic/download)  **version 37** or **version 38** of the genome using **your credentials**. You need to create a **.tbi** file from the *CosmicCodingMuts.vcf.gz* with these commands (needed the [tabix](http://www.htslib.org/doc/tabix.html) and [bgzip](http://www.htslib.org/doc/bgzip.html) softwares from [Samtools](http://www.htslib.org/)):\n```\ngunzip CosmicCodingMuts.vcf.gz\nbgzip -c CosmicCodingMuts.vcf > CosmicCodingMuts.vcf.gz\ntabix -p vcf CosmicCodingMuts.vcf.gz\n```\n \n5) Finally launch iWhale from the *iwhale_example* directory with a command similar to the following one. Just remember that the path indicated in the command, */path_to_user_annotations_directory*, should be changed to the **real path** were you decompressed the **annotations.tar.gz** file, for example */home/user/annotations*: \nVersion **GRCh38**: \n**Download the [configuration.py](https://raw.githubusercontent.com/alexcoppe/iWhale/master/configuration.py) file which is required to run the GRCh38, put it in the analyses directory and run:**\n```\ndocker run --rm -it --name iwhalexp -v $(pwd):/working -v /path_to_user_annotations_directory_38:/annotations alexcoppe/iwhale \n```\n\nPaths in Windows should be written differently. For example:\n```\ndocker run --rm -it --name iwhalexp -v c:/Users:/working -v c:/Users/annotations:/annotations alexcoppe/iwhale \n```\nRead [Get started with Docker for Windows](https://docs.docker.com/docker-for-windows/) for a tutorial on using Docker on Windows.\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8409926381837876,
      "result": {
        "original_header": "Re-launching iWhale",
        "type": "Text_excerpt",
        "value": "In case of iWhale accidentally stopped, you have to re-launch the same Docker container that was running before stopping. To do this use the following command:\n```\ndocker start -a iwhalexp\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8077984016301195,
      "result": {
        "original_header": "Databases currently used",
        "type": "Text_excerpt",
        "value": "iWhale uses databases and sequences indicated in the table below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alexcoppe/iWhale/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, biology, docker, genomics, indels, scons, snps, tumor, whole-exome-sequencing"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/iwhale.jpg"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iWhale"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "alexcoppe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 13991,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3549,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:23:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting database files and indexing by yourself (only for the braves)",
        "type": "Text_excerpt",
        "value": "All commands are launch from the directory containing the downloaded data. **Many of the command take a LOT OF TIME to conclude**.\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BWA indexing of Human genome.",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "It produces many files:\n- reference.fa.amb\n- reference.fa.ann\n- reference.fa.bwt\n- reference.fa.pac\n- reference.fa.sa\n\nThis step takes a lot of time:\n\n```\nbwa index reference.fa\n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Index of the FASTA file with human genome data for picard.",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The produced files is:\n - reference.dict\n\n```\njava -jar ~/local/picard.jar CreateSequenceDictionary R=reference.fa O=reference.dict\n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Removing AA field in INFO from dbSNP file with SnpSift",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "The new version of dbSNP included AA field in INFO with special characters not allowed in VCF files\n\n```\njava -jar SnpSift.jar rmInfo All_20180418_nochr.vcf AA > All_20180418_noAA.vcf\nmv All_20180418_noAA.vcf All_20180418.vcf\n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compressing and indexing dbSNP VCF with bgzip and tabix.",
        "parent_header": [
          "Getting database files and indexing by yourself (only for the braves)"
        ],
        "type": "Text_excerpt",
        "value": "Need to install bgzip and tabix in your computer.\nProduced file:\n \n - All_20180418.vcf.gz\n - All_20180418.vcf.gz.tbi\n \n This step takes a lot of time\n \n```\nbgzip -c All_20180418.vcf >  All_20180418.vcf.gz\ntabix -fp vcf All_20180418.vcf.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/alexcoppe/iWhale/master/README.md",
      "technique": "header_analysis"
    }
  ]
}