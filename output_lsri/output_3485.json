{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/amanzju/MDEHT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-02T00:42:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-26T03:00:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "MDEHT is termed as Multivariate Differential Expression by Hotelling\u2019s Test. The MDEHT package executes multivariate Hotelling\u2019s T-square test to detect differentially expressed isomiRs from small RNA-Seq data. Hotelling\u2019s T-square test is a generalization of Student's t- statistic and is widely used for testing the difference between two multivariate means. Also, Hotelling\u2019s T-square test well controlled type I error rate and It can generate an overall conclusion even if multiple t-tests are inconsistent. The utilization of the hidden information in isomiRs enables MDEHT to increase the power of identifying differentially expressed miRNAs that are not marginally detectable in univariate testing methods. Currently, the MDEHT package performs both one and two samples multivariate test. In one sample test, the null hypothesis is defined as the vector of the mean value of multiple variables equal to zero.\n\n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Access",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "MDEHT and isomiRseeker are free software tools that can be used by academic groups for non-commercial purpose. \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "view the summary of isomiRs and UTR in plot",
        "type": "Text_excerpt",
        "value": "> isomiRs<-rownames(TumorData)  \n> isomiR.summary(x = isomiRs)   \n> utr.summary(x = isomiRs)  \n\n> results = MDEHT (X = TumorData, Y = NormalData)   \n> head(results) \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "view the summary of isomiRs and UTR in plot"
        ],
        "type": "Text_excerpt",
        "value": "The output of MDEHT is a summary of putative miRNAs, including the mean values for two groups, the value of the T-statistic, p-value and FDR adjusted p-value and log2 fold change value. Similarly, for one sample test, the output will provide the value of the T-statistic, p-value, and FDR adjusted p-value.\n\n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Limitation of MDEHT",
        "parent_header": [
          "view the summary of isomiRs and UTR in plot"
        ],
        "type": "Text_excerpt",
        "value": "MDEHT will fail when the number of isoforms of miRNA is larger than n1 + n2 \u2013 2, where n1 and n2 are sample sizes of two different groups, respectively. This limitation can be released by using the technical parameters inohf.isomiRs and merge.olf.isomRs in the MDEHT function. When a miRNA contains a large number of isomiRs, the use of inohf.isomiRs will prompt the MDEHT to analyse only high-frequency isoforms, while the use of merge.olf.isomRs will prompt the MDEHT to merge low-frequency isoforms into one group.\n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/amanzju/MDEHT/wiki"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/amanzju/MDEHT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/amanzju/MDEHT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "amanzju/MDEHT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Description"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9989675016644147,
      "result": {
        "original_header": "required the following packages",
        "type": "Text_excerpt",
        "value": "> install.packages(\"devtools\")    \n> library(devtools)   \n> install_github(\"amanzju/MDEHT\")   \n> library(edgeR)    \n> library (MDEHT)   \n \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/amanzju/MDEHT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MDEHT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "amanzju"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 11885,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 7437,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "> Linux/Unix or Mac OS platform   \n> R (https://www.r-project.org/)  \n\n**isomiRseeker requires the following programs to be installed in user\u2019s environment.**  \n> samtools (http://www.htslib.org/download/)  \n> bedtools (https://bedtools.readthedocs.io/en/stable/content/installation.html)  \n> bwa (https://github.com/lh3/bwa)  \n> Perl 5 (http://www.perl.org/) \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:56:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of isomiRseeker",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "At first, user need to download isomiRseeker folder which contain Perl script and supplementary data files for isomiRseeker tool. Then, got to your own data directory. To run this tool, we have provided a subset data file for a single sample named Example_BAM_files. To quantify isomiR expression from read alignments in the format of bam files, run the following code:\n\n> perl /path/isomiRseeker.pl -b -p output_file_name input_file.bam\n\n**Note:** The output from the above code will produce two files for each sample on your working directory, one is read counts and another one is rpm. Users need to combine read counts or rpm of all samples into a matrix before running MDETH. \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of MDEHT",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The input file for the MDEHT is isomiR read count data in the format of matrix where rows represent isomiRs and columns represent samples. The row names of the data matrix are isomiR names that should be same as isomiR symbols generated by the isomiRseeker tool. We recommend that isomiR data are normalized by the reads per million (RPM) normalization method before running MDEHT. \n\n\n### Example"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "load the example dataset",
        "type": "Text_excerpt",
        "value": "> data(\"ExampleData\")\n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "use CPM normalization from edgeR package",
        "type": "Text_excerpt",
        "value": "> NormalizedData = log2(cpm(ExampleData)+1) \n"
      },
      "source": "https://raw.githubusercontent.com/amanzju/MDEHT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}