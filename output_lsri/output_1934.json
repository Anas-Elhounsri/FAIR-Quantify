{
  "application_domain": [
    {
      "confidence": 14.08,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-amezquita_2019_orchestrating\" class=\"csl-entry\">\n\nAmezquita, Robert A., Aaron T. L. Lun, Etienne Becht, Vince J. Carey,\nLindsay N. Carpp, Ludwig Geistlinger, Federico Marini, et al. 2019.\n\u201cOrchestrating Single-Cell Analysis with Bioconductor.\u201d *Nature Methods*\n17 (December). <https://doi.org/10.1038/s41592-019-0654-x>.\n\n</div>\n\n<div id=\"ref-blighe_2021_scdataviz\" class=\"csl-entry\">\n\nBlighe, Kevin. 2021. \u201cscDataviz: scDataviz: Single Cell Dataviz and\nDownstream Analyses.\u201d Bioconductor.\n<https://bioconductor.org/packages/release/bioc/html/scDataviz.html>.\n\n</div>\n\n<div id=\"ref-crowell_2020_catalyst\" class=\"csl-entry\">\n\nCrowell, Helena L., Vito R. T. Zanotelli, St\u00e9phane Chevrier, Mark D.\nRobinson, and Bernd Bodenmiller. 2020. \u201cCATALYST: Cytometry dATa\nanALYSis Tools.\u201d Bioconductor.\n<https://bioconductor.org/packages/3.10/bioc/html/CATALYST.html>.\n\n</div>\n\n<div id=\"ref-hartmann_2019_comprehensive\" class=\"csl-entry\">\n\nHartmann, Felix J., Joel Babdor, Pier Federico Gherardini, El-Ad D.\nAmir, Kyle Jones, Bita Sahaf, Diana M. Marquez, et al. 2019.\n\u201cComprehensive Immune Monitoring of Clinical Trials to Advance Human\nImmunotherapy.\u201d *Cell Reports* 28 (July): 819\u2013831.e4.\n<https://doi.org/10.1016/j.celrep.2019.06.049>.\n\n</div>\n\n<div id=\"ref-lun_2017_testing\" class=\"csl-entry\">\n\nLun, Aaron T. L., Arianne C. Richard, and John C. Marioni. 2017.\n\u201cTesting for Differential Abundance in Mass Cytometry Data.\u201d *Nature\nMethods* 14 (July): 707\u20139. <https://doi.org/10.1038/nmeth.4295>.\n\n</div>\n\n<div id=\"ref-nowicka_2019_cytof\" class=\"csl-entry\">\n\nNowicka, Malgorzata, Carsten Krieg, Helena L. Crowell, Lukas M. Weber,\nFelix J. Hartmann, Silvia Guglietta, Burkhard Becher, Mitchell P.\nLevesque, and Mark D. Robinson. 2019. \u201cCyTOF Workflow: Differential\nDiscovery in High-Throughput High-Dimensional Cytometry Datasets.\u201d\n*F1000Research* 6 (December): 748.\n<https://doi.org/10.12688/f1000research.11622.4>.\n\n</div>\n\n<div id=\"ref-opzoomer_2021_immunocluster\" class=\"csl-entry\">\n\nOpzoomer, James W, Jessica A Timms, Kevin Blighe, Thanos P Mourikis,\nNicolas Chapuis, Richard Bekoe, Sedigeh Kareemaghay, et al. 2021.\n\u201cImmunoCluster Provides a Computational Framework for the Non-Specialist\nto Profile High- Dimensional Cytometry Data.\u201d *eLife* 10 (April):\ne62915. <https://doi.org/10.7554/eLife.62915>.\n\n</div>\n\n<div id=\"ref-weber_2019_diffcyt\" class=\"csl-entry\">\n\nWeber, Lukas M., Malgorzata Nowicka, Charlotte Soneson, and Mark D.\nRobinson. 2019. \u201cDiffcyt: Differential Discovery in High-Dimensional\nCytometry via High-Resolution Clustering.\u201d *Communications Biology* 2\n(May): 1\u201311. <https://doi.org/10.1038/s42003-019-0415-5>.\n\n</div>\n\n<div id=\"ref-weber_2016_comparison\" class=\"csl-entry\">\n\nWeber, Lukas M., and Mark D. Robinson. 2016. \u201cComparison of Clustering\nMethods for High-Dimensional Single-Cell Flow and Mass Cytometry Data.\u201d\n*Cytometry Part A* 89 (December): 1084\u201396.\n<https://doi.org/10.1002/cyto.a.23030>.\n\n</div>\n\n</div>\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kordastilab/ImmunoCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "For any queries relating to software:\n\n-   Jessica Timms (<jessica.timms@kcl.ac.uk>)\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-20T16:37:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-08T02:11:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Introduction to immunoCluster",
        "parent_header": [
          "immunoCluster"
        ],
        "type": "Text_excerpt",
        "value": "The immunoCluster package uses the [scDataViz bioconductor\npackage\u2019s](https://bioconductor.org/packages/devel/bioc/vignettes/scDataviz/inst/doc/scDataviz.html)\nvizualization tools and adaptation of the\n[SingleCellExperiment](https://www.bioconductor.org/packages/release/bioc/vignettes/SingleCellExperiment/inst/doc/intro.html)\ndata structure to generate simple and flexible cytometry analysis\nworkflows, building on the framework originally outlined in Nowicka et\nal.\u00a0[CyTOF workflow: differential discovery in high-throughput\nhigh-dimensional cytometry\ndatasets](https://f1000research.com/articles/6-748), which is also\nextended to build cytometry analysis pipelines in the\n[CATALYST](https://www.bioconductor.org/packages/release/bioc/html/CATALYST.html)\nbioconductor package.\n\nThe immunoCluster package provides a broad toolkit to carry out immune\nprofiling from both liquid and imaging high-dimensional mass (CyTOF) and\nflow cytometry data. immunoCluster features standardized data\ninfrastructure, making use of the SingleCellExperiment class object,\nscDataViz interactive visualization tools along with convenient\nimplementations for popular dimensionality reduction and clustering\nalgorithms designed for a non-specialist. To learn using immunoCluster\nwe have provided a walkthrough below exploring some of the package\u2019s\nbasic functionality on a published dataset.\n\nAn in depth report of immunoCluster\u2019s use to create liquid and imaging\nmass cytometry analysis pipelines, as well as its use for fluorescent\nflow cytometry analysis is outlined in our recent paper in [eLife\nhere](https://elifesciences.org/articles/62915).\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Introduction",
        "parent_header": [
          "Walkthrough: Immune profiling PBMC from a two condition experimental design"
        ],
        "type": "Text_excerpt",
        "value": "In this walkthrough we will learn to perform immune profiling with\nimmunoCluster to examine changes in immune populations from human PBMC\nfollowing bone marrow transplantation (BMT).\n\nWe will start with pre-gated .fcs data files. The samples were taken\nfrom patients following hematopoetic reconstitution in leukemia patients\nfollowing BMT. The dataset represents 15 individuals, sampled at two\ntime points (Day 30 and 90) after BMT, for a total of 28 samples. Of\nthese patients, a small subset suffered from graft versus host disease\n(GvHD, n = 3), whereas most other patients did not experience such\ncomplications.\n\nWe have performed gating cleanup on a subset of the dataset which can be\ndowloaded from zenodo, along with all the other data required for the\nwalkthough.\n\nThe data was originally reported in [Comprehensive Immune Monitoring of\nClinical Trials to Advance Human\nImmunotherapy](https://www.sciencedirect.com/science/article/pii/S2211124719308228).\nThe full raw data (not used here, but which was used in the\nimmunoCluster paper) is available\n[here](http://flowrepository.org/id/FR-FCM-Z244) and the full\npreprocessed data is available from the zenodo link.\n\nAll the data required can be downloaded from Zenodo.\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3801882.svg)](https://doi.org/10.5281/zenodo.3801882)\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9696643187779466,
      "result": {
        "original_header": "immunoCluster",
        "type": "Text_excerpt",
        "value": "-   [1. Introduction to immunoCluster](#1-introduction-to-immunocluster)\n-   [2. Main functionalities of\n    immunoCluster](#2-main-functionalities-of-immunocluster)\n-   [Installation](#installation)\n    -   [1. Install the package from\n        github](#1-install-the-package-from-github)\n    -   [2. Load required packages](#2-load-required-packages)\n-   [Walkthrough: Immune profiling PBMC from a two condition\n    experimental\n    design](#walkthrough-immune-profiling-pbmc-from-a-two-condition-experimental-design)\n    -   [1. Introduction](#1-introduction)\n    -   [2. Download and import data](#2-download-and-import-data)\n    -   [2. Data Exploration](#2-data-exploration)\n    -   [3. Dimensionality reduction and\n        clustering](#3-dimensionality-reduction-and-clustering)\n    -   [4. Biological annotation of the\n        clustering](#4-biological-annotation-of-the-clustering)\n    -   [5. Statistical testing for cluster differences in abundance and\n        marker\n        expression](#5-statistical-testing-for-cluster-differences-in-abundance-and-marker-expression)\n-   [Subsetting the SCE object](#subsetting-the-sce-object)\n-   [Session info](#session-info)\n-   [Contact](#contact)\n-   [References](#references)\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9249449792261869,
      "result": {
        "original_header": "2. Main functionalities of immunoCluster",
        "type": "Text_excerpt",
        "value": "The basic pipeline of immunoCluster analysis involves: \n-   Creating file/sample labels and marker/panel labels to generate the\n    experimental design and metadata \n-   Importing .fcs data into the SingleCellExperiment object \n-   Exploratory analysis of the data \n-   Clustering and biological interpretation of the clusters \n-   Statistical testing for differences in cluster abundance and marker\n    expression\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.957196085638718,
      "result": {
        "original_header": "2. Data Exploration",
        "type": "Text_excerpt",
        "value": "We provide several functions to examine global patterns within the data,\nthey can be used to get an idea of the influence of conditions/treatment\nor batch effects within the data. The mdsplot() function will generate a\nmulti-dimensional scaling (MDS) plot on median expression values for\neach channel using the\n[limma](https://bioconductor.org/packages/release/bioc/html/limma.html)\nbioconductor package. MDS plots represent an unsupervised way to\nindicate similarities between samples at a global level before more in\ndepth analysis. In the example here we can see that there is no\nobservable high-level difference between the two GvHD condition samples,\nhowever there does appear to be a weak separation between samples\ncollected at D30 and D90 post BMT. Here and throughout the pipeline,\ncolkey can be used to specify plotting colors for graphing conditions.\n``` r\nmds1 = mdsplot(sce_gvhd, \n               feature = \"condition\", \n               colkey = c(None = 'royalblue', GvHD = 'red2'))\n\nmds2 = mdsplot(sce_gvhd, \n               feature = \"day_id\", \n               colkey = c(D30  = 'darkorange1', D90 = 'darkgreen'))\n\nplot_grid(mds1, mds2,\n    labels = c('A','B'),\n    ncol = 2, align = \"l\", label_size = 20)\n```\n \nFurther to the mds plots,the medianHeatmap() function will generate a\nheatmap with median marker expression across all (default) or a\nselection (with markers = ). The heatmap is clustered over rows and\ncolumns. The heatmap can be generated on the asinh transformed values\n(default) or 0-min to 1-max scaled (with scale\\_01 = T). The heatmap\nshould provide insight as to which markers are highly expressed and\nwhether their marker expression profile is associated with a metadata\ncondition. Highly expressed markers will have a greater influence on\nclustering and this will help understand clustering results generated\ndownstream.\n``` r\nfeature = medianHeatmap(sce_gvhd, grouping = \"group\", feature = \"condition\", feature_cols = c('royalblue', 'red2'))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.924517982324158,
      "result": {
        "original_header": "3. Dimensionality reduction and clustering",
        "type": "Text_excerpt",
        "value": "immunoCluster supports multiple different dimensionality reduction\nalgorithms and has UMAP and tSNE functionality implemented below with\nthe ability to downsample before running the algorithms. We run both\nUMAP and tSNE on selected lineage markers, downsampling to 1000 cells\nper sample id \u2018group\u2019 metadata slot (selected by specifying a\ndownsample\\_grouping metadata slot) to reduce runtime. The\ndimensionality reductions are stored in the reducedDimNames slot and any\nother dimensionality reduction, like PCA, can also be stored in the SCE\nobject in parallel.\n``` r\nrequire(umap)\n# Run UMAP and store in sce object\nsce_gvhd = performUMAP(sce_gvhd, \n                       downsample = 1000, # Downsample to 1000 cells per downsample_grouping condition\n                       downsample_grouping = \"group\", # Downsample by sample id 'group' metadata slot\n                       useMarkers = clustering_markers) # Run UMAP only on selected markers\n\n# Run tSNE and store in sce object\nsce_gvhd = performTSNE(sce_gvhd, \n                       downsample = 1000, # Downsample to 1000 cells per downsample_grouping condition\n                       downsample_grouping = \"group\",  # Downsample by sample id 'group' metadata slot\n                       useMarkers = clustering_markers) # Run UMAP only on selected markers\n\nsce_gvhd\n```\n \nThe markerExpression() function will allow us to view the UMAP\ndimensionality reductions, overlaying marker expression of our major\nimmune subpopulation lineage markers as an exploratory analysis of the\npreviously generated UMAP. The dimensionality reduction slot to use is\nspecified with the reducedDim parameter. The markers and several ggplot\nstyle plotting parameters can be specified resulting in tiled plots of\nthe UMAP with marker expression as colour.\n``` r\numap_density = density_plot(sce_gvhd, reducedDim = \"UMAP\", title = \"UMAP density plot\")\n\numap_sample = metadataPlot(sce_gvhd,\n    colby = 'group',\n    title = 'UMAP coloured by sample ID',\n    reducedDim = 'UMAP',\n    legendPosition = 'right',\n    legendLabSize = 8,\n    axisLabSize = 10,\n    titleLabSize = 10,\n    subtitleLabSize = 1,\n    captionLabSize = 16)\n\nplot_grid(umap_density, umap_sample,\n    labels = c('A','B'),\n    nrow = 1, align = \"l\", label_size = 24)\n```\n \nimmunoCluster provides several wrapper functions to perform unsupervised\nclustering on your data. Currently users can implement either\nRphenograph or FlowSOM with consensus clustering. Here we have used an\nensemble method of FlowSOM and ConsensusClusterPlus, which allows us to\nperform a scalable clustering on our dataset. We perform the clustering\non all cells using a selection of lineage markers, with a final desired\ncluster number of up to 10, specified by the parameter k. FlowSOM will\ncluster cells into 100 SOM codes defined by the (dimensions of som\\_x\nand som\\_y) and these will be clustered into 2-k clusters and all of\nthese clustering results are saved as metadata in the SCE object.\n``` r\n# Install Rphenograph from github\n# devtools::install_github(\"JinmiaoChenLab/Rphenograph\")\n\n# Run phenograph clustering\nsce_gvhd = runPhenograph(sce_gvhd, k = 10, markers = clustering_markers)\n```\n \n    ## Mapping data to SOM \nThe clustering identities are stored in the metadata dataframe. The per\ncell membership of the 100 SOM codes is stored under som\\_codes and the\nrespective clusterings are stored under flowsom\\_cc\\_k(k=n). We can\nvizualise the clustering or any other metatdata on the dimensionality\nplot using the function metadataPlot() (which maps to UMAP by default\nbut can specify other dimension reductions that are stored in the SCE,\nlike tSNE). We can also vizualise the abundance of each cluster as a\nproportion of total cells per sample using the plotAbundance() function.\n``` r\n# Plot UMAP with flowsom k=10 clustering overlay\nfsom_k10 = metadataPlot(sce_gvhd,\n    colby = 'flowsom_cc_k10',\n    title = '',\n    reducedDim = 'UMAP',\n    legendPosition = 'right',\n    legendLabSize = 8,\n    axisLabSize = 10,\n    titleLabSize = 10,\n    subtitleLabSize = 1,\n    captionLabSize = 16)\n\n# Specify all clusters to plot abundance for\nfsom_clusters = unique(sce_gvhd@metadata$flowsom_cc_k10)\n\n# Create boxplot of flowsom k=10 abundance \nfsom_abundance = plotAbundance(sce_gvhd,\n              clusters = fsom_clusters,\n              clusterAssign = 'flowsom_cc_k10',\n              feature = NULL,\n              legendPosition = 'none', \n              stripLabSize = 10,\n              axisLabSize = 14,\n              titleLabSize = 12,\n              subtitleLabSize = 10,\n              captionLabSize = 18)\n\n\nplot_grid(fsom_k10, fsom_abundance,\n    labels = c('A','B'),\n    ncol = 2, align = \"l\", label_size = 20, rel_widths = c(1.4, 1))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9310870189674842,
      "result": {
        "original_header": "4. Biological annotation of the clustering",
        "type": "Text_excerpt",
        "value": "The heatmap can be used to interperet the biological identity of the\nclusters generated by flowSOM and consesusClusterPlus. Another way to\nunderstand which markers are enriched per cluster is by using the\nfindMarkers() function from the [scran\nbioconductor](https://bioconductor.org/packages/release/bioc/html/scran.html)\npackage. Here we perform a wilcox test to understand which markers have\na LogFC &gt; 1.5 enrichment between one cluster and several others.\n``` r\nlibrary(scran)\nlibrary(tibble)\n\n# Generate list of upregulated markers\ncytof_markers = findMarkers(assay(sce_gvhd), sce_gvhd@metadata$flowsom_cc_k10, test.type=\"wilcox\", direction=\"up\",lfc=1.5, pval.type=\"some\")\n\ncluster_markers = NULL\ntop_n = 3 # The number of top upregulated markers to display\nfor (i in 1:length(cytof_markers)) {\n  \n  deg_markers = cytof_markers[[i]][1:top_n,1:2]\n  \n  deg_markers = rownames_to_column(as.data.frame(deg_markers), var = \"marker\")\n  \n  markers = data.frame(cluster = rep(i, top_n), deg_markers)\n  \n  cluster_markers = rbind(cluster_markers, markers)\n  \n}\n\n# Show top 3 DEG markers per cluster\nhead(cluster_markers)\n```\n \nFrom this information we can assign identities to the clusters using the\nsetClusterIdents() function. We input a vector of original clusters,\nalong with the new clusters we wish to assign these original cluster\nassignments to. The new cluster assignments will be stored in the\nmetadata as cell\\_annotation. We can then assign this cell\\_annotation\nto a new metadata slot to store and reassign using setClusterIdents()\nagain.\n``` r\n# Assignments\noriginal_cluster_ident = as.character(rep(1:10))\nnew_cluster_ident = c(\"Monocytes\", \"cDC\", \"NKT Cells\", \"CD4+ T Cells\", \"B Cells\",\"gd T Cells\", \"CD8+ T Cells\", \"Basophils\", \"CD4+ Treg\", \"NK\")\n\n# Set the new annotations\nsce_gvhd = setClusterIdents(sce_gvhd, orig.ident = original_cluster_ident , new.ident = new_cluster_ident, clustering = 'flowsom_cc_k10')\n\n# Define population colours\ncols = brewer.pal(10, \"Set3\")\n\n# Assign to populations for plotting\ncol_key = c(\"Monocytes\" = cols[1], \"cDC\" = cols[2], \"NKT Cells\" = cols[3], \"CD4+ T Cells\" = cols[4], \"B Cells\" = cols[5], \"gd T Cells\" = cols[6], \"CD8+ T Cells\" = cols[7], \"Basophils\" = cols[8], \"CD4+ Treg\" = cols[9], \"NK\" = cols[10])\n\n# Vizualise in UMAP space\ncell_annotation = metadataPlot(sce_gvhd,\n    colby = 'cell_annotation',\n    colkey = col_key, # Add colours for plotting \n    title = '',\n    legendLabSize = 8,\n    axisLabSize = 20,\n    titleLabSize = 20,\n    subtitleLabSize = 16,\n    captionLabSize = 16)\n\nannotated_clusters = unique(sce_gvhd@metadata$flowsom_cc_k10)\n\nannotated_abundance = plotAbundance(sce_gvhd,\n              clusters = annotated_clusters,\n              clusterAssign = 'cell_annotation',\n              feature = NULL,\n              colkey = col_key,\n              legendPosition = 'none', \n              stripLabSize = 10,\n              axisLabSize = 14,\n              titleLabSize = 12,\n              subtitleLabSize = 10,\n              captionLabSize = 18)\n\nplot_grid(cell_annotation, annotated_abundance, \n    labels = c('A','B'), align = \"l\", label_size = 20, rel_widths = c(1.5,1), rel_heights = c(1.3,1))\n```\n \nOnce we have defined the biological identity of our clusters we can\ncreate a heatmap to check that the marker expression patterns are\nconsistent with our labels. Here we use medianHeatmap to create 0-1\nnormalised heatmap per cluster. We can also modify the the heat bar from\nthe default greens to a black-white gradient (using heat\\_bar =\n\u201cgreys\u201d).\n``` r\n# With feature\nfeature = medianHeatmap(sce_gvhd, \n                        grouping = \"cell_annotation\",\n                        markers = clustering_markers,\n                        feature = NULL, \n                        scale_01 = T, \n                        heat_bar = \"Greys\")\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8934366963347569,
      "result": {
        "original_header": "5. Statistical testing for cluster differences in abundance and marker expression",
        "type": "Text_excerpt",
        "value": "Finally we can perform a wilcoxon rank sum test to see if we can detect\nstatistically significant changes in cluster abundance between our two\nexperimental conditions. stat\\_test\\_clust\\_results() will perform a\nwilcox test on our the proportions of cell type abundance per sample\nbetween conditions and produce a results table along with Log fold\nchange and the proportion of each sample that each cluster represents.\nWe can then use volcanoPlot() to generate a volcano plot, which shows us\nthat there is a significant difference between the abundance of B cells\nbetween our two conditions. We can see that in our dataset it appears\nthat B Cells are markedly reduced in those patients that go on to\ndevelop GvHD. In addition to the wilcox test implemented here there are\nother useful packages that implement robust statistical methods for\ndifferential abundance and differential expression analysis, such as the\nbioconductor packages\n[diffCyt](https://www.bioconductor.org/packages/release/bioc/html/diffcyt.html)\nand\n[cydar](https://bioconductor.org/packages/release/bioc/html/cydar.html).\n``` r\n# Wilcox test on cluster proportion abundance\nstat_test_clust_results = stat_test_clust(sce_gvhd,\n                        group = 'group', # group the files by sample ID metadata slot 'group'\n                        clustering = 'cell_annotation', # The clustering label to use\n                        feature = 'condition')\n\nhead(stat_test_clust_results[,c(1,14:18)])\n```\n    ##        cluster proportion proportion.1       logfc       pval      padj\n    ## 1      B Cells  0.7571028    6.4246483 -2.13839808 0.01040562 0.1040562\n    ## 2    Basophils  0.4749399    0.5833272 -0.20556014 0.52183939 0.8697323\n    ## 3 CD4+ T Cells  8.4219643   12.6510706 -0.40689875 0.26233168 0.8697323\n    ## 4    CD4+ Treg  1.1673934    0.7770172  0.40706623 0.87278012 0.8727801\n    ## 5 CD8+ T Cells 18.5345116   18.8898577 -0.01899066 0.87278012 0.8727801\n    ## 6          cDC  0.8772951    2.0589283 -0.85309741 0.07816909 0.3908454\n``` r\ngg_volcano = volcanoPlot(stat_test_clust_results, p_val = \"padj\", threshold = 0.12)\n\nabundance_bcell = plotAbundance(sce_gvhd,\n              clusters = c(\"B Cells\", \"Basophils\"),\n              clusterAssign = 'cell_annotation',\n              feature = 'condition',\n              colkey = c(None = 'royalblue', GvHD = 'red2'),\n              legendPosition = 'right', \n              stripLabSize = 10,\n              axisLabSize = 14,\n              titleLabSize = 12,\n              subtitleLabSize = 10,\n              captionLabSize = 18)\n\nplot_grid(gg_volcano, abundance_bcell,\n    labels = c('A','B'),\n    ncol = 2, align = \"l\", label_size = 20, rel_widths = c(1,1.4))\n```\n \nWe can perform the same process of applying a wilcoxon test for\nexpression levels of markers, across all markers on all populations by\nusing the stat\\_test\\_expression() function. We can plot the results a\nvolcano plot as before using volcanoPlot(). Aditoionally it is possible\nto vizualise cluster specific expression of certain makers with\nmarkerExpressionPerSample() to look at the median marker expression per\nsample on selected clusters (or all clusters).\n``` r\n# Wilcox test on marker expression\nmarker_test = stat_test_expression(sce_gvhd,\n                assay = 'scaled', # The sce assay slot\n                grouping = 'group', # group the files by sample ID metadata slot 'group'\n                feature = 'condition', # The contrast metatdata\n                clusterAssign = 'cell_annotation') # The clustering label to use\n\nsig_markers = marker_test[which(marker_test$p_val < 0.05),]\n\nhead(sig_markers)\n```\n    ##                 cluster        S1         S2         S3         S4       S15\n    ## 43            cDC_PDL_1 0.0000000 0.03833666 0.03454712 0.02409312 0.0000000\n    ## 74     NKT Cells_CD45RA 2.9245811 2.82914412 1.35815724 1.62859842 1.3404085\n    ## 88        NKT Cells_CD3 4.6261090 4.66563326 4.56496722 4.57661471 4.5837929\n    ## 106 CD4+ T Cells_CD45RA 1.6022981 0.87746351 0.39035619 0.46861896 0.1388336\n    ## 112   CD4+ T Cells_PD_1 0.1060011 0.30094336 0.17684411 0.35370009 0.7500233\n    ## 133        B Cells_CCR7 1.4479768 1.90229903 1.99799022 2.32094205 1.0633981\n    ##           S16        S23        S24       S25        S26       S27        S28\n    ## 43  0.0000000 0.07893154 0.02029057 0.2797268 0.76921816 0.4672593 0.10298348\n    ## 74  1.8112743 1.34732314 1.48795015 0.5681961         NA 0.8301662 0.74637372\n    ## 88  4.8404246 4.57702149 4.48036593 4.2798380         NA 4.4999407 3.86990581\n    ## 106 0.2393415 0.17488804 0.21700140 0.1083829 0.05085623 0.3204029 0.06000536\n    ## 112 0.2040139 3.22044827 2.55991190 1.7497636 0.29420018 1.4976574 0.52886947\n    ## 133 0.5621361 0.83526030 1.41891478 1.0311894 0.04672376 0.2211306 0.00000000\n    ##        mean_1     mean_2       logfc      p_val      padj\n    ## 43  0.2864016 0.01616282  2.87468184 0.01556764 0.5929411\n    ## 74  0.9960019 1.98202728 -0.68812634 0.02845974 0.5929411\n    ## 88  4.3414144 4.64292362 -0.06714407 0.01762209 0.5929411\n    ## 106 0.1552561 0.61948531 -1.38381275 0.02497468 0.5929411\n    ## 112 1.6418085 0.31525431  1.65017398 0.02497468 0.5929411\n    ## 133 0.5922031 1.54912372 -0.96159499 0.02497468 0.5929411\n``` r\n# Create volcano plot\ngg_volcano = volcanoPlot(marker_test, p_val = \"p_val\", threshold = 0.05)\n\n# Difference in activation markers per cluster\npd_expression = markerExpressionPerSample(sce_gvhd,\n    caption = '',\n    clusters = c(\"CD8+ T Cells\", \"cDC\"),\n    feature = 'condition',\n    clusterAssign = 'cell_annotation',\n    markers = activation_markers[3:5],\n    colkey = c(None = 'royalblue', GvHD = 'red2'),\n    title = '',\n    stripLabSize = 12,\n    axisLabSize = 10,\n    titleLabSize = 18,\n    subtitleLabSize = 10,\n    captionLabSize = 10)\n\n\nplot_grid(gg_volcano, pd_expression,\n    labels = c('A','B'),\n    ncol = 2, align = \"l\", label_size = 20, rel_widths = c(1,1.4))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9934908487766699,
      "result": {
        "original_header": "Subsetting the SCE object",
        "type": "Text_excerpt",
        "value": "It is possible to subset the sce\\_gvhd object for further clustering,\nfor instance, in a situation when increased cluster resolution is\ndesired or where you want to display the proportion of a certain cluster\nas a percentage of another parent populations, for instance CD4+ Tregs\nas a proportion of all CD4+ T cells. Subsetting can be performed using\nthe subset\\_sce\\_metadata() function. The function can subset the\nsce\\_gvhd cells on any specified metadata slot using using conditional\nstatements and a couple of examples are presented below:\n``` r\n# Subset by patient_ID\nsce_subset = subset_sce_metadata(sce_gvhd, patient_id %in% c(\"P1\", \"P9\", \"P15\"))\n# Subset by clustering identity\nsce_cd4 = subset_sce_metadata(sce_gvhd, cell_annotation %in% c(\"CD4+ T Cells\", \"Basophils\"))\n\ntable(sce_subset@metadata$patient_id)\n```\n    ## \n    ##     P1    P15     P9 \n    ## 156422 131263  98571\n``` r\ntable(sce_cd4@metadata$cell_annotation)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Download and import data",
        "parent_header": [
          "Walkthrough: Immune profiling PBMC from a two condition experimental design"
        ],
        "type": "Text_excerpt",
        "value": "You can download all the .fcs files from zenodo\n[here](https://doi.org/10.5281/zenodo.3801882), or alternatively you can\ndownload the SingleCellExperiment object directly into memory and skip\nthe import process just below. The fcs files can be downloaded from this\n[download\\_link](https://zenodo.org/record/3801882/files/fcs_data.zip?download=1).\n\nThe experimental design is used to generate the eperimental metadata\nwill label each cell and is incorporated into the SingleCellExperiment\n(SCE) object, here we have created one table (from an excel file), that\ncontains five columns, and one row for each .fcs file. We will include\nthe .fcs filename, the GvHD \u201ccondition\u201d of the patient, patient\\_id, a\nunique sample\\_id, and the day\\_id representing the day following BMT\nthat the sample was taken.\n[Download\\_link](https://zenodo.org/record/3801882/files/sample_metadata.xlsx?download=1)\n\n``` r\n# Download sample metadata from Zenodo\nsample_metadata_df = readRDS(url(\"https://zenodo.org/record/3801882/files/sample_metadata.rds\"))\n\nhead(sample_metadata_df)\n```\n\n    ## # A tibble: 6 x 5\n    ##   file_name           condition patient_id sample_id day_id\n    ##   <chr>               <fct>     <chr>      <chr>     <fct> \n    ## 1 BMT01_D30_clean.fcs None      P1         S1        D30   \n    ## 2 BMT01_D90_clean.fcs None      P1         S2        D90   \n    ## 3 BMT02_D30_clean.fcs None      P2         S3        D30   \n    ## 4 BMT02_D90_clean.fcs None      P2         S4        D90   \n    ## 5 BMT08_D30_clean.fcs None      P8         S15       D30   \n    ## 6 BMT09_D30_clean.fcs None      P9         S16       D30\n\nWe also create a table that represents the marker panel information.\nThis table contains a row for every channel in the original fcs file.\nThe columns represent the original name of the channel and the channel\nname we want to rename it to in the antigen column. We then optionally\ninclude columns of binary 1 and 0s that allow us to group markers into\nrelevant sets, here we have two sets, one group of markers for\nclustering and another for downstream expression analysis on our cell\npopulations of interest. Any marker that is not included in either group\nwill be discarded when we build the SCE object. This table must be an\nexact match to the order that the markers are represented in the raw\n.fcs files or the channel renaming will be incorrect or fail.\n[Download\\_link](https://zenodo.org/record/3801882/files/panel_metadata.xlsx?download=1).\n\n``` r\n# Download panel metadata from Zenodo\npanel_metadata_df = readRDS(url(\"https://zenodo.org/record/3801882/files/panel_metadata.rds\"))\n\nhead(panel_metadata_df)\n```\n\n    ## # A tibble: 6 x 4\n    ##   metal     antigen  clustering activation\n    ##   <chr>     <chr>         <dbl>      <dbl>\n    ## 1 BCKG190Di blank_00          0          0\n    ## 2 Ba138Di   blank_01          0          0\n    ## 3 Bi209Di   CD16              1          0\n    ## 4 Ce140Di   beads             0          0\n    ## 5 Ce142Di   beads_1           0          0\n    ## 6 Center    blank_8           0          0\n\n``` r\n# Create marker grouping designations\nclustering_markers = panel_metadata_df$antigen[panel_metadata_df$clustering ==1]\nactivation_markers = panel_metadata_df$antigen[panel_metadata_df$activation == 1]\ncol_names = panel_metadata_df$antigen[panel_metadata_df$clustering == 1 | panel_metadata_df$activation == 1 ]\n\n# Select columns to dicard from fcs file\ndiscard = setdiff(panel_metadata_df$antigen, c(clustering_markers, activation_markers))\nqueries = str_detect(panel_metadata_df$antigen, paste(discard, collapse = \"|\"))\n\nif(length(discard) > 0){colsDiscard = panel_metadata_df$metal[queries]\n}else{colsDiscard = ''}\n```\n\nWe next load the .fcs data and the metadata into the SCE object. Here\nthe number of rows in the metadata must match the number of .fcs files\nto be analyzed. We have the option to specify the scaling transformation\nand the cofactor. Here we have used asinh with cofactor 5, which is the\ndefault value. It is possible to downsaple from each file or by a\nspecified metadata grouping, although here we have not downsampled in\nthis case. The columns are also renamed as specified in the\npanel\\_metadata table and columns not needed are discarded.\n\n``` r\n# Collect all .fcs files from a directory\nfilelist = list.files(\n      path = \"fcs_data/\",\n    pattern = \"*.fcs|*.FCS\",\n    full.names = TRUE)\n\n# Select which metadata to include from the sample metadata table\nmetadata = data.frame(\n      file = filelist, \n      group = sample_metadata_df$sample_id,\n      condition = sample_metadata_df$condition,\n      patient_id = sample_metadata_df$patient_id,\n      day_id = sample_metadata_df$day_id,\n      row.names = filelist,\n      stringsAsFactors = FALSE)\n\n# Create SCE object with CyTOF data inside\nrequire(SingleCellExperiment)\n  sce_gvhd = processFCS(\n    files = filelist,\n    metadata = metadata,\n    filter = FALSE, # Do not perform noise filtering\n    transformation = TRUE, # Transform data\n    transFun = function (x) asinh(x), # Using asinh function (cofactor 5 is used by default)\n    downsampleVar = NULL, # No downsampling by variance\n    downsample = NULL, # Downsample to n cells per downsample_grouping \n    downsample_grouping = NULL, # if downsample = n, downsample n cells by the specified metadata grouping.\n    newColnames = col_names, # Rename columns from panel metadata \n    colsDiscard = colsDiscard) # Discard columns not selected for downstream analysis\n\nsce_gvhd\n```\n\nUsing the code chunk below you can download the processed r data object\nwith the metatdata incorporated, directly into memory to skip the import\nsteps to save time:\n\n``` r\n# Download complete immunoCluster SCE object from zenodo \n# Some versions of R can timeout the download at 60 seconds\n# If the download is taking longer run the below line to extend the download timeout window to 400 seconds \noptions(timeout = 400)\nsce_gvhd = readRDS(url(\"https://zenodo.org/record/3801882/files/sce_gvhd.rds\"))\n\nsce_gvhd\n```\n\n    ## class: SingleCellExperiment \n    ## dim: 32 912813 \n    ## metadata(5): file group condition patient_id day_id\n    ## assays(1): scaled\n    ## rownames(32): CD16 CD152 ... HLA_DR CD56\n    ## rowData names(0):\n    ## colnames(912813): cell1 cell2 ... cell912812 cell912813\n    ## colData names(0):\n    ## reducedDimNames(0):\n    ## altExpNames(0):\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kordastilab/ImmunoCluster/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kordastilab/ImmunoCluster/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kordastilab/ImmunoCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "immunoCluster"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3801882"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/mds_plot-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/sample heatmap-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/density plot-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/unnamed-chunk-2-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/viz flowSOM-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/diagnostic heatmap-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/merge clusters-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/bar plot-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/final heatmap-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/cell annotations-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/abundance test-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README_files/figure-gfm/marker test-1.png"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Install the package from github",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install the development version of the package, installation will\nusually take a few minutes, depending on the number of dependencies that\nhave been installed on your computer. Install immunoCluster from github\nhere:\n\n``` r\n  # Install devtools for github installation if not present\n  require(devtools)\n  \n  # Install the ImmunoCluster package\n  devtools::install_github(\"kordastilab/ImmunoCluster\")\n  \n  # May need to run this line if an R build version error while installing appears\n  # Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=\"true\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Load required packages",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Load necessary packages:\n\n``` r\n  library(immunoCluster)\n  library(stringr)\n  library(cowplot)\n  library(RColorBrewer)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9879911570399127,
      "result": {
        "original_header": "immunoCluster",
        "type": "Text_excerpt",
        "value": "-   [1. Introduction to immunoCluster](#1-introduction-to-immunocluster)\n-   [2. Main functionalities of\n    immunoCluster](#2-main-functionalities-of-immunocluster)\n-   [Installation](#installation)\n    -   [1. Install the package from\n        github](#1-install-the-package-from-github)\n    -   [2. Load required packages](#2-load-required-packages)\n-   [Walkthrough: Immune profiling PBMC from a two condition\n    experimental\n    design](#walkthrough-immune-profiling-pbmc-from-a-two-condition-experimental-design)\n    -   [1. Introduction](#1-introduction)\n    -   [2. Download and import data](#2-download-and-import-data)\n    -   [2. Data Exploration](#2-data-exploration)\n    -   [3. Dimensionality reduction and\n        clustering](#3-dimensionality-reduction-and-clustering)\n    -   [4. Biological annotation of the\n        clustering](#4-biological-annotation-of-the-clustering)\n    -   [5. Statistical testing for cluster differences in abundance and\n        marker\n        expression](#5-statistical-testing-for-cluster-differences-in-abundance-and-marker-expression)\n-   [Subsetting the SCE object](#subsetting-the-sce-object)\n-   [Session info](#session-info)\n-   [Contact](#contact)\n-   [References](#references)\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8050608471946222,
      "result": {
        "original_header": "3. Dimensionality reduction and clustering",
        "type": "Text_excerpt",
        "value": "    ## Building SOM \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.852864270786212,
      "result": {
        "original_header": "2. Data Exploration",
        "type": "Text_excerpt",
        "value": "<img src=\"README_files/figure-gfm/mds_plot-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/sample heatmap-1.png\" style=\"display: block; margin: auto;\" />\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8406543115439877,
      "result": {
        "original_header": "3. Dimensionality reduction and clustering",
        "type": "Text_excerpt",
        "value": "<img src=\"README_files/figure-gfm/density plot-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/unnamed-chunk-2-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/viz flowSOM-1.png\" style=\"display: block; margin: auto;\" />\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8452335767653902,
      "result": {
        "original_header": "4. Biological annotation of the clustering",
        "type": "Text_excerpt",
        "value": "<img src=\"README_files/figure-gfm/diagnostic heatmap-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/merge clusters-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/bar plot-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/final heatmap-1.png\" style=\"display: block; margin: auto;\" />\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8812213525637614,
      "result": {
        "original_header": "5. Statistical testing for cluster differences in abundance and marker expression",
        "type": "Text_excerpt",
        "value": "<img src=\"README_files/figure-gfm/cell annotations-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/abundance test-1.png\" style=\"display: block; margin: auto;\" /> \n<img src=\"README_files/figure-gfm/marker test-1.png\" style=\"display: block; margin: auto;\" />\n \n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kordastilab/ImmunoCluster/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Kordasti Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ImmunoCluster"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kordastilab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 125005,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 4278,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kordastilab/ImmunoCluster/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:54:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ]
}