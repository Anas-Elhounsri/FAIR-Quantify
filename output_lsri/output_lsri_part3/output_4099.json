{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "```\n@article{holley2021ratatosk,\n  title={Ratatosk: hybrid error correction of long reads enables accurate variant calling and assembly},\n  author={Holley, Guillaume and Beyter, Doruk and Ingimundardottir, Helga and M{\\o}ller, Peter L and Kristmundsdottir, Sn{\\ae}dis and Eggertsson, Hannes P and Halldorsson, Bjarni V},\n  journal={Genome Biology},\n  volume={22},\n  number={1},\n  pages={1--22},\n  year={2021}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Holley, Guillaume and Beyter, Doruk and Ingimundardottir, Helga and M{\\o}ller, Peter L and Kristmundsdottir, Sn{\\ae}dis and Eggertsson, Hannes P and Halldorsson, Bjarni V",
        "format": "bibtex",
        "title": "Ratatosk: hybrid error correction of long reads enables accurate variant calling and assembly",
        "type": "Text_excerpt",
        "value": "@article{holley2021ratatosk,\n    year = {2021},\n    pages = {1--22},\n    number = {1},\n    volume = {22},\n    journal = {Genome Biology},\n    author = {Holley, Guillaume and Beyter, Doruk and Ingimundardottir, Helga and M{\\o}ller, Peter L and Kristmundsdottir, Sn{\\ae}dis and Eggertsson, Hannes P and Halldorsson, Bjarni V},\n    title = {Ratatosk: hybrid error correction of long reads enables accurate variant calling and assembly},\n}"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DecodeGenetics/Ratatosk"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "For any question, feedback or problem, please feel free to file an issue on this GitHub repository and we will get back to you as soon as possible.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-07T10:46:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T16:03:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hybrid error correction of long reads using colored de Bruijn graphs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9456224561697013,
      "result": {
        "original_header": "Interface",
        "type": "Text_excerpt",
        "value": "```\nRatatosk index --help\n```\ndisplays the command line interface for the `index` command:\n```\nRatatosk x.y.z\n\nHybrid error correction of long reads using colored de Bruijn graphs\n\nUsage: Ratatosk [COMMAND] [PARAMETERS]\nUsage: Ratatosk --help\nUsage: Ratatosk --version\nUsage: Ratatosk --cite\n\n[COMMAND]: index\n\n[PARAMETERS]:\n\n   > Mandatory with required argument:\n\n   -s, --in-short                  Input short read file to correct (FASTA/FASTQ possibly gzipped)\n                                   List of input short read files to correct (one file per line)\n   -l, --in-long                   Input long read file to correct (FASTA/FASTQ possibly gzipped)\n                                   List of input long read files to correct (one file per line)\n   -o, --out-long                  Prefix of the output index file\n\n   > Mandatory with no argument:\n\n   -1, --1st-pass-only             Prepare index for the 1st correction pass (default: false)\n   -2, --2nd-pass-only             Prepare index for the the 2nd correction pass (default: false)\n\n   > Optional with required argument:\n\n   -c, --cores                     Number of cores (default: 1)\n   -S, --subsampling               Rate of short reads subsampling (default: No subsampling)\n   -u, --in-unmapped-short         Input read file of the unmapped short reads (FASTA/FASTQ possibly gzipped)\n                                   List of input read files of the unmapped short reads (one file per line)\n   -a, --in-accurate-long          Input high quality long read file (FASTA/FASTQ possibly gzipped)\n                                   List of input high quality long read files (one file per line)\n                                   (Those reads are NOT corrected but assist the correction of reads in input)\n   -g, --in-graph                  Load graph file prepared with the index command\n   -Q, --max-base-qual             Maximum base quality of input long reads (default: 40)\n\n   > Optional with no argument:\n\n   -v, --verbose                   Print information\n\n[ADVANCED PARAMETERS]:\n\n   > Optional with required argument:\n\n   -M, --min-conf-color2           Minimum confidence threshold to color vertices for 2nd pass (default: 0)\n   -C, --min-len-color2            Minimum length of a long read to color vertices for 2nd pass (default: 3000)\n   -i, --insert-sz                 Insert size of the input paired-end short reads (default: 500)\n   -k, --k1                        Length of short k-mers for 1st pass (default: 31)\n   -K, --k2                        Length of long k-mers for 2nd pass (default: 63)\n\n   > Mandatory with no argument:\n\n   -F, --no-snp-correction         Disable SNP detection and correction\n   -I, --no-graph-index            Disable graph index output\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DecodeGenetics/Ratatosk/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Hybrid error correction of long reads using colored de Bruijn graphs",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "Ratatosk is a *de novo* error correction tool for erroneous long reads designed for accurate variant calling and assembly. It is based on a compacted and colored de Bruijn graph built from accurate short reads. Reads color paths in the graph while vertices are annotated with candidate *de novo* SNPs and short repeats. We demonstrate that Ratatosk can reduce the raw error rate of ONT reads several fold on average with a mean error rate as low as 1.4%. Variant calling on Ratatosk corrected data shows 99.91% and 95.88% F1 for SNP and indels respectively. An assembly of the Ashkenazi individual HG002 created from Ratatosk corrected ONT reads yields a contig N50 of 39.7 Mbp and a quality value of 48.5.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "**Can I provide multiple read files in input?**\n\nYes, use mutiple times parameters `-s`/`-l`/`-u`/`-a`, once for each input file.\n\n**Can I provide a file which is a list of read files in input?**\n\nYes, a text file containing one input filename per line with no empty lines can be given in input.\n\n**Does Ratatosk work with input short reads which are not paired-end reads?**\n\nYes, although Ratatosk works best with paired-end short reads in input. You can also mix paired and non-paired short reads in input.\n\n**Are the output corrected long reads in the same order as the input uncorrected long reads?**\n\nNot necessarily.\n\n**Is it fine if my input *long* reads contain non-{A,C,G,T} characters?**\n\nYes.\n\n**Is it fine if my input *short* reads contain non-{A,C,G,T} characters?**\n\nYes (the *k*-mers overlapping these characters will be discarded).\n\n**Why does Ratatosk outputs non-{A,C,G,T} characters?**\n\nRatatosk automatically detects heterozygous SNP candidates from the input short and long reads. If Ratatosk corrects a SNP candidate site in a long read but cannot establish with enough confidence which of the possible bases is the right one, a IUPAC character is output to represent the ambiguity. For example, character `N` represents all possible bases while character `R` only represents `A` or `G`.\n\n**My downstream pipeline does not handle the non-{A,C,G,T} characters output be Ratatosk, what should I do?**\n\nReplace these characters by random {A,C,G,T} characters. The python script `scripts/replaceIUPAC.py` is provided to that effect.\n\n**What are the quality scores output by Ratatosk?**\n\nRatatosk outputs a quality score for each corrected base indicating how confident is Ratatosk in the correction of that base. A score of 0 means the base is left uncorrected, a score of 1 means the base was corrected with a very low confidence while a score of 40 means that Ratatosk is very confident of the correction. The scores are output in the Phred33 format but the scoring scale is linear (rather than logarithmic for Phred33).\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DecodeGenetics/Ratatosk"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ratatosk"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone the Git repository\n  ```\n  git clone --recursive https://github.com/DecodeGenetics/Ratatosk.git\n  cd Ratatosk\n  ```\n2. Install Ratatosk\n  ```\n  mkdir build && cd build\n  cmake ..\n  make\n  make install\n  ```\n\nBy default, the installation creates:\n* a binary (*Ratatosk*)\n\n**Notes**\n`make install` might require `sudo` (`sudo make install`) to proceed. If you want to install Ratatosk in a non-default path, add the option `-DCMAKE_INSTALL_PREFIX=/some/path/ ..` to the `cmake` command where `/some/path/` is where you want to see the Ratatosk files installed. Do not forget to add this path to your environment variables (see [Troubleshooting](#troubleshooting)). If you encounter any problem during the installation, see the [Troubleshooting](#troubleshooting) section.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9966255593402308,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "The following might happen when environment variables are not set correctly on your system: \n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) 2019, DecodeGenetics, Guillaume Holley\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "* The wyhash library is Unlicense licensed (https://github.com/wangyi-fudan/wyhash)\n* The popcount library is BSD licensed (https://github.com/kimwalisch/libpopcnt)\n* The libdivide library is zlib licensed (https://github.com/ridiculousfish/libdivide)\n* The kseq library is copyrighted by Heng Li and released under the MIT license (http://lh3lh3.users.sourceforge.net/kseq.shtml)\n* The CRoaring library is Apache 2.0 licensed (https://github.com/RoaringBitmap/CRoaring)\n* The GetRSS library is Creative Commons Attribution 3.0 licensed\n* The edlib library is MIT licensed (https://github.com/Martinsos/edlib)\n* The Bifrost library is BSD2 licensed (https://github.com/pmelsted/bifrost)\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ratatosk"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "DecodeGenetics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 539584,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 11041,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 9344,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2572,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 721,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2023-06-30T15:40:39Z",
        "date_published": "2023-06-30T15:50:13Z",
        "description": "- Use the latest Bifrost version (1.2.1) which is faster and more memory-efficient, enables Bifrost indexes and compressed GFA output, faster read IO, etc.\r\n- Enable compressed output with -G\r\n- Allow input and output long read dataset with maximum base quality >40 with -Q\r\n- Fix a major issue with graph vertices that could have insufficient or no short read coverage due to subsampling resulting in no correction\r\n- Enable a couple more advanced/dev arguments in CLI\r\n- Minor bug fixes\r\n\r\nGCC version minimum requirement changes to 5.1 (from 4.8).",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/v0.9.0",
        "name": "v0.9.0",
        "release_id": 110521692,
        "tag": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/v0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/110521692",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/110521692",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/v0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2022-04-27T16:53:15Z",
        "date_published": "2022-04-27T16:57:12Z",
        "description": "Update to latest Bifrost:\r\n- Major bugfix with single-threaded graph construction\r\n- Minor bugfixes",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/v0.7.6.3",
        "name": "v0.7.6.3",
        "release_id": 65493396,
        "tag": "v0.7.6.3",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/v0.7.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/65493396",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/65493396",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/v0.7.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2022-01-25T16:24:06Z",
        "date_published": "2022-01-25T16:26:21Z",
        "description": "- Much faster and lightweight graph construction with Bifrost 1.0.6\r\n- Replaces XXH with Wyhash",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/v0.7.6.2",
        "name": "v0.7.6.2",
        "release_id": 57937681,
        "tag": "v0.7.6.2",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/v0.7.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/57937681",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/57937681",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/v0.7.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2021-12-20T12:58:13Z",
        "date_published": "2021-12-20T13:09:21Z",
        "description": "- New color selection algorithm for paths to traverse\r\n- New scoring method for paths to traverse\r\n- 2x speed improvement overall\r\n- Fix issue with high coverage threshold in the SNP candidate detection algorithm\r\n- Experimental phasing method in the second correction round\r\n",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/v0.7.5.1",
        "name": "v0.7.5",
        "release_id": 55668697,
        "tag": "v0.7.5.1",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/v0.7.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/55668697",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/55668697",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/v0.7.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2021-08-30T13:51:13Z",
        "date_published": "2021-08-30T16:02:48Z",
        "description": "- Fix numerous issues introduced in v0.6, mostly in the inexact k-mer search and color writing to disk\r\n- Detection of short cycles in the graph for TR candidates\r\n- Speed improvements",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/0.7",
        "name": "v0.7",
        "release_id": 48684972,
        "tag": "0.7",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/48684972",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/48684972",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GuillaumeHolley",
          "type": "User"
        },
        "date_created": "2020-06-30T14:45:45Z",
        "date_published": "2020-06-30T15:22:06Z",
        "description": "First release version of Ratatosk.",
        "html_url": "https://github.com/DecodeGenetics/Ratatosk/releases/tag/0.1",
        "release_id": 28074441,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/28074441",
        "value": "https://api.github.com/repos/DecodeGenetics/Ratatosk/releases/28074441",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/Ratatosk/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "* C++11 compiler:\n    * [GCC](https://gcc.gnu.org/) >= 5.1.0\n    * [Clang](http://clang.llvm.org/) >= 3.5\n* [Cmake](https://cmake.org/) >= 2.8.12\n* [Zlib](https://zlib.net/)\n\nAll are probably already installed on your computer as those are installed by default on most operating systems. They can be downloaded and installed by following the instructions on their respective websites. However, it is most likely they are all available via a package manager for your operating system: \n\n* **Ubuntu/Debian**:\n```\nsudo apt-get install build-essential cmake zlib1g-dev\n```\n* **MacOS** (with [Homebrew](https://brew.sh/)):\n```\nbrew install --with-toolchain llvm\nbrew install cmake zlib\n```\n* **Windows 10**:\n\n1. Open the Windows Store\n2. Search and install the `Ubuntu` app (from `Canonical Group Limited`)\n3. Open the Windows main menu and open the `Ubuntu` app (it should open an Ubuntu terminal)\n4. Use the following command in the Ubuntu terminal:\n```\nsudo apt-get install build-essential cmake zlib1g-dev\n```\n5. Use the opened Ubuntu terminal for compiling, installing and running Ratatosk (see next section). See [Troubleshooting](#troubleshooting) if you have any problem during the installation.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:10:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 94
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Ratatosk"
        ],
        "type": "Text_excerpt",
        "value": "**Before starting**\n- Ratatosk works best with paired-end short reads in input (`-s`): **reads from the same pair must have the same FASTA/FASTQ name** (if the reads are extracted from a BAM file, use `samtools bam2fq -n`).\n- Ratatosk was designed primarily for correcting ONT R9.4 reads for which the maximum base quality is 40 (default value). When correcting a different type of long reads, adjust the maximum base quality accordingly with `-Q`, e.g `-Q 90` must be used with ONT R10.\n- Several temporary files are written in the same repository as the output file (`-o`) so make sure the output folder has plenty of free space.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single compute node - one step",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nRatatosk correct -v -G -c 16 -s short_reads.fastq -l in_long_reads.fastq -o out_long_reads\n```\nRatatosk corrects (`Ratatosk correct`) the long read file (`-l in_long_reads.fastq`) with 16 threads (`-c 16`) using an index built from the short read file (`-s short_reads.fastq`). Information messages are printed during the execution (`-v`) and the corrected long reads are written to the compressed file *out_long_reads.fastq.gz* (`-G -o out_long_reads`).\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single compute node - two steps",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The correction can be split in two steps which can be run on different compute nodes in the order given below. It can be beneficial if there is a time limit on the used compute nodes.\n```\nRatatosk correct -1 -v -c 16 -s short_reads.fastq -l in_long_reads.fastq -o out_long_reads\nRatatosk correct -2 -v -G -c 16 -s short_reads.fastq -l out_long_reads.2.fastq -L in_long_reads.fastq -o out_long_reads\n```\nThese commands split the correction in the two different correction passes of Ratatosk (`-1` and `-2`). The first command is likely to be the most memory and time consuming of the two.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single compute node - four steps",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The correction can be split in four steps which can be run on different compute nodes in the order given below. It is sometimes beneficial if there is a time limit on the used compute nodes.\n```\nRatatosk index -1 -v -c 16 -s short_reads.fastq -l in_long_reads.fastq -o out_long_reads\nRatatosk correct -1 -v -c 16 -g out_long_reads.index.k31.fasta -d out_long_reads.index.k31.rtsk -l in_long_reads.fastq -o out_long_reads\nRatatosk index -2 -v -c 16 -g out_long_reads.index.k63.fasta -l out_long_reads.2.fastq -o out_long_reads\nRatatosk correct -2 -v -G -c 16 -g out_long_reads.index.k63.fasta -d out_long_reads.index.k63.rtsk -l out_long_reads.2.fastq -L in_long_reads.fastq -o out_long_reads\n```\nThese commands split the correction in the two different correction passes of Ratatosk (`-1` and `-2`) and each correction pass is split into its indexing part (`index`) and correction part (`correct`).\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Multiple compute nodes - cluster/cloud",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "See our [Nextflow pipeline](Ratatosk_nf) to run the correction in parallel over multiple compute nodes.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Options",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "- **Base quality** (`-Q`)\n\n  By default, Ratatosk considers that the maximum base quality value of long reads is 40 but this can be changed to a different value using `-Q`. For example, newer ONT dataset can use a maximum quality vaue of 90 in which case `-Q 90` **must** be used.\n\n- **Insert size** (`-i`)\n\n  By default, Ratatosk uses an estimated paired-end short reads insert size (read length * 2 + fragment size) of about 500bp. You can set the exact insert size with `-i`. If your input short reads are single end reads, set the insert size to the read length.\n\n- **Trimming/Splitting** (`-t`)\n\n  By default, Ratatosk outputs all bases (corrected and uncorrected). By using `-t`, bases with a low correction quality score are trimmed and split. Specifically, given a minimum quality score *Q* (`-t Q`), only subsequences of the corrected long reads for which the bases have a correction quality score >=*Q* are output. Each output subsequence will have `@name/i` as name for which `name` is the input name of the long read and `i` is an integer subsequence ID for read `name`. Note that only subsequences larger than the *k2*-mer size in Ratatosk (63) are output.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced options",
        "parent_header": [
          "Ratatosk",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The default *k1*/*k2*-mer lengths (1st/2nd correction passes) are 31/63. To work with larger *k*-mers (using `-k/-K`), you must compile Ratatosk with a larger `MAX_KMER_SIZE` parameter where `MAX_KMER_SIZE=round(k2 + 1, 32)`, i.e. (*k2* + 1) rounded to the larger multiple of 32. Specifying `MAX_KMER_SIZE` at compilation is done as follows when entering the `cmake` command:\n```\ncmake -DMAX_KMER_SIZE=96 ..\n```\nIn this example, the maximum *k1*/*k2*-mer length allowed is 95.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DecodeGenetics/Ratatosk/master/Ratatosk_nf/Ratatosk.nf"
      },
      "technique": "file_exploration"
    }
  ]
}