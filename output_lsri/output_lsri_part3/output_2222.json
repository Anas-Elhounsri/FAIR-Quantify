{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yanailab/celseq2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-04T16:30:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T01:46:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Generate the UMI count matrix from CEL-Seq2 sequencing data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.998039538260692,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "This is `celseq2`, a Python framework for generating the UMI count matrix\nfrom CEL-Seq2 [\\*] sequencing data. We believe data digestion\nshould be automated, and it should be done in a manner not just computational\nefficient, but also user-friendly and developer-friendly.\n \n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yanailab/celseq2/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yanailab/celseq2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yanailab/celseq2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yanailab/celseq2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/ntJVTYM.gif"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install `celseq2`",
        "type": "Text_excerpt",
        "value": "``` bash\ngit clone git@github.com:yanailab/celseq2.git\ncd celseq2\npip install ./\n```\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9989679510793901,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "Authors: See <https://github.com/yanailab/celseq2/blob/master/AUTHORS> \nLicense: See <https://github.com/yanailab/celseq2/blob/master/LICENSE> \n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yanailab/celseq2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics-pipeline, cel-seq2, single-cell-rna-seq, snakemake, spatial-transcriptomics, umi-count-matrix"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2017 New York University\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "celseq2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "yanailab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 106542,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Puriney",
          "type": "User"
        },
        "date_created": "2018-05-10T19:50:32Z",
        "date_published": "2018-05-10T19:51:44Z",
        "html_url": "https://github.com/yanailab/celseq2/releases/tag/v0.5.3",
        "name": "v0.5.3 More plotly graphs about your data",
        "release_id": 10946984,
        "tag": "v0.5.3",
        "tarball_url": "https://api.github.com/repos/yanailab/celseq2/tarball/v0.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/yanailab/celseq2/releases/10946984",
        "value": "https://api.github.com/repos/yanailab/celseq2/releases/10946984",
        "zipball_url": "https://api.github.com/repos/yanailab/celseq2/zipball/v0.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Puriney",
          "type": "User"
        },
        "date_created": "2018-04-16T20:35:17Z",
        "date_published": "2018-04-16T20:36:10Z",
        "description": "See: https://yanailab.github.io/celseq2/about/release_note/#v052",
        "html_url": "https://github.com/yanailab/celseq2/releases/tag/v0.5.2",
        "name": "v0.5.2 QC and extra parameters for alignment",
        "release_id": 10572081,
        "tag": "v0.5.2",
        "tarball_url": "https://api.github.com/repos/yanailab/celseq2/tarball/v0.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/yanailab/celseq2/releases/10572081",
        "value": "https://api.github.com/repos/yanailab/celseq2/releases/10572081",
        "zipball_url": "https://api.github.com/repos/yanailab/celseq2/zipball/v0.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Puriney",
          "type": "User"
        },
        "date_created": "2018-04-06T22:24:11Z",
        "date_published": "2018-04-06T22:25:33Z",
        "description": "https://yanailab.github.io/celseq2/about/release_note/#v051",
        "html_url": "https://github.com/yanailab/celseq2/releases/tag/v0.5.1",
        "name": "v0.5.1",
        "release_id": 10436061,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/yanailab/celseq2/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/yanailab/celseq2/releases/10436061",
        "value": "https://api.github.com/repos/yanailab/celseq2/releases/10436061",
        "zipball_url": "https://api.github.com/repos/yanailab/celseq2/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step-3: Run Pipeline of `celseq2`",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Launch pipeline in the computing node which performs 10 tasks in parallel.\n\n``` bash\ncelseq2 --config-file /path/to/wonderful_CEL-Seq2_config.yaml \\\n    --experiment-table /path/to/wonderful_experiment_table.txt \\\n    --output-dir /path/to/result_dir \\\n    -j 10\n```\n\nRead [\"Launch Pipeline\"](https://yanailab.github.io/celseq2/user_guide/launch_pipeline/)\nfor full instructions to see how to submit jobs to cluster, or preview how many\ntasks are going to be scheduled.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:12:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "type": "Text_excerpt",
        "value": "Running `celseq2` pipeline is as easy as 1-2-3. Below is the visualization of\nthe experiment design as same as the\n[sample sheet](https://github.com/yanailab/CEL-Seq-pipeline/blob/133912cd4ceb20af0c67627ab883dfce8b9668df/sample_sheet_example.txt)\nused in last generation of the pipeline ([CEL-Seq-pipeline](https://github.com/yanailab/CEL-Seq-pipeline)) as example.\n\n![experiment-old-pipeline-visualize](https://i.imgur.com/ntJVTYM.gif)\n\nThe user had two biological samples which could come from two different\nexperiments, two time-points, two types of tissues, or even two labs. They were\ndenoted as squares and circles, respectively. Each sample had 9 cells.\n\nIn principle, what the user would expect as final output was one UMI count matrix\nfor each sample, which meant two UMI matrices in total in this example.\n\nDuring the CEL-Seq2 experiment, all cells were placed in one 96-well cell plate.\nThey were labeled with same sequencing barcodes (shown as orange plate)\nbut each cell was labeled with its own CEL-Seq2 cell barcode, so that all of them\ncould be sequenced together without losing identities. In details, the\nnine cells from Experiment-1 were labeled with CEL-Seq2 cell barcodes indexed\nfrom 1 to 9, respectively, while the other nine cells from Experiment-2 were\nlabeled with cell barcodes 10 to 18.\n\nFinally the library was distributed in two lanes (purple and dark gray bar) of a\nsequencer, and got sequenced, which resulted in two sets of CEL-Seq2 data (per\nlane per sequencing barcode).\n\nWhat would the pipeline of `celseq2` do for the user was to generate UMI-count\nmatrix per experiment with the two sets of CEL-Seq2 data as input.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step-1: Specify Global Configuration of Workflow",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Run `new-configuration-file` command to initiate configuration file (YAML\nformat), which specifies the details of CEL-Seq2 techniques the users perform,\ne.g. the cell barcodes sequence dictionary, and transcriptome annotation\ninformation for quantifying UMIs, etc.\n\nThis configuration can be shared and used more than once as long as user is\nrunning pipeline on same species.\n\n``` bash\nnew-configuration-file -o /path/to/wonderful_CEL-Seq2_config.yaml\n```\n\nExample of configuration is [here](https://github.com/yanailab/celseq2/blob/master/example/config.yaml).\n\nExample of CEL-Seq2 cell barcodes sequence dictionary is [here](https://github.com/yanailab/celseq2/blob/master/example/barcodes_cel-seq_umis96.tab).\n\nRead [\"Setup Configuration\"](https://yanailab.github.io/celseq2/user_guide/setup_config/)\nfor full instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step-2: Define Experiment Table",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "Run `new-experiment-table` command to initiate a table (space/tab separated\nfile format) specifying the experiment layout.\n\n``` bash\nnew-experiment-table -o /path/to/wonderful_experiment_table.txt\n```\n\nFill information into the generated experiment table file row by row.\n\nThe content of experiment table in this example could be:\n\n| SAMPLE_NAME               | CELL_BARCODES_INDEX   | R1                        | R2                        |\n|-----------------------    |---------------------  |-------------------------  |-------------------------  |\n| wonderful_experiment1     | 1-9                   | path/to/lane1-R1.fastq.gz   | path/to/lane1-R2.fastq.gz   |\n| wonderful_experiment2     | 10-18                 | path/to/lane1-R1.fastq.gz   | path/to/lane1-R2.fastq.gz   |\n| wonderful_experiment1     | 1-9              | path/to/lane2-R1.fastq.gz   | path/to/lane2-R2.fastq.gz   |\n| wonderful_experiment2     | 10-18                 | path/to/lane2-R1.fastq.gz | path/to/lane2-R2.fastq.gz   |\n\nRead [\"Experiment Table Specification\"](https://yanailab.github.io/celseq2/user_guide/experiment_table/)\nfor full instructions when more complexed experiment designs take place.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Results",
        "parent_header": [
          "Quick Start"
        ],
        "type": "Text_excerpt",
        "value": "All the results are saved under <kbd>/path/to/result_dir</kbd> that user\nspecified, which has folder structure:\n\n```\n\u251c\u2500\u2500 annotation\n\u251c\u2500\u2500 expr                  # <== Here saves all the UMI count matrices\n\u251c\u2500\u2500 input\n\u251c\u2500\u2500 small_diagnose\n\u251c\u2500\u2500 small_fq\n\u251c\u2500\u2500 small_log\n\u251c\u2500\u2500 small_sam\n\u251c\u2500\u2500 small_umi_count\n\u2514\u2500\u2500 small_umi_set\n```\n\nIn particular, **UMI count matrix** for each of the experiments is\nsaved in both CSV and HDF5 format and exported to <kbd>expr/</kbd> folder.\n\n```\nexpr/\n\u251c\u2500\u2500 wonderful_experiment1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 expr.csv          # <== UMI count matrix for cells denoted as squares\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 expr.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 item-1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 expr.csv\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 expr.h5\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 item-3\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 expr.csv\n\u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 expr.h5\n\u2514\u2500\u2500 wonderful_experiment2\n    \u251c\u2500\u2500 expr.csv          # <== UMI count matrix for cells denoted as circles\n    \u251c\u2500\u2500 expr.h5\n \u00a0\u00a0 \u251c\u2500\u2500 item-2\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 expr.csv\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 expr.h5\n    \u2514\u2500\u2500 item-4\n     \u00a0\u00a0 \u251c\u2500\u2500 expr.csv\n     \u00a0\u00a0 \u2514\u2500\u2500 expr.h5\n```\n\nResults of <kbd>item-X</kbd> are useful to assess technical variation when FASTQ\nfiles from multiple lanes, or technical/biological replicates are present.\n"
      },
      "source": "https://raw.githubusercontent.com/yanailab/celseq2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}