{
  "application_domain": [
    {
      "confidence": 6.53,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/skovaka/UNCALLED"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-19T16:26:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T08:53:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Raw nanopore signal mapper that enables real-time targeted sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9620509822519611,
      "result": {
        "original_header": "UNCALLED",
        "type": "Text_excerpt",
        "value": "A **U**tility for **N**anopore **C**urrent **Al**ignment to **L**arge **E**xpanses of **D**NA \nNote that **UNCALLED can only be applied to legacy r9.4.1 data**. For r10.4.1 data try [ReadFish](https://github.com/LooseLab/readfish) or ONT's builtin adaptive sampling option. \nFor accurate end-to-end nanopore signal alignment, visualization, and analysis see [Uncalled4](https://github.com/skovaka/uncalled4)\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8232539160571266,
      "result": {
        "original_header": "Indexing",
        "type": "Text_excerpt",
        "value": "**We recommend applying repeat masking your reference if it contains eukaryotic sequences.** See [masking](masking/) for more details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8905868114583532,
      "result": {
        "original_header": "Fast5 Mapping",
        "type": "Text_excerpt",
        "value": "- `bwa-prefix` the BWA reference index prefix generated by `uncalled map`\n- `fast5-files`  Reads to be mapped. Can be a directory which will be recursively searched for all files with the \".fast5\" extension, a text file containing one fast5 filename per line, or a comma-separated list of fast5 file names. \n- `-l/--read-list` text file containing a list of read IDs. Only these reads will be mapped if specified        \n- `-n/--read-count` maximum number of reads to map\n - `-t/--threads` number of threads to use for mapping (default: 1)\n- `-e/--max-events-proc` number of events to attempt mapping before giving up on a read (default 30,000). Note that there are approximately two events per nucleotide on average. \n\nSee [example/](example/) for a simple read and reference example.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9709361250082106,
      "result": {
        "original_header": "Real-Time ReadUntil",
        "type": "Text_excerpt",
        "value": "**Warning:** in the latest MinKNOW version, an API bug may prevent UNCALLED from properly ejecting reads. You can identify this bug if you do not see a peak of small \"adaptive sampling\" reads in read length histogram. If this occurs you should stop your sequencing run, briefly start a new sequencing run with MinKNOW's builtin version of adaptive sampling enabled, then stop that run and restart your UNCALLED run. We have found that this may initialize something in MinKNOW which allows UNCALLED to function properly.   \nWe recommend that you try mapping fast5s via `uncalled map` before real-time enrichment, as runtime issues could occur if UNCALLED is not installed properly. \n- `-c/--max-chunks` number of chunks to attempt mapping before giving up on a read (default: 10).\n- `--chunk-size` size of chunks in seconds (default: 1). Note: this is a new feature and may not work as intended (see below)\n- `-t/--threads` number of threads to use for mapping (default: 1)\n- `--port` MinION device port.\n- `--even` will only eject reads from even channels if included\n- `--odd` will only eject reads from odd channels if included\n- `--duration` expected duration of sequencing run in hours (default: 72) \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.966621381486889,
      "result": {
        "original_header": "Altering Chunk Size",
        "type": "Text_excerpt",
        "value": "The ReadUntil API receives signal is \"chunks\", which by default are one second's worth of signal. This can be changed using the `--chunk-size` parameter. Note that `--max-chunks-proc` should also be changed to compensate for changes to chunk sizes. *If the chunk size is changed, you must start running UNCALLED before sequencing begins.* UNCALLED is unable to change the chunk size mid-seqencing-run. In general reducing the chunk size should improve enrichment, although [previous work](http://dx.doi.org/10.1101/2020.02.03.926956) has found that the API becomes unreliable with chunks sizes less than 0.4 seconds. We have not thoroughly tested this feature, and recommend using the default 1 second chunk size for most cases. In the future this default size may be reduced.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9152756862860308,
      "result": {
        "original_header": "Simulator",
        "type": "Text_excerpt",
        "value": "Example files which can be used as template UNCALLED sequencing summary and PAF files for the simulator can be found [here](http://labshare.cshl.edu/shares/schatzlab/www-data/UNCALLED/simulator_files/). The control reads/sequencing summary can be from any sequencing run of your sample of interest, and it does not have to match the sample used in the provided examples. \nThe simulator can take up a large amount of memory (> 100Gb), and loading the fast5 reads can take quite a long time. To reduce the time/memory requirements you could truncate your control sequencing summary and only the loads present in the summary will be loaded, although this may reduce the accuracy of the simulation. Also, unfortunately the fast5 loading portion of the simulator cannot be exited via a keyboard interrupt and must be hard-killed. I will work on fixing this in future versions. \n- `bwa-prefix` the prefix of the index to align to. Should be a BWA index that `uncalled index` was run on\n- `control-fast5-files` path to the directory where control run fast5 files are stored, or a text file containing the path to one control fast5 per line\n- `--ctl-seqsum` sequencing summary of the control run. Read IDs must match the control fast5 files\n- `--unc-seqsum` sequencing summary of the UNCALLED run\n- `--unc-paf` PAF file output by UNCALLED from the UNCALLED run\n- `--sim-speed` scaling factor of simulation duration in the range (0.0, 1.0], where smaller values are faster. Setting below 0.125 may decrease accuracy.\n- `-t/--threads` number of threads to use for mapping (default: 1)\n- `-c/--max-chunks-proc` number of chunks to attempt mapping before giving up on a read (default: 10). Note that for the simulator, altering this changes how many chunks is loaded from each each, changing the memory requirements.\n- `--enrich` will *keep* reads that map to the reference if included\n- `--deplete` will *eject* reads that map to the reference if included\n- `--even` will only eject reads from even channels if included\n- `--odd` will only eject reads from odd channels if included \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9415658651778973,
      "result": {
        "original_header": "Output Format",
        "type": "Text_excerpt",
        "value": "UNCALLED outputs to stdout in a format similar to [PAF](https://github.com/lh3/miniasm/blob/master/PAF.md). Unmapped reads are output with reference-location-dependent fields replaced with \\*s. Lines that begin with \"#\" are comments that useful for debugging. \nQuery coordinates, residue matches, and block lengths are estimated assuming 450bp sequenced per second. This estimate can be significantly off depending on the sequencing run. UNCALLED attempts to map a read as early as possible, so the \"query sequence length\" and \"query end\" fields correspond to the leftmost position where UNCALLED was able to confidently map the read. In many cases this may only be 450bp or 900bp into the read, even if the read is many times longer than this. This differs from aligners such as [minimap2](https://github.com/lh3/minimap2), which attempt to map the full length of the read. \nThe \"query sequence length\" field currently does not correspond to the actual read length, rather an estimate of the number of bases that UNCALLED attempted to align. In most cases this will be equal to \"query end\". This may be changed to better reflect the full read length in future versions. \n- `mt`: **map time**. Time in milliseconds it took to map the read.\n- `ch`: **channel**. MinION channel that the read came from.\n- `st`: **start sample**. Global _sequencing_ start time of the read (in signal samples, 4000 samples/sec). \n- `ej`: **ejected**. Time that the eject signal was sent, in milliseconds since last chunk was received.\n- `kp`: **kept**. Time that UNCALLED decided to keep the read, in milliseconds since last chunk was received.\n- `en`: **ended**. Time that UNCALLED determined the read ended, in milliseconds since last chunk was received.\n- `mx`: **mux scan**. Time that the read _would have_ been ejected, had it not have occured within a mux scan.\n- `wt`: **wait time**. Time in milliseconds that the read was queued but was not actively being mapped, either due to thread delays or waiting for new chunks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8983639610743754,
      "result": {
        "original_header": "pafstats",
        "type": "Text_excerpt",
        "value": "We have included a functionality called `uncalled pafstats` which computes speed statistics from a PAF file output by UNCALLED. Accuracy statistics can also be included if provided a ground truth PAF file, for example based on [minimap2](https://github.com/lh3/minimap2 alignments of basecalled reads. There is also an option to output the original UNCALLED PAF annotated with comparisons to the ground truth. \nOptional arguments\n- `-n/--max-reads` maximum number of reads to parse\n- `-r/--ref-paf` ground-truth alignments (from minimap2) to compute TP/TN/FP/FN rates\n- `-a/--annotate` if used with `-r`, will output PAF with \"rf:\" tag indicating TP, TN, FP, or FN \nAccuracy statistics:\n- TP: true positive - percent infile reads that overlap reference read locations\n- FP: false positive - percent infile reads that do not overlap reference read locations\n- TN: true negative - percent of reads which were not aligned in reference or infile\n- FN: false negative - percent of reads which were aligned in the reference but not in the infile\n- NA: not aligned/not applicable - percent of reads aligned in infile but not in reference. Could be considered a false positive, but the truth is unknown.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9578395557739527,
      "result": {
        "original_header": "Practical Considerations",
        "type": "Text_excerpt",
        "value": "For ReadUntil sequencing, the first decision to make is whether to perform **enrichment** or **depletion** (`--enrich` or `--deplete`). \nIn enrichment mode, UNCALLED will eject a read if it *does not* map to the reference, meaning your target should be the reference. \nIn depletion mode, UNCALLED will eject a read if it *does* map to the reference, meaning your target should be everything except your reference. \nNote that enrichment necessitates a quick decision as to whether or not a read maps, since you want to eject a read as fast as possible. Usually ~95% of reads can be mapped within three seconds for highly non-repetitive references, so setting `-c/--max-chunks-proc` to `3` generally works well for enrichment. The default value of `10` works well for depletion. Note these values assume `--chunk-size` is set to the default 1 second. \nUNCALLED currently does not support large (> ~1Gbp) or highly repetitive references. \nThe speed and mapping rate both progressively drop as references become larger and more repetitive. \nBacterial genomes or small collections of divergent bacterial genomes typically work well. \nSmall segments of eukaryotic genomes can also be used, however the presence of any repetitve elements will harm the performance. \nCollections of highly similar genomes wil not work well, as conserved sequences introduce repeats.\nSee [masking](masking/) for repeat masking scripts and guidelines. \nReadUntil works best with longer reads. Maximize your read lengths for best results. You may also need to perform a nuclease flush and reloading to achieve the highest yield of on-target bases. \nUNCALLED currently only supports reads sequenced with r9.4.1/r9.4 chemistry.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9513373428390811,
      "result": {
        "original_header": "Release notes",
        "type": "Text_excerpt",
        "value": "- v2.2: added event profiler which masks out pore stalls, and added compile-time debug options\n- v2.1: updated ReadUntil client for latest MinKNOW version, made `uncalled index` automatically build the BWA index, added hdf5 submodule, further automated installation by auto-building hdf5, switched to using setuptools, moved submodules to submods/\n- v2.0: released the ReadUntil simulator `uncalled sim`, which can predict how much enrichment UNCALLED could provide on a given reference, using a control and UNCALLED run as a template. _Also changed the format of certain arguments_: index prefix and fast5 list are now positional, and some flags have changed names.\n- v1.2: fixed indexing for particularly large or small reference\n- v1.1: added support for altering chunk size\n- v1.0: pre-print release\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/skovaka/UNCALLED/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 44
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/skovaka/UNCALLED/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "skovaka/UNCALLED"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UNCALLED"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/example/run_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/masking/mask_external.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/masking/mask_internal.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "UNCALLED"
        ],
        "type": "Text_excerpt",
        "value": "```\n> pip3 install git+https://github.com/skovaka/UNCALLED.git --user\n```\n\nOR\n\n```\n> git clone --recursive https://github.com/skovaka/UNCALLED.git\n> cd UNCALLED\n> pip3 install .\n```\n\nRequires python >= 3.6, read-until == 3.0.0, pybind11 >= 2.5.0, and GCC >= 4.8.1 (all except GCC are automatically downloaded and installed)\n\nOther dependencies are included via submodules, so be sure to clone with `git --recursive`\n\nWe recommend running on a Linux machine. UNCALLED has been successfully installed and run on Mac computers, but real-time ReadUntil has not been tested on a Mac. Installing UNCALLED has not been attempted on Windows.\n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8990020468917725,
      "result": {
        "original_header": "Indexing",
        "type": "Text_excerpt",
        "value": "**Optional arguments:** \nNote that UNCALLED uses the [BWA](https://github.com/lh3/bwa) FM Index to encode the reference, and this command will use a previously built BWA index if all the required files exist with the specified prefix. Otherwise, a new BWA index will be automatically built.  \n**We recommend applying repeat masking your reference if it contains eukaryotic sequences.** See [masking](masking/) for more details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9457282583654804,
      "result": {
        "original_header": "Real-Time ReadUntil",
        "type": "Text_excerpt",
        "value": "**Warning:** in the latest MinKNOW version, an API bug may prevent UNCALLED from properly ejecting reads. You can identify this bug if you do not see a peak of small \"adaptive sampling\" reads in read length histogram. If this occurs you should stop your sequencing run, briefly start a new sequencing run with MinKNOW's builtin version of adaptive sampling enabled, then stop that run and restart your UNCALLED run. We have found that this may initialize something in MinKNOW which allows UNCALLED to function properly.   \nWe recommend that you try mapping fast5s via `uncalled map` before real-time enrichment, as runtime issues could occur if UNCALLED is not installed properly. \nThe command can generally be run at any time before or during a sequencing run, although an error may occur if UNCALLED is run before any sequencing run has been started in the current MinKNOW session. If this is happens you should start UNCALLED after the run begins, ideally during the first mux scan. If you want to change the chunk size you must run the command *before* starting the run (see below).  \n**Positional arguments:**\n- `bwa-prefix` the BWA reference index prefix generated by `uncalled map` \n**Optional Arguments:** \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999966922112971,
      "result": {
        "original_header": "Simulator",
        "type": "Text_excerpt",
        "value": "**Example:**\n```\n> uncalled sim E.coli.fasta /path/to/control/fast5s --ctl-seqsum /path/to/control/sequencing_summary.txt --unc-seqsum /path/to/uncalled/sequencing_summary.txt --unc-paf /path/to/uncalled/uncalled_out.paf -t 16 --enrich -c 3 --sim-speed 0.25 > uncalled_out.paf 2> uncalled_err.txt\n\n> sim_scripts/est_genome_yield.py -u uncalled_out.paf --enrich -x E.coli -m mm2.paf -s sequencing_summary.txt --sim-speed 0.25\n\nunc_on_bp       150.678033\nunc_total_bp    6094.559395\ncnt_on_bp       33.145022\ncnt_total_bp    8271.651331\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "Indexing",
        "type": "Text_excerpt",
        "value": "**Example:** \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8238841186228608,
      "result": {
        "original_header": "pafstats",
        "type": "Text_excerpt",
        "value": "Positional arguments\n- `infile` PAF file output by UNCALLED \n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/skovaka/UNCALLED/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Sam Kovaka\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/LICENCE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/skovaka/UNCALLED/master/uncalled_logo_small.png"
      },
      "source": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UNCALLED"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "skovaka"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 256296,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 88780,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4236,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2611,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/skovaka/UNCALLED/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:18:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 520
      },
      "technique": "GitHub_API"
    }
  ]
}