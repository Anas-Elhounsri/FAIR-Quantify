{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "GNN-Surrogate"
        ],
        "type": "Text_excerpt",
        "value": "Our code is inspired by [InSituNet](https://github.com/hewenbin/insitu_net).\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 16.81,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9706048802920091,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GNN-Surrogate"
        ],
        "type": "Text_excerpt",
        "value": "If you use this code for your research, please cite our paper.\n```\n@article{shi2022gnn,\n  title={GNN-Surrogate: A Hierarchical and Adaptive Graph Neural Network for Parameter Space Exploration of Unstructured-Mesh Ocean Simulations},\n  author={Shi, Neng and Xu, Jiayi and Wurster, Skylar W and Guo, Hanqi and Woodring, Jonathan and Van Roekel, Luke P and Shen, Han-Wei},\n  journal={IEEE Transactions on Visualization and Computer Graphics},\n  year={2022},\n  publisher={IEEE}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Shi, Neng and Xu, Jiayi and Wurster, Skylar W and Guo, Hanqi and Woodring, Jonathan and Van Roekel, Luke P and Shen, Han-Wei",
        "format": "bibtex",
        "title": "GNN-Surrogate: A Hierarchical and Adaptive Graph Neural Network for Parameter Space Exploration of Unstructured-Mesh Ocean Simulations",
        "type": "Text_excerpt",
        "value": "@article{shi2022gnn,\n    publisher = {IEEE},\n    year = {2022},\n    journal = {IEEE Transactions on Visualization and Computer Graphics},\n    author = {Shi, Neng and Xu, Jiayi and Wurster, Skylar W and Guo, Hanqi and Woodring, Jonathan and Van Roekel, Luke P and Shen, Han-Wei},\n    title = {GNN-Surrogate: A Hierarchical and Adaptive Graph Neural Network for Parameter Space Exploration of Unstructured-Mesh Ocean Simulations},\n}"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/trainsn/GNN-Surrogate"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-30T20:03:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-04T15:45:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GNN-Surrogate: A Hierarchical and Adaptive Graph Neural Network for Parameter Space Exploration of Unstructured-Mesh Ocean Simulations - Source Code"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9957948477362757,
      "result": {
        "original_header": "GNN-Surrogate",
        "type": "Text_excerpt",
        "value": "The source code for our PacificVis 2022 paper \"GNN-Surrogate: A Hierarchical and Adaptive Graph Neural Network for Parameter Space Exploration of Unstructured-Mesh Ocean Simulations\".\n \n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8610616229474186,
      "result": {
        "original_header": "Dataset and Saved Model",
        "type": "Text_excerpt",
        "value": "The folder \"ght_0.5\" contains the graph hierarchy and the training data after the GHT cutting with threshold 0.5, formatted with npy. \nYou can directly use the dataset to start model training.  \nThe folder \"residual\" contains the residual data of full resolution, which can be used for model evaluation before loading the predicted output back to NetCDF. \nThe folder \"train\" contains the reference member, you can add the residual data of full resolution to the reference member to obtain the simulation output.  \nThe file \"training_log-ch64.o8434915\" is the training log with channel multiplier 64, and the file \"model_1200.pth.tar\" is the saved model after training for nearly 36 hours. \n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/trainsn/GNN-Surrogate/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/trainsn/GNN-Surrogate/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "trainsn/GNN-Surrogate"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GNN-Surrogate"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/mpas_ght/src/adjMat.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/sensitivity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/train.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/eval.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/eval/rbf_eval.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/eval/rbf_train.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/model/eval/eval_img.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/images/overview(a).jpg"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/images/overview(b).jpg"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/images/overview(d).jpg"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/images/overview(e).jpg"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Training Data Preparation",
        "parent_header": [
          "GNN-Surrogate",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Given an MPAS-Ocean netcdf file, extract the temperature field and represent it with a 1D array for future training. \n\nAfter compling MPASPerm, run \n\n```\ncd mpas_perm/build\n./MPASPerm /path/to/input_root/ /path/to/output_root/ netcdf_filename\n```\n\nNext, given the reference, calculate the residual for every ensemble member:\n```\ncd prepost\npython raw2res.py --root dataset --reference refence_ensemble_member\n```\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8358563623514992,
      "result": {
        "original_header": "Dataset and Saved Model",
        "type": "Text_excerpt",
        "value": "The file \"0070_4.88364_578.19012_0.51473_227.95909.nc\" is an example MPAS NetCDF file. \n \n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/trainsn/GNN-Surrogate/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "data-visualization, deep-learning, generative-model, graph-neural-networks, scientific-visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Neng Shi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GNN-Surrogate"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "trainsn"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 161910,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 105053,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 25431,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 19396,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 13192,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1862,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:46:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Graph Hierarchy Generation",
        "parent_header": [
          "GNN-Surrogate",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/trainsn/GNN-Surrogate/blob/main/images/overview(a).jpg\" width=\"80%\">\n\nGiven the MPAS-Ocean mesh structure (a NetCDF file), a corresponding graph hierarchy is generated. \n\nAfter compiling MPASGraph, run \n\n```\ncd mpas_graph/build\n./MPASGraph netcdf_filepath\n```\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cutting Policy Generation",
        "parent_header": [
          "GNN-Surrogate",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/trainsn/GNN-Surrogate/blob/main/images/overview(b).jpg\" width=\"80%\">\n\nAfter a few simulations are run, generate the graph hierarchy cutting policy.\n\nAfter compiling MPASGHT, run\n\n```\ncd mpas_ght/build\n./MPASGHT /path/to/graph_root/ threshold /path/to/input_netcdf_root/ /path/to/ght_root/ numFiles binary_filenames\npython adjMat.py --root /path/to/ght_root/\n```\n\nNext, given the cutting policy, use adaptive resolutions to represent each ensemble member.\n```\n\npython res2ght.py --root dataset --ght ght_dir\n```\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Model Training",
        "parent_header": [
          "GNN-Surrogate",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/trainsn/GNN-Surrogate/blob/main/images/overview(d).jpg\" width=\"60%\">\n\nA deep surrogate model (i.e., GNN-Surrogate) is trained based on the generated training dataset:\n```\ncd model\npython main.py --root dataset --gan-loss none --sn --ch channel_multiplier \n```\n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inference",
        "parent_header": [
          "GNN-Surrogate",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/trainsn/GNN-Surrogate/blob/main/images/overview(e).jpg\" width=\"20%\">\n\nIn the inference stage, GNN-Surrogate is first used to predict the simulation residual.\n\nYou can first run the evaluation code to get the accuracy on the testing dataset: \n```\ncd model\npython eval.py --root dataset --sn --ch channel_multiplier --resume trained_model\n```\n\nThen, you can provide your own simulation parameters to let the model predict the residual to the reference ensemble member: \n```\ncd model\npython infer.py --root dataset --gan-loss none --sn --ch channel_multiplier --resume trained_model --bwsa bwsa --kappa kappa --cvmix cvmix --mom mom\n```\n\nNext, we add the reference back to obtain predicted simulation outputs:\n```\ncd prepost\npython res2raw.py --root dataset --reference refence_ensemble_member --ght ght_dir\n```\n\nFinally, we load the predicted simulation output back to the MPAS netcdf file.\n\nAfter compling MPASPermBack, run\n```\ncd mpas_permBack/build\n./MPASPermBack /path/to/input_root/ /path/to/output_root/ netcdf_filename\n```\n\nHaving the new MPAS NetCDF file, consider using the following repo for visualizatoin: \n[MPASMap](https://github.com/trainsn/MPASMap/tree/main) for horizontal cross-sections, \n[MPASCross](https://github.com/trainsn/MPASCross/tree/main) for vertical cross-sections, \nand [MPASDepth](https://github.com/trainsn/MPASDepth/tree/main) for Isothermal Layer (ITL) Depth. \n"
      },
      "source": "https://raw.githubusercontent.com/trainsn/GNN-Surrogate/main/README.md",
      "technique": "header_analysis"
    }
  ]
}