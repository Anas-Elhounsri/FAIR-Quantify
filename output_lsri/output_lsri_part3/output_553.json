{
  "application_domain": [
    {
      "confidence": 17.8,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite RCandy in publications use:\")\n\ncitEntry(entry = \"Unpublished\",\n  title        = \"{RCandy}: Rapid, simple and flexible interactive visualisation of homologous recombination events in bacterial genomes\",\n  author       = personList(as.person(\"Chrispin Chaguza\"),\n                   as.person(\"Gerry Tonkin-Hill\"),\n                   as.person(\"Stephanie W. Lo\"),\n                   as.person(\"James Hadfield\"),\n                   as.person(\"Nicholas J. Croucher\"),\n                   as.person(\"Stephen D. Bentley\"),\n                   as.person(\"Simon R. Harris\")),\n  journal      = \"\",\n  year         = \"2021\",\n  volume       = \"\",\n  number       = \"\",\n  pages        = \"\",\n  url          = \"https://github.com/ChrispinChaguza/RCandy/\",\n  note         = \"https://github.com/ChrispinChaguza/RCandy/\",\n\n  textVersion  =\n  paste(\"Chrispin Chaguza, Gerry Tonkin-Hill, Stephanie W. Lo, James Hadfield, Nicholas J. Croucher, Stephen D. Bentley, Simon R. Harris (2011).\",\n        \"RCandy: Rapid, simple and flexible interactive visualisation of homologous recombination events in bacterial genomes.\",\n        \"URL https://github.com/ChrispinChaguza/RCandy/.\")\n)\n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "RCandy"
        ],
        "type": "Text_excerpt",
        "value": "-   Croucher NJ, Page AJ, Connor TR, Delaney AJ, Keane JA, Bentley SD, Parkhill J, Harris SR. Rapid phylogenetic analysis of large samples of recombinant bacterial whole genome sequences using Gubbins. Nucleic Acids Res. 2015 Feb 18;43(3):e15. doi: 10.1093/nar/gku1196. Epub 2014 Nov 20. PMID: 25414349; PMCID: PMC4330336. <https://pubmed.ncbi.nlm.nih.gov/25414349/>.\n\n-   Marttinen P, Hanage WP, Croucher NJ, Connor TR, Harris SR, Bentley SD, Corander J. Detection of recombination events in bacterial genomes from large population samples. Nucleic Acids Res. 2012 Jan;40(1):e6. doi: 10.1093/nar/gkr928. Epub 2011 Nov 7. PMID: 22064866; PMCID: PMC3245952. <https://pubmed.ncbi.nlm.nih.gov/22064866/>.\n\n-   Chaguza C, Tonkin-Hill G, Lo SW, Hadfield J, Croucher NJ, Harris SR, Bentley SD. RCandy: an R package for visualising homologous recombinations in bacterial genomes. Bioinformatics. 2021 Dec 2;38(5):1450\u20131. doi: 10.1093/bioinformatics/btab814. Epub ahead of print. PMID: 34864895; PMCID: PMC8826011. <https://pubmed.ncbi.nlm.nih.gov/34864895/>.\n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChrispinChaguza/RCandy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-22T08:16:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-21T19:12:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCandy:  an R package for visualising homologous recombination events in bacterial genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.989460876804481,
      "result": {
        "original_header": "RCandy",
        "type": "Text_excerpt",
        "value": "RCandy plots a phylogenetic tree in context of strain metadata and recombination events identified by Gubbins [(Croucher et al. 2015, Nucleic Acids Research. PMID: 25414349)](https://pubmed.ncbi.nlm.nih.gov/25414349/) and BRATNextGen [(Marttinen et al. 2012, Nucleic Acids Res. PMID: 22064866)](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3245952/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9819244399830511,
      "result": {
        "original_header": "Load sample data",
        "type": "Text_excerpt",
        "value": "In this example, we will load sample data for *Streptococcus pneumoniae* sequence type (ST) 320. This data was generated using genomes described in [*Gladstone RA et al. EBioMedicine. 2019 May;43:338-346. doi: 10.1016/j.ebiom.2019.04.021. Epub 2019 Apr 16. PMID: 31003929; PMCID: PMC6557916*](https://pubmed.ncbi.nlm.nih.gov/31003929/) \n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9792974587903285,
      "result": {
        "original_header": "Other options",
        "type": "Text_excerpt",
        "value": "There are many options that can be used to customise the plots. These include hiding the figure legend using *show.fig.legend*, increasing the font size for the tips or taxa using *tree.tip.label.cex*, hiding the number of recombination events identified in each genome *show.rec.freq.per.genome*, hiding metadata columns *show.metadata.columns*, save the plot to a PDF file (or other types including PNG, JPG and SVG) using *save.to.this.file* for use in publications either directly or editing in Inkscape and Adobe Illustrator, and adjusting plot height and width using *plot.height* and *plot.width* respectively.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9965839561165746,
      "result": {
        "original_header": "Some suggestions",
        "type": "Text_excerpt",
        "value": "Another similar tool for interactive visualisation of recombination events is *Phandango* available [here](https://jameshadfield.github.io/phandango/#/) and described [here](https://academic.oup.com/bioinformatics/article/34/2/292/4212949). If you are only interested in visualising the phylogenetic tree and associated metadata without recombination events, [*ggtree*](https://github.com/YuLab-SMU/ggtree) and [*microreact*](https://microreact.org/showcase) offer many useful functionalities.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChrispinChaguza/RCandy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChrispinChaguza/RCandy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChrispinChaguza/RCandy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCandy"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-3-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-4-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-5-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-6-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-7-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-8-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-9-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-10-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-11-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-12-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-13-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-14-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-15-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-16-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-17-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-18-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-20-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/inst/vignette-supp/unnamed-chunk-23-1.png"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RCandy"
        ],
        "type": "Text_excerpt",
        "value": "You can install RCandy from [GitHub](https://github.com/ChrispinChaguza/RCandy/) with *devtools*:\n\n``` r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"ChrispinChaguza/RCandy\", build_vignettes = FALSE)\n```\n\nNote, R version &gt;3.6 is required to install the package.\n\n-   Recommended version of R:\n    -   R (&gt;= 3.6)\n-   Required dependencies:\n    -   ape,\n    -   dplyr,\n    -   graphics,\n    -   grDevices,\n    -   magrittr,\n    -   phytools,\n    -   shape,\n    -   stats,\n    -   data.table,\n    -   stringr,\n    -   tibble,\n    -   tidyr,\n    -   utils,\n    -   viridis\n-   Other optional packages (may be required to build vignettes)\n    -   knitr,\n    -   rmarkdown,\n    -   markdown\n\nRun the code below to build the vignette.\n\n``` r\nlibrary(RCandy)\nlibrary(ape)\nlibrary(tidyr)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9987339032715569,
      "result": {
        "original_header": "Load sample data",
        "type": "Text_excerpt",
        "value": "Note that the metadata file is optional.\n``` r\ntree.file <- system.file(\"extdata\", \"ST320.final_tree.tre\", package = \"RCandy\", mustWork = TRUE)\nmetadata.file <- system.file(\"extdata\", \"ST320.tsv\", package = \"RCandy\", mustWork = TRUE)\ngubbins.gff <- system.file(\"extdata\", \"ST320.recombination_predictions.gff\", package = \"RCandy\", \n    mustWork = TRUE)\nref.genome.gff <- system.file(\"extdata\", \"Hungary19A-6.gff\", package = \"RCandy\", \n    mustWork = TRUE)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChrispinChaguza/RCandy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2021\nCOPYRIGHT HOLDER: Chrispin Chaguza\n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RCandy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ChrispinChaguza"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 99548,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running RCandy",
        "parent_header": [
          "RCandy"
        ],
        "type": "Text_excerpt",
        "value": "The simplest way to run RCandy to generate the phylogenetic tree and taxon metadata data. Here we have selected *Country* and *Source* columns in the metadata file. It's highly recommended that the first column in the metadata file should contain taxon names matching the names in the phylogenetic tree. We also specify additional options to ladderize and root the tree at midpoint. \n\n***By default the columns in the metadata file are assumed to be separated by tabs \"\\t\", but this can be changed by passing this argument taxon.metadata.delimiter = \",\" when working with a file with comma separated values.***\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"))\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-3-1.png\" width=\"100%\" />\n\nIf the first column in the metadata file does not contain taxon names then the column containing the taxon names should be explicitly specified using *taxon.id.column* option.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\")\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-4-1.png\" width=\"100%\" />\n\nNext we load the tree, metadata file, reference genome and recombination events generated by [Gubbins](\\url%7Bhttps://pubmed.ncbi.nlm.nih.gov/25414349/%7D). If the recombination events are generated by [BRATNextGen](\\url%7Bhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC3245952/%7D) then this option *recom.input.type = \"BRATNextGen\"* should be specified. By default, output from Gubbins is assumed (*recom.input.type = \"Gubbins\"*).\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-5-1.png\" width=\"100%\" />\n\nWe can specify recombination events in a specific region of the genome and show the gene labels in the reference genome annotation file. The gene labels are turned off by default.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-6-1.png\" width=\"100%\" />\n\nWe could also colour the phylogenetic data by a column in the metadata column. Here we will colour the tips using *Country*.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\")\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-7-1.png\" width=\"100%\" />\n\nAnother option, although very slow sometimes, is to map some characters onto the phylogenetic tree nodes using discrete ancestral character reconstruction using the *ace* function in [*ape*](\\url%7Bhttps://pubmed.ncbi.nlm.nih.gov/14734327/%7D). Below we use the presence/absence patterns of *mefA* gene as the discrete trait. **Warning: Ancestral character reconstruction may take some a while**.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    trait.for.ancestral.reconstr = \"mefA\")\n#> Tips will be coloured by trait.for.ancestral.reconstr option and color.tree.tips.by.column will be ignored\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-8-1.png\" width=\"100%\" />\n\nNotice that although we specified the taxon to be coloured by *Country*, the discrete trait used for ancestral reconstruction overrides this option. When the trait for ancestral reconstruction contains only one value, no reconstruction is performed.\n\nWe can also customise the recombination diagram slightly by showing the border and genome tracks using these options *show.rec.plot.border* and *show.rec.plot.tracks* respectively.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    show.rec.plot.border = TRUE, show.rec.plot.tracks = TRUE)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-9-1.png\" width=\"100%\" />\n\nWe could also turn off the background for the recombination diagram using *rec.plot.bg.transparency* option.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    show.rec.plot.border = TRUE, show.rec.plot.tracks = TRUE, rec.plot.bg.transparency = 0.15)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-10-1.png\" width=\"100%\" />\n\nWhat if we need to see the specific taxon names the phylogenetic tree in which recombination events occurred. We could specify the *show.tip.label* certain recombination events.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, show.tip.label = TRUE)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-11-1.png\" width=\"100%\" />\n\nWe could also change the viridis colour pallette used to represent the metadata columns using *color.pallette*. There are five options namely \"viridis\",\"inferno\",\"magma\",\"cividis\", and \"plasma\". Below we use \"viridis\" instead of the default (inferno).\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, color.pallette = \"viridis\")\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-12-1.png\" width=\"100%\" />\n\nWhat if we want to change the angle of the gene labels? There is a way to do this as well using *gene.label.angle* option.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, color.pallette = \"viridis\", \n    gene.label.angle = 90)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-13-1.png\" width=\"100%\" />\n\nsimilarly, the angle of the metadata column panel can also be adjusted using *metadata.column.label.angle*.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    genome.start = 30000, genome.end = 60000, show.gene.label = TRUE, color.tree.tips.by.column = \"Country\", \n    rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, color.pallette = \"viridis\", \n    gene.label.angle = 90, metadata.column.label.angle = 45)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-14-1.png\" width=\"100%\" />\n\nSometimes we may want to see recombination events in specific taxa. We could specify the taxon names to include in the figure using *subtree.tips*. Below we specify a vector containing a subset of 50 taxon names from the full phylogenetic tree.\n\n``` r\ntree1 <- ape::read.tree(tree.file)\nsubtree.taxa <- tree1$tip.label[1:50]\n\nRCandyVis(tree.file.name = tree1, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    show.gene.label = FALSE, color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, \n    show.rec.plot.tracks = TRUE, subtree.tips = subtree.taxa)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-15-1.png\" width=\"100%\" />\n\nSometimes we may want to identify recombination hotspots or genomic regions containing many unique but overlapping recombination events. Below we specify the *show.rec.freq.per.genome* option to turn on this feature. **Warning: Generating recombination frequency plot may take some a while**.\n\n``` r\ntree1 <- ape::read.tree(tree.file)\nsubtree.taxa <- tree1$tip.label[1:50]\n\nRCandyVis(tree.file.name = tree1, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    show.gene.label = FALSE, color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, \n    show.rec.plot.tracks = TRUE, show.rec.freq.per.genome = TRUE, subtree.tips = subtree.taxa)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-16-1.png\" width=\"100%\" />\n\nSometimes we may want to identify recombination hotspots or genomic regions containing many unique but overlapping recombination events. Below we specify the show.rec.freq.plot option to turn on this feature. *Note that with this feature there may be significant latency even when the number of recombination events is small*.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    show.gene.label = FALSE, color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, \n    show.rec.plot.tracks = TRUE, show.rec.freq.per.base = TRUE)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-17-1.png\" width=\"100%\" />\n\nSometimes a user may want to specify custom colours for the metadata columns. This can be done by specifying a vector of column names containing the custom colours for each isolate using the *taxon.metadata.columns.colors* option as shown in the example below.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"ermB\", \"mefA\", \n        \"cat\"), taxon.metadata.columns.colors = c(\"ermB_color\", \"mefA_color\", \"cat_color\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    show.gene.label = FALSE, color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, \n    show.rec.plot.tracks = TRUE)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-18-1.png\" width=\"100%\" />\n\nAnother interesting feature is the ability to specify preloaded files for plotting. In the example below we use example dataset containing preloaded objects for the phylogenetic tree, metadata, recombination events ([GFF](\\url%7Bhttps://en.wikipedia.org/wiki/General_feature_format%7D)) and reference genome (GFF).\n\n``` r\ndata(\"RCandy\")\n\ntree <- RCandy$tree\nmetadata <- RCandy$metadata\ngubbins.GFF <- RCandy$refgenome.GFF\nrefgenome.GFF <- RCandy$gubbins.GFF\n```\n\nThen we plot the recombination events using the same code as above.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, \n    color.pallette = \"inferno\", gene.label.angle = 90)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-20-1.png\" width=\"100%\" />\n\nThe data objects used above can be loaded in the correct format using the code below.\n\n``` r\ntree.file <- system.file(\"extdata\", \"ST320.final_tree.tre\", package = \"RCandy\", mustWork = TRUE)\nmetadata.file <- system.file(\"extdata\", \"ST320.tsv\", package = \"RCandy\", mustWork = TRUE)\ngubbins.gff <- system.file(\"extdata\", \"ST320.recombination_predictions.gff\", package = \"RCandy\", \n    mustWork = TRUE)\nref.genome.gff <- system.file(\"extdata\", \"Hungary19A-6.gff\", package = \"RCandy\", \n    mustWork = TRUE)\n```\n\nThen we read the location of the phylogenetic tree file name stored in the variable *tree.file*, metadata file name in *metadata.file*, recombination events file in GFF format in *gubbins.gff*, and reference genome file in GFF format in *ref.genome.gff*.\n\n``` r\ntree <- ape::read.tree(tree.file)\nmetadata <- tidyr::as_tibble(read.table(metadata.file, header = T, sep = \"\\t\", comment.char = \"?\"))\ngubbins.GFF <- load.gubbins.GFF(gubbins.gff)\nrefgenome.GFF <- load.genome.GFF(ref.genome.gff)\n```\n\nLet's draw the recombination plot again to see if the data was loaded correctly.\n\n``` r\nRCandyVis(tree.file.name = tree.file, midpoint.root = TRUE, ladderize.tree.right = TRUE, \n    taxon.metadata.file = metadata.file, taxon.metadata.columns = c(\"Source\", \"Country\"), \n    taxon.id.column = \"ID\", gubbins.gff.file = gubbins.gff, ref.genome.name = ref.genome.gff, \n    color.tree.tips.by.column = \"Country\", rec.plot.bg.transparency = 0.15, show.rec.plot.tracks = TRUE, \n    color.pallette = \"inferno\", gene.label.angle = 90)\n```\n\n<img src=\"inst/vignette-supp/unnamed-chunk-23-1.png\" width=\"100%\" />\n"
      },
      "source": "https://raw.githubusercontent.com/ChrispinChaguza/RCandy/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:22:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ]
}