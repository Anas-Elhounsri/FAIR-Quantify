{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cucpbioinfo/Xlnc1DCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-02T08:22:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-26T01:26:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cucpbioinfo/Xlnc1DCNN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cucpbioinfo/Xlnc1DCNN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cucpbioinfo/Xlnc1DCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "We suggest you install `Xlnc1DCNN` by using an anaconda environment for installing the required packages and their dependencies easily. *(tested with CentOS 7 and Window 10*)\n\n**Prerequisite**\n- Download the model file: https://drive.google.com/drive/folders/1QICscoia-QC2lBC_m7pG70LJclZTUBoT\n\n**Steps**\n1. Create an environment using Anaconda.\n```\nconda create -n Xlnc1DCNN python=3.7.5 --y\nconda activate Xlnc1DCNN\n```\n2. Install Tensorflow. \n- If your machine has a GPU card, we suggest you install Tensorflow through anaconda to let Anaconda install all dependency packages. Then you can run each module on your GPU card.\n```\nconda install -c anaconda tensorflow-gpu=2.1.0 --y\n```\n- Otherwise,\n\n```\npip install tensorflow==2.1.0\n```\n\n3. Install the remaining required packages.\n\n```\npip install -r requirement.txt\n```\n\n4. Test.\n```\npython predict.py -i dataset/example/sample.fasta\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cucpbioinfo/Xlnc1DCNN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Xlnc1DCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "cucpbioinfo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 19593,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:18:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "predict.py",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`predict.py` is the command to predict a input FASTA file.\n\n\n**Example**\n\nThe model will predict only sequences that their length are <= `max_len`. The remaining \nsequences will be generate into a `remaining_<file_name>.fasta` file.\n```\npython predict.py -i dataset/example/sample.fasta\n```\n\nOr, you can force the model to predict all length of sequences by using this command.\n```\npython predict.py -i dataset/example/sample.fasta -f True\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "plot_explanation.py",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`plot_explanation.py` is the command for ploting explanation results of \nthe input sequences from the model.\n```\nusage: plot_explanation.py [-h] -i INPUT [-o OUTPUT] [-m MODEL]\n                           [-b {background_10,background_20,background_50,background_100,background_200,background_350,background_500}]\n                           [-ub USER_BACKGROUND] [-dpi DPI]\n                           [-f [{True,False}]] [--min_len MIN_LEN]\n                           [--max_len MAX_LEN]\n\nPlot explanation results from an input FASTA file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        input FASTA file (default: None)\n  -o OUTPUT, --output OUTPUT\n                        output directory (default: output)\n  -m MODEL, --model MODEL\n                        model file (default: None)\n  -b {background_10,background_20,background_50,background_100,background_200,background_350,background_500}, --background {background_10,background_20,background_50,background_100,background_200,background_350,background_500}\n                        background distribution to plot explanation results\n                        (default: background_350)\n  -ub USER_BACKGROUND, --user_background USER_BACKGROUND\n                        path to user's background distribution to plot\n                        explanation results (default: None)\n  -dpi DPI, --dpi DPI   dpi of output images (default: 250)\n  -f [{True,False}], --force [{True,False}]\n                        force to plot when the input sequences exceed the\n                        maximum length. (default: False)\n  --min_len MIN_LEN     the minimum of input sequences length to plot\n                        (default: 200)\n  --max_len MAX_LEN     the maximum of input sequences length to plot\n                        (default: 3000)\n```\n**Example**\n```\npython plot_explanation.py  -i dataset/example/sample.fasta\n```\nIf your machine can't run the above command, we suggest reducing the background samples size.\n\n```\npython plot_explanation.py  -i dataset/example/sample.fasta -b background_10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "train.py",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`train.py` is the command which allows users to train a new classifier model from a coding and noncoding transcript file. Users can set details of learning by setting optional arguments.\n\n```\nusage: train.py [-h] [-o OUTPUT] [-e EPOCHS] [-bs BATCH_SIZE] [-m MOMENTUM]\n                [-lr LEARNING_RATE] [--min_len MIN_LEN] [--max_len MAX_LEN]\n                coding_file noncoding_file\n\nTrain model from a input FASTA file\n\npositional arguments:\n  coding_file           input FASTA file of coding transcripts.\n  noncoding_file        input FASTA file of noncoding transcripts.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        output directory. (default: model)\n  -e EPOCHS, --epochs EPOCHS\n                        epochs. (default: 120)\n  -bs BATCH_SIZE, --batch_size BATCH_SIZE\n                        batch size. (default: 128)\n  -m MOMENTUM, --momentum MOMENTUM\n                        momentum. (default: 0.9)\n  -lr LEARNING_RATE, --learning_rate LEARNING_RATE\n                        learning rate. (default: 0.01)\n  --min_len MIN_LEN     the minimum of input sequences length to be trained.\n                        (default: 200)\n  --max_len MAX_LEN     the maximum of input sequences length to be trained.\n                        (default: 3000)\n```\n\n**Example**\n\nTrain a new classifier model by using default settings.\n```\npython train.py dataset/human/training_set/pct_train.fa dataset/human/training_set/lncrna_train.fa \n```\nTrain a new classifier model with 10 epochs, 100 batch sizes, and 0.001 learning rate.\n```\npython train.py dataset/human/training_set/pct_train.fa dataset/human/training_set/lncrna_train.fa \n-e 10 -bs 100 -lr 0.001\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cucpbioinfo/Xlnc1DCNN/main/README.md",
      "technique": "header_analysis"
    }
  ]
}