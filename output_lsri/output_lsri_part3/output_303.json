{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xindd/DCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-18T13:01:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-03T22:24:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Using deep learning to unravel the cell profile from bulk expression data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9803716084708007,
      "result": {
        "type": "Text_excerpt",
        "value": "  # DCNet Package\r\n  ### Using deep learning to unravel the cell profile from bulk expression data\r\n  Deconvolution network (DCNet), an \"explainable\" artificial neural network model was created to infer cell content from bulk RNA-Seq samples. It embeds the relationship between 434 cells and 9078 marker genes in a neural network,and uses a hidden layer to characterize the cell type and content.\r\n  # Publication\r\n  Wang, X., Wang, H., Liu, D., Wang, N., He, D., Wu, Z., Zhu, X., Wen, X., Li, X., Li, J., & Wang, Z. (2022). Deep learning using bulk RNA-seq data expands cell landscape identification in tumor microenvironment. Oncoimmunology, 11(1), 2043662. https://doi.org/10.1080/2162402X.2022.2043662\r\n  # Requirements and dependency\r\nThis package runs on Python 3.\r\n\r\nDCNet depends on mxnet, pandas, numpy modules. You can install them by  `requirements`.\r\n\r\n  # INSTALL\r\n    git clone https://github.com/xindd/DCNet.git\r\n    cd DCNet\r\n    pip install -r requirements.txt\r\n    python setup.py install\r\n\r\n   ## Dataset prepare\r\n1.[DCNet params:](https://github.com/xindd/DCNet-Use/blob/main/net_M434_adam_T600_DCNetBnoise-D1.params) Contains DCNet parameters (weights, biases) saved by `net.save_parameters(file_name)`.\r\n\r\nTo train the DCNet model, its parameters are set as adam optimizer, relu activation function, L2loss loss function, learning rate 1e-4, number of iterations 600, 256 samples per batch, cpu training respectively.\r\n\r\n2.[Relation matrix:](https://github.com/xindd/DCNet-Use/blob/main/relation_matrix.pkl) A zero-one matrix containing the correspondence between genes and cells.\r\n  \r\n3.[Index](https://github.com/xindd/DCNet-Use/blob/main/index.pkl). Each neuron of DCNet corresponds to a specific gene. \r\nThis file stores the set of genes corresponding to input and output neurons.\r\n\r\n4.Input and output data matrix of gene expression profiles.\r\nEach column is a sample, and each row should be a human gene symbol.\r\nPlease see [demo_data](https://github.com/xindd/DCNet-Use/blob/main/demo_data.pkl) as an example. A log2(x+1) transformation of the expression value is recommended.\r\n   ## Running DCNet\r\n   Detail in [demo](https://github.com/xindd/DCNet-Use/blob/main/demo.ipynb)\r\n   \r\n    \r\n \n"
      },
      "source": "https://raw.githubusercontent.com/xindd/DCNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xindd/DCNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xindd/DCNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xindd/DCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/xindd/DCNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xindd/DCNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DCNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xindd"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10907,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xindd/DCNet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:27:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}