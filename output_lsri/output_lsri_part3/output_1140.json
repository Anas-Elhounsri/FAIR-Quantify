{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Yufei-Huang-Lab/m6Aexpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-10T00:21:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-18T02:44:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Yufei-Huang-Lab/m6Aexpress/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Yufei-Huang-Lab/m6Aexpress/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Yufei-Huang-Lab/m6Aexpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation Instructions"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Instructions",
        "type": "Text_excerpt",
        "value": "The m6A-express package is supported by R 3.5.3 or newer versions. First, you need to install the exomePeak package for m6A peak calling:\n\n```r\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(c(\"Rsamtools\",\"GenomicAlignments\",\"GenomicRanges\",\n                       \"GenomicFeatures\",\"rtracklayer\",\"DESeq2\",\"apeglm\",\"RMariaDB\"))\n                       \ninstall.packages(\"https://www.bioconductor.org/packages/3.8/bioc/src/contrib/exomePeak_2.16.0.tar.gz\", repos = NULL, type=\"source\")\n```\n\nThen, please install the QNB package for identifying differential m6A peaks:\n```r\ninstall.packages(\"locfit\")\ninstall.packages(\"https://cran.r-project.org/src/contrib/Archive/QNB/QNB_1.1.11.tar.gz\", repos = NULL, type=\"source\")\n```\nInstalled the reticulate pacakge to call python code in R\n```r\ninstall.packages(\"reticulate\")\n##install miniconda to install specific python package\nlibrary(reticulate)\ninstall_miniconda()\n##install specific python package in R\npy_install(\"statsmodels\"); py_install(\"pandas\"); py_install(\"scipy\"); py_install(\"numpy\")\n```\nBefore installing the m6Aexpress package, you should install the following R package:\n```r\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))  install.packages(\"BiocManager\")\n##If the R version R>=4.0, the DESeq package should be installed by\n##for Linux installation\ninstall.packages(\"https://www.bioconductor.org/packages/3.11/bioc/src/contrib/DESeq_1.39.0.tar.gz\", repos = NULL, type=\"source\")\n##for Windows installation\ninstall.packages(\"https://www.bioconductor.org/packages/3.11/bioc/bin/windows/contrib/4.0/DESeq_1.39.0.zip\", repos = NULL, type=\"source\")\n##If the R version R>=3.5.3, the DESeq package should be installed by\nBiocManager::install('DESeq')\n##Install some annotation packages\nBiocManager::install(c('org.Hs.eg.db', 'org.Mm.eg.db', 'TxDb.Hsapiens.UCSC.hg19.knownGene', \n                       'TxDb.Mmusculus.UCSC.mm10.knownGene','AnnotationDbi'))\n```                       \nNow, the m6A-express package can be installed by the following R commands:\n```r\nif (!requireNamespace(\"devtools\", quietly = TRUE))\n    install.packages(\"devtools\")\ndevtools::install_github(\"NWPU-903PR/m6Aexpress\")\nlibrary(m6Aexpress)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Yufei-Huang-Lab/m6Aexpress/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "m6Aexpress"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Yufei-Huang-Lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 36296,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:43:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage Example",
        "type": "Text_excerpt",
        "value": "*m<sup>6</sup>A-express* considers a scenario where transcriptome-wide m<sup>6</sup>A under different conditions (treated/disease vs control; different tissues/infection \nstages) are profiled by MeRIP-seq. Note that m6A-express is not restricted to MeRIP-seq but can be applied to any high-throughput methods such as MAZTER-seq or nanopore \nsequencing that quantify m6A stoichiometry. *m<sup>6</sup>A-express* assumes that for an m<sup>6</sup>A site that regulates mRNA expression, the change of its m<sup>6</sup>A \nlevel is predictive of the change in the expression level of the methylated gene, where the m<sup>6</sup>A level is quantified by MeRIP-seq IP reads and the expression is \nmeasured by MeRIP-seq Input reads. *m<sup>6</sup>A-express* is an algorithm designed to assess the degree to which such a predictive relationship exists between \nm<sup>6</sup>A levels and gene expressions for the specific conditions under consideration. \n\nBefore applying *m<sup>6</sup>A-express*, m<sup>6</sup>A peaks are first identified from each MeRIP-seq sample using exomePeak (Figure 1 of the paper). The m6A intensity for \neach gene that harbors m<sup>6</sup>A peaks is computed (**Peak Calling and Quantifying Subsection**). m<sup>6</sup>A-express then selects candidate genes based on the \nfollowing criteria: when two conditions (treated vs. control) are considered, candidate genes are differential expression genes that harbor differential m<sup>6</sup>A peaks \n(or DE-DM genes); otherwise, when there are more than two conditions (multiple tissue types or time points), candidate genes are those that contain highly variable m6A peaks \n(HVPs). Afterward, *m<sup>6</sup>A-express* is applied to all the candidate genes. The candidate genes test significant for FDR<0.05 by the Wald test are termed \nm<sup>6</sup>A-reg-exp genes, whose m<sup>6</sup>A intensities are predicted to regulate their gene expressions. Among the outputs of *m<sup>6</sup>A-express* are a list of \nm<sup>6</sup>A-reg-exp genes, their associated regulatory mode and strength (\u03b2<sub>1</sub>), the methylation intensities, and the gene expression levels.  \n\nThe following codes show how to use the *m<sup>6</sup>A-express* package (named m6Aexpress) to obtain m<sup>6</sup>A-reg-exp genes genes for two or more conditions. Both step-by-step analysis and one-step prediction are detailed. \n\n"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Peak calling for methylation sites in DE-DM context and obtain consisten peak sites*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nf1 <- system.file(\"extdata\", \"IP1.bam\", package=\"m6Aexpress\")\nf2 <- system.file(\"extdata\", \"IP2.bam\", package=\"m6Aexpress\")\nf3 <- system.file(\"extdata\", \"IP3.bam\", package=\"m6Aexpress\")\nf4 <- system.file(\"extdata\", \"IP4.bam\", package=\"m6Aexpress\")\nf5 <- system.file(\"extdata\", \"Input1.bam\", package=\"m6Aexpress\")\nf6 <- system.file(\"extdata\", \"Input2.bam\", package=\"m6Aexpress\")\nf7 <- system.file(\"extdata\", \"Input3.bam\", package=\"m6Aexpress\")\nf8 <- system.file(\"extdata\", \"Input4.bam\", package=\"m6Aexpress\")\nIP_BAM <- c(f1,f2)\nINPUT_BAM <- c(f5,f6)\nTREATED_IP_BAM <- c(f3,f4)\nTREATED_INPUT_BAM <- c(f7,f8)\n#Input the gene annotation file  \ngtf <- system.file(\"extdata\", \"hg19toy.gtf\", package=\"m6Aexpress\")\n#Obtain the consistent peak sites\nGet_peak_infor <- Get_peakinfor(IP_BAM, INPUT_BAM,TREATED_IP_BAM, TREATED_INPUT_BAM, GENE_ANNO_GTF=gtf)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Calling differential methylated (DM) peaks among the consistent peaks*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nDM_sites_infor <- DM_detect(peak_inform=Get_peak_infor,DM_CUTOFF_TYPE=\"pvalue\",num_ctl=2, diff_peak_pvalue=0.05)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Calculate the methylation intensity for each gene with DM peaks*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\ngene_methyintensity <- gene_methy_intensity(peak_inform=DM_sites_infor,txdbinfor=NA,GENE_ANNO_GTF=gtf)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Obtain their gene expression for INPUT samples*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nget_gene_express <- Get_express_data(INPUT_BAM=c(INPUT_BAM,TREATED_INPUT_BAM ), \n                                      isPairedEnd=FALSE,GENE_ANNO_GTF = gtf,isGTFAnnotationFile=TRUE)\n```                                      "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Identify the differential expression gene*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nobtain_DEgene <- Select_DEgene(gene_count_infor=get_gene_express,\n                               cond1=\"control\", \n                               cond2=\"treated\",\n                               num_cond1=2, \n                               num_cond2=2,\n                               DIFF_GENE_cutoff_FDR=0.05,\n                               DE_CUTOFF_TYPE=\"padj\") \n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Select genes with both differential expression and differential methylation*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nexpr_methy_gene <- match_expr_methy(gene_count_infor=obtain_DEgene, \n                                     gene_methy_infor=gene_methyintensity,\n                                    OUTPUT_DIR=NA)\n```                                    "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Predict m6A-reg-exp genes*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nm6Aexpress_result <- m6A_Express_model(Input_file=expr_methy_gene,\n                                           CUTOFF_TYPE=\"FDR\", \n                                            FDR=0.05)\n```                                            "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Add differential expression and differential methylation in the result*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For two (case-control) conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nm6A_express_addLFC_DDM <- add_LFC_DDM(expre_methyre=m6Aexpress_result, \n                                    DE_gene=obtain_DEgene, methy_intensity=gene_methyintensity,\n                                    num_cond1=2, OUTPUT_DIR=NA)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For more than two conditions",
        "parent_header": [
          "Usage Example",
          "On step to predicate m6A-reg-exp gene"
        ],
        "type": "Text_excerpt",
        "value": "#### *Peak calling*"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Peak calling*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nIP_BAM <- c(f1,f2,f3,f4)\nINPUT_BAM <- c(f5,f6,f7,f8)\nGet_peak_infor <- Get_peakinfor(IP_BAM, INPUT_BAM, GENE_ANNO_GTF=gtf)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Detect highly variable peaks  across multiple conditions*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nHVP_infor <- obtain_HVP_sites(peak_inform=Get_peak_infor,CV_values=0.3,\n                               num_sample_subgroup=c(2,2))\n```                            "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Calculate the methylation intensity for each gene with highly variable peaks*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\ngene_methyintensity <- gene_methy_intensity(peak_inform=HVP_infor,GENE_ANNO_GTF=gtf)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Obtain gene expressions from INPUT samples in each condition*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nget_gene_express <- Get_express_data(INPUT_BAM=c(INPUT_BAM), \n                                      isPairedEnd=FALSE,\n                                      GENE_ANNO_GTF = gtf)\n```                                      "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Select genes with expression and methylation intensity of highly variable peaks*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nexpr_methy_gene <- match_expr_methy(gene_count_infor=get_gene_express, \n                                     gene_methy_infor=gene_methyintensity,\n                                    OUTPUT_DIR=NA)\n```                                    "
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Predicate m6A-reg-exp gene by m6Aexpress model in tissue-specific context*",
        "parent_header": [
          "Usage Example",
          "Step by Step Analysis",
          "For more than two conditions"
        ],
        "type": "Text_excerpt",
        "value": "```r\nm6A_Express_model(Input_file=expr_methy_gene,\n                     CUTOFF_TYPE=\"FDR\", \n                      FDR=0.05)\n```"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "For two conditions:",
        "parent_header": [
          "Usage Example",
          "On step to predicate m6A-reg-exp gene"
        ],
        "type": "Text_excerpt",
        "value": "```r\nIP_BAM <- c(f1,f2)\nTREATED_IP_BAM <- c(f3,f4) \nINPUT_BAM <- c(f5,f6) \nTREATED_INPUT_BAM <- c(f7,f8) \nm6A_reg_exp_gene <- m6Aexpress(express_data=INPUT_BAM, treated_express_data=TREATED_INPUT_BAM, \n                                    IP_BAM=IP_BAM, TREATED_IP_BAM=TREATED_IP_BAM, INPUT_BAM=INPUT_BAM, \n                                    TREATED_INPUT_BAM=TREATED_INPUT_BAM,annot_type=\"hg19\", GENE_ANNO_GTF=gtf,\n                                    isGTFAnnotationFile=TRUE, pvalue=0.05,mode=\"DE-DM\")\n```                                    \n### For more than two conditions\n```r\nIP_BAM <- c(f1,f2,f3,f4)\nINPUT_BAM <- c(f5,f6,f7,f8) \nm6A_reg_exp_gene <- m6Aexpress(express_data=INPUT_BAM, IP_BAM=IP_BAM, INPUT_BAM=INPUT_BAM, \n                                annot_type=\"hg19\", GENE_ANNO_GTF=gtf,isGTFAnnotationFile=TRUE, \n                                pvalue=0.05,mode=\"HVP\", CV_values = 0.3, num_sample_subgroup=c(2,2))\n```                                \n\n"
      },
      "source": "https://raw.githubusercontent.com/Yufei-Huang-Lab/m6Aexpress/main/README.md",
      "technique": "header_analysis"
    }
  ]
}