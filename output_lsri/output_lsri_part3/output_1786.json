{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "Lee, J-Y, Bilbao, A, Conant, CR, Bloodsworth, KJ, Orton, DJ, Zhou, M, ... & Metz, TO (2021). AutoCCS: Automated collision cross section calculation software for ion mobility spectrometry-mass spectrometry. <i>Bioinformatics</i>. https://doi.org/10.1093/bioinformatics/btab429\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PNNL-Comp-Mass-Spec/AutoCCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "parent_header": [
          "AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "Written by Joon-Yong Lee for the Department of Energy (PNNL, Richland, WA)\\\nCopyright 2020, Battelle Memorial Institute. All Rights Reserved.\\\nE-mail: joonyong.lee@pnnl.gov or proteomics@pnnl.gov\\\nWebsite: https://omics.pnl.gov/ or https://panomics.pnnl.gov/\n\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-24T00:19:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T07:58:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automated Collision Cross Section calculation software for ion mobility spectrometry-mass spectrometry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9738926805229109,
      "result": {
        "original_header": "Main features",
        "type": "Text_excerpt",
        "value": "AutoCCS supports the following platforms and methods:\n- Platforms\n  - Drift tube-based ion mobility spectrometry coupled with mass spectrometry (DTIMS-MS) instrument [(Stow,S.M. et al., 2017)](https://doi.org/10.1021/acs.analchem.7b01729)\n  - Traveling wave based-IMS MS (TWIMS-MS) such as Structures for Lossless Ion Manipulations (SLIM)-based IMS-MS [(Wojcik,R. et al., 2019)](https://doi.org/10.1021/acs.analchem.9b02808)\n- Methods\n  - Stepped field method [(Stow,S.M. et al., 2017)](https://doi.org/10.1021/acs.analchem.7b01729)\n  - Single field method [(Kurulugama,R.T. et al., 2015)](https://doi.org/10.1039/C5AN00991J)\n  - Traveling wave-based method \n- Calibration functions for single field and traveling wave-based methods\n  - Linear function\n  - Polynomial functions (e.g. quadratic or cubic functions)\n  - Linearized power function [(Ruotolo,B.T. et al., 2008)](https://doi.org/10.1038/nprot.2008.78)\n  \n \n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PNNL-Comp-Mass-Spec/AutoCCS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PNNL-Comp-Mass-Spec/AutoCCS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PNNL-Comp-Mass-Spec/AutoCCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoCCS"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PNNL-Comp-Mass-Spec/AutoCCS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mass-spectrometry"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "AutoCCS is licensed under the BSD 2-Clause License; [License](license.txt)\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoCCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PNNL-Comp-Mass-Spec"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 102785,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:17:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use `conda` environment (Recommended)",
        "parent_header": [
          "AutoCCS",
          "How to *install* AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "Please install [conda](https://docs.anaconda.com/anaconda/install/) and create an environment from an environment.yml file. More details about managing the conda environment can be found on the [Managing environments](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file).\n```bash\nconda env create -f environment.yml\n```\nAnd then activate the new conda environment `autoccs`.\n```bash\nconda activate autoccs\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use `pip`",
        "parent_header": [
          "AutoCCS",
          "How to *install* AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "Install python(>3.7) [[link]](https://www.python.org/downloads/) and use `pip` as follows to install dependencies. \n```bash\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial with demo data",
        "parent_header": [
          "AutoCCS"
        ],
        "type": "Text_excerpt",
        "value": "In this tutorial, we demonstrated the CCS determination using AutoCCS for the Agilent tune-mix samples in three different platforms: stepped-field DTIMS-MS, single-field RapidFire-DTIMS-MS, SLIM-based IMS.\n\nDemo dataset is publicly available at MassIVE (Dataset ID: [MSV000085979](https://massive.ucsd.edu/ProteoSAFe/dataset.jsp?accession=MSV000085979))\n\n<i>For sake of readability, the input parameters are split over multiple lines. When using the command line, however, all parameters should be included as a single line.</i>\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stepped-Field DTIMS-MS",
        "parent_header": [
          "AutoCCS",
          "Tutorial with demo data"
        ],
        "type": "Text_excerpt",
        "value": "\n```bash\npython -u autoCCS.py\n  --target_list_file data/SteppedField-DTIMS/TargetList.csv\n  --config_file data/SteppedField-DTIMS/autoCCS_config.xml\n  --framemeta_files \"data/SteppedField-DTIMS/ImsMetadata/*.txt\"\n  --feature_files \"data/SteppedField-DTIMS/Features_csv/*.csv\"\n  --output_dir data/SteppedField-DTIMS/Results/\n  --threshold_n_fields 5\n  --mode multi &> \"data/SteppedField-DTIMS/LogFiles/multi.log\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-Field RapidFire-DTIMS-MS",
        "parent_header": [
          "AutoCCS",
          "Tutorial with demo data"
        ],
        "type": "Text_excerpt",
        "value": "\n\n```bash\npython autoCCS.py\n  --config_file data/SingleField-RapidFire-DTIMS/autoCCS_config.xml\n  --framemeta_files \"data/SingleField-RapidFire-DTIMS/ImsMetadata/*.txt\"\n  --feature_files \"data/SingleField-RapidFire-DTIMS/Features_csv/*.csv\"\n  --calibrant_file data/SingleField-RapidFire-DTIMS/TuneMix-CCS.txt\n  --output_dir data/SingleField-RapidFire-DTIMS/Results/\n  --tunemix_sample_type AgilentTuneMix\n  --sample_meta data/SingleField-RapidFire-DTIMS/Datasets.csv\n  --colname_for_sample_type SampleType\n  --colname_for_filename RawFileName\n  --colname_for_ionization IonPolarity\n  --degree 1\n  --single_mode batch\n  --mode single &> data/SingleField-RapidFire-DTIMS/LogFiles/single.log\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SLIM-based IMS-MS",
        "parent_header": [
          "AutoCCS",
          "Tutorial with demo data"
        ],
        "type": "Text_excerpt",
        "value": "\n\n```bash\npython -u autoCCS.py\n  --config_file data/SLIM-IMS/autoCCS_config.xml\n  --feature_files \"data/SLIM-IMS/Features_csv/*.csv\"\n  --output_dir data/SLIM-IMS/Results/\n  --mode single\n  --calibrant_file data/SLIM-IMS/TuneMix-CCS_POS.txt\n  --sample_meta data/SLIM-IMS/Datasets.csv\n  --tunemix_sample_type AgilentTuneMix\n  --colname_for_sample_type SampleType\n  --colname_for_filename RawFileName\n  --colname_for_ionization IonPolarity\n  --single_mode batch\n  --degree 2\n  --calib_method poly\n  --ppm 150 &> data/SLIM-IMS/LogFiles/slim.log\n```\nUsers are allowed to apply high-order polynomial functions: quadratic (`--degree 2`), cubic (`--degree 3`), quartic (`--degree 4`), and so on.\n```bash\n  --degree 3 # for cubic\n```\nAlso, it allows users to apply non-linear regression based on the linearized power function.\n```bash\n  --calib_method power\n```\n"
      },
      "source": "https://raw.githubusercontent.com/PNNL-Comp-Mass-Spec/AutoCCS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}