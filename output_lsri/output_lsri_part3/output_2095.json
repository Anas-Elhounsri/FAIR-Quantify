{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "Thank you to all of the people who tested BonZeb and provided useful feedback on the manuscript. Thank you to the developers and to the larger Bonsai community for creating an iniviting and powerful platform. \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 22.3,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncguilbeault/BonZeb"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-19T01:53:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-17T09:18:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9981232220249416,
      "result": {
        "original_header": "Preface",
        "type": "Text_excerpt",
        "value": "BonZeb is a [Bonsai](https://bonsai-rx.org/) library for high-resolution zebrafish behavioural tracking and analysis. \nBonZeb provides essential tools for zebrafish behavioural tracking and analysis.\nIn this manual, you will find information and examples for how to use BonZeb to implement behavioural analysis, multi-animal tracking, closed-loop and virtual open-loop visual stimulation, and more.\nFor more information on Bonsai, please check out the forums on [Gitter](https://gitter.im/bonsai-rx/Lobby) and [Google Groups](https://groups.google.com/forum/#!forum/bonsai-users)\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8936989677737723,
      "result": {
        "original_header": "Video Acquisition",
        "type": "Text_excerpt",
        "value": "BonZeb is completely modular and works with any camera module alreay supported in Bonsai (Basler, FLIR, DirectShow, etc.). Additionally, BonZeb interfaces with Allied Vision, Teledyne Dalsa, and Euresys CameraLink Frame Grabber hardware devices for high-speed video acquisition. The following video acqusition packages are available for download: \nUsers must install the manufacturers software development kit (SDK) and ensure the camera is connected to the computer and working properly before using the camera in Bonsai.\nBoth the Allied Vision and Teledyne Dalsa modules require bonsai to be run in no boot mode. To do this, Bonsai must be started from the command line with the following argument: \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9420625541230205,
      "result": {
        "original_header": "Visual Stimulation",
        "type": "Text_excerpt",
        "value": "BonZeb can be used with Bonsai Shaders to generate closed-loop and open-loop visual stimuli with controlled behavioural feedback.\nThe Bonsai Shaders package utilizes OpenGL for rendering visual stimuli and offers immense flexibility. \nSee the [Visual Stimulation](<Examples/Visual Stimulation>) folder for how to generate visual stimuli such as optomotor gratings, optokinetic gratings, looming dots, small prey, and phototaxic stimuli.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9236977998710028,
      "result": {
        "original_header": "Calibration",
        "type": "Text_excerpt",
        "value": "BonZeb provides a simple solution for users to perform calibration of visual display devices.\nUsers can use BonZeb to map the area used for visual stimulus rendering to a camera\u2019s field of view (FOV) or a specified region within the FOV. \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9907917536779094,
      "result": {
        "original_header": "Behavioural Tracking and Analysis",
        "type": "Text_excerpt",
        "value": "BonZeb provides many different modules and workflows for behavioural tracking and analysis.\nThese include methods for background calculation, centroid tracking, tail tracking, eye tracking, and tail beat analysis.\nBonZeb can be used for online tracking, offline tracking, and batch processing. \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8828221592973504,
      "result": {
        "original_header": "Multi-animal Tracking",
        "type": "Text_excerpt",
        "value": "BonZeb provides examples for how to perform multi-animal free-swimming and head-fixed tracking.  \nSee the [Multi-animal Tracking](<Examples/Multi-animal Tracking>) folder for how to perform multi-animal free-swimming and head-fixed tracking.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9171574756503186,
      "result": {
        "original_header": "Virtual Open-loop Free-swimming",
        "type": "Text_excerpt",
        "value": "BonZeb provides examples for how to build and implement virtual open-loop free-swimming behavioural assays.  \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9490684830290751,
      "result": {
        "original_header": "Closed-loop Head-fixed",
        "type": "Text_excerpt",
        "value": "BonZeb provides examples for how to build and implement closed-loop head-fixed behavioural assays.  \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8914523067932397,
      "result": {
        "original_header": "Optogenetics",
        "type": "Text_excerpt",
        "value": "BonZeb provides examples for how to perform optogenetics.  \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9290394757768464,
      "result": {
        "original_header": "Calcium Imaging",
        "type": "Text_excerpt",
        "value": "BonZeb provides examples for how to perform calcium imaging with closed-loop visual stimulation.  \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download",
        "type": "Text_excerpt",
        "value": "This package was originally built in Bonsai version 2.4.0 but should work for newer versions of Bonsai as well. \nYou can download the latest [Bonsai](https://bonsai-rx.org/docs/installation/) or go to the [Bonsai Archives](https://bitbucket.org/horizongir/bonsai) to download earlier versions.\nBonZeb can be easily downloaded using Bonsai's built-in package manager. \nBonZeb can also be added to Bonsai manually by downloading the [GitHub Repository](https://github.com/ncguilbeault/BonZeb) and adding it to the package manager.\nTo add the package manually to the package manager, navigate to settings and add the .nuget folder of the repository to the list of available package sources. \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncguilbeault/BonZeb/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncguilbeault/BonZeb/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncguilbeault/BonZeb"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BonZeb"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999853647429439,
      "result": {
        "original_header": "Video Acquisition",
        "type": "Text_excerpt",
        "value": "Users must install the manufacturers software development kit (SDK) and ensure the camera is connected to the computer and working properly before using the camera in Bonsai.\nBoth the Allied Vision and Teledyne Dalsa modules require bonsai to be run in no boot mode. To do this, Bonsai must be started from the command line with the following argument: \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8647617260690212,
      "result": {
        "original_header": "Calibration",
        "type": "Text_excerpt",
        "value": "See the [Calibration](<Examples/Calibration>) folder for how to calibrate visual display devices for rendering visual stimuli.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9202088084187178,
      "result": {
        "original_header": "Virtual Open-loop Free-swimming",
        "type": "Text_excerpt",
        "value": "See the [Virtual Open-loop Free-swimming](<Examples/Virtual Open-loop Free-swimming>) folder for how ti implement virtual open-loop free-swimming behavioural assays.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncguilbeault/BonZeb/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Nicholas Guilbeault\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/Resources/BonZeb_Logo_Man.png"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BonZeb"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ncguilbeault"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "size": 152138,
        "type": "Programming_language",
        "value": "C#"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 52174,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 278,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "When installing BonZeb, all of the essential dependencies will be installed automatically. To implement the example workflows, users must also install the following Bonsai libraries:\n\n* Bonsai - Arduino Library\n* Bonsai - Core Library\n* Bonsai - Design Library\n* Bonsai - Dsp Library\n* Bonsai - Dsp Design Library\n* Bonsai - Editor\n* Bonsai - Player\n* Bonsai - Scripting Library\n* Bonsai - Shaders Library\n* Bonsai - Shaders Design Library\n* Bonsai - System Library\n* Bonsai - System Design Library\n* Bonsai - Video Library\n* Bonsai - Video Design Library\n* Bonsai - Vision Library\n* Bonsai - Vision Design Library\n* Bonsai - Windows Input Library\n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:40:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started with Bonsai",
        "type": "Text_excerpt",
        "value": "Bonsai is a powerful programming language with a visual programming interface that uses graphs, also called workflows, to represent data processing pipelines in the interactive development environement (IDE). \nThe nodes in a Bonsai workflow, also called modules, can represent a variety of different Bonsai objects, such as data sources, transformations, combinators, or sinks. \nModules in a workflow are linked by edges to form pipelines, also called data streams, where the output of one node is sent as input to another node. \nThe basic premise for building Bonsai workflows is adding nodes into the workflow and connecting nodes together to form pipelines or data streams. \nData streams can be split and merged together in various ways such that the final workflow can have multiple data streams operating synchronously or asynchronously, simultaneously.\n\nIf you are just learning about Bonsai for the first time, see the [Getting Started](<Getting Started/>) folder to learn more about the basics of Bonsai. If you are already familiar with Bonsai and how it works, feel free to skip this section.\n"
      },
      "source": "https://raw.githubusercontent.com/ncguilbeault/BonZeb/master/README.md",
      "technique": "header_analysis"
    }
  ]
}