{
  "application_domain": [
    {
      "confidence": 0.9986962597741292,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 35.23,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Rao, Jiahua and Zheng, Shuangjia and Song, Ying and Chen, Jianwen and Li, Chengtao and Xie, Jiancong and Yang, Hui and Chen, Hongming and Yang, Yuedong",
        "format": "bibtex",
        "title": "MolRep: A Deep Representation Learning Library for Molecular Property Prediction",
        "type": "Text_excerpt",
        "value": "@article{rao2021molrep,\n    publisher = {Cold Spring Harbor Laboratory},\n    year = {2021},\n    journal = {bioRxiv},\n    author = {Rao, Jiahua and Zheng, Shuangjia and Song, Ying and Chen, Jianwen and Li, Chengtao and Xie, Jiancong and Yang, Hui and Chen, Hongming and Yang, Yuedong},\n    title = {MolRep: A Deep Representation Learning Library for Molecular Property Prediction},\n}"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Rao, Jiahua and Zheng, Shuangjia and Yang, Yuedong",
        "format": "bibtex",
        "title": "Quantitative Evaluation of Explainable Graph Neural Networks for Molecular Property Prediction",
        "type": "Text_excerpt",
        "value": "@article{rao2021quantitative,\n    year = {2021},\n    journal = {arXiv preprint arXiv:2107.04119},\n    author = {Rao, Jiahua and Zheng, Shuangjia and Yang, Yuedong},\n    title = {Quantitative Evaluation of Explainable Graph Neural Networks for Molecular Property Prediction},\n}"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biomed-AI/MolRep"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-24T12:32:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T15:51:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolRep: A Deep Representation Learning Library for Molecular Property Prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "MolRep: A Deep Representation Learning Library for Molecular Property Prediction"
        ],
        "type": "Text_excerpt",
        "value": " MolRep is a Python package for fairly measuring algorithmic progress on chemical property datasets. It currently provides a complete re-evaluation of 16 state-of-the-art deep representation models over 16 benchmark property datsaets.\n\n<p align='center'>\n<img src=\"https://github.com/biomed-AI/MolRep/blob/main/ADMET-TOC.jpg\" alt=\"architecture\"/>\n</p>\n\nIf you found this package useful, please cite our papers: [MolRep](https://doi.org/10.1101/2021.01.13.426489) and [Mol-XAI](https://arxiv.org/abs/2107.04119) for now:\n```\n@article{rao2021molrep,\n  title={MolRep: A Deep Representation Learning Library for Molecular Property Prediction},\n  author={Rao, Jiahua and Zheng, Shuangjia and Song, Ying and Chen, Jianwen and Li, Chengtao and Xie, Jiancong and Yang, Hui and Chen, Hongming and Yang, Yuedong},\n  journal={bioRxiv},\n  year={2021},\n  publisher={Cold Spring Harbor Laboratory}\n}\n\n@article{rao2021quantitative,\n  title={Quantitative Evaluation of Explainable Graph Neural Networks for Molecular Property Prediction},\n  author={Rao, Jiahua and Zheng, Shuangjia and Yang, Yuedong},\n  journal={arXiv preprint arXiv:2107.04119},\n  year={2021}\n}\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9987472692911554,
      "result": {
        "original_header": "Self-/unsupervised Models",
        "type": "Text_excerpt",
        "value": "|Methods|Descriptions|Reference|\n|:-:|-|:-:|\n|Mol2Vec|Mol2Vec is an unsupervised approach to learns vector representations of molecular substructures that point in similar directions for chemically related substructures.| [Jaeger et al.](https://pubs.acs.org/doi/full/10.1021/acs.jcim.7b00616)|\n|N-Gram graph|N-gram graph is a simple unsupervised representation for molecules that first embeds the vertices in the molecule graph and then constructs a compact representation for the graph by assembling the ver-tex embeddings in short walks in the graph.|[Liu et al.](http://papers.neurips.cc/paper/9054-n-gram-graph-simple-unsupervised-representation-for-graphs-with-applications-to-molecules.pdf)|\n|FP2Vec|FP2Vec is a molecular featurizer that represents a chemical compound as a set of trainable embedding vectors and combine with CNN model.|[Jeon et al.](https://academic.oup.com/bioinformatics/article/35/23/4979/5487389)|\n|VAE|VAE is a framework for training two neural networks (encoder and decoder) to learn a mapping from high-dimensional molecular representation into a lower-dimensional space.|[Kingma et al.](https://arxiv.org/abs/1312.6114)|\n \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974770172773966,
      "result": {
        "original_header": "Sequence Models",
        "type": "Text_excerpt",
        "value": "|Methods|Descriptions|Reference|\n|:-:|-|:-:|\n|BiLSTM|BiLSTM is an artificial recurrent neural network (RNN) architecture to encoding sequences from compound SMILES strings.|[Hochreiter et al.](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.676.4320&rep=rep1&type=pdf)|\n|SALSTM|SALSTM is a self-attention mechanism with improved BiLSTM for molecule representation.|[Zheng et al](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00803)|\n|Transformer|Transformer is a network based solely on attention mechanisms and dispensing with recurrence and convolutions entirely to encodes compound SMILES strings.|[Vaswani et al.](https://arxiv.org/abs/1706.03762)|\n|MAT|MAT is a molecule attention transformer utilized inter-atomic distances and the molecular graph structure to augment the attention mechanism.|[Maziarka et al.](https://arxiv.org/abs/2002.08264)|\n \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951248410787016,
      "result": {
        "original_header": "Graph Models",
        "type": "Text_excerpt",
        "value": "|Methods|Descriptions|Reference|\n|:-:|-|:-:|\n|DGCNN|DGCNN is a deep graph convolutional neural network that proposes a graph convolution model with SortPooling layer which sorts graph vertices in a consistent order to learning the embedding of molec-ular graph.| [Zhang et al.](https://muhanzhang.github.io/papers/AAAI_2018_DGCNN.pdf)|\n|GraphSAGE|GraphSAGE is a framework for inductive representation learning on molecular graphs that used to generate low-dimensional representations for atoms and performs sum, mean or max-pooling neigh-borhood aggregation to updates the atom representation and molecular representation.| [Hamilton et al.](https://arxiv.org/abs/1706.02216)|\n|GIN|GIN is the Graph Isomorphism Network that builds upon the limitations of GraphSAGE to capture different graph structures with the Weisfeiler-Lehman graph isomorphism test.|[Xu et al.](https://arxiv.org/abs/1810.00826)|\n|ECC|ECC is an Edge-Conditioned Convolution Network that learns a different parameter for each edge label (bond type) on the molecular graph, and neighbor aggregation is weighted according to specific edge parameters.|[Simonovsky et al.](https://arxiv.org/abs/1704.02901)|\n|DiffPool|DiffPool combines a differentiable graph encoder with its an adaptive pooling mechanism that col-lapses nodes on the basis of a supervised criterion to learning the representation of molecular graphs.|[Ying et al.](https://arxiv.org/abs/1806.08804)|\n|MPNN|MPNN is a message-passing graph neural network that learns the representation of compound molecular graph. It mainly focused on obtaining effective vertices (atoms) embedding| [Gilmer et al.](https://arxiv.org/abs/1704.01212)|\n|D-MPNN|DMPNN is another message-passing graph neural network that messages associated with directed edges (bonds) rather than those with vertices. It can make use of the bond attributes.|[Yang et al.](https://pubs.acs.org/doi/10.1021/acs.jcim.9b00237)|\n|CMPNN|CMPNN is the graph neural network that improve the molecular graph embedding by strengthening the message interactions between edges (bonds) and nodes (atoms).|[Song et al.](https://www.ijcai.org/Proceedings/2020/0392.pdf)| \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biomed-AI/MolRep/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/training_with_defined_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/training_with_defined_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/testing_with_trained_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/testing_with_trained_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/training_with_own_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/training_with_own_data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/hyper-training_with_grid_search.ipynb"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/Examples/hyper-training_with_grid_search.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biomed-AI/MolRep/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biomed-AI/MolRep"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolRep: A Deep Representation Learning Library for Molecular Property Prediction"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/ADMET-TOC.jpg"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install &amp; Usage",
        "parent_header": [
          "MolRep: A Deep Representation Learning Library for Molecular Property Prediction"
        ],
        "type": "Text_excerpt",
        "value": "We provide a script to install the environment. You will need the conda package manager, which can be installed from [here](https://www.anaconda.com/products/individual).\n\nTo install the required packages, follow there instructions (tested on a linux terminal):\n\n1) clone the repository\n\n    git clone https://github.com/biomed-AI/MolRep\n\n2) `cd` into the cloned directory\n\n    cd MolRep\n\n3) run the install script\n\n    source install.sh\n\nWhere `<your_conda_path>` is your conda path, and `<CUDA_VERSION>` is an optional argument that can be either `cpu`, `cu92`, `cu100`, `cu101`, `cu110`. If you do not provide a cuda version, the script will default to `cu110`. The script will create a virtual environment named `MolRep`, with all the required packages needed to run our code. **Important:** do NOT run this command using `bash` instead of `source`!\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.806769799341347,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Data (including Explainable Dataset) could be download from [Google_Driver](https://drive.google.com/drive/folders/1vGlhE3TJ4AhvUCa3ODdFw3O-zOMH1s7J?usp=sharing) \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8293912145862714,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "To train a model by K-fold, run [5-fold-training_example.ipynb](https://github.com/Jh-SYSU/MolRep/blob/main/Examples/5-fold-training_example.ipynb).\n \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9267986115258032,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "To test a pretrained model, run [testing-example.ipynb](https://github.com/Jh-SYSU/MolRep/blob/main/Examples/testing-example.ipynb). \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biomed-AI/MolRep/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolRep"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biomed-AI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2062093,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1652,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1703.00564"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1806.08804"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2107.04119"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1810.00826"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2002.08264"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1706.02216"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1312.6114"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1704.02901"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1704.01212"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1706.03762"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:03:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 125
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install &amp; Usage",
        "parent_header": [
          "MolRep: A Deep Representation Learning Library for Molecular Property Prediction"
        ],
        "type": "Text_excerpt",
        "value": "We provide a script to install the environment. You will need the conda package manager, which can be installed from [here](https://www.anaconda.com/products/individual).\n\nTo install the required packages, follow there instructions (tested on a linux terminal):\n\n1) clone the repository\n\n    git clone https://github.com/biomed-AI/MolRep\n\n2) `cd` into the cloned directory\n\n    cd MolRep\n\n3) run the install script\n\n    source install.sh\n\nWhere `<your_conda_path>` is your conda path, and `<CUDA_VERSION>` is an optional argument that can be either `cpu`, `cu92`, `cu100`, `cu101`, `cu110`. If you do not provide a cuda version, the script will default to `cu110`. The script will create a virtual environment named `MolRep`, with all the required packages needed to run our code. **Important:** do NOT run this command using `bash` instead of `source`!\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/MolRep/main/README.md",
      "technique": "header_analysis"
    }
  ]
}