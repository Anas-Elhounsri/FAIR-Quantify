{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- given-names: \"S. Thomas\"\n  family-names: \"Kelly\"\n  email: \"tom.kelly@riken.jp\"\n  affiliation: \"Center for Integrative Medical Sciences, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n  orcid: \"https://orcid.org/0000-0003-3904-6690\"\n- family-names: \"Battenberg\"\n  given-names: \"Kai\"\n  email: \"kai.battenberg@riken.jp\"\n  affiliation: \"Center for Sustainable Resource Science, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n  orcid: \"http://orcid.org/0000-0001-7517-2657\"\nversion: 1.2.7\ndoi: 10.1101/2021.01.19.427209\ndate-released: 2021-02-14\nurl: \"https://github.com/minoda-lab/universc\"\npreferred-citation:\n  type: article\n  authors:\n  - family-names: \"Battenberg\"\n    given-names: \"Kai\"\n    email: \"kai.battenberg@riken.jp\"\n    affiliation: \"Center for Sustainable Resource Science, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n    orcid: \"https://orcid.org/http://orcid.org/0000-0001-7517-2657\"\n  - given-names: \"S. Thomas\"\n    family-names: \"Kelly\"\n    email: \"tom.kelly@riken.jp\"\n    affiliation: \"Center for Integrative Medical Sciences, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n    orcid: \"https://orcid.org/0000-0003-3904-6690\"\n  - family-names: \"Ras\"\n    given-names: \"Rabu Abu\"\n    email: \"\"\n    affiliation: \"Faculty of Automatics, Computers and Electronics, University of Craiova, Craiova, Romania\"\n    orcid: \"\"\n  - family-names: \"Hetherington\"\n    given-names: \"Nicola A.\"\n    affiliation: \"Center for Integrative Medical Sciences, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n    orcid: \"http://orcid.org/0000-0001-8802-2906\"\n  - family-names: \"Hayashi\"\n    given-names: \"Makoto\"\n    affiliation: \"Center for Sustainable Resource Science, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n    orcid: \"http://orcid.org/0000-0001-6389-4265\"\n  - given-names: \"Aki\"\n    family-names: \"Minoda\"\n    email: \"akiko.minoda@riken.jp\"\n    affiliation: Center for Integrative Medical Sciences, RIKEN, Suehiro-cho-1-7-22, Tsurumi Ward, Yokohama, Japan\"\n    orcid: \"http://orcid.org/0000-0002-2927-5791\"\n  doi: \"10.1038/s41467-022-34681-z\"\n  title: \"A flexible cross-platform single-cell data processing pipeline\"\n  year: \"2022\"\n  journal: \"Nat Commun\"\n  start: 1\n  end: 7\n  volume: 13\n  issue: 1\n  month: 11\n  year: 2022\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation <span id=\"Citation\"><span>",
        "parent_header": [
          "UniverSC",
          "Release"
        ],
        "type": "Text_excerpt",
        "value": "Please cite our publication when you use our software as follows:\n\nBattenberg, K., Kelly, S.T., Ras, R.A., Hetherington, N.A., Hayashi, K., and Minoda, A. (2022)\nA flexible cross-platform single-cell data processing pipeline. _Nat Commun_ **13**(1): 1-7. https://doi.org/10.1038/s41467-022-34681-z\n\n```\n@Article{pmid36369450,\n        author=\"Battenberg, K.  and Kelly, S. T.  and Ras, R. A.  and Hetherington, N. A.  and Hayashi, M.  and Minoda, A. \",\n        title=\"{{A} flexible cross-platform single-cell data processing pipeline}\",\n        journal=\"Nat Commun\",\n        year=\"2022\",\n        volume=\"13\",\n        number=\"1\",\n        pages=\"1-7\",\n        month=\"Nov\",\n        note = {https://github.com/minoda-lab/universc package version 1.2.7},\n        URL = {https://doi.org/10.1038/s41467-022-34681-z}\n}\n```\n\nThe preprint can also be found here:\n\nKelly, S.T., Battenberg K., Hetherington, N.A., Hayashi, K., and Minoda, A. (2021)\nUniverSC: a flexible cross-platform single-cell data processing pipeline.\nbioRxiv 2021.01.19.427209; doi: [https://doi.org/10.1101/2021.01.19.427209](https://doi.org/10.1101/2021.01.19.427209)\npackage version 1.2.7. [https://github.com/minoda-lab/universc](https://github.com/minoda-lab/universc)\n\n```\n@article {Kelly2021.01.19.427209,\n        author = {Kelly, S. Thomas and Battenberg, Kai and Hetherington, Nicola A. and Hayashi, Makoto and Minoda, Aki},\n        title = {{UniverSC}: a flexible cross-platform single-cell data processing pipeline},\n        elocation-id = {2021.01.19.427209},\n        year = {2021},\n        doi = {10.1101/2021.01.19.427209},\n        publisher = {Cold Spring Harbor Laboratory},\n        abstract = {Single-cell RNA-sequencing analysis to quantify RNA molecules in individual cells has become popular owing to the large amount of information one can obtain from each experiment. We have developed UniverSC (https://github.com/minoda-lab/universc), a universal single-cell processing tool that supports any UMI-based platform. Our command-line tool enables consistent and comprehensive integration, comparison, and evaluation across data generated from a wide range of platforms.Competing Interest StatementThe authors have declared no competing interest.},\n        eprint = {https://www.biorxiv.org/content/early/2021/01/19/2021.01.19.427209.full.pdf},\n        journal = {{bioRxiv}},\n        note = {package version 1.2.7},\n        URL = {https://github.com/minoda-lab/universc},\n}\n\n```\n\nThe software can also be cited directly as a manual:\n\n\n```\n@Manual{,\n    title = {{UniverSC}:  a flexible cross-platform single-cell data processing pipeline},\n    author = {S. Thomas Kelly, Kai Battenberg, Nicola A. Hetherington, Makoto Hayashi, and Aki Minoda},\n    year = {2023},\n    note = {package version 1.2.7},\n    url = {https://github.com/minoda-lab/universc},\n  }\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up Cell Ranger references",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "This repository comes with almost all necessary files to run test jobs. Test data and\nCell Ranger references are available with Git large file storage (LFS).\n\nTo install git LFS run:\n\n```\ncurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\ngit lfs install\n```\n\nTo import large files from Github change to the \"universc\" directory and run:\n\n```\ngit lfs pull origin\n```\n\nThis provides almost all files required. The STAR index and reference need to be generated or\nimported from an existing reference. The following code detects whether the references are\navailable in an existing cellranger installation.\n\n```\ncellrangerversion=`cellranger count --version | head -n 2 | tail -n 1 | cut -f2 -d'(' | cut -f1 -d')'`\ncellrangerpath=`which cellranger`\n\n# set up cellranger reference\nif [[ ! -f test/cellranger_reference/cellranger-tiny-ref/3.0.0/star/SA ]] && [[ -f $(dirname $cellrangerpath)/cellranger-tiny-ref/3.0.0/star/SA ]]; then\n    rsync $(dirname $cellrangerpath)/cellranger-tiny-ref/3.0.0/star/SA test/cellranger_reference/cellranger-tiny-ref/3.0.0/star/SA\nfi\nif [[ ! -f test/cellranger_reference/cellranger-tiny-ref/1.2.0/star/SA ]] && [[ -f $(dirname $cellrangerpath)/cellranger-tiny-ref/1.2.0/star/SA ]]; then\n    rsync $(dirname $cellrangerpath)/cellranger-tiny-ref/1.2.0/star/SA test/cellranger_reference/cellranger-tiny-ref/1.2.0/star/SA\nfi\n```\n\nThis creates a reference for Cell Ranger here:\n\n- test/cellranger_reference/cellranger-tiny-ref/1.2.0\n\n- test/cellranger_reference/cellranger-tiny-ref/3.0.0\n\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Automated references",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Setting up Cell Ranger references"
        ],
        "type": "Text_excerpt",
        "value": "You can reset the references with the automated settings here:\n\n```\ncd test/cellranger_reference/cellranger-tiny-ref/\nmake clean\nmake reference\ncd ../../..\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-generated References",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Setting up Cell Ranger references"
        ],
        "type": "Text_excerpt",
        "value": "For convenience we provide pre-generated references for the human genome and various model species available for download:\n\n[https://genomec.gsc.riken.jp/gerg/UniverSC/Premade_references/](https://genomec.gsc.riken.jp/gerg/UniverSC/Premade_references/)\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom Cell Ranger references",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Setting up Cell Ranger references"
        ],
        "type": "Text_excerpt",
        "value": "It is also possible to generate a custom reference for any genome provided you have\na FASTQ genome reference file and a GTF/GFF3 annotation file. Please ensure that the\nchromosomes match between the FASTA headers and the chromosome column (1st) of the\nGTF/GFF3 file.\n\nThe `gffread` function includes with the [cufflinks](http://cole-trapnell-lab.github.io/cufflinks/file_formats/#the-gffread-utility)\nutility can convert to gtf. For example:\n\n```\ngffread test/cellranger_reference/cellranger-tiny-ref/genes-1.2.0.gff3 -T -o test/cellranger_reference/cellranger-tiny-ref/genes-1.2.0.gtf \n```\n\nTo generate new references we first remove the references imported.\n\n```\nrm -rf test/cellranger_reference/cellranger-tiny-ref/1.2.0 test/cellranger_reference/cellranger-tiny-ref/3.0.0\n```\n\nWe then generate references from the FASTA and GTF files as shown in the following examples:\n\n```\ncellranger mkref --genome=test/cellranger_reference/cellranger-tiny-ref/1.2.0 \\\n        --fasta=test/cellranger_reference/cellranger-tiny-ref/genome-1.2.0.fa \\\n        --genes=test/cellranger_reference/cellranger-tiny-ref/ genes-1.2.0.gtf\n\ncellranger mkref --genome=test/cellranger_reference/cellranger-tiny-ref/3.0.0 \\\n         --fasta=test/cellranger_reference/cellranger-tiny-ref/genome-3.0.0.fa \\\n         --genes=test/cellranger_reference/cellranger-tiny-ref/ genes-3.0.0.gtf\n```\n\nSee the Cell Ranger manuals for more [details on references](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references). \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Battenberg, K.  and Kelly, S. T.  and Ras, R. A.  and Hetherington, N. A.  and Hayashi, M.  and Minoda, A. ",
        "format": "bibtex",
        "title": "{{A} flexible cross-platform single-cell data processing pipeline}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1038/s41467-022-34681-z",
        "value": "@article{pmid36369450,\n    url = {https://doi.org/10.1038/s41467-022-34681-z},\n    note = {https://github.com/minoda-lab/universc package version 1.2.7},\n    month = {Nov},\n    pages = {1-7},\n    number = {1},\n    volume = {13},\n    year = {2022},\n    journal = {Nat Commun},\n    title = {{{A} flexible cross-platform single-cell data processing pipeline}},\n    author = {Battenberg, K.  and Kelly, S. T.  and Ras, R. A.  and Hetherington, N. A.  and Hayashi, M.  and Minoda, A. },\n}"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Kelly, S. Thomas and Battenberg, Kai and Hetherington, Nicola A. and Hayashi, Makoto and Minoda, Aki",
        "doi": "10.1101/2021.01.19.427209",
        "format": "bibtex",
        "title": "{UniverSC}: a flexible cross-platform single-cell data processing pipeline",
        "type": "Text_excerpt",
        "url": "https://github.com/minoda-lab/universc",
        "value": "@article{Kelly2021.01.19.427209,\n    url = {https://github.com/minoda-lab/universc},\n    note = {package version 1.2.7},\n    journal = {{bioRxiv}},\n    eprint = {https://www.biorxiv.org/content/early/2021/01/19/2021.01.19.427209.full.pdf},\n    abstract = {Single-cell RNA-sequencing analysis to quantify RNA molecules in individual cells has become popular owing to the large amount of information one can obtain from each experiment. We have developed UniverSC (https://github.com/minoda-lab/universc), a universal single-cell processing tool that supports any UMI-based platform. Our command-line tool enables consistent and comprehensive integration, comparison, and evaluation across data generated from a wide range of platforms.Competing Interest StatementThe authors have declared no competing interest.},\n    publisher = {Cold Spring Harbor Laboratory},\n    doi = {10.1101/2021.01.19.427209},\n    year = {2021},\n    elocation-id = {2021.01.19.427209},\n    title = {{UniverSC}: a flexible cross-platform single-cell data processing pipeline},\n    author = {Kelly, S. Thomas and Battenberg, Kai and Hetherington, Nicola A. and Hayashi, Makoto and Minoda, Aki},\n}"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, we pledge to respect all people who \ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual language or\nimagery, derogatory comments or personal attacks, trolling, public or private harassment,\ninsults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments,\ncommits, code, wiki edits, issues, and other contributions that are not aligned to this \nCode of Conduct. Project maintainers who do not follow the Code of Conduct may be removed \nfrom the project team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by \nopening an issue or emailing the project maintainers (<tom.kelly@riken.jp> or \n<kai.battenberg@riken.jp>).\n\nThis Code of Conduct is adapted from the Contributor Covenant \n(http://contributor-covenant.org), version 1.0.0, available at \nhttp://contributor-covenant.org/version/1/0/0/\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/minoda-lab/universc"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to UniverSC development\n\nThank you for helping to make this package better. We value all contributions\nand rely on your feedback to identify problems and use cases.\n\n## TL;DR\n\nSend your PR! Thanks!\n\n## More Details\n\nYou want to contribute? Awesome! Small changes, like fixing typos in\ndocumentation are completely fine and also most welcome. For bigger\nchanges, we suggest that you open an issue before you start coding, so that\nwe can maximize the probability that we can successfully merge in your\ncode.\n\nThe goal of this guide is to help you get up and contributing to UniverSC as \nquickly as possible. The guide is divided into two main pieces:\n  \n  1. Filing a bug report or feature request in an issue.\n  \n  2. Suggesting a change via a pull request.\n\nPlease note that UniverSC is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md).\nBy contributing to this project,  you agree to abide by its terms.\n\n## Issues\n\nWhen filing an issue, the most important thing is to include a minimal \nreproducible example so that we can quickly verify the problem, and then figure \nout how to fix it. There are three things you need to include to make your \nexample reproducible: required packages, data, code.\n\n1.  **Packages** should be added to the PATH at the top of the script,\n    so it's easy to see which ones the example needs. You can see which\n    you are using with:\n\n```\necho $PATH\n```\n\n```\ngrep \"PATH\" $HOME/bash.r  \n```\n\n1.  The easiest way to include **data** is to use `head` to show the\n    first few rows of the files we are dealing with.\n\n```\nhead -n 24 *R1_001.fastq\nhead -n 24 *R2_001.fastq\nhead -n 10 barcodes.txt\n```\n\nYou can show compressed files as follows:\n\n```\nfor file in `ls *R1_001.fastq *R2_001.fastq`\ndo\n    zcat $file | head -n 24\ndone\n```\n\nThen simply copy these into GitHub with code blocks:\n\n\\`\\`\\`\n\n`your code here`\n\n\\`\\`\\`\n\n1. Please include error messages with the full backtrace of\n   commands that failed.\n\n```\ntail -n 25  my-id/outs/_log\n```\n\nCopy the output from the Cell Ranger logs or the terminal\nand paste is as a quote\n\n> \\> your\n>\n> \\> quote\n>\n> \\> here\n\n1.  Spend a little bit of time ensuring that your **code** is easy for others to\nread:\n  \n  * make sure you've used spaces and your variable names are concise, but\n      informative\n  \n    * use comments to indicate where your problem lies\n  \n    * do your best to remove everything that is not related to the problem.  \n     The shorter your code is, the easier it is to understand.\n\nYou can check you have actually made a reproducible example by starting up a \nfresh shell session and pasting your script in.\n\n(Unless you've been specifically asked for it, please don't include the\npackages that you've installed.)\n\n## Pull requests\n\nTo contribute a change to universc, you follow these steps:\n\n1. Create a branch in git and make your changes.\n1. Push branch to github and issue pull request (PR).\n1. Discuss the pull request.\n1. Iterate until either we accept the PR or decide that it's not\na good fit for universc.\n\nEach of these steps are described in more detail below. This might feel \noverwhelming the first time you get set up, but it gets easier with practice. \nIf you get stuck at any point, please reach out for help on the [universc-dev](https://groups.google.com/forum/#!forum/universc-dev) mailing list.\n                                                                                \nIf you're not familiar with git or github, please start by reading <http://r-pkgs.had.co.nz/git.html>\n\n<!--\n* [ ] Motivate the change in one paragraph, and include it in NEWS.\n      In parentheses, reference your github user name and this issue:\n      `(@hadley, #1234)`\n* [ ] Check pull request only includes relevant changes.\n* [ ] Use the [Google shell style](https://google.github.io/styleguide/shellguide.html).\n* [ ] Update documentation in `man/launch_universc.sh` and the `help` variable in the `launch_universc.sh` script\n* [ ] Add test data and a test job if suggesting a new technology (published data is preferred)\n* [ ] Add minimal example for a new feature\n\n--->\n\nPull requests will be evaluated against a seven point checklist:\n\n1.  __Motivation__. Your pull request should clearly and concisely motivate the\n    need for change. Unfortunately I am busy with other projects\n    these days, so you need to describe the problem and show\n    how your pull request solves it as concisely as possible.\n\n    Also include this motivation in `NEWS` so that when a new release of\n    UniverSC comes out it's easy for users to see what's changed. Add your\n    item at the top of the file and use markdown for formatting. The\n    news item should end with `(@yourGithubUsername, #the_issue_number)`.\n\n1.  __Only related changes__. Before you submit your pull request, please\n    check to make sure that you haven't accidentally included any unrelated\n    changes. These make it harder to see exactly what's changed, and to\n    evaluate any unexpected side effects.\n\n    Each PR corresponds to a git branch, so if you expect to submit\n    multiple changes make sure to create multiple branches. If you have\n    multiple changes that depend on each other, start with the first one\n    and don't submit any others until the first one has been processed.\n                                                                              \n1.  __Use UniverSC coding style__. Please follow the\n[Google shell style](https://google.github.io/styleguide/shellguide.html).\nMaintaining a consistent style across the whole code base makes it much easier to\njump into the code. If you're modifying existing UniverSC code that\ndoesn't follow the style guide, a separate pull request to fix the\nstyle would be greatly appreciated.\n                                                                              \n1.  If you're adding new parameters or a new function, you'll also need\nto document them in the help and manual.\n                                                                              \n1.  If fixing a bug or adding a new feature please add a\n    test to check if it works if test data is available.\n                                                                              \n1.  If fixing a bug in the output, please give an example.\n                                                                              \n1.  If you're adding a new feature, please add a short example\n    to the appropriate function.\n\nThis seems like a lot of work but don't worry if your pull request isn't perfect.\nIt's a learning process and members of the UniverSC team will be on hand to help you\nout. A pull request (\"PR\") is a process, and unless you've submitted a few in the\npast it's unlikely that your pull request will be accepted as is. All PRs require\nreview and approval from at least one member of the UniverSC development team \nbefore merge.\n                                                                              \nPlease remember that UniverSC is package used by other people. \nThis means that changing any existing functionality could result in\nbreaking someone's code (or another pipeline). \nPlease don't submit pull requests that change existing behaviour. Instead, \nthink about how you can add a new feature in a minimally invasive way.\n\n## Making Small Changes\n\n* Please always use the `dev` branch. Choose this branch in your fork. (We\n  build the `master` branch from the `dev` branch automatically, to make\n  sure that the repo is compatible with the `devtools` R package which uses\n  the `master` branch by default.)\n* Then look for the file you want to modify.\n* Click on the edit symbol (pen) on the upper right corner of the file\n  view.\n* Make your edits.\n* Write a short commit message, less than 65 characters. E.g.  \"Fix manual\n  page typo\" or \"Fix degree bug for loops\". If needed, elaborate your\n  changes below in the \"extended description\" field.\n* Commit your changes.\n* Go back to the start page of *your* forked repository. It is at\n  `https://github.com/<username>/universc`.\n* Click on the green button before the branch name to create a pull\n  request.\n* Click on \"Create pull request\".\n* Provide a more detailed description if you like. Please also indicate\n  that you are fine with licensing your contribution under universc's license\n  (see Legal Stuff below).\n* Click on \"Create pull request\".\n* That's it! It is probably a good idea to keep your forked repository\n  until the change is accepted into universc, in case you need to modify it.\n* Now you need to wait for us, unfortunately. Please ping us, if it takes\n  long to respond. E.g. a week is considered to be long.\n* Once your pull request is accepted, you can delete your forked repository.\n\n## Making More Involved Changes\n\nThis is mostly the same as for trivial changes, but you probably want to\nedit the sources on your computer, instead of online on Github.\n\n* Open an issue in the issue tracker about the proposed changes.  This is\n  not required for smaller things, but I suggest you do it for others. Just\n  in case somebody is already working on the same thing, or it is something\n  we don't want in universc.\n* Fork the repository, and clone it to the machine you'll work on.\n* We usually build UniverSC on OSX, so the `dev` branch is usally fine on\n  that platform. It might have problems on other systems. If this happens,\n  please open an issue and tell us.\n* Make sure you work on the `dev` branch.\n* Once ready with your changes, build universc, and run the tests. If you use\n  the `docker` package, this means running:\n\n  ```sh\n  docker build docker build -t universc:dev .\n  ```\n\n* Submit your pull request.\n* Now you need to wait for us, unfortunately. Please ping us,\n  by email or mentioning the maintainer's username on GitHub\n  if it takes longer than a week or so to respond. \n\n## Writing UniverSC Code \n\nSome tips on writing UniverSC code. In general, look at how things are done,\nand try to do them similarly. (Unless you think they are not done well, in\nwhich case please tell us.)\n\n### Code Formatting\n\nLook at the style (indentation, braces, etc.) of some recently committed\nbigger change, and try to mimic that. The code style within UniverSC is not\nstricly the same, but we want to keep it reasonably similar. If you are \nunsure on this, we can address this when reviewing the Pull Request so\ndon't worry about it too much.\n\n### Documentation\n\nPlease document your new functions by editing the manual.\n\n```\nnano man/launch_universc.sh\n```\n\n```\nnano +$(grep -n \"help=\" launch_universc.sh | cut -d: -f1) launch_universc.sh\n```\n\n### Test Cases\n\nUnless you change something trivial, please consider adding test cases.\nThis is important! See the files in the `test` directory for\nexamples.\n\nIf you are unsure how to do this please submit the PR anyway and\nwe can discuss it. If you are able to describe the use case\nwhere this feature would be useful, please do so as best you can.\n\n### Ask Us!\n\nIn general, if you are not sure about something, please ask! You can\nopen an issue on Github or contact the maintainer <tom.kelly@riken.jp>.\nWe to answer publicly so that others can learn from it, too. There\nare silly questions, if you're having trouble others probably are too.\n\n## Legal Stuff\n\nThis is a pain to deal with, but we can't avoid it, unfortunately.  So,\nuniversc is licensed under the \"General Public License (GPL) version 3, or\nlater\". If your contribution is bigger than a typo fix, then please\nindicate that you are fine with releasing your code/text under these\nlicenses.  E.g. adding a sentence that reads as \"I'm fine with GPL 3\"\nis perfectly enough.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-20T01:19:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-28T17:46:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "UniverSC: a flexible cross-platform single-cell data processing pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.953500351283024,
      "result": {
        "original_header": "UniverSC",
        "type": "Text_excerpt",
        "value": "Single-cell RNA-sequencing analysis to quantify RNA molecules in individual cells has become popular owing to \nthe large amount of information one can obtain from each experiment. UniverSC is a universal single-cell processing \ntool that supports any UMI-based platform. Our command-line tool enables consistent and comprehensive integration,\ncomparison, and evaluation across data generated from a wide range of platforms. Here we provide a guide to install\nand use this tool to process single-cell RNA-Seq data from FASTQ format. \nTom Kelly^\u2020^ (RIKEN IMS) and Kai Battenberg^\u2020^ (RIKEN CSRS/IMS) \n\u2020 These authors contributed equally to this work \n**Disclaimer**: we are third party developers not affiliated with 10X Genomics or any other vendor of single-cell technologies.\nWe are releasing this code on an open-source [license](#licensing) which calls Cell Ranger\u2122 as an external dependency. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9828918824753319,
      "result": {
        "original_header": "Purpose",
        "type": "Text_excerpt",
        "value": "If you use this tool, please [cite](#Citation) to acknowledge the efforts of the authors. You can report problems and request\nnew features to the maintainers with and [issue](#Issues) on GitHub. Details on how to [install](#Install) and [run](#Usage) are provided\nbelow. Please see the [help](#Help) and [examples](#Examples) to try solve your problem before submitting an issue. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9345330881328974,
      "result": {
        "original_header": "Supported Technologies",
        "type": "Text_excerpt",
        "value": "In principle, any technology with a cell barcode and unique molecular identifier (UMI) can be supported. \nWe provide the following preset configurations for convenience based on published data and configurations used by other pipelines \n(e.g, DropSeqPipe and Kallisto/Bustools). To add further support for other technologies or troubleshoot problems, please submit an Issue\nto the GitHub repository: [minoda-lab/universc](https://github.com/minoda-lab/universc/issues)\nas described in [Bug Reports](#Issues) below. \nSome changes to the Cell Ranger install are required to run other technologies. Therefore we provide settings for 10x Genomics\nwhich restores settings for the Chromium instrument. We therefore recommend using UniverSC for processing all data from different\ntechnologies as the tool manages these changes. Please note that on a single install of Cell Ranger, multiple technologies or multiple samples \nof the same technology with different whitelist barcodes cannot be run cannot be run simultaneousely (the tool will also check for this to\navoid causing problems with existing runs). Multiple samples of the same technology with the same barcode whitelist can be run simultaneously. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.994048990587688,
      "result": {
        "original_header": "Chemistry settings available",
        "type": "Text_excerpt",
        "value": "All technologies support 3\u2032 single-cell RNA-Seq. Barcode adjustments and\nwhitelists are changed automatically. For 5\u2032 single-cell RNA-Seq, this\nis only supported for 10x Genomics version 2 chemistry, ICELL8, \nSmart-Seq, and STRT-Seq.\nFor 10x Genomics, this is detected automatically but can be\nconfigured with the `--chemistry` argument.\nFor other technologies, the template switching oligonucleotide\nis automatically converted to the match the 10x sequence. \n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.913725559213477,
      "result": {
        "original_header": "Single and dual indexed technologies",
        "type": "Text_excerpt",
        "value": "Where needed the cell barcode can be detected in the index I1 or I2 file.\nSingle indexes are supported for STRT-Seq and Quartz-Seq.\nDual indexes are supported for Fluidigm C1, ICELL8 full-length, \ninDrops-v3, RamDA-Seq, SCI-RNA-Seq, scifi-seq, and Smart-Seq.\nCombinatorial indexing technologies have linkers between barcodes removed\nautomatically to match the barcode whitelist.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9515407049157033,
      "result": {
        "original_header": "Demultiplexing for dual-indexing",
        "type": "Text_excerpt",
        "value": "For dual-indexed technologies such as Fluidigm C1, inDrops-v3, Sci-Seq,\nSmartSeq3 it is advised to use \"bcl2fastq\" before calling UniverSC:\n```\n   /usr/local/bin/bcl2fastq  -v --runfolder-dir \"/path/to/illumina/bcls\"  --output-dir \"./Data/Intensities/BaseCalls\"\\\n                                --sample-sheet \"/path/to/SampleSheet.csv\" --create-fastq-for-index-reads\\\n                                --use-bases-mask Y26n,I8n,I8n,Y50n  --mask-short-adapter-reads 0\\\n                                --minimum-trimmed-read-length 0\n```\n \nPlease adjust the lengths for `--use-bases-mask` accordingly for read 1, index 1 (i7), index 2 (i5), and read 2.\nEnsure that `--create-fastq-for-index-read` is used where possible.\nUsing `--no-lane-splitting` is optional as UniverSC can process an arbirtary number of lanes.\nThere is no need to specify index sequences in the same sheet for cell barcodes, using \"NNNNNNNN\" will match all\nsamples and the cell barcodes will be distinguished by the single-cell processing pipeline. Index sequences should\nonly be used to demultiplex samples and replicates (not cells).\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9852542639675717,
      "result": {
        "original_header": "Missing index sequences",
        "type": "Text_excerpt",
        "value": "If a sequencing facility has demultiplexed the samples for you without this,\nUniverSC will attempt to extract index sequences from FASTQ headers in read 1.\nIf index sequences are not stored in the file headers and samples have already\nbeen demultiplexed, a dummy index file of the same number of reads as R1 and R2\nwill be required. As a workaround, you can generate this by copying the R1 and R2\nfiles and replacing the sequences with the first barcode in the relevant whitelist.\nFor example:\n```\nindex1=\"TAAGGCGA\"\nindex2=\"AAGGAGTA\"\n\n# create new files\ncp R1_file.fastq I1_file.fastq\ncp R2_file.fastq I2_file.fastq\n\n# replace sequences\nsed -i \"2~4s/^.*$/${index1}/g\" I1_file.fastq\nsed -i \"2~4s/^.*$/${index2}/g\" I2_file.fastq\n\n# replace quality scores\nsed -i \"4~4s/^.*$/IIIIIIII/g\" I1_file.fastq I2_file.fastq\n```\nThis results in a new \"sample index\" for each demultiplexed sample.\nTo combine demultiplexed sampls for dual indexed techniques use the following:\n```\n# for fastq files\ncat Sample1_R1_file.fastq Sample2_R1_file.fastq Sample3_R1_file.fastq > Combined_R1_file.fastq\ncat Sample1_R2_file.fastq Sample2_R2_file.fastq Sample3_R2_file.fastq > Combined_R2_file.fastq\ncat Sample1_I1_file.fastq Sample2_I1_file.fastq Sample3_I1_file.fastq > Combined_I1_file.fastq\ncat Sample1_I2_file.fastq Sample2_I2_file.fastq Sample3_I2_file.fastq > Combined_I2_file.fastq\n\n# for compressed files (not need to uncompress)\ncat Sample1_R1_file.fastq.gz Sample2_R1_file.fastq.gz Sample3_R1_file.fastq.gz > Combined_R1_file.fastq.gz\ncat Sample1_R2_file.fastq.gz Sample2_R2_file.fastq.gz Sample3_R2_file.fastq.gz > Combined_R2_file.fastq.gz\ncat Sample1_I1_file.fastq.gz Sample2_I1_file.fastq.gz Sample3_I1_file.fastq.gz > Combined_I1_file.fastq.gz\ncat Sample1_I2_file.fastq.gz Sample2_I2_file.fastq.gz Sample3_I2_file.fastq.gz > Combined_I2_file.fastq.gz\n```\n \nAs this needs to done on a case-by-case basis it has not been implemented by the UniverSC core functions.\nWe provide this workaround for using published data and data already processed by sequencing facilities.\nPlease contact the maintainers or file an issue on GitHub if you are having problems with this case. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9106230026138676,
      "result": {
        "original_header": "Custom inputs",
        "type": "Text_excerpt",
        "value": "Custom inputs are also supported by giving the name \"custom\" and length of barcode and UMI separated by a \"_\" character. \nCustom barcode files are also supported for preset technologies. These are particularly useful for well-based\ntechnologies to demutliplex based on the wells. \nNote that custom inputs do not remove linker or adapter sequences for combinatorial indexng technologies.\nThese must be removed from the Read 1 file before running UniverSC. To request a preset technology\nsetting instead, please submit a feature request on GitHub as described below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9223625143518032,
      "result": {
        "original_header": "Release",
        "type": "Text_excerpt",
        "value": "We have tested it on several technologies but we need users like you\nto let us know how we can improve it. We hope that it will save you\ntime by handing tedious parts of data formatting so that you can\nfocus on the results.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9422880221185909,
      "result": {
        "original_header": "Requesting new technologies",
        "type": "Text_excerpt",
        "value": "Where possible, please provide an minimal example of the first few lines of each FASTQ file for testing purposes. \nIt is also helpful to describe the technology, such as: \nPlease bear this in mind when submitting requests. We will consider to add further technologies but\nit could take significant resources to add support for techniques with these designs.\nNote that updates to the tool have added support for several examples of these.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9769050798955798,
      "result": {
        "original_header": "Licensing <span id=\"Licensing\"><span>",
        "type": "Text_excerpt",
        "value": "This package is provided open-source on a GPL-3 license. This means that you are free to use and \nmodify this code provided that they also contain this license. \nPlease note that we are third-party developers releasing it for use by users like ourselves.\nWe are not affiliated with 10x Genomics, Dolomite Bio, Takara Bio, or any other vendor of\nsingle-cell technologies. This software is not supported by 10x Genomics and only changes\ndata formats so that other technologies can be used with the Cell Ranger pipeline. \nCell Ranger (version 2.0.2, 2.1.0, 2.1.0, and 3.0.2) has been released open source on and MIT\nlicense on GitHub. We use this version of Cell Ranger for testing and running our tools.\nNote that the code that generates the 'cloupe' files is not included in this release.\nThe Cloupe browser uses files generated by proprietary closed-source software and is\nsubject to the 10x Genomics End-User License Agreement which does not allow use with\ndata generated from other platforms. \nTherefore 'launch_universc.sh' does not support Cloupe files and you should not use them with\ntechnologies other than 10x Genomics.   \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download UniverSC",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "To download UniverSC open a terminal prompt and enter the following commands.\n\n```\ncd $HOME/Downloads\ngit clone https://github.com/minoda-lab/universc.git\ncd universc\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/minoda-lab/universc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/minoda-lab/universc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "minoda-lab/universc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/podman_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/launch_universc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/docker_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/man/launch_universc.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://hits.dwyl.com/tomkellygenetics/universc.svg"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation <span id=\"installation\"><span>",
        "parent_header": [
          "UniverSC"
        ],
        "type": "Text_excerpt",
        "value": "This script requires Cell Ranger to be installed and exported to the PATH (version 3.0.0 or higher recommended).\nThe script itself is exectuable and does not require installation to run but you can put it in your PATH or\nbin of your Cell Ranger install if you wish to do so. We provide scripts to do this for your convenience.\n\nSee the details below on how set up Cell Ranger and launch_universc.sh.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Runnning in a git repository",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "If you are running code in a git repository you can add UniverSC as a submodule.\n\n```\ncd $/HOME/my_git_repo\ngit submodule add https://github.com/minoda-lab/universc.git\nbash universc/launch_universc.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing dependencies",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "If Cell Ranger is not installed on your system, you must install it before running launch_universc.sh.\n\nPlease see the [manual for Cell Ranger](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/what-is-cell-ranger)\non the 10x Genomics website for more details on how to use it. We provide support for\npassing various options to Cell Ranger and sensible defaults for each technology.\n\nThis script is compatible with the installation of Cell Ranger that you can\n[download](https://support.10xgenomics.com/single-cell-gene-expression/software/downloads/latest)\nfrom the 10x Genomics website and gives the same output formats.\n\nHowever, we recommend to use the open-source release of Cell Ranger on GitHub. This is\nrelease on an MIT License and is not subject to the 10x Genomics End User\nLicense Agreement.\n\nWe provide open-source repositories with minor updates for compatibility\nwith current versions of dependencies.\n\nThe code is available here:\n\n[https://github.com/minoda-lab/cellranger/releases](https://github.com/minoda-lab/cellranger/releases)\n\nWe also provide Docker images for Cell Ranger versions 2.0.2, 2.1.0, 2.1.1, and 3.0.2:\n\n[https://github.com/minoda-lab/cellranger_clean/packages](https://github.com/minoda-lab/cellranger_clean/packages)\n\n[https://hub.docker.com/r/tomkellygenetics/cellranger_clean/tags](https://hub.docker.com/r/tomkellygenetics/cellranger_clean/tags)\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommended software",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Software Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- git-lfs 2.10.0\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ensuring write-access to Cell Ranger",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "The conversion process requires write-access to to the Cell Ranger install directory so\nan install on your user directory is recommended. \n\nYou can check where Cell Ranger is installed with:\n\n```\nwhich cellranger\n```\n\nIf calling the script gives the help menu, launch_universc.sh has sucessfully run\nwith access to the directories that it needs. It will give an error\nmessage if the Cell Ranger directory is not writeable.\n\n```\nbash launch_universc.sh\n```\n\nThis script requires Cell Ranger (version 3.0.0 or higher recommended) to be installed and have write-access\nto the Cell Ranger install directory, so an install on your user directory is recommended.\nThis script also requires Cell Ranger to be exported to the PATH.\nThe script itself is exectuable and does not require installation to run but you can put it\nin your PATH or bin of your Cell Ranger install if you wish to do so.\n\nThis script will run in bash on any OS (but it has only been tested on Linux Debian). Running Cell Ranger \nwith this configuration requires a lot of memory (40Gb) so running on server is recommended.\nSGE job modes are supported to run Cell Ranger with multiple threads.\n\nThis is required because launch_universc.sh will make changes to the Cell Ranger install\nto ensure compatibility with the technology running. A local install in\nyou user home directory is needed to make these changes. This ensures\nthat these changes do not affect jobs run by other users and allows\nlaunch_universc.sh to change the whitelist and source code as needed.\n\nThese changes are reversible but mean that only one technology can be\nrun at the same time. You can restore original configurations with:\n\n```\nbash launch_universc.sh -t \"10x\" --setup\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Local install",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Ensuring write-access to Cell Ranger"
        ],
        "type": "Text_excerpt",
        "value": "If Cell Ranger is not already installed we recommend installing it in a directory that\nyou have write access to such as `$HOME/local`.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Importing an installed version of Cell Ranger",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Ensuring write-access to Cell Ranger"
        ],
        "type": "Text_excerpt",
        "value": "If Cell Ranger has been installed by a system administrator, you will only have read-access\nto that installation. You can still use rather than installing a new version but you\nwill need to copy it to your home directory and add this version to your PATH.\n\n```\nmkdir -p $HOME/local\ncd ~/local\ninstalled_version=$(echo $(which cellranger) | rev | cut -d\"/\" -f2- | rev)\ncp -rv $installed_version  .\ninstalled_directory=$(echo $(which cellranger) | rev | cut -d\"/\" -f2 | rev) \ncd $installed_directory\nnew_version=$(pwd)\n#remove previous version from PATH\nexport PATH=$(echo $PATH |  sed \"s;$installed_version:;;g\")\n#add new version to PATH\neval $(echo export PATH=$new_version:\\$PATH)\ncd ..\n```\n\nYou should be able to see that the locally installed version can be called as follows:\n\n```\necho $PATH\nwhich cellranger\nbash launch_universc.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Automated configuration",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "We provide a Makefile with all necessary configurations to automatically\ncheck whether launch_universc.sh is installed correctly.\n\nYou can specify any directory to install as a \"prefix\". This will\ncreate a directory \"$HOME/local/universc-0.3\" where\nthe files needed will be stored.\n\n```\ncd $HOME/Downloads\ngit clone https://github.com/minoda-lab/universc.git\nmake\nmake install prefix=$HOME/local\n```\n\nIt is also possible to add the current working directory as \nthe installed directory.\n\n```\nmake install prefix=\".\"\n```\n\nIn this case *do not* delete the installed directory after you\ninstall it or the script will fail to run.\n\nBy default it will be installed in a root directory with\nread-only access. This requires administrator priviledges.\nNote that the manual can onlly be installed with root\npriviledges.\n\n```\nsudo make install\nsudo make manual\n```\n\nYou can verify that launch_universc.sh has been added to the PATH.\n\n```\necho $PATH\nwhich launch_universc.sh\n```\n\nYou can then run `launch_universc.sh` from any working directory.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Updating",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "If launch_universc.sh is already installed and you wish to update it,\nfirst you need to pull the changes from GitHub from the\nuniversc directory.\n\n```\ncd universc\ngit pull origin master\nmake\n```\n\nThen you can update to the directory of your choice using\nthe same options for `--prefix` as to install.\n\n```\nmake install prefix=$HOME/local\n```\n\nThis is remove previous versions of launch_universc.sh and install\nthe latest version.\n\nThe manual can be updated with:\n\n```\nsudo make manual\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Uninstalling",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "Before uninstalling UniverSC please ensure that any\nversions of Cell Ranger used are restored to their default configuration:\n\n```\nexport PATH=/Users/tom/Downloads/cellranger-x.y.z:$PATH\nbash launch_universc.sh -t \"10x\" --setup\n```\n\nWe provide an automated script to reverse the changes above.\n\n```\nmake uninstall\n```\n\nThis is will automatically detect the installation of launch_universc.sh.\n\nIf multiple versions of Cell Ranger are present, you can\nspecify which to remove with.\n\n```\nmake remove prefix=$HOME/local\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom shell",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "Make will install the script with `bash` by default but\nalternative shells are supported. You will need to run the\ninstall script or run it with your shell of choice.\n\n```\nsh launch_universc.sh\nsh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nksh launch_universc.sh\nksh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nzsh launch_universc.sh\nzsh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nfish launch_universc.sh\nfish inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\nThe help menu should reflect the shell used to run it.\n\nTo update, similarly run the `inst/UPGRADE` script with\nyour chosen shell.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker image <span id=\"Docker\"><span>",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "We provide a docker image with all software needed\nto run UniverSC.\n\nThis requires \"docker\" to be installed and a valid DockerHub account.\n\nYou can check whether docker is available by running:\n\n```\nwhich docker\ndocker run hello-world    \n```\n\nThis may require you to login to your account.\n\n```\ndocker login -u \"myusername\"\n```\n\nIf you cannot run docker on a remote server, contact\nyour systems administrator.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pulling from remote DockerHub repository",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Docker image <span id=\"Docker\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "We provide a docker image for UniverSC version 1.2.7.\n\nYou can import it if you have docker installed.\n\n```\ndocker pull tomkellygenetics/universc:latest\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building the Docker image locally",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Docker image <span id=\"Docker\"><span>",
          "Running processes in a docker container"
        ],
        "type": "Text_excerpt",
        "value": "The Dockerfile is provided in the repository so it can be built from\nsource. This will build a Docker image with the latest version of\nuniversc provided that updates to dependencies on GitHub\nare still compatible.\n\n```\ngit clone https://github.com/minoda-lab/universc.git\ndocker build -t universc:latest .  \n```\n\nPlease bear mind that it can take considerable time to install\nall necessary dependencies. A stable internet connection is required.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual configuration",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "You can manually add the script here to the PATH, for example:\n\n```\nPATH=$HOME/Downloads/universc:$PATH\n```\n\nThis means that the directory where the script is can be found\nfrom the shell.\n\n```\necho $PATH\ncd ~\nlaunch_universc.sh\n```\n\nAdd the following line to the `~/.bashrc` file and use `source ~/.bashrc`\nto load a new session. This means that you do not need to add the\nsript to the PATH in future sessions.\n\n```\nexport PATH=$HOME/Downloads/universc:$PATH\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up Cell Ranger references",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "This repository comes with almost all necessary files to run test jobs. Test data and\nCell Ranger references are available with Git large file storage (LFS).\n\nTo install git LFS run:\n\n```\ncurl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash\nsudo apt-get install git-lfs\ngit lfs install\n```\n\nTo import large files from Github change to the \"universc\" directory and run:\n\n```\ngit lfs pull origin\n```\n\nThis provides almost all files required. The STAR index and reference need to be generated or\nimported from an existing reference. The following code detects whether the references are\navailable in an existing cellranger installation.\n\n```\ncellrangerversion=`cellranger count --version | head -n 2 | tail -n 1 | cut -f2 -d'(' | cut -f1 -d')'`\ncellrangerpath=`which cellranger`\n\n# set up cellranger reference\nif [[ ! -f test/cellranger_reference/cellranger-tiny-ref/3.0.0/star/SA ]] && [[ -f $(dirname $cellrangerpath)/cellranger-tiny-ref/3.0.0/star/SA ]]; then\n    rsync $(dirname $cellrangerpath)/cellranger-tiny-ref/3.0.0/star/SA test/cellranger_reference/cellranger-tiny-ref/3.0.0/star/SA\nfi\nif [[ ! -f test/cellranger_reference/cellranger-tiny-ref/1.2.0/star/SA ]] && [[ -f $(dirname $cellrangerpath)/cellranger-tiny-ref/1.2.0/star/SA ]]; then\n    rsync $(dirname $cellrangerpath)/cellranger-tiny-ref/1.2.0/star/SA test/cellranger_reference/cellranger-tiny-ref/1.2.0/star/SA\nfi\n```\n\nThis creates a reference for Cell Ranger here:\n\n- test/cellranger_reference/cellranger-tiny-ref/1.2.0\n\n- test/cellranger_reference/cellranger-tiny-ref/3.0.0\n\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Locally install manual",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "You can display a manual from the locally installed UniverSC directory with:\n\n```\n man man/launch_universc.sh \n```\n\nNote that the working directory must be `universc` or the full path to the man directory must be given.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Automated Configuration",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>",
          "Installing the manual with root priviliges:"
        ],
        "type": "Text_excerpt",
        "value": "We provide an automated script to install the manual.\n\n```\nsudo make manual\n```\n\nYou can remove the manual with:\n\n```\nsudo make manual-clean\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>",
          "Installing the manual with root priviliges:"
        ],
        "type": "Text_excerpt",
        "value": "The manual can be installed as follows on Mac and Linux.\n\n```\n# add manual directory to PATH if not already found\n## check config for Linux\nif [[ -f /etc/manpath.config ]]\n    then CONFIG=\"/etc/manpath.config\"\nfi\n## check config for Mac\nif [[ -f /etc/manpaths ]]\n    then CONFIG=\"/etc/manpaths\"\nfi\nif [[ ! -z $CONFIG ]]\n    then MANDIR=`tail -n 1 ${CONFIG}`\nelse if [[ ! -z $MANPATH ]]\n    then\n    SHELL_RC=`echo ~/.${0}rc`\n    echo \"export MANPATH=/usr/local/man\" >> $SHELL_RC\n    MANDIR=`echo ${MANPATH} | cut -d: -f1`\n    fi\nfi\nsudo mkdir -p ${MANDIR}/man1\ncp man/launch_universc.sh man/launch_universc.sh.1\nsudo mv man/launch_universc.sh.1 ${MANDIR}/man1/launch_universc.sh.1\ngzip ${MANDIR}/man1/launch_universc.sh.1\n```\n\nAlternatively the man can be installed with:\n\n```\ncp man/launch_universc.sh man/launch_universc.sh.1\nsudo install -g 0 -o 0 -m 0644 man/launch_universc.sh.1 ${MANDIR}/man1\n```\n\nThe manual can then be called from any directory as follows:\n\n```\nman launch_universc.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8765331502660514,
      "result": {
        "original_header": "UniverSC",
        "type": "Text_excerpt",
        "value": "**Package** \nUniverSC version 1.2.7 \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9735630500356739,
      "result": {
        "original_header": "Purpose",
        "type": "Text_excerpt",
        "value": "We've developed a bash script that will run Cell Ranger on FASTQ files for these technologies. See below for details on how to use it. \nIf you use this tool, please [cite](#Citation) to acknowledge the efforts of the authors. You can report problems and request\nnew features to the maintainers with and [issue](#Issues) on GitHub. Details on how to [install](#Install) and [run](#Usage) are provided\nbelow. Please see the [help](#Help) and [examples](#Examples) to try solve your problem before submitting an issue. \nDetails on the [Docker image](#Docker) are given below. We recommend using Docker unless you have a server environment with Cell Ranger installed already.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9978039647220373,
      "result": {
        "original_header": "Supported Technologies",
        "type": "Text_excerpt",
        "value": "Some changes to the Cell Ranger install are required to run other technologies. Therefore we provide settings for 10x Genomics\nwhich restores settings for the Chromium instrument. We therefore recommend using UniverSC for processing all data from different\ntechnologies as the tool manages these changes. Please note that on a single install of Cell Ranger, multiple technologies or multiple samples \nof the same technology with different whitelist barcodes cannot be run cannot be run simultaneousely (the tool will also check for this to\navoid causing problems with existing runs). Multiple samples of the same technology with the same barcode whitelist can be run simultaneously. \nIf you are using `UniverSC` you should also do so to run 10x Genomics data. If you wish to restore Cell Ranger to\ndefault settings, see the [installation](#Uninstalling) or [troubleshooting](#Debugging) sections below. \n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Pre-set configurations",
        "type": "Text_excerpt",
        "value": "-  10x Genomics (version automatically detected): 10x, chromium\n    -  10x Genomics version 2 (16 bp barcode, 10 bp UMI): 10x-v2, chromium-v2\n    -  10x Genomics version 3 (16 bp barcode, 12 bp UMI): 10x-v3, chromium-v3\n-  Aligent Bravo B (16 bp barcode, No UMI): aligent, bravo \n-  BD Rhapsody\n    - BD Rhapsody v1 (27 bp barcode, 8 bp UMI): bd-rhapsody\n    - BD Rhapsody v2 enhanced beads (27 bp barcode, 8 bp UMI): bd-rhapsody-v2\n-  C1\n    -  C1 Fluidigm (16 bp barcode, No UMI): c1, fluidgm-c1\n    -  C1 CAGE (16 bp, No UMI): c1-cage\n    -  C1 RamDA-Seq (16 bp, No UMI): c1-ramda-seq\n-  CEL-Seq\n    -  CEL-Seq  (8 bp barcode, 4 bp UMI): celseq\n    -  CEL-Seq2 (6 bp UMI, 6 bp barcode): celseq2\n-  Drop-Seq (12 bp barcode, 8 bp UMI): dropseq\n-  ICELL8\n    -  ICELL8 version 2 (11 bp barcode, No UMI): icell8-non-umi, icell8-v2\n    -  ICELL8 version 3 (11 bp barcode, 14 bp UMI): icell8 or custom\n    -  ICELL8 5\u2032 scRNA with TCR OR kit (10bp barcode, NO bp UMI): icell8-5-prime\n    -  ICELL8 full-length scRNA with Smart-Seq (16 bp barcode, No UMI): icell8-full-length\n-  inDrops\n    -  inDrops version 1 (19 bp barcode, 6 bp UMI): indrops-v1, 1cellbio-v1\n    -  inDrops version 2 (19 bp barcode, 6 bp UMI): indrops-v2, 1cellbio-v2\n    -  inDrops version 3 (16 bp barcode, 6 bp UMI): indrops-v3, 1cellbio-v3\n -  MARS-Seq\n    -  MARS-Seq  (6 bp barcode, 10 bp UMI): marsseq, marsseq-v1\n    -  MARS-Seq2 (7 bp barcode, 8 bp UMI): marsseq2, marsseq-v2   \n-  Microwell-Seq (18 bp barcode, 6 bp UMI): microwell\n-  Nadia (12 bp barcode, 8 bp UMI): nadia, dropseq\n-  PIP-Seq\n    - PIP-Seq version 0 (24 bp barcode, 8 bp UMI): pip-seq-v0\n    - PIP-Seq version 1 (16 bp barcode, 6 bp UMI): pip-seq-v1\n    - PIP-Seq version 2 (24 bp barcode, 12 bp UMI): pip-seq-v2\n    - PIP-Seq version 3 (28 bp barcode, 12 bp UMI): pip-seq-v3\n    - PIP-Seq version 4 (28 bp barcode, 12 bp UMI): pip-seq-v4\n-  Quartz-Seq\n    -  QuartzSeq (6 bp index, no UMI): quartz-seq\n    -  Quartz-Seq2 (14 bp barcode, 8 bp UMI): quartzseq2-384\n    -  Quartz-Seq2 (15 bp barcode, 8 bp UMI): quartzseq2-1536\n-  RamDA-Seq (6 bp index, no UMI): ramda-seq\n-  Single-cell combinatorial indexing (SCI-RNA-Seq)\n   -  SCI-Seq 2-level indexing (30 bp barcode, 8 bp UMI): sciseq2\n   -  SCI-Seq 3-level indexing (40 bp barcode, 8 bp UMI): sciseq3\n   -  SCIFI-Seq (27 bp barcode, 8 bp UMI): scifiseq\n-  SCRB-Seq (6 bp barcode, 10 bp UMI): scrbseq, mcscrbseq\n-  SeqWell (12 bp barcode, 8 bp UMI): plexwell, seqwell, seqwells3\n-  Smart-seq\n   -  Smart-Seq (16 bp barcode, No UMI): smartseq\n   -  Smart-Seq2 (16 bp barcode, No UMI): smartseq2\n   -  Smart-Seq2-UMI, Smart-seq3 (16 bp barcode, 8 bp UMI): smartseq3\n-  SPLiT-Seq\n   -  SPLiT-Seq v1.0 (8 bp UMI, 24 bp barcode): splitseq\n   -  SPLiT-Seq v2.1 (10 bp UMI, 24 bp barcode): splitseq2\n-  STRT-Seq\n    -  STRT-Seq (6 bp barcode, no UMI): strt-seq\n    -  STRT-Seq-C1 (8 bp barode, 5 bp UMI): strt-seq-c1\n    -  STRT-Seq-2i (13 bp barcode, 6 bp UMI): strt-seq-2i\n    -  STRT-Seq-2018 (8 bp barcode, 8 bp UMI): strt-seq-2018\n-  SureCell (18 bp barcode, 8 bp UMI): surecell, ddseq, biorad\n-  VASA-Seq\n    -  VASA-plate (6 bp UMI, 6 bp barcode): vasa-plate\n    -  VASA-drop (6 bp UMI, 16 bp barcode): vasa-drop\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999995162625,
      "result": {
        "original_header": "Missing index sequences",
        "type": "Text_excerpt",
        "value": "If a sequencing facility has demultiplexed the samples for you without this,\nUniverSC will attempt to extract index sequences from FASTQ headers in read 1.\nIf index sequences are not stored in the file headers and samples have already\nbeen demultiplexed, a dummy index file of the same number of reads as R1 and R2\nwill be required. As a workaround, you can generate this by copying the R1 and R2\nfiles and replacing the sequences with the first barcode in the relevant whitelist.\nFor example:\n```\nindex1=\"TAAGGCGA\"\nindex2=\"AAGGAGTA\"\n\n# create new files\ncp R1_file.fastq I1_file.fastq\ncp R2_file.fastq I2_file.fastq\n\n# replace sequences\nsed -i \"2~4s/^.*$/${index1}/g\" I1_file.fastq\nsed -i \"2~4s/^.*$/${index2}/g\" I2_file.fastq\n\n# replace quality scores\nsed -i \"4~4s/^.*$/IIIIIIII/g\" I1_file.fastq I2_file.fastq\n```\nThis results in a new \"sample index\" for each demultiplexed sample.\nTo combine demultiplexed sampls for dual indexed techniques use the following:\n```\n# for fastq files\ncat Sample1_R1_file.fastq Sample2_R1_file.fastq Sample3_R1_file.fastq > Combined_R1_file.fastq\ncat Sample1_R2_file.fastq Sample2_R2_file.fastq Sample3_R2_file.fastq > Combined_R2_file.fastq\ncat Sample1_I1_file.fastq Sample2_I1_file.fastq Sample3_I1_file.fastq > Combined_I1_file.fastq\ncat Sample1_I2_file.fastq Sample2_I2_file.fastq Sample3_I2_file.fastq > Combined_I2_file.fastq\n\n# for compressed files (not need to uncompress)\ncat Sample1_R1_file.fastq.gz Sample2_R1_file.fastq.gz Sample3_R1_file.fastq.gz > Combined_R1_file.fastq.gz\ncat Sample1_R2_file.fastq.gz Sample2_R2_file.fastq.gz Sample3_R2_file.fastq.gz > Combined_R2_file.fastq.gz\ncat Sample1_I1_file.fastq.gz Sample2_I1_file.fastq.gz Sample3_I1_file.fastq.gz > Combined_I1_file.fastq.gz\ncat Sample1_I2_file.fastq.gz Sample2_I2_file.fastq.gz Sample3_I2_file.fastq.gz > Combined_I2_file.fastq.gz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8275421571392888,
      "result": {
        "original_header": "Custom inputs",
        "type": "Text_excerpt",
        "value": "Note that custom inputs do not remove linker or adapter sequences for combinatorial indexng technologies.\nThese must be removed from the Read 1 file before running UniverSC. To request a preset technology\nsetting instead, please submit a feature request on GitHub as described below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9765581855705672,
      "result": {
        "original_header": "Release",
        "type": "Text_excerpt",
        "value": "We have tested it on several technologies but we need users like you\nto let us know how we can improve it. We hope that it will save you\ntime by handing tedious parts of data formatting so that you can\nfocus on the results.\n \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9389079673534895,
      "result": {
        "original_header": "Licensing <span id=\"Licensing\"><span>",
        "type": "Text_excerpt",
        "value": "This package is provided open-source on a GPL-3 license. This means that you are free to use and \nmodify this code provided that they also contain this license. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/minoda-lab/universc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cell-barcode, cell-ranger, docker-image, riken-center, single-cell-rna-seq"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    UniverSC\n    Copyright (C) 2019  Tom Kelly; Kai Battenberg \n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    UniverSC  Copyright (C) 2019  Tom Kelly; Kai Battenberg\n\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `cat LICENSE'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `cat LICENSE' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://hits.dwyl.com/minoda-lab/universc.svg"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "universc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "minoda-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 277810,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 42148,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 20889,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3027,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2955,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.txt"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2024-02-07T05:01:24Z",
        "date_published": "2024-02-06T09:41:14Z",
        "description": "# 1.2.7\r\n\r\n6 February, 2024\r\n\r\n- updates STRT-Seq to default to passing (undocumented) SC5P-R1 chemistry inputs to Cell Ranger (resolves issues #12 and #16)\r\n- enables SC5P-R1 chemistry to run without read2 arguments\r\n- adds custom parameters (STRT-Seq-2018 technology) for Fan et al., (2018) https://doi.org/10.1038/s41422-018-0053-3\r\n- adds PIP-Seq parameters for Delley et al., (2021) for V0, Clark et al., (2023) for V1 or V2, and FluentBio PIP-Seq V3 or V4\r\n- adds VASA-Seq parameters for VASA-drop and VASA-plate\r\n\r\nTo do: feature request for Singleron GEXSCOPE v2 (CellScope), known bug in BD Rhapsody v1\r\n \r\n **Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.6...1.2.7",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.7",
        "name": "UniverSC Version 1.2.7",
        "release_id": 140053727,
        "tag": "1.2.7",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/140053727",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/140053727",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2023-05-25T05:24:08Z",
        "date_published": "2023-05-25T05:35:01Z",
        "description": "#### 1.2.6\r\n25 May, 2023\r\n\r\n- updates BD Rhapsody to support v2 enhanced beads released in 2022 (#13 #14 #15)\r\n- resolves minor bugs in BD Rhapsody #15 1\r\n\r\n#### 1.2.5.2 \r\n10 March, 2023\r\n\r\n- updates to SLiPT-Seq subroutine to correct removing quality scores from adapter sequence (#10)\r\n- updates SLiPT-Seq barcode whitelist to allow reverse-complement in R2 and trims UMI from 8 to 10 bp\r\n- allow mismatches to remove linker sequences for SLiPT-Seq v1 or v2.1 and allow reverse complement in R2 (for NextSeq, NovaSeq v1.5, etc)\r\n- pass command-line arguments to configure cell ranger\r\n- correct generating combinatorial whitelists for well-based techniques\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.5.1...1.2.6",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.6",
        "name": "UniverSC Version 1.2.6",
        "release_id": 104206540,
        "tag": "1.2.6",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/104206540",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/104206540",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2023-05-25T02:20:14Z",
        "date_published": "2024-02-06T09:42:35Z",
        "description": "**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.5.1...1.2.5.2",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.5.2",
        "name": "UniverSC Version 1.2.5.2",
        "release_id": 140053919,
        "tag": "1.2.5.2",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/140053919",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/140053919",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2023-01-18T11:41:25Z",
        "date_published": "2023-01-18T08:12:04Z",
        "description": "18 January, 2023\r\n\r\n#### 1.2.5.1\r\n- update documentation for minor version\r\n\r\n minor patch to partially revert potentially breaking changes in v1.2.5 when running perl instead of sed\r\n\r\n- updates PATH environment variable to call /universc/launch_universc.sh from any working directory\r\n\r\n**Patch Changelog**: https://github.com/minoda-lab/universc/compare/1.2.5...1.2.5.1\r\n\r\n#### 1.2.5\r\n- enables double or triple digit lane numbers (suppports 16 lane NovaSeq X series\r\nscheduled for launch in Q1 2023, expected to be compatible with older models and\r\nBGI or Ultima high throughput sequencing platforms)\r\n\r\n- migrates sed calls to perl for better memory-efficiency on large input files\r\n\r\n- set default user as \"root\" in docker containers and ensure that cellranger is writeable\r\n  to allow running in nextflow or singularity (https://github.com/nf-core/modules/pull/1706)\r\n\r\n**Release Changelog**: https://github.com/minoda-lab/universc/compare/1.2.4...1.2.5\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.4...1.2.5.1",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.5.1",
        "name": "UniverSC Version 1.2.5.1",
        "release_id": 89356908,
        "tag": "1.2.5.1",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/89356908",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/89356908",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2023-01-18T08:04:50Z",
        "date_published": "2023-01-18T12:01:38Z",
        "description": "18 January, 2023\r\n\r\n- enables double or triple digit lane numbers (suppports 16 lane NovaSeq X series\r\nscheduled for launch in Q1 2023, expected to be compatible with older models and\r\nBGI or Ultima high throughput sequencing platforms)\r\n\r\n- migrates sed calls to perl for better memory-efficiency on large input files\r\n\r\n- set default user as \"root\" in docker containers and ensure that cellranger is writeable\r\n  to allow running in nextflow or singularity (https://github.com/nf-core/modules/pull/1706)\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.4...1.2.5",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.5",
        "name": "UniverSC Version 1.2.5",
        "release_id": 89389891,
        "tag": "1.2.5",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/89389891",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/89389891",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2022-10-17T00:52:25Z",
        "date_published": "2022-10-17T00:57:51Z",
        "description": "17 September 2022\r\n\r\n- enables unit testing via nextflow for nf-core module\r\n\r\n- removes forced \"auto\" chemistry for 10x technology (allows setting for test fies too small for automated detection)\r\n\r\n- sets default values for last call parameters to 10x technology if not found (allows runs without errors on 1st call)\r\n\r\n- enables computing RNA offset parameters without warning messages (supports containerised workflows) \r\n\r\n- resolved singularity permissions issue by running container as root user #2 \r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.3...1.2.4",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.4",
        "name": "UniverSC Version 1.2.4",
        "release_id": 80032254,
        "tag": "1.2.4",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/80032254",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/80032254",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2022-05-30T03:38:52Z",
        "date_published": "2022-05-30T03:45:23Z",
        "description": "30 May 2022\r\n\r\n- enables GitHub citation widget (https://citation-file-format.github.io/)\r\n\r\n- updates SmartSeq2 and SmartSeq3 default barcodes \r\n\r\n- updates SmartSeq2 adapter sequences and documents chemistry configurations\r\n\r\n- enables running Slurm scheduler with automatic template configuration\r\n\r\n- correctly sets the source directory to call subroutines and whitelists on Slurm (https://stackoverflow.com/questions/56962129/how-to-get-original-location-of-script-used-for-slurm-job)\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.2...1.2.3",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.3",
        "name": "UniverSC Version 1.2.3",
        "release_id": 68112112,
        "tag": "1.2.3",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/68112112",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/68112112",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2022-05-23T07:15:00Z",
        "date_published": "2022-05-30T03:42:50Z",
        "description": "23 May 2022\r\n\r\n- bug fixes for detecting I1 and I2 files\r\n\r\n- updates smartseq2 parameters for optional full-length or 5' end alignment (non-UMI read counts)\r\n\r\n- document full-length chemistry parameters\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.1...1.2.2",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.2",
        "name": "UniverSC Version 1.2.2",
        "release_id": 68112049,
        "tag": "1.2.2",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/68112049",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/68112049",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2022-02-14T14:05:18Z",
        "date_published": "2022-02-14T14:08:23Z",
        "description": "14 February 2022\r\n\r\n- bug fixes for R3 and R4 ffile inputs\r\n\r\n- bug fixes for compressed fastq.gz in I1 and I2\r\n\r\n- corrected whitelist for smartseq test job\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.2.0...1.2.1",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.1",
        "name": "UniverSC Version 1.2.1",
        "release_id": 59514160,
        "tag": "1.2.1",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/59514160",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/59514160",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2022-01-26T02:44:12Z",
        "date_published": "2022-01-26T07:16:28Z",
        "description": "26 January 2022\r\n\r\n- backend to fully functional GUI app\r\n\r\n- updates to support 10x 3` scRNA version 1\r\n\r\n- updates test jobs and test data for SmartSeq3\r\n\r\n- automated file detection for R3 and R4 read files\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.1.7...1.2.0",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.2.0",
        "name": "UniverSC Version 1.2.0",
        "release_id": 57986388,
        "tag": "1.2.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/57986388",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/57986388",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-11-12T10:36:16Z",
        "date_published": "2021-11-12T11:23:58Z",
        "description": "12 November 2021\r\n\r\n- uses reverse complement barcode whitelist for inDrops v1 and v2 (automatically generated)\r\n\r\n- updated matching to remove adapter sequence between barcodes tested locally\r\n\r\n- updates to support legacy versions (v1 and v2) of inDrops protocol\r\n\r\n- documents GUI application\r\n\r\n- documents pre-generated references\r\n\r\n- updates large files in Docker image\r\n\r\n**Full Changelog**: https://github.com/minoda-lab/universc/compare/1.1.6...1.1.7",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.7",
        "name": "UniverSC Version 1.1.7",
        "release_id": 53235167,
        "tag": "1.1.7",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/53235167",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/53235167",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-09-26T09:50:36Z",
        "date_published": "2021-09-26T09:54:35Z",
        "description": "26 September 2021\r\n\r\n- update building STAR in Docker containers\r\n\r\n- updates to syntax in script and subroutines\r\n\r\n- bug fixes to allow running without --verbose parameters\r\n\r\n- minor updates to documentation for added technologies\r\n\r\nGraphical applications (GUI-based UniverSC) are provided as binaries.",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.6",
        "name": "UniverSC Version 1.1.6",
        "release_id": 50268577,
        "tag": "1.1.6",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/50268577",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/50268577",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-09-02T02:26:47Z",
        "date_published": "2021-09-02T02:41:21Z",
        "description": "2 September, 2021\r\n\r\n- add subroutine to support custom references\r\n\r\n- update Docker build parameters\r\n\r\n- supports application with graphical user interface",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.5",
        "name": "UniverSC Version 1.1.5",
        "release_id": 48859043,
        "tag": "1.1.5",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/48859043",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/48859043",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-07-30T07:33:00Z",
        "date_published": "2021-09-02T02:40:36Z",
        "description": "30 July, 2021\r\n\r\n- add test data for Smart-Seq3\r\n\r\n- update handing chemistry in set up\r\n\r\n- correct STAR in docker container",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.4",
        "name": "UniverSC Version 1.1,4",
        "release_id": 48859016,
        "tag": "1.1.4",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/48859016",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/48859016",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-06-29T07:36:28Z",
        "date_published": "2021-06-29T07:38:46Z",
        "description": "29 June, 2021\r\n\r\n- update paths for compatibility with Red Hat Linux (Fedora and CentOS)\r\n\r\n- bug fixes for subroutines (SmartSeq3 processing)\r\n\r\n- bug fixes for arithmetic operations\r\n\r\n- updated documentation",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.3",
        "name": "UniverSC Version 1.1.3",
        "release_id": 45403397,
        "tag": "1.1.3",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/45403397",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/45403397",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-06-01T08:07:27Z",
        "date_published": "2021-06-01T04:17:59Z",
        "description": "1 June, 2021\r\n\r\n- bug fixes for aligent parameters\r\n\r\n- update paths to call subroutines",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.2",
        "name": "UniverSC Version 1.1.2",
        "release_id": 43882803,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/43882803",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/43882803",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-05-20T06:47:22Z",
        "date_published": "2021-05-20T07:00:48Z",
        "description": "20 May, 2021\r\n\r\n- update paths in documentation\r\n\r\n- bug fixes for 10x per cell data for auto chemistry\r\n\r\n- bug fixes for custom technology input without exiting setup\r\n\r\n- bug fixes for short barcode whitelist with low fraction of reads",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.1",
        "name": "UniverSC Version 1.1.1",
        "release_id": 43266307,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/43266307",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/43266307",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-05-12T01:34:52Z",
        "date_published": "2021-05-12T01:44:32Z",
        "description": "12 May, 2021\r\n\r\n- add support for new technologies:\r\n  -  5\u2032 scRNA technologies (e.g., Smart-Seq3, ICELL8 5\u2032 , STRT-Seq)\r\n  -  full support for combinatorial indexing (e.g., BD Rhapsody, Microwell-Seq, SCI-RNA-Seq, SPLiT-Seq, SureCell/ddSEQ)\r\n  -  full support for dual indexes (e.g., Fluidigm C1, ICELL8 full-length, inDrops v3, SCI-RNA-Seq, Smart-Seq3)\r\n  -  non-UMI technologies (e.g., ICELL8-v2, Quartz-Seq, RamDA-Seq, Smart-Seq2, STRT-Seq)\r\n\r\n- add support for barcodes longer than 16 bp\r\n\r\n- compatilibility with counting reads for non-UMI technologies\r\n  - generates a mock UMI for non-UMI technologies\r\n  - implements an option to replace UMI with mock UMI to force counting reads only\r\n\r\n- support custom whitelists from mixed samples with a low fraction of reads\r\n\r\n- update test cases for renaming files and compressed inputs\r\n\r\n- bug fixes for computing summary statistics\r\n\r\n- addresses peer-review comments",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.1.0",
        "name": "UniverSC Version 1.1.0",
        "release_id": 42809471,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/42809471",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/42809471",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-02-03T01:55:20Z",
        "date_published": "2021-02-03T09:04:10Z",
        "description": "3 February, 2021\r\n\r\n- unit tests for inDrops v3, SCI-Seq, Smart-Seq3\r\n\r\n- implements support for full-length scRNA and dual indexes\r\n\r\n- improved handling of input files and automated file detection\r\n\r\n- automated testing with GitHub Actions\r\n\r\n- version for submission to peer-review",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.3",
        "name": "UniverSC Version 1.0.3",
        "release_id": 37282797,
        "tag": "1.0.3",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/37282797",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/37282797",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-01-21T08:48:07Z",
        "date_published": "2021-02-03T09:03:48Z",
        "description": "21 January, 2021\r\n\r\n- unit tests for 10x, dropseq, and icell8\r\n\r\n- renaming tool and script\r\n\r\n- version for public release",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.2",
        "name": "UniverSC Version 1.0.2",
        "release_id": 37282780,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/37282780",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/37282780",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-01-21T08:48:07Z",
        "date_published": "2021-01-21T09:15:55Z",
        "description": "All tests pass locally but minor updates may be necessary to pass automated tests on docker",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.2-beta",
        "release_id": 36701130,
        "tag": "1.0.2-beta",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.2-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701130",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701130",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.2-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2021-01-20T02:33:17Z",
        "date_published": "2021-01-21T09:15:02Z",
        "description": "Preview of UniverSC. This release is still being tested to ensure new features haven't affected existing functionality.",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.2-alpha",
        "release_id": 36701081,
        "tag": "1.0.2-alpha",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.2-alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701081",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701081",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.2-alpha"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2020-07-12T02:46:09Z",
        "date_published": "2021-01-21T09:17:45Z",
        "description": "12 July, 2020\r\n\r\n- improved set up call to handle restoring cloupe files for 10x\r\n\r\n- support for index files for testing 10x\r\n\r\n- checking for dual index files for inDrops-v3, SmartSeq3 and Sci-Seq\r\n\r\n- adds whitelists for SmartSeq3 and MARS-Seq-2.0\r\n",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.1",
        "name": "UniverSC Version 1.0.1",
        "release_id": 36701215,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701215",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701215",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2020-05-14T02:38:17Z",
        "date_published": "2021-01-21T09:17:08Z",
        "description": "14 May, 2020\r\n\r\n- full documentation of all features\r\n\r\n- scripts for installation\r\n\r\n- bundle as docker with cellranger for install (w.i.p.)\r\n\r\n- configure automated tested for GitLab or Travis CI\r\n\r\n- support for additional technologies (16 presets)\r\n\r\n- barcodes restored in output\r\n\r\n- trimming script bundled",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/1.0.0",
        "name": "UniverSC Version 1.0.0",
        "release_id": 36701185,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701185",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701185",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2020-02-13T10:16:23Z",
        "date_published": "2021-01-21T09:20:03Z",
        "description": "13 Feb, 2020\r\n\r\n- custom whitelists for other technologies\r\n\r\n- configure custom input technology\r\n\r\n- test data for checking technologies (10x, DropSeq)",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/0.3.0",
        "name": "UniverSC Version 0.3.0",
        "release_id": 36701306,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701306",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701306",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2019-12-24T05:36:00Z",
        "date_published": "2021-01-21T09:21:20Z",
        "description": "24 Dec, 2019\r\n\r\n- allow passing custom barcode whitelists (can only run in serial)",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/0.2.2",
        "name": "UniverSC Version 0.2.2",
        "release_id": 36701350,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/36701350",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/36701350",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2019-12-24T05:30:46Z",
        "date_published": "2021-05-20T07:04:56Z",
        "description": "12 Nov, 2019\r\n\r\n- automatically locate script directory\r\n\r\n-  implement lock file to prevent multi technologies running\r\n\r\n- track which last technology ran",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/0.2.1",
        "name": "UniverSC Version 0.2.1",
        "release_id": 43266592,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/43266592",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/43266592",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2019-07-24T09:21:34Z",
        "date_published": "2021-05-20T07:03:49Z",
        "description": "24 July, 2019 \r\n\r\n- add support for SGE mode\r\n\r\n- correct passing description arguments to cellranger\r\n\r\n- separate whitelist setup for Nadia and iCELL8\r\n\r\n- configure cellranger version 3 whitelists\r\n\r\n= add defaults\r\n\r\n- detect lane and file names\r\n\r\n- create directory for converted R1sq\r\n",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/0.2.0",
        "name": "UniverSC Version 0.2.0",
        "release_id": 43266541,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/43266541",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/43266541",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "TomKellyGenetics",
          "type": "User"
        },
        "date_created": "2019-07-22T07:30:14Z",
        "date_published": "2021-05-20T07:02:02Z",
        "description": "22 July, 2019 \r\n\r\n- pass arguments to script\r\n\r\n- add set up call to configure whitelist when needed\r\n\r\n- includes a manual and version call\r\n\r\n= detects input file\r\n\r\n- converts files if technology other than 10x",
        "html_url": "https://github.com/minoda-lab/universc/releases/tag/0.1.0",
        "name": "UniverSC Version 0.1.0",
        "release_id": 43266397,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/minoda-lab/universc/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/minoda-lab/universc/releases/43266397",
        "value": "https://api.github.com/repos/minoda-lab/universc/releases/43266397",
        "zipball_url": "https://api.github.com/repos/minoda-lab/universc/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirements",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "In principle, the script can run on any Unix systems with Cell Ranger installed. You can check whether\nCell Ranger is already availble by running:\n\n```\nwhereis cellranger\n```\n\nYou can see which Cell Ranger installation will run as follows:\n\n```\nwhich cellranger\ncellranger count --version\n```\n\nIf Cell Ranger is already installed on your system, you can add it to your $PATH as follows:\n\n```\nexport PATH=/home/username/path/to/cellranger-x.x.x:$PATH    \n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing dependencies",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "If Cell Ranger is not installed on your system, you must install it before running launch_universc.sh.\n\nPlease see the [manual for Cell Ranger](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/what-is-cell-ranger)\non the 10x Genomics website for more details on how to use it. We provide support for\npassing various options to Cell Ranger and sensible defaults for each technology.\n\nThis script is compatible with the installation of Cell Ranger that you can\n[download](https://support.10xgenomics.com/single-cell-gene-expression/software/downloads/latest)\nfrom the 10x Genomics website and gives the same output formats.\n\nHowever, we recommend to use the open-source release of Cell Ranger on GitHub. This is\nrelease on an MIT License and is not subject to the 10x Genomics End User\nLicense Agreement.\n\nWe provide open-source repositories with minor updates for compatibility\nwith current versions of dependencies.\n\nThe code is available here:\n\n[https://github.com/minoda-lab/cellranger/releases](https://github.com/minoda-lab/cellranger/releases)\n\nWe also provide Docker images for Cell Ranger versions 2.0.2, 2.1.0, 2.1.1, and 3.0.2:\n\n[https://github.com/minoda-lab/cellranger_clean/packages](https://github.com/minoda-lab/cellranger_clean/packages)\n\n[https://hub.docker.com/r/tomkellygenetics/cellranger_clean/tags](https://hub.docker.com/r/tomkellygenetics/cellranger_clean/tags)\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Software Requirements",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "These have been pre-installed in the Docker image described above.\n\nA full example of installation is available in the [GitHub repository](https://github.com/minoda-lab/cellranger)\nand on [DockerHub](https://hub.docker.com/r/tomkellygenetics/cellranger_clean/dockerfile).\n\n- Python 2.7.13\n- rust 1.28.0\n- clang 6.0\n- go 1.11\n- node 8.11.4\n- Cython 0.28.0\n- STAR 2.5.1b\n- bcl2fastq 2.19.1.403\n- tsne 0.15\n\nThe following additional shell utilities are required. Mac OS and\nmost Linux distributions come with these pre-installed.\n\n- make 3.81\n- git 2.20.1 \n- sed (GNU sed) 4.4 (gsed)\n- tar  2.8.3\n- rename 0.20 (perl-rename)\n- perl 5.26.1\n- rsync 2.6.9 \n\nNote that rename is installed by default on Mac, Ubuntu and Debian\nbut a different version must be used on other Linux distrubutions.\n\nCentOS and Fedora:\n\n```\nsudo yum install prename\n```\n```\nsudo dnf install prename\n```\n\nRed Hat Linux:\n\n```\nsudo rpm install prename\n```\n\nArch Linux:\n\n```\nyay perl-rename\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommended software",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Software Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- git-lfs 2.10.0\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hardware requirements",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- 8-core Intel or AMD processor (16 cores recommended)\n- 64GB RAM (128GB recommended)\n- 1TB free disk space\n- 64-bit CentOS/RedHat 6.0 or Ubuntu 12.04\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ensuring write-access to Cell Ranger",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "The conversion process requires write-access to to the Cell Ranger install directory so\nan install on your user directory is recommended. \n\nYou can check where Cell Ranger is installed with:\n\n```\nwhich cellranger\n```\n\nIf calling the script gives the help menu, launch_universc.sh has sucessfully run\nwith access to the directories that it needs. It will give an error\nmessage if the Cell Ranger directory is not writeable.\n\n```\nbash launch_universc.sh\n```\n\nThis script requires Cell Ranger (version 3.0.0 or higher recommended) to be installed and have write-access\nto the Cell Ranger install directory, so an install on your user directory is recommended.\nThis script also requires Cell Ranger to be exported to the PATH.\nThe script itself is exectuable and does not require installation to run but you can put it\nin your PATH or bin of your Cell Ranger install if you wish to do so.\n\nThis script will run in bash on any OS (but it has only been tested on Linux Debian). Running Cell Ranger \nwith this configuration requires a lot of memory (40Gb) so running on server is recommended.\nSGE job modes are supported to run Cell Ranger with multiple threads.\n\nThis is required because launch_universc.sh will make changes to the Cell Ranger install\nto ensure compatibility with the technology running. A local install in\nyou user home directory is needed to make these changes. This ensures\nthat these changes do not affect jobs run by other users and allows\nlaunch_universc.sh to change the whitelist and source code as needed.\n\nThese changes are reversible but mean that only one technology can be\nrun at the same time. You can restore original configurations with:\n\n```\nbash launch_universc.sh -t \"10x\" --setup\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Automated configuration",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "We provide a Makefile with all necessary configurations to automatically\ncheck whether launch_universc.sh is installed correctly.\n\nYou can specify any directory to install as a \"prefix\". This will\ncreate a directory \"$HOME/local/universc-0.3\" where\nthe files needed will be stored.\n\n```\ncd $HOME/Downloads\ngit clone https://github.com/minoda-lab/universc.git\nmake\nmake install prefix=$HOME/local\n```\n\nIt is also possible to add the current working directory as \nthe installed directory.\n\n```\nmake install prefix=\".\"\n```\n\nIn this case *do not* delete the installed directory after you\ninstall it or the script will fail to run.\n\nBy default it will be installed in a root directory with\nread-only access. This requires administrator priviledges.\nNote that the manual can onlly be installed with root\npriviledges.\n\n```\nsudo make install\nsudo make manual\n```\n\nYou can verify that launch_universc.sh has been added to the PATH.\n\n```\necho $PATH\nwhich launch_universc.sh\n```\n\nYou can then run `launch_universc.sh` from any working directory.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Updating",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "If launch_universc.sh is already installed and you wish to update it,\nfirst you need to pull the changes from GitHub from the\nuniversc directory.\n\n```\ncd universc\ngit pull origin master\nmake\n```\n\nThen you can update to the directory of your choice using\nthe same options for `--prefix` as to install.\n\n```\nmake install prefix=$HOME/local\n```\n\nThis is remove previous versions of launch_universc.sh and install\nthe latest version.\n\nThe manual can be updated with:\n\n```\nsudo make manual\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Uninstalling",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "Before uninstalling UniverSC please ensure that any\nversions of Cell Ranger used are restored to their default configuration:\n\n```\nexport PATH=/Users/tom/Downloads/cellranger-x.y.z:$PATH\nbash launch_universc.sh -t \"10x\" --setup\n```\n\nWe provide an automated script to reverse the changes above.\n\n```\nmake uninstall\n```\n\nThis is will automatically detect the installation of launch_universc.sh.\n\nIf multiple versions of Cell Ranger are present, you can\nspecify which to remove with.\n\n```\nmake remove prefix=$HOME/local\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom shell",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements"
        ],
        "type": "Text_excerpt",
        "value": "Make will install the script with `bash` by default but\nalternative shells are supported. You will need to run the\ninstall script or run it with your shell of choice.\n\n```\nsh launch_universc.sh\nsh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nksh launch_universc.sh\nksh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nzsh launch_universc.sh\nzsh inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\n```\nfish launch_universc.sh\nfish inst/INSTALL --prefix $HOME/local\nlaunch_universc.sh\n```\n\nThe help menu should reflect the shell used to run it.\n\nTo update, similarly run the `inst/UPGRADE` script with\nyour chosen shell.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the script",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "System Requirements",
          "Installing launch_universc.sh to the PATH"
        ],
        "type": "Text_excerpt",
        "value": "Adding the script to the PATH is not absolutely neccessary, it can\nbe called as follows from the directory that it is downloaded in.\n\n```\ncd $HOME/Downloads\ngit clone https://github.com/minoda-lab/universc.git\ncd universc\nbash launch_universc.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running processes in a docker container",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Docker image <span id=\"Docker\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "Then you can run UniverSC with:\n\n```\ndocker run -it tomkellygenetics/universc:latest launch_universc.sh\n```\n\nYou can open a shell in the docker image with:\n\n```\ndocker run -it tomkellygenetics/universc:latest /bin/bash\n```\n\n```\ndocker run -it tomkellygenetics/universc:latest /bin/zsh \n```\n\nEither of these shells are supported.\n\nNote that Docker containers run with a default of 2 GB of memory.\nIt is recommended to use at least 8 GB of memory as this is often\ninsufficient for running UniverSC. Ideally, 16 GB of memory should\nbe used if it is available on your system.\n\n ```\ndocker run --memory 16g -it tomkellygenetics/universc:latest /bin/bash\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building the Docker image locally",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>",
          "Docker image <span id=\"Docker\"><span>",
          "Running processes in a docker container"
        ],
        "type": "Text_excerpt",
        "value": "The Dockerfile is provided in the repository so it can be built from\nsource. This will build a Docker image with the latest version of\nuniversc provided that updates to dependencies on GitHub\nare still compatible.\n\n```\ngit clone https://github.com/minoda-lab/universc.git\ndocker build -t universc:latest .  \n```\n\nPlease bear mind that it can take considerable time to install\nall necessary dependencies. A stable internet connection is required.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running Cell Ranger",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Examples <span id=\"Examples\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "```\ncellranger testrun --id=\"tiny-test\"\n```\n```\n# open gzip files from test data\ngunzip -fk universc/test/shared/cellranger-tiny-fastq/3.0.0/*fastq.gz\ngunzip -fk cellranger-3.0.2.9001/cellranger-cs/3.0.2.9001/lib/python/cellranger/barcodes/3M-february-2018.txt.gz \n# Cell Ranger call\ncellranger count --id=\"tiny-count-v3\" \\\n --fastqs=\"cellranger-3.0.2.9001/cellranger-tiny-fastq/3.0.0/\" --sample=\"tinygex\" \\\n --transcriptome=\"cellranger-3.0.2.9001/cellranger-tiny-ref/3.0.0\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running launch_universc.sh on 10x data",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Examples <span id=\"Examples\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "```\n# call UniverSC on 10x with multiple lanes\nbash /universc/launch_universc.sh --id \"test-10x-v3\" --technology \"10x\" \\\n --reference \"/universc/test/cellranger_reference/cellranger-tiny-ref/3.0.0\" \\\n --file \"/universc/test/shared/cellranger-tiny-fastq/3.0.0/tinygex_S1_L001\" \\\n \"/universc/test/shared/cellranger-tiny-fastq/3.0.0/tinygex_S1_L002\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running launch_universc.sh on DropSeq data",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Examples <span id=\"Examples\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "Obtain DropSeq data from public database:\n\n```\nwget https://www.ncbi.nlm.nih.gov/geo/download/\\?acc\\=GSM1629193\\&format\\=file\\&file\\=GSM1629193%5FPure%5FHumanMouse%2Ebam\nmv index.html\\?acc=GSM1629193\\&format=file\\&file=GSM1629193%5FPure%5FHumanMouse%2Ebam GSM1629192.bam\nsamtools sort -n GSM1629192.bam > GSM1629192.qsort\nsamtools view  GSM1629192.qsort  HUMAN_21:9825832-48085036 > GSM1629192.qsort2\nsamtools sort -O BAM GSM1629192.bam > GSM1629192.sort.bam\nsamtools index GSM1629192.sort.bam\nsamtools view  GSM1629192.sort.bam  HUMAN_21:9825832-48085036 > GSM1629192.chr21.bam\nsamtools view -O BAM  GSM1629192.sort.bam  HUMAN_21:9825832-48085036 > GSM1629192.chr21.sort.bam\nsamtools sort -n GSM1629192.chr21.sort.bam -o GSM1629192.chr21.qsort.bam\nbedtools bamtofastq -i GSM1629192.chr21.qsort.bam -fq GSM1629193_chr21_R1.fastq\nmv GSM1629193_chr21_R1.fastq GSM1629193_chr21_R2.fastq\nfastq-dump -F --split-files SRR1873277\nfastq_pair GSM1629193_chr21_R2.fastq SRR1873277_1.fastq\nhead -n 117060 SRR1873277_1.fastq.paired.fq 117060 > SRR1873277_1.fastq.paired.fq\nhead -n 117060 GSM1629193_chr21_R2.fastq.paired.fq > GSM1629193_chr21_R2.fastq.paired.fq\ncp SRR1873277_1.fastq.paired.fq  GSM1629193_chr21_R2.fastq.paired.fq ~/repos/universc/test/shared/dropseq-test\ncp SRR1873277_1.fastq.paired.fq  GSM1629193_chr21_R2.fastq.paired.fq ~/repos/universc/test/shared/dropseq-test\nmv SRR1873277_1.fastq.paired.fq SRR1873277_R1.fastq\nmv GSM1629193_chr21_R2.fastq.paired.fq  universc/test/shared/dropseq-test/SRR1873277_R2.fastq\nmv GSM1629193_chr21_R2.fastq.paired.fq  universc/test/shared/dropseq-test/SRR1873277_R2.fastq\n```\n\nRun UniverSC:\n\n```\nbash universc/launch_universc.sh -t \"DropSeq\" --setup\n# call on dropseq with files\nbash universc/launch_universc.sh --id \"test-dropseq\" --technology \"nadia\" \\\n --reference \"universc/test/cellranger_reference/cellranger-tiny-ref/3.0.0\" \\\n --read1 \"universc/test/shared/dropseq-test/SRR1873277_S1_L001_R1_001\" \\\n --read2 \"universc/test/shared/dropseq-test/SRR1873277_S1_L001_R2_001\" \n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running launch_universc.sh on ICELL8 data",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Examples <span id=\"Examples\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "```\n# call on icell8 files with custom whitelist and non-standard file names\nbash launch_universc.sh --setup -t \"icell8\"  --barcodefile \"test/shared/icell8-test/BarcodeList.txt\"\nbash launch_universc.sh --id \"test-icell8-custom\" --technology \"iCell8\" \\\n --reference \"test/cellranger_reference/cellranger-tiny-ref/3.0.0\" \\\n --read1 \"test/shared/icell8-test/iCELL8_01_S1_L001_R1_001.fastq\" \"test/shared/icell8-test/iCELL8_01_S1_L002_R1_001.fastq\" \\\n --read2 \"test/shared/icell8-test/iCELL8_01_S1_L001_R2_001.fastq\" \"test/shared/icell8-test/iCELL8_01_S1_L002_R2_001.fastq\" \\\n --barcodefile \"test/shared/icell8-test/BarcodeList.txt\" \\\n --jobmode \"sge\"\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:04:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 42
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support for UMI-based and non-UMI technologies",
        "parent_header": [
          "UniverSC",
          "Purpose",
          "Supported Technologies"
        ],
        "type": "Text_excerpt",
        "value": "By default, UMIs are supported where available so with the following\nexceptions for non-UMI technologies:\nICELL8 v2, RamDA-Seq, Quartz-Seq, Smart-Seq, Smart-Seq2.\nWhile using UMI is recommended we provide a mock UMI for counting\nreads for these technologies (and data from previous versions).\n\nOther techniques can be forced to replace the UMI with a mock sequence\nfor counting reads only with `--non-umi` or `--read-only` arguments.\nForcing non-UMI techniques is _not recommended_ unless you are \nintegrating non-UMI and UMI-based technologies. It is not necessary\nto specific `--non-umi` for non-UMI techniques as these will be used\nautomatically when applicable. For ICELL8 and Smart-Seq where both\nnon-UMI (icell8-v2, smartseq2) and UMI-based (icell8-v3, smartseq3)\ntechniques are available it is possible to specify which to use.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reporting issues",
        "parent_header": [
          "UniverSC",
          "Release",
          "Bug Reports <span id=\"Issues\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "To add further support for other technologies or troubleshoot problems, please submit an Issue \nto the GitHub repository: https://github.com/minoda-lab/universc/issues\n\nPlease submit [issues](https://github.com/minoda-lab/universc/issues) on GitHub to report\nproblems or suggest features. [Pull requests](https://github.com/minoda-lab/universc/pulls)\nto the `dev` branch on GitHub are also welcome to add features or correct problems. Please see\nthe [contributor guide](CONTRIBUTING.md) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Help menu",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "You can access the following help menu with `launch_universc.sh --help` in the terminal.\n\n```\nUsage:\n  bash launch_universc.sh --testrun -t THECHNOLOGY\n  bash launch_universc.sh -t TECHNOLOGY --setup\n  bash launch_universc.sh -R1 FILE1 -R2 FILE2 -t TECHNOLOGY -i ID -r REFERENCE [--option OPT]\n  bash launch_universc.sh -R1 READ1_LANE1 READ1_LANE2 -R2 READ2_LANE1 READ2_LANE2 -t TECHNOLOGY -i ID -r REFERENCE [--option OPT]\n  bash launch_universc.sh -f SAMPLE_LANE -t TECHNOLOGY -i ID -r REFERENCE [--option OPT]\n  bash launch_universc.sh -f SAMPLE_LANE1 SAMPLE_LANE2 -t TECHNOLOGY -i ID -r REFERENCE [--option OPT]\n  bash launch_universc.sh -v\n  bash launch_universc.sh -h\n\nConvert sequencing data (FASTQ) from Nadia or ICELL8 platforms for compatibility with 10x Genomics and run cellranger count\n\nMandatory arguments to long options are mandatory for short options too.\n       --testrun                Initiates a test trun with the test dataset\n  -R1, --read1 FILE             Read 1 FASTQ file to pass to Cell Ranger (cell barcodes and umi)\n  -R2, --read2 FILE             Read 2 FASTQ file to pass to Cell Ranger\n  -I1, --index1 FILE            Index (I1) FASTQ file to pass to Cell Ranger (OPTIONAL)\n  -I2, --index2 FILE            Index (I2) FASTQ file to pass to Cell Ranger (OPTIONAL and EXPERIMENTAL)\n  -f,  --file NAME              Path and the name of FASTQ files to pass to Cell Ranger (prefix before R1 or R2)\n                                  e.g. /path/to/files/Example_S1_L001\n\n  -i,  --id ID                  A unique run id, used to name output folder\n  -d,  --description TEXT       Sample description to embed in output files.\n  -r,  --reference DIR          Path of directory containing 10x-compatible reference.\n  -t,  --technology PLATFORM    Name of technology used to generate data.\n                                Supported technologies:\n                                  10x Genomics (version 2 or 3 automatically detected): 10x, chromium\n                                  10x Genomics version 1 (14 bp barcode, 10 bp UMI): 10x-v1, chromium-v1\n                                  10x Genomics version 2 (16 bp barcode, 10 bp UMI): 10x-v2, chromium-v2\n                                  10x Genomics version 3 (16 bp barcode, 12 bp UMI): 10x-v3, chromium-v3\n                                  Aligent Bravo B (16 bp barcode, No UMI): aligent, bravo\n                                  BD Rhapsody v1 (27 bp barcode, 8 bp UMI): bd-rhapsody\n                                  BD Rhapsody v2 (27 bp barcode, 8 bp UMI): bd-rhapsody-v2\n                                  C1 Fluidigm (16 bp barcode, No UMI): c1, fluidgm-c1\n                                  C1 CAGE (16 bp, No UMI): c1-cage\n                                  C1 RamDA-Seq (16 bp, No UMI): c1-ramda-seq\n                                  CEL-Seq (8 bp barcode, 4 bp UMI): celseq\n                                  CEL-Seq2 (6 bp UMI, 6 bp barcode): celseq2\n                                  Drop-Seq (12 bp barcode, 8 bp UMI): dropseq\n                                  ICELL8 version 2 (11 bp barcode, No UMI): icell8-non-umi, icell8-v2\n                                  ICELL8 version 3 (11 bp barcode, 14 bp UMI): icell8 or custom\n                                  ICELL8 5\u2032 scRNA with TCR OR kit (10bp barcode, NO bp UMI): icell8-5-prime\n                                  ICELL8 full-length scRNA with Smart-Seq (16 bp barcode, No UMI): icell8-full-length\n                                  inDrops version 1 (19 bp barcode, 6 bp UMI): indrops-v1, 1cellbio-v1\n                                  inDrops version 2 (19 bp barcode, 6 bp UMI): indrops-v2, 1cellbio-v2\n                                  inDrops version 3 (16 bp barcode, 6 bp UMI): indrops-v3, 1cellbio-v3\n                                  Nadia (12 bp barcode, 8 bp UMI): nadia, dropseq\n                                  MARS-Seq (6 bp barcode, 10 bp UMI): marsseq, marsseq-v1\n                                  MARS-Seq2 (7 bp barcode, 8 bp UMI): marsseq2, marsseq-v2   \n                                  Microwell-Seq (18 bp barcode, 6 bp UMI): microwell\n                                  PIP-Seq version 0 (24 bp barcode, 8 bp UMI): pip-seq-v0\n                                  PIP-Seq version 1 (16 bp barcode, 6 bp UMI): pip-seq-v1\n                                  PIP-Seq version 2 (24 bp barcode, 12 bp UMI): pip-seq-v2\n                                  PIP-Seq version 3 (28 bp barcode, 12 bp UMI): pip-seq-v3, fluent-bio-v3\n                                  PIP-Seq version 4 (28 bp barcode, 12 bp UMI): pip-seq-v4, fluent-bio-v4\n                                  QuartzSeq (6 bp index, no UMI): quartz-seq\n                                  Quartz-Seq2 (14 bp barcode, 8 bp UMI): quartzseq2-384\n                                  Quartz-Seq2 (15 bp barcode, 8 bp UMI): quartzseq2-1536\n                                  RamDA-Seq (6 bp index, no UMI): ramda-seq\n                                  SCI-Seq 2-level indexing (30 bp barcode, 8 bp UMI): sciseq2\n                                  SCI-Seq 3-level indexing (40 bp barcode, 8 bp UMI): sciseq3\n                                  SCIFI-Seq (27 bp barcode, 8 bp UMI\n                                  SCRB-Seq (6 bp barcode, 10 bp UMI): scrbseq, mcscrbseq\n                                  SeqWell (12 bp barcode, 8 bp UMI): plexwell, seqwell, seqwells3\n                                  Smart-seq (16 bp barcode, No UMI): smartseq\n                                  Smart-seq2 (16 bp barcode, No UMI): smartseq2\n                                  Smart-seq2-UMI, Smart-seq3 (16 bp barcode, 8 bp UMI): smartseq3\n                                  SPLiT-Seq (10 bp UMI, 24 bp barcode): splitseq\n                                  SPLiT-Seq v2.1 (10 bp UMI, 24 bp barcode): splitseq2\n                                  STRT-Seq (6 bp barcode, no UMI): strt-seq\n                                  STRT-Seq-C1 (8 bp barode, 5 bp UMI): strt-seq-c1\n                                  STRT-Seq-2i (13 bp barcode, 6 bp UMI): strt-seq-2i\n                                  STRT-Seq-2018 (8 bp barcode, 8 bp UMI): strt-seq-2018\n                                  SureCell (18 bp barcode, 8 bp UMI): surecell, ddseq, biorad\n                                  VASA-plate (6 bp UMI, 6 bp barcode): vasa-plate\n                                  VASA-drop (6 bp UMI, 16 bp barcode): vasa-drop\n                                Custom inputs are also supported by giving the name \"custom\" and length of barcode and UMI separated by \"_\"\n                                  e.g. Custom (16 bp barcode, 10 bp UMI): custom_16_10\n\n  -b,  --barcodefile FILE       Custom barcode list in plain text (with each line containing a barcode)\n\n  -c,  --chemistry CHEM         Assay configuration, autodetection is not possible for converted files: SC3Pv2 (default), SC5P-PE, or SC5P-R2\n                                    5\u2032 scRNA-Seq ('SC5P-PE') is available only for 10x Genomics, ICELL8, SmartSeq, and STRT-Seq technologies\n                                    Setting 'SC3Pv1' for 10x version 1 chemistry is recommended.\n                                    All other technologies default to 3\u2032 scRNA-Seq parameters. Only 10x Genomics and ICELL8 allow choosing which to use.\n  -n,  --force-cells NUM        Force pipeline to use this number of cells, bypassing the cell detection algorithm.\n  -j,  --jobmode MODE           Job manager to use. Valid options: local (default), sge, lsf, or a .template file\n       --localcores NUM         Set max cores the pipeline may request at one time.\n                                    Only applies when --jobmode=local.\n       --localmem NUM           Set max GB the pipeline may request at one time.\n                                    Only applies when --jobmode=local.\n       --mempercore NUM         Set max GB each job may use at one time.\n                                    Only applies in cluster jobmodes.\n\n  -p,  --per-cell-data          Generates a file with basic run statistics along with per-cell data\n\n       --non-umi or --read-only Force counting reads by adding or replacing UMI with a mock sequence\n\n       --setup                  Set up whitelists for compatibility with new technology and exit\n       --as-is                  Skips the FASTQ file conversion if the file already exists\n\n  -h,  --help                   Display this help and exit\n  -v,  --version                Output version information and exit\n       --verbose                Print additional outputs for debugging\n\nFor each fastq file, follow the naming convention below:\n  <SampleName>_<SampleNumber>_<LaneNumber>_<ReadNumber>_001.fastq\n  e.g. EXAMPLE_S1_L001_R1_001.fastq\n       Example_S4_L002_R2_001.fastq.gz\n\nFor custom barcode and umi length, follow the format below:\n  custom_<barcode>_<UMI>\n  e.g. custom_16_10 (which is the same as 10x)\n\nFiles will be renamed if they do not follow this format. File extension will be detected automatically.\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced users",
        "parent_header": [
          "UniverSC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "If you have `cellranger` already installed, then all you need to do is clone or download this git repository. You can then run the script in this directory or add it your `PATH`. See the [Quick Start](#quick-start) guide below.\n\nIf you wish to install `cellranger` and configure this script to run on a Linux environment, we provide details on [installation](#installation) below. Note that `launch_universc.sh` requires write-access a Cell Ranger installation so it needs to be installed in a user's \"home\" directory on a server. No admin powers needed!\n\nNote that `cellranger` installations that are pre-compiled on Linux will not run on Mac or Windows. Note that Mac OS and some Linux distributions also have different version of sed and rename. It is possible to compile an open-source version of Cell Ranger but it is tricky to install the dependencies so we recommend using our docker [image](#Docker) if you wish to do this. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command-line Beginners",
        "parent_header": [
          "UniverSC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "If you are a beginner bioinformatician or wish to run this on a local computer (Mac or Windows), no problem! We provide a \"docker\" image containing everything needed to run it without installing the software needed. All you need to do is install [docker](https://docs.docker.com/desktop/) and follow our guide to use the [image](#Docker). This comes bundled with all the compatible versions needed to run it.\n\nNote that you need to run the shell commands given in a unix-like command-line interface (the \"Terminal\" application on Mac or Linux systems). Many shells are supported but we recommend the \"bash\" shell for beginners (this is the default on most systems). Windows 10 includes a [subsystem](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run `bash`. If this is too complicated, you can open a Linux environment (Ubuntu) in docker by following our instructions. Then you can enter bash commands into the terminal opened by docker.\n\nIf you run into problems installing or running `launch_universc.sh` please don't hesistate to contact us via email or GitHub.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Graphical application Users",
        "parent_header": [
          "UniverSC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "We also provide a graphical user interface (GUI) based application to run the Docker [image](#Docker). Please install Docker as described above and pull our `tomkellygenetics/universc:latest` image using either the docker command-line interface (CLI) or the docker graphical application.\n\nOnce you have a docker image installed on your system, you can run the applicable binary available here:\n\n[https://genomec.gsc.riken.jp/gerg/UniverSC/UniverSC_app_release/](https://genomec.gsc.riken.jp/gerg/UniverSC/UniverSC_app_release/)\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Nextflow users",
        "parent_header": [
          "UniverSC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "A [nextflow](https://www.nextflow.io/) custom [module](https://nf-co.re/modules) is has been developed for the [nf-core](https://nf-co.re) community.\nIt will be release open-source to use in nf-core [pipelines](https://nf-co.re/pipelines).\n\nSee the issue and pull request for more details:\n\n[https://github.com/nf-core/modules/issues/1644](https://github.com/nf-core/modules/issues/1644)\n\n[https://github.com/nf-core/modules/pull/1706](https://github.com/nf-core/modules/pull/1706)\n\nWe welcome feedback on these tools. If you are interested in using it or contributing to\ndevelopment of nextflow pipelines, please contact the maintainers. Thank you!\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "UniverSC",
          "Installation <span id=\"installation\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "If you already have Cell Ranger installed, then you can run the script without installing it.\n\n```\nbash launch_universc.sh\n```\n\nYou can call it in another directory by giving the path to the script.\n\n```\ncd $/HOME/my_project\nbash $HOME/Downloads/universc/launch_universc.sh\n```\n\nSee the details below on how to install Cell Ranger and launch_universc.sh add them\nto the PATH so that `launch_universc.sh` can be run from any directory. \n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage <span id=\"Usage\"><span>",
        "parent_header": [
          "UniverSC"
        ],
        "type": "Text_excerpt",
        "value": "The script will:\n\n- give you a help guide\n\n`bash launch_universc.sh -h`\n\n- convert R1 files so that barcodes and UMIs are where they're expected to be for 10x (this can take some time for larger files)\n\n- runs Cell Ranger with the same parameters as for 10x and treats samples exactly the same\n\n- the barcode whitelists are changed and some checks on barcodes disabled (requires a writeable install of Cell Ranger in your user directory)\n\n- it can run Cell Ranger in parallel in SGE mode on the server if you use `--jobmode \"sge\"` and set up an `sge.template` file\n\n- it can also restore the original Cell Ranger settings for running 10x samples\n\n`bash launch_universc.sh --setup --technology \"10x\"`\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Valid barcodes",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "Please note that this script alters the barcode whitelist. Known ICELL8 barcodes are supported but this is not possible with Nadia or DropSeq chemistry so 100% valid barcodes will be returned.\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Automated Configuration",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>",
          "Installing the manual with root priviliges:"
        ],
        "type": "Text_excerpt",
        "value": "We provide an automated script to install the manual.\n\n```\nsudo make manual\n```\n\nYou can remove the manual with:\n\n```\nsudo make manual-clean\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>",
          "Manual <span id=\"Help\"><span>",
          "Installing the manual with root priviliges:"
        ],
        "type": "Text_excerpt",
        "value": "The manual can be installed as follows on Mac and Linux.\n\n```\n# add manual directory to PATH if not already found\n## check config for Linux\nif [[ -f /etc/manpath.config ]]\n    then CONFIG=\"/etc/manpath.config\"\nfi\n## check config for Mac\nif [[ -f /etc/manpaths ]]\n    then CONFIG=\"/etc/manpaths\"\nfi\nif [[ ! -z $CONFIG ]]\n    then MANDIR=`tail -n 1 ${CONFIG}`\nelse if [[ ! -z $MANPATH ]]\n    then\n    SHELL_RC=`echo ~/.${0}rc`\n    echo \"export MANPATH=/usr/local/man\" >> $SHELL_RC\n    MANDIR=`echo ${MANPATH} | cut -d: -f1`\n    fi\nfi\nsudo mkdir -p ${MANDIR}/man1\ncp man/launch_universc.sh man/launch_universc.sh.1\nsudo mv man/launch_universc.sh.1 ${MANDIR}/man1/launch_universc.sh.1\ngzip ${MANDIR}/man1/launch_universc.sh.1\n```\n\nAlternatively the man can be installed with:\n\n```\ncp man/launch_universc.sh man/launch_universc.sh.1\nsudo install -g 0 -o 0 -m 0644 man/launch_universc.sh.1 ${MANDIR}/man1\n```\n\nThe manual can then be called from any directory as follows:\n\n```\nman launch_universc.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Debugging",
        "parent_header": [
          "UniverSC",
          "Usage <span id=\"Usage\"><span>"
        ],
        "type": "Text_excerpt",
        "value": "We've made considerable efforts to ensure you don't run into problems. However, it may be necessary from\ntime to time to troubleshoot issues calling UniverSC. For other technologies, various\nchanges to Cell Ranger are made in a reversible fashion. If you run into problems you can restore\nCell Ranger to default parameters:\n\n```\nbash launch_universc.sh -t \"10x\" --setup\n```\n\nThen you can call `launch_universc.sh` as above or configure Cell Ranger for your technology of choice such as :\n\n```\nbash launch_universc.sh --setup -t \"icell8\"  --barcodefile \"test/shared/icell8-test/BarcodeList.txt\"\n```\n\nSet up calls are particularly useful to set up the whitelist in advance of running multiple\nsamples simultaneously, provided they are the same technology.\n\nIt is also possible that your Cell Ranger installation will be \"locked\" by UniverSC.\nThis is intentional to prevent different technologies running simultaneously. When running\nCell Ranger, we need to ensure that the barcode whitelist corresponds to the technology that\nis running and cannot be changed until existing runs will finish.\n\nHowever, this means that in the case of an error or if a job is \"killed\", then the lock\nfile will not be cleared. You can do this manually as follows:\n\n```\ncellrangerversion=`cellranger count --version | head -n 2 | tail -n 1 | cut -f2 -d'(' | cut -f1 -d')'`\ncellrangerpath=`which cellranger`\nrm ${cellrangerpath}-cs/${cellrangerversion}/lib/python/cellranger/barcodes/.lock\n```\n\nWhen doing this *please ensure that no other instances are running* for UniverSC.\n\nYou can also see the current configuration of UniverSC for each Cell Ranger\ninstall as follows:\n\n```\ncellrangerversion=`cellranger count --version | head -n 2 | tail -n 1 | cut -f2 -d'(' | cut -f1 -d')'`\ncellrangerpath=`which cellranger`\ncat ${cellrangerpath}-cs/${cellrangerversion}/lib/python/cellranger/barcodes/.lastcalled\n```\n\nThese columns show the barcode length, UMI length, and barcode whitelist of the last\ntechnology used by UniverSC. Please *do not remove this file* unless the\nlast technology used is 10x Genomics.\n\n"
      },
      "source": "https://raw.githubusercontent.com/minoda-lab/universc/master/README.html",
      "technique": "header_analysis"
    }
  ]
}