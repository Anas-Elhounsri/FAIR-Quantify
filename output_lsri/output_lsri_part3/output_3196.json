{
  "application_domain": [
    {
      "confidence": 13.44,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanghaoyang0/DGAT-onco"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-11T08:55:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-26T16:51:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "detect oncogene by comparing mutational profile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.994883238504897,
      "result": {
        "original_header": "DGAT-onco",
        "type": "Text_excerpt",
        "value": "It is developped based on the framework of DiffMut (https://github.com/Singh-Lab/Differential-Mutation-Analysis), a frequency-based method.  \nDiffMut detects oncogenes by comparing the frequency-based distribution between cancer and natural population. But it treats each mutation equally.  \nThus, we integrates function information in this framework to boost its power in oncogene detection.  \n"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9265724144640015,
      "result": {
        "original_header": "If your input is hg38-based",
        "type": "Text_excerpt",
        "value": "Just set the ```-buildver``` flag in ANNOVAR to hg38 and the rest is the same.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanghaoyang0/DGAT-onco/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanghaoyang0/DGAT-onco/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zhanghaoyang0/DGAT-onco"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DGAT-onco"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/fig/overview.png"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8338975807045289,
      "result": {
        "original_header": "DGAT-onco",
        "type": "Text_excerpt",
        "value": "Reference: https://ieeexplore.ieee.org/document/9669388 \nComments and feedbacks: zhanghaoyang0@hotmail.com  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanghaoyang0/DGAT-onco/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DGAT-onco"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zhanghaoyang0"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 5270,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "* R (\u22654.0.3)  \nPackages: dplyr (\u22651.0.7), tidyr (\u22651.1.3) \n* ANNOVAR  \nDatabases: refGene, dbnsfp35c\n* Linux (to perform ANNOVAR)"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:53:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example files (hg19-based mutation data, in the \"example\" folder)",
        "type": "Text_excerpt",
        "value": "* ```BRCA.maf```, a Mutation Annotation Format (MAF) file, is the input of our method, .  \n* We only need 5 columns, as below. It looks like:  \nChromosome\tStart_Position\tTumor_Seq_Allele1\tTumor_Seq_Allele2\tTumor_Sample_Barcode  \nchr1\t100535194\tG\tC\tTCGA-A7-A0DA-01A-31D-A10Y-09  \nchr1\t100547556\tC\tG\tTCGA-AR-A2LE-01A-11D-A17W-09  \n...  \n* ```BRCA_for_annovar.vcf```, a Variant Call Format (VCF) file prepared for ANNOVAR, also can be the input of our method.\n* It can be converted from the MAF file, with the function ```make_vcf_for_annovar```.  \n* It looks like:  \nchr1\t100535194\t.\tG\tC\t.\t.\tTCGA-A7-A0DA-01A-31D-A10Y-09  \nchr1\t100547556\t.\tC\tG\t.\t.\tTCGA-AR-A2LE-01A-11D-A17W-09  \n...  \n* ```BRCA.hg19_multianno.vcf```  is a VCF file annotated with ANNOVAR. \n* It looks like:  \nChr\tStart\tEnd\tRef\tAlt\tFunc.refGene\tGene.refGene\tGeneDetail.refGene\tExonicFunc.refGene\tAAChange.refGene\tSIFT_score ...  \nchr1\t100535194\t100535194\tG\tC\texonic\tMFSD14A\t.\tnonsynonymous SNV\tMFSD14A:NM_033055:exon8:c.G844C:p.V282L\t0.266 ...  \nchr1\t100547556\t100547556\tC\tG\tintronic\tMFSD14A\t. .\t.\t. ...  \n...  \n* ```BRCA_result.txt``` is the uEMD calculated for each gene:  \n* It looks like:  \ngene\tuemd  \nA1CF\t0  \nA2M\t0  \n...  "
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Load functions and packages",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "source('./code/dgat-onco.r')  \nnames(bins_1000g) # list scoring functions"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Make vcf for ANNOVAR",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "make_vcf_for_annovar(chr_col = 'Chromosome', pos_col = 'Start_Position', ref_col = 'Tumor_Seq_Allele1',\n                     alt_col = 'Tumor_Seq_Allele2', id_col = 'Tumor_Sample_Barcode',\n                     file_in = './example/BRCA.maf', file_out = './example/BRCA_for_annovar.vcf')\n* This function generate a VCF file from a MAF input.  "
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ANNOVAR (on Linux)",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "file_in=\"./example/BRCA_for_annovar.vcf\"  \nfile_out='./example/BRCA'  \npath_annovar='path_of_your_annovar' # path of your annovar  \n\n$path_annovar\\table_annovar.pl \\  \n$file_in \\  \n$path_annovar\\humandb/ \\  \n-buildver hg19 \\  \n-out $file_out \\  \n-remove -protocol refGene,dbnsfp35c -operation g,f -nastring . -vcfinput -polish"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Calculate mutation summation score for each cancer individual",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "summ = calculate_summation_score(file_in = './example/BRCA.hg19_multianno.txt', id_col = 'Otherinfo11',\n                                 gene_col = 'Gene.refGene', func_col= 'ExonicFunc.refGene')  \ncolnames(summ)[grepl('score', colnames(summ))] # list scoring functions"
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Calculate uEMD based on a scoring function",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "calculate_uemd(summ, file_out = './example/BRCA_result.txt', score = 'MutPred_rankscore')  "
      },
      "source": "https://raw.githubusercontent.com/zhanghaoyang0/DGAT-onco/master/README.md",
      "technique": "header_analysis"
    }
  ]
}