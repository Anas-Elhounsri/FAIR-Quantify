{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "bibentry(bibtype = \"article\",\n         title = \"IUCNN - Deep learning approaches to approximate species\u2019 extinction risk\",\n         author = c(person(\"Alexander\", \"Zizka\"),\n                    person(\"Tobias\", \"Andermann\"),\n                    person(\"Daniele\", \"Silvestro\")),\n         journal = \"bioRxiv\",\n         number = 28,\n         pages = 227-241,\n         year = 2022,\n         doi = \"doi.org/10.1101/2021.06.17.448832 \",\n         url = \"https://www.biorxiv.org/content/10.1101/2021.06.17.448832v1\")\n\nbibentry(bibtype = \"article\",\n         title = \"Automated conservation assessment of the orchid family with deep learning\",\n         author = c(person(\"Alexander\", \"Zizka\"),\n                    person(\"Daniele\", \"Silvestro\"),\n                    person(\"Pati\", \"Vitt\"),\n                    person(\"Tiffany\", \"Knight\")),\n         journal = \"Conservation Biology\",\n         number = 35,\n         pages = 897-908,\n         year = 2021,\n         doi = \"doi.org/10.1111/cobi.13616\",\n         url = \"https://conbio.onlinelibrary.wiley.com/doi/full/10.1111/cobi.13616\")\n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "```r\nlibrary(IUCNN)\ncitation(\"IUCNN\")\n```\n\nZizka A, Andermann T, Silvestro D (2022). \"IUCNN - Deep learning approaches to approximate species\u2019 extinction risk.\" [Diversity and Distributions, 28(2):227-241 doi: 10.1111/ddi.13450](https://doi.org/10.1111/ddi.13450). \n\nZizka A, Silvestro D, Vitt P, Knight T (2021). \u201cAutomated conservation assessment of the orchid family with deep\nlearning.\u201d [Conservation Biology, 35(3):897-908, doi: doi.org/10.1111/cobi.13616](https://doi.org/10.1111/cobi.13616)\n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/IUCNN/IUCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-07T20:28:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-20T16:50:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " Train neural networks based on geographic species occurrences, environmental data and existing IUCN Red List assessments to predict the conservation status of \"Not Evaluated\" species, for any taxon or geographic region of interest. https://iucnn.github.io/IUCNN/"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9019358804921146,
      "result": {
        "original_header": "IUCNN",
        "type": "Text_excerpt",
        "value": "Batch estimation of species' IUCN Red List threat status using neural networks.\n \n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9596651121064881,
      "result": {
        "type": "Text_excerpt",
        "value": "**IUCNN has been updated to version 3.0 on github and will shortly be updated on CRAN to adapt to the retirement of sp and raster. The update may not be compatible with analysis-pipelines build with version 2.x** \n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/azizka/IUCNN/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/azizka/IUCNN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/IUCNN/IUCNN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IUCNN/IUCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IUCNN"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/293626039"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "1. Install IUCNN directly from Github using devtools (some users, will need to start from the step 2 before installing the package). \n```r\ninstall.packages(\"devtools\")\nlibrary(devtools)\n\ninstall_github(\"IUCNN/IUCNN\")\n```\n\n2. Since some of IUCNNs functions are run in Python, IUCNN needs to set up a Python environment. This is easily done from within R, using the `install_miniconda()` function of the package `reticulate` (this will need c. 3 GB disk space).\nIf problems occur at this step, check the excellent [documentation of reticulate](https://rstudio.github.io/reticulate/index.html).\n```r\ninstall.packages(\"reticulate\")\nlibrary(reticulate)\ninstall_miniconda()\n```\n\n3. Install the tensorflow python library. Note that you may need a fresh\nR session to run the following code.\n```r\ninstall_github(\"rstudio/tensorflow\")\nlibrary(tensorflow)\ninstall_tensorflow()\n```\n\n4. Install the npBNN python library from Github:\n\n```r\nreticulate::py_install(\"https://github.com/dsilvestro/npBNN/archive/refs/tags/v0.1.11.tar.gz\", pip = TRUE)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9961461299145473,
      "result": {
        "type": "Text_excerpt",
        "value": "**IUCNN has been updated to version 3.0 on github and will shortly be updated on CRAN to adapt to the retirement of sp and raster. The update may not be compatible with analysis-pipelines build with version 2.x** \n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/IUCNN/IUCNN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "conservation, conservation-prioritization, deep-learning, machine-learning, tensorflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IUCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "IUCNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 161292,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 92218,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 72618,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "azizka",
          "type": "User"
        },
        "date_created": "2021-09-15T18:24:36Z",
        "date_published": "2021-09-15T19:07:55Z",
        "description": "A major update to IUCNN with additional features for fully connected NNs and implementation of a convolutional neural network model. ",
        "html_url": "https://github.com/IUCNN/IUCNN/releases/tag/v2.0.0",
        "name": "CNN on board",
        "release_id": 49625237,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/IUCNN/IUCNN/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/IUCNN/IUCNN/releases/49625237",
        "value": "https://api.github.com/repos/IUCNN/IUCNN/releases/49625237",
        "zipball_url": "https://api.github.com/repos/IUCNN/IUCNN/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "azizka",
          "type": "User"
        },
        "date_created": "2021-05-27T13:39:15Z",
        "date_published": "2021-05-27T13:39:39Z",
        "description": "This is the first release of IUCNN.",
        "html_url": "https://github.com/IUCNN/IUCNN/releases/tag/v1.0.0",
        "name": "initial submission",
        "release_id": 43699615,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/IUCNN/IUCNN/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/IUCNN/IUCNN/releases/43699615",
        "value": "https://api.github.com/repos/IUCNN/IUCNN/releases/43699615",
        "zipball_url": "https://api.github.com/repos/IUCNN/IUCNN/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable state and is being actively developed.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:37:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "There are multiple models and features available in IUCNN. A vignette with a detailed tutorial on how to use those is available as part of the package: `vignette(\"Approximate_IUCN_Red_List_assessments_with_IUCNN\")`. Running IUCNN will write files to your working directory.\n\nA simple example run for terrestrial orchids (This will take about 5 minutes and download ~500MB of data for feature preparation into the working directory):\n\n```r\nlibrary(tidyverse)\nlibrary(IUCNN)\n\n#load example data \ndata(\"training_occ\") #geographic occurrences of species with IUCN assessment\ndata(\"training_labels\")# the corresponding IUCN assessments\ndata(\"prediction_occ\") #occurrences from Not Evaluated species to prdict\n\n# 1. Feature and label preparation\nfeatures <- iucnn_prepare_features(training_occ) # Training features\nlabels_train <- iucnn_prepare_labels(x = training_labels,\n                                     y = features) # Training labels\nfeatures_predict <- iucnn_prepare_features(prediction_occ) # Prediction features\n\n# 2. Model training\nm1 <- iucnn_train_model(x = features, lab = labels_train)\n\nsummary(m1)\nplot(m1)\n\n# 3. Prediction\niucnn_predict_status(x = features_predict,\n                     model = m1)\n```\nAdditional features quantifying phylogenetic relationships and geographic sampling bias are available via `iucnn_phylogenetic_features` and `iucnn_bias_features`.\n\n\nWith model testing\n\n```r\nlibrary(tidyverse)\nlibrary(IUCNN)\n\n#load example data \ndata(\"training_occ\") #geographic occurrences of species with IUCN assessment\ndata(\"training_labels\")# the corresponding IUCN assessments\ndata(\"prediction_occ\") #occurrences from Not Evaluated species to predict\n\n# Feature and label preparation\nfeatures <- iucnn_prepare_features(training_occ) # Training features\nlabels_train <- iucnn_prepare_labels(x = training_labels,\n                                     y = features) # Training labels\nfeatures_predict <- iucnn_prepare_features(prediction_occ) # Prediction features\n\n\n# Model testing\n# For illustration models differing in dropout rate and number of layers\n\nmod_test <- iucnn_modeltest(x = features,\n                            lab = labels_train,\n                            mode = \"nn-class\",\n                            dropout_rate = c(0.0, 0.1, 0.3),\n                            n_layers = c(\"30\", \"40_20\", \"50_30_10\"),\n                            cv_fold = 5,\n                            init_logfile = TRUE)\n\n# Select best model\nm_best <- iucnn_best_model(x = mod_test,\n                          criterion = \"val_acc\",\n                          require_dropout = TRUE)\n\n# Inspect model structure and performance\nsummary(m_best)\nplot(m_best)\n\n# Train the best model on all training data for prediction\nm_prod <- iucnn_train_model(x = features,\n                            lab = labels_train,\n                            production_model = m_best)\n\n# Predict RL categories for target species\npred <- iucnn_predict_status(x = features_predict,\n                             model = m_prod)\nplot(pred)\n\n```\n\nUsing a convolutional neural network\n\n```r\nfeatures <- iucnn_cnn_features(training_occ) # Training features\nlabels_train <- iucnn_prepare_labels(x = training_labels,\n                                     y = features) # Training labels\nfeatures_predict <- iucnn_cnn_features(prediction_occ) # Prediction features\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/azizka/IUCNN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}