{
  "application_domain": [
    {
      "confidence": 39.13,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If you use MutScape in your work, please cite",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Reference"
        ],
        "type": "Text_excerpt",
        "value": "> Lu, C. H., Wu, C. H., Tsai, M. H., Lai, L. C., & Chuang, E. Y. (2021). MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics. NAR genomics and bioinformatics, 3(4), lqab099.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anitalu724/MutScape"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-11T06:35:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-15T18:09:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\uff21 user-friendly Python toolkit, which provides a comprehensive pipeline to easily explore the cohort-based mutational characterization for studying cancer genomics."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics"
        ],
        "type": "Text_excerpt",
        "value": "We developed a user-friendly Python toolkit, MutScape, which provides a comprehensive pipeline of filtering, combination, transformation, analysis, and visualization for researchers, to easily explore the cohort-based mutational characterization for studying cancer genomics when obtaining somatic mutation data. MutScape can not only preprocess millions of mutation records in a few minutes, but offers various analyses simultaneously. Furthermore, MutScape supports somatic variant data in both Variant Call Format (VCF) and Mutation Annotation Format (MAF), and leverages caller combination strategies to quickly eliminate false-positives. With only two simple commands, robust results and publication-quality images are generated automatically.\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9884092482767091,
      "result": {
        "original_header": "Implementation",
        "type": "Text_excerpt",
        "value": "MutScape has simply separated into two main modules: data preprocessing and analysis and visualization. Detailed structure please refer to [**Fig. 1**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig1.pdf).\n \n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972420019498182,
      "result": {
        "original_header": "Data Preprocessing",
        "type": "Text_excerpt",
        "value": "MutScape accepts both VCF and MAF files as input data. \nFor multiple VCF/MAF files will be implemented simultaneously, MutScape requires a limited-format TSV file as input. For the detailed format please refer to example files such as `examples/tsv/testData_vcf.tsv` and `examples/tsv/testData_maf.tsv` or just see [Wiki](https://github.com/anitalu724/MutScape/wiki/Column-information-of-input-TSV-file).\n \n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9729117089261272,
      "result": {
        "original_header": "Analysis and Visualization",
        "type": "Text_excerpt",
        "value": "MutScape provides 9 different analyses and some of them generate plots after analysis.</br>\nSee [Wiki](https://github.com/anitalu724/MutScape/wiki/Table-of-arguments-for-analysis-and-visualization) for detailed information.\n \n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/anitalu724/MutScape/wiki"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anitalu724/MutScape/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anitalu724/MutScape/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anitalu724/MutScape"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/mutscape/installation/install_module.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/mutscape/installation/quickInstall_2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/mutscape/installation/quickInstall_1.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/mutscape/data/S1.gif?raw=true"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick installation",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics"
        ],
        "type": "Text_excerpt",
        "value": "Before implement quick installation, please be sure that you have installed MiniConda3, created a new conda environment and activate it. Also, to make this implementation run smoothly, please confirm that the Internet is connected always and the server/computer has enough storage memory.\n\n    git clone https://github.com/anitalu724/MutScape.git\n    bash MutScape/mutscape/installation/quickInstall_1.sh\n    bash vcf2maf-1.6.20/MutScape/mutscape/installation/quickInstall_2.sh\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Miniconda3",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Prerequisite installation"
        ],
        "type": "Text_excerpt",
        "value": "Numerous modules for this toolkit will be installed by `conda`.\nIf you have never installed conda, please refer to [Miniconda website](https://docs.conda.io/en/latest/miniconda.html). For high compatibility, we recommended users install `Miniconda3-py37_4.9.2`. (SHA256 hash  79510c6e7bd9e012856e25dcb21b3e093aa4ac8113d9aa7e82a86987eabe1c31)\n\nThere is a script for users to install Miniconda quickly.\n\n    wget https://repo.anaconda.com/miniconda/Miniconda3-py37_4.9.2-Linux-x86_64.sh\n    sha256sum Miniconda3-py37_4.9.2-Linux-x86_64.sh\n    bash Miniconda3-py37_4.9.2-Linux-x86_64.sh\n    export PATH=\"$HOME/miniconda3/bin:$PATH\"\n\nMutScape is preferred to be implementing under a brand-new conda environment.\n\n    conda create --name MutScape\n    conda activate MutScape\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Ensembl's VEP",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Prerequisite installation"
        ],
        "type": "Text_excerpt",
        "value": "If you have already install Ensembl's VEP, you may skip this part and directly into the next part to install `vcf2maf`. (However, you must confirm that your VEP version is compatible to vcf2maf. Here, we recommended installing `ensembl-vep=102.0`. )\n\n    conda install -c bioconda -c conda-forge samtools=1.10 ucsc-liftover=377 bcftools=1.10.2 htslib==1.10.2\n    conda install -c bioconda -c conda-forge -c defaults ensembl-vep=102.0 \n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install vcf2maf",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Prerequisite installation"
        ],
        "type": "Text_excerpt",
        "value": "For transforming the VCF into the MAF, this procedure is implemented by `vcf2maf` utility, which processes variant annotation and transcript prioritization. You can refer to  [this script]((https://github.com/mskcc/vcf2maf)) or just follow the commands below. (Before this step, you must be sure that you have installed [Ensembl's VEP](https://gist.github.com/ckandoth/61c65ba96b011f286220fa4832ad2bc0))\n\n    wget https://github.com/mskcc/vcf2maf/archive/refs/tags/v1.6.20.tar.gz\n    tar -zxf v1.6.20.tar.gz\n    cd vcf2maf-1.6.20\n    perl vcf2maf.pl --man\n    perl maf2maf.pl --man\n\nBefore we start to use vcf2maf, we need to download VEP cache data and the reference FASTA.<br/>\n***:warning:  Since these files are quite large, it may take a long time to download them!*** <br/>\n***:warning:  Be sure that your available memory is at least 30GB!*** <br/>\n:information_source:  Here we recommended to download **102_GRCh37**\n\n    mkdir -p $HOME/.vep/homo_sapiens/102_GRCh37/\n    wget ftp://ftp.ensembl.org/pub/grch37/release-102/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.dna.toplevel.fa.gz\n    mv Homo_sapiens.GRCh37.dna.toplevel.fa.gz  $HOME/.vep/homo_sapiens/102_GRCh37/\n    gzip -d $HOME/.vep/homo_sapiens/102_GRCh37/Homo_sapiens.GRCh37.dna.toplevel.fa.gz\n    bgzip -i $HOME/.vep/homo_sapiens/102_GRCh37/Homo_sapiens.GRCh37.dna.toplevel.fa\n    samtools faidx $HOME/.vep/homo_sapiens/102_GRCh37/Homo_sapiens.GRCh37.dna.toplevel.fa.gz\n    wget ftp://ftp.ensembl.org/pub/release-102/variation/indexed_vep_cache/homo_sapiens_vep_102_GRCh37.tar.gz\n    mv homo_sapiens_vep_102_GRCh37.tar.gz $HOME/.vep/\n    tar -zxf $HOME/.vep/homo_sapiens_vep_102_GRCh37.tar.gz -C $HOME/.vep/\n    "
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install MutScape",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Prerequisite installation"
        ],
        "type": "Text_excerpt",
        "value": "MutScape is provided on the Github website, please download it.\n\n    git clone https://github.com/anitalu724/MutScape.git\n\nIf you have never installed `pip`, install it by `conda`.\n\n    conda install -c anaconda pip\n\nTo make sure all code smoothly implement, you need to install several modules that are used in MutScape:\n\n    cd MutScape/mutscape\n    bash installation/install_module.sh\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anitalu724/MutScape/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Anita Lu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/mutscape/data/MutScape_movie.gif?raw=true"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MutScape"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "anitalu724"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 184630,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5020,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 126,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Prerequisite installation"
        ],
        "type": "Text_excerpt",
        "value": "The latest tested version in parentheses:\n1. Using Miniconda (py37_4.9.2) to install:\n\n    samtools (v1.10), ucsc-liftover (v377), bcftools (v1.10.2), htslib (v1.10.2) and ensembl-vep (v102.0)\n\n2. Download vcf2maf (v1.6.20) and git clone MutScape (v1.0)\n\n3. Download VEP cache data of GRCh37 and the reference FASTA (v102.0)\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:03:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start from VCFs",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Implementation",
          "Data Preprocessing"
        ],
        "type": "Text_excerpt",
        "value": "For VCFs as input data, `-f`, `-o` and `-m` are required while `-vf`, `-ra`, `-v2m` and `-mf` are optional. \nSome simple test commands are displayed below.</br>\nSee [Wiki](https://github.com/anitalu724/MutScape/wiki/Specific-arguments-in-data-preprocessing) for detailed information.\n\n![S1](https://github.com/anitalu724/MutScape/blob/main/mutscape/data/S1.gif?raw=true)\n\n    \n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_vcf.tsv \\\n    -o examples/output \\\n    -m examples/meta \\\n    -vf CI \"*,*,*,6,*,*,*,*\"\n\n\n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_vcf.tsv \\\n    -o examples/output \\\n    -m examples/meta \\\n    -vf GI [1,3] \\\n    -v2m 8 \n    \n    \n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_vcf.tsv \\\n    -o examples/output \\\n    -m examples/meta \\\n    -vf GI \"{1: [*,*], 2 : [1, 300000]}\" CI \"15,15,0,6,0,0.05,8,8\" PA 0 AV 0.9 \\\n    -v2m \n    \n    \n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_vcf.tsv \\\n    -o examples/output \\\n    -m examples/meta \\\n    -v2m 8 \\\n    -mf GI [1,3]\n\n\n* Reject and accept list (-ra)\n    > Schematic diagram is shown in [**S2**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/S2.pdf).\n    ```bash\n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_vcf.tsv \\\n    -ra examples/test_data/vcf/reject.vcf examplestest_data/vcf/accept.vcf \\\n    -o examples/output \\\n    -m examples/meta \\\n    -vf CI \"*,*,*,6,*,*,*,*\" \\\n    -v2m 8 \\\n    -mf GI [1,3]\n    ```\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start from MAFs",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Implementation",
          "Data Preprocessing"
        ],
        "type": "Text_excerpt",
        "value": "For MAFs as input data, `-f`, `-o` and `-m` are required while `-mf` are optional. \nSome simple test commands are displayed below.\n\n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_maf.tsv \\\n    -mf GI [1:3] \\\n    -o examples/output \\\n    -m examples/meta \n    \n    \n    python3 dataPreprocess.py \\\n    -f examples/tsv/testData_maf.tsv \\\n    -mf GI [1:3] CI \"15,15,0,0,0,0.05,8,8\" TE [BLCA,5] PAC 1 HY 500 \\\n    -o examples/output \\\n    -m examples/meta\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Implementation",
          "Analysis and Visualization"
        ],
        "type": "Text_excerpt",
        "value": "Some simple test commands are displayed below.\n\n1. Significantly mutated gene detection\n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/TCGA_test.maf \\\n    -smg \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n2. Known cancer gene annotation\n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/TCGA_test.maf \\\n    -kcga \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n3. Mutation burden statistics\n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/TCGA_test.maf \\\n    -tmb 60456963 \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n4. CoMut plot analysis\n    > Output figure is shown like [**Fig. 2**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig2.pdf).</br>\n    > See [Wiki](https://github.com/anitalu724/MutScape/wiki/Column-information-of-input-TSV-file-for-CoMut-plot) for detailed information.\n\n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/TCGA_test.maf \\\n    -cm 60456963 \\\n    -o examples/output \\\n    -p examples/pic/\n\n\n    python3 mafAnalysis.py \\\n    -cmp examples/tsv/comut.tsv examples/tsv/comut_info.tsv 0 comut.pdf \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n5. Mutational signature\n   > Signature refitting: the output figure of `-ms 0` is shown in [Wiki](https://github.com/anitalu724/MutScape/wiki/Mutational-Signature:-the-result-of-signature-refitting). </br>\n   > *De novo* extraction: the output figure of `-ms 1` and `-ms 2` is shown like [**Fig. 3**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig3.pdf).\n    \n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/ms.maf \\\n    -ms 0 \"[SBS1, SBS5, SBS40, SBS87]\" \\\n    -o examples/output \\\n    -p examples/pic/\n\n\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/ms.maf \\\n    -ms 1 \"[2,9,10]\" \\\n    -o examples/output \\\n    -p examples/pic/\n\n\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/ms.maf \\\n    -ms 2 \"[3]\" \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n6. HRD Score\n   > Output figure is shown like [**Fig. 4A, B**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig4.pdf).\n    \n    ```\n    python3 mafAnalysis.py \\\n    -hrd examples/tsv/hrd.tsv grch37 \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n7. Whole-genome doubling (WGD) and Chromosome instability (CIN)\n   > Output figure is shown like [**Fig. 4C, D**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig4.pdf).\n    \n    ```\n    python3 mafAnalysis.py \\\n    -wgdcin examples/tsv/hrd.tsv \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n8. HRD, CIN and WGD Comparison\n    > Output figure is shown like [**Fig. 5**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig5.pdf).\n\n    ```\n    python3 mafAnalysis.py \\\n    -hcwc examples/tsv/hcw_comparison.tsv grch37 \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n\n9. Actionable mutation (drug) annotation\n   > `oncokb-annotator` was free under the GPL 3.0 license.</br>\n   > `[your_oncokb_token]` is gotten from [OncoKB Website](https://www.oncokb.org/). You must create  your own account and get your personal API token.</br>\n   > Output figure is shown like [**Fig. 6**](https://github.com/anitalu724/MutScape/blob/main/mutscape/examples/images/Fig6.pdf).\n    \n    ```\n    python3 mafAnalysis.py \\\n    -f examples/test_data/maf/TCGA_test.maf \\\n    -oncokb ../oncokb-annotator/ [your_oncokb_token] 4 examples/test_data/oncokb/clinical_input.txt \\\n    -o examples/output \\\n    -p examples/pic/\n    ```\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you use MutScape in your work, please cite",
        "parent_header": [
          "MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics",
          "Reference"
        ],
        "type": "Text_excerpt",
        "value": "> Lu, C. H., Wu, C. H., Tsai, M. H., Lai, L. C., & Chuang, E. Y. (2021). MutScape: an analytical toolkit for probing the mutational landscape in cancer genomics. NAR genomics and bioinformatics, 3(4), lqab099.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/anitalu724/MutScape/main/README.md",
      "technique": "header_analysis"
    }
  ]
}