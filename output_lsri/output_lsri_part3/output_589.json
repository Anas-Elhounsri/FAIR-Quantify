{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PPKE-Bioinf/DIPEND"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-21T17:19:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-27T23:12:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9011697798790349,
      "result": {
        "type": "Text_excerpt",
        "value": "Example running of the program:\nnohup python3 /PATH/DIPEND/Dipend.py -b test_ -c 100 -d tcbig -g 1 -m LEFT -n 3 -p 0 -r 0 -s QGGGGWGQPHGGGWGQPHGGGWGQPHGGGWGQPHG > out.out 2>&1 &\nwhere /PATH/ is where you cloned this repository. \nWhen you use the WEIGHTED_LEFT, WEIGHTED_RIGHT or WEIGHTED_TRIPLET modes, you can set Gaussian  distributions for each amino acid, setting a phi psi angle as centers and a standard deviation and a weight between 0 and 1 to set how much it is considered relative to the Dunbrack distribution. If you set 0, only the Dunbrack distribution will be consiedered, if you set 1, only your custom distributin will be considered. The distributions are set in the distribution.in file in the Data folder. You can define amino acids line by line or using the '-' character to define amino acid ranges. You can also leave out amino acids. For them, only the Dunbrack distributions will be considered. \nIn the sequence, P means trans proline (which is most of the cases). If you would like to include cys proline specifically, please use the letter X in the sequence. Note, that cys proline will only be considered as central amino acid, not as neighbour, because the Dunbrack datasets do not regard such a case. Trans proline will be considered as neighbour. \nIf you would like to compile the c++ executables from the sources instead of using the given executables, please use the following commands:\ng++ checkcontacts.cpp -o checkcontacts -std=c++11 \nThe probabilities are stored in binary files. Angles are in a 4 byte signed int format, probabilities are in an 8 byte double precision format. The byte structure is little-endian. If you would like to make a non-binary, human readable copy of one of the Dunbrack database files, use retrieve_distribution for the left or right neighbours and retrieve_distribution_triplet for the triplet neighbours in the Generate_data directory. For the weighted user defined distributions, the retrieve_distribution_user or retrieve_distribution_user_bare file makes the conversion. Give them the full path and filename of the binary file by running any of these scripts. \nPlease do not hesitate to contact me in case of any questions at the following e-mail address:\nharmat.zita@itk.ppke.hu \n"
      },
      "source": "https://raw.githubusercontent.com/PPKE-Bioinf/DIPEND/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/PPKE-Bioinf/DIPEND/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PPKE-Bioinf/DIPEND/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PPKE-Bioinf/DIPEND"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/PPKE-Bioinf/DIPEND/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9894917995729325,
      "result": {
        "type": "Text_excerpt",
        "value": "Installation:\nPlease make sure the paths are set in the paths.in file in the Data folder! \nRequirements:\nLinux operating system, little-endian byte structure\npython 3.5 or higher\nUCSF Chimerax 1.1 or higher\ngromacs 4.5 or higher \nYou can download Chimerax here:\nhttps://www.rbvi.ucsf.edu/chimerax/download.html \nYou can download Scwrl4 here:\nhttp://dunbrack.fccc.edu/SCWRL3.php/ \nYou can donwnload GROMACS here:\nhttps://manual.gromacs.org/documentation/ \nWhen you use the WEIGHTED_LEFT, WEIGHTED_RIGHT or WEIGHTED_TRIPLET modes, you can set Gaussian  distributions for each amino acid, setting a phi psi angle as centers and a standard deviation and a weight between 0 and 1 to set how much it is considered relative to the Dunbrack distribution. If you set 0, only the Dunbrack distribution will be consiedered, if you set 1, only your custom distributin will be considered. The distributions are set in the distribution.in file in the Data folder. You can define amino acids line by line or using the '-' character to define amino acid ranges. You can also leave out amino acids. For them, only the Dunbrack distributions will be considered. \nIf you would like to compile the c++ executables from the sources instead of using the given executables, please use the following commands:\ng++ checkcontacts.cpp -o checkcontacts -std=c++11 \n"
      },
      "source": "https://raw.githubusercontent.com/PPKE-Bioinf/DIPEND/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8043165394864115,
      "result": {
        "type": "Text_excerpt",
        "value": "You can download Scwrl4 here:\nhttp://dunbrack.fccc.edu/SCWRL3.php/ \n"
      },
      "source": "https://raw.githubusercontent.com/PPKE-Bioinf/DIPEND/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/PPKE-Bioinf/DIPEND/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DIPEND"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "PPKE-Bioinf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 50701,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 10646,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 10334,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/PPKE-Bioinf/DIPEND/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:32:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}