{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bansallab/INoDS-model"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-09T17:15:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-25T15:24:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tool to evaluate empirical contact network(s) of infectious disease spread"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.992330947074856,
      "result": {
        "original_header": "INoDS (Inferring Network of infectious Disease Spread)",
        "type": "Text_excerpt",
        "value": "\r\nINoDs is a tool to assess whether an empirical contact network is likely to generate an observed pattern of infectious disease spread in a host population. INoDS also provides epidemiological insights into the spreading pathogen by estimating the per-contact rate of pathogen transmission.\r\n\r\nThe details of the tool is described in\r\n\r\n> Sah, P and Bansal, S. [Identifying the dynamic contact network of infectious disease spread](https://www.biorxiv.org/content/early/2017/07/28/169573). \r\n> bioRxiv (2017): 169573.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.970560263000398,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "edge_filename: Filename of the network edgelist. See *Edge_connections_poisson.csv* in the examples folder for the accepted file format. \r\n* Note 1: Both dynamic and static networks are accepated. For static networks, remove the \"timestep\" column in the edgelist file\r\n* Note 2: The networks can be unweighted or weighted. For unweighted networks (as shown in *Edge_connections_poisson.csv*), set all values in the *weight* column as one.\r\n\r\n\r\nhealth_filename: Filename of the infection data. See *Health_data_nolag.csv* in the examples folder for the accepted file format. Infection states are coded as: 0 - diagnosed to be uninfected and 1 - diagnosed to be infected. Node ids in the infection data should correspond to the network edgelist, but infection data on all nodes (or all timesteps) is not required.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9836595800072369,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "output_filename: Desired filename for the output files.\r\n\r\n\r\ninfection_type: Can be either \"SI\", \"SIR\" or \"SIS\".\r\n\r\n\r\ntruth (optional, default = None): True values of parameters, if known, are entered as a list. If unknown set the truth as a list of zeroes.\r\n\r\n\r\nnull_networks (optional, default = 500): Total number of null network. Default number of null networks is 500.\r\n\r\n\r\nburnin (optional, default = 1000): Total burn-in perior for *emcee* sampler.\r\n\r\n\r\nmax_iteration (optional, default = 50,000): Maximum number of iterations after burn-in for *emcee* sampler. The sampler terminates at maximum iteration even if convergence is not achieved.  \r\n\r\n\r\ndiagnosis_lag: (optional, default = False). Set to True when actual infection timing is unknown and the infection file reports *diagnosis times* instead of *infection times*.  \r\n\r\n\r\nverbose: (optional, default = True) Set to False to supress printing of detailed status messages. \r\n\r\n\r\nnull_comparison: (optional, default = True) Set to False to skip comparing the predictive power of empirical contact network to null networks.  \r\n\r\n\r\nedge_weights_to_binary: (optional, default = False) Set to True to remove edge-weights from the empircal network, and assign all edges with edge-weight of one.\r\n\r\n\r\nnormalize_edge_weight: (optional, default = False) Set to True to normalize edge-weights of the empircal network by dividing all edge-weights with the maximum edge-weight.\r\n\r\n\r\nis_network_dynamic: (optional, default = True) Set to False if the empirical network is static.\r\n\r\n\r\nparameter_estimate: (optional, default = True) Set to False to skip the the estimation of unknown parameters.\r\n\r\n\r\ncompare_asocial_social_force: (optional, default = True) Set to False to skip comparisons of \"social\" vs. \"asocial\" force of infection given the empircal contact network.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989857345718093,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\r\nThe tools outputs the following files\r\n\r\n* Convergence diagnostics: Average autocorrelation time (in blue) is plotted as a function of chain length. Convergence is assumed to be achieved when the chain length (N) is longer than 100 times the estimated autocorrelation time. The N>100xautocorrelation time threshold is plotted as a dashed line.\r\n* Parameter estimation: Three files are generated for this step. (i) Summary of parameter estimates and BIC of the contact network, (ii) Posterior plot of &beta; and epsilon parameter, (iii) A plot of walker positions for &beta; parameter and &beta; posterior.\r\n* Null comparison: At this step two files are generated - a .csv file with the likelihood of disease data under the assumption that the disease  spreads through the contact network (first row) and likelihoods for null networks (second to last row). A figure summarizing the results is also generated.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bansallab/INoDS-model/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bansallab/INoDS-model/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bansallab/INoDS-model"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "INoDS (Inferring Network of infectious Disease Spread)"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999969925142,
      "result": {
        "original_header": "Environment",
        "type": "Text_excerpt",
        "value": "A working Python environment for this project can be generated using the [conda](https://conda.io/docs/user-guide/tasks/manage-environments.html#creating-an-environment-from-an-environment-yml-file) \"environment.yml\":  \r\n```conda env create -f environment.yml```  \r\nTo activate the Python environment titled \"inods\":  \r\nBASH2*\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bansallab/INoDS-model/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright 2017 Pratha Sah and Shweta Bansal.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "\r\nCopyright 2017 Pratha Sah and Shweta Bansal.\r\n\r\nINoDS is free software made available under the MIT License. For details see the LICENSE file.\r\n"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "INoDS-model"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bansallab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 50232,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://dynesty.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements for directly running the source code",
        "type": "Text_excerpt",
        "value": "* [Python 3](http://python.org/)\r\n* [pandas-0.25](https://pandas.pydata.org/)\r\n* [numpy-1.17.2](https://numpy.org/)\r\n* [scipy-1.3.1](https://www.scipy.org/)\r\n* [matplotlib-3.1.1](https://matplotlib.org/)\r\n* [dynesty1.1](https://dynesty.readthedocs.io/en/latest/)\r\n* [Networkx 2.3](https://networkx.github.io/)\r\n* [Corner 2.0.1](https://pypi.python.org/pypi/corner/)\r\n* [h5py](https://www.h5py.org/)\r\n* [tqdm-4.32.1](https://tqdm.github.io/)\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements for directly running the source code",
        "type": "Text_excerpt",
        "value": "* [Python 3](http://python.org/)\r\n* [pandas-0.25](https://pandas.pydata.org/)\r\n* [numpy-1.17.2](https://numpy.org/)\r\n* [scipy-1.3.1](https://www.scipy.org/)\r\n* [matplotlib-3.1.1](https://matplotlib.org/)\r\n* [dynesty1.1](https://dynesty.readthedocs.io/en/latest/)\r\n* [Networkx 2.3](https://networkx.github.io/)\r\n* [Corner 2.0.1](https://pypi.python.org/pypi/corner/)\r\n* [h5py](https://www.h5py.org/)\r\n* [tqdm-4.32.1](https://tqdm.github.io/)\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:13:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "\r\nA quick demo of the code is included in the examples folder. The code can be run using the command\r\n\r\n$ python run_inods.py\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bansallab/INoDS-model/master/README.md",
      "technique": "header_analysis"
    }
  ]
}