{
  "application_domain": [
    {
      "confidence": 19.93,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References and License",
        "parent_header": [
          "DVDeconv"
        ],
        "type": "Text_excerpt",
        "value": "If you find my work helpful in your research, please kindly cite below papers.\n\nReferences:\n\n[1] Kim, B., & Naemura, T. (2015). Blind depth-variant deconvolution of 3D data in wide-field fluorescence microscopy. Scientific reports, 5, 9894.  \n[2] Kim, B., & Naemura, T. (2016). Blind deconvolution of 3D fluorescence microscopy using depth\u2010variant asymmetric PSF. Microscopy research and technique, 79(6), 480-494.  \n[3] Kim, B (2021). An Open-Source MATLAB Toolbox for Depth-Variant Asym-metric Deconvolution of Fluorescence Micrographs. (in submission)  \n  \nIf you have any questions please feel free to contact me at by1110.kim@samsung.com \n  \n  \nAuthor: Boyoung Kim  \nCopyright (c) 2021 Boyoung Kim  \nAll rights reserved.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bykimpage/DVDeconv"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-09T14:51:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-08T10:31:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9029658191100867,
      "result": {
        "original_header": "DVDeconv",
        "type": "Text_excerpt",
        "value": "* PSFGenerator_GUI\n* Deconv_GUI\n* DataSet\n  \n\"PSF Generator\" and \"Deconv_GUI\" include Matlab GUI based tools for generating PSF and restoring images, respectively.  \n\"DataSet\" includes a script for generating dataset.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bykimpage/DVDeconv/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bykimpage/DVDeconv/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bykimpage/DVDeconv"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DVDeconv"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/21983302/100435316-1ac7ab00-30e1-11eb-8d9f-93dd54db63d1.jpg"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/21983302/100435333-1dc29b80-30e1-11eb-9a6f-6fde4d9ff186.jpg"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9893164193818587,
      "result": {
        "original_header": "DVDeconv",
        "type": "Text_excerpt",
        "value": "<div>\n<img src=\"https://user-images.githubusercontent.com/21983302/100435316-1ac7ab00-30e1-11eb-8d9f-93dd54db63d1.jpg\" width=\"370\" height=\"370\"> \n<img src=\"https://user-images.githubusercontent.com/21983302/100435333-1dc29b80-30e1-11eb-9a6f-6fde4d9ff186.jpg\" width=\"370\" height=\"370\">\n</div> \n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bykimpage/DVDeconv/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 bykimpage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References and License",
        "parent_header": [
          "DVDeconv"
        ],
        "type": "Text_excerpt",
        "value": "If you find my work helpful in your research, please kindly cite below papers.\n\nReferences:\n\n[1] Kim, B., & Naemura, T. (2015). Blind depth-variant deconvolution of 3D data in wide-field fluorescence microscopy. Scientific reports, 5, 9894.  \n[2] Kim, B., & Naemura, T. (2016). Blind deconvolution of 3D fluorescence microscopy using depth\u2010variant asymmetric PSF. Microscopy research and technique, 79(6), 480-494.  \n[3] Kim, B (2021). An Open-Source MATLAB Toolbox for Depth-Variant Asym-metric Deconvolution of Fluorescence Micrographs. (in submission)  \n  \nIf you have any questions please feel free to contact me at by1110.kim@samsung.com \n  \n  \nAuthor: Boyoung Kim  \nCopyright (c) 2021 Boyoung Kim  \nAll rights reserved.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DVDeconv"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bykimpage"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 83767,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:12:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PSFGenerator_GUI",
        "parent_header": [
          "DVDeconv",
          "Demo in the paper"
        ],
        "type": "Text_excerpt",
        "value": "1. Launch Matlab.  \n2. Add path.  \n  addpath('PSFGenerator_GUI')  \n3. Run.  \n  PSFGenerator  \n4. After inputting parameters, click 'Generate' button.\n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Deconv_GUI",
        "parent_header": [
          "DVDeconv",
          "Demo in the paper"
        ],
        "type": "Text_excerpt",
        "value": "1. Launch Matlab.  \n2. Add path.  \n  addpath('Deconv_GUI')   \n3. Run.  \n  Deconv_GUI  \n4. Click \"Open\" in Image section. And select folder that include images to restore.  \n(ex) DataSet/G10-P  \n5. Click \"Open\" in PSF section. And select folder that include PSF.  \n(ex) DataSet/variantPSF  \n6. Select algorithm and setting parameters in Algorithm section.  \n(ex) GEM algorithm, \u03b3 = 0.0005 , c = 5  \n7. After setting options for deconvolution in Result section, click \"Run\".  \n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DataSet",
        "parent_header": [
          "DVDeconv",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "When you want to generate bars image under depth-variant image model, refer dataset_variant.m script.  \nWhen you want to generate bars image under depth-invariant image model, refer dataset_invariant.m script.\n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Estimating aberration values",
        "parent_header": [
          "DVDeconv",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "(main function) DVDeconv/PSFGenerator_GUI/ToFindParameters.m  \n(loss function) DVDeconv/PSFGenerator_GUI/myobjfun.m  \nWhen PSF is unknown, aberration values for PSF generation are estimated by referring to the code above.  \n"
      },
      "source": "https://raw.githubusercontent.com/bykimpage/DVDeconv/main/README.md",
      "technique": "header_analysis"
    }
  ]
}