{
  "application_domain": [
    {
      "confidence": 0.8709062826057222,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets"
        ],
        "type": "Text_excerpt",
        "value": "If you use IGD in your research, please cite:\n\n\nJianglin Feng, Nathan C Sheffield. IGD: high-performance search for large-scale genomic interval datasets. *Bioinformatics*, Volume 37, Issue 1, 1 January 2021, Pages 118\u2013120, https://doi.org/10.1093/bioinformatics/btaa1062\n\nPreprint: https://www.biorxiv.org/content/10.1101/2020.06.08.139758v1\n\n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/databio/IGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-10T12:15:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-15T15:37:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A high-performance search engine for large-scale genomic interval datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets"
        ],
        "type": "Text_excerpt",
        "value": "Databases of large-scale genome projects now contain thousands of genomic interval datasets. These data are a critical resource for understanding the function of DNA. However, our ability to examine and integrate interval data of this scale is limited. Here, we introduce the integrated genome database (IGD), a method and tool for searching genome interval datasets more than three orders of magnitude faster than existing approaches, while using only one hundredth of the memory. IGD uses a novel linear binning method that allows us to scale analysis to billions of genomic regions. \n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8979317843449154,
      "result": {
        "original_header": "1.1  from a genome data source",
        "type": "Text_excerpt",
        "value": "```\n> library(IGDr)\n> createIGD(\"/path/to/data_source_folder/*\" \"/path/to/igd_folder/\" \"databaseName\" [option]\n\nwhere:\n\n- \"path/to/data_source_folder/\" is the path of the folder that contains .bed.gz or .bed data files.\n\n- \"path/to/igd_folder/\" is the path to the output igd folder;\n\n- \"databaseName\" is the name you give to the database, for eaxmple, \"roadmap\"\n\noptions:\n\n-b: bin size in bp (default 16384)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/databio/IGD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/databio/IGD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "databio/IGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IGD: A high-performance search engine for large-scale genomic interval datasets"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999999873808,
      "result": {
        "original_header": "How to build iGD",
        "type": "Text_excerpt",
        "value": "If zlib is not already installed, install it:\n```\nsudo apt-get install libpng12-0\n```\nThen:\nBASH2*\nthe executable `igd` is in the subfolder `bin`. And then copy it to /usr/local/bin.\n \n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999184491388732,
      "result": {
        "original_header": "1.1  from a genome data source",
        "type": "Text_excerpt",
        "value": "```\n> library(IGDr)\n> createIGD(\"/path/to/data_source_folder/*\" \"/path/to/igd_folder/\" \"databaseName\" [option]\n\nwhere:\n\n- \"path/to/data_source_folder/\" is the path of the folder that contains .bed.gz or .bed data files.\n\n- \"path/to/igd_folder/\" is the path to the output igd folder;\n\n- \"databaseName\" is the name you give to the database, for eaxmple, \"roadmap\"\n\noptions:\n\n-b: bin size in bp (default 16384)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999664060450804,
      "result": {
        "original_header": "1.2  from a file that contains the list of genome data source files",
        "type": "Text_excerpt",
        "value": "```\n> library(IGDr)\n> createIGD_f(\"/path/to/source-list file\" \"/path/to/igd_folder/\" \"databaseName\" [option]\n\nwhere:\n\n- \"path/to/the list file/\" is the path to the file that contains the .bed.gz or .bed data files.\n\n- \"path/to/igd_folder/\" is the path to the output igd folder;\n\n- \"databaseName\" is the name you give to the database, for eaxmple, \"roadmap\"\n\noptions:\n\n-b: bin size in bp (default 16384)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/databio/IGD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genomic-intervals"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IGD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "databio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 288622,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 14682,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2454,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 1389,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 388,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/databio/IGD/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1 Create iGD database from a genome data source folder",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets",
          "How to run iGD",
          "1. Create iGD database"
        ],
        "type": "Text_excerpt",
        "value": "```\nigd create \"/path/to/data_source_folder/*\" \"/path/to/igd_folder/\" \"databaseName\" [option]\n\nwhere:\n\n- \"path/to/data_source_folder/\" is the path of the folder that contains .bed.gz or .bed data files.\n\n- \"path/to/igd_folder/\" is the path to the output igd folder;\n\n- \"databaseName\" is the name you give to the database, for eaxmple, \"roadmap\"\n\noption:\n\n-b: bin-size (power of 2; default 14, which is 16384 bp)\n```"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2 Create iGD database from a list of source files",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets",
          "How to run iGD",
          "1. Create iGD database"
        ],
        "type": "Text_excerpt",
        "value": " \n```\nigd create \"/path/to/source-list file\" \"/path/to/igd_folder/\" \"databaseName\" -f [option]\n\nwhere:\n\n- \"/path/to/source-list file\" is the path to the file that lists the source files\n\n- \"path/to/igd_folder/\" is the path to the output igd folder;\n\n- \"databaseName\" is the name you give to the database, for eaxmple, \"roadmap\"\n\noption:\n\n-b: bin-size (power of 2; default 14, which is 16384 bp)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Search iGD for overlaps",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets",
          "How to run iGD"
        ],
        "type": "Text_excerpt",
        "value": "```\nigd search \"path/to/igd_data_file\" -q \"path/to/query_file\"\n\nwhere:\n\n- path/to/igd_data_file is the path to the igd data\n\n- path/to/query_file is the path to the query file (.bed or .bed.gz)\n\nother options:\n\n-r <chrN start end> (a single query)\n\n-v <signal value 0-1000> (signal value > v)\n\n-o <output file Name>\n\n-s (output Seqpare similarity)\n\n-f (output full overlaps, for -q and -r only)\n\n-m (hitsmap of igd datasets)\n\n```\n\nFor a detailed example, please check out the `vignettes`.\n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:13:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. search the igd database in R (an example for a created igd file)",
        "parent_header": [
          "IGD: A high-performance search engine for large-scale genomic interval datasets",
          "R-wrapper of IGD"
        ],
        "type": "Text_excerpt",
        "value": "Search the igd database with a single query:\n```\n> igd_file = \"igdr_b14/roadmap.igd\"\n> library(IGDr)\n> igd <- IGDr::IGDr(igd_file)\n> hits <- search_1r(igd, \"chr6\", 1000000, 10000000)\n> hits\n```\nSearch the igd database with n queries:\n```\n> igd_file = \"igdr_b14/roadmap.igd\"\n> library(IGDr)\n> igd <- IGDr::IGDr(igd_file)\n> chrms = c(\"chr6\", \"chr1\", \"chr2\")\n> starts = c(10000, 100000, 1000000)\n> ends = (100000, 1000000, 10000000)\n> hits <- search_nr(igd, 3, chrms, starts, ends)\n> hits\n```\nSearch a whole query file chainRn4.bed\n```\n> igd_file = \"igdr_b14/roadmap.igd\"\n> query_file = \"r10000.bed\"\n> library(bit64)\n> library(IGDr)\n> fi = IGDr::getFInfo(igd_file)\n> hits = integer64(fi$nFiles)\n> ret = IGDr::search_all(igd_file, query_file, hits)\n> for(i in 1:fi$nFiles){\n  cat(i, \"\\t\", toString(ret[i]), \"\\t\", toString(fi$fInfo[i,2]), \"\\n\")\n  }\n>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/databio/IGD/master/README.md",
      "technique": "header_analysis"
    }
  ]
}