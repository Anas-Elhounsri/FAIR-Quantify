{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "GenePlexus",
          "Section 4: Additional Information"
        ],
        "type": "Text_excerpt",
        "value": "We are grateful for the support from the members of the [Krishnan Lab](https://www.thekrishnanlab.org).\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GenePlexus",
          "Section 4: Additional Information"
        ],
        "type": "Text_excerpt",
        "value": "If you use this work, please cite:  \nLiu R*, Mancuso CA*, Yannakopoulos A, Johnson KA, Krishnan A (2020) Supervised-learning is an accurate method for network-based gene classification. _Bioinformatics_ doi.org/10.1093/bioinformatics/btaa150.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/krishnanlab/GenePlexus"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-29T15:56:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-15T12:28:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Data, results, and code accompanying the manuscript: \"Supervised learning is an accurate method for network-based gene classification\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9734376300039933,
      "result": {
        "original_header": "GenePlexus",
        "type": "Text_excerpt",
        "value": "This repository contains data and code to generate the results and reproduce the figures and tables found in [_Supervised learning is an accurate method for network-based gene classification_](https://doi.org/10.1093/bioinformatics/btaa150) `Bioinformatics DOI: 10.1093/bioinformatics/btaa150`. This work focuses on comparing two classes of network-based gene classification methods: supervised learning (SL) and label propagation (LP). The comparison is performed systematically across diverse prediction tasks (functions, diseases, and traits) and molecular networks using meaningful validation schemes and evaluation metrics. Based on this extensive analysis, we find that supervised learning outperforms label propagation for gene classification, especially for function prediction. \nThis repo provides: \n1. The data, results, and figures presented in the manuscript.\n2. Code to regenerate the results.\n3. The ability to add a new method. \n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.996628444809698,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "The data used in this study (networks, embeddings, and genesets) is available on [Zenodo](https://zenodo.org/record/3352348/). To get the data run\n```\nsh get_data.sh\n```\nWe note that data for KEGG and InBioMap are not included as they do not provide a permissive enough license.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9534377463079001,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "`results/`: This directory contains two files:\n1. `main_result.tsv`: This file contains all the results used to compare the SL and LP methods.\n2. `mdlsel_result.tsv`: This file contains all the results used for model selection for supervised learning and random walk with restart.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.89113675627972,
      "result": {
        "original_header": "Geneset Properties",
        "type": "Text_excerpt",
        "value": "`properties/`: This directory contains the network properties of every geneset based on every network.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9622064938158572,
      "result": {
        "original_header": "Figures/Tables",
        "type": "Text_excerpt",
        "value": "`figures_tables/`: This directory contains all the pre-generated figures and tables.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9152027256232913,
      "result": {
        "original_header": "Section 3: Adding a New Method",
        "type": "Text_excerpt",
        "value": "1. Create a new class object in `src/core/models.py`. A template for how to do this is included at the bottom of the `models.py` script. \n2. The file `src/main.py` will need to be updated in two places. First, a new model dictionary will have to be added to the function _get_mdl_dict_. A template of how to do this is included in that function. Second, the model name will have to be added to the _all_methods_ variable.\n3. The model name will need to be added to the _-m_ argument in the scripts that re-generate the scores. We note that `generate_figures.sh` and `generate_tables.sh` will not work when a new method is added.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9895852394511518,
      "result": {
        "original_header": "Funding",
        "type": "Text_excerpt",
        "value": "This work was primarily supported by US National Institutes of Health (NIH) grants R35 GM128765 to AK and in part by MSU start-up funds to AK and MSU Engineering Distinguished Fellowship to AY.\n \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9047661321758105,
      "result": {
        "original_header": "GIANT (version used is 1.0)",
        "type": "Text_excerpt",
        "value": "* Greene CS, Krishnan A, Wong AK, Ricciotti E, Zelaya RA, Himmelstein DS, Zhang R, Hartmann BM, Zaslavsky E, Sealfon SC, Chasman DI, FitzGerald GA, Dolinski K, Grosser T, Troyanskaya OG. (2015) Understanding multicellular function and disease with human tissue-specific networks. _Nature Genetics_ 47:569-576. \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8499258108314439,
      "result": {
        "original_header": "STRING and STRING-EXP (version used is v.10)",
        "type": "Text_excerpt",
        "value": "* Szklarczyk D, Franceschini A, Wyder S, Forslund K, Heller D, Huerta-Cepas J, Simonovic M, Roth A, Santos A, Tsafou KP, Kuhn M, Bork P, Jensen LJ, von Mering C. (2015) STRING v10: protein-protein interaction networks, integrated over the tree of life. _Nucleic Acids Research_ 43:D447-452. \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.904878119012554,
      "result": {
        "original_header": "GOBPtmp and GOBP (gene annotation for GOBP are from verison 2 of MyGeneInfo)",
        "type": "Text_excerpt",
        "value": "* Ashburner M, Ball CA, Blake JA, Botstein D, Butler H, Cherry JM, Davis AP, Dolinski K, Dwight SS, Eppig JT, Harris MA, Hill DP, Issel-Tarver L, Kasarskis A, Lewis S, Matese JC, Richardson JE, Ringwald M, Rubin GM, Sherlock G. (2000) Gene ontology: tool for the unification of biology. The Gene Ontology Consortium. _Nature Genetics_ 25:25-29.\n* The Gene Ontology Consortium. (2019) The Gene Ontology Resource: 20 years and still GOing strong. _Nucleic Acids Research_ 47:D330-338.\n* Wu C, MacLeod I, Su AI (2013) BioGPS and MyGene.info: organizing online, gene-centric information. _Nucleic Acids Research_ 41:D561-D565. \n* Xin J, Mark A, Afrasiabi C, Tsueng G, Juchler M, Gopal N, Stupp GS, Putman TE, Ainscough BJ, Griffith OL, Torkamani A, Whetzel PL, Mungall CJ, Mooney SD, Su AI, Wu C (2016) High-performance web services for querying gene and variant annotation. _Genome Biology_ 17:1-7. \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9667125149002112,
      "result": {
        "original_header": "DisGeNet and BeFree (version used 5.0)",
        "type": "Text_excerpt",
        "value": "* Pi\u00f1ero J, Queralt-Rosinach N, Bravo \u00c0, Deu-Pons J, Bauer-Mehren A, Baron M, Sanz F, Furlong LI. (2015) DisGeNET: a discovery platform for the dynamical exploration of human diseases and their genes. _Database_ bav028.\n* Pi\u00f1ero J, Bravo \u00c0, Queralt-Rosinach N, Guti\u00e9rrez-Sacrist\u00e1n A, Deu-Pons J, Centeno E, Garc\u00eda-Garc\u00eda J, Sanz F, Furlong LI. (2017) DisGeNET: a comprehensive platform integrating information on human disease-associated genes and variants. _Nucleic Acids Research_ 45:D833-839.\n* Schriml LM, Mitraka E, Munro J, Tauber B, Schor M, Nickle L, Felix V, Jeng L, Bearer C, Lichenstein R, Bisordi K, Campion N, Hyman B, Kurland D, Oates CP, Kibbey S, Sreekumar P, Le C, Giglio M, Greene C. (2019) Human Disease Ontology 2018 update: classification, content and workflow expansion. _Nucleic Acids Research_ 47:D955-D962. \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8248580010635411,
      "result": {
        "original_header": "MGI (data retrieved on 2018-10-01)",
        "type": "Text_excerpt",
        "value": "* Smith CL, Blake JA, Kadin JA, Richardson JE, Bult CJ, Mouse Genome Database Group. (2018) Mouse Genome Database (MGD)-2018: knowledgebase for the laboratory mouse. _Nucleic Acids Research_ 46:D836-842.\n* Smith CL, Eppig JT. (2009) The mammalian phenotype ontology: enabling robust annotation and comparative analysis. _WIREs Systems Biology and Medicine_ 3:390-399.  \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9937072716439875,
      "result": {
        "original_header": "KEGGBP (version used is 6.1)",
        "type": "Text_excerpt",
        "value": "* Kanehisa M, Goto S. (2000) KEGG: kyoto encyclopedia of genes and genomes. _Nucleic Acids Research_ 28:27-30.\n* Kanehisa M, Furumichi M, Tanabe M, Sato Y, Morishima K. (2017) KEGG: new perspectives on genomes, pathways, diseases and drugs. _Nucleic Acids Research_ 45:D353-361.\n* Kanehisa M, Sato Y, Furumichi M, Morishima K, Tanabe M. (2019) New approach for understanding genome variations in KEGG. _Nucleic Acids Research_ 47:D590-595.\n* Subramanian A, Tamayo P, Mootha VK, Mukherjee S, Ebert BL, Gillette MA, Paulovich A, Pomeroy SL, Golub TR, Lander ES, Mesirov JP. (2005) Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles. _Proceedings of the National Academy of Sciences U.S.A._ 43:15545-50.\n* Liberzon A, Subramanian A, Pinchback R, Thorvaldsd\u00f3ttir H, Tamayo P, Mesirov JP. (2011) Molecular signatures database (MSigDB) 3.0. _Bioinformatics_ 12:1739-40.  \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "GWAS (data downloaded from Synapse at https://www.synapse.org/#!Synapse:syn11944948)",
        "parent_header": [
          "GenePlexus",
          "Section 4: Additional Information",
          "Referecnes",
          "Geneset Collections"
        ],
        "type": "Text_excerpt",
        "value": "* Choobdar S, Ahsen ME, Crawford J, Tomasoni M, Fang T, Lamparter D, Lin J, Hescott B, Hu X, Mercer J, Natoli T, Narayan R, The DREAM Module Identification Challenge Consortium, Subramanian A, Zhang JD, Stolovitzky G, Kutalik Z, Lage K, Slonim DK, Saez-Rodriguez J, Cowen LJ, Bergmann S, Marbach D. (2019) Open Community Challenge Reveals Molecular Network Modules with Key Roles in Diseases. _bioRxiv_ doi: https://doi.org/10.1101/265553."
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/krishnanlab/GenePlexus/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/krishnanlab/GenePlexus/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "krishnanlab/GenePlexus"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenePlexus"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/get_data.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/run/generate_mdlsel_result.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/run/generate_tables.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/run/generate_main_result.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/run/generate_figures.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/run/generate_geneset_properties.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/demo/test_run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/krishnanlab/GenePlexus/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This file contains the licensing information for all data used in this project.\n\nThis repository is released under the [Creative Commons License: Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode). This license is chosen as it is the most stringent license used by any network or geneset collection whose data is provided in this repository. \n\n## License information for networks and genesets collections used in this work\n\n* STRING, STRING-EXP, GWAS, MGI, GOBPtmp and GOBP use the [Creative Commons License: Attribution 4.0 International](https://creativecommons.org/licenses/by/4.0/legalcode). \n\n* DisGenet and BeFree use the [Creative Commons License: Attribution-NonCommercial-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode).\n\n* BioGRID, InBioMap and KEGGBP have terms of use on their respective websites (see below).\n\nThe location of the license agreement or terms-of-use for each network or geneset collection can be found by clicking the following links. We note that no license agreement was available for GIANT, however we have obtained permission from the owner of the material to redistribute the network and they have noted that they will be adding a [Creative Commons License: Attribution-NonCommercial 4.0 International](https://creativecommons.org/licenses/by-nc/4.0/legalcode) to the website soon.\n\n* [STRING and STRING-EXP](https://string-db.org/cgi/access.pl?footer_active_subpage=licensing)\n* [BioGRID](https://wiki.thebiogrid.org/doku.php/terms_and_conditions)\n* [InBioMap](https://www.intomics.com/inbio/map.html#terms_of_use)\n* [GOBPtmp and GOBP](http://geneontology.org/docs/go-citation-policy/)\n* [MGI](http://www.informatics.jax.org/mgihome/other/Ontology_Licenses.shtml)\n* [GWAS, data obtained thru SYNAPSE](https://www.synapse.org/#!Synapse:syn6156761/wiki/400645)\n* [DiGeNet and BeFree](http://www.disgenet.org/legal)\n* [KEGGBP](https://www.kegg.jp/kegg/legal.html)\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "GenePlexus",
          "Section 4: Additional Information"
        ],
        "type": "Text_excerpt",
        "value": "See [LICENSE.md](https://github.com/krishnanlab/GenePlexus/LICENSE.md) for license information for all geneset collections and networks used in this project.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenePlexus"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "krishnanlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 72312,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3703,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "GenePlexus",
          "Section 2: Regenerating the Results and Figures/Tables"
        ],
        "type": "Text_excerpt",
        "value": "This code was tested on an Anaconda distribution of python. The major packages used are:\n```\npython 3.6.5\nnumpy 1.14.3\nscipy 1.1.0\npandas 0.23.0\nscikit-learn 0.19.1\nmatplotlib 2.2.2\nseaborn 0.8.1\nstatsmodels 0.9.0\n```\nThe parallelization of the code was tested with Slurm on the high performance computing cluster at Michigan State University.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing",
        "parent_header": [
          "GenePlexus",
          "Section 2: Regenerating the Results and Figures/Tables",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Run the following two lines of code to test if the code works on one set of parameters: GOBP (geneset collection), STRING (network), SL-A, and LP-I (two methods):\n```\ncd demo\nsh test_run.sh\n```\nThis will save a sample results files named `test.tsv` into the `results/` directory. This script takes a few minutes to run. \n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "run",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:41:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "GenePlexus",
          "Section 4: Additional Information"
        ],
        "type": "Text_excerpt",
        "value": "For support please contact [Remy Liu](https://twitter.com/RemyLau3) at liurenmi@msu.edu or [Chris Mancuso](https://twitter.com/ChrisAMancuso) at mancus16@msu.edu.\n"
      },
      "source": "https://raw.githubusercontent.com/krishnanlab/GenePlexus/master/README.md",
      "technique": "header_analysis"
    }
  ]
}