{
  "application_domain": [
    {
      "confidence": 17.06,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Protmapper"
        ],
        "type": "Text_excerpt",
        "value": "```bibtex\n@article{bachman2022protmapper,\n  author = {Bachman, John A and Sorger, Peter K and Gyori, Benjamin M},\n  doi = {10.1101/822668},\n  journal = {bioRxiv},\n  publisher = {Cold Spring Harbor Laboratory},\n  title = {{Assembling a corpus of phosphoproteomic annotations using ProtMapper to normalize site information from databases and text mining}},\n  url = {https://www.biorxiv.org/content/10.1101/822668v4},\n  year = {2022}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Bachman, John A and Sorger, Peter K and Gyori, Benjamin M",
        "doi": "10.1101/822668",
        "format": "bibtex",
        "title": "{Assembling a corpus of phosphoproteomic annotations using ProtMapper to normalize site information from databases and text mining}",
        "type": "Text_excerpt",
        "url": "https://www.biorxiv.org/content/10.1101/822668v4",
        "value": "@article{bachman2022protmapper,\n    year = {2022},\n    url = {https://www.biorxiv.org/content/10.1101/822668v4},\n    title = {{Assembling a corpus of phosphoproteomic annotations using ProtMapper to normalize site information from databases and text mining}},\n    publisher = {Cold Spring Harbor Laboratory},\n    journal = {bioRxiv},\n    doi = {10.1101/822668},\n    author = {Bachman, John A and Sorger, Peter K and Gyori, Benjamin M},\n}"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gyorilab/protmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-11T18:21:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T11:51:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Map amino acid sites of post-translational modifications from models or data to reference positions."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9279818085673062,
      "result": {
        "original_header": "Protmapper",
        "type": "Text_excerpt",
        "value": "The Protmapper maps protein sites to the human reference\nsequence based on UniProt, PhosphoSitePlus, and manual curation. \n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9872054238768655,
      "result": {
        "original_header": "Funding",
        "type": "Text_excerpt",
        "value": "The development of Protmapper is funded under the DARPA grants W911NF018-1-0124\nand HR00112220036.\n \n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Protmapper"
        ],
        "type": "Text_excerpt",
        "value": "For a detailed documentation of the Protmapper, visit http://protmapper.readthedocs.io\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/indralab/protmapper/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gyorilab/protmapper/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gyorilab/protmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protmapper"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/indralab/protmapper/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python package",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "The Protmapper is a Python package that is available on PyPI and can be\ninstalled as:\n\n```bash\npip install protmapper\n```\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker container",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "Protmapper can be run as a local service via a Docker container exposing a\nREST API as:\n\n```bash\ndocker run -d -p 8008:8008 gyorilab/protmapper:latest\n```\n\nExample: once the container is running, you can send requests to the REST API\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"site_list\": [[\"P28482\", \"uniprot\", \"T\", \"184\"]]}' http://localhost:8008/map_sitelist_to_human_ref\n```\n\nwhich is equivalent to the following Python code using the `requests` package\n\n```python\nimport requests\nurl = 'http://localhost:8008/map_sitelist_to_human_ref'\ndata = {'site_list': [['P28482', 'uniprot', 'T', '184']]}\nresponse = requests.post(url, json=data)\nprint(response.json())\n```\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line interface",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "In addition to supporting usage via a Python API and a REST service,\nProtmapper also provides a command line interface that can be used as follows.\n\n```bash\nRun Protmapper on a list of proteins with residues and sites provided in a\ntext file.\n\npositional arguments:\n  input                 Path to an input file. The input file is a text file\n                        in which each row consists of four comma separated\n                        values, with the first element being a protein ID, the\n                        second, the namespace in which that ID is valid\n                        (uniprot or hgnc),third, an amino acid represented as\n                        a single capital letter, and fourth, a site position\n                        on the protein.\n  output                Path to the output file to be generated. Each line of\n                        the output file corresponds to a line in the input\n                        file. Each line represents a mapped site produced by\n                        Protmapper.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --peptide             If given, the third element of each row of the input\n                        file is a peptide (amino acid sequence) rather than a\n                        single amino acid residue. In this case, peptide-\n                        oriented mappings are applied. In this mode the\n                        following boolean arguments are ignored.\n  --no_methionine_offset\n                        If given, will not check for off-by-one errors in site\n                        position (possibly) attributable to site numbering\n                        from mature proteins after cleavage of the initial\n                        methionine.\n  --no_orthology_mapping\n                        If given, will not check sequence positions for known\n                        modification sites in mouse or rat sequences (based on\n                        PhosphoSitePlus data).\n  --no_isoform_mapping  If given, will not check sequence positions for known\n                        modifications in other human isoforms of the protein\n                        (based on PhosphoSitePlus data).\n```\n\nExample: the sample file [cli_input.csv](https://raw.githubusercontent.com/gyorilab/protmapper/master/protmapper/tests/cli_input.csv)\nhas the following content\n\n```csv\nMAPK1,hgnc,T,183\nMAPK1,hgnc,T,184\nMAPK1,hgnc,T,185\nMAPK1,hgnc,T,186\n```\n\nBy running the following command\n\n```bash\nprotmapper cli_input.csv output.csv\n```\n\nwe get `output.csv` which has the following content\n\n```csv\nup_id,error_code,valid,orig_res,orig_pos,mapped_id,mapped_res,mapped_pos,description,gene_name\nP28482,,False,T,183,P28482,T,185,INFERRED_MOUSE_SITE,MAPK1\nP28482,,False,T,184,P28482,T,185,INFERRED_METHIONINE_CLEAVAGE,MAPK1\nP28482,,True,T,185,,,,VALID,MAPK1\nP28482,,False,T,186,,,,NO_MAPPING_FOUND,MAPK1\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gyorilab/protmapper/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) 2024, Gyori lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "protmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gyorilab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 198369,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 137,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:40:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python package",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "The Protmapper is a Python package that is available on PyPI and can be\ninstalled as:\n\n```bash\npip install protmapper\n```\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker container",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "Protmapper can be run as a local service via a Docker container exposing a\nREST API as:\n\n```bash\ndocker run -d -p 8008:8008 gyorilab/protmapper:latest\n```\n\nExample: once the container is running, you can send requests to the REST API\n\n```bash\ncurl -X POST -H \"Content-Type: application/json\" -d '{\"site_list\": [[\"P28482\", \"uniprot\", \"T\", \"184\"]]}' http://localhost:8008/map_sitelist_to_human_ref\n```\n\nwhich is equivalent to the following Python code using the `requests` package\n\n```python\nimport requests\nurl = 'http://localhost:8008/map_sitelist_to_human_ref'\ndata = {'site_list': [['P28482', 'uniprot', 'T', '184']]}\nresponse = requests.post(url, json=data)\nprint(response.json())\n```\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line interface",
        "parent_header": [
          "Protmapper",
          "Installation and usage"
        ],
        "type": "Text_excerpt",
        "value": "In addition to supporting usage via a Python API and a REST service,\nProtmapper also provides a command line interface that can be used as follows.\n\n```bash\nRun Protmapper on a list of proteins with residues and sites provided in a\ntext file.\n\npositional arguments:\n  input                 Path to an input file. The input file is a text file\n                        in which each row consists of four comma separated\n                        values, with the first element being a protein ID, the\n                        second, the namespace in which that ID is valid\n                        (uniprot or hgnc),third, an amino acid represented as\n                        a single capital letter, and fourth, a site position\n                        on the protein.\n  output                Path to the output file to be generated. Each line of\n                        the output file corresponds to a line in the input\n                        file. Each line represents a mapped site produced by\n                        Protmapper.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --peptide             If given, the third element of each row of the input\n                        file is a peptide (amino acid sequence) rather than a\n                        single amino acid residue. In this case, peptide-\n                        oriented mappings are applied. In this mode the\n                        following boolean arguments are ignored.\n  --no_methionine_offset\n                        If given, will not check for off-by-one errors in site\n                        position (possibly) attributable to site numbering\n                        from mature proteins after cleavage of the initial\n                        methionine.\n  --no_orthology_mapping\n                        If given, will not check sequence positions for known\n                        modification sites in mouse or rat sequences (based on\n                        PhosphoSitePlus data).\n  --no_isoform_mapping  If given, will not check sequence positions for known\n                        modifications in other human isoforms of the protein\n                        (based on PhosphoSitePlus data).\n```\n\nExample: the sample file [cli_input.csv](https://raw.githubusercontent.com/gyorilab/protmapper/master/protmapper/tests/cli_input.csv)\nhas the following content\n\n```csv\nMAPK1,hgnc,T,183\nMAPK1,hgnc,T,184\nMAPK1,hgnc,T,185\nMAPK1,hgnc,T,186\n```\n\nBy running the following command\n\n```bash\nprotmapper cli_input.csv output.csv\n```\n\nwe get `output.csv` which has the following content\n\n```csv\nup_id,error_code,valid,orig_res,orig_pos,mapped_id,mapped_res,mapped_pos,description,gene_name\nP28482,,False,T,183,P28482,T,185,INFERRED_MOUSE_SITE,MAPK1\nP28482,,False,T,184,P28482,T,185,INFERRED_METHIONINE_CLEAVAGE,MAPK1\nP28482,,True,T,185,,,,VALID,MAPK1\nP28482,,False,T,186,,,,NO_MAPPING_FOUND,MAPK1\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/indralab/protmapper/master/README.md",
      "technique": "header_analysis"
    }
  ]
}