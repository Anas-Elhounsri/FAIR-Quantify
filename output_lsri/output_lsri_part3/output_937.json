{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/reneshbedre/HTSQualC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-04T17:51:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-21T09:26:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "High-throughput sequencing (HTS) data quality control analysis software tool "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.994724871729006,
      "result": {
        "original_header": "HTSQualC",
        "type": "Text_excerpt",
        "value": "HTSQualC is an automated quality control analysis tool for a single and \npaired-end high-throughput sequencing data (HTS) generated from Illumina\nsequencing platforms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9945394221257543,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Simultaneously filter and/or trim reads for adapter or primer \n  contamination, uncalled bases (N), and low-quality reads\n- Supports single and paired-end reads\n- Analyze multiple samples simultaneously\n- Parallel computation for accelerating the speed of analysis\n- Visualization and statistics\n- Docker image is available\n- Available on CyVerse Discovery Environment (DE)\n- No dependency on an external open-source tool\n \n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/reneshbedre/HTSQualC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/reneshbedre/HTSQualC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "reneshbedre/HTSQualC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HTSQualC"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Clone or download HTSQualC using following command,\n\n```\ngit clone https://github.com/reneshbedre/HTSQualC.git\n```\n\nTo install HTSQualC, run following command in the root folder,\n\n```\npython setup.py install\n```\n\nInstall using conda,\n\n```\nconda install -c bioconda htseqqc\n```\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/reneshbedre/HTSQualC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Renesh Bedre\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "This project is available under the MIT License. See complete details in [LICENSE](LICENSE) file.\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HTSQualC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "reneshbedre"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 143701,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 847,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 845,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "You need Python 3 (tested on 3.6 and 3.7) to install and run HTSQualC. Following Python 3 \npackages need to install before running the HTSQualC. If you have not .\ninstalled these packages, HTSQualC will guide you to install them.\n\n```\nnumpy\npysam\nmatplotlib\ntermcolor\ndatetime\n```\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:56:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Print help message to see all required and optional parameters,\n\n```\nfilter.py -h\n```\n```\nusage: filter.py [-h] [-a INPUT_FILES_1] [-b INPUT_FILES_2] [-c QUAL_FMT]\n                 [-e N_CONT] [-f ADPT_SEQS] [-d MIN_SIZE] [-g ADPT_MATCH]\n                 [-i QUAL_THRESH] [-n TRIM_OPT] [-p WIND_SIZE]\n                 [-r MIN_LEN_FILT] [-q CPU] [-m OUT_FMT] [-v VIS_OPT] [-z COMPRESS]\n                 [--version]\n\nQuality control analysis of single and paired-end sequence data\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a INPUT_FILES_1, --p1 INPUT_FILES_1\n                        Single end input files or left files for paired-end\n                        data (.fastq, .fq). Multiple sample files must be\n                        separated by comma or space\n  -b INPUT_FILES_2, --p2 INPUT_FILES_2\n                        Right files for paired-end data (.fastq, .fq).\n                        Multiple files must be separated by comma or space\n  -c QUAL_FMT, --qfmt QUAL_FMT\n                        Quality value format [1= Illumina 1.8, 2= Illumina\n                        1.3,3= Sanger]. If quality format not provided, it\n                        will automatically detect based on sequence data\n  -e N_CONT, --nb N_CONT\n                        Filter the reads containing given % of uncalled bases\n                        (N)\n  -f ADPT_SEQS, --adp ADPT_SEQS\n                        Trim the adapter and truncate the read sequence\n                        (multiple adapter sequences must be separated by\n                        comma)\n  -d MIN_SIZE, --msz MIN_SIZE\n                        Filter the reads which are lesser than minimum size\n  -g ADPT_MATCH, --per ADPT_MATCH\n                        Truncate the read sequence if it matches to adapter\n                        sequence equal or more than given percent (0.0-1.0)\n                        [default=0.9]\n  -i QUAL_THRESH, --qthr QUAL_THRESH\n                        Filter the read sequence if average quality of bases\n                        in reads is lower than threshold (1-40) [default:20]\n  -n TRIM_OPT, --trim TRIM_OPT\n                        If trim option set to True, the reads with low quality\n                        (as defined by option --qthr) will be trimmed instead\n                        of discarding [True|False] [default: False]\n  -p WIND_SIZE, --wsz WIND_SIZE\n                        The window size for trimming (5->3) the reads. This\n                        option should always set when -trim option is defined\n                        [default: 5]\n  -r MIN_LEN_FILT, --mlk MIN_LEN_FILT\n                        Minimum length of the reads to retain after trimming\n  -q CPU, --cpu CPU     Number of CPU [default:2]\n  -m OUT_FMT, --ofmt OUT_FMT"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "  -v VIS_OPT, --no-vis VIS_OPT\n                        No figures will be produced [True|False]\n                        [default:False]\n  -z COMPRESS, --compress COMPRESS\n                        Compress (.gz) the filtered FASTQ output [True|False]   \n                        [default:False]                   \n  --version             show program's version number and exit\n```\n\n\nRun For single-end reads\n\n```\n# for single sample\nfilter.py OPTIONS -a fastq_file\n\n# for multiple samples\nfilter.py OPTIONS -a fastq_file_1,fastq_file_2\n```\n\nFilter paired-end reads\n```\n# for single sample\nfilter.py OPTIONS -a fastq_file_left -b fastq_file_right\n# for multiple samples\nfilter.py OPTIONS -a fastq_file_left_1,fastq_file_left_2 -b fastq_file_right_1,fastq_file_right_2\n```\n\n### Output\nHTSQualC produces the filtered cleaned HTS data as FASTQ/FASTA files, \nand statistics and visualization of filtered cleaned HTS datasets. The\noutput will be saved in folder with name ending as filtering_out.\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "HTSQualC Analysis commands used for test datasets",
        "parent_header": [
          "HTSQualC",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "**Download the test paired and single end data using NCBI SRA toolkit**\n```\nfastq-dump --split-files SRR2165176\nfastq-dump --split-files SRR2165177\nfastq-dump --split-files SRR2165178\nfastq-dump  SRR1805340\n```\n\n*Run HTSQualC as a command line tool (Linux and Mac)*\n- for paired end data with default parameter (setting 1)\n\n`filter.py --cpu 18 --p1 SRR2165176_1.fastq --p2 SRR2165176_2.fastq`\n\n- for paired end data with quality threshold, adapter sequences, and \n  uncalled based parameters (setting 2)\n  \n`filter.py --cpu 18 --qthr 25 --nb 5 --adp AGATCGGAAGAGCACACGTCTGAACTCCAGTCA,AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --p1 SRR2165176_1.fastq --p2 SRR2165176_2.fastq` \n\n- for paired end data with default parameter and multiple samples (setting 3)\n\n`filter.py --cpu 18 --p1 SRR2165176_1.fastq,SRR2165177_1.fastq,SRR2165178_1.fastq --p2 SRR2165176_2.fastq,SRR2165177_2.fastq,SRR2165178_2.fastq`\n\n- for single end data with default parameter (setting 4)\n\n`filter.py --cpu 18 --p1 SRR1805340.fastq`\n"
      },
      "source": "https://raw.githubusercontent.com/reneshbedre/HTSQualC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}