{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite?",
        "type": "Text_excerpt",
        "value": "You can cite CIME using the following bibtex:\n\n```bibtex\n@article{humerheberle2022cime,\n  author={Humer, Christina and Heberle, Henry and Montanari, Floriane and Wolf, Thomas and Huber, Florian and Henderson, Ryan and Heinrich, Julian and Streit, Marc},\n  journal={Journal of Cheminformatics},\n  title={{ChemInformatics Model Explorer (CIME)}: Exploratory analysis of chemical model explanations},\n  year={2022},\n  doi={10.1186/s13321-022-00600-z},\n  volume={14},\n  number={21},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Humer, Christina and Heberle, Henry and Montanari, Floriane and Wolf, Thomas and Huber, Florian and Henderson, Ryan and Heinrich, Julian and Streit, Marc",
        "doi": "10.1186/s13321-022-00600-z",
        "format": "bibtex",
        "title": "{ChemInformatics Model Explorer (CIME)}: Exploratory analysis of chemical model explanations",
        "type": "Text_excerpt",
        "value": "@article{humerheberle2022cime,\n    number = {21},\n    volume = {14},\n    doi = {10.1186/s13321-022-00600-z},\n    year = {2022},\n    title = {{ChemInformatics Model Explorer (CIME)}: Exploratory analysis of chemical model explanations},\n    journal = {Journal of Cheminformatics},\n    author = {Humer, Christina and Heberle, Henry and Montanari, Floriane and Wolf, Thomas and Huber, Florian and Henderson, Ryan and Heinrich, Julian and Streit, Marc},\n}"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jku-vds-lab/cime"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-07T13:02:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T15:54:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cime public repository"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.930300415693325,
      "result": {
        "original_header": "DOI: 10.1186/s13321-022-00600-z",
        "type": "Text_excerpt",
        "value": "This repository includes:\n* The implementation of CIME\n    * [Front-end](Application/) web application written in TypeScript using React\n    * [Back-end](Application/backend/) python server\n* [Documentation](#documentation)\n* [Installation](#installation)\n* [How to cite?](#how-to-cite) \nCheck out our [paper](https://doi.org/10.1186/s13321-022-00600-z) for further details about the implementation and use cases of CIME.  \nCheck out the [DEMO website](https://cime-demo.jku-vds-lab.at) of CIME, which includes the datasets used in the use cases. \n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "The ChemInformatics Model Explorer (short CIME) extension of the Projection Space Explorer allows users to interactively explore a fixed subspace of chemical compounds.\nUsers can apply a 2D projection to the provided data, and additionally show the high-dimensional data in a LineUp table.\nFurthermore, users can select datapoints and show the 2D compound structures of all selected items, aligned to each other, in a side-view.\nIf provided in the data, users can change the representation in the side-view to show atom-level attributions in the 2D compound structure. \nThis could be used for comparing neighbors for example to check if machine learning model explanations - generated for those datapoints - make sense.\nUsing the grouping tool allows for easier interaction with item neighborhoods.\n\nInstructions for installing the application are provided at the end of this documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "General/Controls",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "This section explains the general layout of the tool and the basic controls with which you can interact with the tool.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "View Components",
        "parent_header": [
          "Documentation",
          "General/Controls"
        ],
        "type": "Text_excerpt",
        "value": "- Left Menu Drawer (orange): Shows tabs that contain different groups of actions\n- Center View (yellow): Shows the current projection and allows the user to interact with the low dimensional projection of the data items\n- Table Component (blue): Can be dragged up from the bottom of the window to show a [LineUp](https://lineup.js.org/) table of the high dimensional space of the data items\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500382-9d5b3100-8d88-11eb-9b2e-8229ea1daf4c.png\" width=\"700\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Controls",
        "parent_header": [
          "Documentation",
          "General/Controls"
        ],
        "type": "Text_excerpt",
        "value": "The following describes a list of controls:\n- hover over item: shows a detailed view of the item\n- hover over group center: shows group label\n- left-click on item: select this item\n- left-click + shift on item: toggle the selection status (i.e. if the item is selected, it is removed from selection; if the item is not selected, it is added to the selection)\n- left-click on group-center: select the whole group\n- left-click + shift on group-center: add the group to the selection\n- left-click + drag on group-center: draw a storytelling arrow to another group center\n- left-click + drag: new selection of items\n- left-click + shift + drag: toggles the selection (i.e. unselected points that are within the lasso are added to the selection and selected points that are within the lasso are deselected)\n- right-click + drag: allows you to move the whole scatterplot\n- mouse wheel: zoom in and out to get a more/less detailed view of the items in the scatterplot\n- right-click on background or item: opens a context menu that allows to create a group from the selected points\n- right-click on group center: opens group context menu that allows to delete a group or start the storytelling feature\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dataset",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "When loading the website there is a default dataset loaded, which is called \"test.sdf\".\nAdditionally, users can load datasets that were already uploaded previously or they can upload their own custom dataset.\nThe list of uploaded files includes all SDF files that are available in the backend (from any user!) and can be deleted with the delete button next to the filename.\nThe list can also be manually refreshed with the refresh button next to \"Uploaded Files\" (this is only necessary if another user uploads a file during a simultaneous session and the current user needs this exact file).\n\nIf a user wants to upload a custom file they have to use the file format that is described in the \u201cData Format\u201d subsection. We provide an [SDF generation example](Examples/) to get users started with their own datasets.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data Format",
        "parent_header": [
          "Documentation",
          "Dataset"
        ],
        "type": "Text_excerpt",
        "value": "Data is handed to the system using a [Structure-Data File (SDF)](https://en.wikipedia.org/wiki/Chemical_table_file#SDF) that contains a collection of chemical compounds and additional properties that can be customized.\nNew files are first uploaded to the python backend that runs with Bottle (https://bottlepy.org/docs/dev/) and then processed with the help of the RDKit framework (https://www.rdkit.org/).\nFor big files, the initial upload and preprocessing can take several minutes. If the files are already uploaded, it is much faster.\n\nProperties can be compound-specific (i.e. for the whole datapoint) or atom-specific (i.e. one value for each atom in the compound). Details are described in the next subsections.\n\nA small example can be found in \u201cbackend/test.sdf\u201d. Datasets used in CIME's article are available in the data repository: [https://www.doi.org/10.17605/OSF.IO/KNS6M](https://www.doi.org/10.17605/OSF.IO/KNS6M)\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compound Properties",
        "parent_header": [
          "Documentation",
          "Dataset",
          "Data Format"
        ],
        "type": "Text_excerpt",
        "value": "These properties can be used for projection and can be shown in the LineUp table (like solubility, atom weight, or any other property that is important to the user). \nProperties without semantic meaning like fingerprints or the embedding space of a compound can be used for projection, but are not shown in the table to reduce unnecessary information and loading times. Such properties can be specified with the \u201cfingerprint\u201d modifier as described in the \u201cModifiers\u201d subsection. \n\nCompound-specific properties can contain arbitrary values, however the naming should be consistent for all compounds (i.e. each property should be present for each compound).\n\nThere are special properties that are handled differently by the system:\n- Including properties **x** and **y** tells the system to initialize the scatterplot according to these values.\n- The property **groupLabel** specifies the group each compound belongs to. \n "
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Atom Properties",
        "parent_header": [
          "Documentation",
          "Dataset",
          "Data Format"
        ],
        "type": "Text_excerpt",
        "value": "Atom-specific properties are recognized by the backend if the property starts with **atom.dprops**. Those properties are interpreted as attribution scores and shown on top of the compound structure with a heatmap and contour lines (see section \u201cDetails\u201d for more information.\n\nAtom properties must contain one value for each atom of the compound. They can be easily generated with RDKit: https://www.rdkit.org/docs/RDKit_Book.html#atom-properties-and-sdf-files. \n\nIn the frontend there is an autocomplete user input that groups atom properties. Values for the autocomplete are extracted as follows (e.g. example property \"atom.dprop.rep_0\"):\n- atom.dprop is dropped because it is just a modifier that is needed by the backend\n- group name: substring that includes everything before the last underscore (e.g. \"rep\")\n- value: substring after the last underscore (e.g. \"0\")\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Modifiers",
        "parent_header": [
          "Documentation",
          "Dataset"
        ],
        "type": "Text_excerpt",
        "value": "Modifiers are used to group compound properties. This enables the system to provide features that enhance usability (e.g. when projecting the data users can choose, which properties should be used for the projection; with grouping, users are allowed to (de-)select entire groups, which is important if a group consists of hundreds of properties as in the case of fingerprints).\nSome modifiers have special functions, which will be explained later in this section.\n\nBy default the system recognizes the following modifiers: \"fingerprint\", \"rep\", \"pred\", \"predicted\", \"measured\", \"smiles\".\nWhen choosing a file a dialog window opens where users can specify custom modifiers in addition to the default set of modifiers.\n\nTo decorate a property with a modifier, the modifier has to be prepended to the property name and separated by an underscore (e.g. \u201cfingerprint_1\u201d, \u201cfingerprint_2\u201d etc).\n\nThe predefined **smiles** modifier has a special function: if a property is decorated with \"smiles_*\" the system will recognize the property as a SMILES string and thus show the compound structure in the LineUp table.\n\nIf there is no **fingerprint** modifier in the properties of a dataset, the system will create them automatically using the built-in RDKit function: https://rdkit.readthedocs.io/en/latest/GettingStartedInPython.html#morgan-fingerprints-circular-fingerprints. \n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Project",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "When the data is loaded the x and y properties are used as initial positions for the scatterplot. If x and y are not specified they will be randomly initialized. \nThe values for x and y can then be calculated with a projection method. \n\nCurrently, only UMAP projection is available for CIME. To implement the projection we used this library: https://github.com/PAIR-code/umap-js. \nThe JavaScript library code is a reimplementation of this python library https://github.com/lmcinnes/umap, with the difference that the JS library uses random seed points as initialization by default. \n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500515-be238680-8d88-11eb-82a0-be61b1f77697.png\" width=\"300\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters (orange)",
        "parent_header": [
          "Documentation",
          "Project"
        ],
        "type": "Text_excerpt",
        "value": "Before calculating the projection, users can choose the features which should be used for the projection. This can be done by selecting and deselecting the corresponding checkboxes. To select or deselect whole semantic groups of features, users can interact with the checkboxes next to the group name. Clicking on a group-row collapses/expands the list of items in this group.\n\nUsers are also able to choose, if a numerical feature should be normalized, which applies standardization to all values of this feature (i.e. subtract by mean and divide by standard deviation). \n\nThe range value indicates the minimum and maximum values of the feature.\n\nFurthermore, users can adjust hyperparameters used for the projection. Noteworthy here is the checkbox **Seed Position**, which tells the system to initialize the projection with the current positions of the items instead of using a random initialization.\n\nParameters that can not be defined by the user are set to the defaults suggested in https://umap-learn.readthedocs.io/en/latest/api.html. \n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Progress (yellow)",
        "parent_header": [
          "Documentation",
          "Project"
        ],
        "type": "Text_excerpt",
        "value": "The \u201cProject\u201d tab panel includes a view that shows the progress of a projection as soon as the projection starts to calculate. Here, the calculations can be paused and continued. \n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Settings (blue)",
        "parent_header": [
          "Documentation",
          "Project"
        ],
        "type": "Text_excerpt",
        "value": "If there are item groups specified, the movement (trail) of the group centers during the projection can be visualized by enabling the **Show Group Trail** toggle.\n\nUsers also have the possibility to save current projections and change between the projection states of those savepoints.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Encoding",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "In the \"Encoding\" tab panel users can change the marks and channels of the displayed data.\n- shape by: select a categorical attribute and encode each value as a different mark \n- brightness by: select a numerical attribute and scale the brightness (opacity) of each point by that value; the upper and lower limit of the brightness can be adjusted with the scale below; if nothing is selected, the slider can be adjusted to set the general brightness value of all points\n- size by: select a numerical attribute and scale the size of each point by that value; the upper and lower limit of the size can be adjusted with the scale below; if nothing is selected, the slider can be adjusted to set the general size value of all points\n- color by: select a categorical or numerical attribute that defines the color of the points; the colormap can be chosen below and depends on whether the attribute is numerical or categorical\n- advanced coloring: if you color by a categorical attribute, this allows you to hide/show items with certain values\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Groups",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "In the \"Groups\" tab panel users can adjust group settings, automatically define groups by clustering and select different stories.\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500597-d09dc000-8d88-11eb-85a0-56bd378dd801.png\" width=\"300\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Group Settings (orange)",
        "parent_header": [
          "Documentation",
          "Groups"
        ],
        "type": "Text_excerpt",
        "value": "One toggle allows users to show or hide items in the scatterplot. The other one allows users to show or hide group centers (grey diamonds).\n\nUsers can choose, how the items of a selected group should look like. If a user clicks on a group center (grey diamond), all items belonging to that group are highlighted. If **Contour Plot** is selected, the items belonging to that group are surrounded by contour lines. If **Star Visualization** is selected, there are lines drawn from the group center to each item. If **None** is selected, the points belonging to the group are just highlighted.\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500760-f3c86f80-8d88-11eb-90fc-c2cd2b9301ca.gif\" width=\"300\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Define Groups by Clustering (yellow)",
        "parent_header": [
          "Documentation",
          "Groups"
        ],
        "type": "Text_excerpt",
        "value": "Automatic Clustering of the projected features can be done in this panel. The algorithm used for clustering is HDBSCAN (https://hdbscan.readthedocs.io/en/latest/index.html). \nParameters can be changed either by adjusting the slider (few clusters...many clusters), or by enabling the **Advanced**-Mode. Chosen parameters are always synchronized with the values in the advanced user inputs. Any other possible parameters that could be used for HDBSCAN are set to the default parameters that can be retrieved from the HDBSCAN docs.\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500865-0b075d00-8d89-11eb-8484-fc1a5a148221.png\" width=\"400\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Groups and Stories (blue)",
        "parent_header": [
          "Documentation",
          "Groups"
        ],
        "type": "Text_excerpt",
        "value": "A storybook is a set of groups and possible connections between those groups that were either created automatically or manually composed. This way, users can view different groupings by just switching between stories.\n\nA new storybook can be created by clicking **Add Empty**. \nUsers can manually add groups to a new or existing storybook by selecting points in the scatter plot and choosing \"Create Group from Selection\" from the context menu that opens with a right-click on the scatter plot.\n\nThe groups in a storybook are listed below the user select. Each item in the list represents one group. If a user clicks on a group, the corresponding points are highlighted in the scatter plot.\nHolding CTRL adds a group to the selection.\nNext to each group label there is a settings button where users can adjust group names, delete a group or filter the LineUp table by this group.\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112500941-1d819680-8d89-11eb-8049-0e36f56caf8d.gif\" width=\"250\">\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Details",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "In this tab panel summary visualizations of selected points are shown. The user can choose to show this in an external window by clicking the corresponding toggle.\n\n<img src=\"https://user-images.githubusercontent.com/45741696/112501006-2c684900-8d89-11eb-8fbd-43087150db93.png\" width=\"400\">\n\nWhen points are selected users can see the 2D compound structure of the selected items, aligned to each other according to their maximum common substructure.\nUsers can select compounds from this view if they check the corresponding checkboxes and filter by the selected compounds by clicking on **Confirm Selection** (green).\n\nThere is a user input that allows to choose among all provided representations (yellow). \nThe available representations are specified in the dataset and contain atom-level attribution scores for each compound.\nTo choose a representation users can either scroll through the list, or they can filter the list by typing in the auto-complete text field. \nRepresentations are organized by groups that can be specified manually as described in the \"Atom Properties\" chapter.\n\nThe **Settings** button allows users to manually refresh the representation list (blue). Furthermore, users can adjust settings that are used in the backend. Especially important is the **Align Structure** toggle, since the alignment might distort the compound structure. By disabling this feature, the compound structures are not aligned to each other anymore. However, the structures will be shown as expected again.\n\nClicking on **Add View** (orange) places an additional view of the selected compounds next to the existing view and enables the user to choose and compare several representations at once.\nAdditional views can be removed again using the **Delete**-symbol button.\nIt is recommended to use this feature in the external window only because there is more space.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LineUp",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "For high-dimensional data exploration, we included a [LineUp table](https://lineup.js.org/) that can be viewed on-demand. \nTo show the table you need to drag the component from the bottom of the window to increase the size of the table. \n\n<img src=\"https://user-images.githubusercontent.com/45741696/112501102-3e49ec00-8d89-11eb-9b1c-513e49321cae.gif\" width=\"600\">\n\nThe table shows all properties that were included in the provided dataset except properties that have the \"fingerprint\" modifier. Fingerprints were excluded because their values usually do not contain semantic meaning and would take a lot of space in the table, which causes higher loading times and makes the table more complex.\n\nAll LineUp functionalities are included like filtering, searching, sorting, etc.\nThe grouping functionality can be performed in all columns, especially relevant is group by selected items and group by group labels, which actively uses features of the Projection Space Explorer.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LineUp Settings",
        "parent_header": [
          "Documentation",
          "LineUp"
        ],
        "type": "Text_excerpt",
        "value": "The **Load All** button automatically makes the table component visible - if it was not shown yet - and removes all filters. \n\nThe **Load Selection** button automatically makes the table component visible - if it was not shown yet - and filters the table by the selected items. \n\nThe **Show Cell Values** toggle can be enabled to show values in numerical table cells. If it is disabled, the values are only shown for highlighted rows.\n\nThe **Export CSV** downloads the table in its current state as .csv file. Current filters, ordering, and custom annotations are contained in this file.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SMILES",
        "parent_header": [
          "Documentation",
          "LineUp"
        ],
        "type": "Text_excerpt",
        "value": "Using the \"smiles\" modifier, users can manually specify, which properties represent SMILES strings. For each column that contains SMILES, there is an additional \"structure\" column created that shows the 2D structure next to the SMILES column.\nThe SMILES columns have some additional features:\n- Users can filter those columns by substructure (a valid SMILES string must be provided in the filter input).\n- Changing the width of those columns dynamically adapts row heights, which provides a better view of the 2D structures.\n- When grouping several rows, this column displays the maximum common substructure of all compounds in the group.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Interaction",
        "parent_header": [
          "Documentation",
          "LineUp"
        ],
        "type": "Text_excerpt",
        "value": "The table can be used interactively with the scatter plot that represents the projected space and the summary view that shows selected items:\n- Hovering items in the table highlights the corresponding items in the other views as well and vice versa.\n- Users can select items in the table, which are also selected in the other views and vice versa.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jku-vds-lab/cime/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/Examples/CimeExample.ipynb"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/Examples/CimeExample.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jku-vds-lab/cime/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jku-vds-lab/cime"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChemInformatics Model Explorer (CIME): Exploratory analysis of chemical model explanations"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/Application/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/Application/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500382-9d5b3100-8d88-11eb-9b2e-8229ea1daf4c.png"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500515-be238680-8d88-11eb-82a0-be61b1f77697.png"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500597-d09dc000-8d88-11eb-85a0-56bd378dd801.png"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500760-f3c86f80-8d88-11eb-90fc-c2cd2b9301ca.gif"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500865-0b075d00-8d89-11eb-8484-fc1a5a148221.png"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112500941-1d819680-8d89-11eb-8049-0e36f56caf8d.gif"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112501006-2c684900-8d89-11eb-8fbd-43087150db93.png"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45741696/112501102-3e49ec00-8d89-11eb-9b1c-513e49321cae.gif"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "There are multiple ways to run CIME. Option 1 is the easiest method.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install npm packages",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "Use a git tool to clone this repository to your computer.\n```bash\ngit clone https://github.com/jku-vds-lab/cime.git\n```\nThen navigate to the Application folder in a terminal using\n```bash\ncd cime/Application/\n```\nand run the command to install the required packages\n```bash\nnpm install\n```"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the application",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "There is always a valid build in the repository, but in case you want to make changes, you can use the local build server. Start it with the command\n```bash\nnpm run webpack:dev\n```\nWhenever a file is changed while this server is running, it will automatically build a new version and deploy it in the `/dist` folder."
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Backend",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "In the backend, a Python server runs with the [Bottle Framework](https://bottlepy.org/docs/dev/). Many features that relate to the \u201cChem\u201d aspects of the Projection Space Explorer are only available if the backend is running. Also, the feature to derive groups from clustering is only available in the backend.\n\nTo start the server you need to create a conda environment with the following dependencies:\n- bottle=0.12.18\n- rdkit=2020.09.5\n- hdbscan=0.8.27\n- joblib=0.17.0\n- bottle-beaker=0.1.3\n\nA `requirements.txt` is provided in the folder `Application/backend`.\n\nUsing this environment you only have to start the server by running \n```bash\npython backend-cime-dist.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8106989591913341,
      "result": {
        "original_header": "DOI: 10.1186/s13321-022-00600-z",
        "type": "Text_excerpt",
        "value": "Check out the [SDF generation examples](Examples/) if you want to try CIME with your own dataset. \n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jku-vds-lab/cime/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, JKU Linz, Institute of Computer Graphics\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/Application/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cime"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "jku-vds-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "TypeScript",
        "size": 928132,
        "type": "Programming_language",
        "value": "TypeScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 34312,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32119,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 7793,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2497,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 2037,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 968,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 181,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://rdkit.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://umap-learn.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://hdbscan.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 1 (recommended) - Run CIME with Docker",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Once you have Docker installed, you can quickly run the following commands and have CIME ready to use.\n\nTo **install** the latest version of CIME:\n```bash\ndocker pull jkuvdslab/cime\ndocker run -d -p 8080:8080 --name cime --detach jkuvdslab/cime\n```\n\nTo **update** CIME:\n```bash\ndocker rm --force cime\ndocker pull jkuvdslab/cime\ndocker run -d -p 8080:8080 --name cime --detach jkuvdslab/cime\n```\n\nTo **uninstall** CIME:\n```bash\ndocker rm --force cime\n```\n\nA docker image of CIME is available at [Docker Hub](https://hub.docker.com/r/jkuvdslab/cime).\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the application",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "There is always a valid build in the repository, but in case you want to make changes, you can use the local build server. Start it with the command\n```bash\nnpm run webpack:dev\n```\nWhenever a file is changed while this server is running, it will automatically build a new version and deploy it in the `/dist` folder."
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Backend",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "In the backend, a Python server runs with the [Bottle Framework](https://bottlepy.org/docs/dev/). Many features that relate to the \u201cChem\u201d aspects of the Projection Space Explorer are only available if the backend is running. Also, the feature to derive groups from clustering is only available in the backend.\n\nTo start the server you need to create a conda environment with the following dependencies:\n- bottle=0.12.18\n- rdkit=2020.09.5\n- hdbscan=0.8.27\n- joblib=0.17.0\n- bottle-beaker=0.1.3\n\nA `requirements.txt` is provided in the folder `Application/backend`.\n\nUsing this environment you only have to start the server by running \n```bash\npython backend-cime-dist.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 3 - Run Application with Docker from Source",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "To combine frontend and backend in a docker image we provide a Dockerfile. \nBefore creating the image you have to adjust some settings:\n- In the `Application/backend/backend-cime-dist.py` the `response_header_origin_localhost` constant needs to be set to \u201chttp://localhost:8080\u201d\n- In the `Application/backend/backend-cime-dist.py` the line that starts the server needs to be replaced by `run(app=app, host='0.0.0.0', port=8080)`\n- In the `Application/src/utils/backend-connect.ts` the `BASE_URL` constant needs to be set to an empty string (i.e. `\u201c\u201d`)\n- In the `Application/src/utils/frontend-connect.ts` the `BASE_PATH` constant needs to be set to an empty string (i.e. `\u201c\u201d`)\n\nIn the root folder of the project, you can create the docker image by running\n```bash\ndocker build -f Dockerfile -t cime .\n```\nand run the image with\n```bash\ndocker run -d -p 8080:8080 --detach cime\n```\nThe application will be available on \u2018localhost:8080\u2019.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:05:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Starting the application",
        "parent_header": [
          "Installation",
          "Option 2 - Build and run CIME"
        ],
        "type": "Text_excerpt",
        "value": "To start the application you just need to start the `index.html` locally. The easiest way to this is by using the live server provided by either Atom or Visual Studio Code.\n"
      },
      "source": "https://raw.githubusercontent.com/jku-vds-lab/cime/main/README.md",
      "technique": "header_analysis"
    }
  ]
}