{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/usccolumbia/MLatticeABC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-13T06:24:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-04T19:34:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Machine learning model for crystal lattice constant prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9965696007690924,
      "result": {
        "original_header": "Premise",
        "type": "Text_excerpt",
        "value": "\r\nMLatticeABC is a random forest machine learning model with a new feature set combined with the standard composition features such as Magpie descriptors for effective lattice constant prediction. \r\n\r\nIf you find our software is useful, please cite it as:<br >\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972151977645944,
      "result": {
        "original_header": "Yuxin Li, Wenhui Yang, Rongzhi Dong, Jianjun Hu*, MLatticeABC: Generic Lattice Constant Prediction of Inorganic Materials using Machine Learning, Arxiv. 2020",
        "type": "Text_excerpt",
        "value": "\r\nDeveloped in 2020.9-10 at <br />\r\nSchool of Mechanical Engineering<br />\r\nGuizhou University, Guiyang, China <br />\r\n\r\nMachine Learning and Evolution Laboratory<br />\r\nDepartment of Computer Science and Engineering<br />\r\nUniversity of South Carolina, Columbia, USA<br />\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8912349446363492,
      "result": {
        "original_header": "Performance on Materials Project dataset",
        "type": "Text_excerpt",
        "value": "\r\nOur models are trained with the dataset of 'Element_atom_no_stat+Enhanced_magpie.csv' by useing the RF.py, and the dataset can be downloaded from here [data.zip](https://figshare.com/s/1411919c94be680136cd). It also includes the dataset named 'Enhanced_magpie.csv' for the baseline algorithm.\r\n\r\nPrediction performance of MLatticeABC  in terms of R2 score for a,b,c over different crystal systems \uff0810 repeats of random split 9:1)\r\n|Crystal system|train set size  |  test set size |      a       |    b         |       c      |\r\n|-------------|----------------|---------------|-------------|-------------|-------------|\r\nCubic         | 16492          | 1833          | 0.979\u00b10.016 |             |             | \r\nHexagonal     | 8318           | 925           | 0.892\u00b10.019 |             | 0.760\u00b10.061 |\r\nTrigonal      | 9977           | 1109          | 0.843\u00b10.025 |             | 0.705\u00b10.065 |\r\nTetragonal    | 13188          | 1466          | 0.846\u00b10.024 |             | 0.685\u00b10.044 |\r\nOrthorhombic  | 24120          | 2681          | 0.770\u00b10.019 | 0.579\u00b10.074 | 0.638\u00b10.028 |\r\nMonoclinic    | 26884          | 2988          | 0.520\u00b10.021 | 0.507\u00b10.016 | 0.489\u00b10.029 |\r\nTriclinic     | 13767          | 1530          | 0.800\u00b10.022 | 0.771\u00b10.014 | 0.650\u00b10.056 |\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/usccolumbia/MLatticeABC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/usccolumbia/MLatticeABC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "usccolumbia/MLatticeABC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Environment Setup",
        "type": "Text_excerpt",
        "value": "\r\nTo use `MLatticeABC` you need to create an environment with the correct dependencies. Using `Anaconda` this can be accomplished with the following commands:\r\n\r\n```bash\r\nconda create --name mlatticeabc python=3.6\r\nconda activate mlatticeabc\r\nconda install --channel conda-forge pymatgen\r\npip install matminer\r\npip install scikit-learn==0.23.1\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MLatticeABC Setup",
        "type": "Text_excerpt",
        "value": "\r\nOnce you have setup an environment with the correct dependencies you can install `mlatticeabc` using the following commands:\r\n\r\n```bash\r\nconda activate mlatticeabc\r\ngit clone https://github.com/usccolumbia/MLatticeABC\r\ncd MLatticeABC\r\npip install -e .\r\n```\r\n\r\nPre-trained models are stored in google drive. Download the file `model.zip` from from the [figshare](https://figshare.com/s/d478c42bbe2e21c045b3). After downing the file, copy it to `MLatticeABC` and extract it. the `Model` folder should be in the `MLatticeABC` directory after the extraction is completed.\r"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/usccolumbia/MLatticeABC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 MLEG\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MLatticeABC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "usccolumbia"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9247,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:44:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Use",
        "type": "Text_excerpt",
        "value": "\r\nIn order to test your installation you can run the following example from your `MLatticeABC` directory:\r\n\r\n```sh\r\ncd /path/to/MLatticeABC/\r\npython predict.py -i full_formula -s crystal_system\r\n\r\nfor example:\r\npython predict.py -i Mn16Zn24Ge24O96 -s cubic\r\npython predict.py -i Mn16Zn24Ge24O96\r\n```\r\n\r\nThe following cyrstal_system values are accepted\r\n```\r\ncrystal     # crystal system unknown.\r\ncubic\r\nhexagonal\r\ntrigonal\r\ntetragonal\r\northorhombic\r\nmonoclinic\r\ntriclinic\r\n```\r\n\r\n"
      },
      "source": "https://raw.githubusercontent.com/usccolumbia/MLatticeABC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}