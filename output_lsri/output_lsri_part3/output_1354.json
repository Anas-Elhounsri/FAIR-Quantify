{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Francoeur, Paul G. and Koes, David R.",
        "doi": "10.1021/acs.jcim.1c00331",
        "format": "bibtex",
        "title": "SolTranNet\u2013A Machine Learning Tool for Fast Aqueous Solubility Prediction",
        "type": "Text_excerpt",
        "url": " \nhttps://doi.org/10.1021/acs.jcim.1c00331\n",
        "value": "@article{doi:10.1021/acs.jcim.1c00331,\n    eprint = { \nhttps://doi.org/10.1021/acs.jcim.1c00331\n},\n    url = { \nhttps://doi.org/10.1021/acs.jcim.1c00331\n},\n    note = {PMID: 34038123},\n    doi = {10.1021/acs.jcim.1c00331},\n    year = {0},\n    pages = {null},\n    number = {0},\n    volume = {0},\n    journal = {Journal of Chemical Information and Modeling},\n    title = {SolTranNet\u2013A Machine Learning Tool for Fast Aqueous Solubility Prediction},\n    author = {Francoeur, Paul G. and Koes, David R.},\n}"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gnina/SolTranNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-18T19:56:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T15:52:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation of the SolTranNet tool utilizing the molecular transformer to predict aqueous solubility"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9549410611681773,
      "result": {
        "original_header": "SolTranNet",
        "type": "Text_excerpt",
        "value": "The official implementation of SolTranNet, whose publication is available [here](https://pubs.acs.org/doi/10.1021/acs.jcim.1c00331). \nThe code for creating the figures for the publication is available [here](https://github.com/francoep/SolTranNet_paper). \nSolTranNet is an optimized fork of the [Molecule Attention Transformer](https://github.com/ardigen/MAT), whose original paper can be found [here](https://arxiv.org/abs/2002.08264).\n \n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gnina/SolTranNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gnina/SolTranNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gnina/SolTranNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SolTranNet"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SolTranNet"
        ],
        "type": "Text_excerpt",
        "value": "Tested on Ubuntu 18.04.5, Ubuntu 20.04.2, Debian 10, Fedora 33, CentOS 8.3.2011, Windows 10, and Ubuntu 20.04.2 subsystem for Windows 10\n\nFirst, install [RDKit](https://github.com/rdkit/rdkit). Installation instructions are available [here](https://github.com/rdkit/rdkit/blob/master/Docs/Book/Install.md)\n\nAfter RDKit has finished installing, you can install SolTranNet via pip:\n```\npython3 -m pip install soltrannet\n```\nNOTE: This installation method often mismatches installation of PyTorch for enabling CUDA if it needs to install PyTorch as a dependency.\n\nIf you wish to do a more careful installation:\n```\npython3 -m pip install --install-option test soltrannet\n```\nThis will run our unit tests to ensure that GPU-enabled torch was setup correctly, and the proper functioning of SolTranNet as a command line tool and within a python environment.\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gnina/SolTranNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SolTranNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gnina"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 33605,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2002.08264"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "SolTranNet"
        ],
        "type": "Text_excerpt",
        "value": " - Python 3.6+\n - PyTorch 1.7+\n - RDKit 2017.09.1+\n - pathlib 1.0+\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Soft Requirements",
        "parent_header": [
          "SolTranNet",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": " - CUDA 10.1, 10.2, or 11.1\n\nWe heavily suggest installing CUDA and compiling PyTorch with it enabled to have faster models.\n\nYou can see installation instructions for CUDA [here](https://developer.nvidia.com/cuda-toolkit-archive).\n\nYou can see installation instructions for PyTorch [here](https://pytorch.org/).\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:42:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Help",
        "parent_header": [
          "SolTranNet"
        ],
        "type": "Text_excerpt",
        "value": "Please [subscribe to our slack team](https://join.slack.com/t/gninacnn/shared_invite/enQtNTY3ODk2ODk5OTU5LTkzMjY1ZTE3YjJlZmIxOWI2OTU3Y2RlMTIyYmM2YmFmYTU1NTk5ZTBmMjUwMGRhYzk1ZjY5N2E4Y2I5YWU5YWI).\n\nIf you use SolTranNet in your work, please cite our original publication --\n```\n@article{doi:10.1021/acs.jcim.1c00331,\n author = {Francoeur, Paul G. and Koes, David R.},\n title = {SolTranNet\u2013A Machine Learning Tool for Fast Aqueous Solubility Prediction},\n journal = {Journal of Chemical Information and Modeling},\n volume = {0},\n number = {0},\n pages = {null},\n year = {0},\n doi = {10.1021/acs.jcim.1c00331},\n note ={PMID: 34038123},\n\n URL = { \n        https://doi.org/10.1021/acs.jcim.1c00331\n    },\n eprint = { \n        https://doi.org/10.1021/acs.jcim.1c00331\n    }\n\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line tool",
        "parent_header": [
          "SolTranNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Upon successful pip installation, a command line tool will be installed.\n\nTo generate the predictions for SMILES provided in `my_smiles.txt` and store them into `my_output.txt`:\n```\nsoltrannet my_smiles.txt my_output.txt\n```\n\nYou can see all of the options available for the command line tool:\n```\nusage: soltrannet [-h] [--batchsize BATCHSIZE] [--cpus CPUS] [--cpu_predict] [input] [output]\n\nRun SolTranNet aqueous solubility predictor\n\npositional arguments:\n  input                 PATH to the file containing the SMILES you wish to\n                        use. Assumes the content is 1 SMILE per line.\n\n  output                Name of the output file. Defaults to stdout.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --batchsize BATCHSIZE\n                        Batch size for the data loader. Defaults to 32.\n\n  --cpus CPUS           Number of CPU cores to use for the data loader.\n                        Defaults to use all available cores. Pass 0 to only\n                        run on 1 CPU.\n\n  --cpu_predict         Flag to force the predictions to be made on only the\n                        CPU. Default behavior is to use GPU if available.\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "In a Python environment",
        "parent_header": [
          "SolTranNet",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Soltrannet also supports integration in a python3 environment\n\n```python\nimport soltrannet as stn\nmy_smiles=[\"c1ccccc1\",\"c1ccccc1 .ignore\",\"Cn1cnc2n(C)c(=O)n(C)c(=O)c12\",\"[Zn+2]\",\"[Na+].[Cl-]\"]\npredictions=list(stn.predict(my_smiles))\n```\n"
      },
      "source": "https://raw.githubusercontent.com/gnina/SolTranNet/main/README.md",
      "technique": "header_analysis"
    }
  ]
}