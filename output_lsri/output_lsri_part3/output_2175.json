{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "Robert Stewart, Marc Auffret, Tim Snelling, Rainer Roehe, Mick Watson (2018) MAGpy: a reproducible pipeline for the downstream analysis of metagenome-assembled genomes (MAGs). Bioinformatics bty905, [bty905](https://doi.org/10.1093/bioinformatics/bty905)\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WatsonLab/MAGpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-27T08:51:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-17T14:55:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Snakemake pipeline for downstream analysis of metagenome-assembled genomes (MAGs) (pronounced mag-pie)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9980748251964712,
      "result": {
        "original_header": "MAGpy",
        "type": "Text_excerpt",
        "value": "MAGpy is a Snakemake pipeline for downstream analysis of metagenome-assembled genomes (MAGs) (pronounced **mag-pie**)\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9875036466250199,
      "result": {
        "original_header": "Clean your MAGs",
        "type": "Text_excerpt",
        "value": "* the names of contigs in your MAGs must be globally unique.  Some assemblers, e.g. Megahit, output very generic contig names e.g. \"scaffold_22\" which, if you have assembled multiple samples, may be duplicated in your MAGs.  This is not allowed.  BioPython and/or BioPerl can help you rename your contigs\n* The MAG FASTA files must start with a letter\n* The MAG FASTA files should not have any \".\" characters in them, other than the final . before the file extension e.f. mag1.faa is fine, mag.1.faa is not\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9180402691458581,
      "result": {
        "original_header": "Build the databases",
        "type": "Text_excerpt",
        "value": "This will build a DIAMOND database of the whole of UniProt TREMBL, so you will need to give it a lot of resources (RAM) - try 256Gb.\n```\nrm -rf magpy_dbs\nsnakemake -rp -s MAGpy --cores 16 --use-conda setup\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/WatsonLab/MAGpy/wiki"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WatsonLab/MAGpy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WatsonLab/MAGpy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WatsonLab/MAGpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAGpy"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# 10 minute install\n\n(not taking into account downloading and building the databases)\n\n## Assuming we are in a brand new Ubuntu instance\n\n### 1 Update ubuntu\n```sh\nsudo apt-get update\nsudo apt install gcc g++ make wget git\n```\n\n### 2 install usearch \n\nMake sure you download VERSION 5.2.32!\n\nI can't do anything else to help you here - you need to register and you will be sent a link by email.\n\n[link](https://www.drive5.com/usearch/download.html)\n\nMake sure the executable is in your PATH\n\n### 3 download and install conda\n\n(note if you already have a working, functioning install of conda, this step may be unnecessary)\n\n```sh\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n# install it\nsh Miniconda3-latest-Linux-x86_64.sh\n\n# review license\n# accept license\n# accept or change home location\n# yes to running conda init to place it in your path\n\n# source .bashrc\nsource $HOME/.bashrc\n\n# update conda (just because)\nconda update -n base conda\n```\n\n### 4 clone this repo\n```sh\ngit clone https://github.com/WatsonLab/MAGpy.git\n```\n\n### 5 create the main MAGpy environment\n```sh\nconda env create -f MAGpy/envs/install.yaml\n\n# activate it\nconda activate magpy_install\n```\n\n### 6 download data and build indices\n```sh\n# Uniprot - TREMBL\n# NOTE - may require a large amount of RAM\nwget -q ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_trembl.fasta.gz \ndiamond makedb --in uniprot_trembl.fasta.gz -d uniprot_trembl\nrm uniprot_trembl.fasta.gz\n\n# Sourmash\nwget -q https://s3-us-west-2.amazonaws.com/sourmash-databases/2018-03-29/genbank-d2-k31.tar.gz\ngunzip < genbank-d2-k31.tar.gz | tar xvf -\n\n\n# Pfam\nwget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz\nwget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.dat.gz\nwget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/active_site.dat.gz\ngunzip Pfam-A.hmm.gz Pfam-A.hmm.dat.gz active_site.dat.gz\nhmmpress Pfam-A.hmm\n\n# get checkM data\nmkdir checkm_data\ncd checkm_data\nwget https://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz\ngunzip < checkm_data_2015_01_16.tar.gz | tar xvf -\ncd ..\n```\n\n### 7 update ete3 database\n```\npython MAGpy/scripts/update_ete3.py\n```\nNB there is currently an issue with ete3, see https://github.com/etetoolkit/ete/issues/469\n\n### 8 install phylophlan\n```\nhg clone https://bitbucket.org/nsegata/phylophlan\n```\n\n### 9 edit config.json\n\nThe file config.json tells MAGpy where everything is.  On this installation on Ubuntu, it should (and does) look like this:\n\n```sh\n{\n    \"phylophlan_dir\": \"./phylophlan\",\n    \"uniprot_sprot\": \"/home/ubuntu/uniprot_trembl\",\n    \"sourmash_gbk\": \"/home/ubuntu/genbank-k31.sbt.json\",\n    \"pfam_dir\": \"/home/ubuntu/\",\n    \"checkm_dataroot\": \"./checkm_data\"\n}\n```\n\n### 10 make scripts executeable\n\n```sh\nchmod 755 MAGpy/scripts/*\nchmod 755 MAGpy/test/scripts/*\n```\n\n### 11 Install Color::Mix\n\nIf you want to draw a tree of MAGs using GraPhlAn and our script \"produce_tree.pl\" then you will need to install Perl module \"Color::Mix\"\n\n```\nconda env create -f MAGpy/envs/basic2.yaml\nsource activate basic2\n\n/usr/bin/env perl -MCPAN -e 'install Color::Mix'\n# answer yes to automatic config\n```\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install conda",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "Skip if you already have it. Instructions are [here](https://docs.conda.io/en/latest/miniconda.html)\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Snakemake and mamba",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "Skip if you already have them\n\n```sh\nconda env create -f envs/install.yaml \nconda activate magpy_install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run tests and install conda envs:",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "```\nsnakemake -rp -s MAGpy --cores 1 --use-conda test\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9069489507765529,
      "result": {
        "original_header": "Clean your MAGs",
        "type": "Text_excerpt",
        "value": "There are a few things you will need to do before you run MAGpy, and these are due to limitations imposed by the software MAGpy runs, rather than by MAGpy itself.   \n* the names of contigs in your MAGs must be globally unique.  Some assemblers, e.g. Megahit, output very generic contig names e.g. \"scaffold_22\" which, if you have assembled multiple samples, may be duplicated in your MAGs.  This is not allowed.  BioPython and/or BioPerl can help you rename your contigs\n* The MAG FASTA files must start with a letter\n* The MAG FASTA files should not have any \".\" characters in them, other than the final . before the file extension e.f. mag1.faa is fine, mag.1.faa is not\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999963823996,
      "result": {
        "original_header": "Clone the repo",
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/WatsonLab/MAGpy.git\ncd MAGpy\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999865296146923,
      "result": {
        "original_header": "Build the databases",
        "type": "Text_excerpt",
        "value": "This will build a DIAMOND database of the whole of UniProt TREMBL, so you will need to give it a lot of resources (RAM) - try 256Gb.\n```\nrm -rf magpy_dbs\nsnakemake -rp -s MAGpy --cores 16 --use-conda setup\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WatsonLab/MAGpy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAGpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "WatsonLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 17606,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 5929,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run tests and install conda envs:",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "```\nsnakemake -rp -s MAGpy --cores 1 --use-conda test\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run MAGpy",
        "parent_header": [
          "MAGpy"
        ],
        "type": "Text_excerpt",
        "value": "```\nsnakemake -rp -s MAGpy --use-conda --cores 8\n```\n\nFor large workflows, I recommend you use [cluster](https://snakemake.readthedocs.io/en/stable/executing/cluster.html) or [cloud](https://snakemake.readthedocs.io/en/stable/executing/cloud.html) execution.\n\nAlso, for any large number of MAGs, PhyloPhlAn will take a long time - e.g. a few weeks for a couple of thousand MAGs.\n\n"
      },
      "source": "https://raw.githubusercontent.com/WatsonLab/MAGpy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:58:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 62
      },
      "technique": "GitHub_API"
    }
  ]
}