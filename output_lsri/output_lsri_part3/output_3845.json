{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/551100kk/SAW"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-16T12:33:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-17T05:39:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Tool for Safety Analysis of Weakly-hard Systems"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/551100kk/SAW/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/551100kk/SAW/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "551100kk/SAW"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAW"
      },
      "source": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/551100kk/SAW/master/example/output1_(2,5).svg"
      },
      "source": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SAW"
        ],
        "type": "Text_excerpt",
        "value": "We provide three ways to install the program.\n\n* The virtual machine where the tool is ready to run can be found at https://www.csie.ntu.edu.tw/~r08922054/SAW.ova. To reproduce the results of all the examples in the paper, please follow the instruction in ./artifact_evaluation_readme.txt\n\n  * Account: saw, Password: saw\n  * Path: /home/SAW\n  * Precompiled version only. No dependency in this VM.\n  * SHA1: 7d11f1fbe1ca1c65ae94f00a9cd1ad1e8502469d\n\n* Build in your own environment.\n\n  ```\n  make\n  ```\n\n  **Warning:** We strongly suggest you using **g++-8** to build the project.\n\n* Use the precompiled program in x86_64 linux environment.\n\n  * **./saw_linux_x86_64**\n"
      },
      "source": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/551100kk/SAW/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SAW"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "551100kk"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1317455,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Gnuplot",
        "size": 97805,
        "type": "Programming_language",
        "value": "Gnuplot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Yacc",
        "size": 34990,
        "type": "Programming_language",
        "value": "Yacc"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lex",
        "size": 4901,
        "type": "Programming_language",
        "value": "Lex"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1409,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "SAW"
        ],
        "type": "Text_excerpt",
        "value": "| Names                           | Weblinks                           |\n| ------------------------------- | ---------------------------------- |\n| GNU MPFR Library                | http://gmplib.org/                 |\n| GNU MPFR Library                | http://www.mpfr.org/               |\n| GNU Scientific Library          | http://www.gnu.org/software/gsl/   |\n| GNU Linear Programming Kit      | http://www.gnu.org/software/glpk/  |\n| Bison - GNU parser generator    | http://www.gnu.org/software/bison/ |\n| Flex: The Fast Lexical Analyzer | http://flex.sourceforge.net/       |\n| Gnuplot                         | http://www.gnuplot.info/           |\n| Boost C++ Library               | https://www.boost.org/             |\n"
      },
      "source": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:16:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "SAW"
        ],
        "type": "Text_excerpt",
        "value": "1. Create a model file as follow format.\n\n   ```\n   <state_dim> <input_dim> <grid_count>\n   <state_var_names> <input_var_names>\n   <state_ode.1>\n   ...\n   <state_ode.state_dim>\n   <input_equa.1>\n   ...\n   <input_equa.input_dim>\n   <period> <step_size>\n   <m> <k>\n   <safe_state.1>\n   ...\n   <safe_state.state_dim>\n   <initial_state.1>\n   ...\n   <initial_state.state_dim>\n   ```\n\n2. You can also modify the configuration of **Flow\\***.\n\n   ```\n   <order>\n   <cutoff_threshold>\n   <queue_size>\n   <remainder_estimation>\n   ```\n\n3. Execute the verification tool with the model file.\n\n   ```\n   ./saw model.txt\n   or\n   ./saw_linux_x86_64 model.txt\n   ```\n\n   You can test the example models in **example/**.\n   \n   ```\n   ./saw example/model1.txt\n   or\n   ./saw_linux_x86_64 example/model1.txt\n   ```\n   \n4. The result of **example/model1** is as follow:\n\n   ```\n   [Info] Parsing model.\n   [Info] Building FLOW* configuration.\n   [Info] Building grids.\n   [Info] Building one-step graph.\n          Process: 100.00%\n   [Success] Number of edges: 19354\n   [Info] Building K-step graph.\n   [Success] Start Region Size: 1908\n             End Region: 1208\n             Number of Edges: 102436\n   [Info] Finding the largest closed subgraph.\n   [Success] Safe Initial Region Size: 1622\n   [Info] Calculating area.\n          Initial state region: 4.000000\n          Grids Intersection:   4.000000\n   ```\n\n    The program will plot the result region of first two dimensions to **output.svg**.\n\n   ![output2](example/output1_(2,5).svg)\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/551100kk/SAW/master/README.md",
      "technique": "header_analysis"
    }
  ]
}