{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "CVTree"
        ],
        "type": "Text_excerpt",
        "value": "- Guanghong Zuo (2021) CVTree: A Parallel Alignment-free Phylogeny\n  and Taxonomy Tool based on Composition Vectors of Genomes,\n  BioRxiv doi:10.1101/2021.02.04.429726\n- Ji Qi, Bin Wang, Bailin Hao (2004) Whole proteome prokaryote phylogeny\n  without sequence alignment: a K-string composition approach, J Mol\n  Evol, 58: 1\u201311\n- Guanghong Zuo, Bailin Hao (2015) CVTree3 web server for\n  whole-genome-based and alignment-free prokaryotic phylogeny and\n  taxonomy, Genomics Proteomics & Bioinformatics, 13: 321-331\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ghzuo/CVTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-02-05T12:03:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-28T21:49:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A whole-genome and alignment-free prokaryotic phylogeny tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9667527072630002,
      "result": {
        "original_header": "CVTree",
        "type": "Text_excerpt",
        "value": "CVTree stands for `Composition Vector Tree` which is the implementation\nof an alignment-free algorithm to generate a dissimilarity matrix from\ncomparatively large collection of DNA or Amino Acid sequences,\npreferably whole-genome data, for phylogenetic studies. \nPlease visit our webserve of CVTree, where you can use the cvtree tools\nmore convenient. The CVTree3 Web Server have two identical but independent\ninstallations at [Beijing Institute of Genomics, Beijing](http://bigd.big.ac.cn/cvtree)\nand  [Fudan University, Shanghai](http://tlife.fudan.edu.cn/cvtree).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8468132971688127,
      "result": {
        "original_header": "Main Programs",
        "type": "Text_excerpt",
        "value": "- cvtree: the main program, it get the phylogenetic tree from the fasta files of genomes.\n- g2dv: Get the composition vectors based on the fasta files of genomes.\n- cv2dm: Get the distance matrix based on the compostion vectors\n- dm2tree: Get the phylogenetic tree based the dissimilarity matrix.\n- cvdump: Show composition vector\n- mconv: convert formats of dissimilarity matrix file\n- getdist: Show select dissimilarity from the disimilarity matrix\n- diffmtx: compare two dissimilarity matrixes\n \n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ghzuo/cvtree/wiki"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ghzuo/cvtree/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ghzuo/CVTree/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ghzuo/CVTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CVTree"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ghzuo/cvtree/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparation",
        "parent_header": [
          "CVTree",
          "Installation",
          "Compile with CMake"
        ],
        "type": "Text_excerpt",
        "value": "- cmake >= 3.0\n- g++ >= 4.8 or other compiler supporting C++11 standard\n- require ligrary: libz\n- compiler with support openmp for parallel (_option_)\n- Library (_option_): netcdf, netcdf_cpp\n- Library (_option_): libhdf5 for c++ (_Please don't use the hdf5 libraries in Anaconda_)\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling",
        "parent_header": [
          "CVTree",
          "Installation",
          "Compile with CMake"
        ],
        "type": "Text_excerpt",
        "value": "1. unzip the package file and change into it\n2. mkdir build and change into it\n3. cmake .. or add some options you wanted\n4. make\n5. make install (_option_)\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ghzuo/CVTree/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Guanghong Zuo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "CVTree"
        ],
        "type": "Text_excerpt",
        "value": "MIT license\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CVTree"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ghzuo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 152784,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 5766,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 2801,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1358,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ghzuo",
          "type": "User"
        },
        "date_created": "2020-11-19T06:46:20Z",
        "date_published": "2020-11-23T10:11:14Z",
        "description": "This version is the first published standalone version for submitting paper.",
        "html_url": "https://github.com/ghzuo/CVTree/releases/tag/Version-3.0.0",
        "name": "The first release standalone version",
        "release_id": 34301499,
        "tag": "Version-3.0.0",
        "tarball_url": "https://api.github.com/repos/ghzuo/CVTree/tarball/Version-3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ghzuo/CVTree/releases/34301499",
        "value": "https://api.github.com/repos/ghzuo/CVTree/releases/34301499",
        "zipball_url": "https://api.github.com/repos/ghzuo/CVTree/zipball/Version-3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ghzuo",
          "type": "User"
        },
        "date_created": "2018-08-13T08:44:07Z",
        "date_published": "2020-11-23T10:08:37Z",
        "description": "The is release programs come from the CVTree Web Server 3.0. Due to we designed these programs for our Web Server (http://tlife.fudan.edu.cn/cvtree), it is not very friendly to the standalone users. Recently we refactored the programs to make it more friendly. And add a tag on this snapshot if some users need it.",
        "html_url": "https://github.com/ghzuo/CVTree/releases/tag/Version-2.0.0",
        "name": "Old version for WebServer",
        "release_id": 34301391,
        "tag": "Version-2.0.0",
        "tarball_url": "https://api.github.com/repos/ghzuo/CVTree/tarball/Version-2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ghzuo/CVTree/releases/34301391",
        "value": "https://api.github.com/repos/ghzuo/CVTree/releases/34301391",
        "zipball_url": "https://api.github.com/repos/ghzuo/CVTree/zipball/Version-2.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Programms in Docker",
        "parent_header": [
          "CVTree",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Docker allows users run programs on both Windows and Linux/MacOS.\nYou can download docker free and reference [docker document](https://docs.docker.com/install/)\nto install it. After install docker, basic usages for CVTree are:\n\n1. Build/download docker image: `docker build -t=\"cvtree-img\" .`\n   or `docker pull ghzuo/cvtree`. In this step, a image with cvtree\n   programs will obtained. Here option \"-t\" set the image name. After build\n   image, you can delete the dangling images for build by `docker image prune`.\n2. Start container from image:\n   `docker run --rm -it -v $PWD/example:/root/data cvtree-img`\n   In this step, you will enter the cvtree container, and the \"example\" folder\n   of this project will be find in the \"data\" folder. Change path to the data folder,\n   and run `cvtree -G faa`. You will get the result for eight genomes in the \"list\"\n   file. You can change the path \"\\$PWD/example\" to your own data directory.\n3. Exit and stop container: `exit` in docker terminal.\n4. Run cvtree in docker by one command:\n   `docker run --rm -v $PWD:/data -w /data cvtree-img cvtree -G faa`\n5. More usage for docker can reference [docker document](https://docs.docker.com/).\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Programs with Example",
        "parent_header": [
          "CVTree"
        ],
        "type": "Text_excerpt",
        "value": "If this is the first time you use CVTree package, please go to the\n\"example\" folder. Edit \"list\" to include the genome names, and run\nthe cvtree command to get the phylogeny tree by:\n\n    ../build/cvtree -G faa\n\nMore detail of the command usage can be obtaion by `-h` option.\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:00:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Programs with Example",
        "parent_header": [
          "CVTree"
        ],
        "type": "Text_excerpt",
        "value": "If this is the first time you use CVTree package, please go to the\n\"example\" folder. Edit \"list\" to include the genome names, and run\nthe cvtree command to get the phylogeny tree by:\n\n    ../build/cvtree -G faa\n\nMore detail of the command usage can be obtaion by `-h` option.\n"
      },
      "source": "https://raw.githubusercontent.com/ghzuo/cvtree/master/README.md",
      "technique": "header_analysis"
    }
  ]
}