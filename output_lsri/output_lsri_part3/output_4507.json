{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: download reference genome and gtf files",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "Human reference genome UCSC hg38 with the gene annotation (.gtf) were downloaded from illumina iGenomes collections : [https://support.illumina.com/sequencing/sequencing\\_software/igenome.html](https://support.illumina.com/sequencing/sequencing_software/igenome.html)\n\n**$ wget http://igenomes.illumina.com.s3-website-us-east-1.amazonaws.com/Homo\\_sapiens/UCSC/hg38/Homo\\_sapiens\\_UCSC\\_hg38.tar.gz**\n\n**$ tar xzvf Homo\\_sapiens\\_UCSC\\_hg38.tar.gz**\n\n**$ cp Homo\\_sapiens/UCSC/hg38/Sequence/WholeGenomeFasta/genome.fa .**\n\n**$ cp Homo\\_sapiens/UCSC/hg38/Annotation/Genes/genes.gtf .**\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhongw2/GeneTEFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-15T20:06:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-11T16:51:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Introduction",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing"
        ],
        "type": "Text_excerpt",
        "value": "GeneTEFlow is a reproducible and platform-independent workflow for the comprehensive analysis of gene and locus-specific TEs expression from RNA-Seq data using Nextflow and Docker technologies.\n\n![workflow](https://user-images.githubusercontent.com/16296165/80311919-67947d80-87b0-11ea-819d-8d22b68abe56.png)\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9358778862542856,
      "result": {
        "original_header": "4. Q &amp; A Section",
        "type": "Text_excerpt",
        "value": "***1. Can I use a different human genome version (eg. hg19) or a different species (eg. mouse) in GeneTEFlow pipeline? If yes, please provide some instructions to do those. Eg. where to download the genome and gene annotation file.*** \nYes, you could choose your specific species and genome version.  \n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: download reference genome and gtf files",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "Human reference genome UCSC hg38 with the gene annotation (.gtf) were downloaded from illumina iGenomes collections : [https://support.illumina.com/sequencing/sequencing\\_software/igenome.html](https://support.illumina.com/sequencing/sequencing_software/igenome.html)\n\n**$ wget http://igenomes.illumina.com.s3-website-us-east-1.amazonaws.com/Homo\\_sapiens/UCSC/hg38/Homo\\_sapiens\\_UCSC\\_hg38.tar.gz**\n\n**$ tar xzvf Homo\\_sapiens\\_UCSC\\_hg38.tar.gz**\n\n**$ cp Homo\\_sapiens/UCSC/hg38/Sequence/WholeGenomeFasta/genome.fa .**\n\n**$ cp Homo\\_sapiens/UCSC/hg38/Annotation/Genes/genes.gtf .**\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhongw2/GeneTEFlow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhongw2/GeneTEFlow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zhongw2/GeneTEFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.SampleInfo/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.SampleInfo/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.Analysis/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.Analysis/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.Process/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.Process/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.TEanalysis/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEFlow_Dockerfiles/GeneTEFlow.TEanalysis/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/16296165/80311919-67947d80-87b0-11ea-819d-8d22b68abe56.png"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/./images/genes.png"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/./images/TEs.png"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/./images/cpu.png"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: Install docker and singularity (need &quot;root&quot; permission)",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": "\\\n  **Step 1:**\n\n  Installation of Docker on Ubuntu Linux system:\n\n  **# apt-get install docker-ce**\n\n  **# docker --version**\n\n  Docker version 18.03.1-ce, build 9ee9f40\n\n  **# which docker**\n\n  /usr/bin/docker\n  \n\\\n  **Step 2:**\n\n  Installation of Singularity on Ubuntu Linux system:\n\n  **# apt-get install singularity-container**\n\n  **# singularity --version**\n\n  2.5.1-master.gd6e81547\n\n  **# which singularity**\n\n  /usr/local/bin/singularity\n  \n\n&nbsp;\n&nbsp;\n\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 4: Testing containers",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": "Testing the docker container:\n\n**$ docker run rnaseq\\_pipeline.app ls /RANSeq**\n\nRef: [https://docs.docker.com/engine/reference/commandline/run/](https://docs.docker.com/engine/reference/commandline/run/)\n\nTesting the Singularity container:\n\n**$ singularity exec rnaseq\\_pipeline.hpc.simg ls /RANSeq**\n\nRef: [https://singularity.lbl.gov/docs-run](https://singularity.lbl.gov/docs-run)\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 5: install Nextflow",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": "&nbsp;\n**Optional:**\n\nYou might need to create a new user account for running nextflow. For instance, create a user account with name: &quot;geneteflow1&quot;:\n\n**# useradd -m geneteflow1 -d /mnt/geneteflow1 -s /bin/bash**\n\n**# passwd geneteflow1 ( geneteflow123 )**\n\n&nbsp;\n\n**Then:**\n\nLogin as user geneteflow1, and install Nextflow on Ubuntu Linux system:\n\n**$ pwd**\n\n/home/geneteflow1\n\n**$ curl -s https://get.nextflow.io | bash**\n\n**$ ./nextflow run hello**\n\nRef: [https://www.nextflow.io/](https://www.nextflow.io/)\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9464622923355959,
      "result": {
        "original_header": "4. Q &amp; A Section",
        "type": "Text_excerpt",
        "value": "***1. Can I use a different human genome version (eg. hg19) or a different species (eg. mouse) in GeneTEFlow pipeline? If yes, please provide some instructions to do those. Eg. where to download the genome and gene annotation file.*** \nYes, you could choose your specific species and genome version.  \nHere we use Mus musculus (Mouse) mm10 as one example:\nMouse reference genome UCSC mm10 with the gene annotation (.gtf) were downloaded from illumina iGenomes collections : [https://support.illumina.com/sequencing/sequencing\\_software/igenome.html](https://support.illumina.com/sequencing/sequencing_software/igenome.html)\n```\n$ wget http://igenomes.illumina.com.s3-website-us-east-1.amazonaws.com/Mus_musculus/UCSC/mm10/Mus_musculus_UCSC_mm10.tar.gz\n\n$ tar xzvf Mus_musculus_UCSC_mm10.tar.gz\n\n$ cp Mus_musculus/UCSC/mm10/Sequence/WholeGenomeFasta/genome.fa .\n\n$ cp Mus_musculus/UCSC/mm10/Annotation/Genes/genes.gtf .\n```\n&nbsp;\n&nbsp;\n\\\nAlso, you need to change parameter \u201cparams.squireFetch.genome\u201d (Please see \"Configuration Parameters\" section)\n&nbsp;\nBASH2*\n&nbsp;\nIt would instruct SQuIRE to download mm10-related reference genome and TE annotations.\n \n&nbsp;\n&nbsp;\n\\\n***2. Can I run GeneTEFlow pipeline in a step-by-step mode and how?*** \nYes, the pipeline could be run flexibly in a step-by-step mode.\n&nbsp;\n&nbsp; \n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhongw2/GeneTEFlow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 1: Install docker and singularity (need &quot;root&quot; permission)",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": "\\\n  **Step 1:**\n\n  Installation of Docker on Ubuntu Linux system:\n\n  **# apt-get install docker-ce**\n\n  **# docker --version**\n\n  Docker version 18.03.1-ce, build 9ee9f40\n\n  **# which docker**\n\n  /usr/bin/docker\n  \n\\\n  **Step 2:**\n\n  Installation of Singularity on Ubuntu Linux system:\n\n  **# apt-get install singularity-container**\n\n  **# singularity --version**\n\n  2.5.1-master.gd6e81547\n\n  **# which singularity**\n\n  /usr/local/bin/singularity\n  \n\n&nbsp;\n&nbsp;\n\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 3: Build images (need &quot;root&quot; permission)",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": "  Using Dockerfile of GeneTEFlow.Process as an example:\n\n  **# cd GeneTEFlow\\_Dockerfiles/GeneTEFlow.Process/**\n\n  **# docker build -t rnaseq\\_pipeline.app .**\n\n  Ref: [https://docs.docker.com/engine/reference/commandline/build/](https://docs.docker.com/engine/reference/commandline/build/)\n\n&nbsp;\n\n**Optional:**\n\nIf you need to run containers by Singularity, another step is required to convert docker images to Singularity images:\n\n**# cd /mnt/**\n\n**# docker run -v /var/run/docker.sock:/var/run/docker.sock -v /mnt:/output --privileged -t --rm singularityware/docker2singularity rnaseq\\_pipeline.app**\n\nRef: [https://github.com/singularityware/docker2singularity](https://github.com/singularityware/docker2singularity)\n\nThe output file is a Singularity container under /mnt directory. For example, filename is &quot;rnaseq\\_pipeline.app-2020-3-29-cf77fe9d8630.simg&quot;.\n\nYou may rename it, for example, to &quot;rnaseq\\_pipeline.hpc.simg&quot; and run it on High Performance Computing (HPC) clusters by Singularity.\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneTEFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zhongw2"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 95428,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 50632,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 43268,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 14953,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 10068,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 2: collect all illumia raw data (.fastq.gz) into one folder",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "**$ mkdir RAW\\_DATA/**\n\nYou may use &quot;ln -s&quot; command to create the soft links to the original locations of raw data.\n\nHere human RNA sequencing data were downloaded through GEO accession number GSE30352, including brain, heart, and testis data with biological replicates.\n\n| **Samples** | **GEO number** | **SRR number** |\n| --- | --- | --- |\n| Brain replicate 1 | GSM752691 | SRR306838 |\n| Brain replicate 2 | GSM752694 | SRR306841 |\n| Brain replicate 3 | GSM752692 | SRR306839 |\n| Heart replicate 1 | GSM752699 | SRR306847 |\n| Heart replicate 2 | GSM752701 | SRR306850 |\n| Testis replicate 1 | GSM752707 | SRR306857 |\n| Testis replicate 2 | GSM752708 | SRR306858 |\n\n&nbsp;\n**To build small testing data sets, first 1,000,000 reads in each sample was used here.**\n\n**$zcat ~/original\\_locations/hsa.br.F.1\\_GSM752691\\_R1.fastq.gz |head -n 4000000|gzip > RAW\\_DATA/hsa.br.F.1\\_GSM752691\\_R1.fastq.gz**\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters Configuration",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "These parameters below would be editable in the configuration file so that researchers could manually change these settings according to the type of their RNA-Seq. \n\n\n| **Name** | **Default value** | **Description** |\n|:------------------|:----------------------------|:---------------------------|\n|params.reads | `./RAW_DATA/*_R{1,2}.fastq.gz` | The input RAW Fastq files |\n|params.adapter_trim_tag | `Y` | specify to run adapter trimming : \"Y\"(yes) or \"N\"(no) |\n|params.DESeq_run_tag | `Y` | specify to run DESeq2 for differetial expression analysis : \"Y\"(yes) or \"N\"(no) |\n|params.DESeq_replicates |  `Y` | specify to run DESeq2 with/without replicates: \"Y\"(with replicates) or \"N\"(without replicates)  |\n|params.sampleinfoxlsx | `sampledetail.xlsx` | specify a EXCEL file that stored RNA-Seq samples information |\n|params.sample.manifest.sheetname | `sample.manifest` | The sheet name in EXCEL file for each RNA-Seq sample information |\n|params.samplecompare.sheetname | `samplecompare` | The sheet name in EXCEL file for defining RNA-Seq sample comparisons |\n|params.deseq.log2FC.gene |  `1` | specify the cut off of log2 based foldchange for identifying differential gene expression |\n|params.deseq.fdr.gene | `0.05` | specify the cut off of adjusted P-vlaue for identifying differential gene expression |\n|params.deseq.gmean.gene | `50` | specify the cut off of max counts of group mean in DESeq2 result to filter out some low expressed genes |\n|params.forwardprob | `0.5` | specify the strand specific information for read alignment &nbsp; (Please refer RSEM parameter \u201c--forward-prob\u201d by the link http://deweylab.biostat.wisc.edu/rsem/rsem-calculate-expression.html)|\n|params.gtf | `genes.gtf` | specify the GTF annotation file for the analysis of differential gene expression |\n|params.fasta | `genome.fa` | specify the reference genome for the analysis of differential gene expression |\n|params.TE_pipeline_run_tag |  `Y` | specify to run the analysis for identifying differential TE expression : \"Y\"(yes) or \"N\"(no) |\n|params.deseq.log2FC.TE |  `1` | specify the cut off of log2 based foldchange for identifying differential TE expression |\n|params.deseq.fdr.TE | `0.05` | specify the cut off of adjusted P-vlaue for identifying differential TE expression |\n|params.deseq.gmean.TE | `50` | specify the cut off of max counts of group mean in DESeq2 result to filter out some low expressed TEs |\n|params.squireFetch.genome | `hg38` | specify the reference genome versions: hg38, hg19, mm10, mm9, etc. &nbsp; (Please refer SQuIRE \"squire Fetch\" by the link https://github.com/wyang17/SQuIRE#arguments-for-each-step) |\n|params.TrimmedDir | `Trimmed_RawData` | specify the name of output folder for trimmed reads |\n|params.FastQCdir | `FastQC_Results` | specify the name of output folder for QC results by FASTQC |\n|params.sampleinfoDir | `SampleinfoDir` | specify the name of output folder for TXT files that stored RNA-Seq samples information and comparisons |\n|params.ReportDir | `Report_Results` | specify the name of output folder for results genetated by the pipeline |\n|params.AllResultsDir | `All_Results` | specify the name of output folder for intermediate data and results genetated by the pipeline  |\n\n\n&nbsp;\n&nbsp;\n\n**Optional 1: configuration file for docker container**\n\nGeneTEFlow can be run locally by specifying it in the configuration file:\n\n**process.executor = &#39;local&#39;**\n\nGeneTEFlow provides functions to process both single-end and paired-end reads respectively. \nPlease see &quot;geneTEflow.SE.docker.config&quot; and &quot;geneTEflow.PE.docker.config&quot;.\n\n&nbsp;\n**1. Single-end reads:**\n\nFor example,\n\nSpecify the location of RAW data:\n\n**params.reads = &quot;./RAW\\_DATA/\\*\\_R1.fastq.gz&quot;**\n\nSpecify the details of samples information:\n\n**params.sampleinfoxlsx = &quot;SE\\_Nextflow\\_pipeline.Human\\_data.xlsx&quot;**\n\n&nbsp;\n**2. Paired-end reads:**\n\nFor example,\n\nSpecify the location of RAW data:\n\n**params.reads = &quot;./RAW\\_DATA/\\*\\_R{1,2}.fastq.gz&quot;**\n\nSpecify the details of samples information:\n\n**params.sampleinfoxlsx = &quot;PE\\_sampledetail.xlsx&quot;**\n\n\n**Please refer more details of configurations on** [https://www.nextflow.io/docs/latest/executor.html](https://www.nextflow.io/docs/latest/executor.html)\n\n&nbsp;\n&nbsp;\n\n**Optional 2: configuration file for Singularity container**\n\nGeneTEFlow can be run on HPC LSF system by specifying in the configuration:\n\n**process.executor = &#39;lsf&#39;**\n\nGeneTEFlow provides functions can process both single-end and paired-end reads. \nPlease see &quot;geneTEflow.SE.Singularity.config&quot; and &quot;geneTEflow.PE.Singularity.config&quot;.\n\n&nbsp;\n**1. Single-end reads:**\n\nFor example,\n\nSpecify the location of RAW data:\n\n**params.reads = &quot;./RAW\\_DATA/\\*\\_R1.fastq.gz&quot;**\n\nSpecify the details of samples information:\n\n**params.sampleinfoxlsx = &quot;SE\\_Nextflow\\_pipeline.Human\\_data.xlsx&quot;**\n\n&nbsp;\n**2. Paired-end reads:**\n\nFor example,\n\nSpecify the location of RAW data:\n\n**params.reads = &quot;./RAW\\_DATA/\\*\\_R{1,2}.fastq.gz&quot;**\n\nSpecify the details of samples information:\n\n**params.sampleinfoxlsx = &quot;PE\\_sampledetail.xlsx&quot;**\n\n**Please refer more details of configurations on** [https://www.nextflow.io/docs/latest/executor.html](https://www.nextflow.io/docs/latest/executor.html)\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 4: running GeneTEFlow",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "**Optional 1: running GeneTEFlow by interacting with docker containers**\n\n**Single-end reads:**\n\n**$ ~/nextflow run ~/GeneTEflow\\_pipelines/pipeline.SE.nf -c ~/GeneTEflow\\_pipelines/geneTEflow.SE.docker.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html**\n\n**Paired-end reads:**\n\n**$ ~/nextflow run ~/GeneTEflow\\_pipelines/pipeline.PE.nf -c ~/GeneTEflow\\_pipelines/geneTEflow.PE.docker.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html**\n\n&nbsp;\n&nbsp;\n\n**Optional 2: running GeneTEFlow by interacting with Singularity containers**\n\n**Single-end reads:**\n\n**$ ~/nextflow run ~/GeneTEflow\\_pipelines/pipeline.SE.nf -c ~/GeneTEflow\\_pipelines/geneTEflow.SE.Singularity.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html**\n\n**Paired-end reads:**\n\n**$ ~/nextflow run ~/GeneTEflow\\_pipelines/pipeline.PE.nf -c ~/GeneTEflow\\_pipelines/geneTEflow.PE.Singularity.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html**\n\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 5: Results generated by GeneTEFlow",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "Here human RNA sequencing data (GSE30352) were used as one example.\n\n**Significantly regulated genes identified by GeneTEFlow:**\n\n![genes](./images/genes.png)\n\n**Significantly regulated transposable elements identified by GeneTEFlow:**\n\n![TEs](./images/TEs.png)\n\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 6: Log files generated by GeneTEFlow",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "3. Running GeneTEFlow"
        ],
        "type": "Text_excerpt",
        "value": "GeneTEFlow generates three major log files: nf.report.html, nf.timeline.html, and flowchart.html.\n\n**One example is shown here from nf.report.html:**\n\n![cpu](./images/cpu.png)\n\n&nbsp;\n&nbsp;\n\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:40:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Section 2: Getting GeneTEflow from github:",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "2. Installation"
        ],
        "type": "Text_excerpt",
        "value": " **# git clone [https://github.com/zhongw2/GeneTEFlow](https://github.com/zhongw2/GeneTEFlow)**\n \n&nbsp;\n&nbsp;\n "
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(1) Example 1",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "4. Q &amp; A Section"
        ],
        "type": "Text_excerpt",
        "value": "&nbsp;\nFor example, if you may already have bam files, you could perform the analysis for the quantification of gene expression with RSEM directly, and skip the alignment step with STAR.\n&nbsp;\n\\\n**The command line is below:**\n```\n$docker run   -v  /your_working_directory:/mnt   -w /mnt    rnaseq_pipeline.app   rsem-calculate-expression  --bam --no-bam-output -p 8   --paired-end  /mnt/your.bam  /mnt/RSEMIndex_hg38_UCSC/hg38_UCSC    /mnt/RSEM_Output   \n```\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(2) Example 2",
        "parent_header": [
          "GeneTEFlow: A Nextflow-based one-stop pipeline for differential expression analysis of genes and locus-specific transposable elements from RNA sequencing",
          "4. Q &amp; A Section"
        ],
        "type": "Text_excerpt",
        "value": "&nbsp;\nMore intelligent way running in a step-by-step mode: For example, we could run QC first, removing some low-quality samples, and then continue downstream analysis. \n&nbsp;\n\\\n**The command line is below:**\n```\n$ ~/nextflow run ~/GeneTEflow_pipelines/pipeline.SE.QC.nf -c ~/GeneTEflow_pipelines/geneTEflow.SE.docker.QC.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html\n```\n&nbsp;\n\nAfter you check the QC results, you could remove some low-quality samples, and then continue downstream analysis.\n&nbsp;\n\\\n**The command line is below:**\n```\n$~/nextflow run ~/GeneTEflow_pipelines/pipeline.SE.afterQC.nf -c ~/GeneTEflow_pipelines/geneTEflow.SE.docker.afterQC.config -with-dag flowchart.html -with-report nf.report.html -with-timeline nf.timeline.html\n```\n&nbsp;\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEflow_pipelines/pipeline.PE.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEflow_pipelines/pipeline.SE.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEflow_pipelines/QC_example/pipeline.SE.afterQC.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhongw2/GeneTEFlow/master/GeneTEflow_pipelines/QC_example/pipeline.SE.QC.nf"
      },
      "technique": "file_exploration"
    }
  ]
}