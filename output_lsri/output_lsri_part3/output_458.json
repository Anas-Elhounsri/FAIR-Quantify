{
  "application_domain": [
    {
      "confidence": 32.37,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Minhyeok01/FCLQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-10T05:01:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-23T20:28:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast and Concurrent Lossless Qualityscores Compressor based on rust"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9438700966451705,
      "result": {
        "original_header": "Note",
        "type": "Text_excerpt",
        "value": "The precision should be set to more than 30 and less than 52.\nWhen compressing, you must enter the value of precision, file_size , and threadnum, and first_line and last_lein can be assigned any value. \nFor efficient use of threads, it is recommended that the file size be assigned as the number of original quality scores lines divided by greater than 100. \nWhen decompressing, you only need to assign a value to the thread_num , and any value to the other parameters. The name of the input file of decompression exclude the index of the file. For example, if the input file is FCLQC001.enc, only FCLQC is entered \nWhen random access, you only need to assign a value to the thread_num, first_line, last_line , and any value to the other parameters. \nExample of parameter file is in the sample_data folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Minhyeok01/FCLQC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Minhyeok01/FCLQC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Minhyeok01/FCLQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fqcomp"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999423476588098,
      "result": {
        "original_header": "Installaton of FCLQC",
        "type": "Text_excerpt",
        "value": "      Install rust language [rust](https://www.rust-lang.org/tools/install)\n      cd FCLQC \n      cargo build --release\n       \n"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Minhyeok01/FCLQC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Minhyeok01\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FCLQC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Minhyeok01"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Qt Script",
        "size": 382499,
        "type": "Programming_language",
        "value": "Qt Script"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rust",
        "size": 95180,
        "type": "Programming_language",
        "value": "Rust"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Q#",
        "size": 8578,
        "type": "Programming_language",
        "value": "Q#"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:00:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of FCLQC",
        "parent_header": [
          "fqcomp"
        ],
        "type": "Text_excerpt",
        "value": "      cd FCLQC/target/release\n      cargo.exe [Cargo OPTIONS] [MAIN OPTIONS] [INPUT FILE |OUTPUT NAME| PARAMETER FILE]\n      \n      MAINT OPTIONS: [-c | -d | -r]  \n                    -c : run compressor[default]\n                    -d : run decompressor\n                    -r : run random access\n                    -h : help"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compress",
        "parent_header": [
          "fqcomp",
          "Usage of FCLQC"
        ],
        "type": "Text_excerpt",
        "value": "      cargo.exe -c <INPUT-FILE> <OUTPUT-FILE-NAME> <PARAMETER-FILE> \n      \n      Example of runing  compressor \n      : ./main -c input.fastq outputname parameter.json"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Decompress and random access",
        "parent_header": [
          "fqcomp",
          "Usage of FCLQC"
        ],
        "type": "Text_excerpt",
        "value": "      cargo.exe -d(-r) <INPUT-FILE-NAME> <OUTPUT-FILE-NAME> <PARAMETER-FILE>\n  \n      Example of runing  decompressor in release mode \n      :./main -d inputname outputname parameter.json\n           \n      Example of runing  randaom access in release mode\n      :./main -r inputname outputname parameter.json\n                    \n                    \n                    \n"
      },
      "source": "https://raw.githubusercontent.com/Minhyeok01/FCLQC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}