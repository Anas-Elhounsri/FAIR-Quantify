{
  "application_domain": [
    {
      "confidence": 6.12,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ddb-qiwang/scMRA-torch"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-07T08:29:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-16T20:17:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scMRA: A robust deep learning method to annotate scRNA-seq data with multiple reference datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9869227534679308,
      "result": {
        "original_header": "scMRA-torch",
        "type": "Text_excerpt",
        "value": "scMRA: A robust deep learning method to annotate scRNA-seq data with multiple reference datasets \nThis is a torch implement of scMRA method.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9470889069117469,
      "result": {
        "original_header": "Data Format",
        "type": "Text_excerpt",
        "value": "Before we get started, we need to preprocess the scRNA-seq data into rna_mats and labels \n    rna_mats = [rna_mat1, rna_mat2, ..., rna_matn]\n    \nHere rna_mati are scRNA_seq count matrices aligned by gene. rna_matn is the query data (target data), others are reference data (source data). \n    labels = [label1, label2, ..., labeln]\n    \nWhere labeli are column vectors. For annotation use, the labeln which refers the targe label is not needed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9331993062399064,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "Once you accquire the rna_mats and labels, you can use scMRA to predict the cell type of query samples. \nWe give an instance that train the scMRA model with test data for 200 epochs. \n"
      },
      "source": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ddb-qiwang/scMRA-torch/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ddb-qiwang/scMRA-torch/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ddb-qiwang/scMRA-torch"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scMRA-torch"
      },
      "source": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9365985663877148,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "    from sklearn.metrics import adjusted_rand_score, adjusted_mutual_info_score\n    from preprocess import*\n    from torchdata import*\n    from loss import*\n    from network import*\n    import random\n    \n    random.seed(1111)\n    \n    solver = Solver(rna_mats=rna_mats, labels=labels)\n    \n    #train scMRA model for 200 epochs\n    for t in range(200):\n        print('Epoch: ', t)\n        num = solver.train_gcn_adapt(t)\n        best_acc = solver.test(t)\n    \n    ARI = np.around(adjusted_rand_score(np.array(best_acc[1]),np.array(best_acc[0])),5)\n    AMI = np.around(adjusted_mutual_info_score(np.array(best_acc[1]),np.array(best_acc[0])),5)\n \n"
      },
      "source": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ddb-qiwang/scMRA-torch/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scMRA-torch"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ddb-qiwang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 60148,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ddb-qiwang/scMRA-torch/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:24:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}