{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Kim\n    given-names: Albert Y.\n    orcid: https://orcid.org/0000-0001-7824-306X\n  - family-names: Allen\n    given-names: David N.\n    orcid: https://orcid.org/0000-0002-0712-9603\n  - family-names: Couch\n    given-names: Simon P.\n    orcid: https://orcid.org/0000-0001-5676-5107\ntitle: \"The forestecology R package for fitting and assessing neighborhood models of the effect of interspecific competition on the growth of trees\"\nversion: 0.2.0\ndoi: 10.1002/ece3.8129\ndate-released: 2021-10-01\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, we pledge to respect all people who \ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual language or\nimagery, derogatory comments or personal attacks, trolling, public or private harassment,\ninsults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments,\ncommits, code, wiki edits, issues, and other contributions that are not aligned to this \nCode of Conduct. Project maintainers who do not follow the Code of Conduct may be removed \nfrom the project team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by \nopening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the Contributor Covenant \n(http://contributor-covenant.org), version 1.0.0, available at \nhttp://contributor-covenant.org/version/1/0/0/\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rudeboybert/forestecology"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-10T20:09:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-20T14:10:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "forestecology R package of Methods and Data for Forest Ecology Model Fitting and Assessment"
      },
      "technique": "GitHub_API"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rudeboybert/forestecology/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rudeboybert/forestecology/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rudeboybert/forestecology/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rudeboybert/forestecology"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "forestecology"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/144327964"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/man/figures/README-unnamed-chunk-5-1.png"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/man/figures/README-unnamed-chunk-8-1.png"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/man/figures/README-unnamed-chunk-11-1.png"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/man/figures/README-unnamed-chunk-15-1.png"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "forestecology"
        ],
        "type": "Text_excerpt",
        "value": "You can install the released version of forestecology from\n[CRAN](https://CRAN.R-project.org) with:\n\n``` r\ninstall.packages(\"forestecology\")\n```\n\nAnd the development version from [GitHub](https://github.com/) with:\n\n``` r\n# install.packages(\"remotes\")\nremotes::install_github(\"rudeboybert/forestecology\")\n```\n\nThis package is designed to work for spatially mapped, repeat censused\nforests plots. The package has commands to fit models of tree growth\nbased on neighborhood competition which can be used to estimate\nspecies-specific competition coefficients. The model fits can then be\nevaluated using a spatial cross-validation scheme to detect possible\noverfitting. Additionally, these models can test whether the species\nidentity of competitors matters using a permutation test-style shuffling\nof competitor identity (under the null hypothesis) and subsequently\nevaluating if model performance changes.\n\nSee Kim et al.\u00a0(2021) [The `forestecology` R package for fitting and\nassessing neighborhood models of the effect of interspecific competition\non the growth of trees](http://doi.org/10.1002/ece3.8129) for a full\ndescription; the source code for this paper can be found in the `paper/`\nfolder.\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "forestecology",
        "type": "Text_excerpt",
        "value": "[![DOI](https://zenodo.org/badge/144327964.svg)](https://zenodo.org/badge/latestdoi/144327964)\n[![Build\nStatus](https://github.com/rudeboybert/forestecology/workflows/R-CMD-check/badge.svg)](https://github.com/rudeboybert/forestecology/actions)\n[![Codecov test\ncoverage](https://codecov.io/gh/rudeboybert/forestecology/branch/master/graph/badge.svg)](https://codecov.io/gh/rudeboybert/forestecology?branch=master)\n[![CRAN\nstatus](https://www.r-pkg.org/badges/version/forestecology)](https://cran.r-project.org/package=forestecology)\n \n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rudeboybert/forestecology/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "forestecology, tidyverse"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2018\nCOPYRIGHT HOLDER: David Allen\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "forestecology"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rudeboybert"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 141151,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 109904,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rudeboybert",
          "type": "User"
        },
        "date_created": "2021-10-02T14:00:57Z",
        "date_published": "2021-10-02T14:02:36Z",
        "description": "* Added Ecology & Evolution paper to `paper/` <https://doi.org/10.1002/ece3.8129>\r\n* Made choice of competitor explanatory variable more flexible by adding `create_focal_vs_comp(comp_x_var = ...)` argument.\r\n",
        "html_url": "https://github.com/rudeboybert/forestecology/releases/tag/v0.2.0",
        "name": "Published Ecology and Evolution paper",
        "release_id": 50678858,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/rudeboybert/forestecology/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rudeboybert/forestecology/releases/50678858",
        "value": "https://api.github.com/repos/rudeboybert/forestecology/releases/50678858",
        "zipball_url": "https://api.github.com/repos/rudeboybert/forestecology/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rudeboybert",
          "type": "User"
        },
        "date_created": "2021-09-01T23:04:03Z",
        "date_published": "2021-09-01T23:06:06Z",
        "html_url": "https://github.com/rudeboybert/forestecology/releases/tag/v0.1.0.9000",
        "name": "Accepted Ecology & Evolution manuscript",
        "release_id": 48852702,
        "tag": "v0.1.0.9000",
        "tarball_url": "https://api.github.com/repos/rudeboybert/forestecology/tarball/v0.1.0.9000",
        "type": "Release",
        "url": "https://api.github.com/repos/rudeboybert/forestecology/releases/48852702",
        "value": "https://api.github.com/repos/rudeboybert/forestecology/releases/48852702",
        "zipball_url": "https://api.github.com/repos/rudeboybert/forestecology/zipball/v0.1.0.9000"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rudeboybert",
          "type": "User"
        },
        "date_created": "2021-03-12T15:08:49Z",
        "date_published": "2021-03-12T15:21:17Z",
        "description": "* Switched CI from travis to GitHub actions\r\n* Refactored spatial cross-validation in `run_cv()` to use `purrr::map_dfr()` using the `fit_one_fold()` function\r\n* Transition modeling, prediction, and plotting functions from generics to S3 methods for the `comp_bayes_lm` class.\r\n* Aligned inputs and outputs of modeling and prediction functions with S3 modeling conventions and tidy data principles. Namely,\r\n    - The `comp_bayes_lm()` modeling function takes in a data frame at a level of observation equivalent to that which the model is actually fit to: each row is a unique focal observation/tree rather than focal-competitor observation pairs/trees. The function outputs a model object with several associated modeling S3 methods.\r\n    - `predict.comp_bayes_lm()` takes in a model object as its first argument and input data as its second argument. The output, an unnamed vector, has length equal to the input data.\r\n* Added argument checks.",
        "html_url": "https://github.com/rudeboybert/forestecology/releases/tag/v0.1.0",
        "name": "First CRAN submission",
        "release_id": 39722518,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/rudeboybert/forestecology/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rudeboybert/forestecology/releases/39722518",
        "value": "https://api.github.com/repos/rudeboybert/forestecology/releases/39722518",
        "zipball_url": "https://api.github.com/repos/rudeboybert/forestecology/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run spatial cross-validation",
        "parent_header": [
          "forestecology",
          "Example analysis"
        ],
        "type": "Text_excerpt",
        "value": "Whereas in our example above we fit our model to the entirety of the\ndata and then generate fitted/predicted growths on this same data, we\nnow apply the same model with spatial cross-validation. All the trees in\na given fold will be given a turn as the \u201ctest\u201d data while the trees in\nall remaining folds will be the \u201ctraining\u201d data. We then fit the model\nto the training data, but compute fitted/predicted growths for the\nseparate and independent data.\n\n``` r\nfocal_vs_comp_ex <- focal_vs_comp_ex %>%\n  run_cv(comp_dist = comp_dist, blocks = blocks_ex)\n```\n\nNote the increase in RMSE, reflecting the fact that our original\nestimate of model error was overly optimistic as it did not account for\nspatial autocorrelation.\n\n``` r\nfocal_vs_comp_ex %>%\n  rmse(truth = growth, estimate = growth_hat) %>%\n  pull(.estimate)\n#> [1] 0.4068709\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:05:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example analysis",
        "parent_header": [
          "forestecology"
        ],
        "type": "Text_excerpt",
        "value": "We present an example analysis using toy data pre-loaded into the\npackage where we will:\n\n1.  Compute growth of trees based on census data\n2.  Add spatial information\n3.  Identify all focal and corresponding competitor trees\n4.  Fit model and make predictions\n5.  Run spatial cross-validation\n\n\n\n``` r\nlibrary(tidyverse)\nlibrary(forestecology)\nlibrary(patchwork)\nlibrary(blockCV)\n\n# Resolve conflicting functions\nfilter <- dplyr::filter\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute growth of trees based on census data",
        "parent_header": [
          "forestecology",
          "Example analysis"
        ],
        "type": "Text_excerpt",
        "value": "The starting point of our analysis are data from two repeat censuses\n`census_1_ex` and `census_2_ex`. For example, consider the forest census\ndata in `census_1_ex`.\n\n``` r\ncensus_1_ex\n#> # A tibble: 10 \u00d7 7\n#>       ID sp                gx    gy date       codes   dbh\n#>    <int> <chr>          <dbl> <dbl> <date>     <chr> <dbl>\n#>  1     1 sugar maple     0.75  2.5  2015-06-01 M         5\n#>  2     2 American beech  1.5   2.5  2015-06-01 M        20\n#>  3     3 sugar maple     1.75  2.25 2015-06-01 M        15\n#>  4     4 American beech  3     1.5  2015-06-01 M        12\n#>  5     5 sugar maple     3.25  1.75 2015-06-01 M        35\n#>  6     6 American beech  5.5   4.5  2015-06-01 M         6\n#>  7     7 sugar maple     8     1.5  2015-06-01 M        22\n#>  8     8 American beech  8.5   0.75 2015-06-01 M        14\n#>  9     9 sugar maple     8.75  1.5  2015-06-01 M        42\n#> 10    10 American beech  8.75  1.75 2015-06-01 M         4\n```\n\nWe convert the `census_1_ex` data frame to an object of type `sf` and\nthen plot using `geom_sf()`.\n\n``` r\nggplot() +\n  geom_sf(\n    data = census_1_ex %>% sf::st_as_sf(coords = c(\"gx\", \"gy\")),\n    aes(col = sp, size = dbh)\n  )\n```\n\n<img src=\"man/figures/README-unnamed-chunk-5-1.png\" width=\"100%\" />\n\nWe first combine data from two repeat censuses into a single `growth`\ndata frame that has the average annual growth of all trees alive at both\ncensuses that aren\u2019t resprouts at the second census per Allen and Kim\n(2020).\n\n``` r\ngrowth_ex <-\n  compute_growth(\n    census_1 = census_1_ex %>% \n      mutate(sp = to_any_case(sp)),\n    census_2 = census_2_ex %>% \n      filter(!str_detect(codes, \"R\")) %>% \n      mutate(sp = to_any_case(sp)),\n    id = \"ID\"\n  ) %>% \n  # Compute basal area:\n  mutate(basal_area = 0.0001 * pi * (dbh1 / 2)^2)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Add spatial information",
        "parent_header": [
          "forestecology",
          "Example analysis"
        ],
        "type": "Text_excerpt",
        "value": "Our growth model assumes that two individual trees compete if they are\nless than a pre-specified distance `comp_dist` apart. Furthermore, we\ndefine a buffer region of size `comp_dist` from the boundary of the\nstudy region.\n\n``` r\n# Set competitor distance\ncomp_dist <- 1\n\n# Add buffer variable to growth data frame\ngrowth_ex <- growth_ex %>%\n  add_buffer_variable(size = comp_dist, region = study_region_ex)\n\n# Optional: Create sf representation of buffer region\nbuffer_region <- study_region_ex %>% \n  compute_buffer_region(size = comp_dist)\n```\n\nIn the visualization below, the solid line represents the boundary of\nthe study region while the dashed line delimits the buffer region\nwithin. All trees outside this buffer region (in red) will be our\n\u201cfocal\u201d trees of interest in our model since we have complete\ncompetitor information on all of them. All trees inside this buffer\nregion (in blue) will only be considered as \u201ccompetitor\u201d trees to\n\u201cfocal\u201d trees.\n\n``` r\nbase_plot <- ggplot() +\n  geom_sf(data = study_region_ex, fill = \"transparent\") +\n  geom_sf(data = buffer_region, fill = \"transparent\", linetype = \"dashed\")\n\nbase_plot + \n  geom_sf(data = growth_ex, aes(col = buffer), size = 2)\n```\n\n<img src=\"man/figures/README-unnamed-chunk-8-1.png\" width=\"100%\" />\n\nNext we add information pertaining to our spatial cross-validation\nscheme. We first manually define the spatial blocks that will act as our\ncross-validation folds and convert them to an `sf` object using the\n`sf_polygon()` function from the `sfheaders` package.\n\n``` r\nfold1 <- rbind(c(0, 0), c(5, 0), c(5, 5), c(0, 5), c(0, 0))\nfold2 <- rbind(c(5, 0), c(10, 0), c(10, 5), c(5, 5), c(5, 0))\n\nblocks_ex <- bind_rows(\n  sf_polygon(fold1),\n  sf_polygon(fold2)\n) %>%\n  mutate(folds = c(1, 2) %>% factor())\n```\n\nNext we assign each tree to the correct folds using the `foldID`\nvariable of the output returned by the `spatialBlock()` function from\nthe [`blockCV`](https://github.com/rvalavi/blockCV) package.\n\n``` r\nSpatialBlock_ex <- blockCV::spatialBlock(\n  speciesData = growth_ex, k = 2, selection = \"systematic\", blocks = blocks_ex,\n  showBlocks = FALSE, verbose = FALSE\n)\n\ngrowth_ex <- growth_ex %>%\n  mutate(foldID = SpatialBlock_ex$foldID %>% factor())\n```\n\nIn the visualization below, the spatial blocks that act as our\ncross-validation folds are delineated in orange. The shape of each point\nindicates which fold each tree has been assigned to.\n\n``` r\nbase_plot + \n  geom_sf(data = growth_ex, aes(col = buffer, shape = foldID), size = 2) +\n  geom_sf(data = blocks_ex, fill = \"transparent\", col = \"orange\")\n```\n\n<img src=\"man/figures/README-unnamed-chunk-11-1.png\" width=\"100%\" />\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute focal versus competitor tree information",
        "parent_header": [
          "forestecology",
          "Example analysis"
        ],
        "type": "Text_excerpt",
        "value": "Based on our `growth` data frame, we now explicitly define all \u201cfocal\u201d\ntrees and their respective \u201ccompetitor\u201d trees in a `focal_vs_comp` data\nframe. This data frame has rows corresponding to each focal tree, and\nall information about its competitors are saved in the list-column\nvariable `comp`. We implemented this nested format using `nest()` in\norder to minimize redundancy, given that the same tree can act as a\ncompetitor multiple times.\n\n``` r\nfocal_vs_comp_ex <- growth_ex %>%\n  create_focal_vs_comp(comp_dist, blocks = blocks_ex, id = \"ID\", comp_x_var = \"basal_area\")\nfocal_vs_comp_ex\n#> # A tibble: 6 \u00d7 7\n#>   focal_ID focal_sp         dbh foldID    geometry growth comp            \n#>      <dbl> <fct>          <dbl> <fct>      <POINT>  <dbl> <list>          \n#> 1        2 american_beech    20 1        (1.5 2.5)  0.800 <tibble [2 \u00d7 4]>\n#> 2        3 sugar_maple       15 1      (1.75 2.25)  1.00  <tibble [1 \u00d7 4]>\n#> 3        4 american_beech    12 1          (3 1.5)  0.400 <tibble [1 \u00d7 4]>\n#> 4        5 sugar_maple       35 1      (3.25 1.75)  1.40  <tibble [1 \u00d7 4]>\n#> 5        7 sugar_maple       22 2          (8 1.5)  0.600 <tibble [3 \u00d7 4]>\n#> 6        9 sugar_maple       42 2       (8.75 1.5)  1.40  <tibble [3 \u00d7 4]>\n```\n\nUsing `unnest()` we can fully expand the competitor information saved in\nthe `focal_vs_comp` data frame. For example, the tree with `focal_ID`\nequal to 2 located at (1.5, 2.5) has two competitors within `comp_dist`\ndistance from it.\n\n``` r\nfocal_vs_comp_ex %>% \n  unnest(cols = \"comp\")\n#> # A tibble: 11 \u00d7 10\n#>    focal_ID focal_sp         dbh foldID    geometry growth comp_ID  dist\n#>       <dbl> <fct>          <dbl> <fct>      <POINT>  <dbl>   <dbl> <dbl>\n#>  1        2 american_beech    20 1        (1.5 2.5)  0.800       1 0.75 \n#>  2        2 american_beech    20 1        (1.5 2.5)  0.800       3 0.354\n#>  3        3 sugar_maple       15 1      (1.75 2.25)  1.00        2 0.354\n#>  4        4 american_beech    12 1          (3 1.5)  0.400       5 0.354\n#>  5        5 sugar_maple       35 1      (3.25 1.75)  1.40        4 0.354\n#>  6        7 sugar_maple       22 2          (8 1.5)  0.600       8 0.901\n#>  7        7 sugar_maple       22 2          (8 1.5)  0.600       9 0.75 \n#>  8        7 sugar_maple       22 2          (8 1.5)  0.600      10 0.791\n#>  9        9 sugar_maple       42 2       (8.75 1.5)  1.40        7 0.75 \n#> 10        9 sugar_maple       42 2       (8.75 1.5)  1.40        8 0.791\n#> 11        9 sugar_maple       42 2       (8.75 1.5)  1.40       10 0.25 \n#> # \u2026 with 2 more variables: comp_sp <fct>, comp_x_var <dbl>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fit model and make predictions",
        "parent_header": [
          "forestecology",
          "Example analysis"
        ],
        "type": "Text_excerpt",
        "value": "We then fit our competitor growth model as specified in Allen and Kim\n(2020).\n\n``` r\ncomp_bayes_lm_ex <- focal_vs_comp_ex %>%\n  comp_bayes_lm(prior_param = NULL)\n```\n\nThe resulting output is an `comp_bayes_lm` object containing the\nposterior distribution of all linear regression parameters, the\nintercept, the slope for dbh for each species, and a matrix of all\nspecies pairs competitive effects on growth. The S3 object class is\nassociated with several methods.\n\n``` r\n# Print\ncomp_bayes_lm_ex\n#> Bayesian linear regression model parameters with a multivariate Normal\n#> likelihood. See ?comp_bayes_lm for details:\n#> \n#>   parameter_type           prior posterior\n#> 1 Inverse-Gamma on sigma^2 a_0   a_star   \n#> 2 Inverse-Gamma on sigma^2 b_0   b_star   \n#> 3 Multivariate t on beta   mu_0  mu_star  \n#> 4 Multivariate t on beta   V_0   V_star   \n#> \n#> Model formula:\n#> growth ~ sp + dbh + dbh * sp + american_beech * sp + sugar_maple * sp\n\n# Posterior distributions (plots combined with patchwork pkg)\np1 <- autoplot(comp_bayes_lm_ex, type = \"intercepts\")\np2 <- autoplot(comp_bayes_lm_ex, type = \"dbh_slopes\")\np3 <- autoplot(comp_bayes_lm_ex, type = \"competition\")\n(p1 | p2) / p3\n```\n\n<img src=\"man/figures/README-unnamed-chunk-15-1.png\" width=\"100%\" />\n\nFurthermore, we can apply a `predict()` method to the resulting\n`comp_bayes_lm` object to obtain fitted/predicted values of this model.\nWe append these `growth_hat` values to our `focal_vs_comp` data frame.\n\n``` r\nfocal_vs_comp_ex <- focal_vs_comp_ex %>%\n  mutate(growth_hat = predict(comp_bayes_lm_ex, newdata = focal_vs_comp_ex))\nfocal_vs_comp_ex\n#> # A tibble: 6 \u00d7 8\n#>   focal_ID focal_sp         dbh foldID    geometry growth comp            \n#>      <dbl> <fct>          <dbl> <fct>      <POINT>  <dbl> <list>          \n#> 1        2 american_beech    20 1        (1.5 2.5)  0.800 <tibble [2 \u00d7 4]>\n#> 2        3 sugar_maple       15 1      (1.75 2.25)  1.00  <tibble [1 \u00d7 4]>\n#> 3        4 american_beech    12 1          (3 1.5)  0.400 <tibble [1 \u00d7 4]>\n#> 4        5 sugar_maple       35 1      (3.25 1.75)  1.40  <tibble [1 \u00d7 4]>\n#> 5        7 sugar_maple       22 2          (8 1.5)  0.600 <tibble [3 \u00d7 4]>\n#> 6        9 sugar_maple       42 2       (8.75 1.5)  1.40  <tibble [3 \u00d7 4]>\n#> # \u2026 with 1 more variable: growth_hat <dbl>\n```\n\nWe then compute the root mean squared error (RMSE) of the observed\nversus fitted growths as a measure of our model\u2019s fit.\n\n``` r\nfocal_vs_comp_ex %>%\n  rmse(truth = growth, estimate = growth_hat) %>%\n  pull(.estimate)\n#> [1] 0.1900981\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rudeboybert/forestecology/master/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}