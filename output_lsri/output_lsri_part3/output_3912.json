{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hanasusak/rvGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-03T11:01:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-15T00:25:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9775681184116718,
      "result": {
        "original_header": "rvGWAS",
        "type": "Text_excerpt",
        "value": "This pipeline is developed by Hana Susak<sup>1</sup>, with contribution of Georgia Escaramis<sup>1,2</sup>\n1. Centre for Genomic Regulation (CRG)\n2. Biomedical Research Networking Centres in Epidemiology and Public Health (CIBERESP) \nIn this repository are sequence of R scripts to perform RVAS (Rare-variant Association Study). To perform this analysis you will need R and installed nessesary packages (from R console instructions):\n```R\ninstall.packages(c(\"argparse\", \"ggplot2\", \"mixOmics\",\"reshape2\", \"data.table\", \"MiST\", \"SKAT\", \"KBAC\", \"parallel\", \"BMRV\"))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9320972405302771,
      "result": {
        "original_header": "Quality Control analysis",
        "type": "Text_excerpt",
        "value": "To start you need to perform inital QC check. For that you need at least two input files, multi-sample VCF-like file (with additional annotation, done by eDiVa) and Samples info file (tab separated, where Samples IDs are matching the one in multi-sample file). Additionaly you can add separete mutlis-sample file for InDels and samples IDs correction file (with mappings) in case some sample IDs are not matching in two before mentioned files. \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9148545244242533,
      "result": {
        "original_header": "HUGO gene names correction",
        "type": "Text_excerpt",
        "value": "We observed that genes often have inconsistent names (e.g. sometimes in annotation is used old name or synonimous). We created script to correct this to the latest update of HUGO approved names, when possible, as there are ambiguous cases (e.g. one old name lead to 2 approved current names) which requires manual check up. Therefore we recomand to run this script to minimize possible confusion or errors with names. \nFor more information how to run this Correct names script type at your terminal:\n```Shell\nRscript CorrectGeneNames.R --h\n```\nAs database has restricted access, we recomand to just provide following:\n* file path to multi-sample VCF-like file which was output from QC script\n* column number in which HUGO gene names are in this file \n* optionally and recommandable for the first time you can print out steps of the script by setting -v T  \nThis will cause script to get mappings from url link, which is bit slower but is only nessesary to do once. \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9740509652967044,
      "result": {
        "original_header": "Performing BURDEN, KBAC, SKAT-O, MiST, HBMR, and BATI tests",
        "type": "Text_excerpt",
        "value": "And additional parameters:\n* Allele Frequncy threshold (default 0.01)\n* List of genes you want to test (optional, if not set all genes in your seqence space will be used)\n* Output folder (optional, if not set new folder in current directoy will be created) \nOther parameters are also nessesary (CADD damage score threshold, number of permutations, number of samples to be used as controls, etc), but this parameters are asked from user to enter interactivly. \nThis script has two modes, interactive (recomanded if it is a panel of genes and for few permutations) or you can send it like a job by configuring bash script simmilar as run_bash_sim.sh, but with your cluster specifications (recomanded for WES data with a lot of samples or many permutations).\nWe would recommand to running it for the first time with one or few permutations to get familliar with nessesary parameters. Then to send it as a job to cluster if nessesary (and you have enough cases compared to controls), and run it for 100 or more perutations.  \nReason to run many permutations is to ensure that you are filtering out frequent population specific SNPs or indels (not present at high frequency at EVS of 1000 genome project) if you have more then enough controls (controls have to be well mached to cases and good representation of population, no much mixture). If you would calculate AF on whole set of controls and filter based on this AF, you would bias your results as you would use same contorls samples for estimating AF and for testing in variant associaition tests.   \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9369669201314439,
      "result": {
        "original_header": "Merging results for N permutation",
        "type": "Text_excerpt",
        "value": "We also provide script to get summary information when you perfom a lot of permutations.\nTo get help how to obtain this summary files check:\n```Shell\nRscript summary_table_Nperm_v2.R --h\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hanasusak/rvGWAS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hanasusak/rvGWAS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hanasusak/rvGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rvGWAS"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/run_bash_sim.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999998251403934,
      "result": {
        "original_header": "rvGWAS",
        "type": "Text_excerpt",
        "value": "In this repository are sequence of R scripts to perform RVAS (Rare-variant Association Study). To perform this analysis you will need R and installed nessesary packages (from R console instructions):\n```R\ninstall.packages(c(\"argparse\", \"ggplot2\", \"mixOmics\",\"reshape2\", \"data.table\", \"MiST\", \"SKAT\", \"KBAC\", \"parallel\", \"BMRV\"))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850975327463486,
      "result": {
        "original_header": "Quality Control analysis",
        "type": "Text_excerpt",
        "value": "For more information how to run this QC script type at your terminal:\n```Shell\nRscript QC_and_filtering_multisaple_call.R --h\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.983088115665395,
      "result": {
        "original_header": "Performing BURDEN, KBAC, SKAT-O, MiST, HBMR, and BATI tests",
        "type": "Text_excerpt",
        "value": "Now you are ready to perform tests. Your input files are output files from previous steps:\n* VCF-like file with correcte HUGO names (output from Correct names script)\n* Samples info file with PCA components added (output from QC script) \nAnd additional parameters:\n* Allele Frequncy threshold (default 0.01)\n* List of genes you want to test (optional, if not set all genes in your seqence space will be used)\n* Output folder (optional, if not set new folder in current directoy will be created) \nFor more information how to run this RVAS testing script type at your terminal:\n```Shell\nRscript RVAS_tests_prec.R --h\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.907060944385425,
      "result": {
        "original_header": "Merging results for N permutation",
        "type": "Text_excerpt",
        "value": "We also provide script to get summary information when you perfom a lot of permutations.\nTo get help how to obtain this summary files check:\n```Shell\nRscript summary_table_Nperm_v2.R --h\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8830768671830919,
      "result": {
        "original_header": "Performing BURDEN, KBAC, SKAT-O, MiST, HBMR, and BATI tests",
        "type": "Text_excerpt",
        "value": "Now you are ready to perform tests. Your input files are output files from previous steps:\n* VCF-like file with correcte HUGO names (output from Correct names script)\n* Samples info file with PCA components added (output from QC script) \n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hanasusak/rvGWAS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the terms of the MIT license.\n"
      },
      "source": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rvGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hanasusak"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 218947,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2661,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hanasusak/rvGWAS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:33:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}