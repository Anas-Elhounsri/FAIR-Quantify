{
  "application_domain": [
    {
      "confidence": 0.8905348284586804,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wmglab-duke/ascent"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-21T21:16:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T17:25:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASCENT (Automated Simulations to Characterize Electrical Nerve Thresholds): A pipeline for sample-specific computational modeling of electrical stimulation of peripheral nerves"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9341558135710414,
      "result": {
        "original_header": "ASCENT: Automated Simulations to Characterize Electrical Nerve Thresholds",
        "type": "Text_excerpt",
        "value": "**ASCENT** is an open source platform for simulating peripheral nerve stimulation. For more information, see the ASCENT documentation: [https://wmglab-duke-ascent.readthedocs.io/en/latest/](https://wmglab-duke-ascent.readthedocs.io/en/latest/) \n**Cite both the paper and the DOI for the release of the repository used for your work. We encourage you to clone the most recent commit of the repository.** \n  > **Musselman, E. D.**, **Cariello, J. E.**, Grill, W. M., & Pelot, N. A. (2021). ASCENT (Automated Simulations to Characterize Electrical Nerve Thresholds): A pipeline for sample-specific computational modeling of electrical stimulation of peripheral nerves. PLOS Computational Biology, 17(9), e1009285. <https://doi.org/10.1371/journal.pcbi.1009285> \n- **Cite the code (use the DOI for the version of code used):** \nThe copyrights of this software are owned by Duke University. As such, two licenses for this software are offered: \n2. A custom license with Duke University, for commercial use or for use without the GPLv2 license restrictions. \nAs a recipient of this software, you may choose which license to receive the code under. Outside contributions to the Duke-owned code base cannot be accepted unless the contributor transfers the copyright to those changes over to Duke University. \nPlease note that this software is distributed AS IS, WITHOUT ANY WARRANTY; and without the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/wmglab-duke/ascent/wiki"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wmglab-duke/ascent/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wmglab-duke/ascent"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASCENT: Automated Simulations to Characterize Electrical Nerve Thresholds"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/config/system/installation/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/379064819"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://img.youtube.com/vi/rG-KU7wWcXY/maxresdefault.jpg"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://img.youtube.com/vi/C41nHvMXyEo/maxresdefault.jpg"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The copyrights of this software are owned by Duke University. As such,\ntwo licenses for this software are offered:\n\n1. An open-source license under the GPLv2 license for non-commercial\nuse (see below).\n2. A custom license with Duke University, for commercial use or for\nuse without the GPLv2 license restrictions.\n\nAs a recipient of this software, you may choose which license to\nreceive the code under. Outside contributions to the Duke-owned code\nbase cannot be accepted unless the contributor transfers the copyright\nto those changes over to Duke University.\n\nTo enter a custom license agreement without the GPLv2 license\nrestrictions, please contact the Digital Innovations department at\nDuke Office for Translation & Commercialization\n(https://olv.duke.edu/software/) at olvquestions@duke.edu with\nreference to \"OTC File No. 7483\" in your email.\n\nPlease note that this software is distributed AS IS, WITHOUT ANY\nWARRANTY; and without the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.\n**********************************************************************\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    ascent\n    Copyright (C) 2023  wmglab\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/./config/system/images/sparc-logo-white_bwoutline.svg"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ascent"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "wmglab-duke"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 510528,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 399997,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1119,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PowerShell",
        "size": 259,
        "type": "Programming_language",
        "value": "PowerShell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://wmglab-duke-ascent.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ptz17",
          "type": "User"
        },
        "date_created": "2024-03-07T06:38:13Z",
        "date_published": "2024-03-07T06:42:25Z",
        "description": "DOI: [10.5281/zenodo.10791676](https://doi.org/10.5281/zenodo.10791676)\r\n\r\nASCENT v1.3.1 Release Notes\r\n\r\nv1.3.0 -> v1.3.1: new features\r\n- moved FiberZMode from model.json into sim.json\r\n- added \"EXPLICIT\" FiberZMode to model explicitly provided 3D fiber coordinates\r\n- added \"EXPLICIT_3D\" FiberXYMode to pair with the explicit FiberZMode when modeling explicit 3D fiber coordinates\r\n- added 3D plotting function to visualize 3D fibers within fascicles/nerve\r\n- added pop-up plots for when invalid fibers are detected\r\n\r\nv1.3.0 -> v1.3.1: docs\r\n- added documentation for the new JSON configuration properties used for modeling user-defined 3D explicit fibers and included explicit_3D template example file\r\n- added DOI information for new papers using ASCENT\r\n- added cuff parameter descriptions to the ImThera_flip_100.json cuff preset\r\n- added documentation for implementations of clinically used cuff electrodes (Cuff Sources)\r\n- updated documentation for dataset generation tool\r\n\r\nv1.3.0 -> v1.3.1: bug fixes\r\n- fixed error when importing from ascent's classes in analysis scripts by adding root directory to sys.path\r\n- fixed error when unpacking a sim object's potentials_product attribute that does not contain any active recording cuffs \r\n\r\nv1.3.0 -> v1.3.1: miscellaneous\r\n- upgraded to Python 3.10 for windows install\r\n- added nd_line python package to required package dependencies in requirements.txt\r\n",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.3.1",
        "name": "ASCENT v1.3.1",
        "release_id": 145189297,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/145189297",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/145189297",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ptz17",
          "type": "User"
        },
        "date_created": "2024-02-02T04:32:29Z",
        "date_published": "2024-02-02T04:37:51Z",
        "description": "DOI: [10.5281/zenodo.10608262](https://doi.org/10.5281/zenodo.10608262)\r\n\r\nASCENT v1.3.0 Release Notes\r\n\r\nv1.2.2 -> v1.3.0: new features\r\n- extended framework to model two cuffs (stimulation and recording)\r\n- modeling a recording cuff will produce a single fiber action potential, and optionally a transmembrane current matrix, output file per fiber simulation\r\n- model.json now can additionally accept a list of cuff JSON objects in the \"cuff\" property\r\n- sim.json now contains an \"active_recs\" property for defining electrode weighting for recording cuffs\r\n- added analysis scripts to plot recorded single fiber and compound action potentials\r\n- added analysis script to import transmembrane current matrices and generate current templates\r\n- submit.py now checks for successful compilation of NEURON files\r\n\r\nv1.2.2 -> v1.3.0: docs\r\n- added documentation for modeling neural recording and new JSON configuration properties\r\n- added documentation for using ASCENT on oSPARC\r\n- added refs for new papers using ASCENT\r\n\r\nv1.2.2 -> v1.3.0: bug fixes\r\n- fixed error with coordinate handling of supersampled fibers\r\n- fixed bug where submit.py would fail if on windows and the user name started with an n\r\n\r\nv1.2.2 -> v1.3.0: miscellaneous\r\n- upgraded to Python 3.10\r\n- upgraded pre-commit hooks\r\n- changed default dataset export behavior to include sectionwise 2D files ",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.3.0",
        "name": "ASCENT v1.3.0",
        "release_id": 139612871,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/139612871",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/139612871",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ptz17",
          "type": "User"
        },
        "date_created": "2024-01-25T22:00:13Z",
        "date_published": "2024-01-25T23:49:00Z",
        "description": "DOI: [10.5281/zenodo.10570215](https://doi.org/10.5281/zenodo.10570215)\r\n\r\nASCENT 1.3.0-rc.1 Release Notes\r\n\r\nv1.2.2 -> v1.3.0-rc.1: new features\r\n- extended framework to model two cuffs (stimulation and recording)\r\n- modeling a recording cuff will produce a single fiber action potential, and optionally a transmembrane current matrix, output file per fiber simulation\r\n- model.json now can additionally accept a list of cuff JSON objects in the \"cuff\" property\r\n- sim.json now contains an \"active_recs\" property for defining electrode weighting for recording cuffs\r\n- added analysis scripts to plot recorded single fiber and compound action potentials\r\n- added analysis script to import transmembrane current matrices and generate current templates\r\n- submit.py now checks for successful compilation of NEURON files\r\n\r\nv1.2.2 -> v1.3.0-rc.1: docs\r\n- added documentation for modeling neural recording and new JSON configuration properties\r\n- added documentation for using ASCENT on oSPARC\r\n- added refs for new papers using ASCENT\r\n\r\nv1.2.2 -> v1.3.0-rc.1: bug fixes\r\n- fixed error with coordinate handling of supersampled fibers\r\n- fixed bug where submit.py would fail if on windows and the user name started with an n\r\n\r\nv1.2.2 -> v1.3.0-rc.1: miscellaneous\r\n- upgraded to Python 3.10\r\n- upgraded pre-commit hooks\r\n- changed default dataset export behavior to include sectionwise 2D files ",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.3.0-rc.1",
        "name": "ASCENT 1.3.0-rc.1",
        "release_id": 138596924,
        "tag": "v1.3.0-rc.1",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.3.0-rc.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/138596924",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/138596924",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.3.0-rc.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2023-08-29T17:00:26Z",
        "date_published": "2023-08-29T17:07:03Z",
        "description": "DOI: [10.5281/zenodo.8298703](https://doi.org/10.5281/zenodo.8298703)\r\n\r\n**v1.2.1 -> v1.2.2: new features**\r\n- tidy_samples and clean_samples now print the number of files removed\r\n\r\n**v1.2.1 -> v1.2.2: bugfixes**\r\n- Fixed bug where explicit fibersets could cause a pipeline error\r\n- submit.py now properly checks for successful NEURON compilation\r\n- Fixed bug where windows usernames starting with \u201cn\u201d would incorrectly be interpreted as a newline character\r\n\r\n**v1.2.1 -> v1.2.2: misc.**\r\n- Added pyupgrade to pre commit hooks\r\n- Added documentation for usage of ASCENT on oSPARC",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.2.2",
        "name": "ASCENT v1.2.2",
        "release_id": 119110863,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/119110863",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/119110863",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2023-02-10T03:51:06Z",
        "date_published": "2023-02-10T04:08:49Z",
        "description": "DOI: [10.5281/zenodo.7627427](https://doi.org/10.5281/zenodo.7627427)\r\n\r\n**v1.2.0 -> v1.2.1: new features**\r\n- Adds check for input sample images\r\n\r\n**v1.2.0 -> v1.2.1: bugfixes**\r\n- Fixed bug _only present in 1.2.0_ where all materials outside of the nerve (including the fill domain, cuff, contacts, etc.) would be assigned to \"medium\". **NOTE: Please DO NOT USE v1.2.0.**\r\n\r\n**v1.2.0 -> v1.2.1: misc.**\r\n- Adds text to dataset README instructions for example README and example \"Curator's Notes\" for data upload to Pennsieve.\r\n- Adds more context and statements about the purpose of each step in the process of the dataset generating tool.",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.2.1",
        "name": "ASCENT v1.2.1",
        "release_id": 91974974,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/91974974",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/91974974",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2023-02-07T04:31:46Z",
        "date_published": "2023-02-07T04:50:27Z",
        "description": "DO NOT USE THIS RELEASE. PLEASE SEE 1.2.1.\r\n\r\nDOI: [10.5281/zenodo.7614127](https://doi.org/10.5281/zenodo.7614127)\r\n\r\n**v1.1.5 -> v1.2.0: new features**\r\n- Added tool for generating output datasets for publication per NIH SPARC dataset standards\r\n- Refactor weighting of potentials from different contacts to occur in python instead of java. Potentials are extracted for each basis which allows different contact weightings to occur within the Simulation class in Python\r\n- Added new v2 Livanova cuffs with more accurate parameterization based on CAD files from LivaNova\r\n- Slide plotting `slide.plot()` now has parameters for adding a scale bar\r\n- Added new Trace.ecd() method which calculates the effective circular diameter of a trace\r\n\r\n**v1.1.5 -> v1.2.0: bugfixes**\r\n- Fixed bug where first time run of install script would fail\r\n- Fixed bug where env.json would not properly update from env_setup.py\r\n- Fixed bug where uniform density points would generate without respecting xy_trace_buffer\r\n- Fixes bugs in Tigerholm model (gbar_kdr -> gbar_kdrTiger, Ra 35.5 -> 35.4, celsiusT_kdr -> celsiusT_kdrTiger) in cFiberBuilder.hoc\r\n\r\n**v1.1.5 -> v1.2.0: misc.**\r\n- Changed default indices in run,json template to zeros\r\n- Moved functionality of TemplateOutput class to Configurable\r\n- Updated requirements.txt to specify versions of shapely and open-cv\r\n- Added example UNIX example for environment variables (`config/templates/unix_env.json`).\r\n- Added notes to documentation on segmentation resources\r\n- Changed default plot saving location for `examples/analysis` scripts to `out/analysis`\r\n- Added error if no valid masks are found\r\n- Added warning if xy_trace_buffer is specified and xy_mode is \u201cCENTROID\u201d\r\n- Reworked slide validation to check for more types of errors and be simpler\r\n- Added error if a trace is too small for a given xy_trace_buffer\r\n- Jittered or offset fibers will now save offset values\r\n- Adds brief description of each cuff in the cuff's JSON file\r\n",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.2.0",
        "name": "ASCENT v1.2.0",
        "release_id": 91550915,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/91550915",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/91550915",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2022-11-04T19:51:14Z",
        "date_published": "2022-11-04T19:57:35Z",
        "description": "DOI: [10.5281/zenodo.7293412](https://doi.org/10.5281/zenodo.7293412)\r\n\r\n**v1.1.4 -> v1.1.5: bugfixes**\r\n- Fixes broken docs",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.5",
        "name": "ASCENT v1.1.5",
        "release_id": 82126372,
        "tag": "v1.1.5",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/82126372",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/82126372",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2022-11-02T00:58:09Z",
        "date_published": "2022-11-04T17:11:29Z",
        "description": "DOI: [10.5281/zenodo.7292944](https://doi.org/10.5281/zenodo.7292944)\r\n\r\n**v1.1.3 -> v1.1.4: new features**\r\n- Added new plotting scripts in examples/analysis\r\n- Reworked heatmaps to be more extensible; heatmap grids can now be generated by using a Seaborn FacetGrid\r\n- Added auto documentation of plotter module\r\n- Added implementation for schild94 fiber model\r\n\r\n**v1.1.3 -> v1.1.4: bugfixes**\r\n- Updated validation logic for missing bases to re-solve all bases if an identifier manager record is not present\r\n- Fixed bug which caused an error when trying to run schild, sundt, or rattay fiber models\r\n- Changed waveforms with two phases such that now there is no 0 amplitude step between phases\r\n- Fixed bug where a biphasic uneven waveform would not generate correctly if the first phase was longer than the second\r\n\r\n**v1.1.3 -> v1.1.4: misc.**\r\n- Archived some outdated plotting scripts in examples/analysis\r\n- Moved plotting scripts to \u201cplotter\u201d module\r\n- Updated some print statements to be more informative\r\n- Made linting improvements\r\n- Added additional linting and formatting checks to pre-commit\r\n- Added docstrings for all functions\r\n- Updated pyproject.toml with project metadata\r\n- Reworked Getting Started/Tutorial documentation\r\n- Added framework for unit testing\r\n- Simplified tutorial example and installation process\r\n- Removed Exceptionable class and migrated all exceptions to throw Python Exceptions and added custom exceptions where relevant\r\n- Query now requires indices to be of type int\r\n- Added new Model class to govern python side code related to model.json",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.4",
        "name": "ASCENT v1.1.4",
        "release_id": 82112241,
        "tag": "v1.1.4",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/82112241",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/82112241",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2022-07-26T17:22:17Z",
        "date_published": "2022-07-26T17:48:31Z",
        "description": "DOI: [10.5281/zenodo.6908578](https://doi.org/10.5281/zenodo.6908578)\r\n\r\n**v1.1.2 -> v1.1.3: new features**\r\n- Java will now wait for the COMSOL server to start, rather than exiting if the first connection attempt fails\r\n- Added parameter in model.json which allows selection of a direct or iterative solver for COMSOL solution\r\n- submit.py is much less verbose, and now prints a progress bar. Access the old behavior with the --verbose flag\r\n- Added ability to auto-submit fibers after each run completes\r\n- submit.py will now proceed to the next run if an error occurs during submission\r\n- Added flag allowing submit.py to run on all runs in a submit directory\r\n- Failure during slide validation with now generate a debug plot\r\n\r\n**v1.1.2 -> v1.1.3: bugfixes**\r\n- Fixed bug where plot parameter was not fully deprecated in fiberset.py\r\n- Fixed rare bug where the NEURON submission would not index properly\r\n- submit.py now checks that NEURON files were compiled, rather than just for the existence of the compilation folder\r\n- Query.threshold_data() now properly loops over supplied sims\r\n- ffmpeg should now properly install\r\n- Fixed rare bug where more than three contacts could result in out of order bases in the weighting of bases to produce NEURON Ve inputs\r\n- Fixed bug where mesh recycling logic always printed even when recycle meshes was set to false\r\n- Fixed fiber0 heatmaps plotting for \"peanut\" fascicles\r\n- Fixed bug where heatmaps did not properly return figure object\r\n\r\n**v1.1.2 -> v1.1.3: docs**\r\n- Extensive restructure of documentation\r\n- Added documentation for \"max_steps\" in sim.json (used in threshold search)\r\n- Fixed documentation for solution and mesh order\r\n- JSON documentation examples now use config/templates/ to generate\r\n- Updated troubleshooting guide\r\n\r\n**v1.1.2 -> v1.1.3: misc.**\r\n- Applied black and isort formatting\r\n- Replaced most os.system calls with subprocess module\r\n- COMSOL server now automatically logs in, without the need for the user to generate login info\r\n- Added pre-commit hooks\r\n- Added GitLab CI/CD\r\n- Removed \"samples_path\" parameter from sample.json\r\n- Archived LivaNova cuffs and ensured all cuff codes are unique\r\n- Specks in the input masks will now throw an error\r\n- Renamed \"beta task\" to \"tutorial\"\r\n- Removed src/neuron/submit.sh\r\n- Added error is \"n_aps\" is provided (not yet implemented)\r\n- The pipeline will now catch errors from Java and warn the user an issue occurred\r\n- Added descriptions to all cuff parameters\r\n- Changed default heatmaps type to \"fibers\"\r\n- Fixed bug where mesh and solution order were incorrectly applied\r\n",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.3",
        "name": "ASCENT v1.1.3",
        "release_id": 72884710,
        "tag": "v1.1.3",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/72884710",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/72884710",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "thedannymarsh",
          "type": "User"
        },
        "date_created": "2022-05-09T16:00:18Z",
        "date_published": "2022-05-10T20:12:08Z",
        "description": "DOI: [10.5281/zenodo.6537277](https://doi.org/10.5281/zenodo.6537277)\r\n\r\n**v1.1.1 -> v1.1.2: new features**\r\n- Comsol run progress can now be printed to stdout or in a popup window\r\n- Added script to plot Ve, Ve 1st spatial differential, and 2nd spatial differential along fibers\r\n- Added new pre_solve breakpoint\r\n- Added new script to plot threshold error (for convergence studies)\r\n- Added model specification to scout sim\r\n- Added pseudonym capability to model, sim, sample, and run jsons\r\n- Added ability to store solution data for only the endoneurial geometry\r\n- Import_n_sims will now check for missing thresholds. New command line argument allows forcing import even if thresholds are missing\r\n- Added new command line argument to import_n_sims to remove export path directories after importing\r\n- New absolute offset parameter allows centering a Node of Ranvier at any arbitrary location along a nerve\r\n- Explicit fibersets are now stored in a sample level folder and indexed in sim.json\r\n- Added new command line arguments to submit.py to specify submission context, number of cpus to use, partition, job counts for array submission, and memory per slurm job\r\n- Submit.py will now generate a summary and ask for user confirmation before running\r\n- New threshold data function of Query class generates a pandas dataframe of threshold data. Updated examples/analysis/get_thresholds.py to use this function\r\n\r\n**v1.1.1 -> v1.1.2: bugfixes**\r\n- Array submission of NEURON jobs with slurm will now properly submit even if the last index threshold is present\r\n- Removed excess contact overhang from U contact primitives\r\n- Fixed scout sim threshold usage (was absolute value, now will use sign)\r\n- Job arrays will now submit n jobs (rather than n-1)\r\n- Fixed check for n_dimensions in sim.json\r\n- Fixed bug where a missing threshold would cause all following fascicles to render as missing their threshold when plot mode == fiber0\r\n\r\n**v1.1.1 -> v1.1.2: misc.**\r\n- Contact impedances in COMSOL are now stored in a node group\r\n- Reworked saving of comsol mesh and solution statistics to model.json\r\n- Removed some print statements\r\n- Random offset is now specified with the \u201coffset\u201d:\u201drandom\u201d key value pair\r\n- Passing a single element list for a loopable sim parameter now throws an error\r\n- Shell scripts for NEURON submission now generate in their own subfolder\r\n- Extracting potentials now uses derivative recovery (results in more accurate potential extraction)\r\n- NEURON job keys now have headers\r\n- Mesh will now clear from bases after the solution is solved\r\n- List util will now report any json files with bad syntax\r\n- Added git attributes file\r\n",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.2",
        "name": "ASCENT v1.1.2",
        "release_id": 66513296,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/66513296",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/66513296",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2022-01-26T22:07:01Z",
        "date_published": "2022-01-27T15:08:44Z",
        "description": "DOI: [10.5281/zenodo.5910968](https://doi.org/10.5281/zenodo.5910968)\r\n\r\n**v1.1.0 -> v1.1.1: new features**\r\n\r\n- New full_nerve_length parameter in sim.json allows warning suppression when min and max aren't specified for fiber z parameters\r\n- Break points can now be specified via command line\r\n- Added a command line argument allowing the pipeline to wait until a COMSOL license is available instead of exiting\r\n- ap_time_and_loc.py now has subplotting ability\r\n- Partial_fem params can now be controlled via command line arguments\r\n- Submission context can now be set to automatic, rather than the user manually specifying cluster or local\r\n- Implemented new sample mode \u201cshrinkage_definition\u201d allowing finer control over how histological shrinkage is corrected\r\n- Added -l,--list command to run which can display command line information about config files\r\n- Added config/system/slurm_params.json which can be edited to change default behavior for NEURON fiber submissions (cluster submissions only)\r\n- Added command line argument parsing to submit.py, including new -p flag (for specifying partition, cluster submit only)\r\n\r\n**v1.1.0 -> v1.1.1: bugfixes**\r\n- User specified offset will now work correctly instead of erroring\r\n- If input masks are of type COMPILED the pipeline will now skip the fill holes step\r\n- submit.py will now ensure all output directories exist\r\n- Trace smoothing will now ensure that trace area does not change during smoothing\r\n- The pipeline will now solve for any missing bases, rather than continuing without doing so\r\n- Fixed several bugs related to fiber supersampling and significantly sped up supersampling code\r\n- Certain parameter combinations previously could cause the pipeline to skip generating epineurium, now epinerium will always be generated\r\n- Fiber0 mode in heatmaps script will now work in all cases\r\n- Supersampling using bases from other sims will now work properly\r\n- Supersampled bases will now extract potentials in the correct order\r\n- Fixed bug where rotation could cause deformation to break in some cases\r\n- Fascicle separation is now properly ensured when deform_ratio==0\r\n- Sample processing now ensures that post deformation area is equal to pre deformation area\r\n- Fixed bug where changing sample input resulted in incorrect geometry\r\n- Fixed bug where \u201cpeanut\u201d fascicles would cause heatmap.py to error\r\n- Fixed bug where heatmaps fibers would be out of order when using explicitly defined fiber xy-locations\r\n- Fixed bug where pipeline sometimes would continue to Java before COMSOL server had started\r\n- Sped up array submission for cluster NEURON fiber sims\r\n- Fixed rare bug where supersampling would error if the if the modulus of the fiber length/internodal length was less than dz\r\n- Fixed bug where heatmaps would use improper comparison key\r\n- Fixed rare string comparison bug where submit.py could submit incorrect directories\r\n\r\n**v1.1.0 -> v1.1.1: misc.**\r\n- Plots will now clear from memory after generating when plotting to a folder\r\n- Pipeline will now print sim number instead of sim index\r\n- If pre_java break point is enabled, the pipeline will now continue on to the remaining runs instead of exiting\r\n- Added error message when supersampled bases are not found\r\n- Java will now print out the model index at the beginning of each iteration\r\n- Errors during mesh match searching will now initatiate a remesh instead of exiting\r\n- Sim.json>fibers>z_parameters>longitudinally_centered removed, new behavior equal to old \u201cTrue\u201d behavior\r\n- Cuffs and configuration files for oSPARC guided mode added\r\n- Query will now error if no results are found during its Query.run()\r\n- Updates to many print statements for clarity\r\n- clean_samples.py and tidy_samples.py now ask for confirmation before running",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.1",
        "name": "ASCENT v1.1.1",
        "release_id": 58049781,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/58049781",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/58049781",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2021-11-15T17:02:06Z",
        "date_published": "2021-11-15T17:08:48Z",
        "description": "DOI: [10.5281/zenodo.5703269](https://doi.org/10.5281/zenodo.5703269)\r\n\r\n**v1.0.3 -> v1.1.0: new features**\r\n\u2022\tAdded runtime saving controls\r\n\u2022\tAdded the ability to save action potential times at specified points along fibers\r\n\u2022\tAdded the ability to generate plots in a folder instead of a popup window. Also added more options for plotting.\r\n\u2022\tUpdated deformation logic to allow for deform_ratio=0 (no change to nerve trace but ensures fascicle separation)\r\n\u2022\tInstallation will now generate directories required to set up ascent runs automatically\r\n\u2022\tDocumentation is now hosted on Read the Docs, and part of the repo\r\n\u2022\tAdded troubleshooting guide to documentation\r\n\u2022\tAdded image preprocessing option to Sample\r\n\u2022\tAdded fascicle and nerve smoothing options to Sample\r\n\u2022\tAdded welcome message to run script\r\n\r\n**v1.0.3 -> v1.1.0: bug fixes**\r\n\u2022\tFixed issues with cuff rotation logic and added \u201cfixed_point\u201d parameter to cuff configuration files\r\n\u2022\tModified print statements to be more informative\r\n\u2022\tFixed bug where sample centering was slightly off center\r\n\u2022\tSample.py now checks that only one object is present in the orientation mask\r\n\u2022\tChanged COMSOL interpolation curve type from \u201copen\u201d to \u201cclosed\u201d\r\n\u2022\tFixed perineurium generation for Mask Input Mode = \u201cINNERS\u201d to use effective circular diameter instead of average radius\r\n\u2022\tAdded check to ensure all morphology masks have the same dimensions\r\n\u2022\tFixed bug where submit would always check for scout sims if the parameter was present\r\n\u2022\tFixed issue where super sampling would cause an error\r\n\u2022\tFixed errors with installation script and added requirements.txt file for pip\r\n\u2022\tWill now check that the pipeline is running in the ASCENT conda environment\r\n\u2022\tArchived cuffs that are no longer needed",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.1.0",
        "name": "ASCENT v1.1.0",
        "release_id": 53406905,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/53406905",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/53406905",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2021-09-10T13:22:17Z",
        "date_published": "2021-09-10T13:38:31Z",
        "description": "DOI: [10.5281/zenodo.5500260](https://doi.org/10.5281/zenodo.5500260)\r\n\r\n**v1.0.2 -> v1.0.3: new features**\r\n\r\n**v1.0.2 -> v1.0.3: bug fixes**\r\n\r\n- Fixes bug ModelWrapper will always exit after string comparison (mistake was using \"==\" instead of \".equals()\")",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.0.3",
        "name": "ASCENT v1.0.3",
        "release_id": 49348600,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/49348600",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/49348600",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2021-08-31T18:51:24Z",
        "date_published": "2021-09-01T22:02:25Z",
        "description": "DOI: [10.5281/zenodo.5365774](https://doi.org/10.5281/zenodo.5365774)\r\n\r\n**v1.0.1 -> v1.0.2: new features**\r\n\r\n- Adds new control in Sample for defining the pixel/length ratio rather than using a segmented mask of the scale bar.\r\n- Exceptionable uses the file path to indicate error source rather than specifying explicitly in exceptions.json.\r\n- Adds functionality to represent nerve traces in COMSOL using interpolation curves, rather than being limited to CIRCLE.\r\n\r\n**v1.0.1 -> v1.0.2: bug fixes**\r\n\r\n- Fixes bug for some inners in which offset (i.e., non-affine scaling out) created new traces from self-overlap.\r\n- Fixes bug in installation script for Windows.\r\n- Removed unused jsonReader.java class.",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.0.2",
        "name": "ASCENT v1.0.2",
        "release_id": 48850560,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/48850560",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/48850560",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2021-08-05T05:36:46Z",
        "date_published": "2021-08-05T14:57:55Z",
        "description": "DOI: [10.5281/zenodo.5163966](https://doi.org/10.5281/zenodo.5163966)\r\n\r\n**v1.0.0 -> v1.0.1: bug fixes**\r\n\r\n- Corrects (x,y) locations of myelinated fibers in nerve cross section. If this code (i.e., v1.0.0) was used, delete the sims created (samples/<sample_index>/models/<model_index>/sims/<affected sim indices>) and re-run the pipeline.\r\n- Corrects error in populating cuff rotation and position in COMSOL from parameters in Model. The documentation says Double values are used (correct) rather than Integer values that were being used (incorrect).\r\n- Corrects control of waveform precision (print format) in writing to file.",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.0.1",
        "name": "ASCENT v1.0.1",
        "release_id": 47369654,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/47369654",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/47369654",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ericmusselman",
          "type": "User"
        },
        "date_created": "2021-07-25T22:42:49Z",
        "date_published": "2021-07-25T20:58:11Z",
        "description": "DOI: [10.5281/zenodo.5136631](https://doi.org/10.5281/zenodo.5136631)\r\n\r\n**See v1.0.1**",
        "html_url": "https://github.com/wmglab-duke/ascent/releases/tag/v1.0.0",
        "name": "ASCENT v1.0.0",
        "release_id": 46737051,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/wmglab-duke/ascent/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wmglab-duke/ascent/releases/46737051",
        "value": "https://api.github.com/repos/wmglab-duke/ascent/releases/46737051",
        "zipball_url": "https://api.github.com/repos/wmglab-duke/ascent/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:31:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Click below for our video tutorial:",
        "parent_header": [
          "ASCENT: Automated Simulations to Characterize Electrical Nerve Thresholds"
        ],
        "type": "Text_excerpt",
        "value": "[![Watch the video](https://img.youtube.com/vi/C41nHvMXyEo/maxresdefault.jpg)](https://youtu.be/C41nHvMXyEo)\n"
      },
      "source": "https://raw.githubusercontent.com/wmglab-duke/ascent/master/README.md",
      "technique": "header_analysis"
    }
  ]
}