{
  "application_domain": [
    {
      "confidence": 18.23,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tianchengzhe/EllipTrack"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-14T21:23:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-07T16:53:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9884783896005926,
      "result": {
        "original_header": "EllipTrack",
        "type": "Text_excerpt",
        "value": "EllipTrack is a new global-local hybrid cell tracker optimized for tracking modern large-scale movies. The key innovation of EllipTrack is the introduction of a local track correction module, which systematically corrects the tracking mistakes of the global track linking algorithm from Magnusson and colleagues. Benchmark reveals that EllipTrack outperforms the existing state-of-the-art cell trackers and can identify nearly error-free cell lineages from multiple large-scale movies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "EllipTrack"
        ],
        "type": "Text_excerpt",
        "value": "Documentation is available [here](<http://elliptrack.readthedocs.org/>).\n"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tianchengzhe/EllipTrack/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tianchengzhe/EllipTrack/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tianchengzhe/EllipTrack"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EllipTrack"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "EllipTrack"
        ],
        "type": "Text_excerpt",
        "value": "* Download EllipTrack: Click \"Clone or download\" on the top of this page, select \"Download ZIP\", and extract files.\n\n* Compile *generate_tracks.cpp*: Navigate MATLAB to the *functions/track_linking* folder, and execute\n\n  ```matlab\n  mex -largeArrayDims generate_tracks.cpp\n  ```\n\n* Install BioformatsImage [Nikon ND2 format only]: Follow the instruction [here](https://biof-git.colorado.edu/biofrontiers-imaging/bioformats-image-toolbox/wikis/home). *Note: This website is temporarily restricted to the university IPs. Please install BioformatsImage.mltbx in this [folder](https://github.com/tianchengzhe/EllipTrack/tree/master/third_party_functions).*\n"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tianchengzhe/EllipTrack/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 chti4479\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EllipTrack"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tianchengzhe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 700236,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 63726,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirement",
        "parent_header": [
          "EllipTrack"
        ],
        "type": "Text_excerpt",
        "value": "* Hardware: A modern computer, at least 8GB RAM.\n\n* Software: MATLAB (Mathworks), R2017a or later.\n\n  Required toolboxes: System Identification Toolbox, Image Processing Toolbox, Computer Vision Toolbox, Statistics and Machine Learning Toolbox, Parallel Computing Toolbox, and MATLAB Distributed Computing Server.\n\n  A C++ compiler in MATLAB with C++11 support. Install a free minGW compiler [here](<https://www.mathworks.com/matlabcentral/answers/313290-how-do-i-install-mingw-for-use-in-matlab>).\n"
      },
      "source": "https://raw.githubusercontent.com/tianchengzhe/EllipTrack/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:24:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}