{
  "application_domain": [
    {
      "confidence": 15.63,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you find this project is useful for your research, please cite:\n```\n@article{wang2021neuron,\n  title={Neuron linear transformation: modeling the domain shift for crowd counting},\n  author={Wang, Qi and Han, Tao and Gao, Junyu and Yuan, Yuan},\n  journal={IEEE Transactions on Neural Networks and Learning Systems},\n  year={2021},\n  publisher={IEEE}\n}\n```"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Wang, Qi and Han, Tao and Gao, Junyu and Yuan, Yuan",
        "format": "bibtex",
        "title": "Neuron linear transformation: modeling the domain shift for crowd counting",
        "type": "Text_excerpt",
        "value": "@article{wang2021neuron,\n    publisher = {IEEE},\n    year = {2021},\n    journal = {IEEE Transactions on Neural Networks and Learning Systems},\n    author = {Wang, Qi and Han, Tao and Gao, Junyu and Yuan, Yuan},\n    title = {Neuron linear transformation: modeling the domain shift for crowd counting},\n}"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/taohan10200/NLT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-09T06:45:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-19T20:52:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyTorch implementations of the paper: \"Neuron Linear Transformation: Modeling the Domain Shift for Crowd Counting. (T-NNLS, 2021)...\" "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "NLT - Cross-domain Crowd Counting"
        ],
        "type": "Text_excerpt",
        "value": "* [Installation](#installation)\n* [Project Architecture](#project-architecture)\n* [Training](#training)\n* [Test](#test)"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/taohan10200/NLT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/taohan10200/NLT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "taohan10200/NLT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NLT - Cross-domain Crowd Counting"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/taohan10200/NLT/master/./figure/framework.png"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "It is recommended to prepare the following dependencies before training.\n\n-  Prerequisites\n    - Python 3.7\n    - Pytorch >=1.5: http://pytorch.org .\n    - other libs in ```requirements.txt```, run ```pip install -r requirements.txt```.\n-  Code\n    - Clone this repository in the directory (```Root/NLT```):\n        ```bash\n        git clone https://github.com/taohan10200/NLT.git\n        ```\n- Dataset downloading\n    - the source dataset: GCC [[Link1](https://mailnwpueducn-my.sharepoint.com/:f:/g/personal/gjy3035_mail_nwpu_edu_cn/Eo4L82dALJFDvUdy8rBm6B0BuQk6n5akJaN1WUF1BAeKUA?e=ge2cRg)] [[Link2](https://v2.fangcloud.com/share/4625d2bfa9427708060b5a5981)] [[Link3](https://pan.baidu.com/s/1OtKqmw84TFbxAiN0H2xBtQ) (pwd:**utdo**)] \n    - other target datasets: \n    ShanghaiTech Part [[Link1](https://www.dropbox.com/s/fipgjqxl7uj8hd5/ShanghaiTech.zip?dl=0)] [[Link2](https://pan.baidu.com/s/1nuAYslz)]);\n    UCF-QNRF [[Homepage](https://www.crcv.ucf.edu/data/ucf-qnrf/)] [[Download](https://drive.google.com/open?id=1fLZdOsOXlv2muNB_bXEW6t-IS9MRziL6)];\n    UCSD [[Homepage](http://www.svcl.ucsd.edu/projects/peoplecnt/)];\n    MALL [[Homepage](http://personal.ie.cuhk.edu.hk/~ccloy/downloads_mall_dataset.html)];\n    WorldExpo'10 [[Homepage](http://www.ee.cuhk.edu.hk/~xgwang/expo.html)].\n    - Generate the density map with the scripts in `Root/NLT/data_split/generate_den_map` \n"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/taohan10200/NLT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "crowd-counting, domain-adaptation"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NLT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "taohan10200"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:58:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Project Architecture",
        "parent_header": [
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "  - Finally, the folder tree is below:\n ```\n    -- ProcessedData\n\t\t|-- performed_bak_lite   # this is GCC dataset, which contains 100 scenes (a total of 400 folders).\n            |-- scene_00_0\n            |\t   |-- pngs_544_960\n            |\t   |-- den_maps_k15_s4_544_960\n            |-- ...\n            |-- scene_99_3\n            |\t   |-- pngs_544_960\n            |\t   |-- den_maps_k15_s4_544_960\n    \t|-- SHHB\n    \t    |-- train\n    \t    |    |-- img\n    \t    |    |-- den\n    \t    |-- test\n    \t    |    |-- img\n    \t    |    |-- den\n    \t|-- ...\t\t\n\t-- NLT\n\t  |-- data_split\n\t  |-- dataloader\n\t  |-- models\n\t  |-- ...\n ```\n"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train ours NLT",
        "parent_header": [
          "Getting Started",
          "Training"
        ],
        "type": "Text_excerpt",
        "value": "Modify the flowing configurations in `config.py`:\n ```bash\n__C.model_type = 'vgg16'   # choices=['ResNet50','vgg16']\n__C.phase ='pre_train'     # choices=['pre_train', 'DA_train', 'fine_tune'])\n__C.gpu_id = \"2,3\"         # single gpu:\"0\"..; multi gpus:\"2,3,\n__C.target_dataset ='SHHB' # dataset choices =  ['SHHB',  'UCF50',  'QNRF', 'MALL', 'UCSD', 'SHHA']\n\n```\nThen, run the command:\n```bash\npython nlt_train.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "pre_train",
        "parent_header": [
          "Getting Started",
          "Training",
          "Pre_train on GCC dataset and then fine tune on others datasets"
        ],
        "type": "Text_excerpt",
        "value": " modify the `__C.phase='pre_train'` in `config.py`, and then run: \n```bash\npython pre_train.py\n```"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "fine tune",
        "parent_header": [
          "Getting Started",
          "Training",
          "Pre_train on GCC dataset and then fine tune on others datasets"
        ],
        "type": "Text_excerpt",
        "value": "Find the pre-trained model in `Root/NLT/exp/pre`. Set the configurations `__C.GCC_pre_train_model`  \n and  `__C.phase='fine_tune'` in `config.py`, and then run: \n```bash\npython pre_train.py\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test",
        "parent_header": [
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": " To evaluate the metrics (MAE\\MSE\\PNSR\\SSIM) on test set, you should fill the model path (`cc_path`) and dataset name in `test.py`, and then run:\n\n ```bash\npython test.py\n```\n\nThe visual density map can be selectively generated in `Root/NLT/visual-display`.\n"
      },
      "source": "https://raw.githubusercontent.com/taohan10200/NLT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}