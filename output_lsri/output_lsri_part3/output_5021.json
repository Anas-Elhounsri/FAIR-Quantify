{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FragBuilder:",
        "parent_header": [
          "How to cite:"
        ],
        "type": "Text_excerpt",
        "value": "- Anders S. Christensen, Thomas Hamelryck, Jan H. Jensen (2013) FragBuilder: An efficient Python library to setup quantum chemistry calculations on peptides models. PeerJ 2:e277 http://dx.doi.org/10.7717/peerj.277\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BASILISK:",
        "parent_header": [
          "How to cite:"
        ],
        "type": "Text_excerpt",
        "value": "- Tim Harder, Wouter Boomsma,  Martin Paluszewski, Jes Frellesen, Kristoffer E. Johansson, and Thomas Hamelryck  (2010). Beyond rotamers: a generative, probabilistic model of\nside chains in proteins. BMC Bioinformatics, 11:306\u2013318. http://dx.doi.org/10.1186/1471-2105-11-306\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Open Babel:",
        "parent_header": [
          "How to cite:"
        ],
        "type": "Text_excerpt",
        "value": "- Noel M. O'Boyle, Michael Banck, Craig A James, Chris Morley, Tim Vandermeersch and Geoffrey R Hutchison (2011) Open Babel: An open chemical toolbox. Journal of Cheminformatics, 3:33-46. http://dx.doi.org/10.1186/1758-2946-3-33\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jensengroup/fragbuilder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-12-02T13:36:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-23T13:44:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fragbuilder is a tool to create, setup and analyze QM calculations on peptides."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.944699746241219,
      "result": {
        "original_header": "FragBuilder",
        "type": "Text_excerpt",
        "value": "FragBuilder is a tool to create, setup and analyze QM calculations on peptides. \n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9767925198889184,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "FragBuilder is licensed under the two-clause BSD license which mean you can pretty much do whatever you want as long as you cite properly and/or mentions the name of the authors. \nThe BASILISK library which is included is licensed under the terms of the Gnu General Public License. Is also available from SourceForge: https://sourceforge.net/projects/basilisk-dbn/ \n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "First off, the paper on PeerJ is probably the first place to go in order to get familiar with Fragbuilder. Second, I recommend looking in the examples folder. This should cover most use-cases and functionality. I have also writte a couple of blog-posts (more to come!).\n\n - See the paper here: http://dx.doi.org/10.7287/peerj.preprints.169v2\n - Look in examples/\\*.py for inspiration.\n - Installation help: http://combichem.blogspot.com/2013/12/fragbuilder-installation.html\n - Setup a scan of peptide conformations: http://combichem.blogspot.com/2014/01/fragbuilder-setting-up-scan-of-peptide.html\n\nBelow is list of all classes currently in the **fragbuilder** Python library. The manual for each class is accessed though the built-in help function. A short description of each class and the code to access the corresponding help page is as follows:\n\n**fragbuilder.Peptide** class:\n\nThis class makes peptides, defines the geometry, optimizes geometries, writes files, etc.\n\n[fragbuilder.Peptide documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.Peptide.html)\n\n**fragbuilder.G09_opt** class:  \n**fragbuilder.G09_NMR** class:  \n**fragbuilder.G09_energy** class:\n\nThese classes will write an Gaussian 09 input file for either geometry optimization, NMR shielding calculations or single point energies.\n\n[fragbuilder.G09_opt documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.G09_opt.html)  \n[fragbuilder.G09_NMR documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.G09_NMR.html)  \n[fragbuilder.G09_energy documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.G09_energy.html)\n\n**fragbuilder.Basilisk_DBN** class:\n \nThis class wraps the dbn class from the original BASILISK library. The only real difference is that it returns angles in degrees in order to be compatible with the rest of FragBuilder.\nFor most practical purposes, this wrapper is not needed. Most likely you want to use the Peptide.sample_bb_angles(args) or Peptide.sample_chi_angles(args) functionality in order to invoke BASILISK library. \n\n[fragbuilder.Basilisk_DBN documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.Basilisk_DBN.html)\n\n\n**fragbuilder.PDB** class:\n \nThis class is a PDB-filereader which can read backbone and side chain torsion angles from a PDB file. \n\n[fragbuilder.PDB documentation](https://rawgithub.com/jensengroup/fragbuilder/master/doc/fragbuilder.PDB.html)\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/jensengroup/fragbuilder/wiki"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jensengroup/fragbuilder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jensengroup/fragbuilder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jensengroup/fragbuilder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FragBuilder"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://dl.dropboxusercontent.com/u/17435887/fragbuilder/model_angles_crop.png"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.993954660754477,
      "result": {
        "original_header": "Requires:",
        "type": "Text_excerpt",
        "value": " - Openbabel 2.x.x (with Python bindings installed)\n - Numpy (pretty much any version should be fine) \n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999804953418207,
      "result": {
        "original_header": "Note:",
        "type": "Text_excerpt",
        "value": "I have compiled a short guide to install the latest Open Babel here:\nhttp://combichem.blogspot.dk/2013/12/compiling-open-babel-with-python.html \nIf you're interested in FragBuilder, you might also be interested in PeptideBuilder (very similar to FragBuilder):\n- https://github.com/mtien/PeptideBuilder/\n- https://peerj.com/articles/80/\n \n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jensengroup/fragbuilder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "FRAGBUILDER LICENSE:\n===============================================================================\n\nCopyright (c) 2013, Anders S. Christensen\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nBASILISK LICENSE:\n===============================================================================\n\nBASILISK: A generative, probabilistic model of side chains in proteins\n\nCopyright (C) 2010     Tim Harder and Jes Frellsen\u00b7\n\nBASILISK is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nBASILISK is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with BASILISK.    If not, see <http://www.gnu.org/licenses/>.\n\n\n\n\n\n\nThe PDB class uses parts of the Biopython package which is licensed under\nthe terms of the Biopython License Agreement :\n=================================================================================\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation with or without modifications and for any purpose and\nwithout fee is hereby granted, provided that any copyright notices\nappear in all copies and that both those copyright notices and this\npermission notice appear in supporting documentation, and that the\nnames of the contributors or copyright holders not be used in\nadvertising or publicity pertaining to distribution of the software\nwithout specific prior permission.\n\nTHE CONTRIBUTORS AND COPYRIGHT HOLDERS OF THIS SOFTWARE DISCLAIM ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT\nOR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\nOR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE US\nOR PERFORMANCE OF THIS SOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fragbuilder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "jensengroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1167618,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andersx",
          "type": "User"
        },
        "date_created": "2014-01-10T16:01:45Z",
        "date_published": "2014-01-10T16:18:30Z",
        "description": "### Changes since last version (1.0.0a -> 1.0.1):\n\n#### PDB-class:\n- Using the PDB-class no longer requires Biopython install for full functionality. Selected functions from the Bio.PDB module have been ninja'ed into FragBuilder.\n\n#### Bug fixes:\n- Now reads Chi1 values correctly in Valine residues even if CG1/CG2 are incorrectly named.\n- Now reads Chi2 values correctly in Leucine residues even if CD1/CD2 are incorrectly named.\n",
        "html_url": "https://github.com/jensengroup/fragbuilder/releases/tag/1.0.1",
        "name": "FragBuilder v 1.0.1",
        "release_id": 144082,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/jensengroup/fragbuilder/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jensengroup/fragbuilder/releases/144082",
        "value": "https://api.github.com/repos/jensengroup/fragbuilder/releases/144082",
        "zipball_url": "https://api.github.com/repos/jensengroup/fragbuilder/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andersx",
          "type": "User"
        },
        "date_created": "2014-01-07T15:34:54Z",
        "date_published": "2014-01-09T11:34:10Z",
        "description": "### Changes since last version (1.0.0 -> 1.0.0a):\n\n#### Bug fixes:\n- Fixed a naming bug when setting Chi2 angles in Leucine residues. Atom CD1 and CD2 were previously incorrectly swapped\n",
        "html_url": "https://github.com/jensengroup/fragbuilder/releases/tag/1.0.0a",
        "name": "FragBuilder v 1.0.0a",
        "release_id": 142521,
        "tag": "1.0.0a",
        "tarball_url": "https://api.github.com/repos/jensengroup/fragbuilder/tarball/1.0.0a",
        "type": "Release",
        "url": "https://api.github.com/repos/jensengroup/fragbuilder/releases/142521",
        "value": "https://api.github.com/repos/jensengroup/fragbuilder/releases/142521",
        "zipball_url": "https://api.github.com/repos/jensengroup/fragbuilder/zipball/1.0.0a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andersx",
          "type": "User"
        },
        "date_created": "2014-01-03T14:05:43Z",
        "date_published": "2014-01-03T14:24:28Z",
        "html_url": "https://github.com/jensengroup/fragbuilder/releases/tag/1.0.0",
        "name": "FragBuilder v 1.0.0",
        "release_id": 136698,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/jensengroup/fragbuilder/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jensengroup/fragbuilder/releases/136698",
        "value": "https://api.github.com/repos/jensengroup/fragbuilder/releases/136698",
        "zipball_url": "https://api.github.com/repos/jensengroup/fragbuilder/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:28:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get help, report bugs, feature requests, etc:",
        "type": "Text_excerpt",
        "value": "You can use all the tools available here at GitHub or you can also contact me directly at this address: andersx [\u00e5] nano.ku.dk\n\nI have the following functionality in the making (may be in the development branch):\n \n- Handling of protonation states.\n- Module that uses TorusDBN to sample backbone angles.\n- Module to write Gaussian spin-spin coupling input files.\n\nContact me if you have more ideas!\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1) Clone fragbuilder from this repository",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "    git clone https://github.com/andersx/fragbuilder\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Export the frabuilder directory to your PYTHONPATH eg:",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "    export PYTHONPATH=/home/andersx/dev/fragbuilder:$PYTHONPATH\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3) In your Python:",
        "parent_header": [
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "    import fragbuilder\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get help, report bugs, feature requests, etc:",
        "type": "Text_excerpt",
        "value": "You can use all the tools available here at GitHub or you can also contact me directly at this address: andersx [\u00e5] nano.ku.dk\n\nI have the following functionality in the making (may be in the development branch):\n \n- Handling of protonation states.\n- Module that uses TorusDBN to sample backbone angles.\n- Module to write Gaussian spin-spin coupling input files.\n\nContact me if you have more ideas!\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jensengroup/fragbuilder/master/README.md",
      "technique": "header_analysis"
    }
  ]
}