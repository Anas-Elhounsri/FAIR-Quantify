{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data"
        ],
        "type": "Text_excerpt",
        "value": "Xingtan Zhang, Shengcheng Zhang, Qian Zhao, Ray Ming & Haibao Tang. Assembly of\nallele-aware, chromosomal-scale autopolyploid genomes based on Hi-C data. (2019) _Nature\nPlants._ [link](https://www.nature.com/articles/s41477-019-0487-8)\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tanghaibao/allhic"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-06T22:19:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T02:48:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Genome scaffolding based on HiC data in heterozygous and high ploidy genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data"
        ],
        "type": "Text_excerpt",
        "value": "**We currently recommend only using this program in a scripted pipeline, as detailed\n[here](https://github.com/tangerzhang/ALLHiC/wiki).**\n\nALLHiC can be used to scaffold genomic contigs based on Hi-C data, which is\nparticularly effectively for auto-polyploid or heterozygous diploid genomes.\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.856645514318523,
      "result": {
        "original_header": "WIP features",
        "type": "Text_excerpt",
        "value": "- [x] Add partition split inside \"partition\"\n- [x] Use clustering when k = 1\n- [x] Isolate matrix generation to \"plot\"\n- [x] Add \"pipeline\" to simplify execution\n- [x] Make \"build\" to merge subgroup tours\n- [x] Provide better error messages for \"file not found\"\n- [ ] Plot the boundary of the contigs in \"plot\" using genome.json\n- [ ] Add dot plot to \"plot\"\n- [ ] Compare numerical output with Lachesis\n- [ ] Improve Ler0 results\n- [ ] Translate \"prune\" from C++ code to golang\n- [ ] Add test suites\n \n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/tangerzhang/ALLHiC/wiki"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tanghaibao/allhic/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/Distance-inference-between-contigs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/Distance-inference-between-contigs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/Probability-distribution-HIC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/Probability-distribution-HIC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/HiC-linksize-empirical-distribution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/notebooks/HiC-linksize-empirical-distribution.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tanghaibao/allhic/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tanghaibao/allhic"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ALLHIC: Genome scaffolding based on Hi-C data"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/functional-tests.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/images/graph-s.png"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/images/graph-s.partitioned.png"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/images/test-movie.gif"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install allhic is to download the latest binary from\nthe [releases](https://github.com/tanghaibao/allhic/releases) and make sure to\n`chmod +x` the resulting binary.\n\nIf you are using [go](https://github.com/golang/go), you can build from source with:\n\n```console\ngo get -u -t -v github.com/tanghaibao/allhic/...\ngo install github.com/tanghaibao/allhic/cmd/allhic\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9946036987979825,
      "result": {
        "original_header": "ALLHIC: Genome scaffolding based on Hi-C data",
        "type": "Text_excerpt",
        "value": "         _       _____     _____     ____  ____  _____   ______\n        / \\     |_   _|   |_   _|   |_   ||   _||_   _|.' ___  |\n       / _ \\      | |       | |       | |__| |    | | / .'   \\_|\n      / ___ \\     | |   _   | |   _   |  __  |    | | | |\n    _/ /   \\ \\_  _| |__/ | _| |__/ | _| |  | |_  _| |_\\ `.___.'\\\n    |____| |____||________||________||____||____||_____|`.____ .' \n[![Github\nActions](https://github.com/tanghaibao/allhic/workflows/build/badge.svg)](https://github.com/tanghaibao/allhic/actions) \n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9593583095022528,
      "result": {
        "original_header": "<kbd>Pipeline</kbd>",
        "type": "Text_excerpt",
        "value": "Please see detailed steps in a scripted pipeline [here](https://github.com/tangerzhang/ALLHiC/wiki).\n \n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8437816898413472,
      "result": {
        "original_header": "WIP features",
        "type": "Text_excerpt",
        "value": "- [x] Add partition split inside \"partition\"\n- [x] Use clustering when k = 1\n- [x] Isolate matrix generation to \"plot\"\n- [x] Add \"pipeline\" to simplify execution\n- [x] Make \"build\" to merge subgroup tours\n- [x] Provide better error messages for \"file not found\"\n- [ ] Plot the boundary of the contigs in \"plot\" using genome.json\n- [ ] Add dot plot to \"plot\"\n- [ ] Compare numerical output with Lachesis\n- [ ] Improve Ler0 results\n- [ ] Translate \"prune\" from C++ code to golang\n- [ ] Add test suites\n \n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tanghaibao/allhic/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "contigs, genetic-algorithm, genome-assembly, genome-scaffolding, genomics, golang, heterozygous, hi-c, inter-contig-links, lachesis, pipeline, polyploid"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2017-2018, Haibao Tang and Xingtan Zhang\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/images/allhic-plot-s.png"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "allhic"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tanghaibao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 629823,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 153810,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 15835,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7775,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1647,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 434,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2019-12-12T10:14:49Z",
        "date_published": "2019-12-12T10:20:18Z",
        "description": "\n\n## Changelog\n\nd0ed869 [goreleaser] cmd/allhic.go => cmd/main.go\ned9c1c9 [cmd] Use cobra instead of cli (#15)\n\n\n",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.9.13",
        "name": "v0.9.13",
        "release_id": 22172463,
        "tag": "v0.9.13",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.9.13",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/22172463",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/22172463",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.9.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2019-12-12T07:56:44Z",
        "date_published": "2019-12-12T08:13:34Z",
        "description": "\r\n\r\n## Changelog\r\n\r\n3e37155 Multiple REs (#14)\r\n61a95f8 Merge branch 'actions-1'\r\nfbd4e13 [tests] Update after cli dependency change\r\n4d20efd Actions 1 (#13)\r\ncda40e0 [tests] Reformat build.yml\r\n818cda7 [tests] Add desc param in fastx function call\r\n4b879f9 Create build.yml\r\n3f21c88 [README] Update reference\r\n\r\n\r\n",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.9.12",
        "name": "v0.9.12",
        "release_id": 22169139,
        "tag": "v0.9.12",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.9.12",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/22169139",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/22169139",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.9.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2019-08-28T00:52:21Z",
        "date_published": "2019-08-28T01:01:44Z",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.9.8",
        "release_id": 19578509,
        "tag": "v0.9.8",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/19578509",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/19578509",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2018-12-06T05:43:51Z",
        "date_published": "2018-12-06T05:44:39Z",
        "description": "## Changelog\n\n84f89f7 [README] Edit README to include pipeline instructions; version v0.8.12\n04531ca [notebooks] Add HiC-linksize-empirical-distribution\nbf822fb [extract] Fix crashes when link size exceeds MaxLinkDist\na301323 [partition] Fix issue #1, use --minREs strictly as user input\nd9eb5b7 [extract] Extract first part of the sequence name\nf0a075e [evaluate] Update MaxHalford/gago => MaxHalford/eaopt\nf2f9392 [README] Add partition cmd on pruned output\n8185b0a [partition] Add partitionFlags\n4d7935d [cluster] Make passRatio a bit more stringent\na0cf7d3 [partition] Change default MinREs\nbdc30e7 [prune] Summary statistics of pruned links\n831f901 [prune] Update score in prune\ndba743f [prune] Replace *AlleleGroup with groupID\n7d66dbe [prune] Add pruneCrossAllelic()\n1d9e0ce [prune] Add writePairsFile()\nc36c4f4 [extract] Add label column to pairs.txt\nc42f43a [prune] Add parseAllelesTable()\nd660177 [prune] Add prune.v2.cpp\nafd492a [evaluate] Revert back to EvaluateSumRecip() as default Evaluate()\n8ed9616 [cluster] Update N => nNonSkipped\nddf6835 [partition] Add 1 pseudocount to RE counts; Also lower the MinRE cutoff\n51110c2 [release] Add packr to goreleaser\n\n",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.8.12",
        "name": "v0.8.12",
        "release_id": 14378673,
        "tag": "v0.8.12",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.8.12",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/14378673",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/14378673",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.8.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2018-07-22T06:18:27Z",
        "date_published": "2018-07-22T06:31:57Z",
        "description": "## Changelog\n\n16de042 [build] Add mergeTours()\n7cf2674 [cmd] Add pipeline\ne6c66e9 [plot] Use packr to distribution html\nb8e5e26 [plot] Add overflow\na44064e [optimize] Reuse rng\n3a2373d [clm] Do not read header\n66e80e0 [tests] Update functional-tests.sh\n8c518a5 [tests] Clean up contents in tests\ned5959a [images] Add allhic-plot-s\ne16bbfa [optimize] Simplify optimize interface\n82abd1b [plot] Add X-axis label\n19a4dc6 [plot] Isolate relevant code from anchor to go\n6418179 [plot] Add plot.go\n88641ed [plot] Fix dimensions of the plot\n9100381 [plot] Implement heatmap\na1cafed [plot] Add plot.html\nefc52af [optimize] Add parseClustersFile\n06b5ab9 [partition] Do not run clustering when k = 1\n8b23329 [model] Add LinkDensityModel and reduce dup code in assess and extract\n8761a30 [README] Edit README to remove old doc\nebb6c39 [cluster] Write partitions to file\nb27bb47 [build] Speed up build\nac14455 [build] Add parseAllTours() back\n0abaa4f [README] Update doc on build\n0d0f3d1 [partition] Simplify Run()\n29c9530 [extract] Normalize output file names\naeae14a [extract] Remove MLE calculation\n3e2621f [cluster] Recover skipped contig\na461f93 [cluster] Add clusters to Partitioner\nf3d6c8d [cluster] Add printClusters()\n8a8d3a5 [extract] Add bam flags\ne576250 [cluster] Skip contigs during clustering\n3bae32a [partition] Fix bug in skipRepeats()\ned2f50d [partition] Store ai, bi in ContigPair\n438a8bd [partition] Add skipRepeats()\nba98d9a [extract] Export limited number of fields in ContigPair\ne7d16b7 [extract] Fix position bug\nba11153 [extract] Simplify contig info\nc4cfd19 [extract] Start unifying int64 for genome coordinates\ne4ba144 [partition] Add skipContigsWithFewREs()\n01bde3b [extract] Export RE counts to file\n92c9f7b [cluster] Replace list with slice\n947dfd3 [notebooks] Add two notebooks\n961532a [anchor] Skip contigs in imported path that are not found\n5e2f2fb [anchor] Add --tour to dump matrix for existing path\nb7bce45 [anchor] Write to tour file\n18668e7 [optimize] Add resume capability\n9c50fbb [anchor] Experimental export of intermediate path\n4123920 [graph] Make ties to make the algorithm more stable\n9cc9ada [orientation] Use SumLog in EvaluateQ()\na2f34a3 [evaluate] Add MutPermute and MutSplice\naaf1000 [cmd] Remove crossrate\n86b2838 [evaluate] Use MaxHalford/gago\n4d6e7ee [assess] Use power law in caluclation in computeLikelihood()\na9bf4e6 [evaluate] Use rng in randomTwoInts\na0cefdf [evaluate] Simplify mutation random calls\nf8b0fb6 [evaluate] Test 2.5Mb LIMIT\nd145313 [cmd] Add command line options to optimize\nc15bcbe [evaluate] Change LIMIT to 5Mb\nb5105b7 [evaluate] Add LIMIT back in the Evaluate()\ne76e9c8 [evaluate] Set maxscore initially to minfloat\nb56b6e3 [evaluate] Use the Evaluate() function based on log(dist)\n13917c6 [assess] Disable Println() in assess\neda4da4 [assess] Add fixPowerLaw()\n91a5e8c [anchor] Add getL50()\nf158333 [anchor] Add flanksize\nb60928c [anchor] Add flanksize to bisect()\nfcf1020 [anchor] Add serialization code of Anchorer\ne93a185 [anchor] Add makePath()\n3067d5c [anchor] Add iterativeGraphMerge()\nd9e7f50 [anchor] Add findCountCutoff()\nd74afcf [anchor] Remove scoreTriangle()\n29fddc2 [anchor] Add Piler to search number of overlapping intervals\n14020a4 [anchor] Use int64 instead of float64\nb708816 [anchor] Add convenience Node.length() function\nd820453 [anchor] Add inspectGaps()\n4142516 [anchor] Add identifyGap()\n8157ef9 [anchor] Fix secondLargest\n48e2ab5 [anchor] Track PathSet\n36eff4f [anchor] Still buggy graphRemake\n159de19 [anchor] Simplify LNode and RNode\n79db2a7 [anchor] Do not modify graph when making confidence graph\ndade67c [anchor] Remove Registry\nb599c16 [anchor] Simplify logging messages\n3b8187c [anchor] Simplify orientation\nf4e8c28 [anchor] Add splitPath()\n41006e0 [anchor] Stopping merging until 1 path\n3a9b5c8 [anchor] Add getUniquePaths()\n9401600 [anchor] Add printPaths()\n1a4926e [graph] Fix path counting\n6e0a1f9 [anchor] Replace Path with *Path\n4246deb [graph] Ignore intra links\n979e42b [anchor] Fix bug in the center contig\n67b3982 [anchor] paths[i].bisect() now working\n8347afa [anchor] Simplify dfs logic\n1c635b9 [anchor] Add iterative merges (not working yet)\n356427f [cmd] Add Xingtan to author list\n5b9db17 [assess] Update cutoff to be 0.95\nc321dfa [assess] Write prob to file\n7e28830 [assess] Calculate post. prob. from log likelihood\nd916934 [assess] Normalize probability per bin size\n3e3e9af [assess] Add ComputePosteriorProb()\n572509a [assess] Add MakeProbDist()\n4549ee3 [assess] Read intra- and inter- contig links\n12aed00 [assess] Add ReadBed()\n6872a1e [scripts] Add tour2asm.pl and prune-all-new.cpp\ne1cbfba [assess] Add extraction of intra-contig links\n0d052b2 [assess] Ass assess.go\n385f539 [graph] Reverse negative oriented path\n79d7829 [anchor] Change orientations to be {-1, 1}\n5a5e093 [base] Use math.MinInt32\n2c5780b [graph] Add breakCycle()\n13c2860 [graph] Store edge weights in path\n7247f73 [graph] Implement generatePathAndCycle()\nddf4857 [graph] Add confidenceGraph\n6ec2ee6 [graph] Build confidence graph\nd51bfe2 [graph] Add graph.go\n2a65631 [anchor] Add anchor.go\nc96868e [anchor] Handle reverse oriented contigs in Path\ndf1e9e0 [anchor] Instantiate edges in anchor\n7d39921 [anchor] Update registry after bisect()\ncda29d5 [anchor] Change int to *Contig in struct Path\n582888a [anchor] Add bisect\n0824320 [anchor] Add anchor.go\n\n",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.8.4",
        "name": "v0.8.4",
        "release_id": 12042643,
        "tag": "v0.8.4",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/12042643",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/12042643",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tanghaibao",
          "type": "User"
        },
        "date_created": "2018-01-28T05:36:48Z",
        "date_published": "2018-01-28T05:44:32Z",
        "description": "## Changelog\n\n20241d6 [allhic] v0.8.2\nda04b15 [CI] Add several test files\n0dbf637 [CI] ADD .goreleaser.yml\n95ec665 [partition] Remove redundant edges\n53cc240 [partition] Print out contig names\nb0ca368 [partition] Output all partitions\n250104f [partition] Code dup in NewmanSubPartition\nc82f012 [partition] Continue onto sub-partitions\n01f9a5b [partition] Do not check visited\n2528d3d [partition] Speed up calculation of Q\n579e667 [partition] Parallel refinement\na98e08f [partition] Alert if cannot be further divided\n9cc78b9 [partition] Add RefinePartition()\nddb5968 [partition] Add eigen decomposition in go\nd618fb9 [partition] Generate adjacency matrix\naca84e4 [partition] Read graph in go\n3f0cba8 [partition] Print out partition\n5b900d6 [partition] Write edge list\n97d88b3 [partition] Add help string for newman_modularity.py\n95e7ba5 [partition] Fix fine-tuning method\n26d26fb [partition] Fine-tuning in newman_modularity\n70e4306 [partition] Implement newman_modularity.py\nb036a60 [partition] Add Newman modularity Python prototype\n0a99d5d [partition] Implement CountLinks()\n870c576 [README] Update installation cmd\n051ef0d [allhic] Replace docopt with clil\nd4fb474 [allhic] Iteratively run pruneByDensity()\n8cddb35 [allhic] Fix issue with Scanner() not having enough buffer\n98ed3ce [allhic] Print FLIPALL log\n4f13b24 [allhic] Add --mutpb and --cxpb in cmd/allhic\n31dc3ca [allhic] Add crossRate in GARun()\n597e1fa Merge branch 'master' of github.com:tanghaibao/allhic\ncf8477b [CI] Add gif in README\n87989d3 [allhic] Make a copy before sort in median()\n6fe21e7 [allhic] Sort first in median()\nc44633e [allhic] Print invalid tigs in clm\n897e326 [allhic] Merge Version into base\nce0e69f [CI] Install package in the root dir\nc0f9078 [CI] Add travis badge in README\nb4cecaa [allhic] Log GARun intermediate results\n2430328 [CI] Add command in README\nb3e980a [allhic] Add flipOne in orientation\ndd2f0be [allhic] Add flipWhole()\ne6f8a7e [allhic] Pass options into optimize\n599ee26 [allhic] Add command-specific docopt\n5703c1a [CI] Add .travis.yml and functional tests\n93ed0b2 [allhic] Generate Q matrix\n2403821 [allhic] Perform eigh on matrix O\n4a20532 [allhic] Add orientation.go\n65cb039 [allhic] Write tour to tour file\nf6237ac [allhic] Implement pruneTour()\n77cd16a [allhic] Add pruneTour()\nc85fac0 [allhic] Add pruneBySize() in clm\n0f0cdd0 [allhic] Add pruneByDensities() in clm\nb8e3f05 [allhic] Use a lighter struct for GA\n7787bfb [allhic] Simplify data structures in clm\n498e830 [allhic] Simplify data structures in clm\n100301a [allhic] Use +/- directly as sign\n52deeb2 [allhic] Stores orientations in map\nf50a3c9 [allhic] Add GoldenArray()\ne79d34a [allhic] Parameterize GA setup\nc8bdc85 [allhic] Set convergence criteria\n76b9b8a [allhic] Expose population settings\nd6b0126 [allhic] Use genome mutation in evaluate()\na6a9f7c [allhic] Implements GARun()\ne493349 [allhic] Implements gago.Genome interface\ne60eb10 [allhic] Implement Slice interface in evaluate\ncae47c1 [allhic] Make a struct to hold the tour\ndb97a79 [allhic] Shuffle array for different score\nda6f3ef [allhic] Generate default tour in Activate()\n0d82d5c [allhic] Add clm.M()\n982f002 [allhic] Use logging in partition\nf8bba7e [allhic] Add allhic/optimize.go\n8b23082 [allhic] Fixed logger\nfac9ca0 [allhic] Add ParseClm() in allhic/clm\nc33d5de [allhic] Add allhic/clm.go\n9ba4e49 [allhic] Add partition.go\n82a6ee8 [allhic] Add dir structure\n0e1a535 [allhic] Move all nim code into nim folder\nce13e7d [partition] Print contact matrix to file\n5da063d [partition] Use result variable in count_links()\n6ca2441 [partition] Simplify tig to id conversion\nde6fe8a [partition] Update matrix entries in contact matrix\n0c9cbea [partition] Compile number of links in a matrix\n06200c0 [partition] Sort reads by name\nf0ffa16 [allhic] Add count_links() in hic/partition\n91f248f [allhic] Add hic/partition\n4a03efc [allhic] Add docopt\n137f31f [CI] Rename hic_opt to allhic\n527cfff [hic] Implement score_evaluate()\n5d7570d [hic] Add cumSum()\n95869e0 [hic] Add matrix.nim\n66c0bca [hic] Prune small contigs\n49d8406 [hic] Add report_active()\ncdf113b [hic] Implement hic.clm.parse_clm()\nb040c3e [hic] Add hic.clm.parse_clm()\n4317cf8 [hic] Read tig sizes into a table\na078abc [hic] Implement hic.clm.parse_ids()\n6755bc9 [hic_opt] Initial commit\n189535e Initial commit\n\n---\nAutomated with [GoReleaser](https://github.com/goreleaser)\nBuilt with go version go1.9.2 darwin/amd64\n",
        "html_url": "https://github.com/tanghaibao/allhic/releases/tag/v0.8.2",
        "name": "v0.8.2",
        "release_id": 9416784,
        "tag": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/tanghaibao/allhic/tarball/v0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/tanghaibao/allhic/releases/9416784",
        "value": "https://api.github.com/repos/tanghaibao/allhic/releases/9416784",
        "zipball_url": "https://api.github.com/repos/tanghaibao/allhic/zipball/v0.8.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:02:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 59
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Extract</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Extract does a fair amount of preprocessing: 1) extract inter-contig links into a more compact form, specifically into `.clm`; 2) extract intra-contig links and build a distribution; 3) count up the restriction sites to be used in normalization (similar to LACHESIS); 4) bundles the inter-contig links into pairs of contigs.\n\n```console\nallhic extract tests/test.bam tests/seq.fasta.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Prune</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This prune step is **optional** for typical inbreeding diploid genomes.\nHowever, pruning will improve the quality of assembly of polyploid genomes.\nPrune pairs file to remove allelic/cross-allelic links.\n\n```console\nallhic prune tests/Allele.ctg.table tests/test.pairs.txt\n```\n\nPlease see help string of `allhic prune` on the formatting of\n`Allele.ctg.table`.\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Partition</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Given a target `k`, number of partitions, the goal of the partitioning\nis to separate all the contigs into separate clusters. As with all\nclustering algorithm, there is an optimization goal here. The\nLACHESIS algorithm is a hierarchical clustering algorithm using\naverage links, which is the same method used by ALLHIC.\n\n![networkbefore](images/graph-s.png)\n![networkafter](images/graph-s.partitioned.png)\n\n```console\nallhic partition tests/test.counts_GATC.txt tests/test.pairs.txt\n```\n\nCritically, if you have applied the pruning step above, use the \"pruned\" pairs:\n\n```console\nallhic partition tests/test.counts_GATC.txt tests/test.pairs.prune.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Optimize</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Given a set of Hi-C contacts between contigs, as specified in the\nclmfile, reconstruct the highest scoring ordering and orientations\nfor these contigs.\n\nOptimize uses Genetic Algorithm (GA) to search for the best scoring solution.\nGA has been successfully applied to genome scaffolding tasks in the past\n(see ALLMAPS; [Tang et al. _Genome Biology_, 2015](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-014-0573-1)).\n\n![ga](images/test-movie.gif)\n\n```console\nallhic optimize tests/test.counts_GATC.2g1.txt tests/test.clm\nallhic optimize tests/test.counts_GATC.2g2.txt tests/test.clm\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Build</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Build genome release, including `.agp` and `.fasta` output.\n\n```console\nallhic build tests/test.counts_GATC.2g?.tour tests/seq.fasta.gz tests/asm-2g.chr.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<kbd>Plot</kbd>",
        "parent_header": [
          "ALLHIC: Genome scaffolding based on Hi-C data",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Use [d3.js](https://d3js.org/) to visualize the heatmap.\n\n```console\nallhic plot tests/test.bam tests/test.counts_GATC.2g1.tour\n```\n\n![allhicplot](images/allhic-plot-s.png)\n"
      },
      "source": "https://raw.githubusercontent.com/tanghaibao/allhic/main/README.md",
      "technique": "header_analysis"
    }
  ]
}