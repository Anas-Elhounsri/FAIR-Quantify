{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use MASSIF in your work please cite:\n\nImproved linking of motifs to their TFs using domain information\n\nN Baumgarten, F Schmidt and MH Schulz, Bioinformatics, btz855, 2019, https://doi.org/10.1093/bioinformatics/btz855\n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SchulzLab/MASSIF"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-07T13:58:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-21T13:13:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Improved motif enrichment analysis using protein domain type information"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9426648521987507,
      "result": {
        "original_header": "MASSIF - motif association with domain information",
        "type": "Text_excerpt",
        "value": "MASSIF is a novel method to improve the performance of existing tool that link motifs to TFs relying on TF-associated sequences. MASSIF is based on the idea that a DNA-binding motif, which is correctly linked to a TF, should be assigned to a DNA-binding domain (DBD) similar to that of the mapped TF. Because DNA-binding motifs are in general not linked to DBDs, it is not possible to compare the DBD of a TF and the motif directly. Instead we created a DBD collection, which consist of TFs with a known DBD and an associated motif. This collection enables us to evaluate how likely it is that a linked motif and a TF of interest are associated to the same DBD. We named this similarity measure domain score, and represent it as a p-value.\nWe developed two different ways to improve the performance of existing tools that link motifs to TFs based on TF-associated sequences:\n (1) using meta analysis to combine p-values from one or several of these tools with the p-value of the domain score or\n(2) filter unlikely motifs based on the domain score.   \nMASSIF uses as tools [CentriMo](https://academic.oup.com/nar/article/40/17/e128/2411117) and [PASTAA](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2642637/). An overview is shown below: \n![overview.png](overview.png)\nMore details on the method can be found in our [paper](https://doi.org/10.1093/bioinformatics/btz855).\n \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8724414310321761,
      "result": {
        "original_header": "Required input",
        "type": "Text_excerpt",
        "value": "The script that uses the domain information as a filer needs additionally:\n- **thresholds_domainInfo** a file that gives for a specific pvalue threshold the corresponding domain information pro DNA-binding domain. The directory [RandomMotifs](RandomMotifs/) provides  several possible files for different pvalue thresholds. For the results shown in our paper, we used as a pvalue threshold 0.001 (meaning, we used the file [pvalue_0.001_ThresholdDomainInfo.txt](RandomMotifs/pvalue_0.001_ThresholdDomainInfo.txt)) \nThe similarities between the consensus motifs of the DNA-binding database and the motifs of the JASPAR database are precalculated. So, if you want to use the JASPAR motifs as motif input set you just need to enter the considered TF and the corresponding DBD in [clusterJASPAR/TF_to_DBD.txt](clusterJASPAR/TF_to_DBD.txt). Notice, that this entry needs to has the following format: TF\\tDBD\\t-1. TF should be the name of your fasta file (without .fa) and the DBD should be a  DBD listed in [clusterJASPAR/clusterJASPAR_info.txt](clusterJASPAR/clusterJASPAR_info.txt). This file contains all DBD that are part of the DNA_binding domain database. \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.889933152216563,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "- **CentriMo_name** original result from CentriMo.\n- **result_CentriMo_name.txt** parsed result from CentriMo.\n- **PASTAA_name** original result from PASTAA.\n- **result_PASTAA_name.txt** parsed result from PASTAA.\n- **result_DomainInfo_name.txt** ranking of the domain information (the bigger the value the better).\n- **result_fisherMethod_name.txt** final result. For each TF a ranking of motifs is given. The higher the ranking of the motif the more likely this motif corresponds to the TF. In addition the corresponding p-value is listed. \n- **significantMotifs_name.txt** file that contains for each TF the reduced motif set after the domain score is applied as filter.\n- **setOfPWMs_name** directory that contains for each TF the motif_file for the reduced motif set.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SchulzLab/MASSIF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SchulzLab/MASSIF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SchulzLab/MASSIF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MASSIF - motif association with domain information"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/testBig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/testSmall.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/src/testSmall.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/overview.png"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Necessarily installed software and packages:\n\n- [The Meme Suite](http://meme-suite.org/doc/download.html) (version 5.0.2, 5.0.3 or 5.0.4) to use CentriMo. Add the tool to our PATH  environment variable. \n- C++ compiler that is able to use openMP (and omp.h file which is part of the GNU OpenMP Library)\n(Notice, for Mac OS the clang++ compiler and the packages libopm is necessary. libopm can for instance be installed with 'brew install libomp')\n- [mosta](http://mosta.molgen.mpg.de/) to calculate the similarity between Position Frequency Matrices.\n\nDownload the repository. Notice, that the code for PASTAA is enclosed. \nTo compile the C++ code of MASSIF and PASTAA perform the following commands: \n```\ncd MASSIF/src\nmake\n```"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9972159467193921,
      "result": {
        "original_header": "Required input",
        "type": "Text_excerpt",
        "value": "To run the small example we need the following command:\n ```\n  python mainScript_DomainInfoFilter.py  tests/transfac_testSmall.txt path_to_meme_suite/ tests/seq_testSmall/ testSmallFisher tests/biologicalSignal_testSmall/ RandomMotifs/pvalue_0.001_ThresholdDomainInfo.txt\n ```\n with *path_to_meme_suite* is the path to the meme suite (something like /Home/.../meme-2.0.5/).\n \n**Using as input motif set the JASPAR motifs** \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8425137095175764,
      "result": {
        "original_header": "Required input",
        "type": "Text_excerpt",
        "value": "To run the small example we need the following command:\n ```\n  python mainScript_DomainInfoFilter.py  tests/transfac_testSmall.txt path_to_meme_suite/ tests/seq_testSmall/ testSmallFisher tests/biologicalSignal_testSmall/ RandomMotifs/pvalue_0.001_ThresholdDomainInfo.txt\n ```\n with *path_to_meme_suite* is the path to the meme suite (something like /Home/.../meme-2.0.5/).\n \n**Using as input motif set the JASPAR motifs** \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SchulzLab/MASSIF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2018 SchulzLab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MASSIF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SchulzLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 55857587,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 53606,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 37643,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3857,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1007,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run test cases",
        "type": "Text_excerpt",
        "value": "To check if MASSIF is working correctly, we provide two test cases, a small example with only two sequence sets  and 11 motifs as well as a bigger one with 19 sequence sets and the corresponding 19 motifs.\nTo start the test cases run\n``` \ncd ../\nbash testSmall.sh \nbash testBig.sh\n```\nThe second test case may take some time. The final result using the domain score as a prediction are stored in 'result_fisherMethod_testX.sh' and for using the domain score as a filter the files are termed 'result_fisherMethod_testXFilter.sh', where X is either 'Small' or 'Big', depending on the test case. See [tests/test_results/](tests/test_results/) for the results we obtained. \n"
      },
      "source": "https://raw.githubusercontent.com/SchulzLab/MASSIF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:34:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}