{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/uta-smile/CD-MVGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# \u5f00\u53d1\u89c4\u8303\n## \u4ee3\u7801\u98ce\u683c\n - Python: \u91c7\u7528 `PEP8`,\u8bf7\u63d0\u4ea4\u524d\u4f7f\u7528pylint\u68c0\u67e5\uff0c\u5982\u679c\u4f7f\u7528Pycharm\u8bf7\u4f7f\u7528\u76f8\u5173\u63d2\u4ef6\u3002\u5408\u5e76\u5230\u4e3b\u5206\u652f\u7684\u4ee3\u7801\u5fc5\u987b\u7b26\u5408\u4ee3\u7801\u89c4\u8303\u3002\n - [\u516c\u53f8\u7684python\u4ee3\u7801\u89c4\u8303](https://git.code.oa.com/standards/code/tree/master/Python)\n \n## \u5355\u5143\u6d4b\u8bd5\n  - \u4f7f\u7528JUnit\u4f5c\u4e3a\u5355\u5143\u6d4b\u8bd5\u6a21\u5757\u3002 \u5982\u679c\u4f7f\u7528Pycharm\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u7c7b\u522b\u4e0a\u53f3\u952e->`GOTO`->`Test` \u521b\u5efa\u65b0\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u5728\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u63d0\u4ea4\u4ee3\u7801\u5355\u5143\u6d4b\u8bd5\u4e0d\u8d85\u8fc7`90%`\u4e0d\u80fd\u5408\u5e76\u5230\u4e3b\u5206\u652f\u3002\u6240\u6709\u6ca1\u5b8c\u6210\u5355\u5143\u6d4b\u8bd5\u7684\u4ee3\u7801\u653e\u5728`contrib`\u6587\u4ef6\u5939\u3002 \n  - \u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\u4ee5`test_Classname.py`\u547d\u540d\uff0c\u82e5\u662f\u5355\u4e2a\u7684\u51fd\u6570\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u65b9\u6cd5\uff0c\u5219\u7edf\u4e00\u4ee5`test_Filename.py`\u547d\u540d\uff0c\u6240\u6709\u6d4b\u8bd5\u6587\u4ef6\u653e\u5728\u5bf9\u5e94\u76ee\u5f55`test`\u6587\u4ef6\u5939\u4e0b\u3002\n  - \u6240\u6709\u65b0\u52a0\u5165\u6ca1\u7ecf\u8fc7\u5355\u5143\u6d4b\u8bd5\u7684\u4ee3\u7801\u653e\u5728`contrib`\u5185\u3002\n  - \u65e7\u7684\u6a21\u5757\u5982\u679c\u8981\u8fdb\u884c\u4fee\u6539\u548c\u91cd\u6784\uff0c\u5fc5\u987b\u5148\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u8865\u5145\u597d\u5355\u5143\u6d4b\u8bd5\uff0c\u786e\u4fdd\u548c\u539f\u6765\u4e00\u81f4\u624d\u8fdb\u884c\u91cd\u6784\u3002\n  - \u91cd\u6784\u7684\u65f6\u5019\u9700\u8981\u79fb\u52a8\u5bf9\u5e94\u7684\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\u5230\u65b0\u7684\u4f4d\u7f6e\u7684`test`\u6587\u4ef6\u5939\u4e0b\u3002\n\n## \u6ce8\u91ca\n  \u4f7f\u7528`reStructuredText` \u4f5c\u4e3a\u51fd\u6570\u548c\u7c7b\u8bf4\u660e\u6587\u6863\u6807\u51c6\u6ce8\u91ca\u683c\u5f0f\uff08Pycharm\u81ea\u5e26\uff09\u3002\u683c\u5f0f\u53c2\u8003\uff1a[QuickRef](http://docutils.sourceforge.net/docs/user/rst/quickref.html)\n\n## \u6a21\u578b\u6dfb\u52a0Best Practice\n  - \u5c06\u73b0\u6709\u5e94\u7528\u8fc1\u79fb\u5230`contrib`\u6587\u4ef6\u5939\u4e0b\uff08\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u6765\u653e\u7f6e\u4ee3\u7801\uff09\uff0c\u5e76\u786e\u4fdd\u53ef\u4ee5\u987a\u5229\u8dd1\u901a\u3002\n  - \u5c06\u5e94\u7528\u4e2d\u6a21\u578b\u90e8\u5206\uff08nn.Module\uff09\u8fc1\u79fb\u5230`contrib/models`\u4e0b\u3002\n  - \u6839\u636e\u5b9e\u9645\u6a21\u578b\u62bd\u8c61\u51fa\u4e0d\u540c\u5c42\u6b21\u7684\u57fa\u672c\u64cd\u4f5c\u5c42(layers)\u548c\u4e2d\u95f4\u4ef6\u5c42(modules)\u3002\uff08\u8bf7\u5148\u9605\u8bfbDESGIN.md\u4e86\u89e3\u8fd9\u4e24\u4e2a\u5c42\u7684\u62bd\u8c61\u539f\u5219\uff0c\u5982\u679c\u9047\u5230\u56f0\u96be\u8bf7\n  \u5728\u7fa4\u5185\u63d0\u51fa\u8fdb\u884c\u8ba8\u8bba\u3002\uff09\n  - \u67e5\u770b`models`\u4e0b\u5bf9\u5e94\u7684`layers.py`\u548c`modules.py`\uff0c\u770b\u5176\u4e2d\u7ec4\u4ef6\u662f\u5426\u53ef\u4ee5\u5728\u5f53\u524d\u6a21\u578b\u4e2d\u590d\u7528\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u5c1d\u8bd5\u91cd\u6784\u66ff\u6362\u4e3a\u5bf9\u5e94\u6a21\u578b\u3002\n  - \u5728\u5b8c\u6210\u4e0a\u4e00\u6b65\u91cd\u6784\u540e\uff0c\u5c06`layers.py`\u548c`modules.py`\u4e2d\u4e0d\u5305\u542b\u7684\u57fa\u672c\u64cd\u4f5c\u548c\u4e2d\u95f4\u4ef6\u8fc1\u79fb\u5230`layers.py`\u548c`modules.py`, **\u5e76\u4e14\u5b8c\u6210\u76f8\u5e94\u6587\u6863\u548c\u5355\u5143\u6d4b\u8bd5\uff0c\u63d0\u4ea4\u5408\u5e76\u4e3b\u5206\u652f\u3002**\n  \n \n## \u9644\u5f55\n### \u5982\u4f55\u4f7f\u7528Pycharm\u8fde\u63a5Devnet\u673a\u5668\u8fdb\u884c\u8fdc\u7a0b\u8c03\u8bd5\nhttp://km.oa.com/group/37005/articles/show/397181?kmref=search&from_page=1&no=1\n### \u5982\u4f55\u4f7f\u7528Pycharm\u7684pylint\u63d2\u4ef6\u8fdb\u884c\u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u3002\nhttps://www.cnblogs.com/gaowengang/p/7892661.html\n### \u5982\u4f55\u4f7f\u7528Pycharm\u521b\u5efa\u5355\u5143\u6d4b\u8bd5\u3002\nhttps://blog.csdn.net/luopotaotao/article/details/89641049\n "
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-21T03:48:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-08T07:29:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9783183489906969,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Datasets used are from MoleculeNet [1]. We also include the csv files of the data in the data folder.\n[1] Wu, Zhenqin, Bharath Ramsundar, Evan N. Feinberg, Joseph Gomes, Caleb Geniesse, Aneesh S. Pappu, Karl Leswing, and Vijay Pande. \"MoleculeNet: a benchmark for molecular machine learning.\" Chemical science 9, no. 2 (2018): 513-530.\n \n"
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/uta-smile/CD-MVGNN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/chemical_space_visualize.ipynb"
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/chemical_space_visualize.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/uta-smile/CD-MVGNN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "uta-smile/CD-MVGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/start.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/stop.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/sider.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/freesolv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/qm8.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/tox21.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/bbbp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/esol.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/qm7.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/bace.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/lipo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/clintox.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/toxcast.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/run_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/run_seven_standalone.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/main_pretrain_mpi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/run_seven.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/start_pretrain_standalone.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/main_pretrain_standalone.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/pretrain/start_pretrain_mpi.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/finetune/start_finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/finetune/finetune_automl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/finetune/main_finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/grover/finetune/all_finetune_tasks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/admet_automl/scripts/start_finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/admet_automl/scripts/admet_automl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/admet_automl/scripts/main_finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/admet_automl/scripts/all_finetune_tasks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_sider_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/train_docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_bbbp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/run_seven.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_hiv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_sider.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_dist.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_chembl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_automl.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_pdb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/start_docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_pcba.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_muv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/scripts/legacy/main_esol.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/service/grpc_util/proto/proto_gen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9998489038361231,
      "result": {
        "original_header": "Conda environment",
        "type": "Text_excerpt",
        "value": "The environment can be created by \n```\nconda env create -f environment.yaml\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/uta-smile/CD-MVGNN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 uta-smile\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CD-MVGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "uta-smile"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1929309,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 33741,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1553,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:51:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Training example",
        "type": "Text_excerpt",
        "value": "```python\n### Generate rdkit features\n\npython scripts/save_features.py --data_path bbbp.csv --features_generator rdkit_2d_normalized --save_path bbbp.npz --restart\n\n### train CD-MVGNN model\nCUDA_VISIBLE_DEVICES=0 python train.py --data_path ../data/bbbp.csv \\\n--features_path ../data/bbbp.npz --no_features_scaling \\\n--split_type scaffold_balanced --dataset_type classification --epochs 40 --metric auc \\\n--model_type dualmpnnplus --init_lr 1.5e-4 --max_lr 1e-3 --final_lr 1.5e-4 --batch_size 32 --depth 4 \\\n--hidden_size 4 --ffn_num_layers 4 --ffn_hidden_size 2 --dropout 0 --weight_decay 1e-7 \n```\nThe training settings for each dataset is also provided in the scripts folder, which can be run by\n```\nbash <dataset>.sh\n```"
      },
      "source": "https://raw.githubusercontent.com/uta-smile/CD-MVGNN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}