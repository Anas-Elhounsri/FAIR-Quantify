{
  "application_domain": [
    {
      "confidence": 8.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8818820973385858,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "If you find mMAL pipeline useful in your research, please consider citing the following paper:\r\n```\r\n@article{10.1093/database/baaa050,\r\n    author = {Yang, Fenglong and Zou, Quan},\r\n    title = \"{mAML: an automated machine learning pipeline with a microbiome repository for human disease classification}\",\r\n    journal = {Database},\r\n    volume = {2020},\r\n    year = {2020},\r\n    month = {06},\r\n    issn = {1758-0463},\r\n    doi = {10.1093/database/baaa050},\r\n    url = {https://doi.org/10.1093/database/baaa050},\r\n    note = {baaa050},\r\n    eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baaa050/33426278/baaa050.pdf},\r\n}\r\n\r\n```\r\n\r\nAny questions, contact me: yangfenglong110@126.com.\r\n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Yang, Fenglong and Zou, Quan",
        "doi": "10.1093/database/baaa050",
        "format": "bibtex",
        "title": "{mAML: an automated machine learning pipeline with a microbiome repository for human disease classification}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/database/baaa050",
        "value": "@article{10.1093/database/baaa050,\n    eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baaa050/33426278/baaa050.pdf},\n    note = {baaa050},\n    url = {https://doi.org/10.1093/database/baaa050},\n    doi = {10.1093/database/baaa050},\n    issn = {1758-0463},\n    month = {06},\n    year = {2020},\n    volume = {2020},\n    journal = {Database},\n    title = {{mAML: an automated machine learning pipeline with a microbiome repository for human disease classification}},\n    author = {Yang, Fenglong and Zou, Quan},\n}"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yangfenglong/mAML1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-27T03:34:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-05T00:15:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automated machine learning model building pipeline for microbiome data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9324370093302772,
      "result": {
        "original_header": "mAML pipeline",
        "type": "Text_excerpt",
        "value": "\r\nAutomated machine learning model building pipeline for microbiome data\r\n\r\n![](./src/mAML_pipeline.png)\r\n\r\nFlowchart of the mAML pipeline. Two files indicated at the beginning of the pipeline should be submitted to the mAML web server. Operation steps before training are indicated in the blue inverse-trapezoids.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9839844679140527,
      "result": {
        "original_header": "mAML performance",
        "type": "Text_excerpt",
        "value": "\r\n![](./src/radar.png)\r\n\r\n\r\nPerformance of mAML compared to [benchmark baselines](http://39.100.246.211:8050/Dataset). Labels are abbreviation of each dataset and the metrics used in original study\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9374736581967722,
      "result": {
        "original_header": "GMrepo ML repository",
        "type": "Text_excerpt",
        "value": "\r\n![](./src/database.png)\r\n\r\nFramework of the [GMrepo ML](https://github.com/yangfenglong/mAML1.0/tree/master/datasets/GMrepo_datasets) repository construction. Operation steps are indicated in the blue inverse-trapezoids. Files with name in bold are all contained in the ML repository.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9805344023506819,
      "result": {
        "original_header": "5. Visualization outputs of the pipeline",
        "type": "Text_excerpt",
        "value": "\r\n![](./src/Huttenhower2012_HMP.BS.5.results.png)\r\nVisualizations for the best model of 'Huttenhower2012_HMP.BS.5' dataset: confusing matrix (A), ROC curve (B), classification report (C) and the top important features (D, default: top 20). In case of decision Tree based models, feature importances bar plot will be provided instead of feature\u2019s coefficient plot.\r\n\r\n\r\n\r\n\r\nYou can alse simply upload your own feature data to our [mAML web-server](http://39.100.246.211:8050/Server) to automatically build a predictive model following the [tutorial](http://39.100.246.211:8050/Help).  \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yangfenglong/mAML1.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/datasets/GMrepo_datasets/phyloseq.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/datasets/GMrepo_datasets/phyloseq.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/datasets/GMrepo_datasets/GMrepo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/datasets/GMrepo_datasets/GMrepo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yangfenglong/mAML1.0/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yangfenglong/mAML1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mAML1.0"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/results/work.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/./src/mAML_pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/./src/radar.png"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/./src/database.png"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/./src/Huttenhower2012_HMP.BS.5.results.png"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install dependencies:",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "Use the [docker image](https://hub.docker.com/r/yangfenglong/dash_webserver) for the running environment [recommended] . \r\n```\r\npython version is 3.7.3.\r\npip3 install -r requirements.txt\r\n\r\ngit clone https://github.com/jundongl/scikit-feature.git \r\n# clone to your Python lib path to use MRMR feature selection method\r\n# from skfeature.function.information_theoretical_based import MRMR\r\n```\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9998067353955111,
      "result": {
        "original_header": "Github repository Overview",
        "type": "Text_excerpt",
        "value": "\r\n```md\r\nmAML1.0/\r\n\u251c\u2500\u2500 README.md\r\n\u251c\u2500\u2500 requirements.txt \t# requirements \r\n\u251c\u2500\u2500 LICENSE \t# MIT License \r\n\u251c\u2500\u2500 code/\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sklearn_pipeline.py \t# main script for the pipeline\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sklearn_pipeline_config.py \t# config file for changing classifiers with parameters grid and scalars \r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utils.py \t# usefull functions\r\n\u251c\u2500\u2500 datasets            \r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 GMrepo_datasets/\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 GMrepo.ipynb # data download andd process ipython notebook (python)\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 amplicon.zip # amplicon datasets\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 metagenome.zip # metagenome datasets\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 phyloseq.ipynb # seperate phenotypes and generate phyloseq.Rdata (R)\r\n\u2502\u00a0\u00a0 \u2502\t\u2514\u2500\u2500 ...\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 benchmark_datasets  # 18 benchmark datasets for testing the performance of mAML\r\n\u2514\u2500\u2500 results \t# benchmark results\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_cecal.5\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_cecal.5.csv_20191114034958.log\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_fecal.5\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_fecal.5.csv_20191114081356.log\r\n    ...\r\n    \u251c\u2500\u2500 Morgan2012_IBD.3.csv_20191114125857.log\r\n    \u251c\u2500\u2500 Qin2012_Diabetes\r\n    \u251c\u2500\u2500 Qin2012_Diabetes.csv_20191114130638.log\r\n    \u251c\u2500\u2500 Qin2014_Cirrhosis\r\n    \u251c\u2500\u2500 Qin2014_Cirrhosis.csv.20191122101417.log\r\n    \u251c\u2500\u2500 Ravel2011_Vaginal\r\n    \u251c\u2500\u2500 Ravel2011_Vaginal.csv_20191114132211.log\r\n    \u251c\u2500\u2500 Wu2011_Diet\r\n    \u251c\u2500\u2500 Wu2011_Diet.csv_20191114020330.log\r\n    \u251c\u2500\u2500 Yang2010_EsophagitisPDX.4\r\n    \u251c\u2500\u2500 Yang2010_EsophagitisPDX.4.csv_20191114132601.log\r\n    \u2514\u2500\u2500 work.sh \t# shell scripts for regenerating benchmark results \r\n```\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999963823996,
      "result": {
        "original_header": "1. Clone this Github Repository",
        "type": "Text_excerpt",
        "value": "\r\n```\r\ngit clone https://github.com/yangfenglong/mAML1.0.git\r\ncd mAML1.0\r\n```\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9339688489564333,
      "result": {
        "original_header": "Github repository Overview",
        "type": "Text_excerpt",
        "value": "\r\n```md\r\nmAML1.0/\r\n\u251c\u2500\u2500 README.md\r\n\u251c\u2500\u2500 requirements.txt \t# requirements \r\n\u251c\u2500\u2500 LICENSE \t# MIT License \r\n\u251c\u2500\u2500 code/\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sklearn_pipeline.py \t# main script for the pipeline\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 sklearn_pipeline_config.py \t# config file for changing classifiers with parameters grid and scalars \r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utils.py \t# usefull functions\r\n\u251c\u2500\u2500 datasets            \r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 GMrepo_datasets/\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 GMrepo.ipynb # data download andd process ipython notebook (python)\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 amplicon.zip # amplicon datasets\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 metagenome.zip # metagenome datasets\r\n\u2502\u00a0\u00a0 \u2502\t\u251c\u2500\u2500 phyloseq.ipynb # seperate phenotypes and generate phyloseq.Rdata (R)\r\n\u2502\u00a0\u00a0 \u2502\t\u2514\u2500\u2500 ...\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 benchmark_datasets  # 18 benchmark datasets for testing the performance of mAML\r\n\u2514\u2500\u2500 results \t# benchmark results\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_cecal.5\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_cecal.5.csv_20191114034958.log\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_fecal.5\r\n    \u251c\u2500\u2500 Cho2012_Antibiotics_fecal.5.csv_20191114081356.log\r\n    ...\r\n    \u251c\u2500\u2500 Morgan2012_IBD.3.csv_20191114125857.log\r\n    \u251c\u2500\u2500 Qin2012_Diabetes\r\n    \u251c\u2500\u2500 Qin2012_Diabetes.csv_20191114130638.log\r\n    \u251c\u2500\u2500 Qin2014_Cirrhosis\r\n    \u251c\u2500\u2500 Qin2014_Cirrhosis.csv.20191122101417.log\r\n    \u251c\u2500\u2500 Ravel2011_Vaginal\r\n    \u251c\u2500\u2500 Ravel2011_Vaginal.csv_20191114132211.log\r\n    \u251c\u2500\u2500 Wu2011_Diet\r\n    \u251c\u2500\u2500 Wu2011_Diet.csv_20191114020330.log\r\n    \u251c\u2500\u2500 Yang2010_EsophagitisPDX.4\r\n    \u251c\u2500\u2500 Yang2010_EsophagitisPDX.4.csv_20191114132601.log\r\n    \u2514\u2500\u2500 work.sh \t# shell scripts for regenerating benchmark results \r\n```\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yangfenglong/mAML1.0/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "automl"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 YangFenglong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mAML1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yangfenglong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1190340,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 92277,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 51685,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4333,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install dependencies:",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "Use the [docker image](https://hub.docker.com/r/yangfenglong/dash_webserver) for the running environment [recommended] . \r\n```\r\npython version is 3.7.3.\r\npip3 install -r requirements.txt\r\n\r\ngit clone https://github.com/jundongl/scikit-feature.git \r\n# clone to your Python lib path to use MRMR feature selection method\r\n# from skfeature.function.information_theoretical_based import MRMR\r\n```\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Examples of how to run mAML pipeline:",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n# Building a machine learning model for one dataset\r\npython ../code/sklearn_pipeline.py \\\r\n\t../datasets/Cho2012_Antibiotics_cecal.5/Cho2012_Antibiotics_cecal.5.csv \\\r\n\t../datasets/Cho2012_Antibiotics_cecal.5/Cho2012_Antibiotics_cecal.5.mf.csv \\\r\n\t--outdir Cho2012_Antibiotics_cecal.5  --search --over_sampling --mrmr_n 50 --n_jobs 4      \r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:11:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Usage of the pipeline:",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\nusage: sklearn_pipeline.py --help or -h  \r\n\r\nA pipeline for automatically identify the best performing combinations of scalars and classifiers for microbiomic data\r\n\r\npositional arguments:\r\n  X_file                feature matrix file (required)\r\n  Y_file                map file (required)\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --outdir OUTDIR, -o OUTDIR\r\n                        path to store analysis results, default='./'\r\n  --prevalence PREVALENCE, -p PREVALENCE\r\n                        filter low within-class prevalence features, default= 0.2\r\n  --mrmr_n MRMR_N       number of features selected with MRMR, default=0\r\n  --over_sampling       over-sampling with SMOTE\r\n  --search              tune parameters of each classifier while selecting the best scaler and classifier\r\n  --outer_cv OUTER_CV   number of fold in the outer loop of nested cross validation default=10\r\n  --inner_cv INNER_CV   number of fold in the inner loop of nested cross validation, default=5\r\n  --scoring SCORING     one of ['accuracy', 'average_precision', 'f1', 'f1_micro', 'f1_macro', 'f1_weighted', 'f1_samples', 'neg_log_loss', 'precision', 'recall', 'roc_auc'], default='accuracy'\r\n  --n_jobs N_JOBS, -j N_JOBS\r\n                        number of jobs to run in parallel, default= 1\r\n\r\nExample:\r\n    python  sklearn_pipeline.py Gevers2014_IBD_ileum.csv Gevers2014_IBD_ileum.mf.csv --mrmr_n 20 --over_sampling  --outdir ./ \r\n\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Examples of how to run mAML pipeline:",
        "parent_header": [
          "mAML1.0",
          "How to regenerate benchmark results"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n# Building a machine learning model for one dataset\r\npython ../code/sklearn_pipeline.py \\\r\n\t../datasets/Cho2012_Antibiotics_cecal.5/Cho2012_Antibiotics_cecal.5.csv \\\r\n\t../datasets/Cho2012_Antibiotics_cecal.5/Cho2012_Antibiotics_cecal.5.mf.csv \\\r\n\t--outdir Cho2012_Antibiotics_cecal.5  --search --over_sampling --mrmr_n 50 --n_jobs 4      \r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/yangfenglong/mAML1.0/master/README.md",
      "technique": "header_analysis"
    }
  ]
}