{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/janka2012/digIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-19T12:17:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-11T08:45:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pipeline detecting distant and putative novel insertion sequences in prokaryotic genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary statistics",
        "parent_header": [
          "digIS",
          "Understanding Outputs",
          "digIS output files in `results` subfolder"
        ],
        "type": "Text_excerpt",
        "value": "This file is in tab-delimited format and contains six coloumns:\n * `seqid`: sequence ID\n * `family`: IS family name\n * `nIS`: number of IS elements per individual family\n * `bps`: overall number of base pairs of input sequence occupied by IS elements\n * `dnaLen`: length of the input sequence\n * `%dna`: overall percentage of input sequence occupied by IS elements\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9252155150971596,
      "result": {
        "original_header": "digIS",
        "type": "Text_excerpt",
        "value": "\n**Table of content** \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9730583103923751,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "digIS is a command-line tool developed in Python. It utilizes several external tools such as BLAST, HMMER, and Biopython library. As an input, digIS accepts contigs in FASTA format. Optionally, the user can provide a GenBank annotation file for a given input sequence(s). This annotation is later used to improve the classification of identified IS elements. \n\nThe digIS search pipeline operates in the following steps:\n1. The whole input nucleic acid sequence is translated into amino acid sequences (all six frames).\n2. The translated sequences are searched using manually curated pHMMs.\n3. Found hits, referred to as seeds, are filtered by domain bit score and e-value. Those that overlap or follow one another within a certain distance are merged.\n4. Each seed is matched against the database of known IS elements (ISfinder) and its genomic positions are extended according to the best hit.\n5. Extended seeds are filtered by noise cutoff score and length. Duplicates, corresponding to the same IS element, are removed.\n6. Remaining extended seeds are classified based on sequence similarity and GenBank annotation (if available) to assess their quality.\n7. Finally, the classified outputs are reported in the CSV and GFF3 format.\n \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9212798802933172,
      "result": {
        "original_header": "digIS output directory structure",
        "type": "Text_excerpt",
        "value": "digIS stores all results in output directory you specify by using `-o` option. The default output directory name is set to `digIS_output`. The output directory has following structure:\n* `hmmer`: results from hmmer and phmmer search, separate file for each sequence in input (multi)fasta file \n* `logs`: \n* `pep`: translated protein sequences of the input genomic sequences\n* `results`: digIS results for all sequences in input (multi)fasta file in CSV and GFF3 format together with summarization statistics.\n    * `input_filename.csv`: results in CSV format\n    * `input_filename.gff`: results in GFF format\n    * `input_filename.sum`: sumarization statistics\n \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9898158535034058,
      "result": {
        "original_header": "CSV output",
        "type": "Text_excerpt",
        "value": "* `id`: unique record id\n* `level`:  Extension level, possible values: IS, ORF, domain.\n* `qid`: name of the query profile\n* `qstart`: start position of the hit in the query profile\n* `qend`: end position of the hit in the query profile\n* `sid`: name of the subject sequence\n* `sstart`: start position of the hit in subject sequence\n* `send`: end position of the hit in subject sequence\n* `strand`: the strand on which the hit was found\n* `acc`: taken from HMMER. A measure of how reliable the overall alignment is (from 0 to 1, with 1.00 indicating a completely reliable alignment according to the model).\n* `score`: taken from HMMER. TODO\n* `evalue`: taken from HMMER. TODO\n* `ORF_sim`: TODO\n* `IS_sim`: TODO\n* `GenBank_class`: classification based on GenBank annotation. Possible values: is_related, no, other annotation. If GenBank annotation is not provided, this classification is not available and this field is empty.\n \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download digIS version from github repository",
        "parent_header": [
          "digIS",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# download the latest version\ngit clone https://github.com/janka2012/digIS.git\n\n# or download specific release from https://github.com/janka2012/digIS/releases\nwget https://github.com/janka2012/digIS/archive/v1.0.tar.gz\ntar -xvzf v1.0.tar.gz\n\n# go to digIS directory\ncd digIS-v1.0\n```"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/janka2012/digIS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/janka2012/digIS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "janka2012/digIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "digIS"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janka2012/digIS/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janka2012/digIS/master/digis_docker_wrapper.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies using package manager (for Ubuntu)",
        "parent_header": [
          "digIS",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsudo apt-get update\nsudo apt-get install hmmer\nsudo apt-get install ncbi-blast+\n\n# install python3  and pip3\nsudo apt-get install python3.7\nsudo apt install python3-pip\n\n# install Biopython, bcbio-gff, and numpy packages\npip3 install biopython\npip3 install bcbio-gff\npip3 install numpy\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install docker",
        "parent_header": [
          "digIS",
          "Run digIS in docker container"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# update software repositories\nsudo apt-get update\n\n# uninstall older versions of docker\nsudo apt-get remove docker docker-engine docker.io\n\n# install docker\nsudo apt install docker.io\n\n# start and automate docker\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# check docker version (optional)\ndocker --version\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8156314148657939,
      "result": {
        "original_header": "digIS output directory structure",
        "type": "Text_excerpt",
        "value": "digIS stores all results in output directory you specify by using `-o` option. The default output directory name is set to `digIS_output`. The output directory has following structure:\n* `hmmer`: results from hmmer and phmmer search, separate file for each sequence in input (multi)fasta file \n* `logs`: \n* `pep`: translated protein sequences of the input genomic sequences\n* `results`: digIS results for all sequences in input (multi)fasta file in CSV and GFF3 format together with summarization statistics.\n    * `input_filename.csv`: results in CSV format\n    * `input_filename.gff`: results in GFF format\n    * `input_filename.sum`: sumarization statistics\n \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8012434400406503,
      "result": {
        "original_header": "digIS output files in `results` subfolder",
        "type": "Text_excerpt",
        "value": "For a given input (multi)fasta file digIS generates three files with results: CSV file, GFF3 file and file with summary statistics.\n \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/janka2012/digIS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Janka Puterova & Tomas Martinek\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "digIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "janka2012"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 89625,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2782,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 352,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "janka2012",
          "type": "User"
        },
        "date_created": "2021-06-10T18:17:44Z",
        "date_published": "2021-06-10T18:49:46Z",
        "description": "* bug fixes\r\n* code refactoring\r\n* new filtering\r\n* improving annotation",
        "html_url": "https://github.com/janka2012/digIS/releases/tag/digISv1.2",
        "release_id": 44434806,
        "tag": "digISv1.2",
        "tarball_url": "https://api.github.com/repos/janka2012/digIS/tarball/digISv1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/janka2012/digIS/releases/44434806",
        "value": "https://api.github.com/repos/janka2012/digIS/releases/44434806",
        "zipball_url": "https://api.github.com/repos/janka2012/digIS/zipball/digISv1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "janka2012",
          "type": "User"
        },
        "date_created": "2019-08-03T15:55:36Z",
        "date_published": "2019-08-02T12:44:12Z",
        "html_url": "https://github.com/janka2012/digIS/releases/tag/digISv1.0",
        "name": "First official digIS release",
        "release_id": 19040353,
        "tag": "digISv1.0",
        "tarball_url": "https://api.github.com/repos/janka2012/digIS/tarball/digISv1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/janka2012/digIS/releases/19040353",
        "value": "https://api.github.com/repos/janka2012/digIS/releases/19040353",
        "zipball_url": "https://api.github.com/repos/janka2012/digIS/zipball/digISv1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "digIS"
        ],
        "type": "Text_excerpt",
        "value": "- HMMER 3.3 or higher, download the latest version from http://hmmer.org/download.html\n- ncbi-blast+ v 2.6.1 or higher, download the latest version from ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\n- Python3\n- Biopython 1.73 or higher\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies using package manager (for Ubuntu)",
        "parent_header": [
          "digIS",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsudo apt-get update\nsudo apt-get install hmmer\nsudo apt-get install ncbi-blast+\n\n# install python3  and pip3\nsudo apt-get install python3.7\nsudo apt install python3-pip\n\n# install Biopython, bcbio-gff, and numpy packages\npip3 install biopython\npip3 install bcbio-gff\npip3 install numpy\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pull the docker image from Dockerhub",
        "parent_header": [
          "digIS",
          "Run digIS in docker container"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ndocker pull janka2012/digis\n\n# List created docker images. You should see image with name digis listed.\ndocker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\njanka2012/digis     latest              1f09fc937ee1        14 minutes ago      765MB\n```\n\n### Run digIS using ```digis_docker_wrapper.sh```\nInstead of typing overwhelmingly long docker commands we are providing `digis_docker_wrapper.sh` script which allows you to use digIS docker image in really convinient way. This script takes same arguments as standard `digIS.py` script.\n\n```bash\nsh digis_docker_wrapper.sh -i data/test_data/NC_002608.fasta -g data/test_data/NC_002608.gb -o digis_genbank\n```\n\n## Understanding Outputs\n\n### digIS output directory structure\ndigIS stores all results in output directory you specify by using `-o` option. The default output directory name is set to `digIS_output`. The output directory has following structure:\n* `hmmer`: results from hmmer and phmmer search, separate file for each sequence in input (multi)fasta file \n* `logs`: \n* `pep`: translated protein sequences of the input genomic sequences\n* `results`: digIS results for all sequences in input (multi)fasta file in CSV and GFF3 format together with summarization statistics.\n    * `input_filename.csv`: results in CSV format\n    * `input_filename.gff`: results in GFF format\n    * `input_filename.sum`: sumarization statistics\n\n### digIS output files in `results` subfolder\nFor a given input (multi)fasta file digIS generates three files with results: CSV file, GFF3 file and file with summary statistics.\n\n#### CSV output\n* `id`: unique record id\n* `level`:  Extension level, possible values: IS, ORF, domain.\n* `qid`: name of the query profile\n* `qstart`: start position of the hit in the query profile\n* `qend`: end position of the hit in the query profile\n* `sid`: name of the subject sequence\n* `sstart`: start position of the hit in subject sequence\n* `send`: end position of the hit in subject sequence\n* `strand`: the strand on which the hit was found\n* `acc`: taken from HMMER. A measure of how reliable the overall alignment is (from 0 to 1, with 1.00 indicating a completely reliable alignment according to the model).\n* `score`: taken from HMMER. TODO\n* `evalue`: taken from HMMER. TODO\n* `ORF_sim`: TODO\n* `IS_sim`: TODO\n* `GenBank_class`: classification based on GenBank annotation. Possible values: is_related, no, other annotation. If GenBank annotation is not provided, this classification is not available and this field is empty.\n\n#### Example CSV output\n```\nid;level;qid;qstart;qend;sid;sstart;send;strand;acc;score;evalue;ORF_sim;IS_sim;GenBank_class\nNC_002608.1_000_is;is;IS200_IS605;1;113;NC_002608.1;181742;183592;-;0.98;105.7;4.9e-34;0.8923076923076924;0.8803465078505684;is_related\nNC_002608.1_001_is;is;IS200_IS605;1;113;NC_002608.1;154295;156130;-;0.98;117.5;1.1e-37;0.9922480620155039;1.0;is_related\n```\n\n#### GFF output\nThe GFF3 output file has the same content as the CSV output file, but in GFF3 format. Detailed description of GFF3 format can be found [here](http://gmod.org/wiki/GFF3).\n\n#### Example GFF3 output record\n```\nNC_002608.1     digIS   transposable_element    309812  311213  1.0     -       .       id=NC_002608.1_13_is;level=is;qid=IS4Sa_ISH8_IS231_IS4;qstart=1;qend=226;class_sim_orf=strong;class_sim_is=strong;class_sim_all=strong;class_genebank=None;class_level=None\n```\n\n#### Summary statistics\n\nThis file is in tab-delimited format and contains six coloumns:\n * `seqid`: sequence ID\n * `family`: IS family name\n * `nIS`: number of IS elements per individual family\n * `bps`: overall number of base pairs of input sequence occupied by IS elements\n * `dnaLen`: length of the input sequence\n * `%dna`: overall percentage of input sequence occupied by IS elements\n\n## Getting FASTA file using GFF file\n\nThe [GFF](http://gmod.org/wiki/GFF3) is a standard format for storing of genome features. This file can be used as an input for other tools to process or visualize appropriate genomic features. \n\nFor instance, FASTA sequences of IS elements (their catalytic domains) can be obtained using [Bedtools](https://bedtools.readthedocs.io/en/latest/) and command `getfasta` as follows:     \n\n```bash\nbedtools getfasta -fi <input.fasta> -bed <input.gff> -fo <output.fasta>\n```\nwhere _input.fasta_ represents FASTA file used for searching, _input.gff_ is the digIS output GFF file and _output.fasta_ is required output file.\n\n### Getting Flank Regions using GFF file\n\n```bash\nbedtools flank -i <input.gff> -g <genome.size> -l <left flank size>  -r <right flank size> \n```\nwhere _genome.size_ is a text file containing information about chromosomes and their sizes in form: `chromosome_name<TAB>chromosome_size`. For more information about _genome.size_ file format please see Bedtools [documentation](https://bedtools.readthedocs.io/en/latest/).\n\nAs the output a new GFF file with positions of flank regions is generated. Then, the appropriate FASTA file with flank sequences can be obtained using `bedtools getfasta` command described above. \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run digIS using BASH7*",
        "parent_header": [
          "digIS",
          "Run digIS in docker container"
        ],
        "type": "Text_excerpt",
        "value": "# digIS\n\n\n**Table of content**\n\n\n  * [Overview](#overview)\n  * [Requirements](#requirements)\n  * [Installation](#installation)\n  * [Usage](#usage)\n  * [Understanding Outputs](#understanding-outputs)\n  * [Getting FASTA file using GFF file](#getting-fasta-file-using-gff-file)\n\n\n\n## Overview\ndigIS is a command-line tool developed in Python. It utilizes several external tools such as BLAST, HMMER, and Biopython library. As an input, digIS accepts contigs in FASTA format. Optionally, the user can provide a GenBank annotation file for a given input sequence(s). This annotation is later used to improve the classification of identified IS elements.\n\n\nThe digIS search pipeline operates in the following steps:\n1. The whole input nucleic acid sequence is translated into amino acid sequences (all six frames).\n2. The translated sequences are searched using manually curated pHMMs.\n3. Found hits, referred to as seeds, are filtered by domain bit score and e-value. Those that overlap or follow one another within a certain distance are merged.\n4. Each seed is matched against the database of known IS elements (ISfinder) and its genomic positions are extended according to the best hit.\n5. Extended seeds are filtered by noise cutoff score and length. Duplicates, corresponding to the same IS element, are removed.\n6. Remaining extended seeds are classified based on sequence similarity and GenBank annotation (if available) to assess their quality.\n7. Finally, the classified outputs are reported in the CSV and GFF3 format.\n\n## Requirements\n- HMMER 3.3 or higher, download the latest version from http://hmmer.org/download.html\n- ncbi-blast+ v 2.6.1 or higher, download the latest version from ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\n- Python3\n- Biopython 1.73 or higher\n\n## Installation\n\n### Install dependencies using package manager (for Ubuntu)\n```bash\nsudo apt-get update\nsudo apt-get install hmmer\nsudo apt-get install ncbi-blast+\n\n# install python3  and pip3\nsudo apt-get install python3.7\nsudo apt install python3-pip\n\n# install Biopython, bcbio-gff, and numpy packages\npip3 install biopython\npip3 install bcbio-gff\npip3 install numpy\n```\n\n### Download digIS version from github repository\n```bash\n# download the latest version\ngit clone https://github.com/janka2012/digIS.git\n\n# or download specific release from https://github.com/janka2012/digIS/releases\nwget https://github.com/janka2012/digIS/archive/v1.0.tar.gz\ntar -xvzf v1.0.tar.gz\n\n# go to digIS directory\ncd digIS-v1.0\n```\n## Usage\n\n### Mode with GenBank annotation\n\n```bash\nexport PYTHONPATH=$PYTHONPATH:/path/to/digis/\npython3 digIS_search.py -i data/test_data/NC_002608.fasta -g data/test_data/NC_002608.gb -o digis_genbank\n```\n\n### Mode without GenBank annotation\n```bash\nexport PYTHONPATH=$PYTHONPATH:/path/to/digis/\npython3 digIS_search.py -i data/test_data/NC_002608.fasta -o digis_without_genbank\n```\n\n## Run digIS in docker container\n\n### Install docker\n\n```bash\n# update software repositories\nsudo apt-get update\n\n# uninstall older versions of docker\nsudo apt-get remove docker docker-engine docker.io\n\n# install docker\nsudo apt install docker.io\n\n# start and automate docker\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# check docker version (optional)\ndocker --version\n```\n\n### Pull the docker image from Dockerhub\n\n```bash\ndocker pull janka2012/digis\n\n# List created docker images. You should see image with name digis listed.\ndocker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\njanka2012/digis     latest              1f09fc937ee1        14 minutes ago      765MB\n```\n\n### Run digIS using ```digis_docker_wrapper.sh```\nInstead of typing overwhelmingly long docker commands we are providing `digis_docker_wrapper.sh` script which allows you to use digIS docker image in really convinient way. This script takes same arguments as standard `digIS.py` script.\n\n```bash\nsh digis_docker_wrapper.sh -i data/test_data/NC_002608.fasta -g data/test_data/NC_002608.gb -o digis_genbank\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:17:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Mode with GenBank annotation",
        "parent_header": [
          "digIS",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nexport PYTHONPATH=$PYTHONPATH:/path/to/digis/\npython3 digIS_search.py -i data/test_data/NC_002608.fasta -g data/test_data/NC_002608.gb -o digis_genbank\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mode without GenBank annotation",
        "parent_header": [
          "digIS",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nexport PYTHONPATH=$PYTHONPATH:/path/to/digis/\npython3 digIS_search.py -i data/test_data/NC_002608.fasta -o digis_without_genbank\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example CSV output",
        "parent_header": [
          "digIS",
          "Understanding Outputs",
          "digIS output files in `results` subfolder"
        ],
        "type": "Text_excerpt",
        "value": "```\nid;level;qid;qstart;qend;sid;sstart;send;strand;acc;score;evalue;ORF_sim;IS_sim;GenBank_class\nNC_002608.1_000_is;is;IS200_IS605;1;113;NC_002608.1;181742;183592;-;0.98;105.7;4.9e-34;0.8923076923076924;0.8803465078505684;is_related\nNC_002608.1_001_is;is;IS200_IS605;1;113;NC_002608.1;154295;156130;-;0.98;117.5;1.1e-37;0.9922480620155039;1.0;is_related\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example GFF3 output record",
        "parent_header": [
          "digIS",
          "Understanding Outputs",
          "digIS output files in `results` subfolder"
        ],
        "type": "Text_excerpt",
        "value": "```\nNC_002608.1     digIS   transposable_element    309812  311213  1.0     -       .       id=NC_002608.1_13_is;level=is;qid=IS4Sa_ISH8_IS231_IS4;qstart=1;qend=226;class_sim_orf=strong;class_sim_is=strong;class_sim_all=strong;class_genebank=None;class_level=None\n```\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting FASTA file using GFF file",
        "parent_header": [
          "digIS"
        ],
        "type": "Text_excerpt",
        "value": "The [GFF](http://gmod.org/wiki/GFF3) is a standard format for storing of genome features. This file can be used as an input for other tools to process or visualize appropriate genomic features. \n\nFor instance, FASTA sequences of IS elements (their catalytic domains) can be obtained using [Bedtools](https://bedtools.readthedocs.io/en/latest/) and command `getfasta` as follows:     \n\n```bash\nbedtools getfasta -fi <input.fasta> -bed <input.gff> -fo <output.fasta>\n```\nwhere _input.fasta_ represents FASTA file used for searching, _input.gff_ is the digIS output GFF file and _output.fasta_ is required output file.\n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Flank Regions using GFF file",
        "parent_header": [
          "digIS",
          "Getting FASTA file using GFF file"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nbedtools flank -i <input.gff> -g <genome.size> -l <left flank size>  -r <right flank size> \n```\nwhere _genome.size_ is a text file containing information about chromosomes and their sizes in form: `chromosome_name<TAB>chromosome_size`. For more information about _genome.size_ file format please see Bedtools [documentation](https://bedtools.readthedocs.io/en/latest/).\n\nAs the output a new GFF file with positions of flank regions is generated. Then, the appropriate FASTA file with flank sequences can be obtained using `bedtools getfasta` command described above. \n"
      },
      "source": "https://raw.githubusercontent.com/janka2012/digIS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}