{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maranasgroup/dGPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-09T16:56:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-30T02:04:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maranasgroup/dGPredictor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/dG_model_annotation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/dG_model_annotation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/retrieve_bulk.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/retrieve_bulk.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/analysis_dGPredictor.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/analysis_dGPredictor.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/dG_prediction_modelseed_dev_branch.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/dG_prediction_modelseed_dev_branch.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/retrieve_bulk_database.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/retrieve_bulk_database.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/bss-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/bss-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/new_linear_combine-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/new_linear_combine-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/streamlit/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/streamlit/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/CC/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/CC/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/CC/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/CC/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/data/Untitled.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/data/Untitled.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/data/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/data/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maranasgroup/dGPredictor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "maranasgroup/dGPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dGPredictor"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/figures/dg_demo_py3.gif"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8260605001145988,
      "result": {
        "original_header": "Pathway design using novoStoic",
        "type": "Text_excerpt",
        "value": "- Run \"mini_novoStoic.py\" to see an example to design pathways for Isobutanol synthesis \n"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maranasgroup/dGPredictor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dGPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "maranasgroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 556577,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 180994,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "dGPredictor"
        ],
        "type": "Text_excerpt",
        "value": "1. Python 3.8.10\n2. RDkit (http://www.rdkit.org/)\n3. pandas (https://pandas.pydata.org/)\n4. matplotlib (https://matplotlib.org/stable/users/installing.html)\n5. Scikit-learn (https://scikit-learn.org/stable/)\n6. Streamlit (https://streamlit.io/)\n7. Openbabel (https://anaconda.org/openbabel/openbabel)\n8. ChemAxon's Marvin >= 5.11 \n9. Pulp\n\nInstallation\n1. Python 3.8.10 (https://www.python.org/downloads/windows/)\nRecommended- \n- Create anaconda environment using command \"conda create -n dGPredictor python=3.8 ipython\"\n- activate the env using command \"conda activate dGPredictor\" or \"source activate dGPredictor\"\n2. RDkit\n- type command \"conda install -c conda-forge rdkit\" in your dGPredictor env to install rdkit\n3. Pandas\n- \"conda install pandas\"\n4. matplotlib\n- \"conda install -c conda-forge matplotlib\"\n5. Scikit-learn\n- use command \"pip install -U scikit-learn\"\n6. Streamlit \n- use command \"pip install -U streamlit\"\n7. Openbabel\n- run \"conda install -c conda-forge openbabel\" \n8. ChemAxon's Marvin (PkA value estimation)\n- Marvin is only required for adding structures of novel metabolites/compounds that are not in the KEGG database\n- instructions (https://chemaxon.com/products/marvin/download)\n- add \"cxcalc.bat (macOS) /cxcalc.exe (Windows)\" to PATH and also in \"./CC/chemaxon.py\" file\n- you will need to get a license to use ChemAxon (it is free for academic use)\n9. Pulp\n- use command \"pip install -U pulp\"\n\n\n\n\n=================================="
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running web-interface locally using streamlit",
        "parent_header": [
          "dGPredictor"
        ],
        "type": "Text_excerpt",
        "value": "- Model generation: Run \"model_gen.py\" using \"python model_gen.py\" once to create dGPredictor model file :- (Running this might take some time)\n- run \"streamlit run ./streamlit/main.py\" from dGPredictor folder\n- running KEGG reaction (doesn't require ChemAxon's Marvin) : copy paste the reaction equation into reaction section and click search\n"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:17:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Gibbs free energy prediction use automated group decomposition method",
        "parent_header": [
          "dGPredictor"
        ],
        "type": "Text_excerpt",
        "value": "- Step 1: decompose the metabolites based on smiles files (see function decompse_ac in decompose_groups.py or notebook )\n- Step 2: create group changes vectors (i.e. reaction rules) based on group changes in metabolites of reactions (see get_rxn_rule in decompose_groups.py)\n- Step 3: linear regression, Ridge Regression and Bayesian Ridge Regression in \"predict.py\"\n- Step 4: Multiple regression models in notebook \"analysis_dGPredictor.ipynb\"\n"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "demo",
        "type": "Text_excerpt",
        "value": "![dGPredictor Demo](figures/dg_demo_py3.gif)\n\n"
      },
      "source": "https://raw.githubusercontent.com/maranasgroup/dGPredictor/master/README.md",
      "technique": "header_analysis"
    }
  ]
}