{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "BetaScan"
        ],
        "type": "Text_excerpt",
        "value": "The original Beta statistics are described in [Detecting Long-Term Balancing Selection Using Allele Frequency Correlation, MBE 2017](https://academic.oup.com/mbe/article/doi/10.1093/molbev/msx209/3988103/Detecting-Long-term-Balancing-Selection-using).\n\nRecent updates to BetaScan, including the \u03b2<sup>(2)</sup> statistic and standardization are now published in [BetaScan2: Standardized statistics to detect balancing selection utilizing substitution data, GBE 2020](https://academic.oup.com/gbe/advance-article/doi/10.1093/gbe/evaa013/5721358).\n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ksiewert/BetaScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-01-30T23:38:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T15:55:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Genome-wide scan for balancing selection using beta statistic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9413235894170469,
      "result": {
        "original_header": "BetaScan",
        "type": "Text_excerpt",
        "value": "Welcome! BetaScan implements the \u03b2 statistic to detect ancient balancing selection, as described in [Siewert & Voight, 2017](https://academic.oup.com/mbe/article/doi/10.1093/molbev/msx209/3988103/Detecting-Long-term-Balancing-Selection-using) and [Siewert & Voight, 2020](https://academic.oup.com/gbe/article/12/2/3873/5721358). For in-depth instructions, please read the [BetaScan wiki](https://github.com/ksiewert/BetaScan/wiki). \nUpdate: 11/8/22: The newest version of BetaScan now uses python3! If you want to continue using the old python2 code, you can use BetaScan_python2.py. Otherwise, use BetaScan.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9403367228940273,
      "result": {
        "original_header": "Questions? Comments?",
        "type": "Text_excerpt",
        "value": "Any feedback or questions are very welcome. You can e-mail Katie at ksiewert@hsph.harvard.edu or post a github issue. We know that programs written by other people can be difficult to use, so we\u2019ve tried our best to make this program simple and intuitive. That being said, bioinformatics is bioinformatics, and issues will arise, so don\u2019t hesitate to contact us!\n \n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9511757035019329,
      "result": {
        "original_header": "1000 Genomes Beta Scores",
        "type": "Text_excerpt",
        "value": "If you would like the \u03b2<sup>(1)</sup> scores for each population in the 1000 Genomes dataset, they are available [here](https://doi.org/10.5281/zenodo.7842399). If you just want to look at the top 1% highest scoring haplotypes in each population, that data is also available [here](https://doi.org/10.5281/zenodo.7842399). These scores are based on hg19. \n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ksiewert/BetaScan/wiki"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ksiewert/BetaScan/wiki/Basic-Usage"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ksiewert/BetaScan/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ksiewert/BetaScan/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ksiewert/BetaScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BetaScan"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999921880688188,
      "result": {
        "original_header": "BetaScan",
        "type": "Text_excerpt",
        "value": "Update: 11/8/22: The newest version of BetaScan now uses python3! If you want to continue using the old python2 code, you can use BetaScan_python2.py. Otherwise, use BetaScan.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ksiewert/BetaScan/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "balancing-selection, evolution, natural-selection, population-genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BetaScan"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ksiewert"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 52269,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:21:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Usage",
        "parent_header": [
          "BetaScan"
        ],
        "type": "Text_excerpt",
        "value": "To run BetaScan on an input file named SNPFreqs.txt with default parameters:\n```\npython BetaScan.py -i SNPFreqs.txt\n```\nIf you have a folded site frequency spectrum, you must include the -fold flag to calculate \u03b2<sup>(1)\\*</sup>. If your data includes substitutions with an outgroup, you can use the -B2 flag, which calculates \u03b2<sup>(2)</sup>. However, if you use -B2 you must include an estimate of speciation time. See the [Usage page of the wiki](https://github.com/ksiewert/BetaScan/wiki/Basic-Usage) for details on how you can estimate.\n\nIf you also want to standardize \u03b2 by its variance, you can do so using the -std flag. This flag must be accompanied by an estimate of the mutation rate using the -theta flag. Once again, see the [Usage page of the wiki](https://github.com/ksiewert/BetaScan/wiki/Basic-Usage) for details on how you can estimate the mutation rate.\n"
      },
      "source": "https://raw.githubusercontent.com/ksiewert/BetaScan/master/README.md",
      "technique": "header_analysis"
    }
  ]
}