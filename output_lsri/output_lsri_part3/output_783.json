{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ElvisCuiHan/scGTM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-30T09:15:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-05T15:25:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Single-cell  generalized  trendmodel (scGTM): a flexible and interpretable model for gene expression along cell pseudotime. This is a Python package for modeling the statistical relationship between pseudotime and gene expression data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9974588137659619,
      "result": {
        "original_header": "scGTM: Single-cell generalized trend model",
        "type": "Text_excerpt",
        "value": "**scGTM** (orignally named as scKGAM) is the abbreviation for *Single-cell Gene Expression Generalized Trend Model*. This is a Python package for modeling the statistical relationship between pseudotime and gene expression data. The paper is published in [Bioinformatics](https://academic.oup.com/bioinformatics/article/38/16/3927/6618524) and is also available at [bioRXiv](https://www.biorxiv.org/content/10.1101/2021.11.25.470059v1). \nIt is intended for bioinformatic scientists, applied statisticians, and students who prefer using Metaheuristic algorithms in solving their own bioinformatic optimization problems. scGKM is able to provide various marginal gene distributions with interpretable regression functions. Check out more features! \n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ElvisCuiHan/scGTM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ElvisCuiHan/scGTM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ElvisCuiHan/scGTM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElvisCuiHan/scKGAM/main/Figures/data.png"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElvisCuiHan/scKGAM/main/Figures/100ZIP.png"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "scGTM: Single-cell generalized trend model"
        ],
        "type": "Text_excerpt",
        "value": "To install the bleeding-edge version of scGTM, clone this repo:\n\n```shell\n$ git clone -b git@github.com:ElvisCuiHan/scGTM.git\n```\nand then run\n\n```shell\n$ cd scGTM\n$ python run_scGTM.py --model.iter 100 --model.marginal 'ZIP' --model.save_dir \"your/path/to/save\" --data.dir \"your/path/file.csv\" --gene.start 3 --gene.end 4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ElvisCuiHan/scGTM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, optimization, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Elvis Cui\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElvisCuiHan/scKGAM/main/Figures/scGTM.png?width="
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scGTM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ElvisCuiHan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 58924,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:21:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "scGTM: Single-cell generalized trend model"
        ],
        "type": "Text_excerpt",
        "value": "scGTM provides a high-level implementation of various marginal distributions including Poisson, negative binomial (NB), zero-inflated Poisson (ZIP) and zero-inflatd negative binomial (ZINB). Further, it utilizes particle swarm optimization algorithm in the package ***pyswarms*** to optimize the objective function. Thus, it aims to be user-friendly and customizable.\n\nThe data should be a cell-by-gene matrix where the first column corresponding to the pseudotime:\n\n| Index | Pseudotime | Gene1 | Gene2 | ... |\n|-------|------------|-------|-------|-----|\n| 1.    | t1         | y11   | y12   | ... |\n| 2.    | t2         | y21   | y22   | ... |\n| 3.    | t3         | y31   | y32   | ... |\n| 4.    | t4         | y41   | y42   | ... |\n\nA typical data structure will be of the following form:\n\n<img src=\"https://github.com/ElvisCuiHan/scKGAM/blob/main/Figures/data.png\" width=\"700\" />\n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "All-in-one function",
        "parent_header": [
          "scGTM: Single-cell generalized trend model",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Suppose we want to regress Gene 1 on pseudotime using the scGTM, simply we run the `run_scGTM` file in shell:\n\n```shell\npython run_scGTM.py --model.iter {# of iterations} --model.marginal 'ZIP' --model.save_dir \"your/path/to/save\" --data.dir \"your/path/file.csv\" --gene.start {START INDEX} --gene.end {END INDEX} \n```\n\nand we can replace `run_scGTM.py` with either `run_scGTM_Hill_Only.py` or `run_scGTM_Valley_Only.py` if we are only interested in one of the two trends.\n\nUsing the data in our `demo` folder, the command is:\n\n```shell\npython run_scGTM_Valley_Only.py --model.iter 120 --model.marginal 'ZIP' --model.save_dir \"Demo/Results/\" --data.dir \"Demo/simu_nb_scGTM_input.csv\" --gene.start 1 --gene.end 60\n```\n\n- `gene_index`: The index of gene that we want to model.\n- `model.marginal`: The marginal distribution of the gene expression, should be one of `[\"NB\", \"ZINB\", \"Poisson\", \"ZIP\"]`.\n- `model.iter`: Number of iterations run by PSO, usually 150 suffices.\n- `model.save_dir`: The directory to save our results.\n- `data.dir`: The path to our data file.\n- `gene.start`: Index of the first gene to fit.\n- `gene.end`: Index of the last gene to fit.\n\nIn the `scGTM.py` file (and the other two), we can modify the arguments to let the model outputs user-defined colors.\n\n- `plot_args`: A dictionary with keys *color* and *cmap*. *color* is a 4x1 vector and *cmap* is a string. For example:\n```python\nplot_args={\n             'color': ['red', 'tomato', 'orange', 'violet'],\n             'cmap': 'Blues',\n         }\n```\n\nIf one wants to estimate many genes with different marginals, we can first change the data directory in the function `parallel` and then use the command in terminal:\n\n```bash\npython run_scGTM_Hill_Only.py  --gene.start {START INDEX} --gene.end {END INDEX} --model.marginal \"NB\" --model.save_dir \"YourTargetPath\" --model.iter 150\n```\n\nNote the data should be in *.csv* format. The **main** function will return a *.json* file and *.png* figure. \n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "scGTM: Single-cell generalized trend model",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The following figure has shown a typical output by the `main` function in `scGTM.py`.\n\n- *Red line*: fitted log mean expression (log(tau_c) in the paper). \n- *Blue line*: Red line minus -log(1-p_c) so that the zero-inflation part is removed from expectation.\n- *Orange vertical line*: Estimated t0, i.e., the turning point of the model.\n- *Purple line*: fitted zero-inflation parameter, for details, see paper.\n- *Scatters/Points*: observed log expression value (log(y+1)).\n\n\n<img src=\"https://github.com/ElvisCuiHan/scKGAM/blob/main/Figures/100ZIP.png\" width=\"700\" />\n\nThe confidence intervals of `{t0, k1, k2, mu}` are saved in a `.json` file in the same directory.\n"
      },
      "source": "https://raw.githubusercontent.com/ElvisCuiHan/scGTM/main/README.md",
      "technique": "header_analysis"
    }
  ]
}