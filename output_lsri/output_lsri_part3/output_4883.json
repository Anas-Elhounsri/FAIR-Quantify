{
  "application_domain": [
    {
      "confidence": 22.31,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AimeeD90/pClean_release"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact Us",
        "parent_header": [
          "pClean",
          "How to use pClean"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions, suggestions or remarks, please contact: aimee.d.ym@gmail.com.\n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-05T03:26:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-08T02:57:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pClean: a tool for MS/MS spectrum preprocessing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9997024247287458,
      "result": {
        "original_header": "pClean",
        "type": "Text_excerpt",
        "value": "pClean is a powerful tool to preprocess high-resolution tandem mass spectra prior to database searching, and aimed at filtering out extraneous peaks with/without specific-feature, which integrated three modules, removal of label-associated ions, isotope peak reduction and charge deconvolution, and a graph-based network approach. pClean is supportive to a wide array of instruments with all types of MS data, and incorporative into most data analysis pipelines.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9005706847370267,
      "result": {
        "original_header": "Resources and executive environment",
        "type": "Text_excerpt",
        "value": "pClean is programed in Java and R, and released as a R package. \n**Software download:** The source code is available at [https://github.com/AimeeD90/pClean](https://github.com/AimeeD90/pClean), and the released software is downloadable at [https://github.com/AimeeD90/pClean_release](https://github.com/AimeeD90/pClean_release). Please download the latest version. \n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AimeeD90/pClean_release/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AimeeD90/pClean_release/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AimeeD90/pClean_release"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pClean"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3.2 Installation",
        "parent_header": [
          "pClean",
          "How to use pClean"
        ],
        "type": "Text_excerpt",
        "value": "pClean was released as a R package and distributed through GitHub. The installation steps are listed as follows.\n\n* Check R and Java to ensure the required version is installed. If not, you can download the latest version of software from [https://cran.r-project.org](https://cran.r-project.org) (or [https://www.rstudio.com](https://www.rstudio.com)) and [https://java.com/en/download/](https://java.com/en/download/), respectively. \n\nNote that if you are a Windows user, please add Java path to the system path after the Java installation.\n\n**3.2.1  Install the pClean package from a local .tar.gz file:**\n\n* Firstly, please download pClean_0.1.0.tar.gz from [http://metax.genomics.cn/pClean/files/pClean_0.1.0.tar.gz](http://metax.genomics.cn/pClean/files/pClean_0.1.0.tar.gz) (or [https://github.com/AimeeD90/Public_Packages/archive/master.zip](https://github.com/AimeeD90/Public_Packages/archive/master.zip))\n\n* Then, install pClean package using the following command:\n\n```{r install, eval = FALSE}\ninstall.packages(file_path,repos=NULL,type=\"source\") # please replace the file_path with the real path of pClean package; eg:install.packages(\"F:/pClean_0.1.0.tar.gz\",repos=NULL,type=\"source\")\n```\n\n**3.2.2  Install the remote pClean package from GitHub using devtools package:**\n\n* Open R software (recommended RStudio), and install package \"devtools\" via commands:\n\n```{r install, eval = FALSE}\ninstall.packages(\"devtools\")\nlibrary(devtools)\n```\n\n* Install pClean package using the following command:\n\n```{r install, eval = FALSE}\ndevtools::install_github(\"AimeeD90/pClean_release\")\nlibrary(pClean)\n```\n\n* If you already have a previous version of pClean installed, you can use that to install the development version:\n\n```{r install, eval = FALSE}\nremotes::install_github(\"AimeeD90/pClean_release\")\nlibrary(pClean)\n```\n\n* Note that: Sometimes an error (\"Http error 403\") would be occured when you install the remote pClean package from GitHub using devtools packagethe, it is better to try more than once, or try again another day.\n\nNow pClean is executable on your work station.\n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9882001483123505,
      "result": {
        "original_header": "Resources and executive environment",
        "type": "Text_excerpt",
        "value": "**Software download:** The source code is available at [https://github.com/AimeeD90/pClean](https://github.com/AimeeD90/pClean), and the released software is downloadable at [https://github.com/AimeeD90/pClean_release](https://github.com/AimeeD90/pClean_release). Please download the latest version. \n**Java version:** 1.8 or later \n**R version:** 3.5.0 or later \n**Operation platforms:** Windows, Mac OSX, Linux \n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AimeeD90/pClean_release/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, msms, pclean, preprocessing"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pClean_release"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "AimeeD90"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 17083,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:58:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1 Data transformation",
        "parent_header": [
          "pClean",
          "How to use pClean"
        ],
        "type": "Text_excerpt",
        "value": "pClean accepts MGF files as inputs. A vendor-specific format can be easily converted to MGF format using MSconvert of ProteoWizard library.\n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.3 Usage",
        "parent_header": [
          "pClean",
          "How to use pClean"
        ],
        "type": "Text_excerpt",
        "value": "Here, one fraction of TTE dataset (peptide labeled with iTRAQ8plex) and one fraction of Jurkat dataset (label free) were used as examples to illustrate how to use pClean. \n\n**3.3.1  Parameters**\n\nAll the parameters of pClean are listed in the following table.\n\nParameter|Description|Default value\n----------|------------|--------------\nmgf|Input MS/MS data|NULL\nitol|Fragment ion tolerance|0.05 (Da)\noutdir|Output directory|./\nmem|The maximum Java heap size, unit G|1\ncpu|Allowable number of CPU|0 (all)\naa2|Consider mass gap of two amino acids|TRUE\nmionFilter|Filter out immonium ions|FALSE\nlabelMethod|Peptide labeling method|NULL\nrepFilter|Filter out reporter ions|FALSE\nlabelFilter|Filter out label-associated ions|FALSE\nlow|Clearance of low b-/y-ion free window|FALSE\nhigh|Clearance of high b-/y-ion free window|FALSE\nisoReduction|Heavy isotopic ions reduction|FALSE\nchargeDeconv|High charge deconvolution|FALSE\nlargerThanPrecursor|Filter out ions larger than precursor\u2019s mass|FALSE\nionsMerge|Merge two ions of similar mass|FALSE\nnetwork|Graph-based network filtration|FALSE\nplot|Plot ions-network|FALSE\nidres|Identification result, mzid or dat file|NULL\nms2tolfilter|Fragment mass error tolerance filter limit|1.2\ndebug|keep the edge and peak files for looking up|FALSE\n\npClean provide with a function to eliminate the immonium ions from MS/MS data, and the list of immonium ions are got from reference. Filter out the immonium ions.\n\n**3.3.2  pClean treatment on label-based MS/MS data**\n\n1)  Open R and load pClean, type: \n\n```{r install, eval = FALSE}\nlibrary(pClean)\n```\n\n2)  Set parameters then run pClean:\n\n```{r install, eval = FALSE}\nmgffile<-system.file(\"extdata/\", \"tte.frac1.mgf\",package=\"pClean\")\npCleanGear(mgf=mgffile,outdir=\"tte/result\",mem=2,cpu=0,mionFilter=TRUE,labelMethod=\"iTRAQ8plex\",repFilter=TRUE,labelFilter=TRUE,low=TRUE,high=TRUE,isoReduction=TRUE,chargeDeconv=TRUE,largerThanPrecursor=TRUE,ionsMerge=TRUE,network=TRUE,debug=FALSE)\n```\n\n3)  The resultant MS/MS spectra are written to the ms/ms directory in separate files. To merge all the files, run this:\n\n```{r install, eval = FALSE}\nmergeMGF(dir=\"tte/result/msms\",name=\"tte.frac1.pClean.mgf\")\n```\n\n**3.3.3  pClean treatment on label-free MS/MS data**\n\n1)  Open R and load pClean, and type: \n\n```{r install, eval = FALSE}\nlibrary(pClean)\n```\n\n2)  Set parameters then run pClean:\n\n```{r install, eval = FALSE}\nmgffile<-system.file(\"extdata/\", \"120426_Jurkat_highLC_Frac1.mgf\",package=\"pClean\")\npCleanGear(mgf=mgffile,outdir=\"jurkat/result\",mem=2,cpu=0,mionFilter=TRUE,isoReduction=TRUE,chargeDeconv=TRUE,largerThanPrecursor=TRUE,ionsMerge=TRUE,network=TRUE,debug=FALSE)\n```\n\n3)  The resultant MS/MS spectra are written to the ms/ms directory in separate files. To merge all the files, run this:\n\n```{r install, eval = FALSE}\nmergeMGF(dir=\"jurkat/result/msms\",name=\"Jurkat.frac1.pClean.mgf\")\n```\n\n**3.3.4  Visualization of ions-network**\n\nOptionally, if you want to visualize the construction of ions-network graph, and annotate ions with corresponding peptide fragment, you need do a database search in advance. At present, pClean supports parsing identification results from dat and mzid. The provided sample mzid file was generated using MSGF+ software. To fulfill this purpose, please use the following commands:\n\n```{r install, eval = FALSE}\nmgffile<-system.file(\"extdata/\", \"tte.frac1.mgf\",package=\"pClean\")\ndatfile<-system.file(\"extdata/\", \"tte.frac1.asc.dat\",package=\"pClean\")\npCleanGear(mgf=mgffile,outdir=\"tte/result\",mem=2,cpu=0,mionFilter=TRUE,labelMethod=\"iTRAQ8plex\",repFilter=TRUE,labelFilter=TRUE,low=TRUE,high=TRUE,isoReduction=TRUE,chargeDeconv=TRUE,largerThanPrecursor=TRUE,ionsMerge=TRUE,network=TRUE,plot=TRUE,idres=datfile,debug=FALSE)\nmergeMGF(dir=\"tte/result/msms\",name=\"tte.frac1.pClean.mgf\")\n\nmzidfile<-system.file(\"extdata/\", \"tte.frac1.mzid\",package=\"pClean\")\npCleanGear(mgf=mgffile,outdir=\"tte/result\",mem=2,cpu=0,mionFilter=TRUE,labelMethod=\"iTRAQ8plex\",repFilter=TRUE,labelFilter=TRUE,low=TRUE,high=TRUE,isoReduction=TRUE,chargeDeconv=TRUE,largerThanPrecursor=TRUE,ionsMerge=TRUE,network=TRUE,plot=TRUE,idres=mzidfile,debug=FALSE)\nmergeMGF(dir=\"tte/result/msms\",name=\"tte.frac1.pClean.mgf\")\n```\n\nOnce the progress completed, pClean creates a png directory and a gml directory. You can match a png or gml file to the corresponding MS/MS spectrum with the help of `spectrumInfor.txt (under the directory: tte/result/)`.\n\n**3.3.5  Other filters**\n\nAlternatively, pClean implements two reported filters in it, Top10 filter, a traditional intensity-based preprocessing method, and CRF filter (reference), a chemical rules-based approach but unavailable currently. \n\nTo use Top10 filter, run the following command:\n\nTo use CRF filter, run the following command:\n\n"
      },
      "source": "https://raw.githubusercontent.com/AimeeD90/pClean_release/master/README.md",
      "technique": "header_analysis"
    }
  ]
}