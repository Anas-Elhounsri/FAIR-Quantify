{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xmuyulab/samtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-17T05:00:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-16T23:03:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tools (written in C using htslib) for manipulating next-generation sequencing data. This is not the official repository for samtools."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9721299749297123,
      "result": {
        "original_header": "Building samtools",
        "type": "Text_excerpt",
        "value": "The typical simple case of building Samtools using the HTSlib bundled within\nthis Samtools release tarball is done as follows: \nRather than running-in-place like that, the next simplest typical case is to\ninstall samtools etc properly into a directory of your choosing.  Building for\ninstallation using the HTSlib bundled within this Samtools release tarball,\nand building the various HTSlib utilities such as bgzip is done as follows: \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8967321188844892,
      "result": {
        "original_header": "Using an optimised zlib library",
        "type": "Text_excerpt",
        "value": "Samtools has been minimally tested against both the Intel-optimised and\nCloudFlare-optimised zlibs and shown to work. \nIt is recommended that you perform your own rigorous tests for an entire\npipeline if you wish to switch to one of the optimised zlib implementations.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.995685484463427,
      "result": {
        "type": "Text_excerpt",
        "value": "Samtools implements various utilities for post-processing alignments in the\nSAM, BAM, and CRAM formats, including indexing, variant calling (in conjunction\nwith bcftools), and a simple alignment viewer. \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xmuyulab/samtools/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xmuyulab/samtools/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xmuyulab/samtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Building samtools"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/samtools/master/version.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9997953573859816,
      "result": {
        "original_header": "Building samtools",
        "type": "Text_excerpt",
        "value": "    cd .../samtools-1.9 # Within the unpacked release directory\n    ./configure\n    make \nYou may wish to copy the resulting samtools executable into somewhere on your\n$PATH, or run it where it is. \nRather than running-in-place like that, the next simplest typical case is to\ninstall samtools etc properly into a directory of your choosing.  Building for\ninstallation using the HTSlib bundled within this Samtools release tarball,\nand building the various HTSlib utilities such as bgzip is done as follows: \n    cd .../samtools-1.9 # Within the unpacked release directory\n    ./configure --prefix=/path/to/location\n    make all all-htslib\n    make install install-htslib \nYou will likely wish to add /path/to/location/bin to your $PATH. \nSee INSTALL for full building and installation instructions and details.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976255231435913,
      "result": {
        "original_header": "Using an optimised zlib library",
        "type": "Text_excerpt",
        "value": "    https://github.com/jtkukunas/zlib     # Intel\n    https://github.com/cloudflare/zlib    # CloudFlare \nNeither Samtools nor HTSlib needs recompiling to use these optimised libraries,\nbut the LD_LIBRARY_PATH environment variable should be set to a directory\ncontaining the libz.so.1 file. \n    http://www.htslib.org/benchmarks/zlib.html \n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xmuyulab/samtools/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT/Expat License\n\nCopyright (C) 2008-2018 Genome Research Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n\n[The use of a range of years within a copyright notice in this distribution\nshould be interpreted as being equivalent to a list of years including the\nfirst and last year specified and all consecutive years between them.\n\nFor example, a copyright notice that reads \"Copyright (C) 2005, 2007-2009,\n2011-2012\" should be interpreted as being identical to a notice that reads\n\"Copyright (C) 2005, 2007, 2008, 2009, 2011, 2012\" and a copyright notice\nthat reads \"Copyright (C) 2005-2012\" should be interpreted as being identical\nto a notice that reads \"Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010,\n2011, 2012\".]\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "samtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "xmuyulab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1112663,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 292877,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 44101,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lua",
        "size": 28217,
        "type": "Programming_language",
        "value": "Lua"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 21603,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 16196,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 9223,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7888,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 4028,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 1190,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:03:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Building with HTSlib plug-in support",
        "type": "Text_excerpt",
        "value": "Enabling plug-ins causes some parts of HTSlib to be built as separate modules.\nThere are two advantages to this:\n\n * The static library libhts.a has fewer dependencies, which makes linking\n   third-party code against it easier.\n\n * It is possible to build extra plug-ins in addition to the ones that are\n   bundled with HTSlib.  For example, the hts-plugins repository\n   <https://github.com/samtools/htslib-plugins> includes a module that\n   allows direct access to files stored in an iRODS data management\n   repository (see <https://irods.org/>).\n\nTo build with plug-ins, you need to use the --enable-plugins configure option\nas follows:\n\n    cd .../samtools-1.9 # Within the unpacked release directory\n    ./configure --enable-plugins --prefix=/path/to/location\n    make all all-htslib\n    make install install-htslib\n\nThere are two other configure options that affect plug-ins.  These are:\n   --with-plugin-dir=DIR     plug-in installation location\n   --with-plugin-path=PATH   default plug-in search path\n\nThe default for --with-plugin-dir is <prefix>/libexec/htslib.\n--with-plugin-path sets the built-in search path used to find the plug-ins.  By\ndefault this is the directory set by the --with-plugin-dir option.  Multiple\ndirectories should be separated by colons.\n\nSetting --with-plugin-path is useful if you want to run directly from\nthe source distribution instead of installing the package.  In that case\nyou can use:\n\n    cd .../samtools-1.9 # Within the unpacked release directory\n    ./configure --enable-plugins --with-plugin-path=$PWD/htslib-1.9\n    make all all-htslib\n\nIt is possible to override the built-in search path using the HTS_PATH\nenvironment variable.  Directories should be separated by colons.  To\ninclude the built-in path, add an empty entry to HTS_PATH:\n\n   export HTS_PATH=:/my/path            # Search built-in path first\n   export HTS_PATH=/my/path:            # Search built-in path last\n   export HTS_PATH=/my/path1::/my/path2 # Search built-in path between others\n"
      },
      "source": "https://raw.githubusercontent.com/xmuyulab/samtools/master/README",
      "technique": "header_analysis"
    }
  ]
}