{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "We thank Dr. Gerard Martinez (Acellera Ltd., London, United Kingdom) for his help and guidance during benchmarking of the KDEEP web server. We thank Dr. Daniel Fisher (The Institute of Molecular Genetics of Montpellier (IGMM), Montpellier, France) for helping us clarifying the wrong binding kinetics data records found in the PDBbind database (for the PDB entries 4EOR and 4EOK). We thank Mehdi Kosaca and Eda Samiloglu for their help in searching and annotating the experimental techniques used for determination of the kinetic parameters.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSB-KaracaLab/BINDKIN"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "ezgi.karaca@ibg.edu.tr\r\n\r\nerguven.mehmet.00@gmail.com\r\n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-28T08:08:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-03T01:51:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A structural benchmark to measure point mutations\u2019 impact on kinase-ligand  interactions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9774044764269992,
      "result": {
        "original_header": "Features of the database",
        "type": "Text_excerpt",
        "value": "A structural benchmark to measure the impact of point mutations on protein kinase-ligand  interactions.\r\n\r\nTo construct the BINDKIN (effect of point mutations on the BINDing affinity of protein KINase:ligand complexes) benchmark, \r\nwe performed a thorough search in the Protein Data Bank (PDB) (Berman et al., 2000) (rcsb.org) and obtained the list of \r\navailable wild type and mutant kinase:ligand complexes. The resulting list was curated by the following criteria:\r\n\r\n- For each mutant complex, there has to be a wild type complex, containing the same protein and the ligand.\r\n\r\n- The wild type and mutant complexes should be determined in the same study (i.e. they should come from the same research paper).\r\n\r\n- For each complex, there has to be an experimentally determined binding affinity available in the form of IC50, Kd, or Ki.\r\n\r\n- The ligand has to be a reversible (non-covalent) ligand.\r\n\r\nThe experimental binding kinetics data were acquired from PDBbind (Cheng et al., 2009; Wang et al., 2004, 2005) (pdbbind-cn.org/index.asp), Binding DB (Gilson et al., 2016) (bindingdb.org/bind/index.jsp), and Binding MOAD (Ahmed et al., 2015; Smith et al., 2019) (bindingmoad.org/Search/advancesearch) databases.\r\n\t\r\nThese criteria have left us with 23 wild type-mutant complex pairs, making up the BINDKIN benchmark. BINDKIN is constituted of eight EGFR, three Abl, three Mps1, three Src, two Cdk2, one ALK, one FGFR, one Kit, and one PKA kinase cases. The 23 mutant cases in the BINDKIN benchmark include 17 single, three double, two triple, and one quintuple point mutants. These complexes present a total of 34 point mutations, distributed across 15 unique positions within or in the vicinity of the ATP binding pocket.\r\n\r\nIf you use (part of) this work, please cite:\r\n```\r\nMehmet Erguven, T\u00fclay Karakulak, M. Kasim Diril, and Ezgi Karaca (2021)\r\nHow Far Are We from the Rapid Prediction of Drug Resistance Arising Due to Kinase Mutations? \r\nACS Omega, 6, 2, 1254\u20131265\r\nhttps://doi.org/10.1021/acsomega.0c04672\r\n```\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957282019771518,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "Protein kinase point mutations are of great clinical and scientific importance. Mutations occurring within the active site of protein kinases have been subjects of drug discovery and protein engineering studies. Due to technical and economical limitations, rapid experimental exploration of the impact of such mutations remains to be a challenge. This underscores the importance of kinase-ligand binding affinity prediction tools that are poised to measure the efficacy of inhibitors in the presence of kinase mutations.\r\n\r\nTo this end, here, we compare the performances of six web-based scoring tools (DSX-ONLINE, KDEEP, HADDOCK2.2, PDBePISA, Pose&Rank, and PRODIGY-LIG) in assessing the impact of point mutations on protein kinase-ligand interactions. This assessment is carried out on a new structure-based benchmark we compiled, named BNIDKIN.\r\n\r\nWe aim to aid experimentalists by highlighting accurate binding affinity prediction options. On the other hand, BINDKIN will serve the community as a means to improve the protein-ligand binding affinity prediction tools.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9274639711276474,
      "result": {
        "original_header": "The directory structure of the repository",
        "type": "Text_excerpt",
        "value": "Each folder that ends with the string \"`_structures`\" contains the subdirectories in which the input coordinate files are located.\r\n\r\n- ***\"input_crystal_structures\"*:** The coordinate files obtained from the PDB are located in here.\r\n\r\n  - *\"complexes_cleaned_pdb_format\"***:** Contains the preprocessed complex coordinate files (e.g.: the buffer aditives, ions, solvent etc. were removed).\r\n  \r\n  - *\"complexes_raw_pdb_format\"***:** Contains the unedited complex coordinate files that are obtained from the PDB (e.g.: the buffer aditives, ions, solvent etc. were not removed).\r\n  \r\n  - *\"ligands_mol2_format\"***:** Contains the ligand coordinate files in \".mol2\" format.\r\n  \r\n  - *\"ligands_pdb_format\"***:** Contains the ligand coordinate files in \".pdb\" format.\r\n  \r\n  - *\"ligands_sdf_format\"***:** Contains the ligand coordinate files in \".sdf\" fomrat.\r\n  \r\n  - *\"proteins_pdb_format\"***:** Contains the protein coordinate files in \".pdb\" format.\r\n\r\n- ***\"input_model_structures\"*:** The coordinate files of the model structures are located in here.\r\n\r\n  - *\"complexes_raw_pdb_format\"***:** Contains the unedited complex coordinate files that are obtained from HADDOCK2.2 refinement interface.\r\n  \r\n  - *\"ligands_mol2_format\"***:** Contains the ligand coordinate files in \".mol2\" format.\r\n  \r\n  - *\"ligands_pdb_format\"***:** Contains the ligand coordinate files in \".pdb\" format.\r\n  \r\n  - *\"ligands_sdf_format\"***:** Contains the ligand coordinate files in \".sdf\" fomrat.\r\n  \r\n  - *\"proteins_pdb_format\"***:** Contains the protein coordinate files in \".pdb\" format.\r\n  \r\n  - *\"zz_homology_modeling\"***:** Contains the subdirectories related to homology modeling.\r\n  \r\n    - *\"1_FASTA_full_length\"***:** Contains the full-length sequences of the Ki-cases.\r\n    \r\n    - *\"2_FASTA_kinase_domains_fused\"***:** Contains the truncated sequences of the Ki-cases that are constituted of the kinase domains.\r\n    \r\n    - *\"3_I_TASSER_outputs\"***:** Contains the complete homology modeling result folders that were downloaded from the I-TASSER web server.\r\n    \r\n    - *\"4_I_TASSER_selected_models\"***:** Contains the model structures with the highest C-scores. For each case, a single structure was selected.\r\n    \r\n    - *\"5_HADDOCK_water_refinement\"***:** I-TASSER discards small molecules when generating the model structures. Consequently, we initially generated the crude model complexes. First, the model protein moieties were superposed to their respective co-crystal structures. Then, the crystal structure ligand coordinates were isolated together with the model structure protein coordinates. These crude complexes were subjected to water refinement by using the HADDOCK2.2 web server. The complete HADDOCK2.2 run results and the associated files are located in this directory.\r\n    \r\n- ***\"scripts_etc\"*:** The scripts that are used for result analyses and data visualization are located in the subdirectories under this directory.\r\n\r\n  - *\"C_shell_scrpits_for_HADDOCK\"***:** The C shell scripts used for HADDOCK2.2 result analyses and input structure manipulation are located in here. HADDOCK calculates the intermolecular interaction energy using its scoring function \"_total score_\", which is composed of van der Waals, electrostatic, and desolvation energy. The buried surface area of the complexes are also calculated. Each coordinate file generated by HADDOCK starts with a header section, in which the above mentioned scores are embedded. The scripts in this directory allows easy extraction of the best scores (highest predicted affinities) from multiple HADDOCK run outputs, by ranking the different types of scores separately.\r\n\r\n  - *\"R_scripts_dataframes_plots\"***:** The R scripts and dataframes used in R and the resultant visual data (plots) used in the BINDKIN paper. The folder names correspond to the figure number in the BINDKIN paper (e.g: the folder named \"figure_5\" contains the documents associated with the fifth figure in the manuscript). The subdirectories located in here are _figure_3b_, _figure_3c_, _figure_4_, _figure_5_, _figure_6a_, _figure_S2_, _figure_S3_, and _figure_S4a_. The file name of each R script ends with the string \"`_script`\". The file name of each dataframe ends with the string \"`_dataframe`\". The file name of each plot ends with the string \"`_plot`\".\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8781352769280943,
      "result": {
        "original_header": "HADDOCK result analysis",
        "type": "Text_excerpt",
        "value": "\r\nThe scripts in the directory `BINDKIN\\scripts_etc\\C_shell_scripts_for_HADDOCK` and the commands given below works in the Unix environment. For Windows, Unix terminal can be installed via Windows Store application.\r\n\r\nThe scripts were written in a way that they will accept the directory names that start only with the string \"`BINDKIN_`\". To edit the names of multiple directories, the command named \"_rename_\" can be used. Using the command given below, \"_rename_\" is installed via terminal:\r\n```\r\nsudo apt install rename\r\n```\r\n\r\nThe scripts were written in C shell language. Consequently, they should be executed using C shell. Using the command given below, C shell is installed in terminal:\r\nBASH2*\r\n\r\nThe step-by-step guideline for preparation and analysis are explained below:\r\n\r\n**1)** Extract the downloaded HADDOCK runs into an empty directory.\r\n\r\n**2)** In terminal, go to the main directory in which the extracted HADDOCK run directories are located. In case of Windows, open the directory of interest using File Explorer. Then type `bash` in the directory path title bar in the File Explorer window.\r\n\r\n**3)** Use the command given below to insert the string \"`BINDKIN_`\" at the beginning of the each directory name:\r\nBASH3*\r\n\r\n**4)** Copy all of scripts located in the \"_HADDOCK_output_analysis_\" directory of the repository, to your local directory where all of the uncompressed and renamed HADDOCK runs are located.\r\n\r\n**5)** Use the command given below to make the script files executable:\r\nBASH4*\r\n\r\n**6)** Execute the \"`script_get_*`\", \"`script_sort_*`\", and \"`script_clean_*`\" scripts in the given order. For example:\r\nBASH5*\r\nIn this example, you will obtain the list of maximum buried surface area (`_BSA`) scores for each docking run. Execute the complete set of the script trio (\"_get_\", \"_sort_\", and \"_clean_\") for one given score type, and only then proceed with executing another script trio associated with another score type. In the script file names `_vdW` stands for van der Waals, `_elec` stands for electrostatics, `total_01` and `total_02` stand for total score.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9584997807892232,
      "result": {
        "original_header": "The result files and their respective contents",
        "type": "Text_excerpt",
        "value": "- ***\"BINDKIN_direct_assessment_crystal_structures.csv\":*** The raw records of the experimental and predicted binding affinity data. The data was obtained by submission of the crystal structures to the web servers.\r\n\r\n- ***\"BINDKIN_delta_assessment_crystal_structures.csv\":*** The normalized experimental and predicted binding affinity data for the crystal structures. The data was obtained by subtraction of the experimental and predicted values of the wild-type cases from those of their mutant partners.\r\n\r\n- ***\"BINDKIN_direct_assessment_model_structures.csv\":*** The raw records of the experimental and predicted binding affinity data. The data was obtained by submission of the water-refined homology model structures to the web servers.\r\n\r\n- ***\"BINDKIN_delta_assessment_model_structures.csv\":*** The normalized experimental and predicted binding affinity data for the HADDOCK-refined homology model structures. The data was obtained by subtraction of the experimental and predicted values of wild-type cases from the mutant ones.\r\n\r\n- ***\"BINDKIN_pharmacophore.csv\":*** The records of the pharmacophoric features of the ligands in BINDKIN.\r\n\r\n- ***\"BINDKIN_information.csv\":*** The records of other information about the pdb files, such as the mutation positions, multiple conformations, HETATM content etc.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSB-KaracaLab/BINDKIN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSB-KaracaLab/BINDKIN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSB-KaracaLab/BINDKIN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999955305015,
      "result": {
        "original_header": "Clone the repository",
        "type": "Text_excerpt",
        "value": "```\r\ngit clone https://github.com/CSB-KaracaLab/BINDKIN\r\n```\r\nor, if you do not use git:\r\nBASH2*\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "HADDOCK result analysis",
        "type": "Text_excerpt",
        "value": "\r\nThe scripts in the directory `BINDKIN\\scripts_etc\\C_shell_scripts_for_HADDOCK` and the commands given below works in the Unix environment. For Windows, Unix terminal can be installed via Windows Store application.\r\n\r\nThe scripts were written in a way that they will accept the directory names that start only with the string \"`BINDKIN_`\". To edit the names of multiple directories, the command named \"_rename_\" can be used. Using the command given below, \"_rename_\" is installed via terminal:\r\n```\r\nsudo apt install rename\r\n```\r\n\r\nThe scripts were written in C shell language. Consequently, they should be executed using C shell. Using the command given below, C shell is installed in terminal:\r\nBASH2*\r\n\r\nThe step-by-step guideline for preparation and analysis are explained below:\r\n\r\n**1)** Extract the downloaded HADDOCK runs into an empty directory.\r\n\r\n**2)** In terminal, go to the main directory in which the extracted HADDOCK run directories are located. In case of Windows, open the directory of interest using File Explorer. Then type `bash` in the directory path title bar in the File Explorer window.\r\n\r\n**3)** Use the command given below to insert the string \"`BINDKIN_`\" at the beginning of the each directory name:\r\nBASH3*\r\n\r\n**4)** Copy all of scripts located in the \"_HADDOCK_output_analysis_\" directory of the repository, to your local directory where all of the uncompressed and renamed HADDOCK runs are located.\r\n\r\n**5)** Use the command given below to make the script files executable:\r\nBASH4*\r\n\r\n**6)** Execute the \"`script_get_*`\", \"`script_sort_*`\", and \"`script_clean_*`\" scripts in the given order. For example:\r\nBASH5*\r\nIn this example, you will obtain the list of maximum buried surface area (`_BSA`) scores for each docking run. Execute the complete set of the script trio (\"_get_\", \"_sort_\", and \"_clean_\") for one given score type, and only then proceed with executing another script trio associated with another score type. In the script file names `_vdW` stands for van der Waals, `_elec` stands for electrostatics, `total_01` and `total_02` stand for total score.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSB-KaracaLab/BINDKIN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/logo.png"
      },
      "source": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BINDKIN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "CSB-KaracaLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1208687,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 72136,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7868,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSB-KaracaLab/BINDKIN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:35:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}