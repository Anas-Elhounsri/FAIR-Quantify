{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RiversDong/AcrDetector"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-02T01:02:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-25T12:54:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Determine Acrs in genome"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9027839565398298,
      "result": {
        "original_header": "Notice",
        "type": "Text_excerpt",
        "value": "    The script runs on Linux system\n    Do not change and delete any files in AcrDetector\n \n"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8919728255153625,
      "result": {
        "original_header": "output",
        "type": "Text_excerpt",
        "value": "    After running python AcrDetector.py -i ./examples/GCF_001188875.1.fna -o re\n    Four files prefixed with \"re\" are formed\n        re, re_domain, re_protein and re_tbl\n    re: potential Acrs\n    re_domain and re_tbl: hth domain. hmmscan results in different formats\n    re_protein: translated protein from CDS region \n    Codirection\n\t1: target gene and one of its neighbor gene are on the same strand\n\t0: target gene and both of its neighbors aren't in the same strand \n    LNL: left neighbor length of target gene\n    TL: target gene length\n    RNL: right neighbor length of target gene \n    codon distance: codon distance against whole genome\n    LDev: codon usage deviation of left neighbor gene compared with whole genome\n    TDev: codon usage deviation of target gene compared with whole genome\n    RDev: codon usage deviation of right neighbor gene compared with whole genome \n    HTH:\n        \"1\": there is an HTH domain within 3 downstream genes of target gene based on the HTH Pfam_V32\n        \"0\": No HTH domain within 3 downstream genes of target gene based on the HTH Pfam_V32 \n"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RiversDong/AcrDetector/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RiversDong/AcrDetector/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RiversDong/AcrDetector"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Notice"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8158747357145631,
      "result": {
        "original_header": "output",
        "type": "Text_excerpt",
        "value": "    Score:\n        Probability estimation\n\t\n    If you find bugs, please let me know chuand@whu.edu.cn\n \n"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RiversDong/AcrDetector/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AcrDetector"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "RiversDong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10005,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "type": "Text_excerpt",
        "value": "    HMMER 3.3\n    python 3.7\n    pandas\n    numpy\n    joblib\n    biopython\n    scikit-learn\n    \n    Please install HMMER and add it to your PATH\n    Please install packages listed above before using this script\n"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "type": "Text_excerpt",
        "value": "    if you have add the script to your PATH, you can run it like\n    python AcrDetector.py -i [or --infile] <infile> -o [or --output] <output>\n    if the script doesn't in PATH, run it using the path of AcrDetector.py plus\n    AcrDetector.py -i [or --infile] <infile> -o [or --output] <output>\n    \n    -i or --infile: specify the input file\n    <infile>: file storing all CDS of whole genome in a fasta format. See the format in ./examples path\n    -o or --outfile: specify the output file\n    <output>: output filename\n    \n    For example\n    python AcrDetector.py -i ./examples/GCF_001188875.1.fna -o re\n    This command means searching Acrs in GCF_001188875.1.fna and \n    The results will be stored in re*\n"
      },
      "source": "https://raw.githubusercontent.com/RiversDong/AcrDetector/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:55:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}