{
  "application_domain": [
    {
      "confidence": 0.9581492691344861,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/violet-sto/TGSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-16T07:43:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-22T15:43:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyTorch implementation of \"TGSA: Protein-Protein Association-Based Twin Graph Neural Networks for Drug Response Prediction with Similarity Augmentation\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9271340548817032,
      "result": {
        "original_header": "TGSA",
        "type": "Text_excerpt",
        "value": "TGSA: Protein-Protein Association-Based Twin Graph Neural Networks for Drug Response Prediction with Similarity Augmentation\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997169811300224,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Here we provide an implementation of Twin Graph neural networks with Similarity Augmentation (TGSA) in Pytorch and PyTorch Geometric. The repository is organised as follows:\r\nCancel changes\r\n- `data/` contains the necessary dataset files;\r\n- `models/` contains the implementation of TGDRP and SA;\r\n- `TGDRP_weights` contains the trained weights of TGDRP;\r\n- `utils/` contains the necessary processing subroutines;\r\n- `preprocess_gene.py` preprocessing for genetic profiles;\r\n- `smiles2graph.py` construct molecular graphs based on SMILES;\r\n- `main.py main` function for TGDRP (train or test);\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951212059154397,
      "result": {
        "original_header": "Step1: Data Preprocessing",
        "type": "Text_excerpt",
        "value": "- `data/CellLines_DepMap/CCLE_580_18281/census_706/` - Raw genetic profiles from CCLE and the processed features. You can also preprocess your own data with `preprocess_gene.py`.\r\n\r\n- `data/similarity_augment/` - Directory `edge` contains edges of heterogeneous graphs; directory `dict` contains necessary data and dictionaries for mapping between drug data or cell line data. \r\n\r\n- `data/Drugs/drug_smiles.csv` - SMILES for 170 drugs. You can generate pyg graph object with `smiles2graph.py`\r\n\r\n- `data/PANCANCER_IC_82833_580_170.csv` - There are 82833 ln(IC50) values across 580 cel lines and 170 drugs.\r\n\r\n- `data/9606.protein.links.detailed.v11.0.txt` and `data/9606.protein.info.v11.0.txt` - Extracted from https://stringdb-static.org/download/protein.links.detailed.v11.0/9606.protein.links.detailed.v11.0.txt.gz\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8630728356719796,
      "result": {
        "original_header": "Step3: Similarity Augment",
        "type": "Text_excerpt",
        "value": "- First, you can run `heterogeneous_graph.py` to generate edges of heterogeneous graphs.\r\n\r\n- Then, you can run `main_SA.py` to generate node features of heterogeneous graphs using two GNNs from TGDRP/TGDRP_pre and to fine-tune sequentially the remained parameters from TGDRP/TGDRP_pre.  To be specific, you can use the instruction `python main_SA.py --mode \"train\"/\"test\" --pretrain 0/1` to fine-tune TGDRP/TGDRP_pre or to test fine-tuned SA/SA_pre.  \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/violet-sto/TGSA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/violet-sto/TGSA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "violet-sto/TGSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TGSA"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9983550197135451,
      "result": {
        "original_header": "Step2: Model Training/Testing",
        "type": "Text_excerpt",
        "value": "- You can run `python main.py --mode \"train\"` to train TGDRP or run `python main.py --mode \"test\"` to test trained TGDRP.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.806707394464654,
      "result": {
        "original_header": "Step1: Data Preprocessing",
        "type": "Text_excerpt",
        "value": "- `data/CellLines_DepMap/CCLE_580_18281/census_706/` - Raw genetic profiles from CCLE and the processed features. You can also preprocess your own data with `preprocess_gene.py`.\r\n\r\n- `data/similarity_augment/` - Directory `edge` contains edges of heterogeneous graphs; directory `dict` contains necessary data and dictionaries for mapping between drug data or cell line data. \r\n\r\n- `data/Drugs/drug_smiles.csv` - SMILES for 170 drugs. You can generate pyg graph object with `smiles2graph.py`\r\n\r\n- `data/PANCANCER_IC_82833_580_170.csv` - There are 82833 ln(IC50) values across 580 cel lines and 170 drugs.\r\n\r\n- `data/9606.protein.links.detailed.v11.0.txt` and `data/9606.protein.info.v11.0.txt` - Extracted from https://stringdb-static.org/download/protein.links.detailed.v11.0/9606.protein.links.detailed.v11.0.txt.gz\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9706085385197203,
      "result": {
        "original_header": "Step2: Model Training/Testing",
        "type": "Text_excerpt",
        "value": "- You can run `python main.py --mode \"train\"` to train TGDRP or run `python main.py --mode \"test\"` to test trained TGDRP.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8368136155525477,
      "result": {
        "original_header": "Step3: Similarity Augment",
        "type": "Text_excerpt",
        "value": "- First, you can run `heterogeneous_graph.py` to generate edges of heterogeneous graphs.\r\n\r\n- Then, you can run `main_SA.py` to generate node features of heterogeneous graphs using two GNNs from TGDRP/TGDRP_pre and to fine-tune sequentially the remained parameters from TGDRP/TGDRP_pre.  To be specific, you can use the instruction `python main_SA.py --mode \"train\"/\"test\" --pretrain 0/1` to fine-tune TGDRP/TGDRP_pre or to test fine-tuned SA/SA_pre.  \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/violet-sto/TGSA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 YH-Zhu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "MIT\r\n"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TGSA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "violet-sto"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 68250,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Overview"
        ],
        "type": "Text_excerpt",
        "value": "- Please install the environment using anaconda3;  \r\n  conda create -n TGSA python=3.6\r\n- Install the necessary packages.  \r\n  conda install -c rdkit rdkit  \r\n  pip install fitlog   \r\n  pip install torch (1.6.0)   \r\n  pip install torch-cluster (1.5.9) (https://pytorch-geometric.com/whl/)  \r\n  pip install torch-scatter (2.0.6) (https://pytorch-geometric.com/whl/)   \r\n  pip install torch-sparse (0.6.9) (https://pytorch-geometric.com/whl/)   \r\n  pip install torch-spline-conv (1.2.1) (https://pytorch-geometric.com/whl/)   \r\n  pip install torch-geometric (1.6.1)  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/violet-sto/TGSA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:30:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ]
}