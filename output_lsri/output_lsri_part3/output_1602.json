{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite both the article from preferred-citation and the software itself.\"\nauthors:\n  - family-names: Strauss\n    given-names: Maximilian T.\n  - family-names: Bludau\n    given-names: Isabell\n  - family-names: Zeng\n    given-names: Wen-Feng\n  - family-names: Voytik\n    given-names: Eugenia\n  - family-names: Ammar\n    given-names: Constantin\n  - family-names: Schessner\n    given-names: Julia P.\n  - family-names: Ilango\n    given-names: Rajesh\n  - family-names: Gill\n    given-names: Michelle\n  - family-names: Meier\n    given-names: Florian\n  - family-names: Willems\n    given-names: Sander\n  - family-names: Mann\n    given-names: Matthias\ntitle: \"AlphaPept: a modern and open framework for MS-based proteomics\"\nversion: 15.1\ndate-released: 2024-03-09\ndoi: \"10.1038/s41467-024-46485-4\"\nrepository-code: [Your repository link here]\nlicense: [Your license here]\npreferred-citation:\n  authors:\n    - family-names: Strauss\n      given-names: Maximilian T.\n    - family-names: Bludau\n      given-names: Isabell\n    - family-names: Zeng\n      given-names: Wen-Feng\n    - family-names: Voytik\n      given-names: Eugenia\n    - family-names: Ammar\n      given-names: Constantin\n    - family-names: Schessner\n      given-names: Julia P.\n    - family-names: Ilango\n      given-names: Rajesh\n    - family-names: Gill\n      given-names: Michelle\n    - family-names: Meier\n      given-names: Florian\n    - family-names: Willems\n      given-names: Sander\n    - family-names: Mann\n      given-names: Matthias\n  title: \"AlphaPept: a modern and open framework for MS-based proteomics\"\n  type: article\n  year: 2024\n  doi: \"10.1038/s41467-024-46485-4\"\n  journal: \"Nature Communications\"\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite us",
        "parent_header": [
          "AlphaPept"
        ],
        "type": "Text_excerpt",
        "value": "If you use this project in your research, please cite:\n\n> Strauss, M.T., Bludau, I., Zeng, WF. et al.\u00a0AlphaPept: a modern and\n> open framework for MS-based proteomics. Nat Commun 15, 2168 (2024).\n> https://doi.org/10.1038/s41467-024-46485-4\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphapept"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "AlphaPept"
        ],
        "type": "Text_excerpt",
        "value": "If you have a feature request or a bug report, please post it either as\nan idea in the\n[discussions](https://github.com/MannLabs/alphapept/discussions) or as\nan issue on the [GitHub issue\ntracker](https://github.com/MannLabs/alphapept/issues). Upvoting\nfeatures in the discussions page will help to prioritize what to\nimplement next. If you want to contribute, put a PR for it. You can find\nmore guidelines for contributing and how to get started\n[here](https://mannlabs.github.io/alphapept/contributing.html). We will\ngladly guide you through the codebase and credit you accordingly.\nAdditionally, you can check out the Projects page on GitHub. You can\nalso contact us via opensource@alphapept.com.\n\nIf you like the project, consider starring it!\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-03T13:48:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-16T20:51:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A modular, python-based framework for mass spectrometry. Powered by nbdev."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9670635809804523,
      "result": {
        "original_header": "AlphaPept",
        "type": "Text_excerpt",
        "value": "**AlphaPept: a modern and open framework for MS-based proteomics** \n- [alphatims](https://github.com/MannLabs/alphatims): Fast access to\n  TimsTOF data.\n- [alphamap](https://github.com/MannLabs/alphamap): Peptide level MS\n  data exploration.\n- [alphapeptdeep](https://github.com/MannLabs/alphapeptdeep): Predicting\n  properties from peptides.\n- [alphapeptstats](https://github.com/MannLabs/alphapeptstats):\n  Downstream analysis of MS data\n- [alphaviz](https://github.com/MannLabs/alphaviz): Vizualization of MS\n  data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9331863972449246,
      "result": {
        "original_header": "Windows Quickstart",
        "type": "Text_excerpt",
        "value": "1.  Download the latest installer\n    [here](https://github.com/MannLabs/alphapept/releases/latest),\n    install and click the shortcut on the desktop. A browser window with\n    the AlphaPept interface should open. In the case of Windows Firewall\n    asking for network access for AlphaPept, please allow.\n2.  In the `New Experiment`, select a folder with raw files and FASTA\n    files.\n3.  Specify additional settings such as modifications with `Settings`.\n4.  Click `Start` and run the analysis. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.978401420833209,
      "result": {
        "original_header": "Current functionality",
        "type": "Text_excerpt",
        "value": "Linux and macOS should, in principle, work but are not heavily tested\nand might require additional work to set up (see detailed instructions\nbelow). To read Thermo files, we use Mono, which can be used on Mac and\nLinux. For Bruker files, we can use Linux but not yet macOS.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9062068660969387,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "It is possible to run AlphaPept in a docker container. For this, we\nprovide two Dockerfiles: `Dockerfile_thermo` and `Dockerfile_bruker`,\ndepending on which filetypes you want to analyse. They are split because\nof drastically different requirements. \nTo run, navigate to the AlphaPept repository and rename the dockerfile\nyou want to use, e.g.\u00a0`Dockerfile_thermo` to `Dockerfile`. \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8470049654506967,
      "result": {
        "original_header": "Docker Troubleshooting on M1-Mac",
        "type": "Text_excerpt",
        "value": "- The Thermo dockerfile was tested on an M1-Mac. Resources were set to\n  18GB RAM and 2 CPUs, 200 GB disk\n- It was possible to build the Bruker dockerfile with the platform tag\n  `--platform linux/amd64`. However, it was very slow and the Bruker\n  file is not recommended for an M1-Mac. Windows worked nicely.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972691227857786,
      "result": {
        "original_header": "Version Performance",
        "type": "Text_excerpt",
        "value": "An overview of the performance of different versions can be found\n[here](https://charts.mongodb.com/charts-alphapept-itfxv/public/dashboards/5f671dcf-bcd6-4d90-8494-8c7f724b727b).\nWe re-run multiple tests on datasets for different versions so that\nusers can assess what changes from version to version. Feel free to\n[suggest](https://github.com/MannLabs/alphapept/discussions) a test set\nin case.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9633085037212957,
      "result": {
        "original_header": "Notebooks",
        "type": "Text_excerpt",
        "value": "Within the notebooks, we try to cover most aspects of a proteomics\nworkflow: \n- Settings: General settings to define a workflow\n- Chem: Chemistry related functions, e.g., for calculating isotope\n  distributions\n- Input / Output: Everything related to importing and exporting and the\n  file formats used\n- FASTA: Generating theoretical databases from FASTA files\n- Feature Finding: How to extract MS1 features for quantification\n- Search: Comparing theoretical databases to experimental spectra and\n  getting Peptide-Spectrum-Matches (PSMs)\n- Score: Scoring PSMs\n- Recalibration: Recalibration of data based on identified peptides\n- Quantification: Functions for quantification, e.g., LFQ\n- Matching: Functions for Match-between-runs\n- Constants: A collection of constants\n- Interface: Code that generates the command-line-interface (CLI) and\n  makes workflow steps callable\n- Performance: Helper functions to speed up code with CPU / GPU\n- Export: Helper functions to make exports compatbile to other Software\n  tools\n- Label: Code for support isobaric label search\n- Display: Code related to displaying in the streamlit gui\n- Additional code: Overview of additional code not covered by the\n  notebooks\n- How to contribute: Contribution guidelines\n- AlphaPept workflow and files: Overview of the worfklow, files and\n  column names\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphapept/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphapept/tree/master/nbs/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional Documentation",
        "parent_header": [
          "AlphaPept"
        ],
        "type": "Text_excerpt",
        "value": "The documentation is automatically built based on the jupyter notebooks\n(nbs/index.ipynb) and can be found\n[here](https://mannlabs.github.io/alphapept/):\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MannLabs/alphapept/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/09_matching.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/09_matching.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/12_performance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/12_performance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/02_io.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/02_io.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/additional_code.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/additional_code.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/07_recalibration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/07_recalibration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/14_display.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/14_display.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/15_label.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/15_label.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/05_search.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/05_search.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/contributing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/contributing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/04_feature_finding.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/04_feature_finding.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/10_constants.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/10_constants.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/03_fasta.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/03_fasta.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/08_quantification.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/08_quantification.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/01_chem.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/01_chem.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/13_export.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/13_export.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/11_interface.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/11_interface.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/06_score.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/06_score.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/proteomics_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/proteomics_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/file_formats.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/file_formats.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/index.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/index.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/00_settings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/nbs/00_settings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/02_systems_check.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/02_systems_check.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/05_dda_library.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/05_dda_library.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/XX_transfer_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/XX_transfer_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/01_test_run.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/01_test_run.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/00_doctest.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/00_doctest.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/04_paramater_screen.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/04_paramater_screen.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/01_test_run_sciex.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/01_test_run_sciex.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/03_lfq_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/03_lfq_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_03_Search.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_03_Search.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_05_A.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_05_A.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_02%20Score%20Benchmarking.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_02%20Score%20Benchmarking.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_04_ML.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_04_ML.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_05_B%20Quant.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_05_B%20Quant.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_06%20Quant.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_06%20Quant.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_02_IO.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_02_IO.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_07_PXD028735.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_07_PXD028735.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_06_200.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_06_200.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_Cloud_Timings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_Cloud_Timings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_01_TOP_N_Test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/SI_01_TOP_N_Test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_03_FF.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/sandbox/Figure_Notebooks/P_03_FF.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 29
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/alphapept/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MannLabs/alphapept"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlphaPept"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://renkulab.io/renku-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/xkFtDff.jpg"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/UO64YPx.jpg"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/SQikLHQ.jpg"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "It is strongly recommended to install AlphaPept in its own\nenvironment. 1. Open the console and create a new conda environment:\n`conda create --name alphapept python=3.8` 2. Activate the environment:\n`conda activate alphapept` 3. Install AlphaPept via pip:\n`pip install \"alphapept[stable,gui-stable]\"`. If you want to use\nAlphaPept as a package without the GUI dependencies and without strict\nversion dependencies, use `pip install alphapept`.\n\nIf AlphaPept is installed correctly, you should be able to import\nAlphaPept as a package within the environment; see below.\n\n------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Linux",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python"
        ],
        "type": "Text_excerpt",
        "value": "1.  Install the build-essentials:\n    `sudo apt-get install build-essential`.\n2.  Install AlphaPept via pip:\n    `pip install \"alphapept[stable,gui-stable]\"`. If you want to use\n    AlphaPept as a package withouth the GUI dependencies and strict\n    version dependencies use `pip install alphapept`.\n3.  Install libgomp.1 with `sudo apt-get install libgomp1`.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mac",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python"
        ],
        "type": "Text_excerpt",
        "value": "1.  Install AlphaPept via pip:\n    `pip install \"alphapept[stable,gui-stable]\"`. If you want to use\n    AlphaPept as a package withouth the GUI dependencies and strict\n    version dependencies use `pip install alphapept`.\n\n##### Bruker Support\n\n> Only supported for preprocessed files.\n\n##### Thermo Support\n\n2.  Install [brew](https://brew.sh) and pkg-config:\n    `brew install pkg-config`\n3.  Install Mono from mono-project website [Mono\n    Mac](https://www.mono-project.com/download/stable/)\n4.  Register the Mono-Path to your system: For macOS Catalina, open the\n    configuration of zsh via the terminal:\n\n- Type in `cd` to navigate to the home directory.\n- Type `nano ~/.zshrc` to open the configuration of the terminal\n- Add the path to your mono installation:\n  `export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/pkgconfig:/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig:$PKG_CONFIG_PATH`.\n  Make sure that the Path matches to your version (Here 6.12.0)\n- Save everything and execute `. ~/.zshrc`\n\n4.  Install pythonnet with `pip install pythonnet>=2.5.2`\n\n------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Developer",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python"
        ],
        "type": "Text_excerpt",
        "value": "1.  Redirect to the folder of choice and clone the repository:\n    `git clone https://github.com/MannLabs/alphapept.git`\n2.  Navigate to the alphapept folder with `cd alphapept` and install the\n    package with `pip install .` (default users) or with\n    `pip install -e .` to enable developers mode. Note that you can use\n    the different requirements here aswell\n    (e.g.\u00a0`pip install \".[gui-stable]\"`)\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional Notes",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "> To access Thermo files, we have integrated\n> [RawFileReader](https://planetorbitrap.com/rawfilereader) into\n> AlphaPept. We rely on [Mono](https://www.mono-project.com/) for\n> Linux/Mac systems.\n\n> To access Bruker files, we rely on the `timsdata`-library. Currently,\n> only Windows is supported. For feature finding, we use the Bruker\n> Feature Finder, which can be found in the `ext` folder of this\n> repository.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Notes for NBDEV",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Additional Notes"
        ],
        "type": "Text_excerpt",
        "value": "- For developing with the notebooks, install the nbdev package (see the\n  development requirements)\n- To facilitate navigating the notebooks, use jupyter notebook\n  extensions. They can be called from a running jupyter instance like\n  so: `http://localhost:8888/nbextensions`. The extensions\n  `collapsible headings` and `toc2` are very beneficial.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows Standalone Installation",
        "parent_header": [
          "AlphaPept",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "For the [windows\ninstallation](https://github.com/MannLabs/alphapept/releases/latest),\nsimply click on the shortcut after installation. The windows\ninstallation also installs the command-line tool so that you can call\nalphapept via `alphapept` in the command line.\n\n![](https://i.imgur.com/SQikLHQ.jpg)\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.99999999951973,
      "result": {
        "original_header": "AlphaPept",
        "type": "Text_excerpt",
        "value": "[![nbdev\nCI](https://github.com/MannLabs/alphapept/actions/workflows/nbdev.yaml/badge.svg?branch=master)](https://github.com/MannLabs/alphapept/actions/workflows/nbdev.yaml)\n[![launch -\nrenku](https://renkulab.io/renku-badge.svg)](https://renkulab.io/projects/renku-stories/alphapept-gui-streamlit)\n[![DOI:10.1038/s41467-024-46485-4](http://img.shields.io/badge/DOI-10.1038/s41467-024-46485-4-B31B1B.svg)](https://doi.org/10.1038/s41467-024-46485-4) \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9602961568042512,
      "result": {
        "original_header": "Windows Quickstart",
        "type": "Text_excerpt",
        "value": "1.  Download the latest installer\n    [here](https://github.com/MannLabs/alphapept/releases/latest),\n    install and click the shortcut on the desktop. A browser window with\n    the AlphaPept interface should open. In the case of Windows Firewall\n    asking for network access for AlphaPept, please allow.\n2.  In the `New Experiment`, select a folder with raw files and FASTA\n    files.\n3.  Specify additional settings such as modifications with `Settings`.\n4.  Click `Start` and run the analysis. \nSee also below for more detailed instructions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9320345819452571,
      "result": {
        "original_header": "Current functionality",
        "type": "Text_excerpt",
        "value": "| Feature         | Implemented    |\n|-----------------|----------------|\n| Type            | DDA            |\n| Filetypes       | Bruker, Thermo |\n| Quantification  | LFQ            |\n| Isobaric labels | None           |\n| Platform        | Windows        | \nLinux and macOS should, in principle, work but are not heavily tested\nand might require additional work to set up (see detailed instructions\nbelow). To read Thermo files, we use Mono, which can be used on Mac and\nLinux. For Bruker files, we can use Linux but not yet macOS.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999992017149626,
      "result": {
        "original_header": "Standalone Windows Installer",
        "type": "Text_excerpt",
        "value": "To use AlphaPept as a stand-alone program for end-users, it can be\ninstalled on Windows machines via a one-click installer. Download the\nlatest version\n[here](https://github.com/MannLabs/alphapept/releases/latest).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9923849775515816,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "To run, navigate to the AlphaPept repository and rename the dockerfile\nyou want to use, e.g.\u00a0`Dockerfile_thermo` to `Dockerfile`. \n- Build the image with: `docker build -t docker-alphapept:latest .`\n- To run use\n  `docker run -p 8505:8505 -v /Users/username/Desktop/docker:/home/alphapept/ docker-alphapept:latest alphapept gui`\n  (Note that -v maps a local folder for convient file transfer)\n- Access the AlphaPept GUI via `localhost:8505` in your browser.\n- Note 1: The Thermo Dockerfile is built on a Jupyter image, so you can\n  also start a jupyter instance:\n  `docker run -p 8888:8888 -v /Users/username/Desktop/docker:/home/jovyan/ docker-alphapept:latest jupyter notebook --allow-root`\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9082519666433666,
      "result": {
        "original_header": "Docker Troubleshooting on M1-Mac",
        "type": "Text_excerpt",
        "value": "- The Thermo dockerfile was tested on an M1-Mac. Resources were set to\n  18GB RAM and 2 CPUs, 200 GB disk\n- It was possible to build the Bruker dockerfile with the platform tag\n  `--platform linux/amd64`. However, it was very slow and the Bruker\n  file is not recommended for an M1-Mac. Windows worked nicely.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MannLabs/alphapept/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alphapept-ecosystem, bioinformatics, mass-spectrometry, proteomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 MannLabs\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alphapept"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MannLabs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 907638,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 729982,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 62830,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 1787,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 879,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 879,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 600,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-05-22T10:33:26Z",
        "date_published": "2023-05-22T11:10:46Z",
        "description": "# Summary:\r\n\r\n## Major\r\n### File reading changed to AlphaRaw\r\n- This allows SciEx support. FF is not yet optimized for SciEX yet\r\n- Adjusted memory limits for raw conversion, raw conversion for Bruker is now faster\r\n- Bruker legacy files are supported with the one-click installer but not for the Python version anymore. Install `python-lzf`  or install with the legacy requirements,\r\n- Working docker files \r\n\r\n\r\n## Minor\r\n- Option to change the top_n peptides\r\n- Option to select the initial score for ML scoring\r\n- Fixed a bug in peptide generation that would not consider the last AA\r\n- Added a new protease `protease_dict[\"trypsin/p\"] = \"[KR]\"`\r\n- Small UI improvements\r\n\r\n## Performance:\r\n- Overall, Bruker runs should be 25% faster. We will expect further speed increases once the FF is exchanged\r\n- IDs dropped ~5%, but FDR estimates are well below 1% now\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.4.9...v0.5.0",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.5.0",
        "name": "Release v0.5.0",
        "release_id": 103792332,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/103792332",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/103792332",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-11-06T19:41:16Z",
        "date_published": "2022-12-19T17:00:31Z",
        "description": "## What's Changed\r\n* Upgraded to NBDEV 2.0\r\n* More documentation\r\n* Better display of AlphaPept version number \r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.4.8...v0.4.9",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.9",
        "name": "Release v0.4.9",
        "release_id": 82561560,
        "tag": "v0.4.9",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.9",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/82561560",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/82561560",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-08-17T15:27:51Z",
        "date_published": "2022-08-18T10:43:07Z",
        "description": "## What's Changed\r\n* Multiple small optimizations\r\n* Plot for precursor calibration, general optimization of the calibration\r\n* New generic score to replace the x_tandem\r\n* Memory optimizations\r\n* Changed the default prec_tol to 20, default_mass_tol to 50\r\n* #488: fix error when scoring on machines with more than 60 cpus by @mschwoer in https://github.com/MannLabs/alphapept/pull/489\r\n\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.4.7...v0.4.8",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.8",
        "name": "Release v0.4.8",
        "release_id": 74697066,
        "tag": "v0.4.8",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.8",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/74697066",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/74697066",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-07-20T13:05:47Z",
        "date_published": "2022-07-20T13:46:07Z",
        "description": "## What's Changed\r\n\r\n## 0.4.7\r\n* Updated multiple packages & documentation\r\n* Print traceback when there is an error running AlphaPept \r\n* Updated `modifications.tsv`, Button to reload modifications via GUI\r\n* Changed slider input widget to a number input\r\n* Fixed links in GUI when downloading FASTA\r\n* Fixed GUI Errors #460 \r\n* Fixed bug when launching file watcher\r\n* Option to use relative file paths for the size check @hugokitano \r\n* New functionality to filter fragments by local rank. This should improve performance for noisy datasets.\r\n* Cleaned up print output/deprecation & performance warnings\r\n* Macbook crash fix by @swillems in https://github.com/MannLabs/alphapept/pull/465\r\n* FEAT: create headless option by @swillems in https://github.com/MannLabs/alphapept/pull/464 #449 \r\n* Develop by @straussmaximilian in https://github.com/MannLabs/alphapept/pull/478\r\n\r\n## New Contributors\r\n* @k-Vartika made their first contribution in https://github.com/MannLabs/alphapept/pull/450\r\n* @elena-krismer made their first contribution in https://github.com/MannLabs/alphapept/pull/454\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.4.6...v0.4.7\r\n",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.7",
        "name": "Release v0.4.7",
        "release_id": 72427243,
        "tag": "v0.4.7",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.7",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/72427243",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/72427243",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-05-31T14:25:24Z",
        "date_published": "2022-06-02T14:54:36Z",
        "description": "## What's Changed\r\n* Link to Renku @cmdoret https://github.com/MannLabs/alphapept/pull/433\r\n* Optimized quantification (proper integration of signal on MS1 level), now uses apex of isotope envelope\r\n* Caching of data frames for matching @mschwoer  https://github.com/MannLabs/alphapept/pull/438\r\n* Minor code reorganization\r\n* Bugfixes in interface @hugokitano\r\n* Initial estimates for delayed normalization\r\n* Bugfix for Threadripper Systems #434, #264\r\n* Updated docs\r\n* More flexibility for custom modifications, see constants-tab in GUI\r\n![Screen Shot 2022-06-02 at 4 50 48 PM](https://user-images.githubusercontent.com/16521288/171658093-edb74919-b855-49f8-83fa-cbfcd1a66cd2.png)\r\n\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.4.5...v0.4.6",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.6",
        "name": "Release v0.4.6",
        "release_id": 68310553,
        "tag": "v0.4.6",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.6",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/68310553",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/68310553",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-04-25T16:13:20Z",
        "date_published": "2022-04-26T07:57:04Z",
        "description": "## What's Changed\r\n\r\n### Revision of how fractions are handled\r\n* This should improve performance on fractionated samples #424 #389 \r\n* Scoring was adapted. For fractionated samples each raw file is scored individually.\r\n* In the GUI there are now two additional columns: `Sample_group` and `Fraction`: All files with the same `Sample_group` will be quanted together. Fraction is meant to be enumerated for fractionated samples and is used for the delayed normalization step.\r\n<img width=\"801\" alt=\"Screen Shot 2022-04-26 at 9 50 09 AM\" src=\"https://user-images.githubusercontent.com/16521288/165249784-4c88ad20-736e-4299-a1c4-dbc9394b9222.png\">\r\n\r\n### Acceleration\r\n* @hugokitano made their first contribution in https://github.com/MannLabs/alphapept/pull/412\r\n* This is a speedup for the delayed normalization. Thanks!\r\n\r\n### Misc\r\n* The version [performance](https://charts.mongodb.com/charts-alphapept-itfxv/public/dashboards/5f671dcf-bcd6-4d90-8494-8c7f724b727b) is updated and shows results from version 4.\r\n* Automated test now include fractionated samples and matching.\r\n* Pip installation on Windows should be more robust (fixed tables dependency)\r\n\r\n### Package Updates\r\nSeveral Python packages have been updated:\r\n\r\n* Bump addressable from 2.7.0 to 2.8.0 in /docs by @dependabot in https://github.com/MannLabs/alphapept/pull/269\r\n* Bump matplotlib from 3.3.3 to 3.5.1 by @dependabot in https://github.com/MannLabs/alphapept/pull/376\r\n* Bump scikit-learn from 0.24.2 to 1.0.2 by @dependabot in https://github.com/MannLabs/alphapept/pull/380\r\n* Bump h5py from 3.4.0 to 3.6.0 by @dependabot in https://github.com/MannLabs/alphapept/pull/384\r\n* Bump pyinstaller from 4.2 to 4.10 by @dependabot in https://github.com/MannLabs/alphapept/pull/415\r\n* Bump pyteomics from 4.4.2 to 4.5.3 by @dependabot in https://github.com/MannLabs/alphapept/pull/416\r\n* Bump pandas from 1.3.4 to 1.4.2 by @dependabot in https://github.com/MannLabs/alphapept/pull/411\r\n* Bump sqlalchemy from 1.4.23 to 1.4.35 by @dependabot in https://github.com/MannLabs/alphapept/pull/413\r\n* Bump streamlit-aggrid from 0.2.2.post4 to 0.2.3.post2 by @dependabot in https://github.com/MannLabs/alphapept/pull/417\r\n* Bump pyyaml from 5.4.1 to 6.0 by @dependabot in https://github.com/MannLabs/alphapept/pull/418\r\n* Bump tqdm from 4.56.0 to 4.64.0 by @dependabot in https://github.com/MannLabs/alphapept/pull/419\r\n* Bump scipy from 1.7.1 to 1.8.0 by @dependabot in https://github.com/MannLabs/alphapept/pull/421\r\n* Bump networkx from 2.6.3 to 2.8 by @dependabot in https://github.com/MannLabs/alphapept/pull/422\r\n* Bump pyinstaller from 4.10 to 5.0 by @dependabot in https://github.com/MannLabs/alphapept/pull/420\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/0.4.4...v0.4.5",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.5",
        "name": "Release v0.4.5",
        "release_id": 65308349,
        "tag": "v0.4.5",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.5",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/65308349",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/65308349",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-03-27T07:46:34Z",
        "date_published": "2022-03-27T19:23:00Z",
        "description": "This summary includes the changes from the previous .4.xx:\r\n\r\n0.4.4\r\n\r\n* New maximum iterations for LFQ: This should avoid the \"not converged\"-messages when doing LFQ\r\n* Auto-adjustment of settings for non-specific search: This should avoid memory errors when using non-specific as protease\r\n\r\n0.4.3\r\n* Bugfix for LFQ\r\n\r\n0.4.2\r\n\r\nFEAT: Better logging for LFQ. This will now log if a solver does not converge.\r\nFIX: Correct setting of cores when searching w/o saving database.\r\nDOCUMENT: Updated DOCS\r\n\r\n0.4.1\r\n\r\nFIX: Fixed a bug in LFQ that made LFQ take very long.\r\n0.4.0\r\n\r\nThis version contains a lot of variable renaming to be more consistent with other Alpha*-packages.\r\nThis will probably lead to incompatibility with previous history modes.\r\n\r\nOptimized recalibration to be more memory efficient\r\nFixed a bug where peptide_fdr was not accurately saved. This should affect reported protein / peptide ids.\r\nIncluded additional export of identifications, e.g. the best sequence for each recorded MS2-spectrum\r\nUsability improvements when starting AlphaPept multiple times\r\nRevised History Mode",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.4.4",
        "name": "Release 0.4.4",
        "release_id": 62862042,
        "tag": "0.4.4",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.4.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/62862042",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/62862042",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.4.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-03-21T16:12:05Z",
        "date_published": "2022-03-21T18:24:27Z",
        "description": "This also includes the changes from the previous .4.xx:\r\n\r\n## 0.4.2\r\n* FEAT: Better logging for LFQ. This will now log if a solver does not converge.\r\n* FIX: Correct setting of cores when searching w/o saving database.\r\n* DOCUMENT: Updated DOCS\r\n\r\n## 0.4.1\r\n* FIX: Fixed a bug in LFQ that made LFQ take very long.\r\n\r\n## 0.4.0\r\nThis version contains a lot of variable renaming to be more consistent with other Alpha*-packages.\r\nThis will probably lead to incompatibility with previous history modes.\r\n* Optimized recalibration to be more memory efficient\r\n* Fixed a bug where peptide_fdr was not accurately saved. This should affect reported protein / peptide ids.\r\n* Included additional export of `identifications`, e.g. the best sequence for each recorded MS2-spectrum\r\n* Usability improvements when starting AlphaPept multiple times\r\n* Revised History Mode",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.2",
        "name": "Release v0.4.2",
        "release_id": 62348510,
        "tag": "v0.4.2",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/62348510",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/62348510",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-03-18T07:18:05Z",
        "date_published": "2022-03-18T10:23:33Z",
        "description": "Description will follow shortly",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.1",
        "name": "Release v0.4.1",
        "release_id": 62165958,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/62165958",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/62165958",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-03-11T14:30:45Z",
        "date_published": "2022-03-15T10:49:15Z",
        "description": "Description and Update will follow shortly",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.4.0",
        "name": "Release v0.4.0",
        "release_id": 61675478,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/61675478",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/61675478",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-02-16T18:18:08Z",
        "date_published": "2022-02-17T17:42:33Z",
        "description": "## What's Changed\r\n\r\n### Bugs\r\n\r\n* Fixed a bug that lead to duplicate hills for Thermo #386 \r\n* Fixed a bug where the number of processes being used was not set correctly\r\n* Fixed a bug in the Align step where progress was not reported correctly\r\n* Fixed a bug where Match-between-Runs wouldn't work\r\n* Fixed a bug when the number of found ions was smaller than needed for fragment calibration\r\n\r\n### GitHub\r\n* Reorganization of GitHub Actions so that they run sequentially and not in parallel when testing environments\r\n\r\n## User notes:\r\nFor large number of files when you don't use MBR deactivate the align step as this could take a very long time.\r\n\r\n**Full Changelog**: https://github.com/MannLabs/alphapept/compare/v0.3.31...v0.3.33",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.3.33",
        "name": "Release v0.3.33",
        "release_id": 59789917,
        "tag": "v0.3.33",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.3.33",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/59789917",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/59789917",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.3.33"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-12-10T15:29:51Z",
        "date_published": "2021-12-13T09:45:49Z",
        "description": "* Improved fragment calibration. AlphaPept will now save a figure with the fragment calibration for each raw file. Results for files with bad fragment calibration should be drastically improved. Example Plot below.\r\n* Reorganization of requirements\r\n* Fix #374 \r\n* Scaffold for TMT support\r\n* Scaffold for Fractions: Note that fractions are still experimental, and results are not as good as we want them to be. We expect to have a very conservative FDR.\r\n\r\nNew Contributors:\r\nThanks to @romanzenka for fixing a Typo.\r\n\r\n![Screenshot 2021-12-13 at 10 47 05](https://user-images.githubusercontent.com/16521288/145789320-abd62a3d-b4be-4efd-a110-025ae37b4da1.png)",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.3.31",
        "name": "Release v0.3.31",
        "release_id": 55057369,
        "tag": "v0.3.31",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.3.31",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/55057369",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/55057369",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.3.31"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-09-17T14:46:45Z",
        "date_published": "2021-09-21T08:58:14Z",
        "description": "- Stability improvements\r\n- support of running multiple mzML-files #316\r\n- Auto-refresh of Status page #203\r\n- Moved custom plots to home directory\r\n- Coverage map added by mgleeming #320 ",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.3.29",
        "name": "Release v0.3.29",
        "release_id": 49754911,
        "tag": "v0.3.29",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.3.29",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/49754911",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/49754911",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.3.29"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-08-30T11:16:40Z",
        "date_published": "2021-08-30T12:05:08Z",
        "description": "* Automatic fragment tolerance estimation for better support of MS2=Iontrap Thermo runs #305\r\n* Updated error message handling\r\n* consistent renaming of `o_mass` to `prec_offset`\r\n* Fixed a bug in how `int_ratio` is calculated in first_search\r\n* Enabled handling of `mzML`-files in GUI / Core\r\n* Improved Documentation\r\n* Ion export for search parallel\r\n* Moved `loss_dict` to constants.",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/v0.3.28",
        "name": "Release v0.3.28",
        "release_id": 48666892,
        "tag": "v0.3.28",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/v0.3.28",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/48666892",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/48666892",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/v0.3.28"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-06-07T23:39:51Z",
        "date_published": "2021-06-08T10:21:30Z",
        "description": "## 0.3.26\r\n\r\n### General\r\n- Included changelog to track what changed and what not\r\n\r\n### Stability\r\n- Reduced memory usage for search by capping to top 5 search results #249\r\n- CMD interface is now wrapped in a try and except statement to better track error messages #251\r\n- Included SSL libraries #251\r\n\r\n#### GUI\r\n- Refresh folder button for new experiment #240\r\n\r\n### Features\r\n\r\n### Documentation\r\n- added more documentation to XX_file_formats notebook",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.26",
        "name": "Release 0.3.26",
        "release_id": 44261524,
        "tag": "0.3.26",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.26",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/44261524",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/44261524",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.26"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-06-02T11:47:11Z",
        "date_published": "2021-06-02T12:28:34Z",
        "description": "## Major changes\r\n* TBA\r\n\r\n## Installation Notes\r\nIf you have a previous AlphaPept installation, please deinstall.\r\nIf possible, also remove files in the AlphaPept user folder (on Windows `C:\\Users\\Username\\.alphapept\\`\r\n\r\n## Windows 7 \r\nWhen testing on a `Windows 7` machine, AlphaPept would not start (flashing terminal and close).\r\nWhen launching AlphaPept.exe via the command line, the following error message could be retrieved:\r\n`ImportError: DLL load failed while importing _ssl: The specified module could not be found`. \r\nA fix was to install [OpenSSL](http://slproweb.com/download/Win64OpenSSL_Light-1_1_1k.exe). When installing, one was additionally asked to install some Visual Studio components. After installation, a test run did run through successfully.\r\n\r\n## Windows 10 \r\nThere is a known bug for outdated `Windows 10` versions that don't have `KB4598291`.\r\nIn this case, AlphaPept will not start. Updating Windows should solve the problem (see: https://tinyurl.com/y3dm3h86)",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.25",
        "name": "Release 0.3.25",
        "release_id": 43969562,
        "tag": "0.3.25",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.25",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/43969562",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/43969562",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.25"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-05-25T19:01:27Z",
        "date_published": "2021-05-25T20:26:00Z",
        "description": "## Major changes\r\n* Start page\r\n* Revised calibration\r\n* Applying protein_fdr on all files\r\n* Option to change the plots via a settings file \r\n\r\n## Installation Notes\r\nIf you have a previous AlphaPept installation, please deinstall.\r\nIf possible, also remove files in the AlphaPept user folder (on Windows `C:\\Users\\Username\\.alphapept\\`\r\n\r\n## Windows 7 \r\nWhen testing on a `Windows 7` machine, AlphaPept would not start (flashing terminal and close).\r\nWhen launching AlphaPept.exe via the command line, the following error message could be retrieved:\r\n`ImportError: DLL load failed while importing _ssl: The specified module could not be found`. \r\nA fix was to install [OpenSSL](http://slproweb.com/download/Win64OpenSSL_Light-1_1_1k.exe). When installing, one was additionally asked to install some Visual Studio components. After installation, a test run did run through successfully.\r\n\r\n## Windows 10 \r\nThere is a known bug for outdated `Windows 10` versions that don't have `KB4598291`.\r\nIn this case, AlphaPept will not start. Updating Windows should solve the problem (see: https://tinyurl.com/y3dm3h86)",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.23-dev0",
        "name": "Release 0.3.23-dev0",
        "release_id": 43554252,
        "tag": "0.3.23-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.23-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/43554252",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/43554252",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.23-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-05-18T10:58:58Z",
        "date_published": "2021-05-18T11:47:14Z",
        "description": "* FASTA Download\r\n* Terminate Processes\r\n* Some basic plots (protein numbers, ions, protein rank)\r\n* default settings changed (mtol, offset to 30 ppm, acetylation of protein)\r\n* changed user path to .alphapept\r\n\r\n\r\nKnown Bugs:\r\nThere is a known bug for outdated Windows versions which don't have KB4598291.\r\nIn this case, alphapept will not start. Updating Windows should solve the problem (see: https://tinyurl.com/y3dm3h86)\r\n",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.22-dev0",
        "name": "Release 0.3.22-dev0",
        "release_id": 43124652,
        "tag": "0.3.22-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.22-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/43124652",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/43124652",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.22-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-05-05T21:24:37Z",
        "date_published": "2021-05-06T09:46:27Z",
        "description": "Streamlit Release\r\n\r\nKnown Bugs: \r\nThere is a known bug for outdated Windows versions which don't have KB4598291.\r\nIn this case, alphapept will not start. Updating Windows should solve the problem (see: https://tinyurl.com/y3dm3h86)",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.20-dev0",
        "name": "Release 0.3.20-dev0",
        "release_id": 42505024,
        "tag": "0.3.20-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.20-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/42505024",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/42505024",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.20-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-02-26T22:56:21Z",
        "date_published": "2021-03-16T14:30:26Z",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.13-dev0",
        "name": "Release 0.3.13-dev0",
        "release_id": 39124088,
        "tag": "0.3.13-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.13-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/39124088",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/39124088",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.13-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-01-10T17:04:15Z",
        "date_published": "2021-01-11T08:55:18Z",
        "description": "# 0.3.11-dev0\r\n* pyinstaller tests running\r\n* systems check indicate quantification is working\r\n* thermo FF is not memory optimized",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.11-dev0",
        "name": "Release 0.3.11-dev0",
        "release_id": 36198622,
        "tag": "0.3.11-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.11-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/36198622",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/36198622",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.11-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2020-12-18T15:39:40Z",
        "date_published": "2020-12-18T19:05:16Z",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.9-dev0",
        "name": "Release 0.3.9-dev0",
        "release_id": 35483715,
        "tag": "0.3.9-dev0",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.9-dev0",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/35483715",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/35483715",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.9-dev0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2020-12-12T15:16:46Z",
        "date_published": "2020-12-13T11:53:23Z",
        "description": "This is the 0.3.6. Release that should enable the Windows Installation and GUI.\r\n\r\nKnown Bugs:\r\n* The progress bar might not be very accurate. For runs with single files, the first steps will be much slower than the last ones as they will be skipped (e.g., LFQ / matching)\r\n* Feature Finding is slower in GUI than in CMD (some 30%)\r\n* Fasta paths are shown in the GUI although to be set in the Experiment tab\r\n* recalibration_min option present in search allthough not used\r\n* feature finding option present also for not-broker files",
        "html_url": "https://github.com/MannLabs/alphapept/releases/tag/0.3.6-dev1",
        "name": "Release 0.3.6-dev0",
        "release_id": 35202223,
        "tag": "0.3.6-dev1",
        "tarball_url": "https://api.github.com/repos/MannLabs/alphapept/tarball/0.3.6-dev1",
        "type": "Release",
        "url": "https://api.github.com/repos/MannLabs/alphapept/releases/35202223",
        "value": "https://api.github.com/repos/MannLabs/alphapept/releases/35202223",
        "zipball_url": "https://api.github.com/repos/MannLabs/alphapept/zipball/0.3.6-dev1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "We highly recommend the [Anaconda](https://www.anaconda.com) or\n[Miniconda](https://docs.conda.io/en/latest/miniconda.html) Python\ndistribution, which comes with a powerful package manager. See below for\nadditional instructions for Linux and Mac as they require additional\ninstallation of Mono to use the RawFileReader.\n\nAlphaPept can be used as an application as a whole or as a Python\nPackage where individual modules are called. Depending on the use case,\nAlphaPept will need different requirements, and you might not want to\ninstall all of them.\n\nCurrently, we have the default `requirements.txt`, additional\nrequirements to run the GUI `gui` and packages used for developing\n`develop`.\n\nTherefore, you can install AlphaPept in multiple ways:\n\n- The default `alphapept`\n- With GUI-packages `alphapept[gui]`\n- With pacakges for development `alphapept[develop]`\n  (`alphapept[develop,gui]`) respectively\n\nThe requirements typically contain pinned versions and will be\nautomatically upgraded and tested with `dependabot`. This `stable`\nversion allows having a reproducible workflow. However, in order to\navoid conflicts with package versions that are too strict, the\nrequirements are not pinned when being installed. To use the strict\nversion use the `-stable`-flag, e.g.\u00a0`alphapept[stable]`.\n\nFor end-users that want to set up a processing environment in Python,\nthe `\"alphapept[stable,gui-stable]\"` is the `batteries-included`-version\nthat you want to use.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:35:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 167
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bruker Support",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python",
          "Mac"
        ],
        "type": "Text_excerpt",
        "value": "4.  Copy-paste the Bruker library for feature finding to your /usr/lib\n    folder with\n    `sudo cp alphapept/ext/bruker/FF/linux64/alphapeptlibtbb.so.2 /usr/lib/libtbb.so.2`.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Thermo Support",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python",
          "Mac"
        ],
        "type": "Text_excerpt",
        "value": "5.  Install Mono from mono-project website [Mono\n    Linux](https://www.mono-project.com/download/stable/#download-lin).\n    NOTE, the installed mono version should be at least 6.10, which\n    requires you to add the ppa to your trusted sources!\n6.  Install pythonnet with `pip install pythonnet>=2.5.2`\n\n------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GPU Support",
        "parent_header": [
          "AlphaPept",
          "Python Installation Instructions",
          "Python"
        ],
        "type": "Text_excerpt",
        "value": "Some functionality of AlphaPept is GPU optimized that uses Nvidia\u2019s\nCUDA. To enable this, additional packages need to be installed.\n\n1.  Make sure to have a working [CUDA\n    toolkit](https://developer.nvidia.com/cuda-toolkit) installation\n    that is compatible with CuPy. To check type `nvcc --version` in your\n    terminal.\n2.  Install [cupy](https://cupy.dev). Make sure to install the cupy\n    version matching your CUDA toolkit (e.g.\u00a0`pip install cupy-cuda110`\n    for CUDA toolkit 11.0.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "AlphaPept"
        ],
        "type": "Text_excerpt",
        "value": "AlphaPept is meant to be a framework to implement and test new ideas\nquickly but also to serve as a performant processing pipeline. In\nprinciple, there are three use-cases:\n\n- GUI: Use the graphical user interface to select settings and process\n  files manually.\n- CMD: Use the command-line interface to process files. Useful when\n  building automatic pipelines.\n- Python: Use python modules to build individual workflows. Useful when\n  building customized pipelines and using Python as a scripting language\n  or when implementing new ideas.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Package",
        "parent_header": [
          "AlphaPept",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "Once AlphaPept is correctly installed, you can use it like any other\npython module.\n\n``` python\nfrom alphapept.fasta import get_frag_dict, parse\nfrom alphapept import constants\n\npeptide = 'PEPT'\n\nget_frag_dict(parse(peptide), constants.mass_dict)\n```\n\n    {'b1': 98.06004032687,\n     'b2': 227.10263342687,\n     'b3': 324.15539728686997,\n     'y1': 120.06551965033,\n     'y2': 217.11828351033,\n     'y3': 346.16087661033}\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using as a tool",
        "parent_header": [
          "AlphaPept",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "If alphapept is installed an a conda or virtual environment, launch this\nenvironment first.\n\nTo launch the command line interface use: \\* `alphapept`\n\nThis allows us to select different modules. To start the GUI use: \\*\n`alphapept gui`\n\nTo run a workflow, use: \\* `alphapept workflow your_own_workflow.yaml`\nAn example workflow is easily generated by running the GUI once and\nsaving the settings which can be modified on a per-project basis.\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CMD / Python",
        "parent_header": [
          "AlphaPept",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "1.  Create a settings-file. This can be done by changing the\n    `default_settings.yaml` in the repository or using the GUI.\n2.  Run the analysis with the new settings file.\n    `alphapept run new_settings.yaml`\n\nWithin Python (i.e., Jupyter notebook) the following code would be\nrequired)\n\n    from alphapept.settings import load_settings\n    import alphapept.interface\n    settings = load_settings('new_settings.yaml')\n    r = alphapept.interface.run_complete_workflow(settings)\n\nThis also allows you to break the workflow down in indiviudal steps,\ne.g.:\n\n    settings = alphapept.interface.import_raw_data(settings)\n    settings = alphapept.interface.feature_finding(settings)\n"
      },
      "source": "https://raw.githubusercontent.com/MannLabs/alphapept/master/README.md",
      "technique": "header_analysis"
    }
  ]
}