{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "The manuscript associated with this work was published in PLOS\nComputational Biology on July 21, 2020. If you use this software, please\ncite this source:\n\n> Ghazi, A. R., Kong, X., Chen, E. S., Edelstein, L. C., & Shaw, C. A.\n> (2020). Bayesian modelling of high-throughput sequencing assays with\n> malacoda. PLOS Computational Biology, 16(7), 1\u201318.\n> <https://doi.org/10.1371/journal.pcbi.1007504>\n\nThe HTML versions of the supplements for the manuscript are available in\nthis repository\u2019s man/supplements/ directory.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andrewGhazi/malacoda"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "The massively parallel functionalization field is still rapidly changing\nso there\u2019s a lot of experimental structures out there that are not\naccounted for in this package yet. If you\u2019re interested in these\nmethods, feel free to contact me with some example data and I\u2019ll be\nhappy to take a look to see if I can adapt the existing models\\!\n\nPlease contact me through Github DM or my BCM email address if you use\nthe package or have feature requests / comments.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-31T18:38:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-28T18:02:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bayesian analysis of MPRA and other high-throughput genomic assays"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9344084072667268,
      "result": {
        "original_header": "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>",
        "type": "Text_excerpt",
        "value": "The goal of malacoda is to enable Bayesian analysis of high-throughput\ngenomic assays like massively parallel reporter assays (MPRA) and CRISPR\nscreens. \nIt uses a negative-binomial-based Bayesian model shown in the Kruschke\ndiagram below. This model offers numerous advantages over traditional\nnull hypothesis significance testing based methods: \n  - Models raw data - The model is fit directly to the input counts\n    (MPRA barcodes or gRNAs)\n      - The lack of transformations avoids discarding 0 counts as in\n        traditional methods.\n  - Prior information - Empirical priors are fit from the observed assay\n    globally, enabling estimate shrinkage that reduces errors due to\n    multiple testing\n      - Informative annotations (such as DNase hypersensitivity\n        estimates or gene scores) can be included to further refine the\n        empirical priors by conditional density estimation.  \n  - The R interface provides clear and interpretable outputs and\n    figures. \nOther features include: \n  - automated barcode counting from MPRA library design and FASTQs\n  - custom Stan models for fast posterior evaluation  \n  - variational Bayes support through `rstan::vb` that allows for quick\n    first pass checks  \n  - Annotation checking - quantitatively evaluate how much a given\n    genomic annotation source improves empirical prior estimation by\n    prior ratios\n  - Convenience and QC functions - `count_barcodes()` to automatically\n    go from FASTQs to raw MPRA counts. `get_sample_correlations()` to\n    check the consistency of your data. \n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8492426954494955,
      "result": {
        "original_header": "Upcoming Features",
        "type": "Text_excerpt",
        "value": "  - ~~Fleshed out CRISPR model support~~ \u2713\n      - Informative prior estimation for CRISPR dropout screen models\n  - ~~Categorical conditional priors~~ \u2713\n  - additional Quality Control functionality\n  - monoallelic variant analysis\n      - ~~model code~~ \u2713\n      - model interface\n  - multi-tissue / multi-allelic variant analysis\n      - ~~model code~~ \u2713\n      - model interface\n      - tissue level informative prior estimation\n  - single-step hierarchical model with efficient, within-chain\n    parallelization via `reduce_sum`\n \n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andrewGhazi/malacoda/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andrewGhazi/malacoda/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "andrewGhazi/malacoda"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "malacoda "
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/andrewGhazi/malacoda/master/man/figures/kruschke_latex.png"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/andrewGhazi/malacoda/master/man/figures/tile_example.png"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/andrewGhazi/malacoda/master/man/figures/interval_example.png"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "`malacoda` is intended for use on Mac and Linux. Windows may work aside\nfrom parallelization, however we do not intend to support Windows.\n\nIt\u2019s best to have the most up-to-date version of R (3.6.0 as of May 2\n2019).\n\nThe first step is to install `rstan` and `Rcpp`. The following command\nwill usually suffice to do this, if not you can find more in-depth\ninstallation instructions [on the rstan\ndocumentation](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started).\nYou should have root access.\n\n``` r\n# Sys.setenv(MAKEFLAGS = \"-j4\") # This compilation flag can help speed up\n# installation on multi-threaded machines. This command uses 4 threads.\ninstall.packages(c('Rcpp', 'rstan'), dependencies = TRUE, type = 'source')\n```\n\nOnce malacoda is accepted up on CRAN it will be installable with:\n\n``` r\n# install.packages('malacoda')\n```\n\nYou can install the development version of malacoda from github with:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"andrewGhazi/malacoda\")\n```\n\nThis should install the dependencies (which are mostly tidyverse\npackages), compile the malacoda Stan models, and install the package.\n\n`count_barcodes()` requires the\n[FASTX-Toolkit](http://hannonlab.cshl.edu/fastx_toolkit/index.html)\n(installation instructions provided at that link) and `sed` which comes\nwith most Unix-like operating systems. It can also optionally take\nadvantage of the [FreeBarcodes](https://github.com/hawkjo/freebarcodes)\npackage for barcode error-correction.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andrewGhazi/malacoda/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/andrewGhazi/malacoda/master/man/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "malacoda"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "andrewGhazi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 156406,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 69721,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Stan",
        "size": 11809,
        "type": "Programming_language",
        "value": "Stan"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:11:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Help",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "  - A full analysis walk-through is available through the mpra analysis\n    vignette, accessible with `vignette(\"mpra_vignette\")` (You will need\n    to have built the vignette during package installation\n    e.g.\u00a0`devtools::install_github('andrewGhazi/malacoda',\n    build_vignettes = TRUE)`)\n  - Each function in the package has an associated help page that can be\n    accessed from R, for example `?fit_mpra_model` . These are generally\n    quite detailed.\n  - You can see a list of the data objects included with the package\n    using the command `data(package = 'malacoda')`. You can then access\n    the description of each data object as you would the help\n    documentation e.g.\u00a0`?umpra_example` .\n  - A pdf manual containing all documentation for all exported functions\n    can be built during package installation by setting `build_manual =\n    TRUE` as an argument to `install_github`.\n  - Don\u2019t hesitate to open an issue on this Github repository or send me\n    a direct message if things don\u2019t work how you expect. Even if the\n    package is working as intended, if users are having problems I want\n    to fix that.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "This is a basic example which shows you how to fit the simplest form of\nthe model. The input needs to provide the MPRA counts for each barcode\nof each allele of each variant with a column for each sequencing sample.\nThis example only shows 8 rows, but realistic datasets will have\nthousands.\n\n| variant\\_id        | allele | barcode      | DNA1 | DNA2 | RNA1 | RNA2 | RNA3 | RNA4 |\n| :----------------- | :----- | :----------- | ---: | ---: | ---: | ---: | ---: | ---: |\n| 1\\_205247315\\_2-3  | ref    | CGATATAGTTAC |   19 |   19 |    3 |    0 |   39 |    4 |\n| 1\\_205247315\\_2-3  | ref    | ACGCATTCACCT |   56 |   51 |   38 |   19 |   38 |   46 |\n| 1\\_205247315\\_2-3  | alt    | TAGTATCAACTA |   76 |   50 |   14 |   44 |   11 |   20 |\n| 1\\_205247315\\_2-3  | alt    | GTCGTCAGCGAT |  106 |   69 |   80 |   32 |  163 |   57 |\n| 10\\_101274365\\_1-3 | ref    | ATAAGCCGTCCG |   54 |   37 |   43 |    2 |   12 |   24 |\n| 10\\_101274365\\_1-3 | ref    | CCGACGGCGTTG |   61 |   35 |   18 |    7 |   19 |   10 |\n| 10\\_101274365\\_1-3 | alt    | GATACGAACACA |   42 |   34 |   29 |   48 |  194 |  129 |\n| 10\\_101274365\\_1-3 | alt    | TAACGATCGGTC |   33 |   25 |   14 |    9 |   11 |  409 |\n\nThe specific format requirements for the input can be found on the help\npage for `?fit_mpra_model`. The code below will fit the basic malacoda\nmodel using a dataset that comes with the package:\n\n``` r\nlibrary(malacoda)\nmarg_prior = fit_marg_prior(umpra_example)\nfit_mpra_model(mpra_data = umpra_example,\n               out_dir = '/path/to/outputs/',\n               priors = marg_prior,\n               n_cores = getOption('mc.cores', 2L),\n               tot_samp = 1000,\n               n_chains = 3,\n               vb_pass = TRUE,\n               save_nonfunctional = TRUE)\n```\n\nThis will fit the model to each input in the assay (using some example\nvariants from [Ulirsch et al.,\nCell, 2016](https://www.ncbi.nlm.nih.gov/pubmed/27259154) in the\nbuilt-in dataset `umpra_example`) using a marginal prior, save the\noutputs for each variant at the specified directory, and return a data\nframe of summary statistics for each variant, including binary calls of\nfunctional/non-functional, posterior means on activity levels &\ntranscription shift.\n\n| variant\\_id        | ts\\_post\\_mean | ref\\_post\\_mean | alt\\_post\\_mean | is\\_functional | hdi\\_lower | hdi\\_upper |\n| :----------------- | -------------: | --------------: | --------------: | :------------- | ---------: | ---------: |\n| 22\\_32880585\\_2-3  |           1.67 |          \\-1.15 |            0.52 | TRUE           |       0.95 |       2.32 |\n| 15\\_66068074\\_1-3  |           0.73 |          \\-0.83 |          \\-0.10 | FALSE          |     \\-0.15 |       1.56 |\n| 12\\_121167039\\_1-3 |           0.56 |          \\-0.69 |          \\-0.13 | FALSE          |     \\-0.25 |       1.26 |\n| 16\\_68092850\\_2-3  |         \\-0.44 |            0.18 |          \\-0.26 | FALSE          |     \\-1.15 |       0.40 |\n| 8\\_42424746\\_1-2   |           0.40 |          \\-0.33 |            0.07 | FALSE          |     \\-0.12 |       0.87 |\n| 19\\_33204544\\_1-3  |         \\-0.27 |          \\-0.15 |          \\-0.42 | FALSE          |     \\-0.91 |       0.44 |\n\nMore sophisticated analyses that use annotations to create informative\npriors for higher sensitivity are described in the MPRA Analysis\nvignette accessible with `vignette('mpra_vignette', package =\n'malacoda')`. Other features like annotation checking and traditional\nNHST analysis are also explained in the vignette. Each function provided\nby the package have extensive help documentation that should help\nelucidate what they do and how to use them e.g.\u00a0`?fit_mpra_model`.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example output",
        "parent_header": [
          "malacoda <img src=\"man/figures/logo.png\" align=\"right\" title=\"evil tail\"/>"
        ],
        "type": "Text_excerpt",
        "value": "In addition to the summary statistics table output above, the sampler\noutputs for each variant are saved in the user-defined output directory.\nThese are stanfit objects, thus they can be visualized using all the\ntools provided in packages like\n[bayesplot](http://mc-stan.org/users/interfaces/bayesplot).\n\n`malacoda` also provides several plotting function of its own.\n`mpra_tile_plot` can help to visualize the raw MPRA counts (and some\nsummary metrics):\n\n<img src=\"man/figures/tile_example.png\" width=\"2700\" />\n\nAnd `malacoda_intervals()` can help to visualize the posterior from the\nmalacoda model fit:\n\n<img src=\"man/figures/interval_example.png\" width=\"3600\" />\n\nOther visualization functions are available for annotation checking.\nThese help visualize the improvement induced by the use of informative\nconditional priors.\n"
      },
      "source": "https://raw.githubusercontent.com/andrewGhazi/malacoda/master/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}