{
  "application_domain": [
    {
      "confidence": 47.17,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 35.31,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 6.43,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/boxiangliu/ParaMed"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-23T17:45:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-26T04:42:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Chinese to English medical translation "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain"
        ],
        "type": "Text_excerpt",
        "value": "`NEJM` is a Chinese-English parallel corpus crawled from the New England Journal of Medicine website. English articles are distributed through <https://www.nejm.org/> and Chinese articles are distributed through <http://nejmqianyan.cn/>. The corpus contains all article pairs (around 2000 pairs) since 2011. \n\nThis project was motivated by the fact that the Biomedical translation shared task in WMT19 did not provide training data for Chinese/English. In fact, we did not find any publically available parallel corpus between English and Chinese. We collected the `NEJM` corpus to faciliate machine translation between English and Chinese in the medical domain. We found that a remarkable boost in BLEU score can be achieved by pre-training on WMT18 and fine-tuning on the `NEJM` corpus. \n\n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "[Optional] Plot summary statistics of crawled articles",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain",
          "Reproducing the paper"
        ],
        "type": "Text_excerpt",
        "value": "To plot the distribution of articles by year and by type, run: \n\n\tpython3 crawler/url_stat.py\n\n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9603577876191941,
      "result": {
        "original_header": "1. Crawl the NEJM website",
        "type": "Text_excerpt",
        "value": "In `crawl/crawl.py`, replace the value of `nejm_username` and `nejm_password` with your credentials. Then run:  \nThis step crawls thousands of articles from NEJM and will take a number of hours. \n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9302909675910617,
      "result": {
        "original_header": "Filter crawled articles",
        "type": "Text_excerpt",
        "value": "The crawled articles are peppered with bits and pieces of noisy text. To remove them, run:  \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9012189163673316,
      "result": {
        "original_header": "2. Preprocessing",
        "type": "Text_excerpt",
        "value": "We will normalize, break up paragraphs into sentences, tokenize and truecase. \n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9368390621778364,
      "result": {
        "original_header": "[Optional] Compare eserix with punkt",
        "type": "Text_excerpt",
        "value": "We can also split paragraphs with another popular python module called `punkt`, and compare the performance of the two algorithms.  \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9139236546338415,
      "result": {
        "original_header": "Assessment of alignment algorithms",
        "type": "Text_excerpt",
        "value": "We assess the performance of [Gale-Church](https://www.aclweb.org/anthology/J93-1004.pdf) (length-based), [Microsoft aligner](https://www.microsoft.com/en-us/download/details.aspx?id=52608&from=https%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fdownloads%2Faafd5dcf-4dcc-49b2-8a22-f7055113e656%2F) (Lexicon-based), and [Bleualign](https://github.com/rsennrich/Bleualign) (translation-based). Install them on your system.  \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8376402770717053,
      "result": {
        "original_header": "Align with Bleualign and Gale-Church algorithm:",
        "type": "Text_excerpt",
        "value": "Evaluate the performance of all algorithms:  \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8064866558007888,
      "result": {
        "original_header": "Translation",
        "type": "Text_excerpt",
        "value": "WMT18 preprocessed en/zh data can be downloaded [here](http://data.statmt.org/wmt18/translation-task/preprocessed/zh-en/).  \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data Download",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain"
        ],
        "type": "Text_excerpt",
        "value": "You can download ~ 70% of data [here](https://github.com/boxiangliu/med_translation/blob/master/data/nejm-open-access.tar.gz?raw=true). Read on if you would like the entire dataset. \n\nThe New England Journal of Medicine is a pay-for-access journal. We are therefore prohibited by their copyright policy to freely distribute the entire dataset. However, Journal Watch and Original Research articles are open access six months after the initial publication. These articles make up about ~ 70% of the entire dataset and you can access them immediately using the link above. \n\nIf you are a NEJM subscriber through an institution or a personal account, as we belive most biomedical researchers are, you are entitled to access the full data. Please email us at <jollier.liu@gmail.com> for access to the entire dataset. \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/boxiangliu/ParaMed/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/boxiangliu/ParaMed/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "boxiangliu/ParaMed"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/pipe.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/lowercase.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/normalize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/manual_align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/tokenize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/truecase.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/detect_sentences/eserix.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/manual_align/copy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/preprocess/manual_align/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/wmt18/train.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/wmt18/train_rnn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/test_denovo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/test_finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/finetune.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/finetune_rnn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/test_finetune_rnn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/train_denovo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/train_denovo_rnn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/translation/nejm/test_denovo_rnn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/alignment/moore/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/alignment/moore/input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/clean/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/clean/concat.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/evaluate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/bleualign/translate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/bleualign/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/bleualign/input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/hunalign/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/hunalign/input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/moore/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/nejm/align/moore/input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/wmt19_biomed/evaluate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/wmt19_biomed/translate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/wmt19_biomed/align.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/evaluation/wmt19_biomed/modifications.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Prerequisite",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain"
        ],
        "type": "Text_excerpt",
        "value": "The code in this repository was written in `python 3.7`. \n\nFirst you need to clone the repository: \n\n\tgit clone https://github.com/boxiangliu/med_translation.git\n\nThen install the following python packages if they are not installed yet. \n\n- selenium\n- numpy\n- pandas \n- matplotlib\n- seaborn\n- nltk\n\nAlso install these packages outside of python: \n\n- [eserix](https://github.com/emjotde/eserix)\n- [bifixer](https://github.com/bitextor/bifixer)\n- [Microsoft bilingual sentence aligner](https://www.microsoft.com/en-us/download/details.aspx?id=52608&from=https%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fdownloads%2Faafd5dcf-4dcc-49b2-8a22-f7055113e656%2F)\n- [OpenNMT](https://github.com/OpenNMT/OpenNMT-py)\n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual alignment",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain",
          "3. Sentence alignment"
        ],
        "type": "Text_excerpt",
        "value": "In order to compare automatic sentence alignment algorithms, we need to establish a set of ground truth alignment. Lucky for you, we have done the dirty work of aligning sentences. You can download the raw sentences (unaligned) [here](https://github.com/boxiangliu/med_translation/blob/master/data/manual_align_input.tar.gz?raw=true). Create a directory and untar into this directory. These will be used as input to the sentence alignment algorithm below. \n\n\tmkdir ../processed_data/preprocess/manual_align/input/\n\tcd ../processed_data/preprocess/manual_align/input/\n\ttar xzvf manual_align_input.tar.gz\n\nNext download the manual alignment result [here](https://raw.githubusercontent.com/boxiangliu/med_translation/master/data/align.txt). Place it into the following directory. \n\n\tmkdir ../processed_data/preprocess/manual_align/alignment/\n\nThe alignment result will be used to assess the quality of alignment algorithms. \n\n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9814275348056564,
      "result": {
        "original_header": "Reproducing the paper",
        "type": "Text_excerpt",
        "value": "WARNING: Those without access to NEJM will likely not be able to run all steps in this repo. \n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8335528191056333,
      "result": {
        "original_header": "1. Crawl the NEJM website",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/crawl.py \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8856479836080847,
      "result": {
        "original_header": "Filter crawled articles",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/filter.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8335528191056333,
      "result": {
        "original_header": "[Optional] Compare pre- and post-filtered articles",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/article_stat.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9573632638116327,
      "result": {
        "original_header": "Normalize punctuations",
        "type": "Text_excerpt",
        "value": "\tbash preprocess/normalize.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9573632638116327,
      "result": {
        "original_header": "Split paragraphs into sentences",
        "type": "Text_excerpt",
        "value": "\tbash preprocess/detect_sentences/eserix.sh \n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9616042392591264,
      "result": {
        "original_header": "[Optional] Compare eserix with punkt",
        "type": "Text_excerpt",
        "value": "\tpython3 preprocess/detect_sentences/punkt.py\n\tpython3 preprocess/detect_sentences/sent_stat.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9237481150608009,
      "result": {
        "original_header": "Tokenize and truecase",
        "type": "Text_excerpt",
        "value": "The final preprocessing steps will be tokenization and truecasing \n\tbash preprocess/tokenize.sh\n\tbash preprocess/truecase.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9383321175477001,
      "result": {
        "original_header": "Assessment of alignment algorithms",
        "type": "Text_excerpt",
        "value": "Next run the following commands to align sentences using all algorithms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8922091368718956,
      "result": {
        "original_header": "Align with Moore's algorithm:",
        "type": "Text_excerpt",
        "value": "\tbash evaluation/nejm/align/moore/input.sh\n\tbash evaluation/nejm/align/moore/align.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8814258652314676,
      "result": {
        "original_header": "Align with Bleualign and Gale-Church algorithm:",
        "type": "Text_excerpt",
        "value": "\tbash evaluation/nejm/align/bleualign/input.sh\n\tbash evaluation/nejm/align/bleualign/translate.sh\n\tbash evaluation/nejm/align/bleualign/align.sh \n\tbash evaluation/nejm/evaluate.sh\n\tpython3 evaluation/nejm/vis_pr_curve.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9885737009020457,
      "result": {
        "original_header": "Align the entire corpus",
        "type": "Text_excerpt",
        "value": "\tbash alignment/moore/input.sh\n\tbash alignment/moore/align.sh \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999328859217803,
      "result": {
        "original_header": "Clean the `NEJM` corpus",
        "type": "Text_excerpt",
        "value": "\tbash clean/concat.sh\n\tbash clean/clean.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8622568639478199,
      "result": {
        "original_header": "Split the data into train, dev and test:",
        "type": "Text_excerpt",
        "value": "\tbash split_data/split_train_test.py \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9309588961575278,
      "result": {
        "original_header": "Translation",
        "type": "Text_excerpt",
        "value": "\tpython3 subset/subset.py \n\tpython3 translation/nejm/finetune.sh\n\tpython3 translation/nejm/test_finetune.sh \n\tpython3 translation/nejm/train_denovo.sh\n\tpython3 translation/nejm/test_denovo.sh \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8624630557481475,
      "result": {
        "original_header": "1. Crawl the NEJM website",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/crawl.py \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8109521953066577,
      "result": {
        "original_header": "Filter crawled articles",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/filter.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8624630557481475,
      "result": {
        "original_header": "[Optional] Compare pre- and post-filtered articles",
        "type": "Text_excerpt",
        "value": "\tpython3 crawler/article_stat.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.82232221152717,
      "result": {
        "original_header": "Normalize punctuations",
        "type": "Text_excerpt",
        "value": "\tbash preprocess/normalize.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.82232221152717,
      "result": {
        "original_header": "Split paragraphs into sentences",
        "type": "Text_excerpt",
        "value": "\tbash preprocess/detect_sentences/eserix.sh \n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8787926301013637,
      "result": {
        "original_header": "[Optional] Compare eserix with punkt",
        "type": "Text_excerpt",
        "value": "\tpython3 preprocess/detect_sentences/punkt.py\n\tpython3 preprocess/detect_sentences/sent_stat.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.82232221152717,
      "result": {
        "original_header": "Tokenize and truecase",
        "type": "Text_excerpt",
        "value": "\tbash preprocess/tokenize.sh\n\tbash preprocess/truecase.sh\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8856720245882488,
      "result": {
        "original_header": "Align with Bleualign and Gale-Church algorithm:",
        "type": "Text_excerpt",
        "value": "\tbash evaluation/nejm/evaluate.sh\n\tpython3 evaluation/nejm/vis_pr_curve.py\n \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8615652076474474,
      "result": {
        "original_header": "Split the data into train, dev and test:",
        "type": "Text_excerpt",
        "value": "Run the following to split data into train (~ 93000), development (~ 2000), and test (~ 2000):  \n\tbash split_data/split_train_test.py \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8489108801470148,
      "result": {
        "original_header": "Translation",
        "type": "Text_excerpt",
        "value": "Train the baseline model:\n\tbash translation/wmt18/train.sh \n\tpython3 subset/subset.py \n\nPlot bleu score: \n\tpython3 translation/nejm/plot_bleu.py \n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/boxiangliu/ParaMed/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ParaMed"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "boxiangliu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 94334,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 67750,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Prerequisite",
        "parent_header": [
          "ParaMed: A Parallel Corpus for Chinese-English Translation in the Medical Domain"
        ],
        "type": "Text_excerpt",
        "value": "The code in this repository was written in `python 3.7`. \n\nFirst you need to clone the repository: \n\n\tgit clone https://github.com/boxiangliu/med_translation.git\n\nThen install the following python packages if they are not installed yet. \n\n- selenium\n- numpy\n- pandas \n- matplotlib\n- seaborn\n- nltk\n\nAlso install these packages outside of python: \n\n- [eserix](https://github.com/emjotde/eserix)\n- [bifixer](https://github.com/bitextor/bifixer)\n- [Microsoft bilingual sentence aligner](https://www.microsoft.com/en-us/download/details.aspx?id=52608&from=https%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fdownloads%2Faafd5dcf-4dcc-49b2-8a22-f7055113e656%2F)\n- [OpenNMT](https://github.com/OpenNMT/OpenNMT-py)\n"
      },
      "source": "https://raw.githubusercontent.com/boxiangliu/ParaMed/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:10:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 46
      },
      "technique": "GitHub_API"
    }
  ]
}