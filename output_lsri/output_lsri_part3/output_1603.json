{
  "application_domain": [
    {
      "confidence": 12.57,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please run the cmd on the same directory of your data, if your data is on /home/example, then you may need `cd /home/example` first. The location of image and reference files is up to you.",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:",
          "General IAP version:"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsingularity run -B ./:/process -B <path-to-parent-folder-of-ref-file>:/atac_seq/Resource/Genome  <path-to-downloaded-image> -r <SE/PE> -g <mm9/mm10/hg38 etc.>  -o <read_file1>  -p <read_file2>  \n```\nIt may looks a little confusing at first time, but when you get familier with Singularity they will be friendly :)  \nFor example, if  \na) you download the image on /home/image/ATAC_IAP_v1.1.simg  \nb) the reference file on /home/src/mm10  \nc) and your data is read1.fastq.gz and read2.fastq.gz on folder /home/data  \n\nThen you need to:\n1. `cd /home/data` \n2. `singularity run -B ./:/process -B /home/src:/atac_seq/Resource/Genome  /home/image/ATAC_IAP_v1.1.simg  -r PE -g mm10 -o read1.fastq.gz -p read2.fastq.gz`  \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Zhang-lab/ATAC-seq_QC_analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-25T02:45:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-04T20:49:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atac-seq QC matrix "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.998430231426377,
      "result": {
        "original_header": "Atac-seq Integrative Analysis Pipeline",
        "type": "Text_excerpt",
        "value": "Pipeline for the QC metrics construction, data analysis and visualization of ATAC-seq data.  \nCurrent version: `AIAP_v1.1`\nLast update: `2019.12.9`    \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9322349925614887,
      "result": {
        "original_header": "parameters:",
        "type": "Text_excerpt",
        "value": "`-h`: help information  \n`-r`: SE for single-end, PE for paired-end  \n`-g`: genome reference, one simg is designed for ONLY one species due to the file size. For now the supported genoms are: <mm10/mm9/hg19/hg38/danRer10/danRer11/rn6/dm6>  \n`-o`: reads file 1 or the SE reads file, must be ended by .fastq or .fastq.gz or .sra (for both SE and PE)  \n`-p`: reads file 2 if input PE data, must be ended by .fastq or .fastq.gz  \n`-c`: (optional) specify read length minimum cutoff for methylQA filtering, default 38  \n`-t`: (optional) specify number of threads to use, default 24  \n`-i`: (optional) insertion free region finding parameters used by Wellington Algorithm (Jason Piper etc. 2013), see documentation for more details.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If you don NOT want to run IFR finding step, please just ignore the -i option; however IFR finding will use default parameters only if -i specified as 0:  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_lfp=5  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_lfp=15  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;step_lfp=2  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min_lsh=50  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_lsh=200  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;step_lsh=20  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method=BH  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p_cutoff=0.05  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If you want to specify your own parameter, please make sure they are in the same order and seperated by comma  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Example: -i 5,15,2,50,200,20,BH,0.05  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You can check the pipe log file for the parameters used by IFR code   \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation:",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline"
        ],
        "type": "Text_excerpt",
        "value": "1. Pipeline documentation: analysis details and QC metrics information  \nPlease **[ click here ](https://github.com/Zhang-lab/ATAC-seq_QC_analysis/blob/master/documents/Documentation.md)**  \n2. Potential transcription factor binding region prediction algorithm:   \nPlease **[ click here ](https://github.com/Zhang-lab/ATAC-seq_QC_analysis/blob/master/documents/ifr_documentation.md)**  \n3. Update logfile: pipeline change record  \nPlease **[ click here](https://github.com/Zhang-lab/ATAC-seq_QC_analysis/blob/master/documents/update_log.md)**  \n<br><br>"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Zhang-lab/ATAC-seq_QC_analysis/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Zhang-lab/ATAC-seq_QC_analysis/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Zhang-lab/ATAC-seq_QC_analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atac-seq Integrative Analysis Pipeline"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/AIAP_v1.00/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/AIAP_v1.00/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code/batch_result_collection.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code/ATAC_IAP_v1.1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code/find_image_ID_digest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code/DOR_analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v1.2b/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v1.2b/atac_v1.2b.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v1.2b/find_image_ID_digest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/pipe_v1.2/atac_v1.2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/pipe_v1.2/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/pipe_v1.2/find_image_ID_digest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v3.1/atac_v3.1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v3.1/update_v3.1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v3.1/nochrm_atac_v3.1b.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/v3.1/atac_v3.1b.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/AIAP_v1.00/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/AIAP_v1.00/ATAC_IAP_v1.00.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/AIAP_v1.00/DOR_analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/archive/AIAP_v1.00/target_collection/atac_181018.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_TaRGET_local/batch_result_collection.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_TaRGET_local/atac_pipe_TaRGET.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_TaRGET_local/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_TaRGET_local/find_image_ID_digest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_TaRGET_local/DOR_analysis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_AIAP/batch_result_collection.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_AIAP/qc_source.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_AIAP/find_image_ID_digest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_AIAP/ATAC_IAP_v1.00.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/pipe_code_AIAP/DOR_analysis.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Zhang-lab/ATAC-seq_QC_analysis/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ATAC-seq_QC_analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Zhang-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 430019,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 201802,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8170,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 6000,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3968,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please run the cmd on the same directory of your data, if your data is on /home/example, then you may need `cd /home/example` first. The location of image and reference files is up to you.",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:",
          "General IAP version:"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsingularity run -B ./:/process -B <path-to-parent-folder-of-ref-file>:/atac_seq/Resource/Genome  <path-to-downloaded-image> -r <SE/PE> -g <mm9/mm10/hg38 etc.>  -o <read_file1>  -p <read_file2>  \n```\nIt may looks a little confusing at first time, but when you get familier with Singularity they will be friendly :)  \nFor example, if  \na) you download the image on /home/image/ATAC_IAP_v1.1.simg  \nb) the reference file on /home/src/mm10  \nc) and your data is read1.fastq.gz and read2.fastq.gz on folder /home/data  \n\nThen you need to:\n1. `cd /home/data` \n2. `singularity run -B ./:/process -B /home/src:/atac_seq/Resource/Genome  /home/image/ATAC_IAP_v1.1.simg  -r PE -g mm10 -o read1.fastq.gz -p read2.fastq.gz`  \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:35:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Test data:",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "There are one paired-end mm10 data with 0.25M reads for test purpose, they can be downloaded by:  \n```\nwget https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/test_mm10_data/mm10_1.fastq.gz\nwget https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/test_mm10_data/mm10_2.fastq.gz\n```\n\n "
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "General IAP version:",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "Step1. download singularity images and reference files (you only need download them **ONCE**, then you can use them directly), if there is any update, you may need to download a new image, but reference files are usually **NOT** changed:  "
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:",
          "General IAP version:"
        ],
        "type": "Text_excerpt",
        "value": "Step1. download singularity images and reference files (you only need download them **ONCE**, then you can use them directly), if there is any update, you may need to download a new image, but reference files are usually **NOT** changed:  \n####  \n1. Download the singularity image:\n```\nwget https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/ATAC_IAP_v1.1.simg\n```\nIf you want to use previous version, please find them by **[ click here ](https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/)**\n\n2. Download the reference files of different genomes:\n```\nwget https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/ref_file/atac_mm10_ref.tar.gz\n```\nYou can also find more genome builds: **[ click here ](https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/atac-seq/ref_file/)**. Currently we have: mm9/10, hg19/38, danRer10/11, rn6 and dm6.\n\n3. Decompress the reference files and put to your own folder:\n```\ntar -xzf atac_mm10_ref.tar.gz\n```\n\nStep2. process data by the singularity image: "
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "TaRGET II version:",
        "parent_header": [
          "Atac-seq Integrative Analysis Pipeline",
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "1. **[ click here ](https://regmedsrv1.wustl.edu/Public_SPACE/resources/pipeline/TaRGET/)** to find the TaRGET image and download to your server  \n2. then run the code below on the same directory with your data:  \n`singularity run -B ./:/process <path-to-image> -r <SE/PE> -g <mm10/hg38>  -o <read_file1>  -p <read_file2>`  \n\nSoft link of file is supported, but you need to use **full path** of the file and mount the original location, for example:  \n```\nln -s `pwd`/myfile* /scratch/test\ncd /scratch/test\nsingularity run -B ./:/process -B /scratch/test:/scratch/test <path-to-image>  -r <SE/PE> -g <mm10/hg38>  -o <myfile_1>  -p <myfile_2>\n```  \n<br>\n\n**explaination**:  \nThe cmd is in this manner: `singularity run <options> <singularity_image_to_run> <pipeline_parameters>`  \n\n**soft link introduction**:\nIf you want to use soft link, which is much more friendly when you have a lot of data, of the data. You will only need to add one bind option for singularity, which is `-B <full-path-of-original-position>:<full-path-of-original-position>`  \nFor example, I want to soft link my data from /scratch to run on my own folder /home/example:  \n1. ln -s /scrach/mydata.fastq.gz /home/example; **Please make sure you use the absolute path**  \n2. cd /home/example  \n3. `singularity run -B ./:/process -B /home/src:/atac_seq/Resource/Genome -B /scratch:/scratch  /home/image/ATAC_IAP_v1.00.simg  -r PE -g mm10 -o read1.fastq.gz -p read2.fastq.gz`  \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-lab/ATAC-seq_QC_analysis/master/README.md",
      "technique": "header_analysis"
    }
  ]
}