{
  "application_domain": [
    {
      "confidence": 11.31,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use any part of this code or our data, please cite our\n[paper](https://doi.org/10.1093/nar/gkac216).\n\n```\n@article{kim2022marcopolo,\n  title={MarcoPolo: a method to discover differentially expressed genes in single-cell RNA-seq data without depending on prior clustering},\n  author={Kim, Chanwoo and Lee, Hanbin and Jeong, Juhee and Jung, Keehoon and Han, Buhm},\n  journal={Nucleic Acids Research},\n  year={2022}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Kim, Chanwoo and Lee, Hanbin and Jeong, Juhee and Jung, Keehoon and Han, Buhm",
        "format": "bibtex",
        "title": "MarcoPolo: a method to discover differentially expressed genes in single-cell RNA-seq data without depending on prior clustering",
        "type": "Text_excerpt",
        "value": "@article{kim2022marcopolo,\n    year = {2022},\n    journal = {Nucleic Acids Research},\n    author = {Kim, Chanwoo and Lee, Hanbin and Jeong, Juhee and Jung, Keehoon and Han, Buhm},\n    title = {MarcoPolo: a method to discover differentially expressed genes in single-cell RNA-seq data without depending on prior clustering},\n}"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chanwkimlab/MarcoPolo"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "If you have any inquiries, please feel free to contact\n- [Chanwoo Kim](https://chanwoo.kim) (Paul G. Allen School of Computer Science & Engineering @ the University of\n  Washington)"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-16T05:51:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-16T08:21:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarcoPolo is a clustering-free approach to the exploration of bimodally expressed genes along with group information in single-cell RNA-seq data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.993862496627119,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "\n`MarcoPolo` is a novel clustering-independent approach to identifying DEGs in scRNA-seq data. MarcoPolo identifies informative DEGs without depending on prior clustering, and therefore is robust to uncertainties from clustering or cell type assignment. Since DEGs are identified independent of clustering, one can utilize them to detect subtypes of a cell population that are not detected by the standard clustering, or one can utilize them to augment HVG methods to improve clustering. An advantage of our method is that it automatically learns which cells are expressed and which are not by fitting the bimodal distribution. Additionally, our framework provides analysis results in the form of an HTML file so that researchers can conveniently visualize and interpret the results. \n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.990266247867012,
      "result": {
        "type": "Text_excerpt",
        "value": "MarcoPolo is a method to discover differentially expressed genes in single-cell RNA-seq data without depending on prior clustering \n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chanwkimlab/MarcoPolo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/notebooks/MarcoPolo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/notebooks/MarcoPolo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chanwkimlab/MarcoPolo/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chanwkimlab/MarcoPolo"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/assets/overview.png"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing dataset",
        "type": "Text_excerpt",
        "value": "MarcoPolo works jointly with [AnnData](https://anndata.readthedocs.io/), a flexible and efficient data format for scRNA-seq data widely used in python community. This enables MarcoPolo to seamlessly work with other popular single cell software packages such as [scanpy](https://scanpy.readthedocs.io/), or more broadly, other packages included in the [scverse](https://scverse.org/projects/) project, etc as they also work based on AnnData. \n\nYou should prepare your scRNA-seq data in AnnData object before running MarcoPolo.\nPlease refer to the [AnnData's Getting started page](https://anndata-tutorials.readthedocs.io/en/latest/getting-started.html) for more information about AnnData.\nIf your data is in seurat object, you can very easily convert it to AnnData following the instructions [here](https://satijalab.org/seurat/articles/conversion_vignette.html).\n\nAs MarcoPolo runs on raw count data, anndata should contain the raw count data in `.X`. The structure of Anndata is described [here](https://anndata.readthedocs.io/en/latest/generated/anndata.AnnData.html). \n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install MarcoPolo",
        "parent_header": [
          "Running MarcoPolo with your local machine"
        ],
        "type": "Text_excerpt",
        "value": "We recommend using the following pipeline to install MarcoPolo. \n1. Anaconda\n\nPlease refer to https://docs.anaconda.com/anaconda/install/linux/ to install Anaconda.\nThen, please make a new conda environment and activate it.\n```\nconda create -n MarcoPolo python=3.8\nconda activate MarcoPolo\n```\n\n2. Pytorch\n\nPlease install `PyTorch` from https://pytorch.org/ (If you want to install CUDA-supported PyTorch, please install CUDA in advance)\n\n3. MarcoPolo\n\nYou can simply install MarcoPolo by using the `pip` command:\n```bash\npip install marcopolo-pytorch\n```\nIf MarcoPolo installed on your machine is outdated, you can get an updated version of MarcoPolo by using the `pip` command:\n```bash\npip install marcopolo-pytorch --upgrade\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chanwkimlab/MarcoPolo/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, single-cell"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MarcoPolo is free for academic and non-commercial use."
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/assets/mp.png"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MarcoPolo"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "chanwkimlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/marcopolo-pytorch/"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 116959,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://anndata.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scanpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://anndata-tutorials.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running MarcoPolo with Google Colab",
        "type": "Text_excerpt",
        "value": "You can easily try MarcoPolo with Google Colab: [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/chanwkimlab/MarcoPolo/blob/main/notebooks/MarcoPolo.ipynb)\n\nGoogle colab is a free cloud environment for running Python code. Colab allows you to execute MarcoPolo in your browser without any configurations and GPU resources.\n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run MarcoPolo",
        "parent_header": [
          "Running MarcoPolo with your local machine"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to this [notebook](https://github.com/chanwkimlab/MarcoPolo/blob/main/notebooks/MarcoPolo.ipynb) for the usage of MarcoPolo.\n"
      },
      "source": "https://raw.githubusercontent.com/chanwkimlab/MarcoPolo/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:53:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ]
}