{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite",
        "parent_header": [
          "*TorsiFlex*"
        ],
        "type": "Text_excerpt",
        "value": "The following publications must be cited in any work presenting results obtained\nwith _TorsiFlex_:\n\n   - D. Ferro-Costas and A. Fern\u00e1ndez-Ramos (**2020**). \u201cA Combined Systematic-Stochastic Algorithm for the Conformational Search in Flexible Acyclic Molecules\u201d. *Front. Chem.*, **8**:16.\n   - D. Ferro-Costas, I. Mosquera-Lois and A. Fern\u00e1ndez-Ramos (**2021**). \u201c_TorsiFlex_: an automatic generator of torsional conformers. Application to the twenty proteinogenic amino acids\u201d. *J. Cheminformatics.*, **13**:100.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cathedralpkg/TorsiFlex"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-15T10:06:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-16T15:24:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A program for the conformational search in flexible acyclic molecules"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of files",
        "parent_header": [
          "*TorsiFlex*"
        ],
        "type": "Text_excerpt",
        "value": " Contents of the folders distributed in this version:\n  - **src/**       : _TorsiFlex_ source files\n  - **docs/**      : Manual of _TorsiFlex_\n  - **tests/**     : All the files related to the tests set\n        \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.962360304540525,
      "result": {
        "original_header": "About *TorsiFlex*",
        "type": "Text_excerpt",
        "value": "_TorsiFlex_ is an user-friendly program written in Python 3.\nIt was designed to seek the conformers of a given molecule by\n using a combined low-level/high-level (LL/HL) methodology. \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9363981531738472,
      "result": {
        "original_header": "Licensing and Distribution",
        "type": "Text_excerpt",
        "value": "Copyright (c) 2022, David Ferro Costas (david.ferro@usc.es) and Antonio Fernandez Ramos (qf.ramos@usc.es) \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following conditions: \nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software. \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE. \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9470780284232896,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "\nIn this example Python is located in `/usr/bin/`. \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cathedralpkg/TorsiFlex/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cathedralpkg/TorsiFlex/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cathedralpkg/TorsiFlex/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cathedralpkg/TorsiFlex"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TorsiFlex"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "*TorsiFlex*"
        ],
        "type": "Text_excerpt",
        "value": "_TorsiFlex_ is a program written in Python 3. Consequently, it does not need any kind \nof compilation, as it would be the case with C or Fortran programs.\nThe user should install Python 3 in order to use _TorsiFlex_, \nas well as the following Python libraries:\n   - cmath\n   - fcntl\n   - glob\n   - math\n   - matplotlib\n   - multiprocessing\n   - numpy\n   - os\n   - random\n   - rdkit\n   - scipy\n   - sys\n   - time\n\nWARNING: __do not__ use Python 2 to execute _TorsiFlex_.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up the program",
        "parent_header": [
          "*TorsiFlex*"
        ],
        "type": "Text_excerpt",
        "value": "Before using _TorsiFlex_, the user has to define the path to the executable(s) of the \nsoftware for the electronic structure calculation (ESSO).\nAt the moment _TorsiFlex_ supports __Gaussian__ as ESSO.\n\nIn order to interact with the ESSO, _TorsiFlex_ needs to know the location of some executable files. \nSuch information is obtained from the following environment variables, which have to be \ndefined and exported by the user in their __.bashrc__ file:\n\nFor __Gaussian__, the environment variable is:\n\n  - _GauExe_, the path to the Gaussian executable and\n\nExample of paths are:\n\n  - ```export Gauexe=\"/home/programs/G09_64D/g09/g09\"``` \n\n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tests set",
        "parent_header": [
          "*TorsiFlex*"
        ],
        "type": "Text_excerpt",
        "value": "Directory __tests/__ contains the z-matrix files associated to the four worked examples (see manual). \n\n                                                            \n\n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9971246942041899,
      "result": {
        "original_header": "About *TorsiFlex*",
        "type": "Text_excerpt",
        "value": "    Name of the Program: TorsiFlex\n    Program Version : 2022.1\n    Program Version Date: Jul 12, 2022\n    Manual  Version Date: Jul 12, 2022 \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8990398058845578,
      "result": {
        "original_header": "Licensing and Distribution",
        "type": "Text_excerpt",
        "value": "_TorsiFlex version 2022.1_ \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9929285474869902,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "You can run _TorsiFlex_ by invoking the Python interpreter manually as follows:\n```python3 torsiflex.py```\n \nIf you prefer to avoid invoking the Python interpreter, you have to follow these two simple steps: \nExample:\n```#!/usr/bin/python3```\n \nMake the main program torsiflex.py executable:\n```chmod u+x torsiflex.py```\nThis allows you to run _TorsiFlex_ just using:\n```torsiflex.py```\nBefore run _TorsiFlex_, we recommend to read the help menu. It can be displayed either by typing\n```torsiflex.py --help```\nor\n```torsiflex.py -h```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8441242021813274,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "You can run _TorsiFlex_ by invoking the Python interpreter manually as follows:\n```python3 torsiflex.py```\n \nAdd as the first line in the torsiflex.py file the following:\n```#!PATH_FOR_PYTHON python```\n \nExample:\n```#!/usr/bin/python3```\n \nMake the main program torsiflex.py executable:\n```chmod u+x torsiflex.py```\nThis allows you to run _TorsiFlex_ just using:\n```torsiflex.py```\nBefore run _TorsiFlex_, we recommend to read the help menu. It can be displayed either by typing\n```torsiflex.py --help```\nor\n```torsiflex.py -h```\n \n"
      },
      "source": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cathedralpkg/TorsiFlex/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TorsiFlex"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cathedralpkg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 670853,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cathedralpkg/TorsiFlex/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cathedralpkg",
          "type": "User"
        },
        "date_created": "2022-07-12T15:50:28Z",
        "date_published": "2022-07-12T15:53:23Z",
        "description": "-----------\r\nDescription\r\n-----------\r\n\r\nA program for the conformational search in flexible acyclic molecules\r\n\r\n---------------\r\nRelease summary\r\n---------------\r\n\r\nRelease version: TorsiFlex v2022.1.\r\n\r\n_TorsiFlex_ is an user-friendly program written in Python 3.\r\nIt was designed to seek the conformers of a given molecule by\r\nusing a combined low-level/high-level (LL/HL) methodology.\r\n\r\n\r\n## Version information\r\n\r\n### Version 2022.1\r\n\r\n  **Important!** This new version is incompatible with the previous ones.\r\n\r\n  - New execution option, ```--smiles```, is now available.\r\n  - New execution option, ```--cartesian```, is now available.\r\n  - New execution option, ```--torsions```, is now available.\r\n  - A specific point of the torsional space can be calculated with ```--stoc```.\r\n  - The information printed with ```--msho``` has been slightly modified.\r\n  - The ```--msho``` execution is no longer mandatory before ```--hlopt```.\r\n  - _Gaussian_ templates are now stored in a single file.\r\n  - Conformer files of the system (inside folders defined by ```dirll``` and ```dirhl```) are no longer stored as _Gaussian_ output files.\r\n  - Keyword ```tempGibbs``` has been disabled.\r\n  - Keyword ```tempsPF``` has been renamed as ```temps```.\r\n  - Other minor changes.\r\n\r\n### Version 2021.3\r\n\r\n  - New keywords are available: _nprocll_, _nprochl_, _memll_, _memhl_, _skipcon_, _ifqrangeLL_, and _ifqrangeHL_.\r\n  - A bug related to the projection of the rotational degrees of freedom has been fixed.\r\n  - Other minor changes.\r\n\r\n### Version 2021.2\r\n\r\n  - Option ```--syst``` is now renamed as ```--prec```\r\n  - A bug related to the calculation of the rovibrational partition function for transition state structures has been fixed.\r\n  - Other minor changes.",
        "html_url": "https://github.com/cathedralpkg/TorsiFlex/releases/tag/2022.1",
        "name": "TorsiFlex-v2022.1",
        "release_id": 71817907,
        "tag": "2022.1",
        "tarball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/tarball/2022.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/71817907",
        "value": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/71817907",
        "zipball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/zipball/2022.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cathedralpkg",
          "type": "User"
        },
        "date_created": "2021-11-22T10:34:51Z",
        "date_published": "2021-11-22T10:38:14Z",
        "description": "-----------\r\nDescription\r\n-----------\r\n\r\nA program for the conformational search in flexible acyclic molecules\r\n\r\n---------------\r\nRelease summary\r\n---------------\r\n\r\nRelease version: TorsiFlex v2021.3.\r\n\r\n_TorsiFlex_ is an user-friendly program written in Python 3.\r\nIt was designed to seek the conformers of a given molecule by\r\nusing a combined low-level/high-level (LL/HL) methodology.\r\n\r\n\r\n## Version information\r\n\r\n### Version 2021.3\r\n\r\n  - New keywords are available: _nprocll_, _nprochl_, _memll_, _memhl_, _skipcon_, _ifqrangeLL_, and _ifqrangeHL_.\r\n  - A bug related to the projection of the rotational degrees of freedom has been fixed.\r\n  - Other minor changes.\r\n\r\n### Version 2021.2\r\n\r\n  - Option ```--syst``` is now renamed as ```--prec```\r\n  - A bug related to the calculation of the rovibrational partition function for transition state structures has been fixed.",
        "html_url": "https://github.com/cathedralpkg/TorsiFlex/releases/tag/2021.3",
        "name": "TorsiFlex-v2021.3",
        "release_id": 53828329,
        "tag": "2021.3",
        "tarball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/tarball/2021.3",
        "type": "Release",
        "url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/53828329",
        "value": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/53828329",
        "zipball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/zipball/2021.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cathedralpkg",
          "type": "User"
        },
        "date_created": "2021-05-04T12:51:56Z",
        "date_published": "2021-05-04T12:54:11Z",
        "description": "Release version: TorsiFlex v2021.2.\r\n\r\n_TorsiFlex_ is an user-friendly program written in Python 3.\r\nIt was designed to seek the conformers of a given molecule by\r\nusing a combined low-level/high-level (LL/HL) methodology.\r\n",
        "html_url": "https://github.com/cathedralpkg/TorsiFlex/releases/tag/2021.2",
        "name": "TorsiFlex-v2021.2",
        "release_id": 42413295,
        "tag": "2021.2",
        "tarball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/tarball/2021.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/42413295",
        "value": "https://api.github.com/repos/cathedralpkg/TorsiFlex/releases/42413295",
        "zipball_url": "https://api.github.com/repos/cathedralpkg/TorsiFlex/zipball/2021.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:28:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ]
}