{
  "application_domain": [
    {
      "confidence": 24.22,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VistaSohrab/TEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-16T16:11:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-05T13:06:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A bioinformatics tool for detecting novel transposable element insertions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9297528494180067,
      "result": {
        "original_header": "TEfinder",
        "type": "Text_excerpt",
        "value": "TEfinder uses discordant reads to detect novel transposable element insertion events in paired-end sample sequencing data.  \nExample command to change fragment insert size to 500, set maximum TSD length to 30, create GTF output, and include all intermediate files:\n```\nTEfinder -alignment sample.bam -fa reference.fa -gtf TEs.gtf -te List_of_TEs.txt \\\n         -fis 500 -k 30 -out GTF -intermed yes\n```\n**Output files:**\n* TE_insertions.bed contains identified TE insertion events in sample (in the final column, FILTER attribute with \"PASS\" refers to high confidence insertion events while instances labeled as \"in_repeat\", \"weak_evidence\", \"strand bias\" or a combination of these three labels indicate less confident insertion events)\n* TE_insertions.gtf is provided with the same information as the BED file if using -out GTF\n* DiscordantReads.bam contains all discordant reads that have been identified based on the TEs of interest that have been submitted to TEfinder \n  If alignment has already been completed without specifying read group information, Picard's AddOrReplaceReadGroups function can generate read group information provided\n  the binary alignment file (BAM):\n  ```\n  java -jar picard.jar AddOrReplaceReadGroups \\\n      I=input.bam \\\n      O=sample.bam \\\n      RGID=sample \\\n      RGLB=LIB \\\n      RGPL=illumina \\\n      RGPU=unit1 \\\n      RGSM=sample\n   ```\n* Please ensure that the TE names of interest are separated by newline character \"\\n\" and not carriage return \"\\r\". \n  If carriage return is present, please replace all instances of \"\\r\\n\" with \"\\n\".\n  *This issue is generally encountered by Windows users.* \n  ```\n   awk -F '\\t' '{print $9}' TEs.gtf | awk -F '\"' '{print $2}' | sort | uniq > List_of_TEs.txt\n  ```\n  *This command may not yield the desired format of TE names as it depends on the structure of the attribute column of the GTF file and would need to be modified for specific cases.*  \n* Modifying the maximum TSD length (-k) could be useful if there is an unexpected number of insertion events identified with the default parameter.\n  The optimal maximum TSD length can vary across datasets. \n"
      },
      "source": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VistaSohrab/TEfinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VistaSohrab/TEfinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VistaSohrab/TEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TEfinder"
      },
      "source": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4479946"
      },
      "source": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9926859618333355,
      "result": {
        "original_header": "TEfinder",
        "type": "Text_excerpt",
        "value": "**Software dependencies:**\n* Bedtools 2.28.0 or later\n* Samtools 1.3 or later\n* Picard 2.0.1 or later \nDefault run:\n```\nTEfinder -alignment sample.bam -fa reference.fa -gtf TEs.gtf -te List_of_TEs.txt\n```\nNote: In the test_dataset folder, the alignment file used for testing is gzipped so please use\n      BASH2* \n      prior to running TEfinder. The expected test run result (sample_TEinsertions.bed) is provided for comparison. \n"
      },
      "source": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8423185165269963,
      "result": {
        "original_header": "TEfinder",
        "type": "Text_excerpt",
        "value": "**Optional arguments with default values in brackets:**\n* -fis:        short-read sequencing fragment insert size [400]\n* -picard:     path to Picard Tools .jar file [picard.jar]\n* -md:         maximum distance between reads for bedtools merge [150]\n* -k:          maximum TE target site duplication (TSD) length [20]\n* -maxHeapMem: java maximum heap memory allocation for picard in MB [2000]\n* -workingdir: working directory name [TEfinder_Date]\n* -out:        output format as GTF [BED]\n* -outname:    output name prefix added to file names [null]\n* -threads:    number of threads for samtools multi-threading [1]\n* -intermed:   keep intermediate files created by pipeline [no]\n* -h:          prints help option\n \n**Usage:** \nDefault run:\n```\nTEfinder -alignment sample.bam -fa reference.fa -gtf TEs.gtf -te List_of_TEs.txt\n```\nNote: In the test_dataset folder, the alignment file used for testing is gzipped so please use\n      BASH2* \n      prior to running TEfinder. The expected test run result (sample_TEinsertions.bed) is provided for comparison. \n"
      },
      "source": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VistaSohrab/TEfinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TEfinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "VistaSohrab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12335,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VistaSohrab/TEfinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VistaSohrab",
          "type": "User"
        },
        "date_created": "2021-01-29T16:51:00Z",
        "date_published": "2021-01-29T19:03:52Z",
        "description": "This release provides testing dataset with results and an updated manual.\r\n",
        "html_url": "https://github.com/VistaSohrab/TEfinder/releases/tag/1.0.1",
        "name": "TEfinder version 1.0.1",
        "release_id": 37100139,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/VistaSohrab/TEfinder/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/VistaSohrab/TEfinder/releases/37100139",
        "value": "https://api.github.com/repos/VistaSohrab/TEfinder/releases/37100139",
        "zipball_url": "https://api.github.com/repos/VistaSohrab/TEfinder/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VistaSohrab",
          "type": "User"
        },
        "date_created": "2021-01-18T02:34:49Z",
        "date_published": "2021-01-18T13:19:56Z",
        "description": "This is the first release of TEfinder.\r\n\r\n\r\nUpdates:\r\n* GTF output available with -out gtf specified in TEfinder command\r\n* SAM format with read group in header also accepted as sample alignment input\r\n* Multithreading for Samtools commands with -threads option\r\n* Filtering of identified insertion events using tags: \"in_repeat\", \"weak_evidence\", \"strand_bias\", PASS \r\n* Default removal of all intermediate files unless -intermed yes specified in TEfinder command",
        "html_url": "https://github.com/VistaSohrab/TEfinder/releases/tag/1.0.0",
        "name": "TEfinder version 1.0.0",
        "release_id": 36549278,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/VistaSohrab/TEfinder/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/VistaSohrab/TEfinder/releases/36549278",
        "value": "https://api.github.com/repos/VistaSohrab/TEfinder/releases/36549278",
        "zipball_url": "https://api.github.com/repos/VistaSohrab/TEfinder/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:10:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}