{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/igem-ulaval/toeholder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-22T20:57:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-19T11:57:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Team iGEM ULaval 2019 scripts for toehold design"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "toeholder"
        ],
        "type": "Text_excerpt",
        "value": "Toeholder is a tool that can efficiently design toehold riboswitches for the detection of a target gene. A toehold riboswitch is an RNA molecule that contains the necessary elements for the expression of a reporter gene, i. e. a ribosome binding sequence (RBS), a start codon, and the reporter gene sequence. What makes toehold riboswitches special is that they fold into a secondary structure that blocks the access of the ribosome to the RBS, thus preventing gene expression. However, they are carefully designed so that they can bind to a trigger sequence within a target gene, which results in the unfolding of the secondary structure and allows the expression of the reporter gene (Green et al. 2014. Cell.). Applications for toehold riboswitches range from detection of sequences of pathogenic organisms (Pardee, et al. 2016. Cell; Ma, et al. 2018. Synthetic Biology) to creating logical systems (Green et al. 2014. Cell; Green, et al. 2017. Nature).\n\n![](Figures/toehold_diagram.png)\n\nToeholder aims to facilitate the design of these molecules by offering the following capabilities:\n- Testing all the different trigger sequences within a target gene.\n- Simulating the secondary structure of the proposed riboswitch for each trigger.\n- Simulating the binding of each toehold riboswitch to the target gene to test if it binds accurately to its corresponding trigger.\n- Aligning to user-defined genomes in order to select generalist or specific riboswitches as needed\n\nThe above tests have allowed us to design toehold riboswitches for different organisms. Secondary structures obtained are very close to the ones observed for the riboswitches published by Green et al. (2014), and 70-79% of them are predicted to bind perfectly to their trigger sequences within the target gene. The remaining 21-30% are identified as binding partially or with a shift to the target or as having stop codons at undesirable positions, which allows discarding them. Finally, the alignment function has allowed us to design toeholds that are specific for the genome of a given strain, but also to select those that have matches in several strains of the same organism. All in all, these functions make toeholder a very versatile tool.\n\nFor further information, please refer to our wiki:\nhttps://2019.igem.org/Team:ULaval\n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9064509637673952,
      "result": {
        "original_header": "Scripts",
        "type": "Text_excerpt",
        "value": "- toeholder.py: Sweeps through the sequence of the target gene looking for suitable candidate recognition sequences. All candidate recognition sequences are evaluated based on the following parameters:\n\t- Secondary structure on the mRNA\n\t- ddG of the bound (toehold + target) and unbound state (toehold and target, separately) \n- input_variables.py: Defines tunable parameters and input files for the toeholder script. \n- alignments.py: Aligns the toeholds to a selected set of reference genomes to identify matches. Toeholds matching more than one sequence or matching sequences from other genomes would not be completely specific to the target.\n \n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9165221152977914,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "The workflow is fully automated to be executed as follows as long as all the scripts are in the current directory:\n```\npython toeholder.py\n```\n \nThe input_variables.py script contains all the necessary adjustable variables for the script, including:\n- Input sequence (FASTA formatted)\n- Length of the unpaired region of the recognition sequence (\u03b1 in the diagram)\n- Length of the paired region of the recognition sequence (\u03b2 in the diagram)\n- Path to the output folder\n- Reporter gene or tag to be added to the end of the toehold\n- Input sequence molecule type (DNA or RNA)\n- List of reference genomes, tab separated, and formatted as follows (without headers): \n- Percentage identity threshold for hits to retain from the alignments\n- Evalue threshold for hits to retain from the alignments\n- Minimum number of unpaired bases in the secondary structure of the target mRNA for a candidate trigger to be considered \n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9205637493447523,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "The toeholder.py script generates an output folder with a subfolder for each of the candidate toeholds generated. When the candidate toehold contains a stop codon, its corresponding subfolder is empty. When it does not contain a stop codon, there are four files inside the subfolder:\n- switch1_python.in: NUPACK-formatted input to test the toehold's secondary structure.\n- switch1_python.mfe: NUPACK-formatted output with the most favorable secondary structure.\n- toehold_mRNA.in: NUPACK-formatted input to test the toehold's ability to bind to the target mRNA.\n- toehold_mRNA.mfe: NUPACK-formatted output with the most favorable structure of the toehold-mRNA complex. \nOutside those folders, the rest of the files are:\n- input_variables.py: Copy of the input variables used for this run.\n- mRNA.in: NUPACK-formatted input to test the mRNA's secondary structure.\n- mRNA.mfe: NUPACK-formatted output with the most favorable secondary structure for the mRNA.\n- toehold_candidates.txt: First list of toeholds ranked by the number of non-paired positions in the secondary structure of the trigger region of the target mRNA.\n- toehold_seqs.fasta: FASTA-formatted file containing the recognition sequences for each of the toeholds.\n- all_toeholds_results.txt: Results of the tests performed on the toeholds. It adds the following columns to the toehold_candidates.txt file:\n\t- Toehold index\n\t- deltaG of binding of the toehold-mRNA complex\n\t- Percentage of paired bases of the toehold-mRNA complex that correspond the intended base pairing\n\t- deltaG of folding of the toehold secondary structure\n\t- deltaG of folding of the mRNA secondary structure\n\t- GC content of the toehold recognition sequence\n\t- GC content at the most stable (GC strong) and least stable (GC weak) positions from our molecular dynamics simulation of toehold 1 from Green et al., 2014. Cell\n\t- deltaG of refolding of the RBS-linker section of the toehold switch\n- \\<tag\\>_toeholds_alignment.aln: Output of the BLAST alignment of the library of toeholds to the genome referenced with the corresponding tag in the genome list.\n- all_toeholds_results_genome_matches.txt: Adds the counts of matches for each toehold in each of the genomes referenced in the genome list. \n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/igem-ulaval/toeholder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/igem-ulaval/toeholder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "igem-ulaval/toeholder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "toeholder"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/Figures/toehold_diagram.png"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.965663585336543,
      "result": {
        "original_header": "Scripts",
        "type": "Text_excerpt",
        "value": "All scripts are written in Python 3 and depend on the following libraries \n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/igem-ulaval/toeholder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 igem-ulaval\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/Figures/toeholder.png"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "toeholder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "igem-ulaval"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 26721,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "toeholder"
        ],
        "type": "Text_excerpt",
        "value": "The following programs must be installed and added to the PATH:\n- NUPACK (Zadeh et al. 2011. Journal of Computational Chemistry): available at http://www.nupack.org/downloads\n- BLAST+ (Camacho et al. 2009. BMC Bioinformatics): available at https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\n\nBLAST+ can also be installed with the following command line:\n\n```\nsudo apt-get install ncbi-blast+\n```\n\nIt also depends on the following Python libraries:\n- Biopython (Cock et al. 2009. Bioinformatics)\n- Numpy\n- Pandas\n\nThese libraries can be installed with the following commands:\n\n```\npip3 install biopython\npip3 install numpy\npip3 install pandas\n```\n"
      },
      "source": "https://raw.githubusercontent.com/igem-ulaval/toeholder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:44:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}