{
  "application_domain": [
    {
      "confidence": 0.8762955686896157,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Rmapper"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPlease, if you use this tool in an academic setting cite the following paper:\r\n\r\n    @inproceedings{Mukherjee20,\r\n    author    = {Kingshuk Mukherjee and \r\n                 Massimiliano Rossi and \r\n                 Leena Salmela and \r\n                 Christina Boucher},\r\n    title     = {Fast and efficient Rmap assembly using bi-labelled de Bruijn graph},\r\n    booktitle = {20th International Workshop on Algorithms in Bioinformatics (WABI 2020)},\r\n    year      = {2020},\r\n    series    = {LIPIcs},\r\n    volume    = {172},\r\n    pages     = {9:1--9:16},\r\n    publisher ={Schloss Dagstuhl-Leibniz-Zentrum f{\\\"u}r Informatik},\r\n    url       = {https://doi.org/10.4230/LIPIcs.WABI.2020.9}\r\n    }\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Kingshuk Mukherjee and \nMassimiliano Rossi and \nLeena Salmela and \nChristina Boucher",
        "format": "bibtex",
        "title": "Fast and efficient Rmap assembly using bi-labelled de Bruijn graph",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.4230/LIPIcs.WABI.2020.9",
        "value": "@inproceedings{Mukherjee20,\n    url = {https://doi.org/10.4230/LIPIcs.WABI.2020.9},\n    publisher = {Schloss Dagstuhl-Leibniz-Zentrum f{\\\"u}r Informatik},\n    pages = {9:1--9:16},\n    volume = {172},\n    series = {LIPIcs},\n    year = {2020},\n    booktitle = {20th International Workshop on Algorithms in Bioinformatics (WABI 2020)},\n    title = {Fast and efficient Rmap assembly using bi-labelled de Bruijn graph},\n    author = {Kingshuk Mukherjee and \nMassimiliano Rossi and \nLeena Salmela and \nChristina Boucher},\n}"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kingufl/Rmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-18T00:36:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-24T21:09:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Optical map assembly software"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.923599709506683,
      "result": {
        "original_header": "Rmapper",
        "type": "Text_excerpt",
        "value": "\r\nRmapper is a tool for optical map assembly using de Bruijn graph.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation:",
        "parent_header": [
          "Rmapper",
          "Authors"
        ],
        "type": "Text_excerpt",
        "value": "\r\n* [Massimiliano Rossi](https://github.com/maxrossi91)"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kingufl/Rmapper/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kingufl/Rmapper/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kingufl/Rmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rmapper"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9975763333802021,
      "result": {
        "original_header": "Compilation",
        "type": "Text_excerpt",
        "value": "\r\nYou can compile `rmapper` executing `make` in the main directory.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kingufl/Rmapper/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rmapper"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kingufl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 66613,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 146,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:24:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Rmapper"
        ],
        "type": "Text_excerpt",
        "value": "After compiling, you can build the bi-labelled de Bruijn graph using\r\n\r\n``` bash\r\n./rmapper-build infile [-k ksize] [-d dsize] [-f tf] [-l tl] [-r rev] [-o output]\r\n\r\nComputes the bi-labelled de Bruijn graph of the error-corrected rmaps in [infile].\r\n  ksize: [integer] - k-mer size (def. 6)\r\n  dsize: [integer] - minimum distance between two k-mers in a bi-label. (def. 15000)\r\n     tf: [integer] - fragment proximal error tollerance. (def. 500)\r\n     tl: [integer] - length proximal error tollerance. (def. 2000)\r\n    rev: [boolean] - include reverse rmaps. (def. false)\r\n output: [string]  - output directory that must exists. (def. .)\r\n```\r\nThen the graph can be traversed using\r\n\r\n``` bash\r\n./rmapper-traverse indir\r\n\r\nTraverse the bi-labelled de Bruijn graph in the directory [indir].\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Rmapper"
        ],
        "type": "Text_excerpt",
        "value": "\r\nYou can download the example data from [here](https://drive.google.com/drive/folders/1CxYtVUTEYq4CybTHCxfyj9E4jNCWd_Xt?usp=sharing) using\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*E. coli* simulated rmaps",
        "parent_header": [
          "Rmapper",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Download the rmaps\r\n``` bash\r\nwget -O ecoli_corrected.val 'https://docs.google.com/uc?export=download&id=1SUt7plSAZ6d7uHofxnIk1qrYUWbAzQJt'\r\n```\r\nBuild and traverse the graph\r\n``` bash\r\nmkdir ecoli_output\r\n./rmapper-build ecoli_corrected.val -k 6 -d 15000 -f 500 -o ecoli_output/\r\n./rmapper-traverse ecoli_output/\r\n```\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "*Human* simulated rmaps",
        "parent_header": [
          "Rmapper",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Download the rmaps\r\n``` bash\r\nwget -O human_corrected.val 'https://docs.google.com/uc?export=download&id=1mCXT67lwB2Zh0FCnoIX_DTP2k7ZK51vE'\r\n```\r\nBuild and traverse the graph\r\n``` bash\r\nmkdir human_output\r\n./rmapper-build ecoli_corrected.val -k 6 -d 25000 -f 1500 -o human_output/\r\n./rmapper-traverse human_output/\r\n```\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kingufl/Rmapper/master/README.md",
      "technique": "header_analysis"
    }
  ]
}