{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "PCprophet"
        ],
        "type": "Text_excerpt",
        "value": "* [mojaje](https://github.com/mojaie/pygosemsim) for the implementation of GO tree parsing.\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anfoss/PCprophet"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Contributing to PCprophet\n\n\n## I only have a question!\n\n> **Note:** Please don't file an issue to ask a question\n\n## What should I know before I get started?\n\n### PCprophet modules\n\nPCprophet is organized in a modular way. We have two kind of modules. First are core modules, which are characterized by the runner() method and that are called directly by the main.py.\nThe rest are modules which have functions used by more than one module, or for which having a core module was unnecessary.\n\n##### Core modules\n\n* main.py - Top level module controlling the program flow and the setup of all parameters. Creates the .conf file\n* map_to_database.py - Reads in the database (either PPI or complexes) and map the protein matrix into complexes. Performs rescaling and normalization and create the transf_matrix.txt file\n* hypothesis.py - Performs hypothesis generation as described in the vignette and creates the transf_matrix_splitted.txt file\n* merge.py - Merge hypothesis and database together before feature generation.\n* generate_feature.py - Generate features and creates the peak_list.txt file\n* predict.py - Load pickled sklearn module and returns class probability for every sample\n* collapse.py - Experiment-wide and protein-centric merging of all complexes after FDR control\n* differential.py - Performs differential analysis\n* plots.py - Ensamble of plotting functions\n\n#### Other modules\n\n* aligner.py - Experiment-wide alignement using internal housekeeping complexes\n* exceptions.py - Specific PCprophet exceptions\n* go_fdr.py - GO-based FDR calculation as described in the vignette\n* io_.py - I/O methods\n* mcl.py - Markov based clustering for generating possible complexes from a ppi network\n* parse_go.py - Implements GO based tree search and similarity methods calculation\n* stats_py - Frequently used statistical metrics\n* validate_input.py - Input tester\n\n\n## How Can I Contribute?\n\n### Reporting Bugs\n\nThis section guides you through submitting a bug report for PCprophet.\n\n\n> **Note:** If you find a **Closed** issue that seems like it is the same thing that you're experiencing, open a new issue and include a link to the original issue in the body of your new one.\n\n#### Before Submitting A Bug Report\n\n* **Check the [Vignette](https://github.com/fossatiA/PCprophet/blob/master/PCprophet_instructions.md)** for a list of common questions and problems.\n\n\n#### How Do I Submit A (Good) Bug Report?\n\n\nExplain the problem and include details to help maintainers reproduce the problem:\n\n* **Use a clear and descriptive title** for the issue to identify the problem.\n* **Provide example of sample_ids.txt and a sample of the input matrix used**. Include links to files that can be useful for us to reproduce the error and to help us solving this issue faster\n* **Report the error/exception raised and which parameters were used**\n* **Copy the .conf file and .spec file from PCprophet**\n* **Copy the terminal output** Every module in case of correct behaviour will print a message at the end of the runner() method. This ease up to point at faulty modules and can tell us if the previous modules failed or behaved as expected. Please copy that and attach it to the bug report\n\nProvide more context by answering these questions:\n\n* **Can you reproduce the problem in by running different files?**\n* **Did the problem start happening recently** (e.g. after updating to a new version of Python or dependencies) or was this always a problem?\n* If the problem started happening recently, **Can you reproduce the problem in a older environment**\n\nInclude details about your configuration and environment:\n\n* **Which version of Python are you using?**\n\n* **What's the name and version of the OS you're using**?\n* **Are all the Python packages needed meeting the minimum version required?**\n\n### How to propose a new feature\n\nOur final goal is to allow biologists to have a quick and easy way to analyze co-fractionation data. We tried to implement most of the features we would like to have but of course something can always be added. Just contact [FossatiA](https://github.com/fossatiA) explaining\n\n* Which feature would need to be added\n\n* Rational\n\n* In which module it should be added\n\n## Styleguides\n\nFor contributing we have the following code style for Python\n\n### Python Styleguide\n\n**We mostly refers to PEP8 for syntax and in general coding styles. Below are some of the major styleguides**\n\n* Functions lowercase and _ are used when a space would be needed\n\n\n```python\ndef do_something_important():\n    \"\"\"\n    does something important\n    \"\"\"\n    pass\n```\n\n* Classes definition in CamelCase\n\n\n```python\nclass ImportantClass(object):\n    \"\"\"\n    docstring for ImportantClass\n    \"\"\"\n    def __init__(self, arg):\n        super(ImportantClass, self).__init__()\n        self.arg = arg\n```\n\n\n* Line length is 80 characters, apart when a long chained Pandas statement is used. We use spaces over tabs as separator due to the consistency across different ide\n\n```python\n(df.groupby[['x','y']]\n.apply(lambda x: (np.max(x['z'])-np.min(x['z'])))\n.sort_values(ascending=False))\n```\n\n\n* Functions that do not returns explicitly a value should return True\nso they can be tested easily\n\n```python\ndef do_something_important():\n    \"\"\"\n    does something important\n    \"\"\"\n    return True\n\n\ndef test_do_something_important():\n    \"\"\"\n    test do something important\n    \"\"\"\n    if do_something_important():\n        pass\n    else:\n        raise DoSomeThingImportException\n```\n* Functions used only once in a specific module or function should be encapsulated within the function they are called in. We used both lambdas or functions depending on the context\n\n```python\ndef do_something_important(df):\n    \"\"\"\n    does something important\n    \"\"\"\n    def does_something_important_but_only_here(things):\n        \"\"\"\n        does something important but only here\n        very long function\n        \"\"\"\n        pass\n    does_something_important_but_only_here()\n    return True\n\n```\n\n\n### Documentation Styleguide\n\n* Use [Markdown](https://daringfireball.net/projects/markdown)\n\n\n### Code formatting Guidelines\n\n* Use [Black](https://github.com/psf/black)\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "PCprophet"
        ],
        "type": "Text_excerpt",
        "value": "Please read [CONTRIBUTING.md](https://github.com/anfoss/PCprophet/blob/master/CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-24T13:11:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-04T12:20:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Framework for systematic discovery of novel complexes and differential analysis of cofractionation MS datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.991084999443395,
      "result": {
        "original_header": "PCprophet",
        "type": "Text_excerpt",
        "value": "Software toolkit for protein complex prediction and differential analysis of cofractionation mass spectrometry datasets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anfoss/PCprophet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anfoss/PCprophet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anfoss/PCprophet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PCprophet"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "PCprophet",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "We recommend using [anaconda](https://www.anaconda.com) as it contains the majority of the required packages for PCprophet. If you are using Windows and having problems adding paths of anaconda and Python, please click [here](https://www.datacamp.com/community/tutorials/installing-anaconda-windows) for guidance. Please also refer to this [page](https://stackoverflow.com/questions/54063285/numpy-is-already-installed-with-anaconda-but-i-get-an-importerror-dll-load-fail) for potential errors when importing python packages in Windows.\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line version",
        "parent_header": [
          "PCprophet",
          "Getting Started",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "Ensure that you have installed the GitHub tool and 'git-lfs' command specifically for large file transfer. Please see [here](https://gist.github.com/derhuerst/1b15ff4652a867391f03) for installing GitHub and [here](https://help.github.com/en/github/managing-large-files/installing-git-large-file-storage) for the installing 'git-lfs' command.\n\n```\ngit-lfs clone https://github.com/anfoss/PCprophet PCprophet\n```\nThis will get you a working copy of PCprophet into a folder called PCprophet. Please go to the 'PCprophet' folder to unzip 'tmp_GO_sp_only.txt.zip'. You then should be able to see the tmp_GO_sp_only.txt file in the same folder. Note that the 'tmp_GO_sp_only.txt' file must be under the 'PCprophet' folder.\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anfoss/PCprophet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "machine-learning, proteomics, python3, signal-processing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 fossatiA\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "PCprophet"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\nPCprophet citation:\n\nFossati, A., Li, C., Uliana, F., Wendt, F., Frommelt, F., Sykacek, P., Heusel, M., Hallal, M., Bludau, I., Capraz, T., Xue, P., Song, J., Wollscheid, B., Purcell, A. W., Gstaiger, M., & Aebersold, R. (2021). PCprophet: a framework for protein complex prediction and differential analysis using proteomic data. Nature Methods, 13. https://doi.org/10.1038/s41592-021-01107-5\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PCprophet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "anfoss"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 138908,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anfoss",
          "type": "User"
        },
        "date_created": "2021-09-08T17:06:13Z",
        "date_published": "2021-09-08T17:21:34Z",
        "description": "- Major improvements in speed for feature generation by using Dask dataframe\r\n",
        "html_url": "https://github.com/anfoss/PCprophet/releases/tag/1.2",
        "name": "v1.2",
        "release_id": 49216348,
        "tag": "1.2",
        "tarball_url": "https://api.github.com/repos/anfoss/PCprophet/tarball/1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/anfoss/PCprophet/releases/49216348",
        "value": "https://api.github.com/repos/anfoss/PCprophet/releases/49216348",
        "zipball_url": "https://api.github.com/repos/anfoss/PCprophet/zipball/1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anfoss",
          "type": "User"
        },
        "date_created": "2021-02-17T00:20:21Z",
        "date_published": "2021-03-02T22:41:34Z",
        "html_url": "https://github.com/anfoss/PCprophet/releases/tag/1.1",
        "name": "V1.1",
        "release_id": 39147855,
        "tag": "1.1",
        "tarball_url": "https://api.github.com/repos/anfoss/PCprophet/tarball/1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/anfoss/PCprophet/releases/39147855",
        "value": "https://api.github.com/repos/anfoss/PCprophet/releases/39147855",
        "zipball_url": "https://api.github.com/repos/anfoss/PCprophet/zipball/1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anfoss",
          "type": "User"
        },
        "date_created": "2021-02-17T00:20:21Z",
        "date_published": "2021-03-02T22:39:43Z",
        "description": "Publication release of PCprophet",
        "html_url": "https://github.com/anfoss/PCprophet/releases/tag/1.0",
        "name": "PCprophet v1.0",
        "release_id": 39147783,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/anfoss/PCprophet/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/anfoss/PCprophet/releases/39147783",
        "value": "https://api.github.com/repos/anfoss/PCprophet/releases/39147783",
        "zipball_url": "https://api.github.com/repos/anfoss/PCprophet/zipball/1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anfoss",
          "type": "User"
        },
        "date_created": "2020-05-06T11:21:42Z",
        "date_published": "2020-05-06T11:23:26Z",
        "description": "[RELEASE] first release v0.1.0-beta-2",
        "html_url": "https://github.com/anfoss/PCprophet/releases/tag/v0.1.0-beta-2",
        "name": "PCprophet",
        "release_id": 26221602,
        "tag": "v0.1.0-beta-2",
        "tarball_url": "https://api.github.com/repos/anfoss/PCprophet/tarball/v0.1.0-beta-2",
        "type": "Release",
        "url": "https://api.github.com/repos/anfoss/PCprophet/releases/26221602",
        "value": "https://api.github.com/repos/anfoss/PCprophet/releases/26221602",
        "zipball_url": "https://api.github.com/repos/anfoss/PCprophet/zipball/v0.1.0-beta-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "PCprophet",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "* [Python >=3.4.x](https://www.python.org)\n* [Sklearn 0.23.2](https://pypi.org/project/sklearn/)\n* [NetworkX v2.4](https://networkx.github.io)\n* [Pandas >=1.23](https://pandas.pydata.org)\n* [Scipy >=1.5.2](https://www.scipy.org)\n* [Dask >=2.30.0](https://dask.org)\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:55:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "PCprophet"
        ],
        "type": "Text_excerpt",
        "value": "These instructions will guide you to obtain a copy of the project, to run on your local machine, and to test the compatibility with your current Python packages."
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line version",
        "parent_header": [
          "PCprophet",
          "Getting Started",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "Ensure that you have installed the GitHub tool and 'git-lfs' command specifically for large file transfer. Please see [here](https://gist.github.com/derhuerst/1b15ff4652a867391f03) for installing GitHub and [here](https://help.github.com/en/github/managing-large-files/installing-git-large-file-storage) for the installing 'git-lfs' command.\n\n```\ngit-lfs clone https://github.com/anfoss/PCprophet PCprophet\n```\nThis will get you a working copy of PCprophet into a folder called PCprophet. Please go to the 'PCprophet' folder to unzip 'tmp_GO_sp_only.txt.zip'. You then should be able to see the tmp_GO_sp_only.txt file in the same folder. Note that the 'tmp_GO_sp_only.txt' file must be under the 'PCprophet' folder.\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "PCprophet"
        ],
        "type": "Text_excerpt",
        "value": "For usage of PCprophet, refer to the [PCprophet_instructions.md](https://github.com/anfoss/PCprophet/blob/master/PCprophet_instructions.md).\n\n"
      },
      "source": "https://raw.githubusercontent.com/anfoss/PCprophet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}