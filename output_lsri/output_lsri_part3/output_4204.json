{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Referencing this code",
        "parent_header": [
          "PyFLOSIC"
        ],
        "type": "Text_excerpt",
        "value": "If you use the PyFLOSIC code for a scientific article or contribution, please cite the following article: \n\n* **PyFLOSIC: Python-based Fermi-L\u00f6wdin orbital self-interaction correction**  \n  Sebastian Schwalbe, Lenz Fiedler, Jakob Kraus, Jens Kortus, Kai Trepte, and Susi Lehtola\n  Journal of Chemical Physics 153:084104, August 2020. [DOI:10.1063/5.0012519](https://doi.org/10.1063/5.0012519) [arXiv](https://arxiv.org/abs/1905.02631)\n  \nApplications of the PyFLOSIC code:     \n* [Interpretation and Automatic Generation of Fermi\u2010Orbital Descriptors](https://onlinelibrary.wiley.com/doi/full/10.1002/jcc.26062)\n* [Stretched or noded orbital densities and self-interaction correction in density functional theory](https://aip.scitation.org/doi/10.1063/1.5087065)\n  "
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pyflosic/pyflosic"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-09T08:18:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-21T16:08:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python-based Fermi-L\u00f6wdin orbital self-interaction-correction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Theoretical foundations",
        "parent_header": [
          "PyFLOSIC"
        ],
        "type": "Text_excerpt",
        "value": "* Mark R. Pederson, Adrienn Ruzsinszky, and John P. Perdew. Communication: Self-interaction correction with unitary invariance in density functional theory. The Journal of Chemical Physics, 140(12):121103, March 2014.\n* Zeng-hui Yang, Mark R. Pederson, and John P. Perdew. Full self-consistency in the Fermi-orbital self-interaction correction. Physical Review A, 95(5):052505, May 2017.  \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.951251994317815,
      "result": {
        "original_header": "PyFLOSIC",
        "type": "Text_excerpt",
        "value": "The following document will guide you through the setup and show you how to get started with this Python-based FLO-SIC code.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624426477047755,
      "result": {
        "original_header": "Contents",
        "type": "Text_excerpt",
        "value": "- *INSTALL.md*: Installation guide in Markdown (md) language. \n- *AUTHORS.md*: The authors of PyFLOSIC along with contact information.\n- *VERSION.md*: The version of PyFLOSIC you have acquired.\n- *src/*: Contains the source files for PyFLOSIC.\n- *examples/*: Contains useful examples to get started with PyFLOSIC.\n- *doc/*: Can provide additional information on the code features. \n- *utils/*: Utilities that are useful for PyFLOSIC.\n- *test/*: Contains a version control test.\n- *LICENSE*: APACHE2 license file. \nPlease see the application examples in the folder examples for an in-depth introduction to the PyFLOSIC code. \nThe self-interaction error (SIE) is one of the mayor drawbacks of one of the most widley used electronic structure methods - density functional theory (DFT). Pederson et al. proposed a unitarily invariant and numerically feasible method based on Fermi-L\u00f6wdin orbital self-interaction correction (FLO-SIC). We implemented this method using the modern PySCF electronic structure code as basis.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9940847270488824,
      "result": {
        "original_header": "previously",
        "type": "Text_excerpt",
        "value": "The development of PyFLOSIC started with the master's thesis of Lenz Fiedler. Over the last year, we had many updates and complete code re-writes by Sebastian Schwalbe (ase backends, classes etc.) and Torsten Hahn (various speed-up techniques). Our main testers are Kai Trepte, Sebastian Schwalbe and Jakob Kraus. Jens Kortus is our overall theoretical guide and head of decisions, whereas Susi Lehtola has recently joined the team and provides new perspectives.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9447319159528893,
      "result": {
        "original_header": "Milestones",
        "type": "Text_excerpt",
        "value": "  * **April 30, 2020**   \nThanks to all the people who have read our article. We are happy that our article \"Interpretation and Automatic Generation of Fermi\u2010Orbital Descriptors\", where every results was produced with our PyFLOSIC code, published in the Journal of Computational Chemistry (JCC) was promoted to one of the top 10% downloaded articles. [1](https://twitter.com/theonov13) \n  * **August 24, 2020**  \nWe are very happy to announce that our PyFLOSIC article (see above) is now finally published in the Journal of Chemical Physics (JCP)! \n  * **September 01, 2021**     \nWe are pleased that our PyFLOSIC JCP article was highlighted by JCP. \n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9407086878594113,
      "result": {
        "original_header": "Some Remarks",
        "type": "Text_excerpt",
        "value": "PyFLOSIC is still a relatively young code subject to regular significant changes.  If you discover any issues while working with PyFLOSIC, feel free to contact us. \n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/pyflosic/pyflosic/wiki"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pyflosic/pyflosic/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pyflosic/pyflosic/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyflosic/pyflosic"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyFLOSIC"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/init_venv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/basic_calculations/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/basic_calculations/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/linear_scaling/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/linear_scaling/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/01_clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_py2nrl/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_py2nrl/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_py2nrl/run_taurus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_py2nrl/start/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/nrlmol_io/02_py2nrl/start/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/pycom/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/pycom/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/ase_pyflosic_optimizer/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/ase_pyflosic_optimizer/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/advanced_applications/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/advanced_applications/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/ase_pyflosic_calculator/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/examples/ase_pyflosic_calculator/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/185756742"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# PyFLOSIC installation, Date: August 25, 2020      \n\nClone this git directory:\n```bash \n$ git clone https://github.com/pyflosic/pyflosic.git\n```\n\nAdd the pyflosic directory to your PYTHONPATH environment variable globally or in bash/job scripts:\n\n```bash\nexport PYTHONPATH=[path_to_pyflosic]/pyflosic/src/:$PYTHONPATH\nexport PYTHONPATH=[path_to_pyflosic]/pyflosic/utils/:$PYTHONPATH\n```\nNote: The variable path_to_pyflosic describes the absolute path pointing towards the pyflosic folder (not including the pyflosic folder itself). \n\nPyFLOSIC depends on several Python packages.   \nThese packages and their recommended versions are:\n\n- ase 3.17.0\n- h5py 2.10.0\n- numba 0.48.0\n- scipy 1.5.2\n- numpy 1.19.1\n- pyscf 1.7.1\n\nInstall all Python packages required for PyFLOSIC in the recommended versions:\n\n```bash\n$ cd pyflosic/\n$ source init_venv.sh\n```\nAfter the installation, you enter a virtual environment where you have access to \nthe installed packages, while packages installed outside the environment remain unaffected.\n   \nDeactivate the environment:    \n\n```bash\n$ deactivate\n```\n\nAfter the first installation, you can alternatively start the environment with:\n```bash\n$ source venv/bin/activate \n```\nwhile the deactivation procedure remains the same. \n\n# PyFLOSIC installation, Date: April 16, 2019  \nInstallation checked on:  \n\n- Ubuntu 18.10 (Cosmic Cuttlefish)\n- Elementary OS 0.4.1 Loki\n- Debian GNU/Linux 9.8 (stretch)\n- Debian 10 (buster)\n\n## PySCF installation \n\n```bash\n $ git clone https://github.com/sunqm/pyscf  \n $ cd pyscf/pyscf/lib   \n $ mkdir build   \n $ cd build \n $ vi ../CMakeLists.txt\n ```\n\nWe do not recommend using libxc versions older than 4.X.Y if you are interested in \nthe SCAN meta-GGA. \nSearch for libxc in CMakeLists.txt (it should be the 2nd entry) and comment the line \"include libxc version 3.0.1\" out\nand remove the comment symbol from the line with the newer libxc version (e.g. 4.2.3).\n\n```bash \n$ cmake .. \n$ make \n```\nYou need to add pyscf to your PYTHONPATH enviroment variable. \n\n```bash\nexport PYTHONPATH=[path_to_pyscf]/pyscf/:$PYTHONPATH\n```\nNote: The variable path_to_pyscf describes the absolute path pointing towards the pyscf folder (not including the pyscf folder itself). \n\nWith newer versions of PySCF, e.g. pyscf-1.6.4, it might be necessary to add the following library paths in your job script:\n\n```bash\nexport LD_PRELOAD=$MKLROOT/lib/intel64/libmkl_avx2.so\nexport LD_PRELOAD=$LD_PRELOAD:$MKLROOT/lib/intel64/libmkl_sequential.so\nexport LD_PRELOAD=$LD_PRELOAD:$MKLROOT/lib/intel64/libmkl_core.so\n```\n\nThe value of $MKLROOT depends on your specific system.\n\n## Python packages (required)  \n\n```bash \n$ pip3 install numpy \n$ pip3 install scipy \n$ pip3 install ase \n$ pip3 install numba \n$ pip3 install h5py \n```\n\nTo check which versions you have installed you can use \n\n```bash \n$ python3 python_package_versions.py\n```\n\nWe recommend the following versions \n\n- ase 3.17.0\n- h5py 2.9.0\n- numba 0.43.1\n- scipy 1.2.1\n- numpy 1.16.2\n- pyscf 1.6.1-1\n\nIf your installed versions are different, you might want to update to newer versions. \nOtherwise, some python WARNINGS may appear in the screen log or output files. \n\n```bash \n$ pip3 install numpy --upgrade\n$ pip3 install scipy --upgrade\n$ pip3 install ase --upgrade\n$ pip3 install numba --upgrade\n$ pip3 install h5py --upgrade\n```\n\n## Python packages (optional) \n\nFor visualization and plotting, you might want to have the following packages. \n```bash \n$ pip3 install matplotlib \n$ apt-get install python3-tk\n```\n\nFurther, if you want to use the pyberny geometry optimizer, you need to install it. \n```bash \n$ pip3 install -U pyberny\n```\n\n## Cloning PyFLOSIC and adding it to your PYTHONPATH\n\n```bash \n$ git clone https://github.com/pyflosic/pyflosic.git\n```\n\nYou need to add pyflosic to your PYTHONPATH environment variable globally or in bash/job scripts.\n\n```bash\nexport PYTHONPATH=[path_to_pyflosic]/pyflosic/src/:$PYTHONPATH\nexport PYTHONPATH=[path_to_pyflosic]/pyflosic/utils/:$PYTHONPATH\n```\nNote: The variable path_to_pyflosic describes the absolute path pointing towards the pyflosic folder (not including the pyflosic folder itself). \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "PyFLOSIC"
        ],
        "type": "Text_excerpt",
        "value": "You need a working pyscf installation on your system. \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9997781054422332,
      "result": {
        "original_header": "PyFLOSIC",
        "type": "Text_excerpt",
        "value": "The following document will guide you through the setup and show you how to get started with this Python-based FLO-SIC code.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8736278998195874,
      "result": {
        "original_header": "Contents",
        "type": "Text_excerpt",
        "value": "- *INSTALL.md*: Installation guide in Markdown (md) language. \n- *AUTHORS.md*: The authors of PyFLOSIC along with contact information.\n- *VERSION.md*: The version of PyFLOSIC you have acquired.\n- *src/*: Contains the source files for PyFLOSIC.\n- *examples/*: Contains useful examples to get started with PyFLOSIC.\n- *doc/*: Can provide additional information on the code features. \n- *utils/*: Utilities that are useful for PyFLOSIC.\n- *test/*: Contains a version control test.\n- *LICENSE*: APACHE2 license file. \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9453655813446108,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "* Sebastian Schwalbe (theonov13@gmail.com) \n* Kai Trepte (kai.trepte1987@gmail.com)\n* Susi Lehtola (susi.lehtola@helsinki.fi)\n* Jens Kortus (jens.kortus@physik.tu-freiberg.de)\n \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pyflosic/pyflosic/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master//images/pyflosic_logo.png"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyflosic"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "pyflosic"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 276176,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 823,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1905.02631"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theonov13",
          "type": "User"
        },
        "date_created": "2020-08-25T22:34:14Z",
        "date_published": "2020-08-25T22:40:14Z",
        "description": "# PyFLOSIC v.1.0.2 release \r\n\r\n# Features \r\n## init_venv.sh\r\n- New file to automatically install python depencencies \r\n- Usage in bash (1st time): source init_venv.sh \r\n- Usage in bash (start): source venv/bin/activate \r\n- Usage in bash (end): deactivate \r\n- Update all Python package dependencies of PyFLOSIC (including PySCF)\r\n    - ase 3.17.0\r\n    - h5py 2.10.0\r\n    - numba 0.48.0\r\n    - scipy 1.5.2\r\n    - numpy 1.19.1\r\n    - pyscf 1.7.1\r\n\r\n# Updates \r\n- Adjust dump_flags() in flosic_scf.py to get newton() working with PySCF 1.7.1 \r\n- Re-introduce run.sh files to handle examples more easily \r\n- Adjust examples, e.g., examples/advanced_applications/{04-07}\r\n    - add ham_sic = 'HOO' as the reference values are for this Hamiltonian \r\n    - the new default is 'HOOOV'\r\n- Update global README.md \r\n    - add reference to new published JCP PyFLOSIC article \r\n- Remove INSTALL_OLD.md\r\n- Update INSTALL.md to fit new installation possiblity \r\n\r\n# Next version v.1.1.0 \r\n- Code re-structuring \r\n- Introduce setup.py installation \r\n- Make PyFLOSIC available on PyPi ",
        "html_url": "https://github.com/pyflosic/pyflosic/releases/tag/v.1.0.2",
        "name": "PyFLOSIC v.1.0.2 release",
        "release_id": 30129712,
        "tag": "v.1.0.2",
        "tarball_url": "https://api.github.com/repos/pyflosic/pyflosic/tarball/v.1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pyflosic/pyflosic/releases/30129712",
        "value": "https://api.github.com/repos/pyflosic/pyflosic/releases/30129712",
        "zipball_url": "https://api.github.com/repos/pyflosic/pyflosic/zipball/v.1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theonov13",
          "type": "User"
        },
        "date_created": "2020-07-16T12:49:51Z",
        "date_published": "2020-07-16T13:09:46Z",
        "description": "# Features\r\n\r\n## pycom.py \r\n- added an option for faster guess generation \r\n- added an option for simple stability analysis \r\n    - Hessian of localized orbitals is checked\r\n    - result: improved stability of initial guesses \r\n    \r\n## ase_pyflosic_calculator.py/ase_pyflosic_optimizer.py\r\n- increased the support for customizing the numerical grid:\r\n    - n<sub>rad</sub>, n<sub>ang</sub>\r\n    - pruning behavior\r\n\r\n## utils\r\n- updated dfo.gbs\r\n- added dfo+.gbs\r\n- added unc_dfo.gbs, unc_dfo+.gbs \r\n\r\n## community/social media \r\n- added links to social media acitivities: \r\n    -    OpenSIC@Twitter \r\n    -    OpenSIC@YouTube ",
        "html_url": "https://github.com/pyflosic/pyflosic/releases/tag/v.1.0.1",
        "name": "PyFLOSIC v.1.0.1 release",
        "release_id": 28631402,
        "tag": "v.1.0.1",
        "tarball_url": "https://api.github.com/repos/pyflosic/pyflosic/tarball/v.1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pyflosic/pyflosic/releases/28631402",
        "value": "https://api.github.com/repos/pyflosic/pyflosic/releases/28631402",
        "zipball_url": "https://api.github.com/repos/pyflosic/pyflosic/zipball/v.1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theonov13",
          "type": "User"
        },
        "date_created": "2020-04-29T10:27:56Z",
        "date_published": "2020-05-01T15:59:57Z",
        "description": "Features\r\n--------\r\n\r\n* Important features inherited from PySCF\r\n    - usage of all LDA, GGA, mGGA functionals from Libxc/XCFun\r\n    - usage of GTO basis sets (all-electron, ECP)\r\n    - transparent usage of other features like density fitting, etc.        \r\n\r\n* Generation of Fermi-orbital descriptors (FODs)\r\n    - built-in: PyCOM\r\n    - interfaces: fodMC, PyEFF, PyLEWIS\r\n\r\n* Fermi-L\u00f6wdin orbital self-interaction correction (FLO-SIC)\r\n    - optimizing the density-matrix (DM) and FODs\r\n    - possibility to keep the DM, the FODs, or both fixed\r\n    - output: FLO-SIC total energy, FLO-SIC eigenvalues, etc.\r\n\r\n* Optimization of FODs\r\n    - analytical gradients/fictitious FOD forces  \r\n    - atomic simulation environment (ASE) interface\r\n    - usage of gradient-based algorithms: e.g., CG, FIRE, (L-)BFGS\r\n\r\n* Optimization of the density \r\n    - two unified SIC Hamiltonians (HOO/HOOOV)\r\n\r\n* Post-Processing\r\n    - visualization of orbitals (as cube files)\r\n    - FOD bond order\r\n    - ASE trajectories for FODs \r\n\r\n* Tools \r\n    - automatic FOD generation via PyCOM \r\n    - ASE-PyFLOSIC calculator and optimizer\r\n    - easy access to the density functional optimized (DFO) basis set\r\n\r\nNext version v.1.1.0 \r\n------------------\r\n* simplified function calls \r\n* rewrite of flosic_os.py as a Python class\r\n* database for optimized FODs\r\n* simplified ASE-PyFLOSIC calculator and optimizer\r\n* interface to the PSI4 code \r\n* (symmetry) constrained FOD optimization \r\n* restricted and unrestricted FLO-SIC \r\n* customizable FOD symbols \r\n\r\n\r\nFuture version v.2.0.0\r\n--------------------\r\n* various SCF/ density optimization strategies \r\n* RSIC/CSIC calculation options \r\n* FLO-SIC stability analysis \r\n* optimized SIC mesh routines \r\n\r\nSchedule\r\n-------\r\nv1.1.0 alpha-1 Dec 2020 \r\nv2.0.0 alpha-1 Dec 2021  ",
        "html_url": "https://github.com/pyflosic/pyflosic/releases/tag/v1.0.0",
        "name": "PyFLOSIC v.1.0.0 release",
        "release_id": 26086918,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/pyflosic/pyflosic/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pyflosic/pyflosic/releases/26086918",
        "value": "https://api.github.com/repos/pyflosic/pyflosic/releases/26086918",
        "zipball_url": "https://api.github.com/repos/pyflosic/pyflosic/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies (required)",
        "parent_header": [
          "PyFLOSIC"
        ],
        "type": "Text_excerpt",
        "value": "We recommend the following package versions: \n\n* ase 3.17.0\n* h5py 2.10.0\n* numba 0.48.0\n* scipy 1.5.2\n* numpy 1.19.1\n* pyscf 1.7.1\n\nIn order to make sure you use the recommended package versions for your PyFLOSIC calculations, you can type the following shell command:\n\n```bash\n$ source init_venv.sh\n```\nThis will create a virtual environment and install all of the required packages in the versions listed above.  \nMost importantly, your previous installations of ase, h5py, etc. outside the virtual environment are not affected at all by this procedure.\nIf you want to leave the virtual environment, type the following shell command:\n\n```bash\n$ deactivate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies (optional)",
        "parent_header": [
          "PyFLOSIC"
        ],
        "type": "Text_excerpt",
        "value": "* matplotlib \n* python3-tk\n* pyberny\n\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/pyflosic/pyflosic/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:34:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ]
}