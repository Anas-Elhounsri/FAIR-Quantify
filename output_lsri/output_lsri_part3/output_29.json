{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "D. Lee </br>\n[Nezzle: an interactive and programmable visualization of biological networks in Python](https://academic.oup.com/bioinformatics/article/38/12/3310/6585333?login=true) </br>\n*Bioinformatics* 38(12) 3310\u20133311 (2022). </br>\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dwgoon/nezzle"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-17T07:31:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-18T03:24:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Network Visualization using both GUI and Programming"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "- Nezzle is an interactive and programmable network visualization software.\n- Nezzle was initially developed to visualize biological networks such as \n  [signaling networks](https://www.nature.com/articles/s41598-018-23643-5).\n- Nezzle repesents **Ne**t + Pu**zzle**, because adjusting nodes and edges of a network for visualization is similar to doing a puzzle.\n- Find helpful tutorials in Nezzle's YouTube channel [:tv:](https://www.youtube.com/channel/UC4TV7k-8ItSIvD7wUd7Hl1Q)\n\n "
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9992849225639729,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Lightweight, programmable, detailed visualization of complex networks for high quality figures.\n- Highly customizable visualization of networks with user-defined source codes.\n- Easy and efficient plug-in development enabled by powerful Python ecosystem.\n- Manual curation of the positions of nodes and edges by adjusting the graphics in GUI.\n- Interactive programming to modify both data and graphics of networks in the GUI console.\n- The GUI depends on Python bindings for [`Qt`](https://www.qt.io/)\n  such as [`PyQt`](https://riverbankcomputing.com/software/pyqt)\n  (abstracted by [`QtPy`](https://github.com/spyder-ide/qtpy) in this project). \n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9468917792012606,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "In a terminal, we can just type \"nezzle\" that is in the \"Scripts\" sub-directory of a Python environment.\n```\nnezzle\n```\nAlternatively, we can execute the program in the local repository as follows. \n```\npython nezzle.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dwgoon/nezzle/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dwgoon/nezzle/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dwgoon/nezzle/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dwgoon/nezzle"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/2nnfl-time-series.png"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/2nnfl-network-dynamics.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/lorenz-time-series.png"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/lorenz-dynamics.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/layout-dynamics.png"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/layout-dynamics.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/iris-dataset-pca.jpg"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/examples/images/iris-layout-dynamics.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/assets/demo01.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/assets/demo02.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/assets/demo03.gif"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nCurrently, we recommend installing from the GitHub repository.\nFirst, download a recent version of the repository.\n\n```\ngit clone https://github.com/cxinsys/nezzle.git\n```\n\nNow, you can install Nezzle from the local repository.\n\n```\ncd nezzle\npython setup.py install\n```\n\nIf you want to easily update the most recent version of the software\nfrom the repository, use ``develop`` option insead of ``install``.\n\n```\npython setup.py develop\n```\n\nNow, running ``git pull origin main`` is enough to update Nezzle\nfrom the remote repository."
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/docs/install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": ":snake: [Anaconda](https://www.anaconda.com) is recommended to use and develop Nezzle.\n\n:warning:\tApple M1 users are encouraged to use [Rosetta Terminal](https://dev.to/courier/tips-and-tricks-to-setup-your-apple-m1-for-development-547g).\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Anaconda virtual environment",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "After installing anaconda, create a conda virtual environment for Nezzle.\nIn the following command, you can change the Python version\n(e.g.,`python=3.7` or `python=3.9`).\n\n```\nconda create -n nezzle python=3.8\n```\n\nNow, we can activate our virtual environment for Nezzle as follows.\n\n```\nconda activate nezzle\n```\n\nInstall `pip` for installing the dependencies.\n\n```\nconda install pip\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from PyPI",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The simplest way to install Nezzle is using `pip`.\n\n```\npip install nezzle\n```\n\nHowever, the installed package with `pip` do not contain the examples.\nTo explore the examples, install from this GitHub repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from GitHub repository",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "First, clone the recent version of this repository.\n\n```\ngit clone https://github.com/dwgoon/nezzle.git nezzle\n```\n\nNow, we need to install Nezzle as a module.\n\n```\ncd nezzle\npip install -r requirements.txt\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9997480300466306,
      "result": {
        "original_header": "Execution",
        "type": "Text_excerpt",
        "value": "In a terminal, we can just type \"nezzle\" that is in the \"Scripts\" sub-directory of a Python environment.\n```\nnezzle\n```\nAlternatively, we can execute the program in the local repository as follows. \n```\npython nezzle.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dwgoon/nezzle/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (C) 2021-2022, Nezzle Developers\nDaewon Lee <daewon4you@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/nezzle/resources/logo.png"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nezzle"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dwgoon"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 284308,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 410,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Check packages and versions in \n[requirements](https://github.com/dwgoon/nezzle/blob/main/requirements.txt) or\n[requirements for conda](https://github.com/dwgoon/nezzle/blob/main/requirements_conda.txt). \n\nWe can install all the dependencies using `pip` with `-r` option.\n\n```\npip install -r requirements.txt\n```\n\nWe can also install the dependencies using conda with `--file` option.\n\n```\nconda install -y --file requirements_conda.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Creating network graphics by running a code",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"assets/demo03.gif\" alt=\"Drawing\" width=\"700px\"/>\n\n<br/>\n\n:computer::keyboard::computer_mouse: [More examples](examples/gallery.md)\n\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:24:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"examples/gallery.md#Applications\">Mapping dynamics data to graphics</a>",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<table>\n  <tr>\n  <td>  \n    <img src=\"examples/images/2nnfl-time-series.png\" alt=\"Drawing\" width=\"320px\"/>  \n  </td>\n  <td>  \n    <img src=\"examples/images/2nnfl-network-dynamics.gif\" alt=\"Drawing\" width=\"320px\"/>\n  </td>\n  </tr>\n</table>\n\n<table>\n  <tr>\n  <td>  \n    <img src=\"examples/images/lorenz-time-series.png\" alt=\"Drawing\" width=\"320px\"/>  \n  </td>\n  <td>  \n    <img src=\"examples/images/lorenz-dynamics.gif\" alt=\"Drawing\" width=\"320px\"/>\n  </td>\n  </tr>\n</table>\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"examples/gallery.md#Applications\">Finding suboptimal positions by maximizing mean pairwise distances (PyTorch)</a>",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<table>\n  <tr>\n  <td>  \n    <img src=\"examples/images/layout-dynamics.png\" alt=\"Drawing\" width=\"320px\"/>\n    <br/>\n    <p align=\"center\">\n      Original network before messing up the layout\n    </p>\n  </td>\n  <td>  \n    <img src=\"examples/images/layout-dynamics.gif\" alt=\"Drawing\" width=\"320px\"/>  \n  </td>\n  </tr>\n</table>\n\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"examples/gallery.md#Applications\">Iris dataset layout dynamics (scikit-learn + PyTorch)</a>",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<table>\n  <tr>\n  <td>  \n    <img src=\"examples/images/iris-dataset-pca.jpg\" alt=\"Drawing\" width=\"330px\"/>\n    <br/>\n    <p align=\"center\">\n      Principal component view of Iris dataset\n    </p>\n  </td>\n  <td>  \n    <img src=\"examples/images/iris-layout-dynamics.gif\" alt=\"Drawing\" width=\"320px\"/>  \n  </td>\n  </tr>\n</table>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adjusting network graphics through GUI",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"assets/demo01.gif\" alt=\"Drawing\" width=\"700px\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adjusting network graphics by programming with REPL",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"assets/demo02.gif\" alt=\"Drawing\" width=\"700px\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/dwgoon/nezzle/main/README.md",
      "technique": "header_analysis"
    }
  ]
}