{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Karena6688/qcSSMDhomo"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-24T04:04:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-29T03:21:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "an R package for calculating SSMD for quality control in HTS studies under homoscedasticity"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9394046823364068,
      "result": {
        "original_header": "Supplementary Table 1: Critical Value",
        "type": "Text_excerpt",
        "value": "for( i in 1:length(n1.vec) ) { \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8110414330839131,
      "result": {
        "original_header": "a",
        "type": "Text_excerpt",
        "value": "legend(\"topright\", legend=c(\"QC cutoff 3.8 for the 96-well format\", \n                            \"QC cutoff 3.5 for the 384-well format\", \n\t\t\t\t\t\t\t\"QC cutoff 3.4 for the 1536-well format\"), \t\t\t\t\t\t\t\n       col=c(3, 2, 4), lty=1 )\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8110414330839131,
      "result": {
        "original_header": "b          96                                304",
        "type": "Text_excerpt",
        "value": "legend(\"topright\", legend=c(\"QC cutoff 5.5 for the 96-well format\", \n                            \"QC cutoff 4.2 for the 384-well format\", \n\t\t\t\t\t\t\t\"QC cutoff 3.9 for the 1536-well format\"), \n       col=c(3, 2, 4), lty=1 ) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9575741743996412,
      "result": {
        "original_header": "save(dataCVB3.df, file=\"data.CVB3CRISPR.RData\")",
        "type": "Text_excerpt",
        "value": "data(\"data.CVB3CRISPR\", package=\"qcSSMDhomo\") \ndata.df = dataCVB3.df \ndata.df[1:3, ]\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9527452121173212,
      "result": {
        "original_header": "3 plate01   Sample   1      3 -1.123124",
        "type": "Text_excerpt",
        "value": "unique(data.df[, wellName])\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9527452121173212,
      "result": {
        "original_header": "Levels: MISC Negative Control Positive Control Sample",
        "type": "Text_excerpt",
        "value": "condt = data.df[, plateName] == \"plate01\" \ntable( data.df[condt, wellName] )\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9570564102283992,
      "result": {
        "original_header": "-               9                5                2               80",
        "type": "Text_excerpt",
        "value": "plate.vec = as.vector(data.df[, plateName]) \nuniqWells = unique(data.df[, wellName]) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.957467523294755,
      "result": {
        "original_header": "Fligner-Killeen test: A non-parametric test that is very robust against departures from normality.",
        "type": "Text_excerpt",
        "value": "for(i in 1:nPlate) { \n  theData.df0 = data.df[condt, ] \n  condt2 = is.element(theWelltype, c(strongPos, negName)) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8769859616702378,
      "result": {
        "original_header": "calculating SSMD estimated and critical values and z-factor",
        "type": "Text_excerpt",
        "value": "ssmdEst.mat = ssmdEst.homoVAR.frame.fn(dataIn.df=data.df[, c(\"plate\", \"wellType\", \"intensity\")], \n                                       negREF=negName, positiveCTRL=strongPos, \n                                       pREFtrim=0, approx=FALSE, method=\"UMVUE\") \nssmdC.mat = ssmdC.homoVAR.frame.fn(dataIn.df=data.df[, c(\"plate\", \"wellType\", \"intensity\")], \n                                   negREF=negName, positiveCTRL=strongPos, \n                                   pREFtrim=0, Alpha=0.05, Beta=-3) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9850852400856626,
      "result": {
        "original_header": "-     3       7       9      13      14      15",
        "type": "Text_excerpt",
        "value": "zFactor.mat = \nzFactor.frame.fn(dataIn.df=data.df[, c(\"plate\", \"wellType\", \"intensity\")], \n                 negREF=negName, positiveCTRL=strongPos, \n                 pREFtrim=0.05, is.homoVAR = TRUE) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9262968274437933,
      "result": {
        "original_header": "[1] empty        Sample       negativeCTRL positiveCTRL",
        "type": "Text_excerpt",
        "value": "x.df=cbind(plateWelltoX.fn(data.df[,c(plateName, rowName, colName)], nRow, nCol, byRow=FALSE),\n            \"wellType\"=data.df[, wellName]) \ny.vec = data.df[, Intensity] \nfor( i in wellplotOrders ) { \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9307752540792236,
      "result": {
        "original_header": "Fig.2e",
        "type": "Text_excerpt",
        "value": "legend(\"topright\", legend=\"SSMD cutoff of -5.5\", col=\"red\", lty=1, pch=NA, cex=1)\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9599886555408013,
      "result": {
        "original_header": "save(dataMucin.df, file=\"data.mucinHTS.RData\")",
        "type": "Text_excerpt",
        "value": "data(\"data.mucinHTS\", package=\"qcSSMDhomo\") \ndata.df = dataMucin.df \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.929970951809069,
      "result": {
        "original_header": "-              8               16                8              304",
        "type": "Text_excerpt",
        "value": "  pval.fligner.negCTRL.vec[i]=fligner.test(intensity ~ wellType, data=theData.df)$p.value\n  \n  condt3.1 = is.element( theWelltype, strongPos ) \n  condt3.2 = x.vec >= cutoffs[1] & x.vec <= cutoffs[2] & is.element(theWelltype, sampleName) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9015090563213306,
      "result": {
        "original_header": "supplementary fig. 2b",
        "type": "Text_excerpt",
        "value": "legend(\"topright\", legend=c(\"SSMD estimated value of No-cell Control\", \"SSMD estimated value of Positive control\"), \n       col=c(\"red\", \"blue\"), lty=1, pch=1, cex=1)\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9010622265013384,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "The related dataset is stored in Excel files in the subdirectory \"extdata\". \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9246610833425271,
      "result": {
        "original_header": "Author for codes",
        "type": "Text_excerpt",
        "value": "Dandan Wang and Xiaohua Douglas Zhang, Ph.D., Professor, University of Macau\n \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9736817129622899,
      "result": {
        "original_header": "Author for the Paper",
        "type": "Text_excerpt",
        "value": "Zhang XD*#, Wang D#, Sun S, Zhang H*. Issues of z-factor and an approach to avoid them for quality control in high-throughput screening studies. Bioinformatics (in press)  \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Karena6688/qcSSMDhomo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Karena6688/qcSSMDhomo/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Karena6688/qcSSMDhomo"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qcSSMDhomo"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8057719456862766,
      "result": {
        "original_header": "Supplementary Table 1: Critical Value",
        "type": "Text_excerpt",
        "value": "n2.vec = c(8,   8,   6,  3,   12, 12, 16, 8, 4, 2, 2, 3, 2) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8417939507420167,
      "result": {
        "original_header": "a",
        "type": "Text_excerpt",
        "value": "n2.vec=c( 2, 3, 4, 5, 6,   4,  5,  6,  7,  8,  9, 10, 11,12,     4,   5,   6,   7,   8,  9,   10,  12,  14,  16, 20) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9931139828781387,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "The data may also be obtained through running the following command lines in R after installing qcSSMD \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8355948513374092,
      "result": {
        "original_header": "a",
        "type": "Text_excerpt",
        "value": "plot( c(1, Nn), range(c(3, 6.5, ssmdC.vec)), type=\"n\", \n      xlab=\"\", ylab=\"SSMD critical value\", axes=FALSE) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8355948513374092,
      "result": {
        "original_header": "b          96                                304",
        "type": "Text_excerpt",
        "value": "plot( c(1, Nn), range(c(3, 6, ssmdC.vec)), type=\"n\", \n      xlab=\"\", ylab=\"SSMD critical value\", axes=FALSE) \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8823902695663525,
      "result": {
        "original_header": "Fig.2e",
        "type": "Text_excerpt",
        "value": "plot( c(1, length(plates)), yRange, type=\"n\", axes=FALSE, \n      xlab=\"Plate Number\", ylab=\"SSMD\", \n\t  main=\"\") \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8775039382802632,
      "result": {
        "original_header": "Fig.2f",
        "type": "Text_excerpt",
        "value": "plot( c(1, length(plates) ), yRange, type=\"n\", axes=FALSE, \n      xlab=\"Plate Number\", ylab=\"z-factor\", \n\t  main=\"\") \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8341804173332775,
      "result": {
        "original_header": "-              8               16                8              304",
        "type": "Text_excerpt",
        "value": "  pval.bartlett.sample.vec[i]=bartlett.test(intensity ~ wellType, data=theData.df)$p.value \n  pval.fligner.sample.vec[i]=fligner.test(intensity ~ wellType, data=theData.df)$p.value \n"
      },
      "source": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Karena6688/qcSSMDhomo/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qcSSMDhomo"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Karena6688"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 18559,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Karena6688/qcSSMDhomo/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:26:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}