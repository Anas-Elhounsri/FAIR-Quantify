{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "citation",
        "type": "Text_excerpt",
        "value": "If you use `fastv`, `UniqueKMER` or the pre-generated resources provided by this repository, please cite our work as:\n\nShifu Chen, Changshou He, Yingqiang Li, Zhicheng Li, Charles E Melancon III. A Computational Toolset for Rapid Identification of SARS-CoV-2, other Viruses, and Microorganisms from Sequencing Data. bioRxiv 2020.05.12.092163; doi: https://doi.org/10.1101/2020.05.12.092163\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenGene/fastv"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-26T03:33:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-12T12:20:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An ultra-fast tool for identification of SARS-CoV-2 and other microbes from sequencing data. This tool can be used to detect viral infectious diseases, like COVID-19."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9957810867628825,
      "result": {
        "original_header": "fastv",
        "type": "Text_excerpt",
        "value": "fastv is an ultra-fast tool for identification of SARS-CoV-2 and other microbes from sequencing data. It detects microbial sequences from FASTQ data, generates JSON reports and visualizes the result in HTML reports. This tool can be used to detect viral infectious diseases, like COVID-19. This tool supports both short reads (Illumina, BGI, etc.) and long reads (ONT, PacBio, etc.) \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9741019111100454,
      "result": {
        "original_header": "how it works?",
        "type": "Text_excerpt",
        "value": "`fastv` accepts FASTQ files as input, and then:\n1. performs data QC and quality filtering as `fastp` does (cut adapters, remove low quality reads, correct wrong bases).\n2. scans the clean data to collect the sequences that containing any unique k-mer, or can be mapped to any reference microbial genomes.\n3. makes statistics, visualizes the result in HTML format, and output the results in JSON format.\n4. outputs the on-target sequencing reads so that they can be analyzed by downstream tools.\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9769387546416554,
      "result": {
        "original_header": "understand the input",
        "type": "Text_excerpt",
        "value": "If none of (`k-mer`, `k-mer collection`, `genomes`) files is specified, fastv will try to load the SARS-CoV-2 Genomes/k-mer files in the `data` folder to detect SARS-CoV-2 sequences. \nBesides the HTML/JSON reports, fastv also can output the sequence reads that contains any unique k-mer or can be mapped to any of the target reference genomes. The output data:\n* is in FASTQ format\n* is clean data after quality filtering\n* the file names can be specified by `-o` for SE data, or `-o` and `-O` for PE data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9421949931286572,
      "result": {
        "original_header": "understand the output",
        "type": "Text_excerpt",
        "value": "fastv outputs reports in HTML and JSON formats.\n* Sample HTML report (Illumina): http://opengene.org/fastv/fastv.html\n* Sample JSON report: http://opengene.org/fastv/fastv.json\n* If the `k-mer` file is specified, there will be a `POSITIVE` or `NEGATIVE` result, which is determined by comparing the mean depth of the k-mer keys to the threshold (`--positive_threshold`). \nBesides the HTML/JSON reports, fastv also can output the sequence reads that contains any unique k-mer or can be mapped to any of the target reference genomes. The output data:\n * is in FASTQ format\n * is clean data after quality filtering\n * the file names can be specified by `-o` for SE data, or `-o` and `-O` for PE data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9786599933105,
      "result": {
        "original_header": "options",
        "type": "Text_excerpt",
        "value": "Key options:\n```\n  -i, --in1                                        read1 input file name (string [=])\n  -I, --in2                                        read2 input file name (string [=])\n  -o, --out1                                       file name to store read1 with on-target sequences (string [=])\n  -O, --out2                                       file name to store read2 with on-target sequences (string [=])\n  -c, --kmer_collection                            the unique k-mer collection file in fasta format, see an example: http://opengene.org/kmer_collection.fasta (string [=])\n  -k, --kmer                                       the unique k-mer file of the detection target in fasta format. data/SARS-CoV-2.kmer.fa will be used if none of k-mer/Genomes/k-mer_Collection file is specified (string [=])\n  -g, --genomes                                    the genomes file of the detection target in fasta format. data/SARS-CoV-2.genomes.fa will be used if none of k-mer/Genomes/k-mer_Collection file is specified (string [=])\n  -p, --positive_threshold                         the data is considered as POSITIVE, when its mean coverage of unique kmer >= positive_threshold (0.001 ~ 100). 0.1 by default. (float [=0.1])\n  -d, --depth_threshold                            For coverage calculation. A region is considered covered when its mean depth >= depth_threshold (0.001 ~ 1000). 1.0 by default. (float [=1])\n  -E, --ed_threshold                               If the edit distance of a sequence and a genome region is <=ed_threshold, then consider it a match (0 ~ 50). 8 by default. (int [=8])\n      --long_read_threshold                        A read will be considered as long read if its length >= long_read_threshold (100 ~ 10000). 200 by default. (int [=200])\n      --read_segment_len                           A long read will be splitted to read segments, with each <= read_segment_len (50 ~ 5000, should be < long_read_threshold). 100 by default. (int [=100])\n      --bin_size                                   For coverage calculation. The genome is splitted to many bins, with each bin has a length of bin_size (1 ~ 100000), default 0 means adaptive. (int [=0])\n      --kc_coverage_threshold                      For each genome in the k-mer collection FASTA, report it when its coverage > kc_coverage_threshold. Default is 0.01. (double [=0.01])\n      --kc_high_confidence_coverage_threshold      For each genome in the k-mer collection FASTA, report it as high confidence when its coverage > kc_high_confidence_coverage_threshold. Default is 0.9. (double [=0.9])\n      --kc_high_confidence_median_hit_threshold    For each genome in the k-mer collection FASTA, report it as high confidence when its median hits > kc_high_confidence_median_hit_threshold. Default is 5. (int [=5])\n  -j, --json                                       the json format report file name (string [=fastv.json])\n  -h, --html                                       the html format report file name (string [=fastv.html])\n  -R, --report_title                               should be quoted with ' or \", default is \"fastv report\" (string [=fastv report])\n  -w, --thread                                     worker thread number, default is 4 (int [=4])\n```\nOther I/O options:\nBASH2*\nQC and quality pruning options (inherited from fastp: https://github.com/OpenGene/fastp)\nBASH3*\n \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "download binary",
        "parent_header": [
          "get fastv"
        ],
        "type": "Text_excerpt",
        "value": "This binary is only for Linux systems: http://opengene.org/fastv/fastv\n```shell\n# this binary was compiled on CentOS, and tested on CentOS/Ubuntu\nwget http://opengene.org/fastv/fastv\nchmod a+x ./fastv\n```"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/OpenGene/fastv/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenGene/fastv/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OpenGene/fastv"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fastv"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/mngs.html.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/mngs.json.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/sarscov2.shell.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/sarscov2.html.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/sarscov2.json.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/H3N2.png"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/OpenGene/fastv/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-ncov, bioinformatics, coronavirus, covid, covid-19, hcov, meta-genomics, microbial-sequences, mngs, ngs, sars-cov-2, sequencing, viral, viral-infectious-diseases, virus, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 OpenGene - Open Source Genetics Toolbox\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.opengene.org/fastv/fastv-0801.jpg"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fastv"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "OpenGene"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 360759,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 171666,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 14804,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 6643,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 935,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-09-29T01:10:37Z",
        "date_published": "2023-10-27T06:16:38Z",
        "description": "Minor revision with some fixes.",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.10.0",
        "name": "Release v0.10.0",
        "release_id": 126890704,
        "tag": "v0.10.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/126890704",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/126890704",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-05-25T08:31:50Z",
        "date_published": "2020-05-25T08:45:21Z",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.8.1",
        "name": "Fix FASTA reading with windows format line break.",
        "release_id": 26854852,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/26854852",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/26854852",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-05-19T01:22:41Z",
        "date_published": "2020-05-19T01:30:23Z",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.8.0",
        "name": "Supports gzip-compressed FASTA",
        "release_id": 26651264,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/26651264",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/26651264",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-05-12T05:35:28Z",
        "date_published": "2020-05-14T07:08:05Z",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.7.0",
        "name": "Improve identification of many viruses and microorganisms.",
        "release_id": 26497658,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/26497658",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/26497658",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-05-05T01:14:06Z",
        "date_published": "2020-05-05T05:52:05Z",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.6.0",
        "name": "Support scanning KMER collection",
        "release_id": 26168973,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/26168973",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/26168973",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-04-23T07:50:22Z",
        "date_published": "2020-04-23T07:52:12Z",
        "description": "Optimization for long reads\r\nBetter coverage than BWA mapping methods",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.5.0",
        "name": "Optimization for long reads",
        "release_id": 25798931,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/25798931",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/25798931",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sfchen",
          "type": "User"
        },
        "date_created": "2020-04-09T08:23:03Z",
        "date_published": "2020-04-09T08:24:16Z",
        "html_url": "https://github.com/OpenGene/fastv/releases/tag/v0.3.0",
        "name": "Release v0.3.0",
        "release_id": 25352185,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/OpenGene/fastv/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/OpenGene/fastv/releases/25352185",
        "value": "https://api.github.com/repos/OpenGene/fastv/releases/25352185",
        "zipball_url": "https://api.github.com/repos/OpenGene/fastv/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:43:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 110
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "take a quick glance of the informative report",
        "type": "Text_excerpt",
        "value": "* Sample HTML report (Illumina): http://opengene.org/fastv/fastv.html\n* Sample HTML report (ONT): http://opengene.org/fastv/ont.html\n* Sample JSON report: http://opengene.org/fastv/fastv.json\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "quick example for SARS-CoV-2 identification",
        "type": "Text_excerpt",
        "value": "* download FASTQ file for testing: http://opengene.org/fastv/testdata.fq.gz\n* get fastv and use following command for testing: \n```shell\n# make sure that SARS-CoV-2.kmer.fa and SARS-CoV-2.genomes.fa are in the ./data folder\n./fastv -i testdata.fq.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "get the pre-built k-mer file, genomes file or k-mer collection file for viruses",
        "parent_header": [
          "understand the input"
        ],
        "type": "Text_excerpt",
        "value": "* You can download `k-mer` files and `genomes` files of viruses from http://opengene.org/uniquekmer/viral/index.html. This is generated by extracting unique k-mers for all genomes in a big FASTA (http://opengene.org/viral.genomic.fasta), which contains all NCBI complete RefSeq release of viral sequences that can be found from https://ftp.ncbi.nlm.nih.gov/refseq/release/viral/. The k-mers that can be mapped to human reference genome (GRCh38) with `edit_distance <= 3` have already been filtered out.\n* You can download the `k-mer collection` file for viral genomes from: http://opengene.org/viral.kc.fasta.gz\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "get the pre-built k-mer file, genomes file or k-mer collection file for viruses and human microorganisms",
        "parent_header": [
          "understand the input"
        ],
        "type": "Text_excerpt",
        "value": "* You can download `k-mer` files and `genomes` files of viruses from http://opengene.org/uniquekmer/microbial/index.html. This is generated by extracting unique k-mers for all genomes in a big FASTA (http://opengene.org/microbial.genomic.fasta), which contains genomes for the viruses above and common human microorganisms. The k-mers that can be mapped to human reference genome (GRCh38) with `edit_distance <= 3` have already been filtered out.\n* You can download the `k-mer collection` file for viral and microbial genomes from: http://opengene.org/microbial.kc.fasta.gz\n* you can get the `k-mer` file and `genomes` file for SARS-CoV-2 by `git clone https://github.com/OpenGene/fastv.git`. If you don't use git, you can also download these two files from http://opengene.org/fastv/SARS-CoV-2.kmer.fa and http://opengene.org/fastv/SARS-CoV-2.genomes.fa\n\n\nIf you want to generate your own unique k-mer files and k-mer collection files, please use UniqueKMER: https://github.com/OpenGene/UniqueKMER\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "or compile from source",
        "parent_header": [
          "get fastv"
        ],
        "type": "Text_excerpt",
        "value": "```shell\n# step 1: get the code\ngit clone https://github.com/OpenGene/fastv.git\n\n# step 2: build\ncd fastv\nmake\n\n# step 3: install it to system if you have a sudo permission\nmake install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "screenshot",
        "parent_header": [
          "get fastv"
        ],
        "type": "Text_excerpt",
        "value": "![image](http://www.opengene.org/fastv/fastv-0801.jpg)   \n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "analyze metagenomics sequencing (mNGS) data",
        "parent_header": [
          "tutorials"
        ],
        "type": "Text_excerpt",
        "value": "1. download or build fastv\n2. download the k-mer collection for all viruses and microorganisms that have reference genomes in NCBI RefSeq:\n```shell\nwget http://opengene.org/microbial.kc.fasta.gz\n```\n3. run fastv:\n```shell\n./fastv -i filename.fastq.gz -c microbial.kc.fasta.gz\n```\n4. check the result in HTML report\n![image](http://www.opengene.org/fastv/mngs.html.png)\nThe result is presented in the section: `Detection result for k-mer collection file`.   \nSee an example: http://opengene.org/fastv/mngs.html\n\n5. check the result in JSON report\n![image](http://www.opengene.org/fastv/mngs.json.png)   \nThe result is presented in a list: `kmer_collection_scan_result`.   \nSee an example: http://opengene.org/fastv/mngs.json\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "identify SARS-CoV-2",
        "parent_header": [
          "tutorials"
        ],
        "type": "Text_excerpt",
        "value": "1. download or build fastv\n2. download the `k-mer` file and `genomes` file for SARS-CoV-2\n```shell\nwget http://opengene.org/fastv/data/SARS-CoV-2.kmer.fa\nwget http://opengene.org/fastv/data/SARS-CoV-2.genomes.fa\n```\n3. run fastv:\n```shell\n./fastv -i filename.fastq.gz -k SARS-CoV-2.kmer.fa -g SARS-CoV-2.genomes.fa\n```\n4. check the result in SHELL\n![image](http://www.opengene.org/fastv/sarscov2.shell.png)\nThe detection result will be `POSITIVE` if the SARS-CoV-2 coverage is higher than the threshold.   \n\n5. check the result in HTML report\n![image](http://www.opengene.org/fastv/sarscov2.html.png)\nThe detection result is presented in the section `Detection result for target unique k-mer file`. The genome coverage result is presented in the section `Genome coverages for file`.   \nSee an example: http://opengene.org/fastv/sarscov2.html\n\n6. check the result in JSON report\n![image](http://www.opengene.org/fastv/sarscov2.json.png)   \nThe result is presented in: `kmer_detection_result`.   \nSee an example: http://opengene.org/fastv/sarscov2.json\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "influenza A virus subtyping",
        "parent_header": [
          "tutorials"
        ],
        "type": "Text_excerpt",
        "value": "Influenza A viruses are divided into subtypes on the basis of two proteins on the surface of the virus: hemagglutinin (HA) and neuraminidase (NA). For example, \u201cH5N1\u201d virus has an hemagglutinin type 5 protein and an neuraminidase type 1 protein. `fastv` can be used to identify the hemagglutinin type and neuraminidase type for influenza A virus from sequencing data.\n\n1. download or build fastv\n2. download the k-mer collection for all viruses and microorganisms that have reference genomes in NCBI RefSeq:\n```shell\nwget http://opengene.org/influenzaA.kc.fasta.gz\n```\n3. run fastv:\n```shell\n./fastv -i filename.fastq.gz -c influenzaA.kc.fasta.gz\n```\n4. check the result in HTML report\n![image](http://www.opengene.org/fastv/H3N2.png)\nThe result is presented in the section: `Detection result for k-mer collection file`.   \nSee an example (influenza A H3N2): http://opengene.org/fastv/H3N2.html\n\n"
      },
      "source": "https://raw.githubusercontent.com/OpenGene/fastv/master/README.md",
      "technique": "header_analysis"
    }
  ]
}