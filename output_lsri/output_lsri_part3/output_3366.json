{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "==========\n\n-   Chen, Z et al.\u00a0(2016). Testing for association in case-control\n    genome-wide association studies with shared controls. *Statistical\n    methods in medical research,* 25(2), 954\u2013967.\n\n-   Milet, J and Perdry, H. (2020). *Mixed Logistic Regression in\n    Genome-Wide Association Studies.* [Preprint on\n    biorxiv.](https://www.biorxiv.org/content/10.1101/2020.01.17.910109v1)\n\n-   Hudson, RR (2002). Generating samples under a Wright\u2013Fisher neutral\n    model of genetic variation. *Bioinformatics,* 18(2), 337\u201333.\n\n-   Zhou, W et al.\u00a0(2018). Efficiently controlling for case-control\n    imbalance and sample relatedness in large-scale genetic association\n    studies. *Nature genetics,* 50(9), 1335\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/genostats/milorGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-21T14:16:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-12T13:56:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9531594872853478,
      "result": {
        "original_header": "milorGWAS: MIxed LOgistic Regression in GWAS",
        "type": "Text_excerpt",
        "value": "This package is for Genome Wide Association Studies using a logistic\nmixed model, using fast approximate methods as described in (Milet and\nPerdry, 2020). One of these methods extends the GMMAT method by Chen et\nal.\u00a0(Chen et al., 2016). A similar method was described in (Zhou et al.,\n2020). \nAdditionnally, it can draw QQ-plots with a separation of SNPs in strata,\nas defined by Chen et al.\u00a0and extended in Milet and Perdry. \nThis package relies on the package `gaston`, which we will use in the\nfollowing. We are going to illustrate below the functions exported by\n`milorGWAS`: `association.test.logistic`, `qqplot.pvalues` (which\nreplaces and extends the function `gaston::qqplot.pvalues`), and\n`SNP.category`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9959363533224473,
      "result": {
        "original_header": "Stratified qq-plots",
        "type": "Text_excerpt",
        "value": "Here we will use a simulated structured population with a large number\nof SNPs to illustrate the stratified qq-plots. These data simulated as\ndescribed in (Chen et al., 2016) or in (Milet and Perdry, 2020) with the\nprogram `ms` (Hudson, 2002). We created a data package for these data.\nIt includes 600k SNPs at linkage equilibrium for 1000 individuals\nsimulated on a 20x20 grid. It includes some first-order related\nindividuals. A binary phenotype was simulated with a large population\nstructure effect as described in (Milet and Perdry, 2020).\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8465392481303361,
      "result": {
        "original_header": "Loading the data",
        "type": "Text_excerpt",
        "value": "And finally at the relation between strata and phenotype\n``` r\ntable(x@ped$pop, x@ped$pheno)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9335384875202036,
      "result": {
        "original_header": "Drawing stratified QQ-plots",
        "type": "Text_excerpt",
        "value": "Now we can draw stratified quantile-quantile plots. We need to defined\nSNP categories, which can be done either with the \u2018true\u2019 strata\ninformation as described in (Chen et al.,2016), or with the first PCs\n(Milet and Perdry, 2020). \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/genostats/milorGWAS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/genostats/milorGWAS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genostats/milorGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "milorGWAS: MIxed LOgistic Regression in GWAS"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genostats/milorGWAS/master/figs/plotbeta-1.png"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genostats/milorGWAS/master/figs/plotp-1.png"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genostats/milorGWAS/master/figs/qqplotsMLM-1.png"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genostats/milorGWAS/master/figs/qqplotsMLR-1.png"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Building a small data set",
        "parent_header": [
          "Running `association.test.logistic`"
        ],
        "type": "Text_excerpt",
        "value": "-------------------------\n\nIn the following code, after loading the package, we use an example from\n`gaston` to simulate a binary phenotype with a random component\n*\u03c9*\u2004\u223c\u2004*N*(0,\u2006*\u03c4**K*), in the model\nlogit*P*(*Y*\u2004=\u20041)\u2004=\u2004*X**\u03b2*\u2005+\u2005*\u03c9*.\n\nThe following lines creates a small genotype matrix `x` containing data\nfrom 1000 genomes, for 503 europeans and 733 SNPs on a region including\nthe TTN gene (`?TTN` for details). The simulation of the phenotype can\nbe done as follows.\n\n``` r\nlibrary(milorGWAS)\nx <- as.bed.matrix(TTN.gen, TTN.fam, TTN.bim)\nx\n```\n\n    ## A bed.matrix with 503 individuals and 733 markers.\n    ## snps stats are set\n    ## ped stats are set\n\n``` r\noptions(gaston.verbose = FALSE)\n```\n\nLet\u2019s simulate a random phenotype.\n\n``` r\nset.seed(1)\n## some covariates : an intercept, and a uniformly distributed covariate.\nX <- cbind(1, runif(nrow(x)))\n## A random GRM\nran <- random.pm(nrow(x))\n## random effects (with variance tau = 1)\nomega <- lmm.simu(1, 0, eigenK=ran$eigen)$omega\n## linear term of the model\nL <- X %*% c(0.1,-0.2) + omega\n## vector of probabilities p = expit(L)\np <- 1/(1+exp( -L ))\n## vector of binary phenotypes\ny <- rbinom(length(p), 1, p)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8220119514310352,
      "result": {
        "original_header": "milorGWAS: MIxed LOgistic Regression in GWAS",
        "type": "Text_excerpt",
        "value": "This package relies on the package `gaston`, which we will use in the\nfollowing. We are going to illustrate below the functions exported by\n`milorGWAS`: `association.test.logistic`, `qqplot.pvalues` (which\nreplaces and extends the function `gaston::qqplot.pvalues`), and\n`SNP.category`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998724740361747,
      "result": {
        "original_header": "Loading the data",
        "type": "Text_excerpt",
        "value": "The package needs to be installed first.\n``` r\ninstall.packages(\"GridData\", repos=\"https://genostats.github.io/R/\")\n```\nThen the data are easily loaded with\n``` r\nfilepath <-system.file(\"extdata\", \"GridData.bed\", package=\"GridData\")\nx <- read.bed.matrix(filepath)\nx <- set.stats(x)\n```\nA look at the data size:\n``` r\nx\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8357215889970399,
      "result": {
        "original_header": "Drawing stratified QQ-plots",
        "type": "Text_excerpt",
        "value": "<img src=\"figs/qqplotsMLM-1.png\" width=\"864\" /> \n<img src=\"figs/qqplotsMLR-1.png\" width=\"864\" />\n \n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/genostats/milorGWAS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "milorGWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "genostats"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 66638,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16898,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 28,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Logistic mixed model with Gaston",
        "parent_header": [
          "Running `association.test.logistic`"
        ],
        "type": "Text_excerpt",
        "value": "--------------------------------\n\nThe package `gaston` can analyze these data with the Penalized Quasi\nLikelihood method (`a0` below), which is too computationnaly heavy to\nscale to a GWAS, or with a score test, similar to GMMAT (Chen et al.,\n2016) (`a1` below), which is fast but does not estimate *\u03b2*\u2019s for each\nSNP.\n\n``` r\na.pql <- association.test(x, y, X, K = ran$K, method = \"lmm\", response = \"bin\", test = \"wald\")\na.gmm <- association.test(x, y, X, K = ran$K, method = \"lmm\", response = \"bin\", test = \"score\")\n```\n\nHere are the results for the first 6 SNPs of the data set, which give\nsimilar *p*-values.\n\n``` r\nhead(a.pql)\n```\n\n    ##   chr       pos         id A1 A2    freqA2        tau        beta        sd          p\n    ## 1   2 179200322  rs7571247  C  T 0.9025845 0.02676486 -0.36346036 0.2172089 0.09426397\n    ## 2   2 179200714  rs3813253  G  A 0.7664016 0.02507730  0.04752710 0.1525129 0.75532412\n    ## 3   2 179200947  rs6760059  T  C 0.8399602 0.02617219 -0.08552013 0.1760519 0.62713257\n    ## 4   2 179201048 rs16866263  T  G 0.9433400 0.02588978  0.15828800 0.2729198 0.56192813\n    ## 5   2 179201380 rs77946091  A  G 0.9433400 0.02589061  0.15828758 0.2729198 0.56192916\n    ## 6   2 179201557 rs77711640  A  G 0.9423459 0.02560713  0.12033790 0.2707140 0.65666641\n\n``` r\nhead(a.gmm)\n```\n\n    ##   chr       pos         id A1 A2    freqA2      score          p\n    ## 1   2 179200322  rs7571247  C  T 0.9025845 2.83461240 0.09225306\n    ## 2   2 179200714  rs3813253  G  A 0.7664016 0.09741459 0.75495457\n    ## 3   2 179200947  rs6760059  T  C 0.8399602 0.23637475 0.62683681\n    ## 4   2 179201048 rs16866263  T  G 0.9433400 0.33748981 0.56128175\n    ## 5   2 179201380 rs77946091  A  G 0.9433400 0.33748981 0.56128175\n    ## 6   2 179201557 rs77711640  A  G 0.9423459 0.19810102 0.65625803\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Logistic mixed model with milorGWAS",
        "parent_header": [
          "Running `association.test.logistic`"
        ],
        "type": "Text_excerpt",
        "value": "-----------------------------------\n\nMilorGWAS proposes two more methods, named `offset` and `amle` (Milet\nand Perdry, 2020, for details). Again we show the results for the six\nfirst SNPs.\n\n``` r\na.ofst <- association.test.logistic(x, y, X, K = ran$K, algorithm = \"offset\")\na.amle <- association.test.logistic(x, y, X, K = ran$K, algorithm = \"amle\")\nhead(a.ofst)\n```\n\n    ##   chr       pos         id A1 A2    freqA2        beta        sd          p\n    ## 1   2 179200322  rs7571247  C  T 0.9025845 -0.36176887 0.2164701 0.09467853\n    ## 2   2 179200714  rs3813253  G  A 0.7664016  0.04734463 0.1520347 0.75549147\n    ## 3   2 179200947  rs6760059  T  C 0.8399602 -0.08510584 0.1754785 0.62768126\n    ## 4   2 179201048 rs16866263  T  G 0.9433400  0.15752648 0.2720386 0.56254914\n    ## 5   2 179201380 rs77946091  A  G 0.9433400  0.15752648 0.2720386 0.56254914\n    ## 6   2 179201557 rs77711640  A  G 0.9423459  0.11977405 0.2698536 0.65715228\n\n``` r\nhead(a.amle)\n```\n\n    ##   chr       pos         id A1 A2    freqA2        beta        sd          p\n    ## 1   2 179200322  rs7571247  C  T 0.9025845 -0.35834443 0.2128403 0.09225306\n    ## 2   2 179200714  rs3813253  G  A 0.7664016  0.04755516 0.1523651 0.75495457\n    ## 3   2 179200947  rs6760059  T  C 0.8399602 -0.08537859 0.1756097 0.62683681\n    ## 4   2 179201048 rs16866263  T  G 0.9433400  0.15812891 0.2721955 0.56128175\n    ## 5   2 179201380 rs77946091  A  G 0.9433400  0.15812891 0.2721955 0.56128175\n    ## 6   2 179201557 rs77711640  A  G 0.9423459  0.12029441 0.2702726 0.65625803\n\nThe *p*-value from the `amle` method is always the same as the *p*-value\nfrom the score test (GMMAT).\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Comparing the results",
        "parent_header": [
          "Running `association.test.logistic`"
        ],
        "type": "Text_excerpt",
        "value": "---------------------\n\nWe can compare the *\u03b2*\u2019s obtained by the `amle` or `offset` algorithm\nwith the values obtained with the PQL:\n\n``` r\npar(mfrow=c(1,2), cex = 0.9)\nplot(a.amle$beta, a.pql$beta, xlab = \"AMLE\", ylab = \"PQL\"); abline(0,1,col=4)\nplot(a.ofst$beta, a.pql$beta, xlab = \"Offset\", ylab = \"PQL\"); abline(0,1,col=4)\n```\n\n![](figs/plotbeta-1.png)\n\nA similar comparison for the *p*-values (remember that `amle` gives the\nsame *p*-values than the score test).\n\n``` r\npar(mfrow=c(1,2), cex = 0.9)\nplot(a.amle$p, a.pql$p, log = \"xy\", xlab = \"AMLE/score\", ylab = \"PQL\"); abline(0,1,col=4)\nplot(a.ofst$p, a.pql$p, log = \"xy\", xlab = \"Offset\", ylab = \"PQL\"); abline(0,1,col=4)\n```\n\n![](figs/plotp-1.png)\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the association test",
        "parent_header": [
          "Stratified qq-plots"
        ],
        "type": "Text_excerpt",
        "value": "----------------------------\n\nThe GRM is computed with Gaston, here on the whole set of SNPs (at\nlinkage equilibrium).\n\n``` r\nK <- GRM(x)\neigenK <- eigen(K)\n```\n\nWe run a Mixed Linear Model (MLM) and a Mixed Logistic Regression (MLR).\n\n``` r\nMLM <- association.test(x, method = \"lmm\", response = \"quantitative\",\n                        test = \"wald\", eigenK = eigenK, p = 10)\nMLR <- association.test.logistic(x,  K = K, eigenK = eigenK, p = 10, algorithm = \"amle\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/genostats/milorGWAS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:31:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}