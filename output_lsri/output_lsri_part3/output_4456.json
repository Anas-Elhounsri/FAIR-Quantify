{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Legana/ampir"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-30T02:04:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-25T02:25:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "antimicrobial peptide prediction in R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction to ampir",
        "type": "Text_excerpt",
        "value": "\n\n[![](https://img.shields.io/badge/Shiny-ampir-blue?style=flat&labelColor=white&logo=RStudio&logoColor=blue)](https://ampir.marine-omics.net/)\n[![](https://img.shields.io/badge/doi-10.1093/bioinformatics/btaa653-yellow.svg)](https://doi.org/10.1093/bioinformatics/btaa653)\n[![Travis build\nstatus](https://travis-ci.com/Legana/ampir.svg?branch=master)](https://travis-ci.com/Legana/ampir)\n[![codecov](https://codecov.io/gh/Legana/ampir/branch/master/graph/badge.svg)](https://codecov.io/gh/Legana/ampir)\n[![License: GPL\nv2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\n[![CRAN_Release_Badge](http://www.r-pkg.org/badges/version-ago/ampir)](https://CRAN.R-project.org/package=ampir?color=yellow)\n![CRAN_Download_Badge](http://cranlogs.r-pkg.org/badges/grand-total/ampir?color=red)\n[![](http://cranlogs.r-pkg.org/badges/last-month/ampir?color=green)](https://cran.r-project.org/package=ampir)\n\n\nThe **ampir** (short for **a**nti**m**icrobial **p**eptide prediction\n**i**n **r** ) package was designed to be a fast and user-friendly\nmethod to predict antimicrobial peptides (AMPs) from any given size\nprotein dataset. **ampir** uses a *supervised statistical machine\nlearning* approach to predict AMPs. It incorporates two support vector\nmachine classification models, \u201cprecursor\u201d and \u201cmature\u201d that have been\ntrained on publicly available antimicrobial peptide data. The default\nmodel, \u201cprecursor\u201d is best suited for full length proteins and the\n\u201cmature\u201d model is best suited for small mature proteins (\\<60 amino\nacids). **ampir** also accepts custom (user trained) models based on the\n[caret](https://github.com/topepo/caret) package. Please see the\n**ampir** *\u201cHow to train your model\u201d*\n[vignette](https://CRAN.R-project.org/package=ampir/vignettes/train_model.html)\nfor details.\n\nampir\u2019s associated paper is published in the *Bioinformatics* journal as\n[btaa653](https://academic.oup.com/bioinformatics/article-abstract/doi/10.1093/bioinformatics/btaa653/5873588).\nPlease cite this paper if you use ampir in your research.\n\nampir is also available via a Shiny based GUI at\n<https://ampir.marine-omics.net/> where users can submit protein\nsequences in FASTA file format to be classified by either the\n\u201cprecursor\u201d or \u201cmature\u201d model. The prediction results can then be\ndownloaded as a csv file.\n"
      },
      "source": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/legana/ampir/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Legana/ampir/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Legana/ampir"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction to ampir"
      },
      "source": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/legana/ampir/master/data-raw/download.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Introduction to ampir"
        ],
        "type": "Text_excerpt",
        "value": "You can install the released version of ampir from\n[CRAN](https://CRAN.R-project.org) with:\n\n``` r\ninstall.packages(\"ampir\")\n```\n\nAnd the development version from [GitHub](https://github.com/) with:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"Legana/ampir\")\n```\n\n``` r\nlibrary(ampir)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Legana/ampir/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/legana/ampir/master/inst/logo/ampir_hex.png"
      },
      "source": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ampir"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Legana"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 29271,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 4574,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 197,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/legana/ampir/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:31:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Introduction to ampir"
        ],
        "type": "Text_excerpt",
        "value": "Standard input to **ampir** is a `data.frame` with sequence names in the\nfirst column and protein sequences in the second column.\n\nRead in a FASTA formatted file as a `data.frame` with `read_faa()`\n\n``` r\nmy_protein_df <- read_faa(system.file(\"extdata/little_test.fasta\", package = \"ampir\"))\n```\n\n| seq_name         | seq_aa                                         |\n|:-----------------|:-----------------------------------------------|\n| G1P6H5_MYOLU     | MALTVRIQAACLLLLLLASLTSYSLLLSQTTQLADLQTQDTAGAT\u2026 |\n| L5L3D0_PTEAL     | MKPLLIVFVFLIFWDPALAGLNPISSEMYKKCYGNGICRLECYTS\u2026 |\n| A0A183U1F1_TOXCA | LLRLYSPLVMFATRRVLLCLLVIYLLAQPIHSSWLKKTYKKLENS\u2026 |\n| Q5F4I1_DROPS     | MNFYKIFIFVALILAISVGQSEAGWLKKLGKRLERVGQHTRDATI\u2026 |\n| A7S075_NEMVE     | MFLKVVVVLLAVELSVAQSARQRVRPLDRKAGRKRFAPIFPRQCS\u2026 |\n| F1DFM9_9CNID     | MKVLVILFGAMLVLMEFQKASAATLLEDFDDDDDLLDDGGDFDLE\u2026 |\n| Q5XV93_ARATH     | MSKREYERQLANEEDEQLRNFQAAVAARSAILHEPKEAALPPPAP\u2026 |\n| Q2XXN9_POGBA     | MRFLYLLFAVAFLFSVQAEDAELEQEQQGDPWEGLDEFQDQPPDD\u2026 |\n\nCalculate the probability that each protein is an antimicrobial peptide\nwith `predict_amps()`. Since these proteins are all full length\nprecursors rather than mature peptides we use `ampir`\u2019s built-in\nprecursor model.\n\n*Note that amino acid sequences that are shorter than 10 amino acids\nlong and/or contain anything other than the standard 20 amino acids are\nnot evaluated and will contain an `NA` as their `prob_AMP` value.*\n\n``` r\nmy_prediction <- predict_amps(my_protein_df, model = \"precursor\")\n```\n\n| seq_name         | seq_aa                                         | prob_AMP |\n|:-----------------|:-----------------------------------------------|---------:|\n| G1P6H5_MYOLU     | MALTVRIQAACLLLLLLASLTSYSLLLSQTTQLADLQTQDTAGAT\u2026 |    0.612 |\n| L5L3D0_PTEAL     | MKPLLIVFVFLIFWDPALAGLNPISSEMYKKCYGNGICRLECYTS\u2026 |    0.945 |\n| A0A183U1F1_TOXCA | LLRLYSPLVMFATRRVLLCLLVIYLLAQPIHSSWLKKTYKKLENS\u2026 |    0.088 |\n| Q5F4I1_DROPS     | MNFYKIFIFVALILAISVGQSEAGWLKKLGKRLERVGQHTRDATI\u2026 |    0.998 |\n| A7S075_NEMVE     | MFLKVVVVLLAVELSVAQSARQRVRPLDRKAGRKRFAPIFPRQCS\u2026 |    0.032 |\n| F1DFM9_9CNID     | MKVLVILFGAMLVLMEFQKASAATLLEDFDDDDDLLDDGGDFDLE\u2026 |    0.223 |\n| Q5XV93_ARATH     | MSKREYERQLANEEDEQLRNFQAAVAARSAILHEPKEAALPPPAP\u2026 |    0.009 |\n| Q2XXN9_POGBA     | MRFLYLLFAVAFLFSVQAEDAELEQEQQGDPWEGLDEFQDQPPDD\u2026 |    0.733 |\n\nPredicted proteins with a specified predicted probability value could\nthen be extracted and written to a FASTA file:\n\n``` r\nmy_predicted_amps <- my_protein_df[which(my_prediction$prob_AMP >= 0.8),]\n```\n\n|     | seq_name     | seq_aa                                         |\n|:----|:-------------|:-----------------------------------------------|\n| 2   | L5L3D0_PTEAL | MKPLLIVFVFLIFWDPALAGLNPISSEMYKKCYGNGICRLECYTS\u2026 |\n| 4   | Q5F4I1_DROPS | MNFYKIFIFVALILAISVGQSEAGWLKKLGKRLERVGQHTRDATI\u2026 |\n\nWrite the `data.frame` with sequence names in the first column and\nprotein sequences in the second column to a FASTA formatted file with\n`df_to_faa()`\n\n``` r\ndf_to_faa(my_predicted_amps, \"my_predicted_amps.fasta\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/legana/ampir/master/README.Rmd",
      "technique": "header_analysis"
    }
  ]
}