{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please cite our paper as follows:\n>N.Q.K. Le. 2019. Fertility-GRU: Identifying Fertility-Related Proteins by Incorporating Deep-Gated Recurrent Units and Original Position-Specific Scoring Matrix Profiles. *J. Proteome Res.* 18, 9, 3503-351. doi: 10.1021/acs.jproteome.9b00411\n"
      },
      "source": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/khanhlee/fertility-gru"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-23T07:46:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-12T03:29:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Identifying fertility-related proteins by incorporating GRU and PSSM profiles"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8967967440419766,
      "result": {
        "original_header": "Fertility-GRU: Identifying fertility-related proteins by incorporating GRU and PSSM profiles",
        "type": "Text_excerpt",
        "value": "Note: for the PSSM dataset, please go to \"pssm\" directory and extract to use. \nStep 1: Extract all PSSM files into 2 separate folders:\n- \"fertility\": positive data\n- \"non-fertility\": negative data \nStep 2: Put sequence IDs into training and list file:\n- Training dataset: 2 files \"fertility.cv.list\" and \"non-fertility.cv.list\"\n- Testing dataset: 2 files \"fertility.ind.list\" and \"non-fertility.ind.list\"\n(We provided our training and testing list file, the authors can change according to their purpose) \n"
      },
      "source": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/khanhlee/fertility-gru/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/khanhlee/fertility-gru/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "khanhlee/fertility-gru"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fertility-GRU: Identifying fertility-related proteins by incorporating GRU and PSSM profiles"
      },
      "source": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8733740006771789,
      "result": {
        "original_header": "Fertility-GRU: Identifying fertility-related proteins by incorporating GRU and PSSM profiles",
        "type": "Text_excerpt",
        "value": "Step-by-step to use: \nStep 1: Extract all PSSM files into 2 separate folders:\n- \"fertility\": positive data\n- \"non-fertility\": negative data \n"
      },
      "source": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9047661003075766,
      "result": {
        "original_header": "Fertility-GRU: Identifying fertility-related proteins by incorporating GRU and PSSM profiles",
        "type": "Text_excerpt",
        "value": "Step 3: Run Python code to train and evaluate model:\n- python3 oogenesis_gru.py \n"
      },
      "source": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/khanhlee/fertility-gru/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fertility-gru"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "khanhlee"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 15084,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/khanhlee/fertility-gru/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:45:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}