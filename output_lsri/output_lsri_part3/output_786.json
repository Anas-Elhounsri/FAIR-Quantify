{
  "application_domain": [
    {
      "confidence": 32.3,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "scMRMA: single cell Multi-Resolution Marker-based Annotation Algorithm"
        ],
        "type": "Text_excerpt",
        "value": "Li, Jia, et al. \"scMRMA: single cell multiresolution marker-based annotation.\" Nucleic acids research 50.2 (2022): e7-e7.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JiaLiVUMC/scMRMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-20T18:50:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T18:35:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9249991252967285,
      "result": {
        "original_header": "Other functions",
        "type": "Text_excerpt",
        "value": "__Self-defined database__\n```R\n# Note: please provide correct format of hierarchical database\n# By default, cell types and genes are separeted by comma without space\n# >CD4 T cells,T cells #leaf celltype,root celltype\n# CD4,FOXP3,IL2RA,IL7R #GeneA,GeneB,GeneC,GeneD\n\nCellType <- selfDefinedDatabase(file = system.file(\"data\", \"markerExample.txt\", package = \"scMRMA\"))\n```\n__Use pre-trained classifier from Garnett__\n```R\n# Note: pre-trained human PBMC Garnett classifier\n\nhsPBMC <- selfDefinedDatabase(file = system.file(\"data\", \"Garnett_hsPBMC.txt\", package = \"scMRMA\"))\n```\n__Add genes to existing database__\n```R\n# Note: provide the correct format for gene and cell type list. First column includes genes and second column includes cell types in the last level.\n\ngenelist <- matrix(c(\"Genea\",\"Geneb\",\"Tr1\",\"Microglia\"),nrow = 2,byrow = F)\ncolnames(genelist) <- c(\"Gene\",\"cellType\")\nCellType_new <- addGene(geneCellTypeList = genelist,celltype = CellType)\n\n```\n__Hierarchical database visualization__\n```R\n# Note: it will generate a Database.html file within your current path.\n\nCellType <- get_celltype(species=\"Hs\",db=\"TcellAI\")\ndatabaseVisual(celltype = CellType)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JiaLiVUMC/scMRMA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JiaLiVUMC/scMRMA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JiaLiVUMC/scMRMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scMRMA: single cell Multi-Resolution Marker-based Annotation Algorithm"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/Database_TcellAI.png"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/scMRMA_brain.png"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "scMRMA: single cell Multi-Resolution Marker-based Annotation Algorithm"
        ],
        "type": "Text_excerpt",
        "value": "scMRMA R package can be easily installed from Github using devtools:  \n\n```\ndevtools::install_github(\"JiaLiVUMC/scMRMA\")\n```\nsome users might have issues when installing scMRMA package due to the version of C++, please check possible solution through [this website](https://teuder.github.io/rcpp4everyone_en/020_install.html)\n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9939607996158378,
      "result": {
        "original_header": "scMRMA: single cell Multi-Resolution Marker-based Annotation Algorithm",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img width=\"900\"  src=\"https://github.com/JiaLiVUMC/scMRMA/blob/main/overview_scMRMA.png\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9930823224051382,
      "result": {
        "original_header": "Other functions",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img width=\"450\"  src=\"https://github.com/JiaLiVUMC/scMRMA/blob/main/Database_TcellAI.png\">\n</p> \n<p align=\"center\">\n  <img width=\"950\"  src=\"https://github.com/JiaLiVUMC/scMRMA/blob/main/scMRMA_brain.png\">\n</p> \n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JiaLiVUMC/scMRMA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/overview_scMRMA.png"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scMRMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JiaLiVUMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 59035,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 33182,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:21:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "scMRMA: single cell Multi-Resolution Marker-based Annotation Algorithm"
        ],
        "type": "Text_excerpt",
        "value": "After installing scMRMA, use following codes to run [example](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3580745):\n\n```R\n# Note: example will take two minutes.\n\nlibrary(scMRMA)\nload(system.file(\"data\", \"MouseBrain.Rdata\", package = \"scMRMA\"))\nresult <- scMRMA(input = Brain_GSM3580745,\n                 species = \"Mm\",\n                 db = \"panglaodb\",\n                 p = 0.05,\n                 normalizedData = F,\n                 selfDB = NULL,\n                 selfClusters = NULL,\n                 k=20)\n```\n\n`input` Count matrix with genes in row and cells in column. Formats of matrix, dgCMatrix, data.frame, Seurat and SingleCellExperiment object are all acceptable.\n\n`species` Species of cell. Select `\"Hs\"` (default) or `\"Mm\"`.\n\n`db` Hierarchical cell type reference database. Select `\"panglaodb\"` (default) or `\"TcellAI\"`.\n\n`p` P value cutoff from fisher test for the significant cell type enrichment. Default is `0.05`.\n\n`normalizedData` Use user-provided normalized data. Default is `F` to use default method for normalization.\n\n`selfDB` Use user-provided or modified hierarchical cell type database.\n\n`selfClusters` Use fixed clusters in each level. If provided cluster information, re-clustering will not be performed for intermediate nodes.\n\n`k` Number of nearest neighbor to build the graph for clustering. Dafault if 20. The value can be set smaller for very rare and small clusters.\n\n__Output__\n\n`result` A list includes annotation results based on multi-resolution and uniform-resolution. \n\n`result$multiR$annotationResult` A data frame stores scMRMA annotation results for each cell in all reference levels. For example, totally four levels for database `panglaodb`.\n\n`result$multiR$meta` A data frame contains scMRMA cluster, celltype activity score and p value information for each cell in each level.\n\n`result$uniformR$annotationResult` A data frame stores uniform-resolution annotation results for each cell.\n\n`result$uniformR$meta` A data frame contains uniform-resolution cluster, celltype activity score and p value information for each cell in each level.\n"
      },
      "source": "https://raw.githubusercontent.com/JiaLiVUMC/scMRMA/main/README.md",
      "technique": "header_analysis"
    }
  ]
}