{
  "application_domain": [
    {
      "confidence": 17.23,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\ntitle: >-\n  openTSNE: A Modular Python Library for t-SNE Dimensionality Reduction and Embedding\nmessage: If you use this software, please cite it using the metadata from this file.\ntype: software\nauthors:\n  - given-names: Pavlin G.\n    family-names: Poli\u010dar\n    email: pavlin.policar@fri.uni-lj.si\n    orcid: 'https://orcid.org/0000-0002-6462-9372'\n    affiliation: University of Ljubljana\n  - given-names: Martin\n    family-names: Stra\u017ear\n    orcid: 'https://orcid.org/0000-0003-3064-1055'\n    affiliation: Broad Institute\n  - given-names: Bla\u017e\n    family-names: Zupan\n    orcid: 'https://orcid.org/0000-0002-5864-7056'\n    affiliation: University of Ljubljana\nidentifiers:\n  - type: doi\n    value: 10.18637/jss.v109.i03\n  - type: url\n    value: https://www.jstatsoft.org/index.php/jss/article/view/v109i03\nrepository-code: 'https://github.com/pavlin-policar/openTSNE'\nabstract: >-\n  One of the most popular techniques for visualizing large,\n  high-dimensional data sets is t-distributed stochastic\n  neighbor embedding (t-SNE). Recently, several extensions\n  have been proposed to address scalability issues and the\n  quality of the resulting visualizations. We introduce\n  openTSNE, a modular Python library that implements the\n  core t-SNE algorithm and its many extensions. The library\n  is faster than existing implementations and can compute\n  projections of data sets containing millions of data\n  points in minutes.\nkeywords:\n  - t-SNE\n  - embedding\n  - visualization\n  - dimensionality reduction\n  - Python\nlicense: BSD-3-Clause\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "openTSNE"
        ],
        "type": "Text_excerpt",
        "value": "If you make use of openTSNE for your work we would appreciate it if you would cite the paper\n\n.. code::\n\n    @article{Policar2024,\n        title={openTSNE: A Modular Python Library for t-SNE Dimensionality Reduction and Embedding},\n        author={Poli{\\v c}ar, Pavlin G. and Stra{\\v z}ar, Martin and Zupan, Bla{\\v z}},\n        journal={Journal of Statistical Software},\n        year={2024},\n        volume={109},\n        number={3},\n        pages={1\u201330},\n        doi={10.18637/jss.v109.i03},\n        url={https://www.jstatsoft.org/index.php/jss/article/view/v109i03}\n    }\n    \nopenTSNE implements two efficient algorithms for t-SNE. Please consider citing the original authors of the algorithm that you use. If you use FIt-SNE (default), then the citation is [5]_ below, but if you use Barnes-Hut the citations are [3]_ and [4]_.\n\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "openTSNE"
        ],
        "type": "Text_excerpt",
        "value": ".. [1] Van Der Maaten, Laurens, and Hinton, Geoffrey. `\u201cVisualizing data using\n    t-SNE.\u201d <http://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf>`__\n    Journal of Machine Learning Research 9.Nov (2008): 2579-2605.\n.. [2] Poli\u010dar, Pavlin G., Martin Stra\u017ear, and Bla\u017e Zupan. `\u201cEmbedding to Reference t-SNE Space Addresses Batch Effects in Single-Cell Classification.\u201d <https://link.springer.com/article/10.1007/s10994-021-06043-1>`__ Machine Learning (2021): 1-20.\n.. [3] Van Der Maaten, Laurens. `\u201cAccelerating t-SNE using tree-based algorithms.\u201d\n    <http://www.jmlr.org/papers/volume15/vandermaaten14a/vandermaaten14a.pdf>`__\n    Journal of Machine Learning Research 15.1 (2014): 3221-3245.\n.. [4] Yang, Zhirong, Jaakko Peltonen, and Samuel Kaski. `\"Scalable optimization of neighbor embedding for visualization.\" <https://proceedings.mlr.press/v28/yang13b.html>`__ International Conference on Machine Learning. PMLR, 2013.\n.. [5] Linderman, George C., et al. `\"Fast interpolation-based t-SNE for improved\n    visualization of single-cell RNA-seq data.\" <https://www.nature.com/articles/s41592-018-0308-4>`__ Nature Methods 16.3 (2019): 243.\n.. [6] Kobak, Dmitry, and Berens, Philipp. `\u201cThe art of using t-SNE for single-cell transcriptomics.\u201d <https://www.nature.com/articles/s41467-019-13056-x>`__\n    Nature Communications 10, 5416 (2019).\n.. [7] Macosko, Evan Z., et al. `\u201cHighly parallel genome-wide expression profiling of\n    individual cells using nanoliter droplets.\u201d\n    <https://www.sciencedirect.com/science/article/pii/S0092867415005498>`__\n    Cell 161.5 (2015): 1202-1214.\n\n.. |Build Status| image:: https://dev.azure.com/pavlingp/openTSNE/_apis/build/status/Test?branchName=master\n   :target: https://dev.azure.com/pavlingp/openTSNE/_build/latest?definitionId=1&branchName=master\n.. |ReadTheDocs Badge| image:: https://readthedocs.org/projects/opentsne/badge/?version=latest\n   :target: https://opentsne.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. |License Badge| image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n   :target: https://opensource.org/licenses/BSD-3-Clause\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Poli{\\v c}ar, Pavlin G. and Stra{\\v z}ar, Martin and Zupan, Bla{\\v z}",
        "doi": "10.18637/jss.v109.i03",
        "format": "bibtex",
        "title": "openTSNE: A Modular Python Library for t-SNE Dimensionality Reduction and Embedding",
        "type": "Text_excerpt",
        "url": "https://www.jstatsoft.org/index.php/jss/article/view/v109i03",
        "value": "@article{Policar2024,\n    url = {https://www.jstatsoft.org/index.php/jss/article/view/v109i03},\n    doi = {10.18637/jss.v109.i03},\n    pages = {1\u201330},\n    number = {3},\n    volume = {109},\n    year = {2024},\n    journal = {Journal of Statistical Software},\n    author = {Poli{\\v c}ar, Pavlin G. and Stra{\\v z}ar, Martin and Zupan, Bla{\\v z}},\n    title = {openTSNE: A Modular Python Library for t-SNE Dimensionality Reduction and Embedding},\n}"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pavlin-policar/openTSNE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-08T18:42:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T19:43:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Extensible, parallel implementations of t-SNE"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9145739487891174,
      "result": {
        "original_header": "openTSNE",
        "type": "Text_excerpt",
        "value": "openTSNE is a modular Python implementation of t-Distributed Stochasitc Neighbor Embedding (t-SNE) [1]_, a popular dimensionality-reduction algorithm for visualizing high-dimensional data sets. openTSNE incorporates the latest improvements to the t-SNE algorithm, including the ability to add new data points to existing embeddings [2]_, massive speed improvements [3]_ [4]_ [5]_, enabling t-SNE to scale to millions of data points and various tricks to improve global alignment of the resulting visualizations [6]_. \n   A visualization of 44,808 single cell transcriptomes obtained from the mouse retina [7]_ embedded using the multiscale kernel trick to better preserve the global aligment of the clusters. \n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://opentsne.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/pavlin-policar/openTSNE/wiki"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pavlin-policar/openTSNE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/benchmarks/benchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/benchmarks/benchmark.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/01_simple_usage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/01_simple_usage.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/03_preserving_global_structure.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/03_preserving_global_structure.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/05_animation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/05_animation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/prepare_10x.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/prepare_10x.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/prepare_macosko_2015.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/prepare_macosko_2015.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/04_large_data_sets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/04_large_data_sets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/02_advanced_usage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/02_advanced_usage.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/docs/figures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/docs/figures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_macosko.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_macosko.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_zeisel.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_zeisel.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_10x.ipynb"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/examples/figures/figures_10x.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 160
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pavlin-policar/openTSNE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "openTSNE"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "openTSNE"
        ],
        "type": "Text_excerpt",
        "value": "openTSNE requires Python 3.8 or higher in order to run.\n\nConda\n~~~~~\n\nopenTSNE can be easily installed from ``conda-forge`` with\n\n::\n\n   conda install --channel conda-forge opentsne\n\n`Conda package <https://anaconda.org/conda-forge/opentsne>`__\n\nPyPi\n~~~~\n\nopenTSNE is also available through ``pip`` and can be installed with\n\n::\n\n   pip install opentsne\n\n`PyPi package <https://pypi.org/project/openTSNE>`__\n\nInstalling from source\n~~~~~~~~~~~~~~~~~~~~~~\n\nIf you wish to install openTSNE from source, please run\n\n::\n\n   pip install .\n\n\nin the root directory to install the appropriate dependencies and compile the necessary binary files.\n\nPlease note that openTSNE requires a C/C++ compiler to be available on the system.\n\nIn order for openTSNE to utilize multiple threads, the C/C++ compiler\nmust support ``OpenMP``. In practice, almost all compilers\nimplement this with the exception of older version of ``clang`` on OSX\nsystems.\n\nTo squeeze the most out of openTSNE, you may also consider installing\nFFTW3 prior to installation. FFTW3 implements the Fast Fourier\nTransform, which is heavily used in openTSNE. If FFTW3 is not available,\nopenTSNE will use numpy\u2019s implementation of the FFT, which is slightly\nslower than FFTW. The difference is only noticeable with large data sets\ncontaining millions of data points.\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "openTSNE",
        "type": "Text_excerpt",
        "value": "- `Documentation <http://opentsne.readthedocs.io>`__\n- `User Guide and Tutorial <https://opentsne.readthedocs.io/en/latest/tsne_algorithm.html>`__\n- Examples: `basic <https://opentsne.readthedocs.io/en/latest/examples/01_simple_usage/01_simple_usage.html>`__, `advanced <https://opentsne.readthedocs.io/en/latest/examples/02_advanced_usage/02_advanced_usage.html>`__, `preserving global alignment <https://opentsne.readthedocs.io/en/latest/examples/03_preserving_global_structure/03_preserving_global_structure.html>`__, `embedding large data sets <https://opentsne.readthedocs.io/en/latest/examples/04_large_data_sets/04_large_data_sets.html>`__\n- `Speed benchmarks <https://opentsne.readthedocs.io/en/latest/benchmarks.html>`__\n \n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dimensionality-reduction, embedding, machine-learning, tsne, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2018, Pavlin Poli\u010dar\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "openTSNE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pavlin-policar"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 279658,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 223811,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 78041,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 65698,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 29489,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 8156,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2024-08-13T10:02:03Z",
        "date_published": "2024-08-13T11:02:28Z",
        "description": "General maintenance to keep openTSNE up to date with Python versions and dependencies.\r\n\r\n## Changes\r\n\r\n- build wheels for Python 3.12 (#255)\r\n- update minimum Python version to 3.9 (4e86511b1a2c041d122cb2869480b0c96af79d63)\r\n- add numpy 2.x support (aa3d76c2d86055caae0601cec10dd53db7769b8e)",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v1.0.2",
        "name": "v1.0.2",
        "release_id": 169942316,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/169942316",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/169942316",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2023-11-29T13:48:39Z",
        "date_published": "2023-11-29T14:50:50Z",
        "description": "## Changes\r\n\r\n- setup.py maintenance (#249)\r\n- drop Python 3.6 support (#249)\r\n- correctly implement dof parameter in exact BH implementation (#246)",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 131927608,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/131927608",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/131927608",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2023-05-24T13:45:24Z",
        "date_published": "2023-05-24T13:51:37Z",
        "description": "Given the longtime stability of openTSNE, it is only fitting that we release a v1.0.0.\r\n\r\n## Changes\r\n\r\n- Various documentation fixes involving initialization, momentum, and learning rate (#243)\r\n- Include Python 3.11 in the test and build matrix\r\n- Uniform affinity kernel now supports `mean` and `max` mode (#242)",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v1.0.0",
        "release_id": 104119178,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/104119178",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/104119178",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2023-02-20T15:22:10Z",
        "date_published": "2023-02-20T15:45:58Z",
        "description": "# Bug Fixes\r\n\r\n- (urgent) Fix memory error on data with duplicated rows (#236)",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.7.1",
        "name": "v0.7.1",
        "release_id": 93042403,
        "tag": "v0.7.1",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/93042403",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/93042403",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2023-02-15T14:42:51Z",
        "date_published": "2023-02-15T15:07:54Z",
        "description": "## Changes\r\n- By default, we now add jitter to non-random initialization schemes. This has almost no effect on the resulting visualizations, but helps avoid potential problems when points are initialized at identical positions (#225)\r\n- By default, the learning rate is now calculated as `N/exaggeration`. This speeds up convergence of the resulting embedding. Note that the learning rate during the EE phase will differ from the learning rate during the standard phase. Additionally, we set `momentum=0.8` in both phases. Before, it was 0.5 during EE and 0.8 during the standard phase. This, again, speeds up convergence. (#220)\r\n- Add `PrecomputedAffinities` to wrap square affinity matrices (#217)\r\n\r\n## Build changes\r\n- Build `universal2` macos wheels enabling ARM support (#226)\r\n\r\n## Bug Fixes\r\n- Fix BH collapse for smaller data sets (#235)\r\n- Fix `updates` in optimizer not being stored correctly between optimization calls (#229)\r\n- Fix `inplace=True` optimization changing the initializations themselves in some rare use-cases (#225)\r\n\r\nAs usual, a special thanks to @dkobak for helping with practically all of these bugs/changes.",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.7.0",
        "name": "v0.7.0",
        "release_id": 92565589,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/92565589",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/92565589",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2022-03-18T13:03:22Z",
        "date_published": "2022-03-18T13:55:30Z",
        "description": "## Changes\r\n- By default, we now use the `MultiscaleMixture` affinity model, enabling us to pass in a list of perplexities instead of a single perplexity value. This is fully backwards compatible.\r\n- Previously, perplexity values would be changed according to the dataset. E.g. we pass in `perplexity=100` with N=150. Then `TSNE.perplexity` would be equal to 50. Instead, keep this value as is and add an `effective_perplexity_` attribute (following the convention from scikit-learn, which puts in the corrected perplexity values.\r\n- Fix bug where interpolation grid was being prepared even when using BH optimization during transform.\r\n- Enable calling `.transform` with precomputed distances. In this case, the data matrix will be assumed to be a distance matrix.\r\n\r\n## Build changes\r\n- Build with `oldest-supported-numpy`\r\n- Build linux wheels on `manylinux2014` instead of `manylinux2010`, following numpy's example\r\n- Build MacOS wheels on `macOS-10.15` instead of `macos-10.14` Azure VM\r\n- Fix potential problem with clang-13, which actually does optimization with infinities using the `-ffast-math` flag\r\n",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.6.2",
        "name": "v0.6.2",
        "release_id": 62179752,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/62179752",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/62179752",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2021-04-25T19:05:09Z",
        "date_published": "2021-04-25T19:32:11Z",
        "description": "Changes:\r\n- Remove `affinites` from `TSNE` construction, allow custom affinities and initialization in `.fit` method. This improves the API when dealing with non-tabular data. This is not backwards compatible.\r\n- Add `metric=\"precomputed\"`. This includes the addition of `openTSNE.nearest_neighbors.PrecomputedDistanceMatrix` and `openTSNE.nearest_neighbors.PrecomputedNeighbors`.\r\n- Add `knn_index` parameter to `openTSNE.affinity` classes.\r\n- Add (less-than-ideal) workaround for pickling Annoy objects.\r\n- Extend the range of recommended FFTW boxes up to 1000.\r\n- Remove deprecated `openTSNE.nearest_neighbors.BallTree`.\r\n- Remove deprecated `openTSNE.callbacks.ErrorLogger`.\r\n- Remove deprecated `TSNE.neighbors_method` property.\r\n- Add and set as default `negative_gradient_method=\"auto\"`.\r\n",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.6.0",
        "name": "v0.6.0",
        "release_id": 41973460,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/41973460",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/41973460",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2020-12-21T20:49:54Z",
        "date_published": "2020-12-24T11:58:16Z",
        "description": "Main changes:\r\n- Build wheels for MacOS target 10.6\r\n- Update to annoy v1.17.0, this should result in much faster multi-threaded performance",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.5.0",
        "name": "v0.5.0",
        "release_id": 35562665,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/35562665",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/35562665",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2020-05-04T12:11:43Z",
        "date_published": "2020-05-04T12:45:49Z",
        "description": "**Major changes:**\r\n- Remove numba dependency, switch over to using Annoy nearest neighbor search. Pynndescent is now optional and can be used if installed manually.\r\n- Massively speed-up transform by keeping reference interpolation grid fixed. Limit new points to circle centered around reference embedding.\r\n- Implement variable degrees of freedom.\r\n\r\n**Minor changes:**\r\n- Add spectral initialization using diffusion maps.\r\n- Replace cumbersome `ErrorLogger` callback with the `verbose` flag.\r\n- Change the default number of iterations to 750.\r\n- Add `learning_rate=\"auto\"` option.\r\n- Remove the `min_grad_norm` parameter.\r\n\r\n**Bugfixes:**\r\n- Fix case where KL divergence was sometimes reported as NaN.",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.4.0",
        "release_id": 26140958,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/26140958",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/26140958",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pavlin-policar",
          "type": "User"
        },
        "date_created": "2018-09-11T09:46:35Z",
        "date_published": "2018-09-11T09:56:58Z",
        "description": "In order to make usage as simple as possible and remove and external dependencies on FFTW (which needed to be installed locally before), this update replaces FFTW with numpy's FFT.",
        "html_url": "https://github.com/pavlin-policar/openTSNE/releases/tag/v0.2.0",
        "name": "Replace FFTW with numpy's FFT",
        "release_id": 12833854,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/12833854",
        "value": "https://api.github.com/repos/pavlin-policar/openTSNE/releases/12833854",
        "zipball_url": "https://api.github.com/repos/pavlin-policar/openTSNE/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:02:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1454
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A hello world example",
        "parent_header": [
          "openTSNE"
        ],
        "type": "Text_excerpt",
        "value": "Getting started with openTSNE is very simple. First, we'll load up some data using scikit-learn\n\n.. code:: python\n\n   from sklearn import datasets\n\n   iris = datasets.load_iris()\n   x, y = iris[\"data\"], iris[\"target\"]\n\nthen, we'll import and run\n\n.. code:: python\n\n   from openTSNE import TSNE\n\n   embedding = TSNE().fit(x)\n"
      },
      "source": "https://raw.githubusercontent.com/pavlin-policar/openTSNE/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}