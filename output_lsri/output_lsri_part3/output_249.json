{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "Welcome to RestraintMaker"
        ],
        "type": "Text_excerpt",
        "value": "The authors want to thank Carmen Esposito and Dominik Sidler for the great discussions.\r\nProject based on the \r\n[Computational Molecular Science Python Cookiecutter](https://github.com/molssi/cookiecutter-cms) version 1.3.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Welcome to RestraintMaker"
        ],
        "type": "Text_excerpt",
        "value": "[1] The PyMOL Molecular Graphics System, Version 2.5 Schr\u00f6dinger, LLC.  (Anaconda OpenSource Version)\r\n\r\n[2] **RDKit**: **Cheminformatics** and machine learning software (2021) - http://www.rdkit.org\r\n\r\n[3] Christ, C. D.; van Gunsteren, W. F. - Enveloping Distribution Sampling: A Method to\r\nCalculate Free Energy Differences From a Single Simulation. J. Chem. Phys. 2007,\r\n126, 184110. https://doi.org/10.1063/1.2730508\r\n\r\n[4] Sidler, D.; Schwaninger, A.; Riniker, S. - Replica Exchange Enveloping Distribution Sam-\r\npling (RE-EDS): A Robust Method to Estimate Multiple Free-Energy Differences From\r\na Single Simulation. J. Chem. Phys. 2016, 145, 154114. https://doi.org/10.1063/1.4964781\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age,\nbody size, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nMoreover, project maintainers will strive to offer feedback and advice to\nensure quality and consistency of contributions to the code.  Contributions\nfrom outside the group of project maintainers are strongly welcomed but the\nfinal decision as to whether commits are merged into the codebase rests with\nthe team of project maintainers.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event. Representation of a\nproject may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at 'bschroed@ethz.ch'. The project team will\nreview and investigate all complaints, and will respond in a way that it deems\nappropriate to the circumstances. The project team is obligated to maintain\nconfidentiality with regard to the reporter of an incident. Further details of\nspecific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\n[http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rinikerlab/restraintmaker"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\nWe welcome contributions from external contributors, and this document\ndescribes how to merge code changes into this restraintmaker. \n\n## Getting Started\n\n* Make sure you have a [GitHub account](https://github.com/signup/free).\n* [Fork](https://help.github.com/articles/fork-a-repo/) this repository on GitHub.\n* On your local machine,\n  [clone](https://help.github.com/articles/cloning-a-repository/) your fork of\n  the repository.\n\n## Making Changes\n\n* Add some really awesome code to your local fork.  It's usually a [good\n  idea](http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/)\n  to make changes on a\n  [branch](https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/)\n  with the branch name relating to the feature you are going to add.\n* When you are ready for others to examine and comment on your new feature,\n  navigate to your fork of restraintmaker on GitHub and open a [pull\n  request](https://help.github.com/articles/using-pull-requests/) (PR). Note that\n  after you launch a PR from one of your fork's branches, all\n  subsequent commits to that branch will be added to the open pull request\n  automatically.  Each commit added to the PR will be validated for\n  mergability, compilation and test suite compliance; the results of these tests\n  will be visible on the PR page.\n* If you're providing a new feature, you must add test cases and documentation.\n* When the code is ready to go, make sure you run the test suite using pytest.\n* When you're ready to be considered for merging, check the \"Ready to go\"\n  box on the PR page to let the restraintmaker devs know that the changes are complete.\n  The code will not be merged until this box is checked, the continuous\n  integration returns checkmarks,\n  and multiple core developers give \"Approved\" reviews.\n\n# Additional Resources\n\n* [General GitHub documentation](https://help.github.com/)\n* [PR best practices](http://codeinthehole.com/writing/pull-requests-and-other-good-practices-for-teams-using-github/)\n* [A guide to contributing to software packages](http://www.contribution-guide.org)\n* [Thinkful PR example](http://www.thinkful.com/learn/github-pull-request-tutorial/#Time-to-Submit-Your-First-PR)\n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-19T10:59:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-17T08:45:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Restraintmaker is a tool intended to build Position or Distance restraints for Molecular Dynamics simulations (or any other simulation technique with coordinate-based particles). It can be used on a script layer or as an interactive plugin for PyMol. Features are different selection modes and Optimizers to distribute restraints."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Welcome to RestraintMaker"
        ],
        "type": "Text_excerpt",
        "value": "Thanks to recent years' methodological, software, and hardware improvements, RFE calculations can tackle more and more complex transformations. This development also causes a growing need for more efficient setups of such calculations, namely automatization. We aim to provide a link in the automatization chain which can easily be integrated into python workflows for RFE calculations or used with a GUI in PyMol. RestraintMaker contains a greedy approach to determine good placements of atom distance and/or position restraints based on geometric measures. It can generate distance/position restraints for RFE calculations with a dual state approach, such as TI. Further, it can be used to create distance/position restraints for multistate methods such as Replica Exchange Enveloping Distribution Sampling (RE-EDS) [3,4].\r\nFor more details on the history of distance restraints in RFE calculations, the algorithm of RestraintMaker, and an application to the calculation of relative hydration free energies you can check out: \r\n\r\n[RestraintMaker: a graph-based approach to select distance restraints in free-energy calculations with dual topology; *Ries, B.\\*; Rieder, S.R.\\*; Rhiner, C.; H\u00fcnenberger, P.H.; Riniker, S - J Comput Aided Mol Des (2022) - Open Access](https://doi.org/10.1007/s10822-022-00445-6)\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9656245663269456,
      "result": {
        "original_header": "Welcome to RestraintMaker",
        "type": "Text_excerpt",
        "value": "\r\nRestraintMaker is a tool for MD-simulation restraint preparation. The package can be used to manually pick position - or distance restraints or automatically assign well-spread distance restraint over multiple molecules (e.g., used for dual-topology relative free energy (RFE) calculations). The package can be used either in a scripting mode or with a GUI-based in PyMOL(see [1]).\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9892922290230236,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "RestraintMaker is split into two parts:\r\n\r\n* RestraintMaker\r\n   This part is the core of the program. It can be executed as a standalone.\r\n    * algorithm: restraint selecting algorithms\r\n    * tools_RDKit: additional functions for filtering or selecting (see [2])\r\n    * io: writing/importing outputfiles\r\n    * utils\r\n    \r\n* Interface PyMOL:\r\n    Allows interfacing to PyMOL and generates the GUI-Expierence (see [1])\r\n    \r \n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9628479575834686,
      "result": {
        "original_header": "Copyright",
        "type": "Text_excerpt",
        "value": "Copyright (c) 2021, Benjamin Ries (@RiesBen), Salom\u00e9 R. Rieder (@SalomeRonja), Clemens Rhiner (@ClemensRhiner) and Sereina Riniker (@sriniker)\r\n\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rinikerlab/restraintmaker/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rinikerlab/restraintmaker/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/docs/examples/example_script_execution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/docs/examples/example_script_execution.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/docs/sphinx_project/examples/example_script_execution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/docs/sphinx_project/examples/example_script_execution.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/example_script_execution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/example_script_execution.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/b_ATB_solvationFreeEnergies/sets/generate_multi_state_gromos_files.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/b_ATB_solvationFreeEnergies/sets/generate_multi_state_gromos_files.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/b_ATB_solvationFreeEnergies/sets/generate_pairwise_state_gromos_files.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/b_ATB_solvationFreeEnergies/sets/generate_pairwise_state_gromos_files.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/a_benchmark_algorithms/plot_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/examples/publication/a_benchmark_algorithms/plot_data.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rinikerlab/restraintmaker/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rinikerlab/restraintmaker"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Welcome to RestraintMaker"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/docs/sphinx_project/build_docs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_menu.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_instructions.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_start.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_select.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_optimize.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_optimize_grid.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/pyMol_Wiz_export.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Welcome to RestraintMaker"
        ],
        "type": "Text_excerpt",
        "value": "You can retrieve the repository from GitHub:\r\nhttps://github.com/rinikerlab/restraintmaker\r\n\r\n  * Install with Anaconda\r\n\r\n```\r\n#!/usr/bash\r\n# 1. Retrieve the repository\r\ngit clone https://github.com/rinikerlab/restraintmaker.git\r\ncd restraintmaker\r\n        \r\n# 2. activate submodules\r\ngit submodule init\r\ngit submodule update\r\n\r\n# 3. generate an Anaconda environment with the environment file and add the repository to its path:       \r\nconda env create --file devtools/conda-envs/dev_env.yaml -n restraintmaker\r\nconda develop -n restraintmaker /absolute_path/to/restraintmaker\r\n\r\n# 4. Test    \r\nconda activate restraintmaker\r\npython examples/example_gui.py\r\n```\r\n\r\n  * Install via Pymol Plugin Manager \r\n    should be possible, but not recommended right now :)\r\n    \r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rinikerlab/restraintmaker/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "free-energy-calculations, interactive, md-simulations, pymol-plugin, python, python3, restraints, system-generation, topology-building"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nMIT License\n\nCopyright (c) 2020 Benjamin Ries, Clemens Rhiner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/.img/RestraintMaker_logo_withBackground.png"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "restraintmaker"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "rinikerlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 428471,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RiesBen",
          "type": "User"
        },
        "date_created": "2021-11-24T15:43:45Z",
        "date_published": "2021-11-24T15:58:01Z",
        "description": "This is the initial release of restraintmaker!\r\nA tool, that can support you in restraint generation (currently distance and positions restraints). The key element of restraintmaker is the automatic distance restraint generator for dual topology approaches.\r\n\r\nThe tool can be used in a GUI mode in PyMol or in a scripting mode for the automatic generation of distance restraints.\r\n(check out the examples in the example folder)",
        "html_url": "https://github.com/rinikerlab/restraintmaker/releases/tag/v1.0",
        "name": "Release of version 1",
        "release_id": 54011744,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/rinikerlab/restraintmaker/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rinikerlab/restraintmaker/releases/54011744",
        "value": "https://api.github.com/repos/rinikerlab/restraintmaker/releases/54011744",
        "zipball_url": "https://api.github.com/repos/rinikerlab/restraintmaker/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:17:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI Menu",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "RestraintMaker adds a menu to the pymol GUI on the bottom right. This is the easiest way to interact with RestraintMaker.\r\n\r\n![pyMol](.img/pyMol_Wiz_menu.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI Instructions",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "On the top left you'll find some helpful instructions and hot keys for RestraintMaker\r\n\r\n![pyMol](.img/pyMol_Wiz_instructions.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Start by loading",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial",
          "Optimized Distance Restraints"
        ],
        "type": "Text_excerpt",
        "value": "Please follow the installation instructions above. Then, you can load the pymol GUI with an example system using\r\n\r\n```\r\npython examples/example_gui.py\r\n```\r\n\r\n![pyMol](.img/pyMol_Wiz_start.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Select \\&amp; Filter",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial",
          "Optimized Distance Restraints"
        ],
        "type": "Text_excerpt",
        "value": "By checking `atoms` and `select` in the \"Selection Options\" of the RestraintMaker menu, you can define which atoms are eligible to be picked for distance restraints. There are several modes to select atoms for this:\r\n\r\n  * `SingleAtomSelection`: click on an atom to add it to your selection\r\n  * `AllSelection`: select all atoms\r\n  * `MCSSelection`: select the atoms of the maximum common substructure, as found by pymol\r\n  * `SphericalSelection`: select all atoms within a sphere (see instructions on top left for tips on how to modify the sphere)\r\n\r\nAfter choosing your initial selection, you can modify it by applying filters:\r\n\r\n  * `PropertyFilter`: submit a pymol Atom property and value to filter\r\n  * `ElementFilter`: specify one or several element types\r\n  * `RingFilter`: atoms in rings\r\n  \r\n![pyMol](.img/pyMol_Wiz_select.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optimize restraints",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial",
          "Optimized Distance Restraints"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo generate the distance restraints, there are two methods:\r\n\r\n  * `GreedyGraphOptimizer`: the greedy min-max algorithm\r\n  * `BruteForceRingOptimizer`: brute force approach (optimal solution, but potentially slow)\r\n\r\nFor both methods you can either use the default parameters or chose your own. Parameters are e.g. the number of restraints to choose per molecule pair.\r\n\r\n![pyMol](.img/pyMol_Wiz_optimize.png)\r\n![pyMol](.img/pyMol_Wiz_optimize_grid.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Export restraints to files",
        "parent_header": [
          "Welcome to RestraintMaker",
          "GUI Tutorial",
          "Optimized Distance Restraints"
        ],
        "type": "Text_excerpt",
        "value": "\r\nAfter generating your distance restraints, you can export them in one of the following formats:\r\n\r\n  * `Gromos_Distance_Restraints`: GROMOS format\r\n  * `Gromacs_Distance_Restraints`: GROMACS format\r\n  * `JSON_Distance_Restraints`: JSON format which can be easily parsed and converted to the format of your choice\r\n\r\n![pyMol](.img/pyMol_Wiz_export.png)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/rinikerlab/restraintmaker/main/README.md",
      "technique": "header_analysis"
    }
  ]
}