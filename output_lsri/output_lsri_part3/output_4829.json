{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alvinxhan/Phydelity"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-23T06:07:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-12T08:13:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Inference of putative transmission phylogenetic clusters"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quickstart (for users of an academic institution only)",
        "parent_header": [
          "Phydelity"
        ],
        "type": "Text_excerpt",
        "value": "1. **Installation**  \n\n* Install dependencies using [Anaconda](http://www.anaconda.com/download/).\n  * Phydelity is written in **Python 2** (Users using Python 3 for base Conda environment can build a separate Python 2 environment. \n```\n$ conda install -c etetoolkit ete3\n$ conda install -c anaconda cython\n$ conda install numpy scipy \n```\n* For Windows users, you may also need to compile C extensions using Microsoft Visual C++ Compiler for Python. You can install that from [http://www.microsoft.com/en-us/download/details.aspx?id=44266](http://www.microsoft.com/en-us/download/details.aspx?id=44266).\n\n* Install Gurobi (linear programming solver) using Anaconda as well. \n```\n$ conda config --add channels http://conda.anaconda.org/gurobi\n$ conda install gurobi\n```\n\n* Obtain Gurobi license.  \n  Method I: If your machine is connected to the internet via a recognized academic domain (e.g. '.edu' addresss) \n    * Register a FREE account via http://www.gurobi.com/registration/academic-license-reg \n    * Login and access https://www.gurobi.com/downloads/end-user-license-agreement-academic/ to download license.  \n    * Follow instructions on page to retrieve your license or check [here](https://github.com/alvinxhan/PhyCLIP/wiki/II.-Installation) for more details.   \n  \n  Method II: If your machine is **NOT** connected via an academic domain but you can verify that you are an academic user.  \n    * To be added. \n\n* Download and install Phydelity. \n```\n$ cd /path/to/Phydelity-master/\n$ python setup.py install \n$ python setup.py clean --all \n```\n\n2. **Run Phydelity**  \nMinimal input command: \n\n```\n$ phydelity.py --tree </path/to/treefile.newick>\n```\n\nSee **Full options** below for other analysis options. \n\n3. **Outputs**\n* cluster\\_phydelity\\_k<\\d+>\\_sol<\\d+>\\_<treefname>.txt - Tab-delimited text file of tip names and corresponding cluster ID. \n* tree\\_phydelity\\_k<\\d+>\\_sol<\\d+>\\_<treefname>.txt - Figtree-formatted NEXUS tree file with cluster annotations. \n* pdftree\\_phydelity\\_k<\\d+>\\_sol<\\d+>\\_<treefname>.txt - **Optional** PDF tree file if --pdf_tree is called. \n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9443116515984001,
      "result": {
        "original_header": "Latest updates",
        "type": "Text_excerpt",
        "value": "* 25-Jul-2019: V2.1 - Fixed int64 type declaration for cross-platform compatibility; tested on Windows and Mac\n* 10-May-2019: V2.0 - Improved algorithm yielding clusters with higher purity and lower probability of misclassification (see Manuscript for more details).  \n* 6-Dec-2018: Fixed bug which was overly strict when cleaning up clusters that violated within-cluster limit.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9240762529654708,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Phydelity, a redesign of [PhyCLIP](http://github.com/alvinxhan/PhyCLIP), is a statistically-principled and phylogeny-informed tool capable of identifying putative transmission clusters in pathogen phylogenies without the introduction of arbitrary distance thresholds.   \nMinimally, Phydelity only requires a phylogeny (in NEWICK format) as input.   \nPhydelity infers the within-cluster divergence of putative transmission clusters by first determining the pairwise patristic distance distribution of closely-related tips. This distance distribution comprises of the pairwise distances of sequence _j_ and its closest _k_-neighbouring tips, where the closest _k_-neighbours includes sequence _j_. The user can **optionally** input the desired _k_ parameter **_OR_** allow Phydelity to **automatically scale _k_ to yield the supremum distribution with the lowest overall divergence**.   \n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9715987512989754,
      "result": {
        "original_header": "Full options",
        "type": "Text_excerpt",
        "value": "```\nusage: phydelity.py [-h] [-t TREE] [--k K] [--outgroup OUTGROUP]\n                    [--collapse_zero_branch_length]\n                    [--equivalent_zero_length EQUIVALENT_ZERO_LENGTH]\n                    [--solver_verbose {0,1}] [--solver_check] [--pdf_tree]\n\nPhydelity v1.0\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired:\n  -t TREE, --tree TREE  Input phylogenetic tree in NEWICK format.\n\nAnalysis options:\n  --k K                 Custom k neighbours (optional).\n  --outgroup OUTGROUP   Taxon (name as appeared in tree) to be set as outgroup\n                        OR type 'midpoint' for midpoint-rooting.\n  --collapse_zero_branch_length\n                        Collapse internal nodes with zero branch length of\n                        tree before running Phydelity.\n  --equivalent_zero_length EQUIVALENT_ZERO_LENGTH\n                        Maximum branch length to be rounded to zero if the\n                        --collapse_zero_branch_length flag is passed (default\n                        = 1e-06).\n\nSolver options:\n  --solver_verbose {0,1}\n                        Gurobi solver verbose (default: 0)\n  --solver_check        Check if Gurobi is installed.\n\nOutput options:\n  --pdf_tree            PDF tree output annotated with cluster results (X\n                        server required).\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/alvinxhan/Phydelity/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/compare_clustering_results.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/compare_clustering_results.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/extract_results_Barido-Sottani_et_al_and_Villandre_et_al.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/extract_results_Barido-Sottani_et_al_and_Villandre_et_al.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HCV/HCV_phylopart_clusterpicker_analyses.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HCV/HCV_phylopart_clusterpicker_analyses.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HCV/.ipynb_checkpoints/HCV_phylopart_clusterpicker_analyses-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HCV/.ipynb_checkpoints/HCV_phylopart_clusterpicker_analyses-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/mccrone_flu_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/mccrone_flu_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/.ipynb_checkpoints/mccrone_flu_analysis-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/.ipynb_checkpoints/mccrone_flu_analysis-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/.ipynb_checkpoints/Untitled-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/FLU/.ipynb_checkpoints/Untitled-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/.ipynb_checkpoints/extract_results_Barido-Sottani_et_al_and_Villandre_et_al-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/.ipynb_checkpoints/extract_results_Barido-Sottani_et_al_and_Villandre_et_al-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/.ipynb_checkpoints/compare_clustering_results-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/.ipynb_checkpoints/compare_clustering_results-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HBV/HBV_comparing_phylopart_clusterpicker_phydelity.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HBV/HBV_comparing_phylopart_clusterpicker_phydelity.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HBV/.ipynb_checkpoints/HBV_comparing_phylopart_clusterpicker_phydelity-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/manuscript/HBV/.ipynb_checkpoints/HBV_comparing_phylopart_clusterpicker_phydelity-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alvinxhan/Phydelity/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alvinxhan/Phydelity"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Phydelity"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9463375947286932,
      "result": {
        "original_header": "Full options",
        "type": "Text_excerpt",
        "value": "```\nusage: phydelity.py [-h] [-t TREE] [--k K] [--outgroup OUTGROUP]\n                    [--collapse_zero_branch_length]\n                    [--equivalent_zero_length EQUIVALENT_ZERO_LENGTH]\n                    [--solver_verbose {0,1}] [--solver_check] [--pdf_tree]\n\nPhydelity v1.0\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired:\n  -t TREE, --tree TREE  Input phylogenetic tree in NEWICK format.\n\nAnalysis options:\n  --k K                 Custom k neighbours (optional).\n  --outgroup OUTGROUP   Taxon (name as appeared in tree) to be set as outgroup\n                        OR type 'midpoint' for midpoint-rooting.\n  --collapse_zero_branch_length\n                        Collapse internal nodes with zero branch length of\n                        tree before running Phydelity.\n  --equivalent_zero_length EQUIVALENT_ZERO_LENGTH\n                        Maximum branch length to be rounded to zero if the\n                        --collapse_zero_branch_length flag is passed (default\n                        = 1e-06).\n\nSolver options:\n  --solver_verbose {0,1}\n                        Gurobi solver verbose (default: 0)\n  --solver_check        Check if Gurobi is installed.\n\nOutput options:\n  --pdf_tree            PDF tree output annotated with cluster results (X\n                        server required).\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/alvinxhan/Phydelity/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Lesser General Public License v3.0",
        "spdx_id": "LGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/lgpl-3.0",
        "value": "https://api.github.com/licenses/lgpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
      },
      "source": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Phydelity"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "alvinxhan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 2594051,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 97603,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 15656,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/alvinxhan/Phydelity/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alvinxhan",
          "type": "User"
        },
        "date_created": "2019-07-25T03:12:31Z",
        "date_published": "2019-07-25T03:14:03Z",
        "description": "Fixed int64 type declaration for cross-platform compatibility; tested on Windows and Mac",
        "html_url": "https://github.com/alvinxhan/Phydelity/releases/tag/2.1",
        "name": "V2.1 release",
        "release_id": 18850558,
        "tag": "2.1",
        "tarball_url": "https://api.github.com/repos/alvinxhan/Phydelity/tarball/2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/alvinxhan/Phydelity/releases/18850558",
        "value": "https://api.github.com/repos/alvinxhan/Phydelity/releases/18850558",
        "zipball_url": "https://api.github.com/repos/alvinxhan/Phydelity/zipball/2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "alvinxhan",
          "type": "User"
        },
        "date_created": "2019-05-10T07:18:48Z",
        "date_published": "2019-05-10T07:22:37Z",
        "description": "Improved algorithm yielding clusters with higher purity and lower probability of misclassification (see Manuscript for more details).",
        "html_url": "https://github.com/alvinxhan/Phydelity/releases/tag/2.0",
        "name": "Phydelity v2.0",
        "release_id": 17268829,
        "tag": "2.0",
        "tarball_url": "https://api.github.com/repos/alvinxhan/Phydelity/tarball/2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/alvinxhan/Phydelity/releases/17268829",
        "value": "https://api.github.com/repos/alvinxhan/Phydelity/releases/17268829",
        "zipball_url": "https://api.github.com/repos/alvinxhan/Phydelity/zipball/2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:49:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}