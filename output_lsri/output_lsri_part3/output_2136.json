{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Huang-lab/AeQTL"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-31T00:51:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-07T01:46:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.918159347543685,
      "result": {
        "original_header": "AeQTL",
        "type": "Text_excerpt",
        "value": "eQTL analysis using region-based aggregation of rare variants. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8150983152417728,
      "result": {
        "original_header": "Input data format",
        "type": "Text_excerpt",
        "value": "*Note: demo input files with compatible format can be found in the folder `demo/myfiles`*\n \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8104251872207728,
      "result": {
        "original_header": "BED file",
        "type": "Text_excerpt",
        "value": "A BED file (tab separated) with at least four columns and without header. The format of the file should follow: \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8535093752400386,
      "result": {
        "original_header": "Covariate file",
        "type": "Text_excerpt",
        "value": "A tab separated .tsv file with column names corresponding to covariates. A column of sample IDs with column name \"sample_id\" is required. Covariates entered in AeQTL and their corresponding column names must match exactly. However, the covariate file can contain other unused columns as well. If entering a categorical covariate, please make sure each category has the same value throughout the file (i.e. avoid instances such as having both \"FEMALE\" and \"female\" in the same column). \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8720144545246187,
      "result": {
        "original_header": "Output data format",
        "type": "Text_excerpt",
        "value": "A tab separated .tsv file of summary statistics. Each row is an eQTL test between a region and a gene. The file contains the following fields: \n- region\n- gene\n- coef_intercept\n- coef_genotype\n- coef_\\<covariate> *(for each covariate)*\n- pvalue_intercept\n- pvalue_genotype\n- pvalue_\\<covariate> *(for each covariate)*\n- adj_pvalue_intercept\n- adj_pvalue_genotype\n- adj_pvalue_\\<covariate> *(for each covariate)* \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Download public TCGA MAF file",
        "parent_header": [
          "AeQTL",
          "Example using TCGA somatic data"
        ],
        "type": "Text_excerpt",
        "value": "Download the TCGA MC3 Public MAF from <https://api.gdc.cancer.gov/data/1c8cfe5f-e52d-41ba-94da-f15ea1337efc> (Ellrott et al., 2018) and decompress the file.\n    \n    gunzip mc3.v0.2.8.PUBLIC.maf.gz\n\nExtract truncations on chromosome 17. Here we define truncations as variants whose `Variant_Classification` is one of the following: `Frame_Shift_Del`, `Frame_Shift_Ins`, `Nonsense_Mutation`, `Splice_Site`, and `Translation_Start_Site`.\n    \n    awk '{ if ($5 == 17) { print } }' mc3.v0.2.8.PUBLIC.maf > mc3.v0.2.8.PUBLIC.chr17.maf\n    egrep 'Frame_Shift_Del|Frame_Shift_Ins|Nonsense_Mutation|Splice_Site|Translation_Start_Site' mc3.v0.2.8.PUBLIC.chr17.maf > mc3.v0.2.8.PUBLIC.chr17.truncations.maf\n    head -n 1 mc3.v0.2.8.PUBLIC.maf | cat - mc3.v0.2.8.PUBLIC.chr17.truncations.maf > tmp && mv tmp mc3.v0.2.8.PUBLIC.chr17.truncations.maf\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Huang-lab/AeQTL/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Huang-lab/AeQTL/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Huang-lab/AeQTL"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AeQTL"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "AeQTL"
        ],
        "type": "Text_excerpt",
        "value": "First, install IntervalTree from bx-python. We strongly recommend using a standalone package called *bx_interval_tree* which is smaller and easier to compile than bx-python. \n\n```\ngit clone https://github.com/ccwang002/bx_interval_tree\ncd bx_interval_tree\npython setup.py install\ncd ..\n```\n\nContinue to install AeQTL by choosing one of the options below.\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(1) From PyPI",
        "parent_header": [
          "AeQTL",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install AeQTL is from PyPI.\n\n\tpip install aeqtl\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(2) From source code",
        "parent_header": [
          "AeQTL",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, download the source code of AeQTL\n\n\tgit clone https://github.com/Huang-lab/AeQTL\n\nThen install AeQTL\n\n\tcd AeQTL\n\tpip install .\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional (but recommended)",
        "parent_header": [
          "AeQTL",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Append the path to AeQTL to your PATH environment variable\n\n\texport PATH=/path/to/AeQTL/bin:$PATH\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8966686922668091,
      "result": {
        "original_header": "VCF file",
        "type": "Text_excerpt",
        "value": "A standard multi-sample VCF file with file extension .vcf (or .vcf.gz). Sample IDs in VCF file, expression file, and covariate file should match exactly. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Huang-lab/AeQTL/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Huang-lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AeQTL"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Huang-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 50832,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "AeQTL"
        ],
        "type": "Text_excerpt",
        "value": "- python 3.5\n- pip\n- bx_interval_tree (see installation instructions below)\n- git (optional)\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Run AeQTL",
        "parent_header": [
          "AeQTL",
          "Example using TCGA somatic data"
        ],
        "type": "Text_excerpt",
        "value": "Run AeQTL with 6 covariates, including 3 numerical covariates (age, PC1, PC2) and 3 categorical covariates (gender, race, tumor stage).  \n\n    aeqtl -m mc3.v0.2.8.PUBLIC.chr17.truncations.maf \\\n          -b allCDS_1BasedStart_2bpFlanks.chr17.bed \\\n          -e BRCA_RSEM_hugo.matrix.demo.tumor.only.log2.txt \\\n          -cn age PC1 PC2 \\\n          -cc gender race ajcc_pathologic_tumor_stage \\\n          -s PanCan_ClinicalData.txt \\\n          -o tcga_somatic_truncations_output\n          \nThe folder `demo/tcga_somatic/tcga_somatic_truncations_output/` contains all the intermediate files, and see summary file at `demo/tcga_somatic/tcga_somatic_truncations_output.summary.txt`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:49:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "AeQTL"
        ],
        "type": "Text_excerpt",
        "value": "\taeqtl -v <VCF file, cannot be used together with MAF file> \\\n\t      -m <MAF file, cannot be used together with VCF file> \\\n\t      -b <BED file> \\\n\t      -e <Expression file> \\\n\t      -cn <Numerical covariates, separated by \",\"> \\\n\t      -cc <Categorical covariates, separated by \",\"> \\\n\t      -s <Covariate file> \\\n\t      -ts <Threshold of mutated sample number per region, default=1> \\\n\t      -tv <Threshold of variant number per region, default=1> \\\n          -o <output directory>\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example using TCGA somatic data",
        "parent_header": [
          "AeQTL"
        ],
        "type": "Text_excerpt",
        "value": "This is a demo analysis of TCGA somatic truncations on chromosome 17 using AeQTL. The whole procedure from data pre-processing to generating the final summary file will be included. \n\nSee folder `demo/tcga_somatic` for input files.\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Data pre-processing",
        "parent_header": [
          "AeQTL",
          "Example using TCGA somatic data"
        ],
        "type": "Text_excerpt",
        "value": "*(Note: this part is processed in **R**)*\n\n- **Filter expression file**\n    \n    Read file (a subset data is used for demoing purpose).\n\n        exp <- read.table(\"BRCA_RSEM_hugo.matrix.demo.txt\", header=TRUE, sep=\"\\t\")\n    \n    Subset file to only include tumor samples.\n\n        columns_to_keep <- c(1, which(substr(colnames(exp),14,14)==\"0\"))\n        exp_tumor_only <- subset(exp, select=columns_to_keep)\n    \n    Since low expression levels will likely present technical noises, we can also filter out genes with low expression medians across samples. Here we use log(2) as the threshold.\n    \n        medians <- apply(exp_tumor_only[,2:ncol(exp_tumor_only)], 1, median)\n        exp_tumor_only_filtered <- exp_tumor_only[which(log(medians)>2),]\n    \n    Write out the filtered file.\n    \n        write.table(exp_tumor_only_filtered,file=\"BRCA_RSEM_hugo.matrix.demo.tumor.only.log2.txt\", quote=FALSE, sep=\"\\t\", row.names=FALSE)\n    \n- **Re-format sample ID in MAF and expression files**\n\n    Sample IDs used in both MAF and expression files are formatted using TCGA Sample Barcode (<https://docs.gdc.cancer.gov/Encyclopedia/pages/TCGA_Barcode/>). Since we match samples on a participant level, we will use the first 12 characters of the barcode as sample ID.\n    \n        maf <- read.table(\"mc3.v0.2.8.PUBLIC.chr17.truncations.maf\", header=TRUE)\n        maf$Tumor_Sample_Barcode <- substr(maf$Tumor_Sample_Barcode, 1, 12)\n        exp <- read.table(\"BRCA_RSEM_hugo.matrix.demo.tumor.only.log2.txt\", header=TRUE)\n        write.table(maf, file=\"mc3.v0.2.8.PUBLIC.chr17.truncations.maf\", quote=FALSE, sep=\"\\t\", row.names=FALSE)\n        write.table(exp, file=\"BRCA_RSEM_hugo.matrix.demo.tumor.only.log2.txt\", quote=FALSE, sep=\"\\t\", row.names=FALSE)\n"
      },
      "source": "https://raw.githubusercontent.com/Huang-lab/AeQTL/master/README.md",
      "technique": "header_analysis"
    }
  ]
}