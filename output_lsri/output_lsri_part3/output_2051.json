{
  "application_domain": [
    {
      "confidence": 0.8812576325202492,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/noraracht/CONSULT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-30T18:59:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T13:57:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Accurate contamination removal using locality-sensitive hashing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9425505033376173,
      "result": {
        "original_header": "CONSULT",
        "type": "Text_excerpt",
        "value": "\nCONSULT is a tool for contamination removal from genomic sequencing reads. Relying on locality-sensitive hashing, CONSULT extracts *k*-mers from a query set and tests whether they fall within a user-specified hamming distance of *k*-mers in the reference dataset. It supports the inclusion of approximately 8 billion *k*-mers in its reference library, accommodating datasets with tens of thousands of microbial species. \nThe paper where we have described design of the algorithm and software architecture are now available on online (https://www.biorxiv.org/content/10.1101/2021.03.18.436035v1).  \nAt the moment when using our libraries, library name needs to stay unchanged since library files are prefixed with library name. This will change in future releases to allow for more flexibility. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8610633515745096,
      "result": {
        "original_header": "Searching against a library",
        "type": "Text_excerpt",
        "value": "------------\nTo query a set of sequences against reference, go to the directory where binaries are and execute the CONSULT command:\n```\n ./main_search -i $DBNAME -c 1 -t 24 -q $QUERY_FOLDER\n```  \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8850144234061647,
      "result": {
        "original_header": "Input:",
        "type": "Text_excerpt",
        "value": "The files containing query sequences to be classified should be located in $QUERY_FOLDER and be in a FASTQ format (one uncompressed .fq/.fastq file per each sample). FASTA format is not supported at the moment. Note, if you need to query FASTA files you can convert .fasta/.fa to .fastq/.fq using [seqtk](https://github.com/lh3/seqtk) ```\"seqtk seq -F CHAR\"``` command which attaches fake quality scores to the sequences. Quality factors are not being utilized by CONSULT but FASTQ labels will be used to identify the sequences in the output file. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9655603962184157,
      "result": {
        "original_header": "Output:",
        "type": "Text_excerpt",
        "value": "CONSULT is designed for filtering out contaminants from sequencing reads so its output is a FASTQ file that contains **unclassified** (clean) reads and their corresponding sequence IDs, obtained from the input FASTQ headers. Files are stored into working directory where software is run. Every sample retains its original file name prefixed with *\"ucseq_\"*.  \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9137471205875493,
      "result": {
        "original_header": "A Quick Test of Query Search",
        "type": "Text_excerpt",
        "value": "* The Ssmple query [G000307305.fq](https://github.com/noraracht/CONSULT/blob/main/query_set/G000307305.fq) contains 66667 genomic reads. \n* Classification running time is ~2 min with 1 thread. \n* Approximately 38000 reads (in our case 38440) from the query should match to the database. \n* Unclassified reads are stored in [ucseq_G000307305.fq](https://github.com/noraracht/CONSULT/blob/main/ucseq_G000307305.fq). \n- -i - name of the reference database \n- -c - the lowest number of *k*-mers that is required to call sequencing read classified. For instance, if at least one *k*-mer match is enough to classify a read (default setting mentioned in a paper), \"c\" should be set to 1 in a software.  If at least two *k*-mer matches are required to call entire read a match, \"c\" should be set to 2. By default the value of \"c\" is 1. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.971262127049732,
      "result": {
        "original_header": "Database construction",
        "type": "Text_excerpt",
        "value": "1. Preprocsessing your input genomes\n2. Consruction of the CONSULT library. \n \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.941218281968015,
      "result": {
        "original_header": "2. Construction",
        "type": "Text_excerpt",
        "value": "To construct standard reference database, go to the place where scripts were compiled  and use the following command:\n```\n ./main_map -i $INPUT_FASTA_FILE -o $DBNAME\n```  \n###### Input:\nInput is supposed to be a FASTA file formatted as shown below. Specifically CONSULT is designed to accept [Jellyfish](http://www.genome.umd.edu/jellyfish.html) output files that represent a list of **32 bp** *k*-mers associated with their counts. We tested with [Jellyfish](http://www.genome.umd.edu/jellyfish.html) 2.3.0. See Data preprocessing section for details on how to generate the input file.  Note that CONSULT does not use the count values and the only relevant information is the sequence itself. Jellyfish output is pseudo-randomly ordered, and thus further randomization is not needed. The sequences should not be repeated. \n###### Output: \nReplace \"$DBNAME\" above with your preferred database name. Reference library will be created in the same directory where the script is run. If this working directory already contains a database with the same name, the software will throw an exception. This feature is included to prevent existing databases from being overwritten. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9581590627244285,
      "result": {
        "original_header": "Library construction testing",
        "type": "Text_excerpt",
        "value": "```\n./main_map -i k32C_af_mininimization.fa -o G000307305_nbr_map\n```\nThis step takes about 7 min to complete. The constructed database uses ~60GB of disk space. \nThis constructed library should similar to what we used in the query search example. However, small changes due the random ordering of jellyfish output may be observed.  \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9562645108379771,
      "result": {
        "original_header": "Useful tips:",
        "type": "Text_excerpt",
        "value": "- **Large size queries:** When larger plant or mammalian samples (>20 million reads) need to be queried there might be a need to speed up computation. In such cases we suggest to split the query into smaller samples to process them independently on multiple nodes and combine outputs downstream. \n- During search for every query sample CONSULT outputs to the standard output: sample name, sample line count and number of matched reads. Since each entry in a FASTQ file consists of 4 lines, total number of entry sequences as well as percentage of matched reads can be easily computed using these values. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/noraracht/CONSULT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/noraracht/CONSULT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "noraracht/CONSULT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CONSULT"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CONSULT"
        ],
        "type": "Text_excerpt",
        "value": "------------\n\n\n1. Download using one of two approaches:\n    - You can obtain the [zip file](https://github.com/noraracht/CONSULT/archive/main.zip) and extract the contents to a folder of your choice. Then, proceed to compilation.\n    - Alternatively, you can clone the [github repository](https://github.com/noraracht/CONSULT.git) and continue with compilation.\n\n\n2. To compile, go to the directory where core programs for map construction and query search are located and run:\n    * To compile the CONSULT search method, run:\n    ```bash  \n    g++ main_search.cpp -std=c++11 -fopenmp -O3 -o main_search\n    ```   \n    * If you also need to construct a library, you need to use:\n    ```bash \n    g++ main_map.cpp -std=c++11 -O3 -o main_map\n    ```    \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9962469873848318,
      "result": {
        "original_header": "CONSULT",
        "type": "Text_excerpt",
        "value": "\n* Summary data tables and scripts that we used during testing are available at https://github.com/noraracht/lsh_scripts. \n* Raw data are deposited in https://github.com/noraracht/lsh_raw_data. \n* Our custom CONSULT libraries constructed using different genomic reference sets:\n    - [GTDB](https://ter-trees.ucsd.edu/data/consult/v1.0.0/all_nbrhood_kmers_k32_p3l2clmn7_K15-map2-171_gtdb.tar.gz)\n    - [TOL](https://ter-trees.ucsd.edu/data/consult/v1.0.0/all_nbrhood_kmers_k32_p3l2clmn7_K15-map2-171_ToL.tar.gz)\n    - [Bacterial/Archaeal Kraken](https://ter-trees.ucsd.edu/data/consult/v1.0.0/all_nbrhood_kmers_k32_p3l2clmn7_K15-map2-171_kraken.tar.gz)\n    - [Mitochondrial CONSULT database](https://ter-trees.ucsd.edu/data/consult/v1.0.0/consult_mito_k32_p3l2clmn7_K15_tag2_v171.tar.gz)\n    - [Plastid CONSULT database](https://ter-trees.ucsd.edu/data/consult/v1.0.0/consult_plastid_k32_p3l2clmn7_K15_tag2_v171.tar.gz)\n    \n *  Alternatively our custom CONSULT libraries can be downloaded from drive:\n    - [GTDB](https://drive.google.com/file/d/1MQJAXmZiTurumlZpvNoMLB0tKWGM_VE4/view?usp=sharing)\n    - [TOL](https://drive.google.com/file/d/1sA9HFjWoU2jZ2vjd98pHVDEFRzOKMImk/view?usp=sharing)\n    - [Bacterial/Archaeal Kraken](https://drive.google.com/file/d/1jeZB6b6aXl06BpPPsjM8oQA4xingJ1Dq/view?usp=sharing)\n    - [Mitochondrial CONSULT database](https://drive.google.com/file/d/1mFD3dYFrJKqUkWlkRHbrQt-6eG-_K5vI/view?usp=sharing) \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9734126161340317,
      "result": {
        "original_header": "Searching against a library",
        "type": "Text_excerpt",
        "value": "------------\nTo query a set of sequences against reference, go to the directory where binaries are and execute the CONSULT command:\n```\n ./main_search -i $DBNAME -c 1 -t 24 -q $QUERY_FOLDER\n```  \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.944186301636216,
      "result": {
        "original_header": "A Quick Test of Query Search",
        "type": "Text_excerpt",
        "value": "* We have a toy-example reference library included called `G000307305_nbr_map`. \n* We also have a test query *directory* called `query_set`.  \nUse the following command to search `quert_set` against `G000307305_nbr_map`\n```\n./main_search -i G000307305_nbr_map -c 1 -t 1 -q query_set\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999572044757047,
      "result": {
        "original_header": "2. Construction",
        "type": "Text_excerpt",
        "value": "###### Output: \nReplace \"$DBNAME\" above with your preferred database name. Reference library will be created in the same directory where the script is run. If this working directory already contains a database with the same name, the software will throw an exception. This feature is included to prevent existing databases from being overwritten. \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.981560892602598,
      "result": {
        "original_header": "A Quick Test",
        "type": "Text_excerpt",
        "value": "To allow users to get familiar with the software and test their installations we have provided a few example files. After downloading and compiling the software, go to the directory where CONSULT was installed and run:\n \n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/noraracht/CONSULT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CONSULT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "noraracht"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 121689,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirements",
        "parent_header": [
          "CONSULT"
        ],
        "type": "Text_excerpt",
        "value": "------------\n\n- **Disk space:** Construction of CONSULT database requires approximately 120GB of disk space. Exact footprint depends on a number of *k*-mers in a reference set. The size of the three main databases that we built for testing with default settings varied between 107GB to 120GB. For example, for the GTDB database, 62GB of disk space was used to store encodings, 56GB was taken by lookup table, and 2GB was utilized by tag array and metadata. \n\n- **Memory:** CONSULT is designed to operate on a machine with 128GB of RAM. To run, it requires enough free memory to hold the entire database in RAM. We note that during datatase construction the user will need slightly more RAM than 128GB to accomodate intermediary processes. Once the database is built, 128GB should be sufficient. \n\n- **Dependencies:** CONSULT is a command-line tool implemented in C++11 with some x86 assembly code. Database reading and query search are parallelized using [OpenMP](https://www.openmp.org). \n    - We complied map construction and query search with a g++ that supports C++11 (required). For our tests we have compiled with versions 4.8.5 and 7.2.0, both of which work. \n    - The **database construction** uses some external tools such as [Jellyfish](http://www.genome.umd.edu/jellyfish.html).\n\n "
      },
      "source": "https://raw.githubusercontent.com/noraracht/CONSULT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:30:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}