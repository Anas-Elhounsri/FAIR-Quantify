{
  "application_domain": [
    {
      "confidence": 17.62,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing coolpup.py",
        "parent_header": [
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Ilya M Flyamer, Robert S Illingworth, Wendy A Bickmore (2020). Coolpup.py: versatile pile-up analysis of Hi-C data. Bioinformatics, 36, 10, 2980\u20132985.\n\n[https://academic.oup.com/bioinformatics/article/36/10/2980/5719023](https://academic.oup.com/bioinformatics/article/36/10/2980/5719023)\n\ndoi: 10.1093/bioinformatics/btaa073\n\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/open2c/coolpuppy"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\n## General guidelines\n\nIf you haven't contributed to open-source before, we recommend you read [this excellent guide by GitHub on how to contribute to open source](https://opensource.guide/how-to-contribute). The guide is long, so you can gloss over things you're familiar with.\n\nIf you're not already familiar with it, we follow the [fork and pull model](https://help.github.com/articles/about-collaborative-development-models) on GitHub. Also, check out this recommended [git workflow](https://www.asmeurer.com/git-workflow/).\n\nAs a rough guide for cooltools:\n- contributors should preferably work on their forks and submit pull requests to the main branch\n- core maintainers can work on feature branches in the main fork and then submit pull requests to the main branch\n- core maintainers can push directly to the main branch if it's urgently needed \n\n\n## Contributing Code\n\nThis project has a number of requirements for all code contributed.\n\n* We follow the [PEP-8 style](https://www.python.org/dev/peps/pep-0008/) convention.\n* We use [flake8](http://flake8.pycqa.org/en/latest/) to automatically lint the code and maintain code style. You can use a code formatter like [black](https://github.com/psf/black) or [autopep8](https://github.com/hhatto/autopep8) to help keep the linter happy.\n* We use [Numpy-style docstrings](https://numpydoc.readthedocs.io/en/latest/format.html).\n* User-facing API changes or new features should have documentation added.\n\nIdeally, provide full test coverage for new code submitted in PRs.\n\n\n## Setting up Your Development Environment\n\nFor setting up an isolated virtual environment for development, we recommend using [conda](https://docs.conda.io/en/latest/miniconda.html). After forking and cloning the repository, install in \"editable\" (i.e. development) mode using the `-e` option:\n\n```sh\n$ git clone https://github.com/open2c/coolpuppy.git\n$ cd coolpuppy\n$ pip install -e .\n```\n\nEditable mode installs the package by creating a \"link\" to your working (repo) directory.\n\n\n## Unit Tests\n\nIt is best if all new functionality and/or bug fixes have unit tests added with each use-case.\n\nWe use [pytest](https://docs.pytest.org/en/latest) as our unit testing framework with the `pytest-cov` extension to check code coverage and `pytest-flake8` to check code style. You don't need to configure these extensions yourself.\nThis automatically checks code style and functionality, and prints code coverage, even though it doesn't fail on low coverage. \n\nOnce you've configured your environment, you can just `cd` to the root of your repository and run\n\n```sh\n$ pytest\n```\n\nUnit tests are automatically run on GitHub Actions for pull requests.\n\n\n## Coverage\n\nThe `pytest` script automatically reports coverage, both on the terminal for missing line numbers, and in annotated HTML form in `htmlcov/index.html`.\n\n\n## Documentation\n\nIf a feature is stable and relatively finalized, it is time to add it to the documentation. If you are adding any private/public functions, it is best to add docstrings, to aid in reviewing code and also for the API reference.\n\nWe use [Numpy style docstrings](https://numpydoc.readthedocs.io/en/latest/format.html>) and [Sphinx](http://www.sphinx-doc.org/en/stable) to document this library. Sphinx, in turn, uses [reStructuredText](http://www.sphinx-doc.org/en/stable/rest.html) as its markup language for adding code.\n\nWe use the [Sphinx Autosummary extension](http://www.sphinx-doc.org/en/stable/ext/autosummary.html) to generate API references. You may want to look at `docs/api.rst` to see how these files look and where to add new functions, classes or modules.\n\nWe also use the [nbsphinx extension](https://nbsphinx.readthedocs.io/en/0.5.0/) to render tutorial pages from Jupyter notebooks.\n\nTo build the documentation:\n\n```sh\n$ make docs\n```\n\nAfter this, you can find an HTML version of the documentation in `docs/_build/html/index.html`.\n\nDocumentation from `master` and tagged releases is automatically built and hosted thanks to [readthedocs](https://readthedocs.org/).\n\n\n## Acknowledgement\n\nIf you've contributed significantly and would like your authorship to be included in subsequent uploads to [Zenodo](https://zenodo.org), please make a separate PR to add your name and affiliation to the `.zenodo.json` file.\n\n---\n\nThis document was modified from the [guidelines from the sparse project](https://github.com/pydata/sparse/blob/master/docs/contributing.rst).\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-03T10:39:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-22T01:09:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A versatile tool to perform pile-up analysis on Hi-C data in .cool format."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "What are pileups?",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "Pileups is the generic term we use to describe any procedure that averages multiple 2D regions (snippets) of a 2D matrix, e.g. Hi-C data. In some contexts they are also known as APA (aggregate peak analysis, from Rao et al., 2014), or aggregate region/TAD analysis (in GENOVA, van der Weide et al., 2021), and other names.\nThe most typical use case is to quantify average strength of called dots (loops) in Hi-C data, or strength of TAD boundaries. However the approach can do much more than that.\nThis is the idea of how pileups work to check whether certain regions tend to interact with each other:\n\n<img src=\"https://raw.githubusercontent.com/open2c/coolpuppy/master/loop_quant.png\" alt=\"Pileup schematic\" width=\"1000px\"/>\n\nOn the right is the more typical use case for quantification of loop strength. On the left is a different approach, designed to check whether specific regions in the genome (e.g. binding sites of a certain factor) tend to interact with each other.\n\nWhat is very important for this quantification, is the normalization to expected values. This can be done in two ways: either using a chromosome- (or arm-) wide by-distance expected interactions, using a file with average values of interactions at different distances (e.g. output of `cooltools expected-cis`), or directly from Hi-C data by dividing the pileups over randomly shifted control regions. If neither expected normalization approach is used (just set `--nshifts 0`), this becomes essentially identical to the APA approach (Rao et al., 2014), which can be used for averaging strongly interacting regions, e.g. annotated loops. For weaker interactors, decay of contact probability with distance can hide any focal enrichment that could be observed otherwise. However, most importantly, when comparing different sets of regions at even slightly different distances, or comparing different datasets, the decay of contact probability with distance will very strongly affect the resulting values, hence normalizing to it is essential in many cases, and generally recommended.\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`coolpup.py` vs `cooltools pileup`",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "`cooltools` is the main package with Hi-C analysis maintained by open2C. It also has a tool to perform pileups. Why does `coolpup.py` exist then?\nThe way `cooltools pileup` works, is it accumulates all snippets for the pileup into one 3D array (stack). Which gives a lot of flexibility in case one wants to subset the snippets based on some features later, or do some other non-standard computations based on the stack. But this is only advantageous when one performs analysis using the Python API, and moreover limits the application of `cooltools pileup` so it can't be applied to a truly large number of snippets due to memory requirements. That's where `coolpup.py` comes in: internally it never stores more than one snippet in memory, hence there is no limit to how many snippets can be processed. `coolpup.py` is particularly well suited performance-wise for analysing huge numbers of potential interactions, since it loads whole chromosomes into memory one by one (or in parallel to speed it up) to extract small submatrices quickly. Having to read everything into memory makes it relatively slow for small numbers of loops, but performance doesn't decrease until you reach a huge number of interactions. Additionally, `cooltools pileup` doesn't support inter-chromosomal (trans) pileups, however it is possible in `coolpup.py`.\n\nWhile there is no way to subset the snippets after the pileup is generated (since they are not stored), `coolpup.py` allows one to perform various subsetting during the pileup procedure. Builtin options in the CLI are subsetting by distance, by strand, by strand and distance at the same time, and by window/region - in case of a provided BED file, one pileup is generated for each row against all others in the same chromosome; in case of trans-pileups, pileups for each chromosome pair can be generated. Importantly, in Python API any arbitrary grouping of snippets is possible.\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".cool format",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": ".cool is a modern and flexible format to store Hi-C data.\nIt uses HDF5 to store a sparse representation of the Hi-C data, which allows low memory requirements when dealing with high resolution datasets. Another popular format to store Hi-C data, .hic, can be converted into .cool files using `hic2cool` (https://github.com/4dn-dcic/hic2cool).\n\nSee for details:\n\nAbdennur, N., and Mirny, L. (2019). Cooler: scalable storage for Hi-C data and other genomically-labeled arrays. Bioinformatics. [10.1093/bioinformatics/btz540](https://doi.org/10.1093/bioinformatics/btz540)\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.922437042007712,
      "result": {
        "original_header": "coolpup.py",
        "type": "Text_excerpt",
        "value": "A versatile tool to perform pile-up analysis on Hi-C data in .cool format (https://github.com/mirnylab/cooler). And who doesn't like cool pupppies?\n \n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://coolpuppy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Phlya/coolpuppy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/TAD_score.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/TAD_score.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/Walkthrough_CLI.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/Walkthrough_CLI.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/Walkthrough_API.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/docs/source/Examples/Walkthrough_API.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/open2c/coolpuppy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "open2c/coolpuppy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "coolpup.py"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/147190130"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/open2c/coolpuppy/master/loop_quant.png"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "All requirements apart are available from PyPI or conda. \n\nBefore installing everything you need to obtain `Cython` using either pip or conda. Then for coolpuppy (and other dependencies) simply do:\n\n`pip install coolpuppy`\n\nor\n\n`pip install https://github.com/open2c/coolpuppy/archive/master.zip`\n\nto get the latest version from GitHub. This will make `coolpup.py` callable in your terminal, and importable in python as `coolpuppy`.\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8508662856100079,
      "result": {
        "original_header": "coolpup.py",
        "type": "Text_excerpt",
        "value": ".**cool** file **p**ile-**up**s with **py**thon. \n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/open2c/coolpuppy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, contact-matrix, genomics, hi-c, pileup, python, sparse-matrix"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Ilya Flyamer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "coolpuppy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "open2c"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 183046,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "efriman",
          "type": "User"
        },
        "date_created": "2023-07-11T15:57:27Z",
        "date_published": "2023-07-11T16:09:24Z",
        "description": "* Added `ignore_group_order` and `--ignore_group_order` argument to flip and combine groups when using groupby, i.e. combining e.g. group1-group2 and group2-group1\r\n\r\n* Changed how flipping and group reassignment is implemented\r\n\r\n* Fixed zooming near diagonal\r\n\r\n* `divide_pups` now allows dividing even if columns are different, gives warning instead\r\n\r\n* Added additional tests\r\n\r\n* Bug fixes and logs/warnings added\r\n\r\n* Changes to walkthroughs",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 111821825,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/111821825",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/111821825",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2022-10-26T13:49:09Z",
        "date_published": "2022-10-26T13:51:49Z",
        "description": "This is a major release with a lot of changes. The main ones are included below, but probably there are a lot of smaller ones too.\r\n\r\n### API changes\r\n* New HDF5-based storage format, with functions to write and read the files in coolpuppy.lib.io\r\n\r\n* New \u201cuser-facing\u201d `pileup` function in python API for convenient single-step pileups, and with interface similar to `cooltools.pileup`\r\n\r\n* Pileups can be restricted using a genomic view (`--view` in CLI and `view_df` in API) in line with cooltools/bioframe (note that the expected has to be calculated for the same view, if used)\r\n\r\n* If using expected, by default each snippet is now normalized to expected and only averaged afterwards; this is controlled by `ooe` argument in API and `--not-ooe` argument in CLI)\r\n\r\n* Added options to split snippets based on strands, genomic distance, or both\r\n\r\n* Added option `flip_negative_strand` (API) and `--flip-negative-strand` (CLI) to flip features located on the negative strand\r\n\r\n* Added option to groupby snippets by their properties and generate multiple pileups in one run (`groupby` in API and `--groupby` in CLI)\r\n\r\n* Added option `trans=True` (API) and `--trans` (CLI)  to generate inter-chromosomal (trans) pileups\r\n\r\n* Added option `store_stripes=True` (API) and `--store_stripes` (CLI) to store individual vertical and horizontal stripe pairs\r\n\r\n* Added advanced option (`modify_2Dintervals_func` of `PileUpper.pileupsWithControls`) to apply an arbitrary function to pairs of intervals before they are used for generating pileups (i.e. bedpe-style intervals generated internally from either bedpe- or bed-style input features)\r\n\r\n* Added advanced option to apply an arbitrary function to each snippet before averaging in API (`postprocess_func` of `PileUpper.pileupsWithControls`)\r\n\r\n* Added function `divide_pups()` (API) and `dividepups.py` (CLI) to divide two pileups \r\n\r\n* CLI detects headers of bed and bedpe files\r\n\r\n* Overall API and CLI argument names are aligned with cooltools wherever possible\r\n\r\n### Plotting changes\r\n* Changed names of `plotpup.make_heatmap_grid()` to `plotpup.plot()`\r\n* Added option `plotpup.plot_stripes()` (API) and `--stripe` (CLI) for plotting stripes\r\n* Added option `--divide_pups` (CLI) to plot the ratio of two pileups\r\n\r\n### Documentation\r\n* Extensive tutorials for both python API and CLI\r\n\r\n### Maintenance\r\n* Code restructured, so all CLI tools are in one package, and created .lib with shared internal functions in lib/io.py, lib/numutils.py, lib/puputils.py and lib/util.py\r\n\r\n* Tests migrated to github actions, and also running nbsmoke on the CLI notebook to ensure it runs without errors\r\n\r\n* Only support python >=3.8, cooltools >=0.5.2\r\n\r\n### Miscellaneous\r\n* Logging has been fixed so the --logLevel properly works\r\n* Removed the launch_pileups.sh script",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 81049737,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/81049737",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/81049737",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2020-07-17T17:09:04Z",
        "date_published": "2020-07-17T17:09:34Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.9.5",
        "name": "0.9.5",
        "release_id": 28684097,
        "tag": "0.9.5",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/28684097",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/28684097",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2020-07-06T13:50:21Z",
        "date_published": "2020-07-06T14:19:02Z",
        "description": "Fix min/max distance setting, wasn't working in the recent versions!",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.9.4",
        "name": "0.9.4",
        "release_id": 28258928,
        "tag": "0.9.4",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/28258928",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/28258928",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-11-14T22:50:03Z",
        "date_published": "2019-11-25T11:11:23Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.9.2",
        "name": "Tests and infrastucrture updates",
        "release_id": 21728889,
        "tag": "0.9.2",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/21728889",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/21728889",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-10-09T13:14:17Z",
        "date_published": "2019-10-09T13:14:43Z",
        "description": "Forgot to bump version!",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.9.1",
        "name": "0.9.1",
        "release_id": 20578829,
        "tag": "0.9.1",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/20578829",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/20578829",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-09-10T13:11:18Z",
        "date_published": "2019-10-09T13:13:09Z",
        "description": "Allow interactions between 2 bed files! Some bugfixes, and added testing.",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.9",
        "name": "0.9",
        "release_id": 20578764,
        "tag": "0.9",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/20578764",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/20578764",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-06-03T15:29:38Z",
        "date_published": "2019-06-03T15:46:05Z",
        "description": "Allow separate colorbars for each row or each subplot",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.7",
        "release_id": 17747496,
        "tag": "0.8.7",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.7",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/17747496",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/17747496",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-05-15T10:51:06Z",
        "date_published": "2019-05-15T10:52:16Z",
        "description": "- Fix import of plotpup.py\r\n- Can add enrichment values when plotting",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.6",
        "release_id": 17364665,
        "tag": "0.8.6",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.6",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/17364665",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/17364665",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-05-09T16:00:46Z",
        "date_published": "2019-05-09T16:04:31Z",
        "description": "- Bugfixes\r\n- Added a simple plotting script (`plotpup.py`)\r\n- Allow different weight name used to get balanced data",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.5",
        "release_id": 17255263,
        "tag": "0.8.5",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/17255263",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/17255263",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-03-30T11:13:34Z",
        "date_published": "2019-03-30T11:15:15Z",
        "description": "Better project structure, thanks to @nvictus for help",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.4",
        "release_id": 16452335,
        "tag": "0.8.4",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/16452335",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/16452335",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-03-23T00:05:16Z",
        "date_published": "2019-03-23T15:24:01Z",
        "description": "Fix zoom_array",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.2",
        "release_id": 16302280,
        "tag": "0.8.2",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/16302280",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/16302280",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-03-22T15:49:37Z",
        "date_published": "2019-03-22T16:03:03Z",
        "description": "Fix logging",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8.1",
        "release_id": 16288637,
        "tag": "0.8.1",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/16288637",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/16288637",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-03-22T15:34:58Z",
        "date_published": "2019-03-22T15:35:36Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.8",
        "release_id": 16287776,
        "tag": "0.8",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/16287776",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/16287776",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-02-20T17:29:10Z",
        "date_published": "2019-02-20T17:29:48Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.7",
        "name": "0.7",
        "release_id": 15673927,
        "tag": "0.7",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/15673927",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/15673927",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-01-15T12:17:07Z",
        "date_published": "2019-01-16T22:55:52Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.5.5",
        "release_id": 15018998,
        "tag": "0.5.5",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/15018998",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/15018998",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2019-01-11T17:17:46Z",
        "date_published": "2019-01-11T17:34:15Z",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/0.5",
        "name": "0.5",
        "release_id": 14931919,
        "tag": "0.5",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/14931919",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/14931919",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Phlya",
          "type": "User"
        },
        "date_created": "2018-11-16T11:22:47Z",
        "date_published": "2018-11-23T12:27:31Z",
        "description": "Zenodo magic",
        "html_url": "https://github.com/open2c/coolpuppy/releases/tag/v0.3",
        "name": "First release",
        "release_id": 14155563,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/open2c/coolpuppy/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/open2c/coolpuppy/releases/14155563",
        "value": "https://api.github.com/repos/open2c/coolpuppy/releases/14155563",
        "zipball_url": "https://api.github.com/repos/open2c/coolpuppy/zipball/v0.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:28:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 78
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "The basic usage syntax is as follows:\n\n`coolpup.py [OPTIONS] coolfile.cool regionfile.bed` \n\nA guide walkthrough to pile-up analysis is available here (WIP): [Walkthrough](https://coolpuppy.readthedocs.io/en/latest/walkthrough.html)\n\nDocs for the command line interface are available here: [CLI docs](https://coolpuppy.readthedocs.io/en/latest/coolpup_py_cli.html)\n\nSome examples to get you started with CLI interface are available [here](https://coolpuppy.readthedocs.io/en/latest/Examples/Walkthrough_CLI.html) and for the python API examples see [here](https://coolpuppy.readthedocs.io/en/latest/Examples/Walkthrough_API.html).\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Plotting results",
        "parent_header": [
          "Getting started",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For flexible plotting, I suggest to use `matplotlib` or another library. However simple plotting capabilities are included in this package. Just run `plotpup.py` with desired options and list all the output files of `coolpup.py` you'd like to plot.\n"
      },
      "source": "https://raw.githubusercontent.com/Phlya/coolpuppy/master/README.md",
      "technique": "header_analysis"
    }
  ]
}