{
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team's corresponding authors at `dkeedy at\ngc cuny edu OR vdbedem at atomwise com`. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and appropriate\nto the circumstances. The project team is obligated to maintain confidentiality\nwith regard to the reporter of an incident. Further details of specific enforcement\npolicies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExcitedStates/qfit-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to qFit\n\n:+1::tada: Thanks for taking the time to contribute, and to read this guide! :tada::+1:\n\nThe following is a set of guidelines for contributing to qFit through the [GitHub repository](https://github.com/ExcitedStates/qfit-3.0). They are guidelines, not rules---but they exist to make maintaining and contributing to the code as smooth as possible for all parties involved. Please use your best judgement.\n\n----\n\n#### Table Of Contents\n\n[Code of Conduct](#code-of-conduct)\n\n[How Can I Contribute?](#how-can-i-contribute)\n  * [Reporting Bugs](#reporting-bugs)\n  * [Pull Requests](#pull-requests)\n\n[Styleguides](#styleguides)\n  * [Git Commit Messages](#git-commit-messages)\n  * [Code Styleguide](#code-styleguide)\n  * [Documentation Styleguide](#documentation-styleguide)\n\n## Code of Conduct\n\nThis project and everyone participating in it is governed by the [Code of Conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code. Please report unacceptable behavior to the project managers listed in the Code of Conduct.\n\n## How Can I Contribute?\n\n### Reporting Bugs\n\nThis section guides you through submitting a bug report for qFit. Following these guidelines helps maintainers and the community understand your report :pencil:, reproduce the behavior :computer: :computer:, and find related reports :mag_right:.\n\n1. Before creating bug reports, please **search the [issue tracker](https://github.com/search?q=+is%3Aissue+user%3Aatom)** to see if the problem has already been reported. If it has **and the issue is still open**, add a comment to the existing issue instead of opening a new one.\n    * **Note:** If you find a **Closed** issue that seems like it is the same thing that you're experiencing, open a new issue and include a link to the original issue in the body of your new one.\n\n2. **Submit a bug report** to our issue tracker.\n    * We have an [issue template](.github/ISSUE_TEMPLATE/bug_report.md): the information the template asks for helps us to resolve issues faster.\n    * Explain the problem and include additional details to help maintainers reproduce the problem:\n        * **Use a clear and descriptive title** for the issue to identify the problem.\n        * **Describe your configuration and environment.** Which version of qFit are you using? What's the name and version of the OS you're using?\n        * **Describe the exact steps which reproduce the problem** in as many details as possible.\n        * **Describe the behavior you observed after following the steps** and point out what exactly is the problem with that behavior.\n        * **Explain which behavior you expected to see instead and why.**\n        * **Provide the debug log file**. Run the same command again, with a `--debug` flag. This provides a lot of extra detail that will help project maintainers identify where in the program an issue occurred.\n        * **Provide files to reproduce the issue**. Attach input files if possible---if you would prefer not to share research data publically, then please email the project maintainers with links instead. If you're providing snippets in the issue, use [Markdown code blocks](https://help.github.com/articles/markdown-basics/#multiple-lines).\n\n\n### Pull Requests\n\nThe process described here has several goals:\n\n- Improve qFit's quality\n- Fix problems that are important to users\n- Enable a sustainable system for qFit's maintainers to review contributions\n\nPlease follow these steps to help streamline the review process:\n\n1. Follow all instructions in [the template](.github/pull_request_template.md)\n2. Follow the [styleguides](#styleguides)\n3. After you submit your pull request, verify that all [status checks](https://help.github.com/articles/about-status-checks/) are passing\n    * **What if the status checks are failing?** If a status check is failing, and you believe that the failure is unrelated to your change, please leave a comment on the pull request explaining why you believe the failure is unrelated. A maintainer will re-run the status check for you. If we conclude that the failure was a false positive, then we will open an issue to track that problem with our status check suite.\n\nWhile the prerequisites above must be satisfied prior to having your pull request reviewed, the reviewer(s) may ask you to complete additional design work, tests, or other changes before your pull request can be ultimately accepted.\n\n## Styleguides\n\n### Git Commit Messages\n\n* Complete the sentence \"This commit/PR will...\"  \n  (e.g. \"Add feature\" not \"Added feature\")\n* Reference issues and pull requests liberally after the first line\n* When only changing documentation, include `[ci skip]` in the commit title\n* Consider starting the commit message with an applicable emoji:\n    * :art: `:art:` when improving the format/structure of the code\n    * :racehorse: `:racehorse:` when improving performance\n    * :non-potable_water: `:non-potable_water:` when plugging memory leaks\n    * :memo: `:memo:` when writing docs\n    * :bug: `:bug:` when fixing a bug\n    * :fire: `:fire:` when removing code or files\n    * :green_heart: `:green_heart:` when fixing the CI build\n    * :white_check_mark: `:white_check_mark:` when adding tests\n\n### Code Styleguide\n\nOne of the key language features of Python is its readability. This was an important factor in deciding to move qFit from a C codebase to Python.\n\nMaintaining code readability, however, requires conscious effort.\n\n* **Follow [PEP8](https://www.python.org/dev/peps/pep-0008/) guidelines** for code that you are improving/adding.\n  Tools like [pycodestyle](https://pypi.org/project/pycodestyle/) and [flake8](https://pypi.org/project/flake8/) will tell you where you could improve readability; tools like [yapf](https://github.com/google/yapf) (`yapf --diff file.py`) will _advise_ you on changes to make.\n    * On its own, PEP8ifying someone else's code should not be a reason to submit a PR. [Follow it yourself sooner than impose it on others](https://medium.com/@drb/pep-8-beautiful-code-and-the-tyranny-of-guidelines-f96499f5ac17).\n* **Add descriptive docstrings**, especially to new functions.  \n  More time is spent reading code than writing it. Docstrings make the intention of a block of code obvious.\n    * We try to create [Google-style docstrings](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html) \u2190 (lots of fantastic examples to follow!)\n    * Docstrings _will_ become a part of our documentation through Sphinx.\n* **Write unit tests** (Not required, but this will make you a hero developer).  \n  This helps to make sure we don't break your code with future changes. Also, unit tests are good examples of how the code is intended to be run.\n    * We use [pytest](https://docs.pytest.org/en/stable/contents.html#toc) to run our tests.\n\n\n### Documentation Styleguide\n\n* Use [Markdown](https://daringfireball.net/projects/markdown).\n\n----\n\n<small>This contributing guide borrows heavily from the [Atom project](https://github.com/atom/atom/blob/master/CONTRIBUTING.md).</small>\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "qFit 2024v3"
        ],
        "type": "Text_excerpt",
        "value": "qFit uses [Black](https://github.com/psf/black) to format its code and provides a git hook to verify that code is properly formatted before allowing you to commit.\n\nBefore creating a commit, you will have to perform two actions:\n1. Install Black, either through a package manager or by running `python3 -m pip install --user black`\n2. Run `git config core.hooksPath .githooks/` to use the provided pre-commit hook\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-29T21:33:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T19:25:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qFit: Automated and unbiased multi-conformer models from X-ray and EM maps."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9453178127134793,
      "result": {
        "original_header": "qFit 2024v3",
        "type": "Text_excerpt",
        "value": "qFit is a collection of programs for modeling multi-conformer protein structures.  \nElectron density maps obtained from high-resolution X-ray diffraction data are a spatial and temporal average of all conformations within the crystal. qFit evaluates an extremely large number of combinations of sidechain conformers, backbone fragments and small-molecule ligands to locally explain the electron density. \n\nIf you use this software, please cite: \n- [Wankowicz SA, Ravikumar A, Sharma S, Riley BT, Raju A, Hogan DW, van den Bedem H, Keedy DA, & Fraser JS. Uncovering Protein Ensembles: Automated Multiconformer Model Building for X-ray Crystallography and Cryo-EM. eLife. (2024).](https://www.biorxiv.org/content/10.1101/2023.06.28.546963v2.abstract)\n- [Riley BT, Wankowicz SA, et al. qFit 3: Protein and ligand multiconformer modeling for X-ray crystallographic and single-particle cryo-EM density maps. Protein Sci. 30, 270\u2013285 (2021)](https://dx.doi.org/10.1002/pro.4001)\n- [Keedy, D. A., Fraser, J. S. & van den Bedem, H. Exposing Hidden Alternative Backbone Conformations in X-ray Crystallography Using qFit. PLoS Comput. Biol. 11, e1004507 (2015)](https://dx.doi.org/10.1371/journal.pcbi.1004507) \nAs this software relies on CVXPY, please also cite:\n- [Agrawal, Verschueren, Diamond, & Boyd. A Rewriting System for Convex Optimization Problems. Journal of Control and Decision. (2018).](https://arxiv.org/abs/1709.04494)\n- [Diamond & Boyd. CVXPY: A Python-Embedded Modeling Language for Convex Optimization. Journal of Machine Learning Research. (2016)](https://www.jmlr.org/papers/volume17/15-408/15-408.pdf) \n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExcitedStates/qfit-3.0/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ExcitedStates/qfit-3.0/wiki"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExcitedStates/qfit-3.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ExcitedStates/qfit-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qFit 2024v3"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/.devcontainer/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/.devcontainer/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/scripts/post/qfit_final_refine_cryoem.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/scripts/post/qfit_segment_refine.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/scripts/post/qfit_final_refine_ligand.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/scripts/post/qfit_final_refine_xray.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/docs/aws_deploy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/.devcontainer/install_dev_utils.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation (conda recommended)",
        "parent_header": [
          "qFit 2024v3"
        ],
        "type": "Text_excerpt",
        "value": "We recommend using the _conda_ package manager to install _qFit_.\n\n1. Clone the latest release of the qFit source, and install to your conda env\n\n   git clone -b main https://github.com/ExcitedStates/qfit-3.0.git\n   \n   cd qfit-3.0\n   \n3. Create the Conda environment using the downloaded file:\n\n   mamba env create -f environment.yml\n\n4. After creating the Conda environment, activate it:\n\n   conda activate qfit\n\n5. If you installing on M1 Mac:\n   \n     conda activate qfit; conda env config vars set CONDA_SUBDIR=osx-64; conda deactivate\n     conda activate qfit\n   \n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced",
        "parent_header": [
          "qFit 2024v3",
          "Installation (conda recommended)"
        ],
        "type": "Text_excerpt",
        "value": "If you prefer to manage your environments using other methods, qFit has the following prerequisites:\n\n* [Python 3.6+](https://python.org)\n* [numpy](https://numpy.org)\n* [scipy](https://scipy.org)\n* [cvxpy](https://www.cvxpy.org)\n\nOnce dependencies are installed, you can clone the qFit source, and install to your env as above.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (C) 2009-2019 Stanford University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "qFit 2024v3"
        ],
        "type": "Text_excerpt",
        "value": "The code is licensed under the MIT licence (see `LICENSE`).\n\nSeveral modules were taken from the `pymmlib` package, originally licensed\nunder the Artistic License 2.0. See the `licenses` directory for a copy of the\noriginal source code and its full license.\n\nThe `elements.py` is licensed under MIT, Copyright (c) 2005-2015, Christoph\nGohlke. See file header.\n\nThe `Xpleo` software and `LoopTK` package have been major inspirations for the inverse kinematics\nfunctionality.\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qfit-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ExcitedStates"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1281357,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 40808,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 21223,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1389,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1709.04494"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stephaniewankowicz",
          "type": "User"
        },
        "date_created": "2024-09-20T20:15:02Z",
        "date_published": "2024-09-20T20:19:13Z",
        "description": "## What's Changed\r\n\r\nThe main change for this version is an improvement in ligand multiconformer modeling. Additionally, we have some code improvements in protein. \r\n\r\n* Allow qFit to run with multiple backbone inputs by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/382\r\n* add find_close_residues.py to setup.py by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/396\r\n* fix argparse error in qfit_ligand.py by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/398\r\n* 404 qfit residue is missing by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/407\r\n* update for CVXPY citation by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/408\r\n* Add p flag by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/409\r\n* Add em to README.md example by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/411\r\n* re-implementing conda & M1 instructions by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/412\r\n* Add calc rscc to setup.py by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/413\r\n* update default labels by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/417\r\n* split QP into 3000 conformers by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/419\r\n* update to be compatible with mac os for tests by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/422\r\n* re-write em refinement by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/418\r\n* Update README.md by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/421\r\n* install using enviornment.yml by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/423\r\n* Fix Complete Residue by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/424\r\n* update order of readme by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/425\r\n* Implement maxpool sampling by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/420\r\n* Update em example by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/430\r\n* Use deposited conformers if clashes by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/429\r\n* set ci to use macos-13 by @dhogan-io in https://github.com/ExcitedStates/qfit-3.0/pull/431\r\n* Edit test to fix macOS issues by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/427\r\n* New qfit ligand by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/426\r\n* Update ligand test by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/432\r\n* Ligand additions by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/452\r\n* formatting README by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/454\r\n* Replacing 3K0N as the example, adding 1G8A by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/457\r\n* Edit _zero_out_most_similar_conformer() to add the optional ability to add the occupancy of the conformer by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/459\r\n* Update Refinement Phenix 2024 by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/458\r\n* update ligand refine to remove low occ conformers by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/460\r\n* Update lig_occ.py by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/461\r\n* Maxpool fix by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/462\r\n* remove duplicate rotamer sampling by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/463\r\n* Restraint creation file in loop by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/466\r\n* change qfit protein test by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/464\r\n* add to ligand examples folder and scripts README by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/467\r\n* correct comp omit for ligand by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/469\r\n* Add bdc scaling for PanDDA models into ligand final refine script by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/471\r\n* blackening all files  by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/472\r\n* fix calc_coord function by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/473\r\n* Creating qFit version 2024.3 by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/475\r\n\r\n\r\n**Full Changelog**: https://github.com/ExcitedStates/qfit-3.0/compare/2024.2...2024.3",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/2024.3",
        "name": "2024.3",
        "release_id": 176185052,
        "tag": "2024.3",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/2024.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/176185052",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/176185052",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/2024.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stephaniewankowicz",
          "type": "User"
        },
        "date_created": "2024-02-14T09:22:22Z",
        "date_published": "2024-02-14T23:32:07Z",
        "description": "This release implements the move to open-sourced solvers for qFit. It is associated with the revision of Wankowicz et al 'Uncovering Protein Ensembles: Automated Multiconformer Building in X-ray Crystallography and CryoEM' eLife 2023.\r\n ",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/2024.2",
        "name": "2024.2",
        "release_id": 142069793,
        "tag": "2024.2",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/2024.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/142069793",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/142069793",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/2024.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stephaniewankowicz",
          "type": "User"
        },
        "date_created": "2024-01-29T22:34:33Z",
        "date_published": "2024-01-29T22:45:30Z",
        "description": "qFit version 2024 v1 is associated with the revision of Wankowicz et al 'Uncovering Protein Ensembles: Automated Multiconformer Building in X-ray Crystallography and CryoEM' eLife 2023. \r\n\r\nqFit Algorithm Changes:\r\n* updating chi sampling dof per iteration to 1 by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/365\r\n* 347 explore smaller rotamer window by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/366\r\n* 354 re work angle sampling to rotate 360 by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/367\r\n* Re-implement open source solvers by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/363\r\n* Updating BIC hyperparameter by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/369\r\n* Correct crystal and scale info by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/370\r\n* Combine qFit residue into qFit protein by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/371\r\n* Removing the Phenix Aniso refinement option by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/372\r\n* change isotropic sampling directions in backbone by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/379\r\n* Split QP step into two in sample sidechain by @jessicaflowers in https://github.com/ExcitedStates/qfit-3.0/pull/389\r\n* Adding Hetatms in output of multiconformer_model2 by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/393\r\n* Solver Error Catches by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/383\r\n* Collapsing conformers with the same coordinates by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/200\r\n* change rmsd cutoff in qFit segment by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/281\r\n* Add in B-factor sampling by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/289\r\n* adding flag to only run qFit segment by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/298\r\n* 301 reconfigure qfit segment by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/306\r\n* Updating hardcoded alt locs in backbone collapse by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/311\r\n* qscore cutoff option for EM structures by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/317\r\n* updating OXT issues by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/318\r\n* updating write intermediate conformers argument by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/321\r\n* Unify map extraction: use --padding option (and default value) in QFitSegment by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/327\r\n* 177-qFit to work for EM with appropriate SF by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/322\r\n* Segment BIC criteria = nconfs by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/341\r\n\r\nPost qFit refinement/analysis scripts:\r\n* move where we add hydrogens to after while loop by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/296\r\n* adding reduce failure flag by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/297\r\n* adding order solvent picking in refinement by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/303\r\n* 301 re create refinement script to group occupancy of segment alt locs by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/304\r\n* adding target weight params to final refine by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/310\r\n* create all rotamers script by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/307\r\n* Updating Ligand Occupany script to extract average b-factor by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/387\r\n* Add rscc script by @stephaniewankowicz in https://github.com/ExcitedStdStates/qfit-3.0/pull/388\r\n\r\nOther Maintenence for qFit Repository: \r\n* Improve the example folder and README file by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/278\r\n* Rename TUTORIAL.md to README.md by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/294\r\n* Implementing faster qFit Ligand test by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/291\r\n* updating numpy and python versions to work on M1 Macs by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/358\r\n* Moving M1 change to Main by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/359\r\n* Improved Error Message when CPLEX is not installed by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/362\r\n\r\n\r\n**Full Changelog**: https://github.com/ExcitedStates/qfit-3.0/compare/latest...2024v1",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/2024v1",
        "name": "2024v1",
        "release_id": 139021834,
        "tag": "2024v1",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/2024v1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/139021834",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/139021834",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/2024v1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stephaniewankowicz",
          "type": "User"
        },
        "date_created": "2022-07-17T19:22:29Z",
        "date_published": "2022-08-25T19:48:08Z",
        "description": "## What's Changed\r\n* Fix CI after master-to-main switch by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/162\r\n* Update README.md by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/161\r\n* Update README in main by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/163\r\n* Analysis script updates  by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/168\r\n* a post refine script that works! by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/169\r\n* Improve README for M1 Macs by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/174\r\n* Make sure the user provides a resolution value if the input map is in MRC/CCP4 or MAP formats by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/180\r\n* Unify all QFitOptions classes into a single class by @ss199514 in https://github.com/ExcitedStates/qfit-3.0/pull/178\r\n* Fixing large maps being able to be fed into qFit Protein without crashing by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/176\r\n* If options.nproc is 1, run QFitRotamericResidue job in MainProcess by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/185\r\n* 179 qfit protein outputting duplicate hetatms by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/186\r\n* Clarify warning about AttributeError at C\u03b2 by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/187\r\n* Fixed X-ray data labels search and changed how phenix refinement parameters are given in post qfit refinement xray script by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/188\r\n* Fix multiconformer_model.pdb not found error when it is actually present by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/196\r\n* 189 delete qfit combine qfit ppidesign qfit segment and other entrypoints that dont work by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/197\r\n* Fix post analysis script typos by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/193\r\n* Better error message map/model are in the incorrect order upon input.  by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/192\r\n* Small patch fixes by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/195\r\n* removing lines by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/201\r\n* If a residue-sampling checkpoint exists, don't add it to the list of residues to be sampled by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/211\r\n* Instruct users to install qFit from main branch code by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/212\r\n* Rewrite XMap.extract() for 500x speed boost by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/214\r\n* Fix non-convex objective errors by selectively deleting conformers by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/213\r\n* Delete SpaceGroups.py by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/218\r\n* Improved error message: unknown file type error in qfit residue by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/220\r\n* Refine script: output names and riding hydrogens by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/221\r\n* 226 create test to read in and write out map file by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/228\r\n* 227 Building tests for a variety of SG by @ss199514 in https://github.com/ExcitedStates/qfit-3.0/pull/229\r\n* 224 create a test to read in different model files by @ashrayar in https://github.com/ExcitedStates/qfit-3.0/pull/232\r\n* Change branch: 226 create test to read inwrite out map file by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/239\r\n* qFit 3.2.2: Merging dev -> main by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/237\r\n* Update README.md by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/240\r\n\r\n## New Contributors\r\n* @ashrayar made their first contribution in https://github.com/ExcitedStates/qfit-3.0/pull/161\r\n* @ss199514 made their first contribution in https://github.com/ExcitedStates/qfit-3.0/pull/178\r\n\r\n**Full Changelog**: https://github.com/ExcitedStates/qfit-3.0/compare/v3.2.1...v3.2.2",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/v3.2.2",
        "name": "qFit version 3.2.2",
        "release_id": 75386883,
        "tag": "v3.2.2",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/v3.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/75386883",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/75386883",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/v3.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "blake-riley",
          "type": "User"
        },
        "date_created": "2021-11-10T20:08:16Z",
        "date_published": "2021-11-10T20:11:13Z",
        "description": "Release v3.2.1\r\n\r\n## What's Changed\r\n* Update README.md for new refinement script/input by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/120\r\n* Improve flags (& --help) of qfit programs by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/122\r\n* Add --random-seed to provide option for reproducible runs by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/124\r\n* Add --rmsd-cutoff option to qFit-ligand by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/126\r\n* Update setup-miniconda GitHub Action (repairs failing CI) by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/129\r\n* Fixing CI Testing function by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/137\r\n* Changing write-intermediate-conformers argument to match qfit_protein by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/127\r\n* Add Ca option in b-factor.py script by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/131\r\n* Added cryo-EM and qFit ligand examples by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/125\r\n* Fix CI, installs failing caused by numpy API change by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/148\r\n* adding new post qfit analysis scripts by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/146\r\n* correcting line for post qFit refine cryoEM by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/152\r\n* Fixup indentation in alpha_rmsd by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/155\r\n* adding qfit_protein for scale/cryst by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/151\r\n* Move to python 3.7, 3.8 by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/156\r\n* Remove licences, update citation by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/157\r\n* Release bugfix version: 3.2.1 by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/158\r\n\r\n\r\n**Full Changelog**: https://github.com/ExcitedStates/qfit-3.0/compare/v3.2.0...v3.2.1",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/v3.2.1",
        "name": "v3.2.1",
        "release_id": 53117905,
        "tag": "v3.2.1",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/v3.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/53117905",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/53117905",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/v3.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stephaniewankowicz",
          "type": "User"
        },
        "date_created": "2021-11-10T20:08:16Z",
        "date_published": "2023-06-18T00:13:13Z",
        "description": "## What's Changed\r\nqFit version 2023 v1 is associated with Wankowicz et al 'Uncovering Protein Ensembles: Automated Multiconformer Building in X-ray Crystallography and CryoEM'. The changes in that paper are outlined in this version release and qFit 3.2.2 \r\n\r\n\r\n\r\n\r\n**Main updates to qFit algorithm**\r\n* Add --random-seed to provide an option for reproducible runs by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/124\r\n\r\n**Update to post qFit analysis scripts**\r\n* Update README.md for new refinement script/input by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/120\r\n* Add Ca option in b-factor.py script by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/131\r\n\r\n**Coding update to qFit algorithm**\r\n* Improve flags (& --help) of qfit programs by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/122\r\n* Add --rmsd-cutoff option to qFit-ligand by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/126\r\n* adding new post qfit analysis scripts by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/146\r\n* adding qfit_protein for scale/cryst by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/151\r\n\r\n**Other Maintenence for qFit Repository**\r\n* Remove licences, update citation by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/157\r\n* Move to python 3.7, 3.8 by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/156\r\n* Update setup-miniconda GitHub Action (repairs failing CI) by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/129\r\n* Fix CI, installs failing caused by numpy API change by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/148\r\n* Fixing CI Testing function by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/137\r\n* Changing write-intermediate-conformers argument to match qfit_protein by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/127\r\n* Added cryo-EM and qFit ligand examples by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/125\r\n* correcting line for post qFit refine cryoEM by @stephaniewankowicz in https://github.com/ExcitedStates/qfit-3.0/pull/152\r\n* Fixup indentation in alpha_rmsd by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/155\r\n* Release bugfix version: 3.2.1 by @blake-riley in https://github.com/ExcitedStates/qfit-3.0/pull/158\r\n\r\n**Full Changelog**: https://github.com/ExcitedStates/qfit-3.0/compare/v3.2.0...latest",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/latest",
        "name": "qFit version 2023 v1",
        "release_id": 104168974,
        "tag": "latest",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/latest",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/104168974",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/104168974",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/latest"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "blake-riley",
          "type": "User"
        },
        "date_created": "2020-09-04T20:08:02Z",
        "date_published": "2020-09-09T18:24:05Z",
        "description": "Release v3.2.0\r\nIn line with https://www.biorxiv.org/content/10.1101/2020.09.03.280222v1",
        "html_url": "https://github.com/ExcitedStates/qfit-3.0/releases/tag/v3.2.0",
        "name": "v3.2.0",
        "release_id": 30999089,
        "tag": "v3.2.0",
        "tarball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/tarball/v3.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/30999089",
        "value": "https://api.github.com/repos/ExcitedStates/qfit-3.0/releases/30999089",
        "zipball_url": "https://api.github.com/repos/ExcitedStates/qfit-3.0/zipball/v3.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:26:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage examples",
        "parent_header": [
          "qFit 2024v3"
        ],
        "type": "Text_excerpt",
        "value": "The `qfit` package comes with several command line tools to model alternate\nconformers into electron densities. You should select the command line tool that\nis most suited for your task. Please refer below for a basic usage example. More specialized and advanced use case examples\nare shown in [example](example/README.md) directory.\n\nTo remove single-conformer model bias, qFit should be used with a composite omit\nmap. One way of generating such map is using the [Phenix software suite](https://www.phenix-online.org/):\n\n`phenix.composite_omit_map input.mtz model.pdb omit-type=refine`\n\nAn example test case (1G8A) can be found in the [qfit protein example](example/qfit_protein_example/) directory. Additionally, you can find the [cyroEM protein example](example/qfit_cryoem_example/)(PDB: 7A4M) and the [ligand example](example/qfit_ligand_example/) qFit-ligand example (PDB: 4MS6) in the *example* directory. \n\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommended settings",
        "parent_header": [
          "qFit 2024v3",
          "Usage examples"
        ],
        "type": "Text_excerpt",
        "value": "To model alternate conformers for all residues in a *X-ray crystallography* model using qFit,\nthe following command should be used:\n\n`qfit_protein [COMPOSITE_OMIT_MAP_FILE] -l [LABELS] [PDB_FILE] -p [# OF THREADS]`\n\nThis command will produce a multiconformer model that spans the entirety of the\ninput target protein. The final model, with consistent labeling of multiple conformers\nis output into *multiconformer_model2.pdb*. This file should then\nbe used as input to the post-qFit refinement script provided in [scripts](scripts/post) folder. \n\nqFit can be run on a single thread, but speeds up significantly with multiple threads. Do to this, use the *-p* flag.\n\nIf you wish to specify a different directory for the output, this can be done\nusing the flag *-d*.\n \nBy default, qFit expects the labels FWT,PHWT to be present in the input map.\nDifferent labels can be set accordingly using the flag *-l*.\n\nUsing the example 18GA:\n\n`qfit_protein example/qfit_protein_example/composite_omit_map.mtz -l 2FOFCWT,PH2FOFCWT example/qfit_protein_example/1G8A_refine.pdb`\n\nAfter *multiconformer_model2.pdb* has been generated, refine this model using:\n\n`qfit_final_refine_xray.sh example/qfit_protein_example/18GA.mtz example/qfit_protein_example/multiconformer_model2.pdb`\n\nAdditionally, the qFit_occupancy.params file must exist in the folder (this is an output of qFit protein).\n\nBear in mind that this final step currently depends on an existing installation\nof the Phenix software suite. This script is currently written to work with version Phenix 1.21.\n\nTo model alternate conformers for all residues in a *cryo-EM* model using qFit,\nthe following command should be used:\n\n`qfit_protein [MAP_FILE] -r [RES] [PDB_FILE] -em`\n`qfit_protein example/qfit_cryoem_example/7A4M_box.ccp4 -r 1.7 example/qfit_cryoem_example/7A4M_box.pdb`\n\nAfter *multiconformer_model2.pdb* has been generated, refine this model using:\n\n`qfit_final_refine_cryoEM.sh example/qfit_cryoem_example/7A4M_box.ccp4 example/qfit_cryoem_example/multiconformer_model2.pdb example/qfit_cryoem_example/7A4M_box.pdb`\n\nMore advanced features of qFit (modeling single residue, more advanced options, and further explainations) are explained in [TUTORIAL](example/README.md).\n\nTo model alternate conformations of ligands using qFit, we recommend running composite omit map excluding bulk solvent with the following command:\n\n`phenix.composite_omit_map input.mtz model.pdb omit-type=refine exclude_bulk_solvent=True`\n\nqFit-ligand can be executed the following command:\n\n`qfit_ligand [COMPOSITE_OMIT_MAP_FILE] [PDB_FILE] -l [LABELS] [SELECTION] -sm [SMILES]`\n\nThis command facilitates the incorporation of alternate ligand conformations into your protein model. The results are outputted to two files: *multiconformer_ligand_bound_with_protein.pdb*, which is the multiconformer model of the protein-ligand complex, and *multiconformer_ligand_only.pdb*, which is the multiconformer model of the ligand alone. \n\nAfter running qFit-ligand, it is recommended to perform a final refinement using the script found in [scripts](scripts/post). Run this in the same directory as your models.\n\nIf you wish to specify the number of ligand conformers for qFit to sample, use the flag `-nc [NUM_CONFS]`. The default number is set to 10,000. \n\nUsing the example 4MS6:\n\n`qfit_ligand example/qfit_ligand_example/4ms6_composit_map.mtz example/qfit_ligand_example/4ms6.pdb -l 2FOFCWT,PH2FOFCWT A,702 -sm 'C1C[C@H](NC1)C(=O)CCC(=O)N2CCC[C@H]2C(=O)O' -nc 10000`\n\nTo refine *multiconformer_ligand_bound_with_protein.pdb*, use the following command\n\n`qfit_final_refine_ligand.sh 4ms6.mtz`\n\n"
      },
      "source": "https://raw.githubusercontent.com/ExcitedStates/qfit-3.0/main/README.md",
      "technique": "header_analysis"
    }
  ]
}