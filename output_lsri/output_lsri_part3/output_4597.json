{
  "application_domain": [
    {
      "confidence": 0.9211702451822431,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use this tool for your research, please cite:\n\nGautreau G et al. (2020) **PPanGGOLiN**: Depicting microbial diversity via a partitioned pangenome graph.\nPLOS Computational Biology 16(3): e1007732. <https://doi.org/10.1371/journal.pcbi.1007732>\n\nIf you use this tool to study genomic islands, please cite:\n\nBazin et al., panRGP: a pangenome-based method to predict genomic islands and explore their diversity, Bioinformatics, Volume 36, Issue Supplement_2, December 2020, Pages i651\u2013i658, <https://doi.org/10.1093/bioinformatics/btaa792>\n\nIf you use this tool to study modules, please cite:\n\nBazin et al., panModule: detecting conserved modules in the variable regions of a pangenome graph. biorxiv. <https://doi.org/10.1101/2021.12.06.471380>\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/labgem/PPanGGOLiN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-20T12:25:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T16:05:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Build a partitioned pangenome graph from microbial genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9590071177029806,
      "result": {
        "original_header": "PPanGGOLiN: Depicting microbial species diversity via a Partitioned PanGenome Graph Of Linked Neighbors",
        "type": "Text_excerpt",
        "value": "**PPanGGOLiN**\n([Gautreau et al. 2020](https://doi.org/10.1371/journal.pcbi.1007732)) is a software suite used to create and manipulate prokaryotic pangenomes from a set of either genomic DNA sequences or provided genome annotations.\nIt is designed to scale up to tens of thousands of genomes.\nIt has the specificity to partition the pangenome using a statistical approach rather than using fixed thresholds which gives it the ability to work with low-quality data such as *Metagenomic Assembled Genomes (MAGs)* or *Single-cell Amplified Genomes (SAGs)* thus taking advantage of large scale environmental studies and letting users study the pangenome of uncultivable species. \n**PPanGGOLiN** builds pangenomes through a graphical model and a statistical method to partition gene families in persistent, shell and cloud genomes.\nIt integrates both information on the presence/absence of protein-coding genes and their genomic neighborhood to build a graph of gene families where each node is a gene family, and each edge is a relation of genetic contiguity.\nThe partitioning method promotes that two gene families that are consistent neighbors in the graph are more likely to belong to the same partition.\nIt results in a Partitioned Pangenome Graph (PPG) made of persistent, shell and cloud nodes drawing genomes on rails like a subway map to help biologists navigate the great diversity of microbial life. \n\nMoreover, the panRGP method ([Bazin et al. 2020](https://doi.org/10.1093/bioinformatics/btaa792)) included in **PPanGGOLiN** predicts, for each genome, Regions of Genome Plasticity (RGPs) that are clusters of genes made of shell and cloud genomes in the pangenome graph.\nMost of them arise from Horizontal gene transfer (HGT) and correspond to Genomic Islands (GIs). \nRGPs from different genomes are next grouped in spots of insertion based on their conserved flanking persistent genes. \n\nThose RGPs can be further divided in conserved modules by panModule ([Bazin et al. 2021](https://doi.org/10.1101/2021.12.06.471380)). Those conserved modules correspond to groups of cooccurring and colocalized genes that are gained or lost together in the variable regions of the pangenome. \nA complete documentation is available [here](https://ppanggolin.readthedocs.io). \n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8902735910806674,
      "result": {
        "original_header": "Issues, Questions, Remarks",
        "type": "Text_excerpt",
        "value": "If you have any questions or issues with installing,\nusing or understanding **PPanGGOLiN**, please do not hesitate to post an issue!\nWe cannot correct bugs if we do not know about them, and will try to help you the best we can.\n \n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/labgem/PPanGGOLiN/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ppanggolin.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/labgem/PPanGGOLiN/wiki"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/labgem/PPanGGOLiN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "labgem/PPanGGOLiN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PPanGGOLiN: Depicting microbial species diversity via a Partitioned PanGenome Graph Of Linked Neighbors"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\n```{note}\nSupported python version are 3.8, 3.9, 3.10, 3.11 and 3.12\n```\n\n## Installing PPanGGOLiN with Conda (recommended)\n\nThe best way to install PPanGGOLiN is through conda, accessible through the bioconda channel.\nTo ensure a smoother installation and avoid conflicting dependencies, it's highly recommended to create a dedicated environment for PPanGGOLiN:\n\n```bash\n# Install into a new conda environment\nconda create -n ppanggo -c defaults -c conda-forge -c bioconda ppanggolin\n\n# Check PPanGGOLiN install\nconda activate ppanggo\nppanggolin --version\n```\n\n```{tip}\n  For quicker installation and potential resolution of conflicting dependencies, consider using Mamba, an efficient alternative to conda.\n```\n\n\n## Installing from Source Code (GitHub)\n\n### Within a Conda Environment\n\nA straightforward method to install PPanGGOLiN from the source code is by utilizing a conda environment that includes all the necessary dependencies.\n\n**1. Clone the PPanGGOLiN Repository**\n\n```bash\ngit clone https://github.com/labgem/PPanGGOLiN.git\ncd PPanGGOLiN\n```\n\n**2. Installing Dependencies with a Conda Environment File**\n\nInstall PPanGGOLiN dependencies listed in the [ppanggolin_env.yaml](../../ppanggolin_env.yaml) file, located at the root of the repository, using conda:\n\n```bash\nconda env create -n ppanggolin_source -f ppanggolin_env.yaml\n```\n\n**3. Installing PPanGGOLiN**\n\nFinally, install PPanGGOLiN using **pip**:\n\n```bash\npip install .\n```\n\n### Manual Installation\n\nIf you prefer to install PPanGGOLiN without using conda, follow these steps:\n\n```{warning}\nPlease note that this method involves manual installation. While assistance is available, complete troubleshooting support may not be provided. We strongly recommend using the conda installation method whenever possible.\n```\n\n**1. Clone the PPanGGOLiN Repository**\n\n```bash\ngit clone https://github.com/labgem/PPanGGOLiN.git\ncd PPanGGOLiN\n```\n\n**2. Installing PPanGGOLiN Dependencies**\n\nTo ensure the tool functions correctly, you need to install all dependencies listed in the [ppanggolin_env.yaml](../../ppanggolin_env.yaml) file.\n\nNext, install the following non-Python software:\n\n- [MMSeqs2>=13.45111](https://github.com/soedinglab/MMseqs2/wiki#installation)\n- [Aragorn>=1.2.41](http://www.ansikte.se/ARAGORN/Downloads/)\n- [Infernal>=1.1.4](http://eddylab.org/infernal/)\n- [MAFFT>=7.505](https://mafft.cbrc.jp/alignment/software/)\n\n```{note}\n- MMSeqs2 is crucial for gene clustering, while Aragorn and Infernal are used for genome annotation.\n- MAFFT is utilized in the `ppanggolin msa` command for multiple sequence alignment.\n- Skip installing Aragorn, Infernal, or MAFFT if you do not require their specific features.\n```\n\n**3. Installing PPanGGOLiN with its Python Dependencies**\n\nPPanGGOLiN's Python dependencies are specified in the `pyproject.toml` file under the optional dependencies category named `python_deps`. This configuration file is situated at the root of the PPanGGOLiN repository.\n\nTo install PPanGGOLiN along with its Python dependencies, you can use the following pip command:\n\n```bash\npip install .[python_deps]\n```\n\n\n## Development Version\n\nIf you wish to utilize the development version of PPanGGOLiN, you can access the 'dev' branch on GitHub. Please note that while its functionality is not guaranteed, it typically works most of the time.\n\nFollow these steps to obtain and install the development version:\n\n**1. Clone the Repository**\n\nClone the 'dev' branch of the repository onto your local machine:\n\n```bash\ngit clone --branch dev https://github.com/labgem/PPanGGOLiN.git\ncd PPanGGOLiN\n```\n\n**2. Install Dependencies**\n\nEnsure you have all the necessary dependencies installed. Refer to the [installation instructions above](#installing-from-source-code-github) for guidance on installing dependencies.\n\n**3. Install PPanGGOLiN**\n\nOnce dependencies are installed, proceed to install PPanGGOLiN using **pip**:\n\n```bash\npip install .\n```\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/docs/user/install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "**PPanGGOLiN** can be is easily installed via conda, accessible through the bioconda channel.\n\nTo ensure a smoother installation and avoid conflicting dependencies, it's highly recommended to create a dedicated environment for PPanGGOLiN:\n\n```bash\n# Install PPanGGOLiN into a new conda environment\nconda create -n ppanggolin -c defaults -c conda-forge -c bioconda ppanggolin\n\n# Check PPanGGOLiN install\nconda activate ppanggolin\nppanggolin --version\n```\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8512637868097916,
      "result": {
        "original_header": "PPanGGOLiN: Depicting microbial species diversity via a Partitioned PanGenome Graph Of Linked Neighbors",
        "type": "Text_excerpt",
        "value": "A complete documentation is available [here](https://ppanggolin.readthedocs.io). \n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998839400402509,
      "result": {
        "original_header": "Issues, Questions, Remarks",
        "type": "Text_excerpt",
        "value": "If you have any questions or issues with installing,\nusing or understanding **PPanGGOLiN**, please do not hesitate to post an issue!\nWe cannot correct bugs if we do not know about them, and will try to help you the best we can.\n \n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8000540437531158,
      "result": {
        "original_header": "PPanGGOLiN: Depicting microbial species diversity via a Partitioned PanGenome Graph Of Linked Neighbors",
        "type": "Text_excerpt",
        "value": "\n<p align=\"center\">\n  <img src=\"docs/_static/logo.png\" alt=\"logo\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bacteria, bioinformatics, comparative-genomics, microbial-genomics, microbiology, pangenome"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/docs/_static/logo.png"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PPanGGOLiN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "labgem"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1291684,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 335570,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 653,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-09-16T08:21:30Z",
        "date_published": "2024-09-16T08:23:05Z",
        "description": "## Bug Fixes\r\n\r\n- **Improved tile plot** with gene names and metadata in hover text, optional x-axis dendrogram, updated color bar for discrete values, and a new partition legend by @JeanMainguy.   (Issues #81, #251, PR #277)\r\n\r\n- **Fixed an issue in the partition module** where the `random.sample` function caused errors in Python 3.11 and 3.12, resolving a bug missed in Python 3.12 support by @JeanMainguy.  (Issues #268 & #280, PR #278)\r\n\r\n- **Fixed issues with the cluster command** when using an external cluster file by @JeanMainguy.    (Issue #279, PR #278)\r\n\r\n- **Fixed ruff warnings** related to UP, PERF, and C4 by @fchapoton.   (PR #274)\r\n\r\n\r\n\r\n**Full Changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.1.1...2.1.2",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.1.2",
        "name": "PPanGGOLiN  2.1.2",
        "release_id": 174961247,
        "tag": "2.1.2",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/174961247",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/174961247",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-08-22T11:32:52Z",
        "date_published": "2024-08-22T11:35:02Z",
        "description": "## Bug Fixes\r\n\r\n- Added support for Python 3.11 and 3.12 by @JeanMainguy  (issues #253 and #268, PR #255).\r\n- Fixed handling of Aragorn genes that exceed contig length by @JeanMainguy (issue #254, PR #256).\r\n- Fixed output configuration in workflow commands when set in the config file by @JeanMainguy (PR #261).\r\n- Sort gene families in the TSV file by cluster size and alphabetically by gene to ensure consistent output across runs by @jpjarnoux  (issue #263, PR #265).\r\n- Fixed issue in projection when using a spotless pangenome by @JeanMainguy (issue #264, PR #266).\r\n- Added a warning log for partition failures to improve error visibility, as a first step towards better handling of partitioning issues by @JeanMainguy (issue #262, PR #269).\r\n- Minor code improvements and typo corrections in the documentation and source by @fchapoton (#257, #258, and #259).\r\n\r\n## New Contributors\r\n\r\n- We thank @fchapoton for their first contributions in #257, #258, and #259.\r\n\r\n**Full Changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.1.0...2.1.1",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.1.1",
        "name": "PPanGGOLiN  2.1.1",
        "release_id": 171437759,
        "tag": "2.1.1",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/171437759",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/171437759",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jpjarnoux",
          "type": "User"
        },
        "date_created": "2024-07-10T14:23:04Z",
        "date_published": "2024-07-10T14:54:26Z",
        "description": "## New Features\r\n\r\n- Write the translated sequence of genes using MMSeqs2 with the `--proteins` option ([documentation](https://ppanggolin.readthedocs.io/en/latest/user/writeFasta.html#proteins)), which works like the other options in the ppanggolin fasta command (added in PR #205).\r\n- Some information about contigs and genomes, such as organism name, strain, and dbx_ref information, is now extracted from annotation files (GBFF & GFF) and added to the pangenome as metadata (added in PR #227).\r\n- The command `write_metadata` has been added to allow exporting metadata to TSV files. Check out the [documentation](https://ppanggolin.readthedocs.io/en/latest/user/metadata.html#exporting-metadata-to-tsv-files) for more details (added in PR #227).\r\n- Add `infer_singleton` option in the workflow (added in PR #239).\r\n- When clustering is given, it\u2019s now possible to specify the representative gene of the cluster (added in PR #242).\r\n\r\n## Major Change\r\n\r\n- Handling genes with joined coordinates (for example, frameshift) in input annotation files (GFF or GBFF). Such annotations were disregarded when encountered in GBFF files and improperly managed in GFF files. This change implies a change in writing gene sequences and, consequently, in clustering and, thus, in all pangenome results: graph, partition, RGP, spots, and modules. This change was measured and reported in PR #206. It is not huge on pangenomes, but needs to be known for future version comparisons. See also PR #240 and #249.\r\n\r\n## Minor Changes\r\n\r\n- Ordering gene in the whole genome MSA file (added in PR #200).\r\n- Replace the return in the try block with an else statement to return the value found in try (added in PR #204).\r\n- When writing MSA, the partial gene is handled by removing the last one or two nucleotides to translate (added in PR #205).\r\n- Change how method `get_genes` handles end position (added in PR #212).\r\n- Improve GitHub CI workflow (added in PR #216, #220, #224, #225).\r\n- PPanGGOLiN now supports using the soft-link option when building the MMSeqs2 database via subprocess, reducing temporary directory size (added in PR #214 and #229).\r\n- Report subprocess (MMSeqs2, MAFFT, etc.) error message if it crashes (reported in issue #210, added in PR #229).\r\n- When parsing annotation files, CDS are translated using the translation table code specified by the `transl_table` tag. If this tag is missing, the `translation_table` argument is now used, with a default value of 11 (reported in #226 and added in PR #230).\r\n- Added an identifier to metadata in object and HDF5. This helps to identify the right metadata in a cross-reference (added in PR #235).\r\n- Make the subprocess more detailed with info and error messages (added in PR #237).\r\n- Add the protein sequence to the gene family when reading clustering (added in PR #238).\r\n- Add gene information in RGP output (added in PR #239).\r\n- Improve metadata management in commands `projection` and `rgp_cluster` (added in PR #244).\r\n- Some developments for the PANORAMA project \ud83e\udd2b (added in PR #248).\r\n\r\n## Bug Fixes\r\n\r\n- Fix the last genome missing in the whole genome MSA file (fixed in PR #200).\r\n- Write only genes associated with the RGP when writing FASTA sequences for RGP (reported in issue #122, fixed in PR #202).\r\n- Ensure proper handling of circular RGPs, addressing issues observed in the spot plot (reported in issue #124, fixed in PR #206).\r\n- Fix gene ID mismatch in projection command with GBFF files as input genome (reported in issue #207, fixed in PR #208).\r\n- Fix spot prediction in projection command (fixed in PR #209).\r\n- Fix multiple spots per RGP handling in projection command (fixed in PR #211).\r\n- Handle trailing whitespace at the end of GBFF file (reported in issue #203, fixed in PR #213).\r\n- Correctly read \"is_circular\" from GFF files (fixed in PR #215).\r\n- Fix RGP \"looping\" around circular contigs (fixed in PR #215).\r\n- Write the gene name instead of the coordinates in RGP output files (reported in issue #218, fixed in PR #219).\r\n- Write only the genes of the input genome in `gene_to_gene_family.tsv` file from projection (reported in issue #221, fixed in PR #228).\r\n- Fix `dup_margin` default value (reported in issue #223 and fixed in PR #234).\r\n- Fix missing `translation_table` handling (reported in issue #226 and fixed in PR #230).\r\n- Fix spots to modules output file always empty (fixed in PR #236).\r\n- Manage chevron in GFF start and stop (fixed in PR #241).\r\n- Ignore weird tRNA from Aragorn (fixed in PR #245).\r\n- Fix display module on Proksee with gene overlapping contig (fixed in PR #246).\r\n- Fix metadata-related issues (fixed in PR #247).\r\n\r\n## New Contributor\r\n\r\nWe thank @ktmeaton, who made their first contribution in #200. \ud83c\udf89\r\n\r\n## Other Contributors\r\n\r\n- @JeanMainguy \r\n- @jpjarnoux \r\n- @axbazin \r\n- @ggautreau\r\n- @dvallenet \r\n- @acalteau ",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.1.0",
        "name": "PPanGGOLiN  2.1.0",
        "release_id": 159135567,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/159135567",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/159135567",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-03-21T13:08:40Z",
        "date_published": "2024-03-21T13:28:35Z",
        "description": "## Bug Fixes\r\n- Resolved dead links in documentation (reported in issue #189, fixed in PR #190).\r\n- Addressed missing metadata separation when utilizing metadata in 'proksee' output (PR #188).\r\n- Added missing documentation for the `ppanggolin fasta` command (reported in issue #191, fixed in PR #192).\r\n- Fixed error occurring in `ppanggolin msa` command when using all genes (PR #196, reported in #198).\r\n\r\n**Full Changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.0.4...2.0.5\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.5",
        "name": "PPanGGOLiN 2.0.5",
        "release_id": 147680124,
        "tag": "2.0.5",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/147680124",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/147680124",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-03-07T15:37:30Z",
        "date_published": "2024-03-07T15:40:20Z",
        "description": "## Bug Fixes\r\n* Fixed division by zero issue when no module is predicted. ([Pull Request #183](https://github.com/labgem/PPanGGOLiN/pull/183))\r\n* Improved error messages during input file parsing for enhanced clarity, helping users in troubleshooting (see issue #185). Additionally, this update adds more flexibility when scanning the first line of input files to identify the GFF file format.  Details can be found in ([Pull Request #186](https://github.com/labgem/PPanGGOLiN/pull/186))\r\n\r\n**Full Changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.0.3...2.0.4",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.4",
        "name": "PPanGGOLiN 2.0.4",
        "release_id": 145254942,
        "tag": "2.0.4",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/145254942",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/145254942",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-02-22T09:39:40Z",
        "date_published": "2024-02-22T11:00:16Z",
        "description": "This release addresses several minor bugs identified in the previous version (v2.0.2) of PPanGGOLiN.\r\n\r\n## Bug fixes\r\n* **Fixes Pyrodigal meta mode and improves training:** Resolved an issue related to Pyrodigal meta mode and introduced enhancements in the training process. https://github.com/labgem/PPanGGOLiN/pull/177\r\n\r\n* **Fix `ppanggolin fasta` Command:** Addressed multiple issues associated with the `ppanggolin fasta` command (refer to [Issue #179](https://github.com/labgem/PPanGGOLiN/issues/179)). https://github.com/labgem/PPanGGOLiN/pull/180\r\n\r\n* **Handling cases where two Genes share the same stop:** Implemented a solution to manage scenarios where two genes share a common stop position, preventing errors in the gene addition process. https://github.com/labgem/PPanGGOLiN/pull/181\r\n\r\n* **Unique tmpdir name in clustering step:** The tmpdir name generated during the clustering step is now truly unique, preventing any potential conflicts. https://github.com/labgem/PPanGGOLiN/pull/178 \r\n\r\n* **Fix for HTML spot plot radio buttons:** Resolved an issue with radio buttons in the HTML spot plot that had become non-functional since bokeh v3. https://github.com/labgem/PPanGGOLiN/pull/176\r\n\r\n\r\n**Full Changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.0.2...2.0.3",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.3",
        "name": " PPanGGOLiN 2.0.3",
        "release_id": 143144756,
        "tag": "2.0.3",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/143144756",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/143144756",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-01-25T20:39:14Z",
        "date_published": "2024-01-29T08:38:28Z",
        "description": "## Bug fixes\r\n* Fix use of non-unique gene IDs when writing sequences in PR #173.\r\nThis PR fixes a bug where the 'all' command fails due to non-unique gene IDs in the input genome annotation files.  In this case, PPanGGOLiN now uses custom gene IDs to ensure their uniqueness. This PR should fix issue #172. \r\n\r\n* Minor documentation update in #170\r\n* Fix workflow that checks the bioconda recipe in https://github.com/labgem/PPanGGOLiN/pull/171\r\n\r\n\r\n**Full changelog**: https://github.com/labgem/PPanGGOLiN/compare/2.0.1...2.0.2",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.2",
        "name": "PPanGGOLiN 2.0.2",
        "release_id": 138873507,
        "tag": "2.0.2",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/138873507",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/138873507",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-01-18T12:31:47Z",
        "date_published": "2024-01-18T14:16:05Z",
        "description": "## Bug Fixes\r\n\r\nMade minor patches to ensure the compilation of bioconda recipe on macOS. Version 2.0.0 faced issues on macOS when compiling C code with Clang. This has been resolved by adding a flag in setup.py (#169).\r\n\r\n**Full Changelog**: [2.0.0 to 2.0.1](https://github.com/labgem/PPanGGOLiN/compare/2.0.0...2.0.1)",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.1",
        "name": "PPanGGOLiN 2.0.1",
        "release_id": 137568115,
        "tag": "2.0.1",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/137568115",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/137568115",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JeanMainguy",
          "type": "User"
        },
        "date_created": "2024-01-16T09:44:47Z",
        "date_published": "2024-01-15T15:51:24Z",
        "description": "\r\n## New commands\r\n\r\n\r\n\r\n* **projection**: to annotate external genomes using an existing pre-computed reference pangenome (#119, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/projection.html#projection)).\r\n* **rgp_cluster**: to cluster RGP based on their gene family content (#117, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/RGP/rgpAnalyses.html#rgp-clustering)).\r\n* **metadata**: add metadata linked to various pangenome elements using simple TSV files (#111, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/metadata.html#metadata-format)).\r\n\r\n* the **write** command is split in two commands (#140):\r\n    * **write_pangenome:** write outputs at the pangenome level (see [doc](https://ppanggolin.readthedocs.io/en/latest/user/PangenomeAnalyses/pangenomeAnalyses.html#pangenome-outputs))\r\n    * **write_genomes:** write genome outputs with pangenome annotation. Three formats are available for outputs: table, GFF and JSON Proksee (#139, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/writeGenomes.html)). \r\n\r\n\r\n* **utils**: a small side command to generate a default configuration file for any commands (#112, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/practicalInformation.html#configuration-file)).\r\n\r\n\r\n## New features\r\n\r\n* A new, improved **[documentation](https://ppanggolin.readthedocs.io)** hosted by readthedoc replacing the github wiki. \r\n* **GFF export** of genomes with pangenome annotation (#139, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/writeGenomes.html#gff-file)).\r\n* **JSON Map for [Proksee](https://proksee.ca/)** to visualize interactively each genome and their pangenome annotation (#139, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/writeGenomes.html#json-map-for-proksee-visualisation)).\r\n* **Configuration file** can now be used to set all or some parameters of PPanGGOLiN commands (#112, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/practicalInformation.html#configuration-file)).\r\n\r\n\r\n## Major change\r\n\r\n**BREAKING**: New structure of the pangenome file to make it much lighter and faster to read (#110). :warning: Break the compatibility with PPanGGOLiN v1 pangenome HDF-5 files.\r\n\r\n\r\n## Minor change\r\n\r\n* Replacing [Prodigal](https://github.com/hyattpd/Prodigal) by [pyrodigal](https://github.com/althonos/pyrodigal) for the annotation command (#138).\r\n* The **context** command has a window parameter to define the number of neighboring genes that are considered on each side of a gene of interest when searching for contexts (#137, see [doc](https://ppanggolin.readthedocs.io/en/latest/user/genomicContext.html)).\r\n* Replace all option keyword by synteny option keyword for `draw \u2013spots` to draw spots with different RGP syntenies. Now all will draw all pangenome spots (#129)\r\n\r\n\r\n## Bug Fixes\r\n\r\n* Writing out only the RGP and spot of the gene with `--projection` (#130). Please note that, in version 2, the `--projection` parameter in the `write` command has been renamed to `--table` and now belongs to the `write_genomes` command (check the [documentation](https://ppanggolin.readthedocs.io/en/latest/user/writeGenomes.html#write-genomes) of the write_genomes command for more details).\r\n* Make deterministic clustering (#116)\r\n\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/2.0.0",
        "name": "PPanGGOLiN  2.0.0",
        "release_id": 137086771,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/137086771",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/137086771",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2023-02-07T22:06:22Z",
        "date_published": "2023-02-19T17:31:19Z",
        "description": "A lot of the code was rewritten, but that should be relatively transparent for users\r\n\r\n# Bugfixes\r\n\r\n- Shell subpartitions are properly saved in the HDF5 file and used in the different figures\r\n- --meta option for `annotate` to annotate genomes using the metagenome mode of prodigal\r\n- --single_copy for `msa` to compute MSA using 'mostly single copy' persistent genes only\r\n- Cope with drawing more than 2000 identical spots in the same figure\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.2.105",
        "name": "PPanGGOLiN 1.2.105",
        "release_id": 92953786,
        "tag": "1.2.105",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.2.105",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/92953786",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/92953786",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.2.105"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jpjarnoux",
          "type": "User"
        },
        "date_created": "2022-02-28T12:54:59Z",
        "date_published": "2022-02-28T15:25:01Z",
        "description": "## New commands\r\n- `metrics` to compute a list of metrics about the pangenome. \r\n\r\n## New features\r\n- The projection option from `write` subcommand, can give now, information about RGPs, Spots and modules\r\n- With the new command `metrics` is now possible to compute the genomic \r\nfluidity of the pangenome.\r\n- With the new command `metrics` is now possible to get some more information\r\nabout the module. This information will be computed and shown as statistics on families and partitions of modules\r\n- All the metrics are saved in pangenome file and could be print with `info`\r\nsubcommand.\r\n\r\n## Bug fixes\r\n- fix crazy cluster assignment in clustering step\r\n- fix align when using a pangenome constructed from user-provided \r\nannotations with prokka-like identifiers\r\n- fix check information on few subcommand option to help user",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.2.74",
        "name": "PPanGGOLiN 1.2.74",
        "release_id": 60616677,
        "tag": "1.2.74",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.2.74",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/60616677",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/60616677",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.2.74"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2021-12-16T10:18:52Z",
        "date_published": "2021-12-22T10:28:24Z",
        "description": "- identifiers used in provided annotation files (gff or gbff, through --anno) will be used by default, unless they are not unique within the pangenome\r\n- additional column in `context` output indicating family partition\r\n- Always save the gene sequences when building a pangenome (which gives more flexibility when doing additional analysis with ppanggolin)\r\n\r\n# Bugfixes\r\n- fix a bug preventing you from doing a new clustering if partitions were not computed\r\n- fix genome sizes drawn with `draw --spots`",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.2.63",
        "name": "PPanGGOLiN 1.2.63",
        "release_id": 55813544,
        "tag": "1.2.63",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.2.63",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/55813544",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/55813544",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.2.63"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2021-11-29T16:39:32Z",
        "date_published": "2021-11-30T10:11:02Z",
        "description": "# New commands\r\n- `module` to predict conserved modules in variable parts of a pangenome\r\n- `context` to find which gene families are conserved in the same genomic context than sequences of interest\r\n- `all` to run all possible analysis with PPanGGOLiN.\r\n- `panmodule` to run the panModule workflow\r\n\r\n# Bug fixes\r\n- improved pseudogene reading and gff/gbff parsing\r\n- fixed gff parser to cope with bakta gff files (reported in #66)\r\n- fixed gexf formatting in the rare case of having '&' in the 'product' field of gene annotations (reported in #61)\r\n- fixed rare crash happening when a partition has only 1 gene family ( see #64 )\r\n- fixed compilation issue with gcc 10.* and above (reported in #69 )\r\n\r\n# Other:\r\n- Allow to compute K=2 if forced by the user in `partition` or `rarefaction`(by default, K is still picked between 3 and 20). (see #65 )\r\n- removed R, rpy2 and genoPlot-R dependencies (#47 shall never be a problem anymore)\r\n- added a new bokeh dependency\r\n- remove `spot --draw_hotspots` and related options. To realize the same thing, use `draw --spots` once the spots have been computed.\r\n- added a `--spots` option to `draw` to have interactive figures for spots of interest, replacing the former figures drawn with R.\r\n- `align` can compare a set of sequences of interest to a pangenome, and draw related elements, but cannot compare a genome to a pangenome anymore\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.2.46",
        "name": "PPanGGOLiN 1.2.46",
        "release_id": 54258316,
        "tag": "1.2.46",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.2.46",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/54258316",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/54258316",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.2.46"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2021-02-23T12:25:31Z",
        "date_published": "2021-02-24T09:36:11Z",
        "description": "Bug fixes:\r\n- cope with gff3 files without '##sequence-region' (such as Anvi'o 's and JGI's) (reported both in #48 and #56)\r\n- Do not create a new organism when reading fasta files for sequences when the organism was not in the previsouly read annotations (reported in #48) \r\n- For the 'msa' command, have the --phylo option actually working",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.1.136",
        "name": "PPanGGOLiN 1.1.136",
        "release_id": 38636649,
        "tag": "1.1.136",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.1.136",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/38636649",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/38636649",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.1.136"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2021-02-09T13:53:17Z",
        "date_published": "2021-02-15T08:50:41Z",
        "description": "* New 'fasta' command to write more easily fasta files of parts (or all ) of the pangenome (making #38 , along with other demands, possible)\r\n* New 'msa' command to compute MSA from specific families ( such as the core genome for additional phylogenetic analysis) (firstly suggested by #28 ). Will do so using only genes that are present in only one copy in each organism for each family.\r\n* Switching from lz4 to zstd for better compression for .h5 files (about 30% less disk space used with equivalent i/o speed)\r\n* More unit tests (Thanks to @sletort )\r\n\r\nBug Fixes\r\n* Cope with RAST-style gene identifiers (RAST gene identifiers were not used previously) (noticed in #44 )\r\n* Compute spots properly when the contig is circular (spots were not computed in circular contigs previously)(maybe fixes #43 ?) \r\n* Proper 'softcore' filter behavior when writing the gexf files (filter was too restrictive and did not include all softcore families)\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.1.131",
        "name": "PPanGGOLiN 1.1.131",
        "release_id": 37799267,
        "tag": "1.1.131",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.1.131",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/37799267",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/37799267",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.1.131"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2020-09-04T12:05:36Z",
        "date_published": "2020-09-04T14:18:19Z",
        "description": "- can customize the clustering mode of mmseqs2\r\n- add the possibility to read pseudogenes in the 'align' submodule\r\n- defrag with connected component clustering is now the default clustering strategy\r\n  - due to this, there is a new option --no-defrag to use the previous clustering strategy\r\n- improved option checking\r\n\r\nBug fixes:\r\n- cope with contigs having identical identifiers in different genomes ( see #34 )\r\n- can change the duplication margin in 'rgp' without crashing\r\n- other minor technical bugs in 'align'",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.1.96",
        "name": "PPanGGOLiN 1.1.96",
        "release_id": 30732008,
        "tag": "1.1.96",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.1.96",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/30732008",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/30732008",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.1.96"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2020-04-09T08:23:04Z",
        "date_published": "2020-05-14T12:01:40Z",
        "description": "- allows the extraction of spot borders\r\n- The gene_families.tsv now includes a third column with an 'F' if the gene is considered being a fragment of the gene family (--families_tsv option in the 'write' module)\r\n\r\nBug fixes : \r\n- fragment information is actually saved in the HDF5 file now (when using --defrag option with 'cluster', 'workflow' or 'panrgp')\r\n- cope with features not following the 'tag=value' when reading a gff3 file. They will now just be ignored. An error will be raised if a gff3 object does not have the required attributes. (see #29)\r\n- In case of an error due to file formatting when reading a cluster file (--clusters with 'cluster', 'workflow' or 'panrgp'), the error will now include the line number that caused the error (see #30)\r\n\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.1.85",
        "name": "PPanGGOLiN 1.1.85",
        "release_id": 26507999,
        "tag": "1.1.85",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.1.85",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/26507999",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/26507999",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.1.85"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2020-03-25T10:17:32Z",
        "date_published": "2020-03-25T10:24:08Z",
        "description": "- added the 'rgp' subcommand to predict regions of genomic plasticity\r\n- added the 'spot' subcommand to predict spots of insertion in the pangenome\r\n- added a few new output files in 'write' related to the two previous commands\r\n- the 'write' subcommand has been improved\r\n- added the 'panrgp' workflow. It will probably replace the main 'workflow' command in the future but for the next few versions, they will live side by side.\r\n- improved logging and added timing at the end of the 'panrgp' workflow.\r\n\r\npangenomes that were computed with previous versions should be compatible with the new commands.",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.1.72",
        "name": "PPanGGOLiN release 1.1.72",
        "release_id": 24842614,
        "tag": "1.1.72",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.1.72",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/24842614",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/24842614",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.1.72"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2019-12-01T13:28:28Z",
        "date_published": "2020-01-22T10:32:48Z",
        "description": "- Better handling of input files (will raise errors before doing anything if any name is duplicated or if any input file does not exist)\r\n- Added the '--defrag' option to use the [defragmentation](https://github.com/labgem/PPanGGOLiN/wiki/PPanGGOLiN---step-by-step-pangenome-analysis#defragmentation) pipeline in the 'workflow' command (rather than having to use each subcommand separately only to use this option)\r\n\r\nBugfixes :\r\n\r\n- --soft-core option in 'evolution' and in 'write' commands actually works now when you change it\r\n- Cope with .gbk/.gbff files with : \r\n   - duplicate 'locus_tag' fields within assemblies and between different assemblies (happens when genomes are downloaded from Genbank) (fix for #25 ) \r\n   - no contig identifier in VERSION field (happens with Prokka annotated genomes)\r\n\r\n ",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.0.13",
        "name": "PPanGGOLiN release 1.0.13",
        "release_id": 22079825,
        "tag": "1.0.13",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.0.13",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/22079825",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/22079825",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.0.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2019-11-14T17:13:17Z",
        "date_published": "2019-11-16T14:35:24Z",
        "description": "Bug fixes:\r\n- Deal with lowercase fasta (fix for #24  )\r\n- Better checking for input files (and hopefully clear errors) (fix for #22 )",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.0.1",
        "name": "PPanGGOLiN release 1.0.1",
        "release_id": 21527009,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/21527009",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/21527009",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "axbazin",
          "type": "User"
        },
        "date_created": "2019-11-07T10:52:59Z",
        "date_published": "2019-11-07T12:17:00Z",
        "description": "New features:\r\n- Can choose the number of partitions in the 'workflow' subcommand\r\n- Can customize identity and coverage thresholds in the 'cluster' subcommand\r\n- Added 4 new possible outputs : \r\n                  - proteic fasta for representative sequences of the gene families\r\n                  - nucleic fasta for representative sequences of the gene families\r\n                  - nucleic fasta of all the CDS\r\n                  - a list containing the gene family IDs and the gene IDs alike the .tsv file format of MMseqs2\r\n- Added unit tests for the different classes thank to @sletort \r\n\r\nbug fixes :\r\n- Do not take into account the Markov Random Field if its criteria reaches infinity (problem of large dimensionality in statistics, PPanGGOLiN should crash less on VERY fragmented datasets.)\r\n- now properly reading .gbff/.gbk files\r\n- Improved compatibility for the .gexf files",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/1.0.0",
        "name": "PPanGGOLiN release 1.0.0",
        "release_id": 21047691,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/21047691",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/21047691",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2019-09-25T15:06:33Z",
        "date_published": "2019-09-25T13:17:17Z",
        "description": "PPanGGOLiN can annotate and build gene families by itself for an easier use, or use annotated genomes and formerly built gene families directly.\r\nPPanGGOLiN can have more than 3 partition and can estimate the optimal number of partitions.\r\nPPanGGOLiN can run parts of its pipeline separatly for better parameter tuning.\r\nPPanGGOLiN can provide a number of output files that will illustrate or describe your pangenome.\r\nPPanGGOLiN uses a HDF5 file to store all the informations related to a pangenome, and reuse or re-generate any of those data for further analysis.\r\nPPanGGOLiN makes a better use of CPUs in a multithreaded run.\r\nPPanGGOLiN can project the pangenome's partitions on a given protein set.\r\n\r\nPPanGGOLiN is compatible with macOS\r\n\r\nand a lot of bugfixes. (and maybe some new)\r\n",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/v0.3.88",
        "name": "Pre release version",
        "release_id": 20244107,
        "tag": "v0.3.88",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/v0.3.88",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/20244107",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/20244107",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/v0.3.88"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2018-07-15T10:13:18Z",
        "date_published": "2018-07-15T10:17:10Z",
        "description": "1) fix a bug about the multithreading in the computation of the layout",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/0.1.4",
        "release_id": 11933972,
        "tag": "0.1.4",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11933972",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11933972",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2018-07-10T16:11:39Z",
        "date_published": "2018-07-10T16:21:15Z",
        "description": "1) fix an unexpected behavior when the dispersion around the centroid vector of the shell genome is above the one of the cloud genome\r\n2) fix a bug regarding the deletion of temporary files",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/0.1.3",
        "release_id": 11860475,
        "tag": "0.1.3",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11860475",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11860475",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2018-07-04T12:43:29Z",
        "date_published": "2018-07-04T12:47:25Z",
        "description": "fix a bug in the generation of projection plots",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/eb490c0",
        "name": "0.1.2",
        "release_id": 11777207,
        "tag": "eb490c0",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/eb490c0",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11777207",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11777207",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/eb490c0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2018-07-03T07:28:52Z",
        "date_published": "2018-07-03T07:31:16Z",
        "description": "Update documentation",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/44c2db5",
        "name": "0.1.1",
        "release_id": 11752486,
        "tag": "44c2db5",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/44c2db5",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11752486",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11752486",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/44c2db5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ggautreau",
          "type": "User"
        },
        "date_created": "2018-07-01T14:09:54Z",
        "date_published": "2018-07-01T14:07:09Z",
        "description": "First Release",
        "html_url": "https://github.com/labgem/PPanGGOLiN/releases/tag/7603f51",
        "name": "0.1.0",
        "release_id": 11728225,
        "tag": "7603f51",
        "tarball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/tarball/7603f51",
        "type": "Release",
        "url": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11728225",
        "value": "https://api.github.com/repos/labgem/PPanGGOLiN/releases/11728225",
        "zipball_url": "https://api.github.com/repos/labgem/PPanGGOLiN/zipball/7603f51"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run a complete pangenome analysis",
        "parent_header": [
          "Quick usage"
        ],
        "type": "Text_excerpt",
        "value": "A complete pangenomic analysis with PPanGGOLiN can be performed using the [`all`](https://ppanggolin.readthedocs.io/en/latest/user/QuickUsage/quickAnalyses.html#ppanggolin-complete-workflow-analyses) subcommand. This workflow runs a series of PPanGGOLiN commands to generate a **partitioned pangenome graph** with predicted **RGPs** (Regions of Genomic Plasticity), **spots** of insertion and **modules**.\n\n\nExecute the following command to run the `all` workflow:\n\n```bash\nppanggolin all --fasta GENOMES_FASTA_LIST\n```\n\nBy default, it uses parameters that we have found to be generally the best for working with species pangenomes. For further customization, you can adjust some parameters directly on the command line. Alternatively, you can use a configuration file to fine-tune the parameters of each subcommand used by the workflow (see [here](https://ppanggolin.readthedocs.io/en/latest/user/practicalInformation.html#configuration-file) for more details).\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input files",
        "parent_header": [
          "Quick usage",
          "Run a complete pangenome analysis"
        ],
        "type": "Text_excerpt",
        "value": "The file `GENOMES_FASTA_LIST` is a tsv-separated file with the following organization :\n\n1. The first column contains a unique genome name **(without space)**\n2. The second column contains the path to the associated FASTA file\n3. Circular contig identifiers are indicated in the following columns\n4. Each line represents a genome\n\nAn [example](testingDataset/genomes.fasta.list) with 50 *Chlamydia trachomatis* genomes can be found in the [testingDataset/](testingDataset/) directory.\n\n\nYou can also give **PPanGGOLiN** your own annotations using *.gff* or *.gbff/.gbk* files instead of *.fasta* files,\nsuch as the ones provided by [Bakta](https://github.com/oschwengers/bakta) with the following command :\n\n```bash\nppanggolin all --anno GENOMES_ANNOTATION_LIST\n```\n\nAnother [example](testingDataset/genomes.gbff.list) of such a file can be found in the [testingDataset/](testingDataset/) directory.\n\n\nA minimum of 5 genomes is generally required to perform a pangenomic analysis using the traditional *core genome*/*accessory genome* paradigm.\nIt is recommended to use at least 15 genomes with genomic variation (and not only SNPs) to obtain robust results with the **PPanGGOLiN** statistical approach.\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Results files",
        "parent_header": [
          "Quick usage",
          "Run a complete pangenome analysis"
        ],
        "type": "Text_excerpt",
        "value": "Upon executing the `all` command, multiple output files and graphics are generated  (more information [here](https://ppanggolin.readthedocs.io/en/latest/user/QuickUsage/quickAnalyses.html#usual-pangenome-outputs)). Most notably, it writes an HDF-5 file (`pangenome.h5`).\nThis file can be used as input to any of the subcommands to rerun parts of the analysis with different parameters,\nwrite and draw different representations of the pangenome, or perform additional analyses with **PPanGGOLiN**.\n\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:59:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 240
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Input files",
        "parent_header": [
          "Quick usage",
          "Run a complete pangenome analysis"
        ],
        "type": "Text_excerpt",
        "value": "The file `GENOMES_FASTA_LIST` is a tsv-separated file with the following organization :\n\n1. The first column contains a unique genome name **(without space)**\n2. The second column contains the path to the associated FASTA file\n3. Circular contig identifiers are indicated in the following columns\n4. Each line represents a genome\n\nAn [example](testingDataset/genomes.fasta.list) with 50 *Chlamydia trachomatis* genomes can be found in the [testingDataset/](testingDataset/) directory.\n\n\nYou can also give **PPanGGOLiN** your own annotations using *.gff* or *.gbff/.gbk* files instead of *.fasta* files,\nsuch as the ones provided by [Bakta](https://github.com/oschwengers/bakta) with the following command :\n\n```bash\nppanggolin all --anno GENOMES_ANNOTATION_LIST\n```\n\nAnother [example](testingDataset/genomes.gbff.list) of such a file can be found in the [testingDataset/](testingDataset/) directory.\n\n\nA minimum of 5 genomes is generally required to perform a pangenomic analysis using the traditional *core genome*/*accessory genome* paradigm.\nIt is recommended to use at least 15 genomes with genomic variation (and not only SNPs) to obtain robust results with the **PPanGGOLiN** statistical approach.\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Results files",
        "parent_header": [
          "Quick usage",
          "Run a complete pangenome analysis"
        ],
        "type": "Text_excerpt",
        "value": "Upon executing the `all` command, multiple output files and graphics are generated  (more information [here](https://ppanggolin.readthedocs.io/en/latest/user/QuickUsage/quickAnalyses.html#usual-pangenome-outputs)). Most notably, it writes an HDF-5 file (`pangenome.h5`).\nThis file can be used as input to any of the subcommands to rerun parts of the analysis with different parameters,\nwrite and draw different representations of the pangenome, or perform additional analyses with **PPanGGOLiN**.\n\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Other Workflow Commands",
        "parent_header": [
          "Quick usage"
        ],
        "type": "Text_excerpt",
        "value": "PPanGGOLiN offers additional workflow commands that perform more specialized functions:\n\n- [**`workflow`**](https://ppanggolin.readthedocs.io/en/latest/user/PangenomeAnalyses/pangenomeAnalyses.html#workflow): Generates a partitioned pangenome graph.\n- [**`panrgp`**](https://ppanggolin.readthedocs.io/en/latest/user/RGP/rgpAnalyses.html#panrgp): Combine the `workflow` command and the prediction of RGPs (Regions of Genomic Plasticity) and insertion spots on top of the partitioned pangenome graph.\n- [**`panmodule`**](https://ppanggolin.readthedocs.io/en/latest/user/Modules/moduleAnalyses.html#the-panmodule-workflow): Combine the `workflow` command and the prediction of Modules on top of the partitioned pangenome graph.\n\nThese commands utilize the same type of file input as the `all` command.\n\n"
      },
      "source": "https://raw.githubusercontent.com/labgem/PPanGGOLiN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}