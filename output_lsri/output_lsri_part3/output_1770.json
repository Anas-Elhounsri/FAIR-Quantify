{
  "application_domain": [
    {
      "confidence": 17.65,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "BioProfiling.jl"
        ],
        "type": "Text_excerpt",
        "value": "This package was created by [Loan Vulliard](http://vulliard.loan) @ [Menche lab](https://menchelab.com/).  \nBioProfiling.jl relies on several amazing open-source Julia packages, listed in the requirement file (see [*Project.toml*](Project.toml)).  \nIf you use this tool in your research work, please cite [the article](https://doi.org/10.1093/bioinformatics/btab853) in which we detail how this tool is implemented and can be used:\n\n    BioProfiling.jl: profiling biological perturbations with high-content imaging in single cells and heterogeneous populations\n    Loan Vulliard, Joel Hancock, Anton Kamnev, Christopher W Fell, Joana Ferreira da Silva, Joanna I Loizou, Vanja Nagy, Lo\u00efc Dupr\u00e9, J\u00f6rg Menche\n    Bioinformatics 2022; 38: 1692\u20139. DOI: https://doi.org/10.1093/bioinformatics/btab853\n\nWe also thank the reviewers whose suggestions contributed to improve the [example analyses](https://github.com/menchelab/BioProfilingNotebooks), their biological interpretation as well as the package in itself."
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\nproject a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the [project maintainer](lvulliard@cemm.oeaw.ac.at).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org),\nversion 2.1, available at\n<https://www.contributor-covenant.org/version/2/1/code_of_conduct.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/menchelab/BioProfiling.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute to BioProfiling.jl\n\nWe gladly welcome all contributions to BioProfiling.jl!  \nThis document presents the most constructive and ways to participate in this project.\n\n## Code of Conduct\n\nPlease follow our [code of conduct](CODE_OF_CONDUCT.md) when participating or contributing to this repository.\n\n## Use of the Issues tab\n\nThe project uses the [repository's issues](https://github.com/menchelab/BioProfiling.jl/issues) to track bugs and ideas for novel features and improvements. Feel free to participate, whether or not you have the time and expertise to **come up with a solution yourself**! Please do your best to make your issue clear, reproducible, and unique. In particular, do not forget the issue archive as it may have been addressed already.  \nThis is also the perfect place to discuss your contribution ideas with the community before starting implementing them. This can save you and others time, by making sure the changes are relevant for the community and will be compatible with the rest of the codebase.  \nThe most pressing issues are listed in the [Projects tab](https://github.com/menchelab/BioProfiling.jl/projects) so that they are adressed in the next release. Some issues might also be tagged as \"good first issues\" if they are expected to be relatively straightforward to implement and do not require an advanced understanding of the project's source code.  \nFinally, **if you are seeking help** on how to use BioProfiling.jl and did not find an answer in [the documentation](https://menchelab.github.io/BioProfiling.jl/dev/) or in [the example notebooks](https://github.com/menchelab/BioProfilingNotebooks), you are also welcome to create a new issue to ask your question!\n\n## Code contributions\n\nFor all code contributions, please [create a pull request](https://github.com/menchelab/BioProfiling.jl/pulls), either to the main branch for bug fixes and performance improvements or to a development branch, according to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).  \nTo do so, **fork the project, create and checkout a branch, add and commit your changes, test your code locally, push your new branch and open a pull request**. Other contributors and maintainers will be able to review your changes and may ask you to make additional modifications so that your contribution fits nicely in the project, and eventually merge your code to the master or development branches. Thanks for even considering going through this process!  \nTo ensure the code is functional and stays compatible with new versions of its dependencies, a [battery of tests](test/runtests.jl) is implemented. For all new features, such tests need to be added in the `test` folder before the PR can be merged. These tests will be automatically run via GitHub Actions when creating a pull request to the master branch. You can also test them locally as follows:\n\n```julia\nimport Pkg\nPkg.activate(\"./\")\nPkg.resolve()\nPkg.test()\n```\n\nAll tests should pass for the supported versions of Julia and the package's dependencies.\n\n\n## Development environment\n\nBioProfiling.jl is intended to be compatible with a large set of environments as detailed in [Project.toml](Project.toml). If you need to setup a development environment, an easy solution is to **edit and run code directly in your browser thanks to GitHub codespaces**. Some instructions are available in [our documentation](https://menchelab.github.io/BioProfiling.jl/dev/).  \nAnother option is to start from the [latest **Docker image** designed to run the example notebooks](https://hub.docker.com/r/koalive/bioprofilingnotebooks), which comes with all dependencies installed. To avoid inteferences between the pre-installed version of BioProfiling.jl and your local version of the source code, you can remove the version installed in the container with the following lines:\n\n```julia\nimport Pkg\nPkg.rm(\"BioProfiling\")\n```\n\nAs mentioned in the [Code contributions section](#code-contributions), you can test your changes locally but you do not need to worry about breaking features as we use continuous integration to validate changes to the master branch.\n\n## Contributors acknowledgment\n\nWe really appreciate all contributions which make BioProfiling.jl more useful for the community! The package is [open source, provided for free and under the MIT license](LICENSE) and we offer our profound gratitude to the contributors, who will also be acknowledged in [the Credits section on the project's README](README.md#credits)."
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribute",
        "parent_header": [
          "BioProfiling.jl"
        ],
        "type": "Text_excerpt",
        "value": "We welcome all sorts of contributions to this project! See our [contribution guidelines](CONTRIBUTING.md) and our [code of conduct](CODE_OF_CONDUCT.md) for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-13T15:15:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-13T15:58:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A flexible Julia toolkit for high-dimensional cellular profiles"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "BioProfiling.jl"
        ],
        "type": "Text_excerpt",
        "value": "This package allows to perform robust multidimensional profiling in 'Julia' and comes with helper functions, especially designed for high-content imaging-based morphological profiling.\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/menchelab/BioProfiling.jl/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/menchelab/BioProfiling.jl/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "menchelab/BioProfiling.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioProfiling.jl"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation from Julia's package repository (easiest option)",
        "parent_header": [
          "BioProfiling.jl",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can simply add this package from the Julia repository like any other package:\n\n```julia\nimport Pkg\nPkg.add(\"BioProfiling\")\nusing BioProfiling\n```\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Local installation",
        "parent_header": [
          "BioProfiling.jl",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Alternatively, you may use the following to load this package after cloning this repository:\n\n```julia\nimport Pkg\nPkg.activate(<pathToThisFolder>)\nusing BioProfiling\nPkg.activate()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation from GitHub",
        "parent_header": [
          "BioProfiling.jl",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Use the following to install the package:\n\n```julia\nimport Pkg\nPkg.add(Pkg.PackageSpec(url = \"https://github.com/menchelab/BioProfiling.jl.git\"))\n```\n\nYou can then import the package normally:\n\n```julia\nusing BioProfiling\n```\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/menchelab/BioProfiling.jl/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "high-content-screening, julia, morphological-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2020 Loan Vulliard <lvulliard@cemm.oeaw.ac.at>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioProfiling.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "menchelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 71522,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2022-11-30T14:58:21Z",
        "date_published": "2022-11-30T14:58:23Z",
        "description": "## BioProfiling v1.1.1\n\n[Diff since v1.1.0](https://github.com/menchelab/BioProfiling.jl/compare/v1.1.0...v1.1.1)\n\n\n\n**Merged pull requests:**\n- v1.1.1 (#43) (@koalive)",
        "html_url": "https://github.com/menchelab/BioProfiling.jl/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 84587900,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/84587900",
        "value": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/84587900",
        "zipball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-09-23T18:38:01Z",
        "date_published": "2021-09-23T18:38:03Z",
        "description": "## BioProfiling v1.1.0\n\n[Diff since v1.0.0](https://github.com/menchelab/BioProfiling.jl/compare/v1.0.0...v1.1.0)\n\n\n**Closed issues:**\n- Handle NA in decorrelate (#9)\n- Combine freqtables and filters (#11)\n- Add MissingFilter (#18)\n- Automate release tags (#20)\n- Intermittent error in `getdata` testset (#25)\n- Accept floats for item centers in visual diagnostic methods (#27)\n- Cannot apply data transformation when some columns are not floats (#30)\n- Make R seed optional (used in MCD computation) (#32)\n- Ease identification of discriminative features (#33)\n- Diagnostic function - Most Variable Features (#34)\n- Diagnostic function - Characteristic Features (#35)\n- Diagnostic function - Most correlates features (#36)\n\n**Merged pull requests:**\n- V1.1.0 (#37) (@koalive)",
        "html_url": "https://github.com/menchelab/BioProfiling.jl/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 50157449,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/50157449",
        "value": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/50157449",
        "zipball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2021-05-01T16:24:53Z",
        "date_published": "2021-05-01T16:24:55Z",
        "description": "## BioProfiling v1.0.0\n\n\n\n**Closed issues:**\n- Make RMD(a,b) = RMD(b,a) (#1)\n- Rename CamelCase methods (#3)\n- Boolean subset of Selectors (#4)\n- Add methods to apply helper functions to Experiment (#7)\n- Handle subdirectories when saving diagnostic images (#10)\n- AbstractReducer copy constructors (#12)\n- Add statistical significance scoring  (#13)\n- Start documentation (#14)\n- Remove random numbers from unit tests (#15)\n- Fix DataFrames requirement (#19)\n- Add parameter to limit the number of diagnostic images saved to disk (#23)\n\n**Merged pull requests:**\n- Docs (#22) (@koalive)\n- Renaming (#24) (@koalive)",
        "html_url": "https://github.com/menchelab/BioProfiling.jl/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 42312323,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/42312323",
        "value": "https://api.github.com/repos/menchelab/BioProfiling.jl/releases/42312323",
        "zipball_url": "https://api.github.com/repos/menchelab/BioProfiling.jl/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable state and is being actively developed.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/menchelab/BioProfiling.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:14:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ]
}