{
  "application_domain": [
    {
      "confidence": 21.67,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Compound Heterozygous Variant Identification Pipeline (CompoundHetVIP)"
        ],
        "type": "Text_excerpt",
        "value": "1. \tS. Purcell, C. Chang, PLINK 2.0 (www.cog-genomics.org/plink/2.0/).\n2. \tC. C. Chang, C. C. Chow, L. C. Tellier, S. Vattikuti, S. M. Purcell, J. J. Lee, Second-generation PLINK: rising to the challenge of larger and richer datasets. Gigascience. 4, 7 (2015).\n3. \tPicard Tools, (available at http://broadinstitute.github.io/picard/).\n4. \tR. Poplin, V. Ruano-Rubio, M. A. DePristo, T. J. Fennell, M. O. Carneiro, G. A. Van der Auwera, D. E. Kling, L. D. Gauthier, A. Levy-Moonshine, D. Roazen, K. Shakir, J. Thibault, S. Chandran, C. Whelan, M. Lek, S. Gabriel, M. J. Daly, B. Neale, D. G. MacArthur, E. Banks, Scaling accurate genetic variant discovery to tens of thousands of samples. bioRxiv (2017), p. 201178.\n5. \tH. Li, A statistical framework for SNP calling, mutation discovery, association mapping and population genetical parameter estimation from sequencing data. Bioinformatics. 27, 2987\u20132993 (2011).\n6. \tO. Delaneau, B. Howie, A. J. Cox, J.-F. Zagury, J. Marchini, Haplotype estimation using sequencing reads. Am. J. Hum. Genet. 93, 687\u2013696 (2013).\n7. \tS. R. Browning, B. L. Browning, Rapid and accurate haplotype phasing and missing-data inference for whole-genome association studies by use of localized haplotype clustering. Am. J. Hum. Genet. 81, 1084\u20131097 (2007).\n8. \tP.-R. Loh, P. Danecek, P. F. Palamara, C. Fuchsberger, Y. A Reshef, H. K Finucane, S. Schoenherr, L. Forer, S. McCarthy, G. R. Abecasis, R. Durbin, A. L Price, Reference-based phasing using the Haplotype Reference Consortium panel. Nat. Genet. 48, 1443\u20131448 (2016).\n9. \tA. Tan, G. R. Abecasis, H. M. Kang, Unified representation of genetic variants. Bioinformatics. 31, 2202\u20132204 (2015).\n10. P. Cingolani, A. Platts, L. L. Wang, M. Coon, T. Nguyen, L. Wang, S. J. Land, X. Lu, D. M. Ruden, A program for annotating and predicting the effects of single nucleotide polymorphisms, SnpEff: SNPs in the genome of Drosophila melanogaster strain w1118; iso-2; iso-3. Fly . 6, 80\u201392 (2012).\n11. U. Paila, B. A. Chapman, R. Kirchner, A. R. Quinlan, GEMINI: integrative exploration of genetic variation and genome annotations. PLoS Comput. Biol. 9, e1003153 (2013).\n12. Y. Itan, L. Shang, B. Boisson, E. Patin, A. Bolze, M. Moncada-V\u00e9lez, E. Scott, M. J. Ciancanelli, F. G. Lafaille, J. G. Markle, R. Martinez-Barricarte, S. J. de Jong, X.-F. Kong, P. Nitschke, A. Belkadi, J. Bustamante, A. Puel, S. Boisson-Dupuis, P. D. Stenson, J. G. Gleeson, D. N. Cooper, L. Quintana-Murci, J.-M. Claverie, S.-Y. Zhang, L. Abel, J.-L. Casanova, The human gene damage index as a gene-level approach to prioritizing exome variants. Proc. Natl. Acad. Sci. U. S. A. 112, 13615\u201313620 (2015).\n13. T. Kamphans, P. Sabri, N. Zhu, V. Heinrich, S. Mundlos, P. N. Robinson, D. Parkhomchuk, P. M. Krawitz, Filtering for compound heterozygous sequence variants in non-consanguineous pedigrees. PLoS One. 8, e70151 (2013).\n14. Y. Choi, A. P. Chan, E. Kirkness, A. Telenti, N. J. Schork, Comparison of phasing strategies for whole human genomes. PLoS Genet. 14, e1007308 (2018).\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dmiller903/CompoundHetVIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Compound Heterozygous Variant Identification Pipeline (CompoundHetVIP)"
        ],
        "type": "Text_excerpt",
        "value": "If you encounter an issue, please add to the [issue page](https://github.com/dmiller903/CompoundHetVIP/issues)\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-06T23:01:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-11T10:20:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A pipeline for the identification of Compound Heterozygous Variants"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9682502454179251,
      "result": {
        "original_header": "Background",
        "type": "Text_excerpt",
        "value": "A compound heterozygous variant occurs when a person inherits a variant from one parent within a specific gene and also inherits another variant from the other parent at a different position within the same gene (13). The effect of compound heterozygotic inheritance results in two recessive alleles that may cause disease. To detect these types of variants it is necessary to differentiate between paternally and maternally derived nucleotides. If sequencing has already taken place, computational algorithms can be used to help determine which nucleotides were inherited from each parent through a process termed \u201cphasing\u201d (14).  \nPhasing requires specific file types which may vary depending on phasing software. Many phasing programs require that input files have been aligned to a specific reference genome, do not contain multiallelic positions, are free of repeat positions, and that each chromosome is phased separately. Figuring out how to prepare files for phasing can be challenging as passing files from program to program may invoke unforeseen incompatibilities. Also, installing specific programs can be challenging because many programs require various dependencies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9912181929318769,
      "result": {
        "original_header": "Our Methodology",
        "type": "Text_excerpt",
        "value": "We have designed our Compound Heterozygous Variant Identification Pipeline (CompoundHetVIP) to overcome many of the time-consuming challenges that researchers may face when trying to identify compound heterozygous variants. By encapsulating existing tools in reproducible scripts and executing these scripts within a single Docker image, other researchers will be able to examine our methodology in detail and apply it to their data. Using a Docker image helps control what software versions are used, what system libraries are used, and creates a cohesive computational environment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dmiller903/CompoundHetVIP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dmiller903/CompoundHetVIP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dmiller903/CompoundHetVIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/CompoundHetVIP_Dockerfile/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/CompoundHetVIP_Dockerfile/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dmiller903/CompoundHetVIP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 dmiller903\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CompoundHetVIP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dmiller903"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 106102,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 4197,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dmiller903",
          "type": "User"
        },
        "date_created": "2021-01-28T17:49:07Z",
        "date_published": "2021-01-28T23:24:02Z",
        "description": "Source code after F1000 reviewer recommendations.",
        "html_url": "https://github.com/dmiller903/CompoundHetVIP/releases/tag/v1.1",
        "name": "CompoundHetVIP - Release after Revisions for F1000",
        "release_id": 37057454,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/releases/37057454",
        "value": "https://api.github.com/repos/dmiller903/CompoundHetVIP/releases/37057454",
        "zipball_url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dmiller903",
          "type": "User"
        },
        "date_created": "2020-09-09T17:45:19Z",
        "date_published": "2020-09-09T17:49:43Z",
        "description": "Source code at the time of submission to F1000",
        "html_url": "https://github.com/dmiller903/CompoundHetVIP/releases/tag/v1.0",
        "name": "CompoundHetVIP Initial Release",
        "release_id": 30997190,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/releases/30997190",
        "value": "https://api.github.com/repos/dmiller903/CompoundHetVIP/releases/30997190",
        "zipball_url": "https://api.github.com/repos/dmiller903/CompoundHetVIP/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:31:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "Compound Heterozygous Variant Identification Pipeline (CompoundHetVIP)"
        ],
        "type": "Text_excerpt",
        "value": "CompoundHetVIP is designed to be used with gVCF or VCF files. Please see [CompoundHetVIP_example.pdf](https://github.com/dmiller903/CompoundHetVIP/blob/master/CompoundHetVIP_example.pdf) for example code and a description of each step of the pipeline. Here is a brief overview of each step:\n\n1. Keep variant-only sites of VCF or gVCF files\n\n2. Combine each trio into a single file\n\n3. Liftover trio files and individual files from GRCh38 to GRCh37\n\n4. Remove unplaced sites, multiallelic sites, and duplicate sites from lifted files\n\n5. Separate VCF file into chromosome files, then generate plink files for each chromosome file\n\n6. Phase each of the trios with a haplotype reference panel using SHAPEIT2, Beagle, or Eagle2\n\n7. Revert REF/ALT to be congruent with reference panel\n\n8. Concat and merge phased trio chromosome files into one VCF file\n\n9. Trim and normalize VCF file\n\n10. Annotate with snpEff\n\n11. Load VCF as GEMINI database\n\n12. Query for *CH* variants (also supports de novo and homozygous alternate variant identification)\n\n13. Add [Gene Damage Index](http://lab.rockefeller.edu/casanova/GDI) Scores and Gene lengths to files\n\nThe Docker image, [compound-het-vip](https://hub.docker.com/r/dmill903/compound-het-vip), contains all the tools needed to identify compound heterozygous variants using VCF or gVCF files. Tools available and used in the container include: *Plink2* (1, 2), *Picard* (3), *GATK4* (4), *SAMtools* (5), *BCFtools* (5), *SHAPEIT2* (6), *Beagle* (7), *Eagle2* (8), *vt* (9), *SnpEff* (10), *GEMINI* (11), Gene Damage Index (12), and any necessary dependencies.\n"
      },
      "source": "https://raw.githubusercontent.com/dmiller903/CompoundHetVIP/master/README.md",
      "technique": "header_analysis"
    }
  ]
}