{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Funding acknowledgment",
        "parent_header": [
          "ReCiter"
        ],
        "type": "Text_excerpt",
        "value": "Various components in the ReCiter suite of applications has been funded by:\n- The National Institutes of Health National Center for Advancing Translational Sciences through grant number UL1TR002384 \n- National Library of Medicine, National Institutes of Health under a cooperative agreement with Region 7\n- Lyrasis through its Catalyst fund\n\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.9440064825661982,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at publications@med.cornell.edu. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wcmc-its/ReCiter"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change. \n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n4. You may merge the Pull Request in once you have the sign-off of two other developers, or if you \n   do not have permission to do that, you may request the second reviewer to merge it for you.\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [INSERT EMAIL ADDRESS]. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-28T16:30:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-25T17:08:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ReCiter: an enterprise open source author disambiguation system for academic institutions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.952347133571249,
      "result": {
        "original_header": "Purpose",
        "type": "Text_excerpt",
        "value": "ReCiter is a highly accurate system for guessing which publications in PubMed a given person has authored. ReCiter includes a Java application, a DynamoDB-hosted database, and a set of RESTful microservices which collectively allow institutions to maintain accurate and up-to-date author publication lists for thousands of people. This software is optimized for disambiguating authorship in PubMed and, optionally, Scopus. \nReCiter accurately identifies articles, including those at previous affiliations, by a given person. It does this by leveraging institutionally maintained identity data (e.g., departments, relationships, email addresses, year of degree, etc.) With the more complete and efficient searches that result from combining these types of data, you can save time and your institution can be more productive. If you run ReCiter daily, you can ensure that the desired users are the first to learn when a new publication has appeared in PubMed.  \nReCiter is fast. It uses an advanced multi-threading strategy known as a [work stealing pool](https://en.wikipedia.org/wiki/Work_stealing) to make up to 10 retrieval requests at a time. \nReCiter is freely available and open source under the [Apache 2.0 license](https://opensource.org/licenses/Apache-2.0).   \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9594145860820096,
      "result": {
        "original_header": "Technological stack",
        "type": "Text_excerpt",
        "value": "Key technologies include:\n- ReCiter stores data about researchers and publications in **DynamoDB**, which can be hosted on Amazon AWS or installed locally.\n- Its main computation logic is written in **Java**.\n- It employs the **Spring Framework**, a Java-based application framework designed to manage RESTful web services and server requests.\n- ReCiter uses **Swagger**, a toolset that provides a user interface with helpful cues for how to interact with the application's RESTful APIs.  \n\nYou may choose to run ReCiter on either:\n- **A server** - ReCiter will run on Linux, Mac OS X, and Windows versions 7 and higher. A minimum of 4GB of RAM is required; 16GB of RAM are recommended. An Internet connection is required to download article data from scholarly databases.\n- **A local machine** - ReCiter's APIs may be run in a browser on any modern machine. The ReCiter server must be accessible to the local machine via a local area network or internet connection.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9554967830449004,
      "result": {
        "original_header": "Related code repositories",
        "type": "Text_excerpt",
        "value": "- **[PubMed Retrieval Tool](https://github.com/wcmc-its/ReCiter-PubMed-Retrieval-Tool)**\n- **[Scopus Retrieval Tool](https://github.com/wcmc-its/ReCiter-Scopus-Retrieval-Tool)** (optional)\n- **Data models:**\n  - [ReCiter-Identity-Model](https://github.com/wcmc-its/ReCiter-Identity-Model)\n  - [ReCiter-Scopus-Model](https://github.com/wcmc-its/ReCiter-Scopus-Model)\n  - [ReCiter-Article-Model](https://github.com/wcmc-its/ReCiter-Article-Model)\n  - [ReCiter-Dynamodb-Model](https://github.com/wcmc-its/ReCiter-Dynamodb-Model)\n  - [ReCiter-PubMed-Model](https://github.com/wcmc-its/ReCiter-PubMed-Model) \nOptionally, users can install:\n- [ReCiter Publication Manager](https://github.com/wcmc-its/ReCiter-Publication-Manager) - a powerful user interface / web application that streamlines the process of updating and reporting on the publications of an institution's scholars\n- [ReCiterDB](https://github.com/wcmc-its/ReCiterDB) - the back end data store for Publication Manager; in addition to the schema and stored procedures, this repository contains a set of scripts that retrieve data from ReCiter and imports them into this MySQL database \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9982609707940934,
      "result": {
        "original_header": "Configuration",
        "type": "Text_excerpt",
        "value": "- **[PubMed API key](https://github.com/wcmc-its/ReCiter-PubMed-Retrieval-Tool/blob/master/README.md#configuring-the-api-key)** - Recommended for performance reasons and to prevent and limit the likelihood National Library of Medicine will throttle you, but otherwise not necessary.  \n- **[Scopus API key and instoken](https://github.com/wcmc-its/ReCiter-Scopus-Retrieval-Tool/blob/master/README.md#configuring-api-key)** - Use of Scopus is optional. It can improve overall accuracy by several percent; Scopus is helpful because it has disambiguated organizational affiliation and verbose first name, especially for earlier articles. Use of the Scopus API is available only for Scopus subscribers. \n- **[Security](https://github.com/wcmc-its/ReCiter/wiki/Implementing-security)** - Each of ReCiter's APIs can be configured to restrict access to only those requests which provide the correct API key.\n- **[Application.properties](https://github.com/wcmc-its/ReCiter/wiki/Configuring-application.properties)** - All remaining configurations are stored here. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9807127696303407,
      "result": {
        "original_header": "How ReCiter works",
        "type": "Text_excerpt",
        "value": "The wiki article, [How ReCiter works](https://github.com/wcmc-its/ReCiter/wiki/How-ReCiter-works), contains a more detailed description on the application works. \n \n - Populate identity information for target users\n - Optional: populate Gold Standard of already accepted or rejected publications; note that this system currently does not offer a user interface for collecting this feedback\n - Lookup candidate articles in PubMed and, optionally, Scopus\n - Compute suggestions\n - Retrieve suggestions\n  \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9923497210352147,
      "result": {
        "original_header": "Using the APIs",
        "type": "Text_excerpt",
        "value": "\n|Category |Function |Relevant API(s) |\n| ---- | ------------- | ------------- |\n|Manage identity of target users | Add or update identity data for target user(s) from Identity table | [`/reciter/identity/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciteridentity) or [`/reciter/save/identities/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#recitersaveidentities) |\n|Manage identity of target users | Retrieve identity data for target user(s) from Identity table | [`/reciter/find/identity/by/uid/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterfindidentitybyuid) or [`/reciter/find/identity/by/uids/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterfindidentitybyuids) or [`/reciter/find/all/identity`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterfindallidentity) |\n|Gold standard | Update the GoldStandard table (includes both accepted and rejected PMIDs) for single user | [`/reciter/goldstandard/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs##recitergoldstandard-post) |\n|Gold standard | Update the GoldStandard table (includes both accepted and rejected PMIDs) for mutliple users | [`/reciter/goldstandard/`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs##recitergoldstandard-put) |\n|Gold standard | Read from the GoldStandard table (includes both accepted and rejected PMIDs) for target user(s) | [`/reciter/goldstandard/{uid}`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#recitergoldstandarduid)  |\n| Look up candidate articles | Trigger look up of candidate articles for a given user | [`/reciter/retrieve/articles/by/uid`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterretrievearticlesbyuid)  |\n| Retrieve suggested articles  | Read suggested articles from the Analysis table for target user | [`/reciter/article-retrieval/by/uid`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterarticle-retrievalbyuid)   | \n| Retrieve suggested articles | Read suggested articles and see supporting evidence from the Analysis table for target user(s) | [`/reciter/feature-generator/by/uid`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterfeature-generatorbyuid) or [`/reciter/feature-generator/by/group`](https://github.com/wcmc-its/ReCiter/wiki/Using-the-APIs#reciterfeature-generatorbygroup)  |  \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8451339340533267,
      "result": {
        "original_header": "Future work",
        "type": "Text_excerpt",
        "value": "Both the issue queue and the [Roadmap](https://github.com/wcmc-its/ReCiter/wiki/Roadmap) include some areas where we want to improve ReCiter. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.878279130036222,
      "result": {
        "original_header": "Follow up",
        "type": "Text_excerpt",
        "value": "We use GitHub issues to track bugs and feature requests. If you find a bug, please feel free to open an issue. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/wcmc-its/ReCiter/wiki"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wcmc-its/reciter/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wcmc-its/ReCiter"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ReCiter"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/reciter/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/ReCiter/master/files/ReCiter-FeatureGenerator.gif"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/ReCiter/master/files/ArchitecturalDiagram-NEW.png"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/ReCiter/master/files/plosone.png"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ReCiter"
        ],
        "type": "Text_excerpt",
        "value": "ReCiter can be installed to run locally or in AWS via a cloud formation template. A required dependency is the [PubMed Retrieval Tool](https://github.com/wcmc-its/ReCiter-PubMed-Retrieval-Tool/). The [Scopus Retrieval Tool](https://github.com/wcmc-its/ReCiter-Scopus-Retrieval-Tool/) is optional, but can improve overall accuracy by several percent. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Local",
        "parent_header": [
          "ReCiter",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone the repository to a local folder using `git clone https://github.com/wcmc-its/ReCiter.git`\n2. Go to the folder where the repository has been cloned and navigate to src/main/resources/application.properties and change port and log location accordingly\n- change `aws.DynamoDb.local=false` to `aws.DynamoDb.local=true`\n- update location of DynamoDB database, e.g., `aws.DynamoDb.local.dbpath=/Users/Paul/Documents/ReCiter/dynamodb_local_latest`\n- By default application security is turned on. If you wish to turn it off you must change the flag to false from `spring.security.enabled=true` to `spring.security.enabled=false`\n- If you have the security as true you must include the following environment variables - \n```\nexport ADMIN_API_KEY=<api-key>\nexport CONSUMER_API_KEY=<api-key>\n```\n- If you do not have scopus subscription you should mark this value to false. Change `use.scopus.articles=true` to `use.scopus.articles=false`.\n3. Enter ports for server and services in command line. Note that the Scopus service is optional. You must have [Pubmed Service](https://github.com/wcmc-its/ReCiter-PubMed-Retrieval-Tool/) and optionally [Scopus Service](https://github.com/wcmc-its/ReCiter-Scopus-Retrieval-Tool/) setup before this step. Enter appropriate hostname and the port numbers.\n```\nexport SERVER_PORT=5000\nexport SCOPUS_SERVICE=http://localhost:5001\nexport PUBMED_SERVICE=http://localhost:5002\n```\n4. Run `mvn spring-boot:run`. You can add additional options if you want like max and min java memory with `export MAVEN_OPTS=-Xmx1024m`\n5. Go to `http://localhost:<port-number>/swagger-ui/index.html` or `http://localhost:<port-number>/swagger-ui/` (shorthand swagger url)  to test and run any API.\n\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Amazon AWS",
        "parent_header": [
          "ReCiter",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The [ReCiter CDK](\nhttps://github.com/wcmc-its/ReCiter-CDK) allows to install the entire infrastructure for ReCiter and its components and its highly configurable. There you will find instruction to install ReCiter and its components.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999996101369867,
      "result": {
        "original_header": "Technological stack",
        "type": "Text_excerpt",
        "value": "\nYou may choose to run ReCiter on either:\n- **A server** - ReCiter will run on Linux, Mac OS X, and Windows versions 7 and higher. A minimum of 4GB of RAM is required; 16GB of RAM are recommended. An Internet connection is required to download article data from scholarly databases.\n- **A local machine** - ReCiter's APIs may be run in a browser on any modern machine. The ReCiter server must be accessible to the local machine via a local area network or internet connection.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9977267284142546,
      "result": {
        "original_header": "Related code repositories",
        "type": "Text_excerpt",
        "value": "The ReCiter application depends on the following separate GitHub-hosted repositories: \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8971433715874798,
      "result": {
        "original_header": "Future work",
        "type": "Text_excerpt",
        "value": "Both the issue queue and the [Roadmap](https://github.com/wcmc-its/ReCiter/wiki/Roadmap) include some areas where we want to improve ReCiter. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951952966665363,
      "result": {
        "original_header": "Follow up",
        "type": "Text_excerpt",
        "value": "We use GitHub issues to track bugs and feature requests. If you find a bug, please feel free to open an issue. \n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "algorithm, aws, awscodebuild, awscodepipeline, clustering, dynamodb, elasticbeanstalk, entity-resolution, java, machine-learning-algorithms, maven, pubmed, reciter, s3, scopus, spring-boot"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/ReCiter/master/files/howreciterworks.png"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ReCiter"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "wcmc-its"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 871852,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 11864,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 440,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Procfile",
        "size": 33,
        "type": "Programming_language",
        "value": "Procfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mrj4001",
          "type": "User"
        },
        "date_created": "2024-04-04T02:40:31Z",
        "date_published": "2024-04-04T02:57:32Z",
        "description": "Added ORCID ID to Reciter Identity Model https://github.com/wcmc-its/ReCiter-Identity-Model/pull/7\r\nFixed issue https://github.com/wcmc-its/ReCiter/issues/527",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.5",
        "name": "ReCiter 2.1.5",
        "release_id": 149690059,
        "tag": "2.1.5",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/149690059",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/149690059",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mrj4001",
          "type": "User"
        },
        "date_created": "2023-08-31T18:08:52Z",
        "date_published": "2023-09-01T11:22:24Z",
        "description": "Outputs the \"Equal Contribution\" attribute (equalContrib) at the author level. This attribute when set to \"yes\" is an indication that any given authors who have that designation should share credit. Our intention is to use this to define co-senior and co-first author when it comes to publication reporting.",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.4",
        "name": "ReCiter 2.1.4",
        "release_id": 119585574,
        "tag": "2.1.4",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/119585574",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/119585574",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2022-04-06T19:08:44Z",
        "date_published": "2022-04-06T19:23:44Z",
        "description": "- ReCiter container images are now publicly available in AWS ECR Public repository. Use [ReCiter Public Container](https://gallery.ecr.aws/wcmc-its/reciter). To pull down the image using docker use `docker pull public.ecr.aws/wcmc-its/reciter:v2.1.3`\r\n- [fix bug in identity](https://github.com/wcmc-its/ReCiter/commit/5616b75f2948e5b9ab220a4b2055d927820c05f6)\r\n- [fix authorname sanitize utils test](https://github.com/wcmc-its/ReCiter/commit/08ad3c736ff068a1c395355a31e07550e5aabeb3)\r\n- [avoid illegalstateexception for edge case](https://github.com/wcmc-its/ReCiter/commit/590703b2392b70f3328921e97d02b3a5f0e37b98)\r\n- [add test case for group view for filter](https://github.com/wcmc-its/ReCiter/commit/6799726af55ec0a21b3b846050296eeedb32d6e4)\r\n- [make group api post request with uids as body](https://github.com/wcmc-its/ReCiter/commit/faedf6ee79c9c5692871c64da63ff4eeb68f116e)\r\n- [fix commentCorrections pmid null check](https://github.com/wcmc-its/ReCiter/commit/03bdca9731f2b1b252f69dfeb33b7e6a03842573)",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.3",
        "name": "ReCiter 2.1.3",
        "release_id": 63791115,
        "tag": "2.1.3",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/63791115",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/63791115",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2021-12-15T20:37:33Z",
        "date_published": "2021-12-15T20:43:03Z",
        "description": "- #485 Fix log4j vulnerability\r\n- #486 Fix squiggly filters\r\n- #484 Bug fixes for feature generator by group. Feature generator by group api now accepts list of unique IDs as parameter. When this parameter is supplied all other filtering parameter is ignored. There is a new property in `application.properties` [property](https://github.com/wcmc-its/ReCiter/blob/02f0476bf704249e58cce3c824e92e444ba0139e/src/main/resources/application.properties#L401) to set the max allowed limit of uids to make sure the performance of the api is not impacted. \r\n- Suppress antlr runtime warnings",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.2",
        "name": "ReCiter 2.1.2",
        "release_id": 55400843,
        "tag": "2.1.2",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/55400843",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/55400843",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2021-08-20T15:55:19Z",
        "date_published": "2021-08-23T13:57:19Z",
        "description": "This release includes a bunch of bug fixes and enhancements especially improvements to nameScoring Strategy\r\n\r\n- #474 Name scoring strategy bug fix for mismatched names\r\n- #473 Addition of more meshMajor Terms\r\n- #455 Capture lookup_type in esearchresults\r\n- #370 Fix nameScoring bugs\r\n- #322 Output email even if it's not a match\r\n- #454 Candidate article count is wrong\r\n- #444 Update Feature Generator API so it returns count of pending publications for a scholar",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.1",
        "name": "ReCiter 2.1.1",
        "release_id": 48283437,
        "tag": "2.1.1",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/48283437",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/48283437",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2021-02-04T17:26:30Z",
        "date_published": "2021-02-04T17:29:49Z",
        "description": "- Esearchresults table now include lookupType. This allows us to more reliably identify the count of candidate articles for the articleCountStrategy in cases where the ONLY_NEWLY_ADDED_PUBLICATIONS is used. #455\r\n- For articleCountStrategy, candidate article count now relies on distinct count of all retrieved publications except those from the gold standard retrieval strategy. #454\r\n- Time-based lookups against PubMed were only looking for articles based on date added to Entrez. This caused some publications to be missed. Now we're searching for that or date added to PubMed. #450\r\n- Update Swagger from 2.0 \u2192 3.0. #447\r\n- Update Java 8 \u2192 11. #446\r\n- Environment variable JAVA_OPTS was added to docker image to specify java heap size https://github.com/wcmc-its/ReCiter/blob/a3d5d4665e8692853ca69f2db0caba0eb56f557d/kubernetes/k8-deployment.yaml#L81-L82 and also to Dockerfile https://github.com/wcmc-its/ReCiter/blob/a3d5d4665e8692853ca69f2db0caba0eb56f557d/Dockerfile#L8\r\n- Output the top keywords and their counts for accepted publications. This will be used in Publication Manager. #442\r\n- Output count of pubs where userAssertion = NULL as attribute enhancement. This will be used in Publication Manager. #399\r\n- ReCiter Identity data model was updated to v2.0.8 https://github.com/wcmc-its/ReCiter-Identity-Model/issues/3 to include primaryOrganizationalUnit, primaryInstitution, startDate, and endDate\r\n- ReCiter Article data model was updated to v2.0.16. This includes adding orcid identifier, affiliations and emails for authors, countOfPendingPubs, topArticleKeywords\r\n- Fixed error running DynamoDb locally in Docker. #452\r\n- Add healthcheck path for application use `<protocol>://<host>:<port>/reciter/ping`\r\n- Upgrade to all dependencies to use latest stable releases\r\n- AWS Codebuild images were also updated to use Java 11 and latest release\r\n- Docker image was updated to use `adoptopenjdk/openjdk11:alpine-jre` for security",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.1.0",
        "name": "ReCiter 2.1.0",
        "release_id": 37367191,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/37367191",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/37367191",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paulalbert1",
          "type": "User"
        },
        "date_created": "2020-07-21T18:38:38Z",
        "date_published": "2020-07-21T19:24:53Z",
        "description": "- Create a Multi-User Feature Generator API, which outputs pending articles for groups of scholars. This can be used in Publication Manager to quickly review pending publications for large groups of people. #330\r\n- Feature Generator API now outputs:\r\n  - ORCID identifiers associated with authors #336\r\n  - an identifier associated with each cluster #365\r\n  - MeSH terms #402\r\n- More powerful use of the year when scholars received their degree. #391\r\n- Identity API returns list of scholars via S3-based cache, significantly improving performance of Publication Manager. #400\r\n- Support for Kubernetes, an open-source system for automating deployment, scaling, and management of containerized application\r\n- Bug fix: Analysis objects are in both DynamoDB Analysis table and s3, and should only be in s3 #392\r\n- Bug fix: incremental lookup\r\n- Updated timeout settings\r\n- Add performance metrics for s3 caching\r\n- Updated article and identity models in Maven Central",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/2.0.0",
        "name": "ReCiter 2.0.0",
        "release_id": 28759000,
        "tag": "2.0.0",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/28759000",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/28759000",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paulalbert1",
          "type": "User"
        },
        "date_created": "2019-08-28T20:55:35Z",
        "date_published": "2019-09-01T14:35:23Z",
        "description": "- Evidence weights in application.properties are now optimized according to a support vector machine analysis\r\n- Created a userFeedback service for feedback from Publications Manager\r\n- Added an API controller in Swagger for ReCiter Publications Manager \r\n- Fixed a bug in common affiliation strategy\r\n- Bucket names in S3 are dynamically created\r\n- Fixed affiliation count of non-target authors. [#361](https://github.com/wcmc-its/ReCiter/issues/361)",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/1.2",
        "name": "ReCiter 1.2",
        "release_id": 19679730,
        "tag": "1.2",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/19679730",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/19679730",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2019-06-12T20:25:24Z",
        "date_published": "2019-06-12T20:51:12Z",
        "description": "Release notes for ReCiter 1.1\r\n- Use name to infer gender of targetAuthor and identity. Downweight cases where there's a difference in inferred gender. https://github.com/wcmc-its/ReCiter/issues/357\r\n- Tracks a person\u2019s original name as recorded in a source system and outputs it in the feature generator as opposed to using the sanitized/standardized version of that name. https://github.com/wcmc-its/ReCiter/issues/317\r\n- Tracks an organization\u2019s original name as recorded in a source system and outputs it in the feature generator as opposed to using the standardized version and/or synonym of that name. https://github.com/wcmc-its/ReCiter/issues/356\r\n- Single matching departmental affiliation, no matter the synonyms, should only count once. https://github.com/wcmc-its/ReCiter/issues/326\r\n- Update articleCountScoringStrategy so it better accounts for retrieval counts in strict mode. This way people with more common names get lower scores for articleCountScoringStrategy - even though their looks up are done in strict mode. https://github.com/wcmc-its/ReCiter/issues/278\r\n- Penalize relationship scores in cases for each non-match. This will address cases where there are a lot of co-authors and just by sheer chance some of them have a known relationship match. https://github.com/wcmc-its/ReCiter/issues/341\r\n- Added ScienceMetrix journalDepartmentCategory scores. This covers the 250+ most common organizational affiliations in PubMed and their scores for all 180 subfields. https://github.com/wcmc-its/ReCiter/pull/352\r\n- The number of organizational unit synonyms has been expanded. In many cases, it includes commons translations, e.g., Cirugia (Surgery). This expands the coverage of journalDepartmentCategory scoring. https://github.com/wcmc-its/ReCiter/pull/354\r\n- journalDepartmentCategory scoring should pick most favorable match. This is useful in cases where a person has multiple organizational affiliations, one of which scores highly. https://github.com/wcmc-its/ReCiter/issues/355\r\n- Improved method for identifying target author. It turns out author\u2019s email is often not assigned to the person behind that email. https://github.com/wcmc-its/ReCiter/issues/185",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/v1.1",
        "name": "ReCiter 1.1",
        "release_id": 17954654,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/17954654",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/17954654",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sarbajitdutta",
          "type": "User"
        },
        "date_created": "2019-03-07T16:40:22Z",
        "date_published": "2019-04-02T21:22:59Z",
        "description": "ReCiter is a highly accurate system for guessing which publications in PubMed a given person has authored. ReCiter includes a Java application, a DynamoDB-hosted database, and a set of RESTful microservices which collectively allow institutions to maintain accurate and up-to-date author publication lists for thousands of people. This software is optimized for disambiguating authorship in PubMed and, optionally, Scopus.\r\n\r\nReCiter accurately identifies articles, including those at previous affiliations, by a given person. It does this by leveraging institutionally maintained identity data (e.g., departments, relationships, email addresses, year of degree, etc.) With the more complete and efficient searches that result from combining these types of data, you can save time and your institution can be more productive. If you run ReCiter daily, you can ensure that the desired users are the first to learn when a new publication has appeared in PubMed.\r\n\r\nReCiter is fast. It uses an advanced multi-threading strategy known as a work stealing pool to make up to 10 retrieval requests at a time.\r\n\r\nReCiter is freely available and open source under the Apache 2.0 license.",
        "html_url": "https://github.com/wcmc-its/ReCiter/releases/tag/v1.0",
        "name": "ReCiter 1.0",
        "release_id": 14931763,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/wcmc-its/ReCiter/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/wcmc-its/ReCiter/releases/14931763",
        "value": "https://api.github.com/repos/wcmc-its/ReCiter/releases/14931763",
        "zipball_url": "https://api.github.com/repos/wcmc-its/ReCiter/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "ReCiter",
          "Technical"
        ],
        "type": "Text_excerpt",
        "value": "- Java 11\n- Latest version of Maven. To install Maven navigate to the directory where ReCiter will be installed, execute `brew install maven` and then `mvn clean install`\n\nIf you want to use Java 8 then update `<java.version>1.8</java.version>` in [pom.xml](https://github.com/wcmc-its/ReCiter/blob/a3d5d4665e8692853ca69f2db0caba0eb56f557d/pom.xml#L49)\n\nIt is not necessary to install ReCiter in order to use the API.\n"
      },
      "source": "https://raw.githubusercontent.com/wcmc-its/reciter/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:06:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 45
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}