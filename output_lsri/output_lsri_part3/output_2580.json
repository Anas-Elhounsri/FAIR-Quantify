{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Liuxg16/Riboexp"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-25T08:51:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-03T17:35:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8832131595919173,
      "result": {
        "original_header": "Riboexp",
        "type": "Text_excerpt",
        "value": "<img src=\"data/riboexp.PNG\" width=\"600\" align=\"center\"> \nThis is the implementation of the paper entitled \"Rationalizing Translation Elongation by Reinforcement Learning\"\nHere we provide servaral functions as follows:\n1. Reproduce some results in our paper (cross-validation performance)\n2. Train a neural network model to predict ribosome densities across a set of transcripts\n3. Obtain the predicted ribosome densities for a particular gene.\n4. Train a neural network model by a custom dataset\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8415915846828109,
      "result": {
        "original_header": "5. To train a Riboexp with only codons and nucleotides as input",
        "type": "Text_excerpt",
        "value": "Users are able to use `--no_structure` to train/analyze the data where the structure information is unavailable.\nCommand:\n```\npython runRiboexp.py --data_path ../data/yeast --no_structure\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9156803798237327,
      "result": {
        "original_header": "6. To derive the ribosome densities for a particular gene from a trained model",
        "type": "Text_excerpt",
        "value": "Note: This function only support the model that is trained without rna structure features.\nCommand and example:\n```\npython runRiboexp.py --data_path ../data/yeast --mode 3 --load {trainedmodel}  --fold 0 --no_structure --gene_path {genefile}\nExample:\npython runRiboexp.py --data_path ../data/yeast --mode 3 --fold 0 --no_structure --gene_path ../data/gene.test.txt --load ../data/trained_models/model_yeast_useStructure_False_nhids_512_drate_0.4_mark_mark_lam_0.0083-Jul28.09h34/best-model.pkl\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Liuxg16/Riboexp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Liuxg16/Riboexp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Liuxg16/Riboexp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Riboexp"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/data/riboexp.PNG"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. To test Riboexp in the setting of cross-validation",
        "type": "Text_excerpt",
        "value": "Command:\n```\npython runRiboexp.py --data_path data/yeast --mode 2 --load0 {trainedmodel of fold 0} --load1 {trained model of fold1} --load2 {trainedmodel of fold2}\n```\nExample:\n```\npython runRiboexp.py --data_path ../data/yeast  --mode 2 --load0 ../data/trained_models/model_yeast_useStructure_True_fold_0_nhids_512_drate_0.4_mark_mark_lam_0.0083-Jul28.11h52/best-model.pkl  --load1 ../data/trained_models/model_yeast_useStructure_True_fold_1_nhids_512_drate_0.4_mark_mark_lam_0.0083-Jul28.13h32/best-model.pkl --load2  ../data/trained_models/model_yeast_useStructure_True_fold_2_nhids_512_drate_0.4_mark_mark_lam_0.0083-Jul28.15h03/best-model.pkl\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. To train Riboexp in the setting of cross-validation",
        "type": "Text_excerpt",
        "value": "Command:\n```\npython runRiboexp.py --data_path ../data/yeast\n```\nWhen users do not set the fold number, the algorithm will train three models for the three-fold cross-validation and save them respectively.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing your dataset",
        "parent_header": [
          "7. To train a Riboexp by custom dataset"
        ],
        "type": "Text_excerpt",
        "value": "1. Create a new folder in ./data/, e.g. human.\n2. Divide your data into three fold, each of them containing three file that stores training, validation, and testing data, respectively.\n3. Put the name, codons, and corresponding footprint counts of genes on different lines in the file. Please refer to ./data/fold0/ for more details\n4. Place the three-fold data in the human folder, named \"fold0\",  \"fold1\", and \"fold2\", respectively.\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999987898957169,
      "result": {
        "original_header": "Building the environment",
        "type": "Text_excerpt",
        "value": "```\npip install -r requirement.txt\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8326045676730973,
      "result": {
        "original_header": "Command",
        "type": "Text_excerpt",
        "value": "```\npython runRiboexp.py --data_path {your dataset} --no_structure\n```\nIf you have any questions, please feel free to contact me :)\nEmail: liuxg16@mails.tsinghua.edu.cn \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8375791280194766,
      "result": {
        "original_header": "Riboexp",
        "type": "Text_excerpt",
        "value": "<img src=\"data/riboexp.PNG\" width=\"600\" align=\"center\"> \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8566768218904116,
      "result": {
        "original_header": "1. To test Riboexp using a model that has been already trained on a particular fold.",
        "type": "Text_excerpt",
        "value": "Command:\n```\npython runRiboexp.py --data_path ../data/yeast --mode 1 --fold {foldnumber} --load {filename}\n```\nUsers need to choose the foldnumber (0/1/2) and the path of the trained model. For example,\nBASH2*\nThe results are quickly obtained, which is consistent with our computational test.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.949213872412982,
      "result": {
        "original_header": "6. To derive the ribosome densities for a particular gene from a trained model",
        "type": "Text_excerpt",
        "value": "Note: This function only support the model that is trained without rna structure features.\nCommand and example:\n```\npython runRiboexp.py --data_path ../data/yeast --mode 3 --load {trainedmodel}  --fold 0 --no_structure --gene_path {genefile}\nExample:\npython runRiboexp.py --data_path ../data/yeast --mode 3 --fold 0 --no_structure --gene_path ../data/gene.test.txt --load ../data/trained_models/model_yeast_useStructure_False_nhids_512_drate_0.4_mark_mark_lam_0.0083-Jul28.09h34/best-model.pkl\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Liuxg16/Riboexp/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Riboexp"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Liuxg16"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 61711,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "type": "Text_excerpt",
        "value": "Riboexp is written in Python version 2.7, and requires the following libraries:\n```\ncuda     8.0\npython   2.7\npytorch  0.3.1\nnumpy    1.14.3\nscipy    1.0.1\n```"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/Riboexp/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:25:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}