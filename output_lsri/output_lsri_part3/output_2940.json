{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raphael-group/netNMF-sc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-06T19:39:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-01T12:37:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "netNMF-sc: A network regularization algorithm for dimensionality reduction and imputation of single-cell expression data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9792194495493434,
      "result": {
        "original_header": "netNMF-sc",
        "type": "Text_excerpt",
        "value": "netNMF-sc: Leveraging gene-gene interactions for imputation and dimensionality reduction in single-cell expression analysis. \n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8831137977147929,
      "result": {
        "original_header": "Instalation",
        "type": "Text_excerpt",
        "value": "Or by cloning this repository\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/raphael-group/netNMF-sc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/netNMFsc_example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/netNMFsc_example.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raphael-group/netNMF-sc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "raphael-group/netNMF-sc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "netNMF-sc"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.989847233649458,
      "result": {
        "original_header": "netNMF-sc",
        "type": "Text_excerpt",
        "value": "Preprint is available at https://www.biorxiv.org/content/10.1101/544346v1\n \n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999335610125377,
      "result": {
        "original_header": "Instalation",
        "type": "Text_excerpt",
        "value": "netNMF-sc is installable through pip:\npip3 install netNMFsc \n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/raphael-group/netNMF-sc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2018, \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "netNMF-sc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "raphael-group"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 47686,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 46705,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running netNMF-sc",
        "parent_header": [
          "netNMF-sc"
        ],
        "type": "Text_excerpt",
        "value": "See netNMFsc_example.ipynb for a jupyter notebook tutorial for importing and running netNMF-sc. netNMF-sc can also be run from the command line using the following command:\n\npython3 -m netNMFsc.run_netNMF-sc -x <path_to_10X_directory> --network netNMFsc/refdata/coexpedia_network_human.mtx (or a network of your choice) --netgenes netNMFsc/refdata/coexpedia_gene_names_human.npy --dimensions <integer> --max_iters <integer> --direc <directory_to_save_output> --method GD\n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line arguments",
        "parent_header": [
          "netNMF-sc",
          "Running netNMF-sc"
        ],
        "type": "Text_excerpt",
        "value": "    -x,--tenXdir, data is from 10X. Only required to provide directory containing matrix.mtx, genes.tsv, barcodes.tsv files or .hdf5 file\n    -g,--gene_names, path to file containing gene names (.npy or .tsv)\n    -net,--network, path to network file (.npy or .mtx)\n    -netgenes,--netgenes, path to file containing gene names for network (.npy or .tsv)\n    -n,--normalize, normalize data? 1 = yes, 0 = no,default=1\n    -sparse,--sparsity, sparsity for network,default=0.75\n    -mi,--max_iters, max iters for netNMF,default=10000)\n    -t,--tol, tolerence for netNMF,default=1e-2\n    -d,--direc, directory to save files\n    -D,--dimensions, number of latent dimension, default = 10\n    -a,--alpha, lambda parameter from NMF,default = 10\n"
      },
      "source": "https://raw.githubusercontent.com/raphael-group/netNMF-sc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:57:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}