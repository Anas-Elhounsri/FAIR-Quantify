{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Rashedul/CRIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "Rashedul Islam, PhD (rashedul.gen@gmail.com)\n\n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-02T05:00:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-08T19:48:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Construction of IHGV sequences from RNA-seq"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9734155714527448,
      "result": {
        "original_header": "CRIS: Complete Reconstruction of Immunoglobulin V-D-J Sequences from RNA-seq",
        "type": "Text_excerpt",
        "value": "CRIS reconstructs the immunoglobulin heavy chain variable region *IGHV* gene, enumerates single nucleotide variants and predicts hypermutation status from RNA-seq datasets. Both ribodepleted and polyA selected RNA-seq datasets are appropriate with a minimum of 25M sequence reads per sample. CRIS has been validated against clinical PCR-Sanger based hypermutation classification in the context of Chronic Lymphocytic Leukemia.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8023735580048659,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\n```\n# expected mutational status for test run \n\n- IGHV gene: IGHV3-74\n- Percent identity: 94.6\n\n# output files\n\n- SRR1814049_test.bam.IgBLAST_out.txt\nContains the percent identity and alignment between Ig-transcript and top germline IGHV gene hits.\n\n- SRR1814049_test.bam.ig-transcripts.sortedbyTPM.txt \nContains Ig-transcript sequence IDs and sorted by expression (TPM) values.\n\n- SRR1814049_test.bam.ig-transcripts.sortedbyTPM.fasta \nContains Ig-transcript fasta sequences sorted by expression (TPM) values. \n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Rashedul/CRIS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Rashedul/CRIS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rashedul/CRIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rashedul/CRIS/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rashedul/CRIS/main/CRIS_docker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rashedul/CRIS/main/CRIS.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1.0,
      "result": {
        "original_header": "CRIS in <a href=\"https://docs.docker.com/\">Docker</a> container",
        "type": "Text_excerpt",
        "value": "Build and run docker image. \n```\n# download\ngit clone https://github.com/Rashedul/CRIS\ncd CRIS/ # run CRIS from this directory \n\n# build docker image\nsudo docker build --tag cris:v1 . \n\n# to confirm install please run CRIS using the supplied test bam file (SRR1814049_test.bam) that has been aligned to hg38 (GRCh38) build and coordinate-sorted using SAMBAMBA sort. As mentioned 4 threads and 16G RAM is allocated by CRIS by default.\nsudo docker run --name cris_analysis -v /fullPath/SRR1814049_test.bam:/cris/SRR1814049_test.bam -t cris:v1 bash CRIS_docker.sh SRR1814049_test.bam threads=4 memory=16G \n\n# copy output files to local path\nsudo docker cp cris_analysis:cris/ .\n\n# export docker container to local path, output is stored within cris directory.\nsudo docker export cris_analysis > cris_analysis_container.tar\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "CRIS in bash",
        "type": "Text_excerpt",
        "value": "```\n# download\ngit clone https://github.com/Rashedul/CRIS\ncd CRIS/ # run CRIS from this directory \n\n# installing dependencies using conda\nconda create --name cris_env --file environment.txt\nconda activate cris_env \n\n# usage\nbash CRIS.sh -h\n\nCRIS: Complete Reconstruction of Immunoglobulin V-D-J Sequences from RNA-seq.\n\nUsage: CRIS.sh -inbam <input_bam_file> -outdir <output_directory> -threads <num_threads> -memory <max_memory_assembly>\n                        <input_bam_file>: (required) bam file must be aligned to hg38 genome build, coordinate-sorted and indexed\n                        <output_directory>: (optional) full path of output directory or output files will be written in current directory\n                        <num_threads>: (optional) number of threads; default 4\n                        <max_memory_assembly>: (optional) maximum memory in G (gigabyte) allowed for assembly; default 16G\n\n# test run from CRIS directory. bam file must be aligned to the hg38 genome build, coordinate-sorted and indexed.\nbash CRIS.sh -inbam SRR1814049_test.bam \nor,\nbash CRIS.sh -inbam /fullPath/SRR1814049_test.bam -outdir /fullPath/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8445257582978756,
      "result": {
        "original_header": "CRIS in bash",
        "type": "Text_excerpt",
        "value": "```\n# download\ngit clone https://github.com/Rashedul/CRIS\ncd CRIS/ # run CRIS from this directory \n\n# installing dependencies using conda\nconda create --name cris_env --file environment.txt\nconda activate cris_env \n\n# usage\nbash CRIS.sh -h\n\nCRIS: Complete Reconstruction of Immunoglobulin V-D-J Sequences from RNA-seq.\n\nUsage: CRIS.sh -inbam <input_bam_file> -outdir <output_directory> -threads <num_threads> -memory <max_memory_assembly>\n                        <input_bam_file>: (required) bam file must be aligned to hg38 genome build, coordinate-sorted and indexed\n                        <output_directory>: (optional) full path of output directory or output files will be written in current directory\n                        <num_threads>: (optional) number of threads; default 4\n                        <max_memory_assembly>: (optional) maximum memory in G (gigabyte) allowed for assembly; default 16G\n\n# test run from CRIS directory. bam file must be aligned to the hg38 genome build, coordinate-sorted and indexed.\nbash CRIS.sh -inbam SRR1814049_test.bam \nor,\nbash CRIS.sh -inbam /fullPath/SRR1814049_test.bam -outdir /fullPath/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Rashedul/CRIS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, cll, gene, genomics, ighv, ighv-status, ighv3, ihgv-transcripts, immunoglobulin, rna-seq, sequencing, somatic-hypermutations, vdj, vdj-recombination"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Rashedul Islam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the [MIT license](https://github.com/Rashedul/CRIS/blob/main/LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRIS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Rashedul"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9645,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 3867,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 624,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 590,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "* A minimum of 16GB RAM and 4 threads are required to run CRIS \n* bam file must be aligned to hg38 (GRCh38) genome build using [BWA](http://bio-bwa.sourceforge.net/), coordinate-sorted and indexed\n"
      },
      "source": "https://raw.githubusercontent.com/Rashedul/CRIS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:27:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}