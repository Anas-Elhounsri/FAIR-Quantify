{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": "Arnie Kas for the work done on the original MultAln.pm.\n\nAndy Siegel for statistics consultations.\n\nThanks so much to Warren Gish for his invaluable assistance \nand consultation on his ABBlast program suite.\n\nAlkes Price and Pavel Pevzner for assistance with RepeatScout\nand hosting my multi-sequence version of RepeatScout.\n\nShujun Ou, and Ning Jiang for discussions and assistance with \nusing LTR_retreiver.\n\nThis work was supported by the NIH ( R44 HG02244-02), \n( RO1 HG002939 ), ( U24 HG010136 ), and the Institute \nfor Systems Biology.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Dfam-consortium/RepeatModeler"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-04-05T18:56:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T08:20:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "De-Novo Repeat Discovery Tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.995667110104657,
      "result": {
        "original_header": "RepeatModeler",
        "type": "Text_excerpt",
        "value": "RepeatModeler is a de novo transposable element (TE) family identification and \nmodeling package. At the heart of RepeatModeler are three de-novo repeat finding\nprograms ( RECON, RepeatScout and LtrHarvest/Ltr_retriever ) which employ \ncomplementary computational methods for identifying repeat element boundaries\nand family relationships from sequence data. \nRepeatModeler assists in automating the runs of the various algorithms\ngiven a genomic database, clustering redundant results, refining and \nclassifying the families and producing a high quality library of\nTE families suitable for use with RepeatMasker and ultimately for submission\nto the Dfam database ( http://dfam.org ).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9497945552091555,
      "result": {
        "original_header": "Caveats",
        "type": "Text_excerpt",
        "value": "  + RMBlast uses the NCBI stat reporting mechanism to report\n    usage statistics back over the net.  If RepeatModeler is \n    taking in inordinate amount of time to complete \n    ( > 1 week on a multi-core machine ) or you do not have\n    an outside network connection to the machine, you should\n    disable this reporting feature by setting the environment\n    variable BLAST_USAGE_REPORT=false or by creating a .ncbirc\n    file in the users home directory with the stanza: \n  + RepeatModeler is designed to run on assemblies rather\n    than genome reads. At the start of a run a quick analysis\n    is performed on the input database to ascertain the \n    assembly N50.  A histogram of contig size is also displayed. \n  + It is not recommended that a genome be run in a batched fashion\n    nor the results of multiple RepeatModeler runs on the same \n    genome be naively combined.  Doing so will generate a combined\n    library that is largely redundant.  The -genomeSampleSizeMax \n    parameter is provided for the purpose of increasing the amount\n    of the genome sampled while avoiding rediscovery of families. \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9694163106203129,
      "result": {
        "original_header": "RepeatModeler Statistics",
        "type": "Text_excerpt",
        "value": "Benchmarks and statistics for runs of RepeatModeler on several sample\ngenomes. \nPrevious Versions\n```\nRepeatModeler 1.0.3 ( RECON + RepeatScout ):\n\n            Genome DB    Sample***   Run Time*   Models   Models       % Sample\nGenome      Size (bp)    Size (bp)   (hh:mm)     Built    Classified   Masked**\n----------  -----------  ----------  ----------  -------  -----------  --------\nMarmoset    3.0 Bbp      228 Mbp      55:37        582      564         36.4    \nZebrafinch  1.2 Bbp      222 Mbp      66:29        178       75          8.6    \n\n\n  *  Analysis run on a 4 processor P4, 2.4Ghz, 3GB RAM, machine\n     running Red Hat Linux.\n\n  ** Includes simple repeats and low complexity DNA. Results\n     obtained with RepeatMasker open-3.2.5, WUBlast and\n     the -lib option.\n\n  *** Sample size does not include 40 Mbp used in the RepeatScout analysis.  \n      This 40 Mbp is randomly chosen and may overlap 0-100% of the \n      sample used in the RECON analysis.\n\n\nRepeatModeler 1.0.2 ( RECON + RepeatScout ):\n\n            Genome DB    Sample***   Run Time*   Models   Models       % Sample\nGenome      Size (bp)    Size (bp)   (hh:mm)     Built    Classified   Masked**\n----------  -----------  ----------  ----------  -------  -----------  --------\nHuman HG18     3.1 Bbp      238 Mbp   46:36        614      611         35.66\nPlatypus       1.9 Bbp      220 Mbp   76:02        540      457         \nZebrafinch     1.3 Bbp      220 Mbp   63:57        233      104          9.41\nSea Urchin     867 Mbp      220 Mbp   40:03       1830      360         33.85\ndiatom       32,930,227  32,930,227    4:41        128       35          2.86\nRabbit       11,770,949  11,770,949    3:14         83       72         31.30\n\n  *  Analysis run on a 4 processor P4, 2.4Ghz, 3GB RAM, machine\n     running Red Hat Linux.\n\n  ** Includes simple repeats and low complexity DNA. Results\n     obtained with RepeatMasker open-3.1.9, WUBlast and\n     the -lib option.\n\n  *** Sample size does not include 40 Mbp used in the RepeatScout analysis.  \n      This 40 Mbp is randomly chosen and may overlap 0-100% of the \n      sample used in the RECON analysis.\n\n\n\nRepeatModeler 1.0.0 ( RECON ):\n\n            Genome DB    Sample      Run Time*   Models   Models       % Sample\nGenome      Size (bp)    Size (bp)   (hh:mm)     Built    Classified   Masked**\n----------  -----------  ----------  ----------  -------  -----------  --------\nOpossum     3.5 Billion  319 Mbp     140:52      1137     467          52.55\nArmadillo   47,332,136   47,332,136    6:20      121      92           36.07\nPlatypus    14,768,992   14,768,992    3:46      18       13           40.69\nRabbit      11,770,949   11,770,949    2:17      20       16           28.67\nElephant    11,550,090   11,550,090    1:21      34       28           37.08\n\n  *  Analysis run on a 4 processor P4, 2.4Ghz, 3GB RAM, machine\n     running Red Hat Linux.\n  ** Includes simple repeats and low complexity DNA. Results\n     obtained with RepeatMasker open-3.0.9, WUBlast and\n     the -lib option.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9495973379231891,
      "result": {
        "type": "Text_excerpt",
        "value": "```\nGitHub Conventions:\n   - Master branch is the current release\n   - Development branch is not gauranteed to be stable\n   - Source releases are avaialable under the GitHub release tab and at \n     http://www.repeatmasker.org\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Dfam-consortium/RepeatModeler/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dfam-consortium/RepeatModeler"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepeatModeler"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": " There are two supported paths to installing RepeatModeler on a \n UNIX-based server. RepeatModeler may be installed from source as\n described in the \"Source Distribution Installation\" instructions\n below, or using one of our Dfam-TETools container images ( Docker or \n Singularity ). The containers include RepeatModeler, it's \n prerequisites and additional TE analysis tools/utilities used by\n Dfam. Information on the Dfam-TETools container may be found here:\n https://github.com/Dfam-consortium/TETools\n \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Source Distribution Installation",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": "**Prerequisites**\n\n  Perl\n    Available at http://www.perl.org/get.html. Developed and tested\n    with version 5.8.8.\n\n  RepeatMasker & Libraries\n    Developed and tested with open-4.1.4. The program is available at \n    http://www.repeatmasker.org/RMDownload.html and is distributed with\n    Dfam - an open database of transposable element families.\n\n  RECON - De Novo Repeat Finder, Bao Z. and Eddy S.R.\n    Developed and tested with our patched version of RECON ( 1.08 ). \n    The 1.08 version fixes problems with running RECON on 64 bit machines and \n    supplies a workaround to a division by zero bug along with some buffer \n    overrun fixes. The program is available at: \n       http://www.repeatmasker.org/RepeatModeler/RECON-1.08.tar.gz. \n    The original version is available at http://eddylab.org/software/recon/.\n\n  RepeatScout - De Novo Repeat Finder, Price A.L., Jones N.C. and Pevzner P.A.\n    Developed and tested with our multiple sequence version of RepeatScout \n    ( 1.0.6 ).  This version is available at \n    http://www.repeatmasker.org/RepeatScout-1.0.6.tar.gz\n\n  TRF - Tandem Repeat Finder, G. Benson et al.\n    You can obtain a free copy at http://tandem.bu.edu/trf/trf.html\n    RepeatModeler requires version 4.0.9 or higher.\n\n  RMBlast - A modified version of NCBI Blast for use with RepeatMasker\n    and RepeatModeler.  Precompiled binaries and source can be found at\n    http://www.repeatmasker.org/RMBlast.html\n    We highly recommend using 2.13.0 or higher.\n\n  UCSC genome browser command-line utilities - Some tools included with\n    RepeatModeler work with files in the 'twobit' file format using\n    these programs: twoBitToFa, faToTwoBit, and twoBitInfo.\n    Precompiled binaries and source for these programs can be found at\n    http://hgdownload.soe.ucsc.edu/downloads.html#utilities_downloads.\n\n**Optional. Required for running LTR structural search pipeline:**\n\n  LtrHarvest - The LtrHarvest program is part of the GenomeTools suite.  We\n    have developed this release of RepeatModeler on GenomeTools version 1.5.9 \n    available for download from here: http://genometools.org/pub/\n    NOTE: use the \"make threads=yes\" build options to enable multi-threaded\n          runs.\n          \n  Ltr_retriever - A LTR discovery post-processing and filtering tool.  We \n    recommend using version 2.6 or higher from here: \n    https://github.com/oushujun/LTR_retriever/releases\n\n  MAFFT - A multiple sequence alignment program.  We developed and tested\n    RepeatModeler using mafft version 7.407.  Please use this verison or\n    higher from here:\n    https://mafft.cbrc.jp/alignment/software/\n\n  CD-HIT - A sequence clustering package.  We developed and tested\n    RepeatModeler using version 4.8.1.  Please use this version or higher\n    from:\n    http://weizhongli-lab.org/cd-hit/\n\n  Ninja - A tool for large-scale neighbor-joining phylogeny inference and \n    clustering.  We developed and tested RepeatModeler using Ninja version\n    \"0.98-cluster_only\". Please obtain a copy from:\n    https://github.com/TravisWheelerLab/NINJA/releases/tag/0.98-cluster_only\n\n**Installation**\n\n  1. Obtain the source distribution\n       - Github : https://github.com/Dfam-consortium/RepeatModeler\n         Available by cloning the master branch of the RepeatModeler repository\n         ( latest released version ) or by downloading a release from the \n         repository \"releases\" tab.\n     or \n       - RepeatMasker Website : http://www.repeatmasker.org/RepeatModeler\n\n  2. Uncompress and expand the distribution archive:\n\n     ```\n     tar -zxvf RepeatModeler-#.#.tar.gz\n     ```\n\n  3. Configure for your site:\n\n     Automatic:\n       + Run the \"configure\" script interactively with prompts\n         for each setting:\n\n               perl ./configure\n\n       + Run the \"configure\" script with supplied paramters:\n\n               perl ./configure -rscout_dir .. -recon_dir ..\n \n     By Hand:\n       + Edit the configuration file \"RepModelConfig.pm\"\n\n     Dynamically:\n       + Use the \"configuration overrides\" command line options\n          with the RepeatModeler programs. e.g:\n\n               ./RepeatModeler -rscout_dir .. -recon_dir .. \n         \n "
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999693649590058,
      "result": {
        "type": "Text_excerpt",
        "value": "```\nGitHub Conventions:\n   - Master branch is the current release\n   - Development branch is not gauranteed to be stable\n   - Source releases are avaialable under the GitHub release tab and at \n     http://www.repeatmasker.org\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Open Software License v. 2.1\n\nThis Open Software License (the \"License\") applies to any original work of authorship (the \"Original Work\") whose owner (the \"Licensor\") has placed the following notice immediately following the copyright notice for the Original Work:\nLicensed under the Open Software License version 2.1\n\n1) Grant of Copyright License. Licensor hereby grants You a world-wide, royalty-free, non-exclusive, perpetual, sublicenseable license to do the following:\n\nto reproduce the Original Work in copies;\nto prepare derivative works (\"Derivative Works\") based upon the Original Work;\nto distribute copies of the Original Work and Derivative Works to the public, with the proviso that copies of Original Work or Derivative Works that You distribute shall be licensed under the Open Software License;\nto perform the Original Work publicly; and\nto display the Original Work publicly.\n\n2) Grant of Patent License. Licensor hereby grants You a world-wide, royalty-free, non-exclusive, perpetual, sublicenseable license, under patent claims owned or controlled by the Licensor that are embodied in the Original Work as furnished by the Licensor, to make, use, sell and offer for sale the Original Work and Derivative Works.\n\n3) Grant of Source Code License. The term \"Source Code\" means the preferred form of the Original Work for making modifications to it and all available documentation describing how to modify the Original Work. Licensor hereby agrees to provide a machine-readable copy of the Source Code of the Original Work along with each copy of the Original Work that Licensor distributes. Licensor reserves the right to satisfy this obligation by placing a machine-readable copy of the Source Code in an information repository reasonably calculated to permit inexpensive and convenient access by You for as long as Licensor continues to distribute the Original Work, and by publishing the address of that information repository in a notice immediately following the copyright notice that applies to the Original Work.\n\n4) Exclusions From License Grant. Neither the names of Licensor, nor the names of any contributors to the Original Work, nor any of their trademarks or service marks, may be used to endorse or promote products derived from this Original Work without express prior written permission of the Licensor. Nothing in this License shall be deemed to grant any rights to trademarks, copyrights, patents, trade secrets or any other intellectual property of Licensor except as expressly stated herein. No patent license is granted to make, use, sell or offer to sell embodiments of any patent claims other than the licensed claims defined in Section 2. No right is granted to the trademarks of Licensor even if such marks are included in the Original Work. Nothing in this License shall be interpreted to prohibit Licensor from licensing under different terms from this License any Original Work that Licensor otherwise would have a right to license.\n\n5) External Deployment. The term \"External Deployment\" means the use or distribution of the Original Work or Derivative Works in any way such that the Original Work or Derivative Works may be used by anyone other than You, whether the Original Work or Derivative Works are distributed to those persons or made available as an application intended for use over a computer network. As an express condition for the grants of license hereunder, You agree that any External Deployment by You of a Derivative Work shall be deemed a distribution and shall be licensed to all under the terms of this License, as prescribed in section 1(c) herein.\n\n6) Attribution Rights. You must retain, in the Source Code of any Derivative Works that You create, all copyright, patent or trademark notices from the Source Code of the Original Work, as well as any notices of licensing and any descriptive text identified therein as an \"Attribution Notice.\" You must cause the Source Code for any Derivative Works that You create to carry a prominent Attribution Notice reasonably calculated to inform recipients that You have modified the Original Work.\n\n7) Warranty of Provenance and Disclaimer of Warranty. Licensor warrants that the copyright in and to the Original Work and the patent rights granted herein by Licensor are owned by the Licensor or are sublicensed to You under the terms of this License with the permission of the contributor(s) of those copyrights and patent rights. Except as expressly stated in the immediately proceeding sentence, the Original Work is provided under this License on an \"AS IS\" BASIS and WITHOUT WARRANTY, either express or implied, including, without limitation, the warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK IS WITH YOU. This DISCLAIMER OF WARRANTY constitutes an essential part of this License. No license to Original Work is granted hereunder except under this disclaimer.\n\n8) Limitation of Liability. Under no circumstances and under no legal theory, whether in tort (including negligence), contract, or otherwise, shall the Licensor be liable to any person for any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or the use of the Original Work including, without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses. This limitation of liability shall not apply to liability for death or personal injury resulting from Licensor's negligence to the extent applicable law prohibits such limitation. Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so this exclusion and limitation may not apply to You.\n\n9) Acceptance and Termination. If You distribute copies of the Original Work or a Derivative Work, You must make a reasonable effort under the circumstances to obtain the express assent of recipients to the terms of this License. Nothing else but this License (or another written agreement between Licensor and You) grants You permission to create Derivative Works based upon the Original Work or to exercise any of the rights granted in Section 1 herein, and any attempt to do so except under the terms of this License (or another written agreement between Licensor and You) is expressly prohibited by U.S. copyright law, the equivalent laws of other countries, and by international treaty. Therefore, by exercising any of the rights granted to You in Section 1 herein, You indicate Your acceptance of this License and all of its terms and conditions. This License shall terminate immediately and you may no longer exercise any of the rights granted to You by this License upon Your failure to honor the proviso in Section 1(c) herein.\n\n10) Termination for Patent Action. This License shall terminate automatically and You may no longer exercise any of the rights granted to You by this License as of the date You commence an action, including a cross-claim or counterclaim, against Licensor or any licensee alleging that the Original Work infringes a patent. This termination provision shall not apply for an action alleging patent infringement by combinations of the Original Work with other software or hardware.\n\n11) Jurisdiction, Venue and Governing Law. Any action or suit relating to this License may be brought only in the courts of a jurisdiction wherein the Licensor resides or in which Licensor conducts its primary business, and under the laws of that jurisdiction excluding its conflict-of-law provisions. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any use of the Original Work outside the scope of this License or after its termination shall be subject to the requirements and penalties of the U.S. Copyright Act, 17 U.S.C. \u00a7 101 et seq., the equivalent laws of other countries, and international treaty. This section shall survive the termination of this License.\n\n12) Attorneys Fees. In any action to enforce the terms of this License or seeking damages relating thereto, the prevailing party shall be entitled to recover its costs and expenses, including, without limitation, reasonable attorneys' fees and costs incurred in connection with such action, including any appeal of such action. This section shall survive the termination of this License.\n\n13) Miscellaneous. This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable.\n\n14) Definition of \"You\" in This License. \"You\" throughout this License, whether in upper or lower case, means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with you. For purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n15) Right to Use. You may use the Original Work in all ways not otherwise restricted or conditioned by this License or by law, and Licensor promises not to interfere with or be responsible for such uses by You.\n\nThis license is Copyright (C) 2003-2004 Lawrence E. Rosen. All rights reserved. Permission is hereby granted to copy and distribute this license without modification. This license may not be modified without the express written permission of its copyright owner.\n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": "This work is licensed under the Open Source License v2.1.  \nTo view a copy of this license, visit \nhttp://www.opensource.org/licenses/osl-2.1.php or\nsee the LICENSE file contained in this distribution.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepeatModeler"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Dfam-consortium"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 1138516,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 91798,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 9865,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2023-10-04T16:55:08Z",
        "date_published": "2023-10-04T16:57:00Z",
        "description": "  - Fixed a bug that caused failures in \"absolute\" reproducibility.  Prior\r\n    to this release use of the \"-srand\" would not gaurantee that the ouputs\r\n    consensi.fa.classified and families-classified.stk were exactly the same\r\n    in sequence and sequence order.  It did gaurantee that the same samples\r\n    were drawn from the genome, and that equivalent scoring families were\r\n    derived at at each step.  In this release secondary sorts were added \r\n    to gaurantee a fixed sort order among equally scoring results, generating\r\n    exactly the same output files each time the random number generator seed\r\n    is used.  NOTE: This change only applies to results generated with \r\n    this version and future releases.\r\n  - Added \"-long\" option to faToTwoBit to support larger genomes.\r\n",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0.5",
        "name": "RepeatModeler 2.0.5",
        "release_id": 123724671,
        "tag": "2.0.5",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/123724671",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/123724671",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2022-11-29T22:26:46Z",
        "date_published": "2022-11-29T22:30:56Z",
        "description": "  - Improved the gathering of RepeatScout examplars for building\r\n    seed alignments.\r\n  - Parallelized and improved the masking between rounds for faster\r\n    runs and fewer redicoveries.\r\n  - The 'pa' (parallel batches) option has been replaced with a new\r\n    'threads' option which maps directly to the maximum number of\r\n    threads the program will attempt to use.\r\n  - Takes advantage of RepeatMasker 4.1.4 and RMBlast 2.13.0 parallel\r\n    query feature.\r\n  - Larger default sample sizes are now possible with speed improvements.\r\n    The original sampling strategy can be selected with the new 'quick'\r\n    option.\r\n  - ABBlast is no longer supported.\r\n  - Fixed a few visual artifacts in the viewMSA.pl html \r\n    visualization.\r\n",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0.4",
        "name": "RepeatModeler 2.0.4",
        "release_id": 84510111,
        "tag": "2.0.4",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/84510111",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/84510111",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2022-02-08T18:56:21Z",
        "date_published": "2022-02-08T18:58:41Z",
        "description": "   - The program now generates a logfile in the working directory named\r\n    <seqfile>-rmod.log.  This file contains the random seed number used              \r\n    and some high level stats on the run for use with reporting problems\r\n    with the program.\r\n  - Fixed a problem with the orientation/coordinates provided in the\r\n    Stockholm output format that affected a subset of the sequences.\r\n  - Fixed a bug affecting the trim functions of the Linup tool.\r\n",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0.3",
        "name": "RepeatModeler 2.0.3",
        "release_id": 59044270,
        "tag": "2.0.3",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/59044270",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/59044270",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2021-04-30T18:02:15Z",
        "date_published": "2021-04-30T18:04:41Z",
        "description": "- First release of a set of manual curation tools for use with de-novo generated TE libraries.\r\n- Added generateSeedAlignments.pl to generate Dfam compatible seed alignments given a consensus based TE library and RepeatMasker output.\r\n- Fixed bug in N50 calculation.\r\n- Fixed Ruzzo-Tompa maximal scoring subsequences implementation.\r\n- Several minor bugfixes.",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0.2a",
        "name": "RepeatModeler 2.0.2",
        "release_id": 42282328,
        "tag": "2.0.2a",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0.2a",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/42282328",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/42282328",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0.2a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2020-01-09T23:52:19Z",
        "date_published": "2020-01-09T23:55:41Z",
        "description": "Bugfix release\r\n\r\n- Work around a bug introduced in the new NCBI Blast 2.10.0 with version 5 databases.\r\n \r\n- RepeatScout in some rare cases will generate models for very long-period satellites.  This can cause Refiner to go crazy creating tons of off-diagonal alignments.  This version filters out these rare cases.\r\n\r\n- This version now prints out the version of each dependency in the log.",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0.1",
        "name": "RepeatModeler 2.0.1",
        "release_id": 22728870,
        "tag": "2.0.1",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/22728870",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/22728870",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2019-11-15T23:50:50Z",
        "date_published": "2019-11-15T23:54:43Z",
        "description": "RepeatModeler 2.0 now supports LTR structural search using a combination of LTR_harvest and LTR_retriever.",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/2.0",
        "name": "RepeatModeler 2.0",
        "release_id": 21521741,
        "tag": "2.0",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/21521741",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/21521741",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2017-10-20T19:13:30Z",
        "date_published": "2017-10-20T19:14:58Z",
        "description": "Bugfix release. Avoid bailing if Refiner could not produce a consensus from the family sequence set.",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/open-1.0.11",
        "name": "RepeatModeler open-1.0.11",
        "release_id": 8201819,
        "tag": "open-1.0.11",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/open-1.0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/8201819",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/8201819",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/open-1.0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2017-05-12T21:45:39Z",
        "date_published": "2017-05-12T21:52:30Z",
        "description": "- Bugfix release.  Fixes a bug that will cause RepeatModeler to exit if no new repeats are detected after round-2.  In typical runs repeats will continue to be discovered even up to the last round and this bug will not be exercised.  ",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/open-1.0.10",
        "name": "RepeatModeler open-1.0.10",
        "release_id": 6372329,
        "tag": "open-1.0.10",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/open-1.0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/6372329",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/6372329",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/open-1.0.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rmhubley",
          "type": "User"
        },
        "date_created": "2017-04-06T17:02:00Z",
        "date_published": "2017-04-06T17:05:47Z",
        "description": "  - RepeatModeler employs a genome sampling approach that is based\r\n    on a random number generator. In this release of RepeatModeler\r\n    we print out the random number generator seed at the start of\r\n    a run.  This number can be used with the \"-srand ####\" flag in future\r\n    runs to exactly reproduce the samples taken from a given database.\r\n\r\n  - The final output files are now placed in the same directory as\r\n    the input database.\r\n\r\n  - An additional output file is now generated containing the seed\r\n    alignment for each discovered family.  This alignment is the source\r\n    of the final consnesus and is stored in a Dfam compatible Stockholm\r\n    file.  The new output files are named <database_name>-families.fa and\r\n    <database_name>-families.stk.\r\n\r\n  - Support for Dfam_consensus has been built into this release. Two\r\n    utilities dfamConsensusTool.pl and renameIds.pl can be found in the\r\n    RepeatModeler util/ directory.  The dfamConsensusTool script enables\r\n    one to upload curated seed alignments to the open Dfam_consensus\r\n    database from the command line.  The renameIds script simplifies\r\n    the process of coming up with unique identifiers for a set of\r\n    RepeatModeler generated families given a naming template.\r\n",
        "html_url": "https://github.com/Dfam-consortium/RepeatModeler/releases/tag/open-1.0.9",
        "name": "RepeatModeler open-1.0.9",
        "release_id": 6001910,
        "tag": "open-1.0.9",
        "tarball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/tarball/open-1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/6001910",
        "value": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/releases/6001910",
        "zipball_url": "https://api.github.com/repos/Dfam-consortium/RepeatModeler/zipball/open-1.0.9"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": "In this example we first downloaded elephant sequences\nfrom Genbank ( approx 11MB ) into a file called elephant.fa. \n\n  1. Create a Database for RepeatModeler\n\n     RepeatModeler uses a NCBI BLASTDB as input to the\n     repeat modeling pipeline.  A utility is provided to assist\n     the user in creating a single database from several \n     types of input structures.  \n\n           <RepeatModelerPath>/BuildDatabase -name elephant elephant.fa\n\n     Run \"BuildDatabase\" without any options in order to see the \n     full documentation on this utility. There are several options\n     which make it easier to import multiple sequence files into\n     one database.\n  \n     TIP: It is a good idea to place your datafiles and run this\n          program suite from a local disk rather than over NFS. \n          This will greatly improve runtime as the filesystem \n          access is considerable\n\n  2. Run RepeatModeler\n     \n     RepeatModeler runs several compute intensive programs on the\n     input sequence.  For best results run this on a single machine with\n     a moderate amount of memory > 32GB and multiple processors.  \n     Our setup is Xeon(R) CPU E5-2680 v4 @ 2.40GHz - 28 cores, 128GB RAM.\n     To specify a run using 20 threads (at most), and including the new \n     LTR discovery pipeline:\n     \n            nohup <RepeatModelerPath>/RepeatModeler -database elephant \n            -threads 20 -LTRStruct >& run.out &\n\n     The nohup (or screen) is used on our machines when running long \n     jobs.  The log output is saved to a file and the process is backgrounded.\n     For typical runtimes ( can be > 1-2 days with this configuration on a\n     well assembled mammalian genome ) see the run statistics section of \n     this file.  It is important to save the log output for later usage.  \n     It contains the random number generator seed so that the sampling \n     process may be reproduced if necessary.  In addition the log file \n     contains details about the progress of the run for later assesment \n     of peformance or debuging problems.\n\n  3. Interpret the results\n\n     RepeatModeler produces a voluminous amount of temporary files stored\n     in a directory created at runtime named like:\n\n               RM_<PID>.<DATE> ie. \"RM_5098.MonMar141305172005\" \n\n     and remains after each run for debugging purposes or for the purpose\n     of resuming runs if a failure occures. At the succesful completion \n     of a run, three files are generated:\n\n               <database_name>-families.fa  : Consensus sequences\n               <database_name>-families.stk : Seed alignments\n               <database_name>-rmod.log     : A summarized log of the run\n\n     The seed alignment file is in a Dfam compatible Stockholm format and\n     may be uploaded to the Dfam database by submiting the data to \n     help@dfam.org or by going to dfam.org/login and creating an upload\n     account.\n\n     The fasta format is useful for running quick custom library searches\n     using RepeatMasker.  Ie.:\n\n               <RepeatMaskerPath>/RepeatMasker -lib <database_name>-families.fa mySequence.fa \n\n     Other files produced in the working directory include:\n\n```\n       RM_<PID>.<DATE>/\n          consensi.fa\n          families.stk\n          round-1/\n               sampleDB-#.fa       : The genomic sample used in this round\n               sampleDB-#.fa.lfreq : The RepeatScout lmer table\n               sampleDB-#.fa.rscons: The RepeatScout generated consensi\n               sampleDB-#.fa.rscons.filtered : The simple repeat/low \n                                               complexity filtered\n                                               version of *.rscons\n               consensi.fa         : The final consensi db for this round\n               family-#-cons.html  : A visualization of the model\n                                     refinement process.  This can be opened\n                                     in web browsers that support zooming.\n                                     ( such as firefox ).\n                                     This is used to track down problems \n                                     with the Refiner.pl\n               index.html          : A HTML index to all the family-#-cons.html\n                                     files.\n          round-2/\n               sampleDB-#.fa       : The genomic sample used in this round\n               msps.out            : The output of the sample all-vs-all \n                                     comparison\n               summary/            : The RECON output directory\n                    eles           : The RECON family output\n               consensi.fa         : Same as above\n               family-#-cons.html  : Same as above\n               index.html          : Same as above\n          round-3/\n               Same as round-2\n           ..\n          round-n/\n```\n\n\n  Recover from a failure\n\n  If for some reason RepeatModeler fails, you may restart an\n  analysis starting from the last round it was working on.  The\n  -recoverDir [<i>ResultDir</i>] option allows you to specify a\n  diretory ( i.e RM_<PID>.<DATE>/ ) where a previous run of\n  RepeatModeler was working and it will automatically determine\n  how to continue the analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:24:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 189
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Run",
        "parent_header": [
          "RepeatModeler"
        ],
        "type": "Text_excerpt",
        "value": "In this example we first downloaded elephant sequences\nfrom Genbank ( approx 11MB ) into a file called elephant.fa. \n\n  1. Create a Database for RepeatModeler\n\n     RepeatModeler uses a NCBI BLASTDB as input to the\n     repeat modeling pipeline.  A utility is provided to assist\n     the user in creating a single database from several \n     types of input structures.  \n\n           <RepeatModelerPath>/BuildDatabase -name elephant elephant.fa\n\n     Run \"BuildDatabase\" without any options in order to see the \n     full documentation on this utility. There are several options\n     which make it easier to import multiple sequence files into\n     one database.\n  \n     TIP: It is a good idea to place your datafiles and run this\n          program suite from a local disk rather than over NFS. \n          This will greatly improve runtime as the filesystem \n          access is considerable\n\n  2. Run RepeatModeler\n     \n     RepeatModeler runs several compute intensive programs on the\n     input sequence.  For best results run this on a single machine with\n     a moderate amount of memory > 32GB and multiple processors.  \n     Our setup is Xeon(R) CPU E5-2680 v4 @ 2.40GHz - 28 cores, 128GB RAM.\n     To specify a run using 20 threads (at most), and including the new \n     LTR discovery pipeline:\n     \n            nohup <RepeatModelerPath>/RepeatModeler -database elephant \n            -threads 20 -LTRStruct >& run.out &\n\n     The nohup (or screen) is used on our machines when running long \n     jobs.  The log output is saved to a file and the process is backgrounded.\n     For typical runtimes ( can be > 1-2 days with this configuration on a\n     well assembled mammalian genome ) see the run statistics section of \n     this file.  It is important to save the log output for later usage.  \n     It contains the random number generator seed so that the sampling \n     process may be reproduced if necessary.  In addition the log file \n     contains details about the progress of the run for later assesment \n     of peformance or debuging problems.\n\n  3. Interpret the results\n\n     RepeatModeler produces a voluminous amount of temporary files stored\n     in a directory created at runtime named like:\n\n               RM_<PID>.<DATE> ie. \"RM_5098.MonMar141305172005\" \n\n     and remains after each run for debugging purposes or for the purpose\n     of resuming runs if a failure occures. At the succesful completion \n     of a run, three files are generated:\n\n               <database_name>-families.fa  : Consensus sequences\n               <database_name>-families.stk : Seed alignments\n               <database_name>-rmod.log     : A summarized log of the run\n\n     The seed alignment file is in a Dfam compatible Stockholm format and\n     may be uploaded to the Dfam database by submiting the data to \n     help@dfam.org or by going to dfam.org/login and creating an upload\n     account.\n\n     The fasta format is useful for running quick custom library searches\n     using RepeatMasker.  Ie.:\n\n               <RepeatMaskerPath>/RepeatMasker -lib <database_name>-families.fa mySequence.fa \n\n     Other files produced in the working directory include:\n\n```\n       RM_<PID>.<DATE>/\n          consensi.fa\n          families.stk\n          round-1/\n               sampleDB-#.fa       : The genomic sample used in this round\n               sampleDB-#.fa.lfreq : The RepeatScout lmer table\n               sampleDB-#.fa.rscons: The RepeatScout generated consensi\n               sampleDB-#.fa.rscons.filtered : The simple repeat/low \n                                               complexity filtered\n                                               version of *.rscons\n               consensi.fa         : The final consensi db for this round\n               family-#-cons.html  : A visualization of the model\n                                     refinement process.  This can be opened\n                                     in web browsers that support zooming.\n                                     ( such as firefox ).\n                                     This is used to track down problems \n                                     with the Refiner.pl\n               index.html          : A HTML index to all the family-#-cons.html\n                                     files.\n          round-2/\n               sampleDB-#.fa       : The genomic sample used in this round\n               msps.out            : The output of the sample all-vs-all \n                                     comparison\n               summary/            : The RECON output directory\n                    eles           : The RECON family output\n               consensi.fa         : Same as above\n               family-#-cons.html  : Same as above\n               index.html          : Same as above\n          round-3/\n               Same as round-2\n           ..\n          round-n/\n```\n\n\n  Recover from a failure\n\n  If for some reason RepeatModeler fails, you may restart an\n  analysis starting from the last round it was working on.  The\n  -recoverDir [<i>ResultDir</i>] option allows you to specify a\n  diretory ( i.e RM_<PID>.<DATE>/ ) where a previous run of\n  RepeatModeler was working and it will automatically determine\n  how to continue the analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/Dfam-consortium/RepeatModeler/master/README.md",
      "technique": "header_analysis"
    }
  ]
}