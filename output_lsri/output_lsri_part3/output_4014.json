{
  "application_domain": [
    {
      "confidence": 4.65,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bioinfomaticsCSU/RepAHR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-21T02:31:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-02T11:17:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9599576389893665,
      "result": {
        "original_header": "RepAHR",
        "type": "Text_excerpt",
        "value": "RepAHR is used to identify repeats(repetitive sequences) in genome using Next-Generation Sequencing reads. \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9239027377561929,
      "result": {
        "original_header": "Edit configure files:",
        "type": "Text_excerpt",
        "value": "    Explanation of parameter_config_file: \n    * 'READS_DEPTH': the average depth of input NGS reads. If the user know the value of the average\n    depth, fill in the rounded number after the equal sign. If the user does not know the specific\n    value, fill in the 'auto' after the the equal sign, RepAHR will estimate the average depth of the\n    input NGS reads, but there may be some errors.\n    * 'AVE_READS_LEN': the average length of all the input NGS reads. User need to fill in the rounded\n    number the equal sign.\n    * 'THREAD': the running threads when running RepAHR.\n    * 'MAX_MEMORY': the maximum memory the user wants to use, in GB. Filling in 'default' means RepAHR\n    is allowed to use all available physical memory of the machine.\n    * 'FILTER_RATE': a parameter used to obtain high-frequency reads, usually no need to modify.\n    * 'OUTPUT_PATH': the path of RepAHR to give the final result and some intermediate files.\n    * 'JELLYFISH_PATH': if Jellyfish is in the system environment, fill in 'GLOBAL' after the equal\n    sign. If not, fill in the absolute path of Jellyfish after the equal sign.\n    * 'SPADES_PATH': if SPADES is in the system environment, fill in 'GLOBAL' after the equal sign. If\n    not, fill in the absolute path of SPADES after the equal sign.\n    * 'JAVA_HOME': if Java is in the system environment, fill in 'GLOBAL' after the equal sign. If not,\n    fill in the absolute path of JAVA_HOME after the equal sign.\n    * 'MIN_CONTIG_LENGTH': the repeats which is shorter than this value will be filtered out from the\n    fianl result. \nThe location of ecah reads file need to be given in the reads_config_file: \n    1 /home/zhangxk/data/file1_1.fastq\n    1 /home/zhangxk/data/file2_2.fastq\n    2 /home/zhangxk/data/file2_1.fastq\n    2 /home/zhangxk/data/file2_2.fastq \n    Explanation of reads_config_file: \n    Each line include the infromation of one reads file, the beginning of each line is the number of the\n    reads file, followed by a space, and then is the absolute path of the reads file. The number of the\n    two files of one paired-end reads libraray should be same in the reads_config_file. Note that \n    there cannot be both single-end reads and paired-end reads, can only be on of them.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bioinfomaticsCSU/RepAHR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bioinfomaticsCSU/RepAHR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinfomaticsCSU/RepAHR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepAHR"
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RepAHR"
        ],
        "type": "Text_excerpt",
        "value": "The OSs must be Linux."
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bioinfomaticsCSU/RepAHR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RepAHR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bioinfomaticsCSU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 24859,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 18345,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "RepAHR",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Before the installation of RepAHR, the following tools or environment are required:\n* [jre.1.8.0](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [python 2.7.13  or higher](https://www.python.org/downloads/release/python-2713/)\n* [SPAdes.3.12.0](http://cab.spbu.ru/software/spades/)\n* [Jellyfish 2.0.0](https://github.com/gmarcais/Jellyfish/tree/master/include/jellyfish)\n\nTo install RepAHR, follow the instruction below:\n```\ngit clone https://github.com/bioinfomaticsCSU/RepAHR\n```"
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "RepAHR"
        ],
        "type": "Text_excerpt",
        "value": "```\npython RepAHR.py -c parameter_config_file -r reads_config_file\n```\n'RepAHR.py' 'parameter_config_file' 'reads_config_file' are all the absolute or relative path of the 3 files."
      },
      "source": "https://raw.githubusercontent.com/bioinfomaticsCSU/RepAHR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:52:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}