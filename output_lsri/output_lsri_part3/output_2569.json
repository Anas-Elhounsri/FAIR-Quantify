{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhoux85/scAdapt"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-06T16:13:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-17T12:01:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9959619537570638,
      "result": {
        "original_header": "scAdapt: Virtual adversarial domain adaptation network for single cell RNA-seq data classification across platforms and species",
        "type": "Text_excerpt",
        "value": "This repository contains the preprocessed data and Python implementation for scAdapt. scAdapt is a virtual adversarial domain adaptation network to transfer single cell labels between datasets with batch effects. scAdapt used both the labeled source and unlabeled target data to train an enhanced classifier, and aligned the labeled source centroid and pseudo-labeled target centroid to generate a joint embedding. \n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9645016296615914,
      "result": {
        "original_header": "Questions",
        "type": "Text_excerpt",
        "value": "For questions about the datasets and code, please contact [zhoux85@mail2.sysu.edu.cn](mailto:zhoux85@mail2.sysu.edu.cn). \n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhoux85/scAdapt/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhoux85/scAdapt/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zhoux85/scAdapt"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scAdapt: Virtual adversarial domain adaptation network for single cell RNA-seq data classification across platforms and species"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/scAdapt/model.png"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/results/confusion_map.png"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/results/UMAP.png"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preparation",
        "type": "Text_excerpt",
        "value": "Log-normalized count matrix is recommonded as the input of scAdapt. Raw counts matrix can be normalized by the NormalizeData function in Seurat with default \u2018LogNormalize\u2019 normalization method and a scale factor of 10,000. We use top 2000 highly variable genes as input features. We provided an example of processed datasets in the `scAdapt/processed_data` folder as follows:\n`combine_expression.csv` is the expression matrix [gene, cell] combining source and target.\n`combine_labels.csv` is the cell type label array combining source and target.\n`domain_labels.csv` is the batch/domain label array combining source and target.\n`digit_label_dict.csv` is the one-to-one mapping between digital label and cell type label.\n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8529707464742398,
      "result": {
        "original_header": "scAdapt: Virtual adversarial domain adaptation network for single cell RNA-seq data classification across platforms and species",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n    <img src=\"scAdapt/model.png\" width=\"638\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhoux85/scAdapt/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Sun Yat-sen University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scAdapt"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zhoux85"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 57105,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "pyTorch>=1.1.0\numap-learn>=0.3.8\nuniversal-divergence>=0.2.0\n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:23:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "API usage",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Here is example API usage of scAdapt in Python:\n\n```\nfrom scAdapt import scAdapt\nfrom config import * # set hyper-parameters\n\ndataset_path = args.dataset_path \nnormcounts = pd.read_csv(dataset_path + 'combine_expression.csv')\nlabels = pd.read_csv(dataset_path + 'combine_labels.csv')\ndomain_labels = pd.read_csv(dataset_path + 'domain_labels.csv')\ndata_set = {'features': normcounts.T.values, 'labels': labels.iloc[:, 0].values,\n'accessions': domain_labels.iloc[:, 0].values}\n\nscAdapt(args=args, data_set=data_set)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python script usage",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "An example of how to use scAdapt for both classification and batch correction is:\n\n```bash\npython main.py --dataset_path path/to/input/files\n               --result_path path/for/output/files\n               --source_name batch name\n               --target_name batch name\n\t       --gpu_id GPU id to run\n```\n\nThe `dataset_path` must contain the four CSV files preprocessed as in `scAdapt/processed_data` folder. In `result_path`, there will be three output files: `final_model_*.ckpt` has the trained model    parameters (i.e. weights and biases) and can be loaded for label prediction. `pred_labels_*.csv` contains the predicted cell label and corresponding confidence score (softmax probability). `embeddings_*.csv` contains the batch-corrected low-dimensional embeddings (default is 256) for visualization.\n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "A demo file `example.py` is provided in the `scAdapt` folder, and the corresponding datasets are provided in the `scAdapt/processed_data` folder. In the demo, we use mouse pancreas data (Baron and Tabula Muris) as source and human pancreas data (Segerstolpe) as target. The demo can be run with the following command with default parameters:\n\n`python example.py`\n\nWe can evaluate how well our predicted cell type labels match the true labels with Confusion heatmap. For this demo dataset, we find that there is a perfect agreement (Average acc = 0.98) in cell type prediction.\n\n<p align=\"center\">\n    <img src=\"results/confusion_map.png\" width=\"638\">\n</p>\n\nWe can also plot the low-dimensional embeddings of scAdapt model by UMAP. We can find that the cells from mouse and human dataset are well mixed by cell type while the clusters of different cell types are separated clearly.\n\n<p align=\"center\">\n    <img src=\"results/UMAP.png\" width=\"638\">\n</p>\n"
      },
      "source": "https://raw.githubusercontent.com/zhoux85/scAdapt/master/README.md",
      "technique": "header_analysis"
    }
  ]
}