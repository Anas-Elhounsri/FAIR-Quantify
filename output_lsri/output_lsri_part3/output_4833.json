{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bxlab/PHOSforUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-23T12:59:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-26T13:10:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Github repository for PHOSforUS predictor distribution"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bxlab/PHOSforUS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bxlab/PHOSforUS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bxlab/PHOSforUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PHOSforUS predictor usage guide"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. PHOSforUS features",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPHOSforUS is a fully biophysical parameter-based protein phosphorylation site predictor.\r\nFrom input sequences, it calculates 18 biophysical features, including:\r\n\r\n- Horizontal features (6): Hydrophobicity, Secondary structure propensity, PII propensity, etc.\r\n- Vertical features (4): AA molecular weight, residue charge, surface area, etc.\r\n- eSCAPE thermodynamic features (8): dG, dHap, dHpol, TdS, etc.\r\n   \r\nAll individual biophysical features are sent to sub-predictors, based on Naive Bayes classifier.\r\nResulting scores are sent to downstream metapredictor, based on gradient boosting classifier.\r\nPrediction results are compiled into single result file per each sequence, which could be found in result_output folder.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #1: phosforus.phosforus([filename])",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf no other arguments other than input file name is given, PHOSforUS automatically targets for that file and predicts phosphorylation site. After prediction is completed, result file is generated in 'result_output/' folder. \r\nSequence files should follow fasta format for smooth analysis. If multiple sequences are placed in a single file, PHOSforUS will predict phosphorylation sites in each of sequences but separate result files will be produced for each.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #2: phosforus.phosforus([dirname], file_input = False, directory_input = True)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf directory input option is turned on, PHOSforUS will take all files in the given directory as sequence inputs. Beware not to include non-sequence files in the directory.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #3: phosforus.phosforus([\"manual sequence input\"], file_input = False, manual_input = True)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf manual input option is turned on, PHOSforUS will take given sequence argument as a sequence input and proceed on prediction. It will not distinguish upper case and lower case letters. Letters other than 20 canonical amino acid codes would be recognized as random (X) amino acid.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Optional arguments",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\n- verbose (default = False): if True, it will print prediction results on command line.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Result file format",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPHOSforUS program would produce result file per each input protein sequence.\r\nResult file includes following information.\r\n\r\nInput sequence label (as in fasta file or manual input tag)\r\n\r\n- Raw protein sequence\r\n- Mapped phosphorylation sites in given sequence\r\n- Site-wise details\r\n   - Target site in the sequence\r\n   - Target site type (S-, T-, Y, SP, TP)\r\n   - Phosphorylation status (PHOSPHO / NONPHOS)\r\n   - PHOSforUS prediction score\r\n   - Converted phosphorylation probability\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #1: python phosforus_cmd.py [filename]",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf no other arguments other than input file name is given, PHOSforUS automatically targets for that file and predicts phosphorylation site.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #2: python phosforus_cmd.py [dirname] -d",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf -d flag is given, PHOSforUS will take all files in the given directory as sequence inputs. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #3: python phosforus_cmd.py [\"manual sequence input\"] -m",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf -m flag is given, PHOSforUS will take given sequence argument as a sequence input and proceed on prediction. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional argument: -v (verbose option)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf -v flag is given, it will print prediction results on command line.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "7. Reproducibility-associated data",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nAll accessory datasets & figure generation-associated scripts are stored in a separate repository.\r\nhttps://github.com/mcho22/PHOSforUS_figure_resource\r\n"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bxlab/PHOSforUS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PHOSforUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bxlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 15480,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. System requirement",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPHOSforUS is built on python 2.7 environment.\r\nAlong with base packages, it requires installation of numpy and scikit-learn package.\r\n\r\n- numpy: 1.16.5\r\n- scikit-learn: 0.20.3\r\n\r\nAfter you fetched github repository, you can install PHOSforUS with setup.py:\r\n\r\n    python setup.py install\r\n\r\nAlternatively, you could use Conda to download PHOSforUS and its dependencies. It could be installed with conda run:\r\n\r\n    conda install -c mcho22 phosforus \r\n\r\nAnother option you could use is pip. It could be installed with pip as follow:\r\n\r\n    pip install PHOSforUS\r\n\r\nAfter you install the package, you could test the installation with this test script:\r\n\r\n    from phosforus import phosforus\r\n    phosforus.phosforus(\"ACDEFGHIKLMNPQRSTVWY\", file_input = False, manual_input = True, verbose = True)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:50:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. PHOSforUS features",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPHOSforUS is a fully biophysical parameter-based protein phosphorylation site predictor.\r\nFrom input sequences, it calculates 18 biophysical features, including:\r\n\r\n- Horizontal features (6): Hydrophobicity, Secondary structure propensity, PII propensity, etc.\r\n- Vertical features (4): AA molecular weight, residue charge, surface area, etc.\r\n- eSCAPE thermodynamic features (8): dG, dHap, dHpol, TdS, etc.\r\n   \r\nAll individual biophysical features are sent to sub-predictors, based on Naive Bayes classifier.\r\nResulting scores are sent to downstream metapredictor, based on gradient boosting classifier.\r\nPrediction results are compiled into single result file per each sequence, which could be found in result_output folder.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #1: phosforus.phosforus([filename])",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf no other arguments other than input file name is given, PHOSforUS automatically targets for that file and predicts phosphorylation site. After prediction is completed, result file is generated in 'result_output/' folder. \r\nSequence files should follow fasta format for smooth analysis. If multiple sequences are placed in a single file, PHOSforUS will predict phosphorylation sites in each of sequences but separate result files will be produced for each.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #2: phosforus.phosforus([dirname], file_input = False, directory_input = True)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf directory input option is turned on, PHOSforUS will take all files in the given directory as sequence inputs. Beware not to include non-sequence files in the directory.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #3: phosforus.phosforus([\"manual sequence input\"], file_input = False, manual_input = True)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "(don't forget to import: from phosforus import phosforus)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf manual input option is turned on, PHOSforUS will take given sequence argument as a sequence input and proceed on prediction. It will not distinguish upper case and lower case letters. Letters other than 20 canonical amino acid codes would be recognized as random (X) amino acid.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Optional arguments",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\n- verbose (default = False): if True, it will print prediction results on command line.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Result file format",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nPHOSforUS program would produce result file per each input protein sequence.\r\nResult file includes following information.\r\n\r\nInput sequence label (as in fasta file or manual input tag)\r\n\r\n- Raw protein sequence\r\n- Mapped phosphorylation sites in given sequence\r\n- Site-wise details\r\n   - Target site in the sequence\r\n   - Target site type (S-, T-, Y, SP, TP)\r\n   - Phosphorylation status (PHOSPHO / NONPHOS)\r\n   - PHOSforUS prediction score\r\n   - Converted phosphorylation probability\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #1: python phosforus_cmd.py [filename]",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf no other arguments other than input file name is given, PHOSforUS automatically targets for that file and predicts phosphorylation site.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option #2: python phosforus_cmd.py [dirname] -d",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf -d flag is given, PHOSforUS will take all files in the given directory as sequence inputs. \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional argument: -v (verbose option)",
        "parent_header": [
          "PHOSforUS predictor usage guide",
          "6. Alternative usage example: command line script (phosforus_cmd.py)"
        ],
        "type": "Text_excerpt",
        "value": "\r\nIf -v flag is given, it will print prediction results on command line.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "7. Reproducibility-associated data",
        "parent_header": [
          "PHOSforUS predictor usage guide"
        ],
        "type": "Text_excerpt",
        "value": "\r\nAll accessory datasets & figure generation-associated scripts are stored in a separate repository.\r\nhttps://github.com/mcho22/PHOSforUS_figure_resource\r\n"
      },
      "source": "https://raw.githubusercontent.com/bxlab/PHOSforUS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}