{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite eVIP and eVIP2",
        "parent_header": [
          "eVIP2"
        ],
        "type": "Text_excerpt",
        "value": "The eVIP method was originally described in [Berger et al. 2016](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5003022/pdf/nihms-801008.pdf)\r\n\r\nHigh-throughput Phenotyping of Lung Cancer Somatic Mutations Berger AH, Brooks AN, Wu X, Shrestha Y, Chouinard C, Piccioni F, Bagul M, Kamburov A, Imielinski M, Hogstrom L, Zhu C, Yang X, Pantel S, Sakai R, Watson J, Kaplan N, Campbell JD, Singh S, Root DE, Narayan R, Natoli T, Lahr DL, Tirosh I, Tamayo P, Getz G, Wong B, Doench J, Subramanian A, Golub TR, Meyerson M, Boehm JS. Cancer Cell, Aug 8;30(2):214-28\r\n\r\nThe eVIP2 method was described in [Thornton et al. 2021](https://journals.plos.org/ploscompbiol/article/comments?id=10.1371/journal.pcbi.1009132)  \r\n\r\neVIP2: Expression-based variant impact phenotyping to predict the function of gene variants. Alexis M. Thornton, Lishan Fang, April Lo, Maria McSharry, David Haan, Casey O\u2019Brien, Alice H. Berger , Marios Giannakis , Angela N. Brooks. PLoS Comput Biol. 2021 Jul 2;17(7):e1009132. doi: 10.1371/journal.pcbi.1009132. PMID: 34214079; PMCID: PMC8281988.\r\n\r\n[Git repo containing eVIP2 paper analysis](https://github.com/althornt/eVIP2-paper)\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BrooksLabUCSC/eVIP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-20T23:58:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-14T15:17:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Expression-based variant impact phenotyping "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9888554119118885,
      "result": {
        "original_header": "What is eVIP2?",
        "type": "Text_excerpt",
        "value": "\r\nExpression-based variant impact phenotyping (eVIP) is an approach to predict functional impacts of mutations by comparing gene expression signatures induced by wild-type vs. mutated ORFs. eVIP2 is an updated version of eVIP that can predict functional impact on the pathway level in addition to the overall functional prediction.\r\n\r\n![pipeline](https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/pipeline_image.png)\r\n\r\nFor pathway analysis, eVIP Pathways first finds differentially expressed genes that are specific to the WT or mutant. The WT gene and each mutant are compared to the control using [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html). We define mutation-specific genes as genes that are differentially expressed only in the control vs mutation and not in the control versus WT. These genes represent a new function caused by the mutant. The WT-specific genes are differentially expressed only in the control versus WT and not in the control versus mutant. These are genes that are expected to be affected by normal WT function, but are not affected by the mutant, and therefore contribute to mutant  loss of function. eVIP Pathways is then run separately using the WT-specific and mutant-specific genes (with multiple-testing correction).\r\n\r\n![venn](https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/venn_image.png)\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.940646097064267,
      "result": {
        "original_header": "Required input files",
        "type": "Text_excerpt",
        "value": "\r\nAn  example  of each required input file is available in `eVIP2/tutorial_files`.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8255108404035542,
      "result": {
        "original_header": "`-input_dir` (for eVIP2 only):",
        "type": "Text_excerpt",
        "value": "\r\nrun_eVIP2.py requires transcript quantification outputs from\r\n[kallisto](https://pachterlab.github.io/kallisto/). `-input_dir` should be a directory that contains the different kallisto output directories for each sample.\r\nThe names must match those used in \"distil_id\" column in the `-sig_info` file.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9560618735822646,
      "result": {
        "original_header": "`-sig_info`",
        "type": "Text_excerpt",
        "value": "This file indicates which samples are replicates of which conditions. The cell_id and ie columns are not used and can be given any value.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8326064188670981,
      "result": {
        "original_header": "Required input files for eVIP Pathway analysis",
        "type": "Text_excerpt",
        "value": "When running eVIP Pathways (using `-eVIPP`) additional files are required.\r\n\r\n`-gmt` .gmt file with pathways and the associated genes\r\n\r\n`-gtf ` Gtf file used to convert transcript counts to gene counts\r\n\r\n`-control` If there is more than one control in the controls file (-c), designate which should be used for DEseq2\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9159592065436051,
      "result": {
        "original_header": "-by_gene_color",
        "type": "Text_excerpt",
        "value": "\r\nThis file is used to group genes into categories when creating sparkler plots. The accepted gene labels are:\r\n\r\n- `TSG` (tumor suppressor gene)\r\n- `ONC` (oncogene)\r\n- `TSG_noTP53` (tumor suppressor gene, not TP53)\r\n- `ONC-NEG` (oncogene-negative)\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9905391422391372,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "\r\n          -h, --help            show this help message and exit\r\n          --infile INFILE       Input txt file (filtered and log transformed data).\r\n          -zscore_gct ZSCORE_GCT\r\n                                Zscore input gct file (use instead of --infile)\r\n          -out_directory OUT_DIRECTORY\r\n                                Path to directory for eVIP output files\r\n          -sig_info SIG_INFO    sig info file with gene information and distil\r\n                                information\r\n          -c C                  .grp file containing allele names of control\r\n                                perturbations. If this file is given, a null will be\r\n                                calculated from these\r\n          -r R                  File explicitly indicating which comparisons to do.\r\n                                Assumes the file has a header and it is ignored. The\r\n                                first column is the reference allele and second column\r\n                                is test allele. If this file is not given, then the\r\n                                reference alleles are assumed to be WT and inferred\r\n                                from the allele names.\r\n          -num_reps NUM_REPS    Number of replicates expected for each allele. DEF=3\r\n          -ie_filter IE_FILTER  Threshold for infection efficiency. Any wildtype or\r\n                                mutant alleles having an ie below this threshold, will\r\n                                be removed\r\n          -ie_col IE_COL        Name of the column in the sig_info file with infection\r\n                                efficiency information. DEF=x_ie_a549\r\n          -i I                  Number of iterations to run. DEF=1000\r\n          -allele_col ALLELE_COL\r\n                                Column name in sig_info file that indicates the allele\r\n                                names.DEF=x_mutation_status\r\n          -conn_null CONN_NULL  Optional file containing connectivity null values from\r\n                                a previous run. Should end in _conn_null.txt\r\n          -conn_thresh CONN_THRESH\r\n                                P-value threshold for connectivity vs null.\r\n                                DEFAULT=0.05\r\n          -mut_wt_rep_thresh MUT_WT_REP_THRESH\r\n                                P-value threshold for comparison of WT and mut\r\n                                robustness. DEFAULT=0.05\r\n          -disting_thresh DISTING_THRESH\r\n                                P-value threshold that tests if mut and wt reps are\r\n                                indistinguishable from each other. DEFAULT=0.05\r\n          -mut_wt_rep_rank_diff MUT_WT_REP_RANK_DIFF\r\n                                The minimum difference in median rankpoint WT and mut\r\n                                to consider a difference. DEF=0\r\n          -use_c_pval           Will use corrected p-value instead of raw p-val\r\n          -cell_id CELL_ID      Optional: Will only look at signatures from this cell\r\n                                line. Helps to filter sig_info file.\r\n          -plate_id PLATE_ID    Optional: Will only look at signatures from this plate\r\n          -ref_allele_mode      Sparkler+Viz: Instead of organizing plots by gene,\r\n                                will use the wt column to determine what are the\r\n                                reference alleles.\r\n          -x_thresh X_THRESH    Sparkler: Threshold of significance\r\n          -y_thresh Y_THRESH    Sparkler: Threshold of impact direction\r\n          -annotate             Sparkler: Will add allele labels to points.\r\n          -by_gene_color BY_GENE_COLOR\r\n                                Sparkler: File containing labels and colors for gene-\r\n                                centric plot.\r\n          -pdf PDF              Sparkler + Viz: Will print plots in pdf format instead\r\n                                of png.\r\n          -xmin XMIN            Sparkler: Min value of x-axis. DEF=0\r\n          -xmax XMAX            Sparkler: Max value of x-axis. DEF=4\r\n          -ymin YMIN            Sparkler: Min value of y-axis. DEF=-3\r\n          -ymax YMAX            Sparkler: Min value of y-axis. DEF=3\r\n          -viz_ymin VIZ_YMIN    Viz: Minimum y-value of rep value. DEF=-100\r\n          -viz_ymax VIZ_YMAX    Viz: Maximum y-value of rep value. DEF=100\r\n          -corr_val CORR_VAL    Viz: String used to label the correlation value. DEF=\r\n                                'row median rankpoints'\r\n          -eVIPP                Use this option when doing pathway analysis, must also\r\n                                have JSON file\r\n          -JSON JSON            JSON file created by create_pathway_JSON.py. Contains\r\n                                dictionary of pathways and the associated ids\r\n          -gmt GMT              Gene set file in .gmt format\r\n          -min_genes MIN_GENES  Minimum amount of pathway genes found in data to run\r\n                                eVIPP on. DEF = 5\r\n          -viz_off              Will not perform eVIP viz step\r\n          -sparkler_off         Will not perform eVIP sparkler step\r\n          -input_dir INPUT_DIR  Path to directory of kallisto outputs\r\n          -gtf GTF              Gtf file used to convert transcript counts to gene\r\n                                counts\r\n          -control CONTROL      If multiple controls in the controls file, designate\r\n                                which to use for deseq2\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BrooksLabUCSC/eVIP2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BrooksLabUCSC/eVIP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eVIP2"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/tutorial_files/setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/pipeline_image.png"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/venn_image.png"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/RNF43_G659fs_spark_plots.png"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/16394042/122655833-7c497880-d10a-11eb-9ebb-1f3f956fef2f.png"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Set up and enter Docker container",
        "parent_header": [
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Pull the Docker container: `docker pull althornt/evip2_env`\r\n\r\nEnter the Docker container: `docker run -v /path/to/eVIP2:/eVIP2 -ti althornt/evip2_env`\r\n\r\nThe Docker container contains all the files needed to run the tutorial command below in `docker_tutorial_files`. Alternatively, `tutorial_files/setup.sh` downloads the abundance.tsv files from [GEO](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE141963) and formats into the original kallisto output directory structure and a gtf file can be downloaded from ensembl usinig `wget http://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz -P tutorial_files/`  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8625216573733834,
      "result": {
        "original_header": "`--infile` or `-zscore_gct`  (for eVIP only)",
        "type": "Text_excerpt",
        "value": "\r\nrun_eVIP.py input options\r\n1. `--infile` : RNA-seq log2 transformed and filtered gene expression table\r\n2. `-zscore_gct` : L1000 z-score \".gct\" file\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "eVIP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BrooksLabUCSC"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 206568,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 937,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 418,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "althornt",
          "type": "User"
        },
        "date_created": "2022-06-27T03:06:30Z",
        "date_published": "2022-07-19T19:57:20Z",
        "description": "eVIP2 as used in Thornton et al. STAR Protocols paper \"Predicting the impact of gene variants with expression-based variant impact phenotyping\"",
        "html_url": "https://github.com/BrooksLabUCSC/eVIP2/releases/tag/v1.0",
        "name": "v1.0 STAR Protocols release",
        "release_id": 72365668,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/releases/72365668",
        "value": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/releases/72365668",
        "zipball_url": "https://api.github.com/repos/BrooksLabUCSC/eVIP2/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "eVIP2"
        ],
        "type": "Text_excerpt",
        "value": "We provide a [docker container](https://hub.docker.com/r/althornt/evip2_env) to run eVIP2. The requirements are listed in the [environment.yml](https://github.com/BrooksLabUCSC/eVIP2/blob/master/misc/environment.yml) and the [Dockerfile](https://github.com/BrooksLabUCSC/eVIP2/blob/master/misc/Dockerfile) files.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run eVIP2",
        "parent_header": [
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "\r\n`cd eVIP2`\r\n\r\n`python2 run_eVIP2.py\r\n  -input_dir ../docker_tutorial_files/RNF43_kallisto_outputs\r\n  -out_directory tutorial_files/eVIP2_out\r\n  -sig_info tutorial_files/RNF43_sig.info\r\n  -c tutorial_files/controls.grp\r\n  -r tutorial_files/comparisons.tsv\r\n  -by_gene_color tutorial_files/RNF43_gene_label.tsv\r\n  -gmt tutorial_files/h.all.v6.0.symbols.gmt\r\n  -gtf ../docker_tutorial_files/Homo_sapiens.GRCh38.87.gtf  \r\n  -num_reps 4\r\n  -x_thresh 1.3 -y_thresh 1.3 -ymin -2 -ymax 4\r\n  -use_c_pval\r\n  -eVIPP `\r\n\r\n\r\n\r\nTutorial output for mutation-specific pathways in RNF43 G659fs (`eVIP2/tutorial_files/eVIP2_out/eVIPP_out/RNF43_G659fs/mutation_specific/eVIPP_sparkler_plots/RNF43_G659fs_spark_plots.png`):\r\n\r\n<img src=\"https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/misc/RNF43_G659fs_spark_plots.png\" width=\"400\">\r\n\r\neVIP2 also creates interactive sparkler plots to visualize the\r\n[overall mutation results](https://htmlpreview.github.io/?https://github.com/BrooksLabUCSC/eVIP2/blob/master/misc/RNF43.html)\r\nand the [pathway results per mutation](https://htmlpreview.github.io/?https://github.com/BrooksLabUCSC/eVIP2/blob/master/misc/RNF43_G659fs_mutation_specific.html). The html files can be found in `eVIP2/tutorial_files/eVIP2_out/`\r\n\r\n____________________\r\n![280x280_2](https://user-images.githubusercontent.com/16394042/122655833-7c497880-d10a-11eb-9ebb-1f3f956fef2f.png)\r\n\r\neVIP art by Cindy Liang ([Cindy's twitter](https://twitter.com/abluecorridor))\r\n"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:51:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "eVIP Usage",
        "parent_header": [
          "eVIP2"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo run the eVIP pipeline, use run_eVIP.py. We recommend the input data (--infile) has the low expressed genes filtered out and is log2 transformed. This can be done by using the filterGeneExpression.py script.\r\n\r\n`run_eVIP.py [-h] [--infile INFILE] [-zscore_gct ZSCORE_GCT]\r\n                   -out_directory OUT_DIRECTORY -sig_info SIG_INFO -c C -r R\r\n                   -num_reps NUM_REPS [-ie_filter IE_FILTER] [-ie_col IE_COL]\r\n                   [-i I] [-allele_col ALLELE_COL] [-conn_null CONN_NULL]\r\n                   [-conn_thresh CONN_THRESH]\r\n                   [-mut_wt_rep_thresh MUT_WT_REP_THRESH]\r\n                   [-disting_thresh DISTING_THRESH]\r\n                   [-mut_wt_rep_rank_diff MUT_WT_REP_RANK_DIFF] [-use_c_pval]\r\n                   [-cell_id CELL_ID] [-plate_id PLATE_ID] [-ref_allele_mode]\r\n                   [-x_thresh X_THRESH] [-y_thresh Y_THRESH] [-annotate]\r\n                   [-by_gene_color BY_GENE_COLOR] [-pdf PDF] [-xmin XMIN]\r\n                   [-xmax XMAX] [-ymin YMIN] [-ymax YMAX] [-viz_ymin VIZ_YMIN]\r\n                   [-viz_ymax VIZ_YMAX] [-corr_val CORR_VAL] [-eVIPP]\r\n                   [-JSON JSON] [-gmt gmt][-min_genes MIN_GENES] [-viz_off]\r\n                   [-sparkler_off]`\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "eVIP2 Usage",
        "parent_header": [
          "eVIP2"
        ],
        "type": "Text_excerpt",
        "value": "\r\n`usage: run_eVIP2.py [-h] [-min_tpm MIN_TPM] [--infile INFILE]\r\n                    [-zscore_gct ZSCORE_GCT] -out_directory OUT_DIRECTORY\r\n                    -sig_info SIG_INFO -c C -r R -num_reps NUM_REPS\r\n                    [-ie_filter IE_FILTER] [-ie_col IE_COL] [-i I]\r\n                    [-allele_col ALLELE_COL] [-conn_null CONN_NULL]\r\n                    [-conn_thresh CONN_THRESH]\r\n                    [-mut_wt_rep_thresh MUT_WT_REP_THRESH]\r\n                    [-disting_thresh DISTING_THRESH]\r\n                    [-mut_wt_rep_rank_diff MUT_WT_REP_RANK_DIFF] [-use_c_pval]\r\n                    [-cell_id CELL_ID] [-plate_id PLATE_ID]\r\n                    [-cond_max_diff_thresh COND_MAX_DIFF_THRESH]\r\n                    [-ref_allele_mode] [-x_thresh X_THRESH]\r\n                    [-y_thresh Y_THRESH] [-annotate]\r\n                    [-by_gene_color BY_GENE_COLOR] [-pdf PDF] [-xmin XMIN]\r\n                    [-xmax XMAX] [-ymin YMIN] [-ymax YMAX]\r\n                    [-viz_ymin VIZ_YMIN] [-viz_ymax VIZ_YMAX]\r\n                    [-corr_val CORR_VAL] [-eVIPP] [-JSON JSON] [-gmt GMT]\r\n                    [-min_genes MIN_GENES] [-viz_off] [-sparkler_off]\r\n                    [-input_dir INPUT_DIR] [-input_gene_tpm INPUT_GENE_TPM]\r\n                    -gtf GTF [-control CONTROL] [-tx2gene]`\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "type": "Text_excerpt",
        "value": "\r\nThis tutorial recreates the eVIP2 results presented in [Thornton et al. 2021](https://journals.plos.org/ploscompbiol/article/comments?id=10.1371/journal.pcbi.1009132)  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clone eVIP2 github directory",
        "parent_header": [
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "\r\nClone the eVIP2 repo to the desired path on your machine: `git clone https://github.com/BrooksLabUCSC/eVIP2.git`\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/BrooksLabUCSC/eVIP2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}