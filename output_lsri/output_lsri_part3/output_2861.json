{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Lazar, Aurel A. and Liu, Tingkai and Turkcan, Mehmet Kerem and Zhou, Yiyin",
        "doi": "10.7554/eLife.62362",
        "format": "bibtex",
        "title": "Accelerating with FlyBrainLab the Discovery of the Functional Logic of the Drosophila Brain in the Connectomic Era",
        "type": "Text_excerpt",
        "value": "@article{Lazar2021eLife,\n    journal = {eLife},\n    doi = {10.7554/eLife.62362},\n    year = {2021},\n    title = {Accelerating with FlyBrainLab the Discovery of the Functional Logic of the Drosophila Brain in the Connectomic Era},\n    author = {Lazar, Aurel A. and Liu, Tingkai and Turkcan, Mehmet Kerem and Zhou, Yiyin},\n}"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlyBrainLab/FlyBrainLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-05T20:40:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T13:17:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An interactive computing platform for studying the function of executable circuits constructed from fly brain data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9169310572247347,
      "result": {
        "original_header": "1.1 Installing Only User-side Components",
        "type": "Text_excerpt",
        "value": "FlyBrainLab is an interactive computing platform for studying the function of executable circuits constructed from fruit fly brain data. FlyBrainLab is designed with three main capabilities in mind: (i) 3D exploration and visualization of fruit fly brain data, (ii) creation of executable circuits directly from the explored and visualized fly brain data, and (iii) interactive exploration of the functional logic of the devised executable circuits. \nFlyBrainLab provides an environment where computational researchers can present configurable, executable neural circuits, and experimental scientists can interactively explore circuit structure and function ultimately leading to biological validation. \n- Aurel A. Lazar, Tingkai Liu, Mehmet K. Turkcan, and Yiyin Zhou, [Accelerating with FlyBrainLab the Discovery of the Functional Logic of the Drosophila Brain in the Connectomic EraFlyBrainLa](https://dx.doi.org/10.7554/eLife.62362), eLife, February, 2021. \nThis repository serves as the entry point for FlyBrainLab, where documentation and installation scripts can be found. \n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8860352874553376,
      "result": {
        "original_header": "1. Installation",
        "type": "Text_excerpt",
        "value": "FlyBrainLab consists of backend components and user-side components. There are a few options for installation. \n1. [**Installing only User-side Components**](#11-installing-only-user-side-components): provides instructions for installing a copy of all FlyBrainLab user-side components that, by default, connect to backend servers hosted by the Fruit Fly Brain Observatory Team. If you only need to visualize and explore the biological data, this will be the fastest way to install. However, the public backend servers do not provide capabilities for executing neural circuits on GPUs using [Neurokernel](https://neurokernel.github.io). It may also be helpful to visit [BrainMapsViz](http://www.fruitflybrain.org/#/brainmapsviz) where you can directly interact with the NeuroNLP web application without any installation.\n1. [**Full Installation**](#12-full-installation): provides instructions for installing both the user-side and backend components on the same machine. By default, FlyBrainLab will connect to the backend servers locally hosted.\n1. [**Docker Image**](#13-docker-image): We maintain [this Docker image](https://hub.docker.com/r/fruitflybrain/fbl) with a full FlyBrainLab installation. If you are set up with Docker with GPU support, this will be the easiest way to try FlyBrainLab that runs locally.\n1. [**Amazon Machine Image**](#14-amazon-machine-image): We also maintain AMI [`ami-02218ae5a3d1fd06d`](https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-02218ae5a3d1fd06d) that has the FlyBrainLab fully installed. It is helpful in case you do not have a machine with NVIDIA GPU handy, but still want to try out the full installation. \n- Supported OS (64-bit): Ubuntu 16.04 or later.\n- CUDA enabled GPU and [CUDA Toolkit](https://developer.nvidia.com/cuda-toolkit).\n- Minimum 30GB disk space, preferrably on SSD (including 3 default databases).\n- A machine with at least 32GB of memory is recommended. Otherwise reduce the size of `DATABASE_MEMORY` and `DATABASE_DISKCACHE` in the steps below.\n- The following ubuntu packages:\n`wget default-jre curl build-essential tar apt-transport-https tmux`.\n- [conda](https://docs.conda.io/en/latest/): See its [Installation Instructions](https://docs.conda.io/projects/conda/en/latest/user-guide/install/). \nTo cleanly remove the FlyBrainLab full installation:\n```bash\nrm -rf $FFBO_DIR\nrm -rf $ORIENTDB_ROOT\nrm -rf ~/.ffbo\nconda env remove -n $FFBO_ENV\nconda env remove -n $NLP_ENV\nconda env remove -n $CROSSBAR_ENV\n```\nwhere the environment variables should match the ones during installation.\nAlso remove the following 3 lines in your `~/.bashrc`:\n```bash\nexport ORIENTDB_ROOT_PASSWORD=root\nexport ORIENTDB_OPTS_MEMORY='-Xms1G -Xmx8G' # increase or decrease Xmx to fit the memory size of your machine\nexport ORIENTDB_SETTINGS=-Dstorage.diskCache.bufferSize=10240 # the amount of memory in MB used for disk cache. This plus Xmx above must be smaller than the total size of memory on your machine.\n```\n \nIf installation complete without error, please log out and log in again (or source .bashrc). Then go to\n[Launching FlyBrainLab from Full Installation](#launching-flybrainlab-from-full-installation). \n\n### 1.3 Docker Image \n- Supported OS: Linux, Windows (via Windows Subsystem for Linux 2 using [Microsoft Windows Insider Program](https://insider.windows.com/en-us/getting-started#install) Build version 20145 or higher).\n- CUDA enabled GPU (NVIDIA driver must be installed. For WSL2, get NVIDIA driver [here](https://developer.nvidia.com/cuda/wsl). See also [here](https://docs.nvidia.com/cuda/wsl-user-guide/index.html) for enabling CUDA on WSL2).\n- [Docker CE](https://docs.docker.com/engine/install/ubuntu/) 19.03 or higher.\n- [NVIDIA Container Toolkit](https://github.com/NVIDIA/nvidia-docker).\n- Minimum 30GB disk space, preferrably on SSD (including 3 default databases).\n- A machine with at least 32GB of memory is recommended. \nWe provide an Amazon Machine Image (AMI) that has the FlyBrainLab Docker Image built in and meets all its requirements. The AMI ID is `ami-02218ae5a3d1fd06d` in `us-east-1` region. It must be launched using a GPU instance (a Tesla GPU is recommended), with at least 50 GB of storage volume.\nYou can launch a GPU instance directly using the following link: \nDefault port is 8888. Go to browser with url: `localhost:8888`, and refer to [FlyBrainLab User Interface](#22-flybrainlab-user-interface). Note that if you are using an environment with a different name than flybrainlab, you will need to change the first line above accordingly. After installation, to learn more about how to use FlyBrainLab, check out the tutorials at the [Tutorials](https://github.com/FlyBrainLab/Tutorials) repository. \nwhere `$FFBO_DIR` is the directory you configured to install FlyBrainLab in. \nDefault port is 8888. Go to browser with url: `localhost:8888`, and refer to [FlyBrainLab User Interface](#22-flybrainlab-user-interface). \n#### Launching FlyBrainLab from FlyBrainLab Docker Image \nGo to browser with url: `localhost:9999`. Note that the default jupyter notebook port in the Docker container is `8888` and is mapped to `9999` on host machine. Then refer to [FlyBrainLab User Interface](#22-flybrainlab-user-interface). \nFor advanced usage of the Docker image, please refer to the [FlyBrainLab Docker Image Page](https://hub.docker.com/r/fruitflybrain/fbl). \nOnce FlyBrainLab is launched, you will find in the browser a typical JupyterLab interface, with an additional selection of FlyBrainLab buttons, as shown here: \nIf you encounter a popup window showing error, you may need to check if the configuration of servers is correct. See [Configuring Backend Servers](#23-configuring-backend-servers). \nIn order for a opened notebook to interact with the NeuroNLP and NeuroGFX windows, please select the kernel correspoding to the kernal used by the NeuroNLP window (e.g. `Untitled.ipynb` in the following figure). \nSeveral tutorials are available in the form of notebooks.\nThey are available in the [Tutorials](https://github.com/FlyBrainLab/Tutorials) repository. \nYou can also report bugs and get help in this [Issue Tracker](https://github.com/FlyBrainLab/FlyBrainLab/issues). \n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/FlyBrainLab/FlyBrainLab/wiki"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlyBrainLab/FlyBrainLab/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FlyBrainLab/FlyBrainLab/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FlyBrainLab/FlyBrainLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_full_installation_centos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_installer_ubuntu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_full_installation_ubuntu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_installer_mac.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_full_installation_ubuntu_develop.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlyBrainLab/Tutorials/raw/master/tutorials/osn_ephys_tutorial/images/osn_1.png"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.bionet.ee.columbia.edu/images/FBL_ui.jpg"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FlyBrainLab/Tutorials/raw/master/tutorials/osn_ephys_tutorial/images/osn_2.png"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "python -m pip install git+https://github.com/mkturkcan/autobahn-sync.git  git+https://github.com/FlyBrainLab/Neuroballad.git nxt_gem==2.0.1 git+https://github.com/mkturkcan/nxcontrol flybrainlab[full] neuromynerva\n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_installer.cmd",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.9747874790928708,
      "result": {
        "original_header": "1.1 Installing Only User-side Components",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img src=\"https://github.com/flybrainlab/flybrainlab/raw/master/flylablogo.png\" width=\"50%\">\n</p> \n<p align=\"center\">\n  <a href=\"https://twitter.com/flybrainobs\">\n        <img src=\"https://img.shields.io/twitter/follow/flybrainobs.svg?style=social&label=Follow\"\n             alt=\"Twitter Follow\">\n    </a>\n    <a href=\"https://github.com/FlyBrainLab/FlyBrainLab\">\n        <img src=\"https://img.shields.io/github/license/FlyBrainLab/FlyBrainLab.svg\"\n             alt=\"GitHub license\">\n    </a>\n    <a href=\"https://github.com/FlyBrainLab/FlyBrainLab\">\n        <img src=\"https://img.shields.io/github/last-commit/FlyBrainLab/FlyBrainLab.svg\"\n             alt=\"GitHub last commit\">\n    </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/FlyBrainLab/FlyBrainLab/wiki\">Wiki</a> | <a href=\"https://github.com/FlyBrainLab/Tutorials/\">Tutorials</a> | <a href=\"https://github.com/FlyBrainLab/FlyBrainLab/wiki/Troubleshooting\">Troubleshooting</a> \n</p> \n## 1. Installation \n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9609358432444975,
      "result": {
        "original_header": "1. Installation",
        "type": "Text_excerpt",
        "value": "1. [**Installing only User-side Components**](#11-installing-only-user-side-components): provides instructions for installing a copy of all FlyBrainLab user-side components that, by default, connect to backend servers hosted by the Fruit Fly Brain Observatory Team. If you only need to visualize and explore the biological data, this will be the fastest way to install. However, the public backend servers do not provide capabilities for executing neural circuits on GPUs using [Neurokernel](https://neurokernel.github.io). It may also be helpful to visit [BrainMapsViz](http://www.fruitflybrain.org/#/brainmapsviz) where you can directly interact with the NeuroNLP web application without any installation.\n1. [**Full Installation**](#12-full-installation): provides instructions for installing both the user-side and backend components on the same machine. By default, FlyBrainLab will connect to the backend servers locally hosted.\n1. [**Docker Image**](#13-docker-image): We maintain [this Docker image](https://hub.docker.com/r/fruitflybrain/fbl) with a full FlyBrainLab installation. If you are set up with Docker with GPU support, this will be the easiest way to try FlyBrainLab that runs locally.\n1. [**Amazon Machine Image**](#14-amazon-machine-image): We also maintain AMI [`ami-02218ae5a3d1fd06d`](https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-02218ae5a3d1fd06d) that has the FlyBrainLab fully installed. It is helpful in case you do not have a machine with NVIDIA GPU handy, but still want to try out the full installation. \n<h3 id=\"user-side\">1.1 Installing Only User-side Components</h4>  \n#### System Requirement \nAdditional requirement for macOS: \n- Xcode Command Line Tools: use the following command to install:\n```zsh\nxcode-select --install\n```\nIf you encounter error:\n```\nCan\u2019t install the software because it is not currently available from the Software Update server.\n```\n \nyou can download the installer directly at https://developer.apple.com/download/more/ (Apple ID Login required), and select the latest stable version. If you encounter further error, you can try installing Xcode and then the Command Line Tools again. \n#### Installing the Latest Release Version \n##### Linux/macOS\n```bash\nconda create -n flybrainlab python=3.9 git -y\nconda activate flybrainlab\npython -m pip install git+https://github.com/mkturkcan/autobahn-sync.git \\\n                      git+https://github.com/FlyBrainLab/Neuroballad.git \\\n                      nxt_gem==2.0.1 \\\n                      git+https://github.com/mkturkcan/nxcontrol \\\n                      flybrainlab\\[full\\] \\\n                      neuromynerva\n```\n \nNote that the line `conda activate flybrainlab` above can raise an error. If that happens, you should use `source activate flybrainlab` instead. \n\nAfter installation finishes, go to [Launching FlyBrainLab from User-side Only Installation](#launching-flybrainlab-from-user-side-only-installation). \n##### Windows\n```bash\nconda create -n flybrainlab python=3.9 git -y\nactivate flybrainlab\npython -m pip install git+https://github.com/mkturkcan/autobahn-sync.git git+https://github.com/FlyBrainLab/Neuroballad.git nxt_gem==2.0.1 git+https://github.com/mkturkcan/nxcontrol flybrainlab[full] neuromynerva\n```\n \n#### Build from Source Step-by-step\nIf you want to use the latest development code instead of the release, you can build FlyBrainLab using the following command line code:\n```bash\n# create anaconda environment called flybrainlab with appropriate packages installed\nconda create -n flybrainlab python=3.9 git -c conda-forge -y\n# activate the flybrainlab environment just created\nconda activate flybrainlab\n# if you have conda<4.4, you may need to use `source activate flybrainlab` instead\n# If you are on Windows, use `activate flybrainlab` instead.\n\n# Create a preferred installation directory and go into that directory, For example:\n# mkdir ~/MyFBL\n# cd ~/MyFBL\n\n# Clone packages into your preferred directory (~/MyFBL) in the example above\ngit clone https://github.com/FlyBrainLab/Neuroballad.git\ngit clone https://github.com/FlyBrainLab/FBLClient.git\ngit clone https://github.com/FlyBrainLab/NeuroMynerva.git\n\n# Install FBLClient\n# If you are a user \npython -m pip install ./Neuroballad\npython -m pip install ./FBLClient\\[full\\]\n\n# If you are a developer\n# python -m pip install -e ./Neuroballad\n# python -m pip install -e ./FBLClient[full]\n\n# Install NeuroMynerva\ncd ../NeuroMynerva\n# If you're a user using JupyterLab 3.x\npython -m pip install .\njupyter lab\n\n# If you're a user using Jupyter Lab 2.x\n# conda install nodejs cookiecutter git yarn -c conda-forge -y\n# jlpm\n# jupyter labextension install .\n# jupyter lab\n\n# If you're a developer using JupyterLab 3.x\n# python -m pip install -e .\n# jupyter labextension develop . --overwrite\n# jlpm run watch\n# jupyter lab  # in separate terminal\n\n# If you're a developer using JupyterLab 2.x\n# conda install nodejs cookiecutter git yarn -c conda-forge -y\n# jlpm\n# jupyter labextension link .\n# jlpm run watch:src \n# jupyter lab --watch  # in separate terminal\n``` \nYou may be prompted. \nAfter installation, go to [Launching FlyBrainLab from User-side Only Installation](#launching-flybrainlab-from-user-side-only-installation). \n- Supported OS (64-bit): Ubuntu 16.04 or later.\n- CUDA enabled GPU and [CUDA Toolkit](https://developer.nvidia.com/cuda-toolkit).\n- Minimum 30GB disk space, preferrably on SSD (including 3 default databases).\n- A machine with at least 32GB of memory is recommended. Otherwise reduce the size of `DATABASE_MEMORY` and `DATABASE_DISKCACHE` in the steps below.\n- The following ubuntu packages:\n`wget default-jre curl build-essential tar apt-transport-https tmux`.\n- [conda](https://docs.conda.io/en/latest/): See its [Installation Instructions](https://docs.conda.io/projects/conda/en/latest/user-guide/install/). \n#### Installing from Script \nDownload the installation script [`fbl_full_installation_ubuntu.sh`](https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/fbl_full_installation_ubuntu.sh). \nUncomment the following code in the script if you have not installed all required Ubuntu packages (requires sudo privilege):\n```bash\n#echo \"Installing prerequisites\"\n#sudo apt update\n#sudo apt install -y wget default-jre curl build-essential tar apt-transport-https tmux sendmail graphviz graphviz-dev\n```\nThen edit the following lines:\n```bash\n# existing directories\nCUDA_ROOT=/usr/local/cuda # root directory where you installed cuda\n\n# To be installed\nBASE=$HOME # base directory where the folders will be installed\nCROSSBAR_ENV=crossbar # conda environment for crossbar/ffbo processor\nFFBO_ENV=ffbo # conda environment for main fbl\nNLP_ENV=ffbo_legacy # additional conda environment for NLP\nFFBO_DIR=$BASE/ffbo # directory to store local repositories\nORIENTDB_ROOT=$BASE/orientdb # root directory where you want to install OrientDB\nFFBO_PORT=8081 # main port number of the FFBO processor, make sure to use an uncommon port that will not be used by other program\nORIENTDB_BINARY_PORT=2424 # Binary port of OrientDB, please change this if you are on running this on a multi-user machine to avoid running OrientDB on a wrong port\nORIENTDB_HTTP_PORT=2480 # HTTP port of OrientDB, please change this if you are on running this on a multi-user machine to avoid running OrientDB on a wrong port\nDATABASE_MEMORY=8G # maximum amount of memory you want to assign to the database for java heap in GB\nDATABASE_DISKCACHE=10240 # amount of memory assigned to caching disk in MB\n```\nThen run the script in `bash`:\n```bash\nbash fbl_full_installation_ubuntu.sh\n```\n \nIf installation fails, and you want to reinstall, please remove the previous (perhaps partial) installation. \nTo cleanly remove the FlyBrainLab full installation:\n```bash\nrm -rf $FFBO_DIR\nrm -rf $ORIENTDB_ROOT\nrm -rf ~/.ffbo\nconda env remove -n $FFBO_ENV\nconda env remove -n $NLP_ENV\nconda env remove -n $CROSSBAR_ENV\n```\nwhere the environment variables should match the ones during installation.\nAlso remove the following 3 lines in your `~/.bashrc`:\n```bash\nexport ORIENTDB_ROOT_PASSWORD=root\nexport ORIENTDB_OPTS_MEMORY='-Xms1G -Xmx8G' # increase or decrease Xmx to fit the memory size of your machine\nexport ORIENTDB_SETTINGS=-Dstorage.diskCache.bufferSize=10240 # the amount of memory in MB used for disk cache. This plus Xmx above must be smaller than the total size of memory on your machine.\n```\n \nIf installation complete without error, please log out and log in again (or source .bashrc). Then go to\n[Launching FlyBrainLab from Full Installation](#launching-flybrainlab-from-full-installation). \n- Supported OS: Linux, Windows (via Windows Subsystem for Linux 2 using [Microsoft Windows Insider Program](https://insider.windows.com/en-us/getting-started#install) Build version 20145 or higher).\n- CUDA enabled GPU (NVIDIA driver must be installed. For WSL2, get NVIDIA driver [here](https://developer.nvidia.com/cuda/wsl). See also [here](https://docs.nvidia.com/cuda/wsl-user-guide/index.html) for enabling CUDA on WSL2).\n- [Docker CE](https://docs.docker.com/engine/install/ubuntu/) 19.03 or higher.\n- [NVIDIA Container Toolkit](https://github.com/NVIDIA/nvidia-docker).\n- Minimum 30GB disk space, preferrably on SSD (including 3 default databases).\n- A machine with at least 32GB of memory is recommended. \nPull the [FlyBrainLab Docker Image](https://hub.docker.com/r/fruitflybrain/fbl):\n```\ndocker pull fruitflybrain/fbl:latest\n```\n \nhttps://console.aws.amazon.com/ec2/v2/home?region=us-east-1#LaunchInstanceWizard:ami=ami-02218ae5a3d1fd06d \n#### Launching FlyBrainLab from User-side Only Installation\n```bash\nconda activate flybrainlab\njupyter lab\n```\n \nDefault port is 8888. Go to browser with url: `localhost:8888`, and refer to [FlyBrainLab User Interface](#22-flybrainlab-user-interface). Note that if you are using an environment with a different name than flybrainlab, you will need to change the first line above accordingly. After installation, to learn more about how to use FlyBrainLab, check out the tutorials at the [Tutorials](https://github.com/FlyBrainLab/Tutorials) repository. \n#### Launching FlyBrainLab from Full Installation\n```bash\n$FFBO_DIR/bin/start.sh\n````\n \nwhere `$FFBO_DIR` is the directory you configured to install FlyBrainLab in. \nA set of NeuroArch databases should have been downloaded during the installation process. For more information, see the [Dataset Version Tracker](https://github.com/FlyBrainLab/datasets). After installation, to learn more about how to use FlyBrainLab, check out the tutorials at the [Tutorials](https://github.com/FlyBrainLab/Tutorials) repository. \nAssuming all GPUs will be available to the docker container, run\n```bash\ndocker run --name fbl --gpus all -p 9999:8888 -it fruitflybrain/fbl:latest\n```\n \nYou will be prompted to download datasets. Select to install the databases you needed. For more information, see the [Dataset Version Tracker](https://github.com/FlyBrainLab/datasets). \n(**TIP**): If you would like to keep the databases after the docker container is removed, bind an empty directory on your machine when launching the container:\n```bash\ndocker run --name fbl --gpus all -p 9999:8888 -v /path/to/directory:/home/ffbo/orientdb/databases -it fruitflybrain/fbl:latest\n```\n \n<p align=\"center\">\n  <img src=\"https://github.com/FlyBrainLab/Tutorials/raw/master/tutorials/osn_ephys_tutorial/images/osn_1.png\" width=\"80%\">\n</p> \n<p align=\"center\">\n  <img src=\"http://www.bionet.ee.columbia.edu/images/FBL_ui.jpg\" width=\"80%\">\n</p> \nIf you encounter a popup window showing error, you may need to check if the configuration of servers is correct. See [Configuring Backend Servers](#23-configuring-backend-servers). \n<p align=\"center\">\n  <img src=\"https://github.com/FlyBrainLab/Tutorials/raw/master/tutorials/osn_ephys_tutorial/images/osn_2.png\" width=\"80%\">\n</p> \nPlease read https://github.com/FlyBrainLab/FlyBrainLab/wiki/Installation for instructions on adding/changing servers. \nYou can also report bugs and get help in this [Issue Tracker](https://github.com/FlyBrainLab/FlyBrainLab/issues). \nComing Soon!\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8476354195913375,
      "result": {
        "original_header": "1. Installation",
        "type": "Text_excerpt",
        "value": "Assuming all GPUs will be available to the docker container, run\n```bash\ndocker run --name fbl --gpus all -p 9999:8888 -it fruitflybrain/fbl:latest\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FlyBrainLab/FlyBrainLab/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2018, FlyBrainLab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/flybrainlab/flybrainlab/raw/master/flylablogo.png"
      },
      "source": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FlyBrainLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FlyBrainLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 38877,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 8631,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 214,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FlyBrainLab/FlyBrainLab/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:35:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}