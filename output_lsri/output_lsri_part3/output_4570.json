{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing AdmixPipe",
        "parent_header": [
          "AdmixPipe v3: A Method for Parsing and Filtering VCF and PLINK Files for Admixture Analysis"
        ],
        "type": "Text_excerpt",
        "value": "If using version 3.0+ of this pipeline, please cite the following paper:\n\nS.M. Mussmann, M.R. Douglas, T.K. Chafin, M.E. Douglas 2023. ADMIXPIPE v3: Facilitating Population Structure Delimitation from SNP Data. Bioinformatics Advances 3(1):vbad168. DOI: 10.1093/bioadv/vbad168\n\nIf using v2.x or earlier, please cite the following paper:\n\nS.M. Mussmann, M.R. Douglas, T.K. Chafin, M.E. Douglas 2020. AdmixPipe: population analyses in ADMIXTURE for non-model organisms. BMC Bioinformatics 21:337. DOI: 10.1186/s12859-020-03701-4\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/stevemussmann/admixturePipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-07T14:29:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-05T22:54:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A pipeline that accepts a VCF file to run through Admixture"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.98312507775199,
      "result": {
        "original_header": "IMPORTANT CHANGES IN v3.2 (updated 11-November-2023)",
        "type": "Text_excerpt",
        "value": "This README.md file is for AdmixPipe v3.2, which has several changes, bug fixes, and enhancements to existing modules. Two new modules were also developed for the following purposes: \n1) submission of admixturePipeline.py output to the CLUMPAK pipeline.\n2) assessment of the best K using the evalAdmix package (http://www.popgen.dk/software/index.php/EvalAdmix).  \nSome outputs from AdmixPipe v2.0 are not compatible with v3.2 because json files are now utilized to record data and file names from early parts of the pipeline that are needed for later modules. If you require the v2.0 scripts for any reason, they are still available from the prior releases on this page (v2.0.2 was the final release of AdmixPipe v2.0). \nOther important notes for v3.2: \n1) AdmixPipe v3.2 requires Python 3.\n2) Some command line options have changed slightly (especially long form commands - you can retrieve the current list of commands from any module by executing it with the --help option).\n3) A Docker container is now the preferred method for installation. The code in this github repository may sometimes contain new features that have not yet been committed to the Docker container.\n4) CLUMPAK is now installed in the Docker container.\n5) The submitClumpak.py module will submit admixturePipeline.py outputs to the Docker container installation of CLUMPAK ('Main pipeline' and 'BestK' pipeline).\n7) The data processing and plotting functions of the cvSum.py module underwent a complete rewrite for v3.2.\n8) PLINK .bed and .ped files are accepted as direct input. Individual-based missing data filtering is not enabled for PLINK files.\n9) The '-r / --remove' option was removed from admixturePipeline.py. This option became redundant because individuals not listed in your popmap are now automatically filtered by both VCFtools and PLINK. \n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686493118858741,
      "result": {
        "original_header": "1. admixturePipeline.py: <a name=\"admixturepipeline\"></a>",
        "type": "Text_excerpt",
        "value": "This module takes standard genotype data files (VCF or BED/PED) as input, conducts filtering according to user-specified parameters, performs all necessary file conversions, and finally executes Admixture on the filtered dataset according to user-specified parameters.  \n**New feature in AdmixPipe v3.2:** This module now filters individuals that are absent from your popmap file. For example, if you want to exclude an individual sample from your analysis, just leave it out of your popmap file and it will be removed from your dataset before admixture is executed. \n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.930399060589938,
      "result": {
        "original_header": "Outputs:<a name=\"admixoutputs\"></a>",
        "type": "Text_excerpt",
        "value": "For the example code above, the following outputs will be produced:\n* **input.ped**, **input.map**: text-based PLINK files in --recode12 format (produced only if you input a VCF file)\n* **results.zip**: a compressed results file (**CLUMPAK input**)\n* **input.{k}\\_{r}.P** and **input.{k}\\_{r}.Q**: Admixture output files for each iteration {r} of each K value {k}\n* **input\\_pops.txt**: a list of population data (**CLUMPAK input**)\n* **input.recode.strct_in**: a structure-formatted file of filtered SNPs\n* **input.qfiles.json**: a json file containing all .Q file names per K value that were produced by this pipeline (new in AdmixPipe v3.2; utilized by runEvalAdmix.py module) \nOnce you have finished running this stage of the pipeline, you can submit the two above files designated as **CLUMPAK input** to the online resource CLUMPAK (http://clumpak.tau.ac.il/), or use the submitClumpak.py module in the Docker container.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9731056810072565,
      "result": {
        "original_header": "2. submitClumpak.py <a name=\"submitclumpak\"></a>",
        "type": "Text_excerpt",
        "value": "This module was developed to automate the process of submitting admixturePipeline.py results to the CLUMPAK pipeline. As of AdmixPipe v3.2, this module now interacts with the CLUMPAK installation within the Docker container. If you cannot or do not want to use the Docker container, you can [manually configure](#clumpakinstall) a Linux computer to make this module interact with the CLUMPAK webserver. If you do not want to use this module at all, manual submission to the CLUMPAK webserver remains a viable and easy option that will not significantly disrupt the pipeline flow.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9527203016573533,
      "result": {
        "original_header": "Docker or local execution",
        "type": "Text_excerpt",
        "value": "**The -M and -b options are utilized to run locally on your machine or in the Docker container.**\nIf running locally or in Docker, you do not need to submit an email address. Executing the CLUMPAK main pipeline in the Docker container can be accomplished as follows:\n```\nsubmitClumpak.py -p prefix -M\n```\n**The input necessary for the BestK pipeline (-b option) is written by cvSum.py. If you want to use this function, return here after running [distructRerun.py](#distructrerun) and [cvSum.py](#cvsum)** You can execute this part of CLUMPAK locally through the Docker container with the following command. It should be issued from the directory where you executed cvSum.py. \n```\nsubmitClumpak.py -b\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8897102466552937,
      "result": {
        "original_header": "Webserver",
        "type": "Text_excerpt",
        "value": "**A friendly reminder: the webserver submission function does not work in the Docker container.** \nChange directories into the folder where the admixturePipeline.py module wrote all output. Execute submitClumpak.py from this directory. The only things you must specify are the prefix of your VCF file (i.e., the VCF file name without the .vcf extension), an email address which is submitted to the online CLUMPAK server, and the boolean option to submit to the server (-w). For example:\n```\nsubmitClumpak.py -p prefix -e email@domain.com -w\n```\n \nList of current options:<a name=\"clumpakoptions\"></a>\n* **-b / --bestk:** Run the CLUMPAK BestK pipeline locally in the Docker container (or on your computer if you performed a manual install of CLUMPAK). \n* **-d / --DISTRUCT:** \\[optional\\] Provide user-defined DISTRUCT threshold for minimal distruct cluster threshold. Must be >=0 and <=0.95.\n* **-e / --email:** Specify your email address for submission to the CLUMPAK web server.\n* **-m / --MCL:** \\[optional\\] Provide user-defined MCL threshold for similarity scores. Must be >=0 and <=0.99.\n* **-M / --mainpipeline:** Run the CLUMPAK main pipeline locally in the Docker container (or on your computer).\n* **-p / --prefix:** Specify the prefix from your admixpipe run. This will either be the prefix of your plink file (i.e., without .bed or .map extension), or same name as your VCF file without the .vcf file extension.\n* **-r / --results:** Provide the results.zip file from your admixpipe run. Specifying the name is only necessary if you have changed it from the default of 'results.zip'.\n* **-w / --web:** Submit your results to the main pipeline of the CLUMPAK web server (option not available in the Docker container).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8688428932046055,
      "result": {
        "original_header": "Outputs:<a name=\"clumpakoutputs\"></a>",
        "type": "Text_excerpt",
        "value": "The -w option of the module does not write any output to your computer. You must retrieve the zipped CLUMPAK output from their webserver after your job completes running. The `wget` command is available from within the Docker container for this purpose. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9906808745251281,
      "result": {
        "original_header": "3. distructRerun.py <a name=\"distructrerun\"></a>",
        "type": "Text_excerpt",
        "value": "This module is designed to streamline the process of re-running distruct on the major and minor clusters found by CLUMPAK. \n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9233275915673238,
      "result": {
        "original_header": "Usage:<a name=\"distructusage\"></a>",
        "type": "Text_excerpt",
        "value": "If necessary, download your results from the CLUMPAK server. This should give you a zipped folder of your results, named something like \"1516030453.zip\". If you are using the Docker container, obtain the result of the submitClumpak.py module from your `clumpakOutput/` subdirectory. You should put this file into the \"data\" folder created on your computer when you launched Docker through the runDocker.sh script. First, unzip this folder:\n```\nunzip 1516030453.zip\n```\nThis should produce a folder in your current directory named 1516030453.  Now, run distructRerun.py on your folder.  The command will be something like the below command.  In this example, -a is used to provide the path to the directory of results produced by admixturePipeline.py, -d is used to give the name of the directory that the program will use as input, -k (lower case) specifies the lowest clustering value that you tested in Admixture, and -K (upper case) specifies the highest clustering value you tested.\n```\ndistructRerun.py -a example_admixturePipeline_result/ -d 1516030453/ -k 1 -K 12\n```\n \nThis should have produced a file named MajorClusterRuns.txt in the directory from which you executed distructRerun.py.  This file contains all of the names of the .stdout files produced by my admixturePipeline repository that correspond to each of the major clusters recovered by CLUMPAK. AdmixPipe v3.2 also produces a similar file for each Minor Cluster detected by CLUMPAK (if any were present). These will be named 'MinorClusterRuns.K{i}.{j}, where '{i}' is the associated K value, and '{j}' represents sequentially numbered minor clusters. You should also have a file named cv_file.MajClust.txt that contains all of the CV values for your major cluster runs, and a separate file for each minor cluster (e.g., cv_file.MinClust.K{i}.{j}.  Finally, if you have chosen to run distruct itself (by invoking the -r option), then distruct will return a postscript file (.ps) for each major and minor cluster of each K value that you evaluated. These .ps files will appear in a 'best_results' subdirectory within your CLUMPAK output folder (e.g., '1516030453/best_results/' for the above example). The rest of the processing can be accomplished through cvSum.py and runEvalAdmix.py. \nIf you did not have the pipeline automatically execute distruct, you can do it manually using the drawparams files output by distructRerun.py. For example:\n```\ndistruct -d drawparams.8\n```\nAs of AdmixPipe v3.2, ghostscript is now installed in the Docker container. Any .ps files can be converted to .pdf with the `ps2pdf` command. For example:\n```\nps2pdf K8.ps\n```\n \nList of current options:<a name=\"distructoptions\"></a>\n* **-a / --ad:** Specify the directory containing the output of your admixturePipeline.py run (required).\n* **-c / --colorbrew:** Specify a color palette from the colorbrewer options in distruct 1.1. Enter the prefix of the color palette you want (for example, BrBG) and the pipeline will take care of adding the appropriate K value and palette suffix. If a palette is not available at a particular K value, then distruct will revert to the default palette. (optional, default = BrBG)\n* **-d / --directory:** Specify the directory containing the output of your CLUMPAK run (required).\n* **-k / --minK:** Specify the minimum K value to be tested (required).\n* **-K / --maxK:** Specify the maximum K value to be tested (required).\n* **-m / --majc:** Provide the name of the output file that will hold the names of runs corresponding to the major clusters (optional; default = MajorClusterRuns.txt)\n* **-p / --pathtocolorbrew:** Specify the full path to the location of distruct1.1's colorbrewer files on your computer (not necessary if you are using the Docker container). \n* **-r / --run:** Boolean switch. Using this option will run distruct for each drawparams file. (optional, default = off)\n* **-s / --sort:** Boolean switch. Use this option to sort barplots by individual q values. Sorting might not be perfect. (optional, default = off)\n* **-w / --width:** Provide the width of each individual bar in the distruct output (optional; default = 2). \nExperimental options:\n* **-l / --otl:** Specify a custom toplabels file. This option may allow you to utilize the distructRerun.py segment of this pipeline on STRUCTURE data processed by CLUMPAK. This has not been robustly tested. Use at your own risk.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.966575558536457,
      "result": {
        "original_header": "Outputs:<a name=\"distructoutputs\"></a>",
        "type": "Text_excerpt",
        "value": "The following outputs will be produced in the directory where distructRerun.py was executed:\n* **MajorClusterRuns.txt**: contains all of the names of the .stdout files produced by admixturePipeline.py that correspond to each of the major clusters recovered by CLUMPAK.\n* **MinorClusterRuns.K{i}.{j}**: contains the names of the .stdout files associated with the jth minor cluster for K=i. These files will not appear if there were no minor clusters detected by CLUMPAK.\n* **cv_file.MajClust.txt**: CV values for all of the major clusters\n* **cv_file.MinClust.K{i}.{j}**: CV values for the jth minor cluster for K=i. These files will not appear if there were no minor clusters detected by CLUMPAK.\n* **loglikelihood_file.MajClust.txt**: Loglikelihood values for all of the major clusters\n* **loglikelihood_file.MinClust.K{i}.{j}**: Loglikelihood values for the jth minor cluster for K=i. These files will not appear if there were no minor clusters detected by CLUMPAK.\n* **cvRuns.json**: Run names associated with each major and minor cluster, stored in JSON format. This file is stored in your admixturePipeline.py output directory, and will be utilized by runEvalAdmix.py.\n* **qfilePaths.json**: CLUMPP output .Q files associated with each major and minor cluster, stored in JSON format. This file is stored in your admixturePipeline.py output directory, and will be utilized by runEvalAdmix.py.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988569065149225,
      "result": {
        "original_header": "4. cvSum.py <a name=\"cvsum\"></a>",
        "type": "Text_excerpt",
        "value": "This code was written to graphically summarize the variability of cross-validation values and log likelihood scores across multiple runs of admixture.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8982442953096269,
      "result": {
        "original_header": "Usage:<a name=\"cvusage\"></a>",
        "type": "Text_excerpt",
        "value": "Execute the cvSum.py script in the directory containing your cv_file.MajClust.txt and loglikelihood_file.MajClust.txt outputs from distructRerun.py to generate the summary information for your major and minor cluster runs identified by CLUMPAK. Generally no command line options are required unless you have changed names of files output by prior modules of this pipeline. For example:\n```\ncvSum.py\n```\n \nThe first output of this program is a plot of boxplots representing the variation in the CV values found by different runs of ADMIXTURE.  The X axis of the plot corresponds to K values, while the Y axis corresponds to the CV values.  Lower CV values are preferred.  The plot file name will be same as your input file, but with a .png extension (i.e., \"cv_file.MajClust.png\"). Boxplots for minor clusters, if present, are plotted alongside the major cluster CV value distributions in this same plot. The summary statistics are saved in a file named \"cv_output.txt\" unless you use the -o option to specify a custom file name.  As of version 3.2, the same summary statistics and boxplots are presented for loglikelihood values. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860524804816566,
      "result": {
        "original_header": "Outputs:<a name=\"cvoutputs\"></a>",
        "type": "Text_excerpt",
        "value": "The following outputs will be produced in the directory where cvSum.py was executed:\n* **cv_file.MajClust.png**: Boxplot chart providing a visual summary of your your CV values for both major and minor cluster runs.\n* **cv_output.txt**: Text file containing summary statistics of CV values for each K.\n* **loglikelihood_file.MajClust.png**: Boxplot chart providing a visual summary of your your loglikelihood values for both major and minor cluster runs.\n* **loglikelihood_output.txt**: Text file containing summary statistics of loglikelihood values for each K.\n* **ll_all.txt**: Text file containing log likelihood values for each replicate. This output is compatible with the BestK pipeline in CLUMPAK.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9935381529676219,
      "result": {
        "original_header": "5. runEvalAdmix.py <a name=\"runevaladmix\"></a>",
        "type": "Text_excerpt",
        "value": "This module aids in evaluating appropriateness of K values by running the evalAdmix program on each Admixture replicate, as well as the summarized .Q outputs from CLUMPAK for all major and minor clusters. \n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9005360135453787,
      "result": {
        "original_header": "Usage:<a name=\"evalusage\"></a>",
        "type": "Text_excerpt",
        "value": "Change directories to the folder containing the output from admixturePipeline.py. You must be in this folder to execute commands for runEvalAdmix.py because it requires JSON files that were written in this location by other pipeline modules (specifically, admixturePipeline.py and distructRerun.py). These are new outputs as of AdmixPipe v3.2, so you cannot execute the runEvalAdmix.py module on outputs from earlier AdmixPipe versions. The following is an example command for this module:\n```\nrunEvalAdmix.py -p prefix -k 1 -K 12 -m popmap.txt -n 8\n```\n \nList of current options:<a name=\"evaloptions\"></a>\n* **-b / --bed:** Boolean switch to indicate that you originally ran admixturePipeline.py by directly inputting a pre-filtered .bed file (default = off/False).\n* **-p / --prefix:** Specify your .ped or .bed file prefix from your initial admixturePipeline.py run. If you input a VCF file, this will be the name of that VCF file, except without the .vcf extension (required).\n* **-k / --minK:** Specify the minimum K value (required).\n* **-K / --maxK:** Specify the maximum K value (required).\n* **-m / --popmap:** Specify a tab-delimited population map (sample --> population) (required).\n* **-M / --mc:** Provide path to the file that will hold names of runs corresponding to the major clusters (optional; should not be necessary unless you have renamed files or specified custom names).\n* **-R / --evalAdmixRcode:** Provide the path to where visualization functions for evalAdmix are stored on your machine. (Not necessary if using the Docker container)\n* **-n / --np:** Provide the number of processors to use for evalAdmix (optional; default=1).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/stevemussmann/admixturePipeline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "stevemussmann/admixturePipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AdmixPipe v3: A Method for Parsing and Filtering VCF and PLINK Files for Admixture Analysis"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/Docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/Docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/Docker/runDocker.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/Docker/buildDocker.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/96546673"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Setup",
        "parent_header": [
          "AdmixPipe v3: A Method for Parsing and Filtering VCF and PLINK Files for Admixture Analysis",
          "Installation &amp; Setup for AdmixPipe v3:"
        ],
        "type": "Text_excerpt",
        "value": "This pipeline was written for Unix based operating systems, such as the various Linux distributions and Mac OS X. As of v3.2, we have achieved greater platform independence and ease of installation through development of a Docker container. This is the preferred method for running AdmixPipe. To get started, install [Docker](https://www.docker.com/) on your machine and pull the Docker image using the following command:\n\n```\ndocker pull mussmann/admixpipe:3.2\n```\n\nLaunch the container by first placing the [runDocker.sh script](https://github.com/stevemussmann/admixturePipeline/blob/master/Docker/runDocker.sh) in the folder from which you want to run the container. Then execute the script as shown below.\n\n```\n./runDocker.sh\n```\nThis script creates a folder named \"data\" in the directory on your machine from which you launched the Docker container. You can put any input files for AdmixPipe v3.2 into this folder and they will be accessible inside the container (in /app/data/). Any outputs written to this folder and any of its subdirectories will still be accessible after you exit the container. If you write any output to other locations inside the container, they will be lost upon exit. All required AdmixPipe modules and dependency programs have been configured within the container and, unless noted otherwise, will function with the commands provided throughout the remainder of this documentation. \n\nIf running the runDocker.sh script on your machine requires sudo permission, you can create a docker users group and add your username to that group. This can be accomplished with the following, if you are running the command from your own user account. If you are running the command for another user, replace `${USER}` with their username:\n\n```\nsudo groupadd docker\nsudo usermod -aG docker ${USER}\n```\n\nIf you add a docker users group you may need to restart your computer before the changes take effect.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual Setup",
        "parent_header": [
          "AdmixPipe v3: A Method for Parsing and Filtering VCF and PLINK Files for Admixture Analysis",
          "Installation &amp; Setup for AdmixPipe v3:"
        ],
        "type": "Text_excerpt",
        "value": "Manual installation of AdmixPipe v3.2 is not advised due to the many required dependencies. However, if you insist upon installing the pipeline manually, I have provided detailed instructions [at the end of this guide](#manualinstall). \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual Installation <a name=\"manualinstall\"></a>",
        "type": "Text_excerpt",
        "value": "Manual installation is possible, but not advised. If you must install manually, you should get started by cloning this repository and making sure that Python 3.8 or higher is installed. Under Ubuntu, I install the following packages to ensure everything necessary is installed for Python:\n\n```\napt-get install python3.8 python3-pip python3-setuptools python3-dev\n```\n\nThen install the program dependencies listed below. Having administrator privileges will make manual configuration easier. Many installation commands are provided assuming you are using Ubuntu, or some other Debian-based distribution. You might need to independently determine equivalent commands or package names on your operating system if you are not using Ubuntu.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Special Instructions for Each Module:",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "1. [admixturePipeline.py](#admixinstall)\n2. [submitClumpak.py](#clumpakinstall)\n3. [distructRerun.py](#distructinstall)\n4. [cvSum.py](#cvinstall)\n5. [runEvalAdmix.py](#evalinstall)\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and Setup for admixturePipeline.py:<a name=\"admixinstall\"></a>",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:"
        ],
        "type": "Text_excerpt",
        "value": "There are no additional dependencies for this module, assuming you have already installed the latest versions of Admixture, PLINK, and VCFtools (including vcf-query) as described above. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Setup for submitClumpak.py:<a name=\"clumpakinstall\"></a>",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:"
        ],
        "type": "Text_excerpt",
        "value": "Manual configuration of this module can be complicated depending upon your desired functionality (webserver utilization vs. local CLUMPAK installation), and your operating system. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Webserver Configuration",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:",
          "Installation &amp; Setup for submitClumpak.py:<a name=\"clumpakinstall\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Webserver configuration is relatively easy for Ubuntu users because it just requires installation of selenium (Python library) and the Firefox gecko driver, both of which can be installed from package repositories. \n\nThis module has three requirements for usage with the CLUMPAK webserver:\n1. selenium (python library)\n2. Firefox web browser\n3. Firefox gecko driver (firefox-geckodriver)\n\nCurrently, Firefox is the only supported web browser. Installation of selenium and the gecko driver can be accomplished with the following commands (you may have to run each as 'sudo' depending upon your system configuration and/or use a different package manager and/or package name for the gecko driver installation if you are not using Ubuntu or another Debian-based distribution):\n\nselenium:\n```\npip3 install selenium\n```\n\ngecko driver:\n```\napt-get install firefox-geckodriver\n```"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Local CLUMPAK Installation",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:",
          "Installation &amp; Setup for submitClumpak.py:<a name=\"clumpakinstall\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Manual installation of CLUMPAK can be achieved, but I highly recommend 1) using the Docker container or 2) manually submitting your admixturePipeline.py results to the CLUMPAK webserver as alternatives. This is because manual CLUMPAK installation requires several dependencies and modifications of the CLUMPAK code. But if you insist on conducting a full manual installation of AdmixPipe, here is how I got it running in the Docker container: \n\nMost dependencies can be installed through Ubuntu's repositories. You may need to use alternate commands or determine equivalent package names if using a different Linux distribution:\n```\napt-get install libgetopt-long-descriptive-perl \\\n libfile-slurp-perl \\\n libfile-path-tiny-perl \\\n liblist-moreutils-perl \\\n libpdf-api2-perl \\\n libpdf-table-perl \\\n libgd-graph-perl \\\n libscalar-list-utils-perl \\\n libscalar-util-numeric-perl \\\n libstatistics-distributions-perl \\\n libarchive-extract-perl \\\n libarray-utils-perl \\\n libarchive-zip-perl \\\n ghostscript\n```\n\nThe perl [List::Permutor](https://metacpan.org/pod/List::Permutor) package also must also be installed. I am not aware of an Ubuntu repository containing this package. Here's how to do a manual install once you have downloaded the List::Permutor package code:\n\n```\ntar -zxvf List-Permutor-0.022.tar.gz\ncd List-Permutor-0.022\nperl Makefile.PL\nmake\nsudo make install\n```\n\nThe CLUMPAK source code is available [here](http://clumpak.tau.ac.il/download/CLUMPAK.zip). Download it and unzip the file. \nSome of the CLUMPAK perl scripts have issues that must be corrected before they can be used. \n1. Some have Windows line breaks. The dos2unix program in Ubuntu can fix these for you (`sudo apt-get install dos2unix`). Go into the `CLUMPAK/26_03_2015_CLUMPAK/CLUMPAK/` folder and run it on all .pl files to be make sure these are fixed. \n2. The 'BestKByEvanno.pl' script is missing the `#!/usr/bin/perl` at the beginning. \n3. Make sure all scripts are executable. \n4. Copy all .pm files to a location monitored by perl's @INC variable. In the Docker container, I copied them to /etc/perl. You may need sudo permissions to access /etc/perl on your computer. Alternatively, [here's a way to install perl modules in your home directory](https://kb.iu.edu/d/baiu) if you do not have admin privileges.\n\nOnce you have downloaded the CLUMPAK.zip file, the following commands will perform the above 4 corrections. The last `cp` command may require admin privileges. \n```\nunzip CLUMPAK.zip\ncd CLUMPAK/26_03_2015_CLUMPAK/CLUMPAK\ndos2unix *.pl\nsed -i '1s/^/\\#!\\/usr\\/bin\\/perl\\n/' BestKByEvanno.pl\nchmod u+x *.pl\ncp *.pm /etc/perl/.\n```\n\nNext, make sure you have CLUMPP, distruct1.1, and mcl installed. Also set them to be executable with the `chmod` command. All of these programs are included in the CLUMPAK.zip file you downloaded. \n\nYou also need to modify a few of the .pm files with the path to CLUMPP, distruct, and mcl on your system. For example, here's how I accomplished this with `sed` commands in the Docker container setup. Just replace `\\/app\\/src\\/clumpak` with the location where you unzipped the CLUMPAK.zip file on your computer.\n\n```\nsed -i 's/CLUMPP\\//\\/app\\/src\\/clumpak\\/CLUMPAK\\/26_03_2015_CLUMPAK\\/CLUMPAK\\/CLUMPP\\//g' ClumppAccessor.pm\nsed -i 's/mcl\\/bin\\//\\/app\\/src\\/clumpak\\/CLUMPAK\\/26_03_2015_CLUMPAK\\/CLUMPAK\\/mcl\\/bin\\//g' MCLAccessor.pm \nsed -i 's/distruct\\//\\/app\\/src\\/clumpak\\/CLUMPAK\\/26_03_2015_CLUMPAK\\/CLUMPAK\\/distruct\\//g' ClusterAccessor.pm\n```\n\nFinally, make sure the `CLUMPAK.pl` and `BestKByEvanno.pl` scripts are located in a directory monitored by your $PATH. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Setup for distructRerun.py:<a name=\"distructinstall\"></a>",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:"
        ],
        "type": "Text_excerpt",
        "value": "One additional python3 library is required for this module: **pandas**. It can be installed via `pip3`. Command may need to be run as 'sudo' depending upon your system configuration.\n```\npip3 install pandas\n```\nThere are no other dependencies required for distructRerun.py (assuming you have already installed distruct itself). I also advise that if you want to use the colorbrewer options in distruct, then you should modify the default location of the ColorBrewer palettes in the distructComline.py file (line 61) so that you do not need to specify this path each time you run this module. I also recommend you place the ColorBrewer folder in your home directory (e.g., `/home/username/ColorBrewer`). Burying it several directories deep on your system will prevent it from being read properly due to a bug in distruct. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation &amp; Setup for cvSum.py:<a name=\"cvinstall\"></a>",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:"
        ],
        "type": "Text_excerpt",
        "value": "Two additional python3 libraries required for this module: **matplotlib** and **pandas** (if not already installed for distructRerun.py). Each can be installed via `pip3`. Commands may need to be run as 'sudo' depending upon your system configuration:\n\n```\npip3 install pandas\npip3 install matplotlib\n```\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and Setup for runEvalAdmix.py:<a name=\"evalinstall\"></a>",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>",
          "Special Instructions for Each Module:"
        ],
        "type": "Text_excerpt",
        "value": "This module can be particularly challenging to configure manually, so this is my final plea to **please just use the Docker container**. This module has several requirements in addition to installation of the evalAdmix program itself and PLINK. First, two python3 libraries are required: pandas and rpy2. Specifically, a recent version of rpy2 (>= v3.4) is required.\n\n```\npip3 install pandas\npip3 install rpy2\n```\n\nR (>= version 4.0.2) is required. It's possible that this can be installed through Ubuntu repositories. To accomplish this, I install the following under Ubuntu. If you use another OS, you might need to figure out the exact package that ensures the libR.so shared library is installed.\n\n```\napt-get install r-base r-base-dev\n```\n\nIn the event that installing R from your Linux distribution's package manager fails, then I advise compiling and installing from source because rpy2 will not work if the libR.so library is statically linked to R. If you go down this route, I provide an example of how to do this while installing R to a custom location. First, download the source code for R from `https://cran.r-project.org/src/base/R-4/`. Follow the commands below, and replace '/path/to/install/' with your preferred installation directory. Additionally, I want to stress the importance of running ./configure with the --enable-R-shlib command. This is absolutely vital to creating the dynamically-linked libR.so library which allows rpy2 to function properly.\n\n```\ntar -zxvf R-4.0.2.tar.gz\ncd R-4.0.2/\n./configure --prefix=/path/to/install/ --enable-R-shlib\nmake\nsudo make install\n```\n\nAfter installing R from source, you may also need to set the $LD_LIBRARY_PATH of your system so that rpy2 knows where to find the libR.so library. To accomplish this, you can add the below 'export' command to your ~/.bashrc file. If you do not want to permanently pollute your $LD_LIBRARY_PATH variable with this new location, then you will need to run this command whenever you open a new terminal window to execute runEvalAdmix.py. Again, '/path/to/install' is the location where you chose to install R when running the ./configure command in the above code block.\n\n```\nexport LD_LIBRARY_PATH=\"/path/to/install/lib/R/lib/:$LD_LIBRARY_PATH\"\n```\n\nLastly, the runEvalAdmix.py module requires the location of the 'visFuns.R' file that is included in the evalAdmix package (https://github.com/GenisGE/evalAdmix). You can specify this location via command line input whenever the program is run; however, I would recommend modifying the evalAdmixComline.py file included with AdmixPipe so that you do not need to do this. You can specify your path to 'visFuns.R' on line 46 of this file.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9577193699472153,
      "result": {
        "original_header": "IMPORTANT CHANGES IN v3.2 (updated 11-November-2023)",
        "type": "Text_excerpt",
        "value": "This README.md file is for AdmixPipe v3.2, which has several changes, bug fixes, and enhancements to existing modules. Two new modules were also developed for the following purposes: \n1) submission of admixturePipeline.py output to the CLUMPAK pipeline.\n2) assessment of the best K using the evalAdmix package (http://www.popgen.dk/software/index.php/EvalAdmix).  \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9983739939332908,
      "result": {
        "original_header": "Docker or local execution",
        "type": "Text_excerpt",
        "value": "**The -M and -b options are utilized to run locally on your machine or in the Docker container.**\nIf running locally or in Docker, you do not need to submit an email address. Executing the CLUMPAK main pipeline in the Docker container can be accomplished as follows:\n```\nsubmitClumpak.py -p prefix -M\n```\n**The input necessary for the BestK pipeline (-b option) is written by cvSum.py. If you want to use this function, return here after running [distructRerun.py](#distructrerun) and [cvSum.py](#cvsum)** You can execute this part of CLUMPAK locally through the Docker container with the following command. It should be issued from the directory where you executed cvSum.py. \n```\nsubmitClumpak.py -b\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999688145768413,
      "result": {
        "original_header": "Webserver",
        "type": "Text_excerpt",
        "value": "**A friendly reminder: the webserver submission function does not work in the Docker container.** \nChange directories into the folder where the admixturePipeline.py module wrote all output. Execute submitClumpak.py from this directory. The only things you must specify are the prefix of your VCF file (i.e., the VCF file name without the .vcf extension), an email address which is submitted to the online CLUMPAK server, and the boolean option to submit to the server (-w). For example:\n```\nsubmitClumpak.py -p prefix -e email@domain.com -w\n```\n \nList of current options:<a name=\"clumpakoptions\"></a>\n* **-b / --bestk:** Run the CLUMPAK BestK pipeline locally in the Docker container (or on your computer if you performed a manual install of CLUMPAK). \n* **-d / --DISTRUCT:** \\[optional\\] Provide user-defined DISTRUCT threshold for minimal distruct cluster threshold. Must be >=0 and <=0.95.\n* **-e / --email:** Specify your email address for submission to the CLUMPAK web server.\n* **-m / --MCL:** \\[optional\\] Provide user-defined MCL threshold for similarity scores. Must be >=0 and <=0.99.\n* **-M / --mainpipeline:** Run the CLUMPAK main pipeline locally in the Docker container (or on your computer).\n* **-p / --prefix:** Specify the prefix from your admixpipe run. This will either be the prefix of your plink file (i.e., without .bed or .map extension), or same name as your VCF file without the .vcf file extension.\n* **-r / --results:** Provide the results.zip file from your admixpipe run. Specifying the name is only necessary if you have changed it from the default of 'results.zip'.\n* **-w / --web:** Submit your results to the main pipeline of the CLUMPAK web server (option not available in the Docker container).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.828362900413695,
      "result": {
        "original_header": "Outputs:<a name=\"clumpakoutputs\"></a>",
        "type": "Text_excerpt",
        "value": "The -w option of the module does not write any output to your computer. You must retrieve the zipped CLUMPAK output from their webserver after your job completes running. The `wget` command is available from within the Docker container for this purpose. \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9941497445257887,
      "result": {
        "original_header": "Usage:<a name=\"distructusage\"></a>",
        "type": "Text_excerpt",
        "value": "If necessary, download your results from the CLUMPAK server. This should give you a zipped folder of your results, named something like \"1516030453.zip\". If you are using the Docker container, obtain the result of the submitClumpak.py module from your `clumpakOutput/` subdirectory. You should put this file into the \"data\" folder created on your computer when you launched Docker through the runDocker.sh script. First, unzip this folder:\n```\nunzip 1516030453.zip\n```\nThis should produce a folder in your current directory named 1516030453.  Now, run distructRerun.py on your folder.  The command will be something like the below command.  In this example, -a is used to provide the path to the directory of results produced by admixturePipeline.py, -d is used to give the name of the directory that the program will use as input, -k (lower case) specifies the lowest clustering value that you tested in Admixture, and -K (upper case) specifies the highest clustering value you tested.\n```\ndistructRerun.py -a example_admixturePipeline_result/ -d 1516030453/ -k 1 -K 12\n```\n \nIf you did not have the pipeline automatically execute distruct, you can do it manually using the drawparams files output by distructRerun.py. For example:\n```\ndistruct -d drawparams.8\n```\nAs of AdmixPipe v3.2, ghostscript is now installed in the Docker container. Any .ps files can be converted to .pdf with the `ps2pdf` command. For example:\n```\nps2pdf K8.ps\n```\n \nList of current options:<a name=\"distructoptions\"></a>\n* **-a / --ad:** Specify the directory containing the output of your admixturePipeline.py run (required).\n* **-c / --colorbrew:** Specify a color palette from the colorbrewer options in distruct 1.1. Enter the prefix of the color palette you want (for example, BrBG) and the pipeline will take care of adding the appropriate K value and palette suffix. If a palette is not available at a particular K value, then distruct will revert to the default palette. (optional, default = BrBG)\n* **-d / --directory:** Specify the directory containing the output of your CLUMPAK run (required).\n* **-k / --minK:** Specify the minimum K value to be tested (required).\n* **-K / --maxK:** Specify the maximum K value to be tested (required).\n* **-m / --majc:** Provide the name of the output file that will hold the names of runs corresponding to the major clusters (optional; default = MajorClusterRuns.txt)\n* **-p / --pathtocolorbrew:** Specify the full path to the location of distruct1.1's colorbrewer files on your computer (not necessary if you are using the Docker container). \n* **-r / --run:** Boolean switch. Using this option will run distruct for each drawparams file. (optional, default = off)\n* **-s / --sort:** Boolean switch. Use this option to sort barplots by individual q values. Sorting might not be perfect. (optional, default = off)\n* **-w / --width:** Provide the width of each individual bar in the distruct output (optional; default = 2). \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9784324144729679,
      "result": {
        "original_header": "Usage:<a name=\"cvusage\"></a>",
        "type": "Text_excerpt",
        "value": "Execute the cvSum.py script in the directory containing your cv_file.MajClust.txt and loglikelihood_file.MajClust.txt outputs from distructRerun.py to generate the summary information for your major and minor cluster runs identified by CLUMPAK. Generally no command line options are required unless you have changed names of files output by prior modules of this pipeline. For example:\n```\ncvSum.py\n```\n \nList of current options:<a name=\"cvoptions\"></a>\n* **-c / --cv:** Specify the name of your file with cross-validation values for your admixture runs (optional, default = cv_file.MajClust.txt).\n* **-l / --ll:** Specify the name of your file with loglikelihood values for your admixture runs (optional, default = loglikelihood.MajClust.txt).\n* **-o / --out:** Specify the name of your cv value output file (optional, default = cv_output.txt).\n* **-L / --llout:** Specify the name of your loglikelihood output file (optional, default = loglikelihood_output.txt).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999962762481904,
      "result": {
        "original_header": "Usage:<a name=\"evalusage\"></a>",
        "type": "Text_excerpt",
        "value": "Change directories to the folder containing the output from admixturePipeline.py. You must be in this folder to execute commands for runEvalAdmix.py because it requires JSON files that were written in this location by other pipeline modules (specifically, admixturePipeline.py and distructRerun.py). These are new outputs as of AdmixPipe v3.2, so you cannot execute the runEvalAdmix.py module on outputs from earlier AdmixPipe versions. The following is an example command for this module:\n```\nrunEvalAdmix.py -p prefix -k 1 -K 12 -m popmap.txt -n 8\n```\n \nIf you ran admixturePipeline.py by directly inputting a pre-filtered .bed file, then you must indicate this with the -b/--bed option as shown below. This allows evalAdmix to use your original .bed file rather than perform unnecessary file conversions:\n```\nrunEvalAdmix.py -p prefix -k 1 -K 12 -m popmap.txt -n 8 -b\n``` \nList of current options:<a name=\"evaloptions\"></a>\n* **-b / --bed:** Boolean switch to indicate that you originally ran admixturePipeline.py by directly inputting a pre-filtered .bed file (default = off/False).\n* **-p / --prefix:** Specify your .ped or .bed file prefix from your initial admixturePipeline.py run. If you input a VCF file, this will be the name of that VCF file, except without the .vcf extension (required).\n* **-k / --minK:** Specify the minimum K value (required).\n* **-K / --maxK:** Specify the maximum K value (required).\n* **-m / --popmap:** Specify a tab-delimited population map (sample --> population) (required).\n* **-M / --mc:** Provide path to the file that will hold names of runs corresponding to the major clusters (optional; should not be necessary unless you have renamed files or specified custom names).\n* **-R / --evalAdmixRcode:** Provide the path to where visualization functions for evalAdmix are stored on your machine. (Not necessary if using the Docker container)\n* **-n / --np:** Provide the number of processors to use for evalAdmix (optional; default=1).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8147687389334742,
      "result": {
        "original_header": "Usage:<a name=\"cvusage\"></a>",
        "type": "Text_excerpt",
        "value": "List of current options:<a name=\"cvoptions\"></a>\n* **-c / --cv:** Specify the name of your file with cross-validation values for your admixture runs (optional, default = cv_file.MajClust.txt).\n* **-l / --ll:** Specify the name of your file with loglikelihood values for your admixture runs (optional, default = loglikelihood.MajClust.txt).\n* **-o / --out:** Specify the name of your cv value output file (optional, default = cv_output.txt).\n* **-L / --llout:** Specify the name of your loglikelihood output file (optional, default = loglikelihood_output.txt).\n \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8021739403953589,
      "result": {
        "original_header": "Usage:<a name=\"evalusage\"></a>",
        "type": "Text_excerpt",
        "value": "If you ran admixturePipeline.py by directly inputting a pre-filtered .bed file, then you must indicate this with the -b/--bed option as shown below. This allows evalAdmix to use your original .bed file rather than perform unnecessary file conversions:\n```\nrunEvalAdmix.py -p prefix -k 1 -K 12 -m popmap.txt -n 8 -b\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "admixturePipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "stevemussmann"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 71935,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 4868,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1312,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Vim Script",
        "size": 62,
        "type": "Programming_language",
        "value": "Vim Script"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2024-06-03T02:38:00Z",
        "date_published": "2024-06-03T02:41:16Z",
        "description": "Added new options\r\n\r\n- -H option in admixturePipeline.py: allows user to perform haploid data analysis in Admixture\r\n- -s option in distructRerun.py: allows user to sort by q-value within sample groups when plotting Admixture outputs.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.2.1",
        "name": "AdmixPipe v3.2.1",
        "release_id": 158530479,
        "tag": "v3.2.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/158530479",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/158530479",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2023-11-11T20:32:54Z",
        "date_published": "2023-11-11T20:33:31Z",
        "description": "Updates added for v3.2 release and pending publication:\r\n\r\n- Filtering options now enabled for PLINK-formatted files\r\n- Documentation and example files updated.\r\n- Tutorial expanded and updated (see example_files folder)",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.2",
        "name": "AdmixPipe v3.2",
        "release_id": 129031780,
        "tag": "v3.2",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/129031780",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/129031780",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2022-11-27T20:03:59Z",
        "date_published": "2022-11-27T20:13:02Z",
        "description": "New features:\r\n\r\n- Direct input of PLINK .ped format (PLINK option --encode12) and .bed format is now allowed. See documentation for available filtering options.\r\n- CLUMPAK is now integrated into the Docker container, allowing it to be run locally. The submitClumpak.py module now interacts with the local installation in addition to retaining functionality of submitting to the CLUMPAK webserver. Note some command line options have changed in this module.\r\n\r\nBug fixes:\r\n\r\n- Fixed a major bug that caused all Admixture outputs per K value to be overwritten if the user was running the pipeline from several directories above where their input files were located and supplying a relative path to the input.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.1",
        "name": "AdmixPipe v3.1",
        "release_id": 84271250,
        "tag": "v3.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/84271250",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/84271250",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2022-07-31T23:32:07Z",
        "date_published": "2022-08-01T17:23:59Z",
        "description": "Same as v3.0.2 but with updated example files.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.0.3",
        "name": "Admixpipe v3.0.3",
        "release_id": 73363112,
        "tag": "v3.0.3",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/73363112",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/73363112",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2022-07-30T18:42:09Z",
        "date_published": "2022-07-30T18:48:01Z",
        "description": "New features:\r\n\r\n- cvSum.py now calculates summary statistics and plots for loglikelihood values. This is done for both major and minor clusters identified by CLUMPAK\r\n\r\nBug fixes:\r\n\r\n- Changed import order of pandas and matplotlib in graphics.py. The previous order was causing cvSum.py to crash on some systems.\r\n- Fixed a bug in distructRerun.py that could potentially cause duplication of CV values if distructRerun.py was run on the same dataset multiple times. \r\n\r\nOther changes:\r\n\r\n- Removed some legacy code from admixturePipeline.py that was no longer being used (i.e., system calls to grep commands that were printing CV and loglikelihood values to files).",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.0.2",
        "name": "Admixpipe v3.0.2",
        "release_id": 73257693,
        "tag": "v3.0.2",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/73257693",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/73257693",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2022-02-18T21:29:14Z",
        "date_published": "2022-02-18T21:34:32Z",
        "description": "Update List:\r\n\r\n- Beginning in AdmixPipe v3.0, functionality was added to distructRerun.py to store paths to .q files output from CLUMPAK in a json file to avoid parsing the CLUMPAK output a second time in runEvalAdmix.py. When averaging the values in the .q files to plot the EvalAdmix output for major/minor clusters, the code was failing to throw an error when it found no files to average. I inserted a block of code to test for this error, and report a more informative error message that tells the user what might have happened (i.e., they moved the location of their files after running distructRerun.py, or they somehow managed to run distructRerun.py outside of the Docker container).\r\n- Code for parsing popmap files was updated so that 1) the code called from admixturePipeline.py and runEvalAdmix.py is now the same, and 2) it now prints a more informative error message when >2 columns are present on any line of the popmap file.\r\n- Docker container was updated to install the programs wget, less, and vim so that users can view, edit, and pull files from the web more easily from within the container. \r\n- Docker container also now defaults to the data directory upon launch (/app/data) so that users do not have to immediately change directories upon launching the Docker container.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.0.1",
        "name": "AdmixPipe v3.0.1",
        "release_id": 59942142,
        "tag": "v3.0.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/59942142",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/59942142",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2022-01-30T17:20:36Z",
        "date_published": "2022-01-30T17:24:52Z",
        "description": "v3.0 has several \"behind the scenes\" changes, bug fixes, and enhancements to existing modules. Two new modules have also been developed for the following purposes:\r\n\r\n1. automatic submission of admixturePipeline.py output to the CLUMPAK website.\r\n2. assessment of the best K using the evalAdmix package (http://www.popgen.dk/software/index.php/EvalAdmix).\r\n\r\nOther important notes for v3.0:\r\n1. Some outputs from AdmixPipe v2.0 are incompatible with v3.0 because I now use json files to track data and file names from early parts of the pipeline that are needed in some of the later modules.\r\n2. Whereas AdmixPipe v2.0 was backward compatible with Python 2.7.x, v3.0+ requires Python 3.\r\n3. Some command line options have changed slightly (especially long form commands - you can get the current list of commands by running any module with the --help option).\r\n4. There is now a Docker container to streamline the installation process.\r\n5. The submitClumpak.py module is completely optional. You can accomplish the same results by manually submitting your admixturePipeline.py module outputs to the CLUMPAK website.\r\n6. The submitClumpak.py module will not function in the Docker container. If you wish to use it, this module must be set up on your own computer. It requires selenium and currently is only compatible if you have Firefox installed.\r\n7. The data processing and plotting functions of the cvSum.py module underwent a complete rewrite for v3.0.\r\n",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v3.0",
        "name": "AdmixPipe v3.0",
        "release_id": 58285974,
        "tag": "v3.0",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/58285974",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/58285974",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2020-07-12T15:35:48Z",
        "date_published": "2020-07-13T00:02:52Z",
        "description": "Publication release.\r\n\r\nChanged default setting for biallelic filter from off to on.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v2.0.2",
        "name": "AdmixPipe v2.0.2",
        "release_id": 28485004,
        "tag": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/28485004",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/28485004",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2020-06-20T15:49:07Z",
        "date_published": "2020-06-20T15:51:11Z",
        "description": "Bug fix - drawparams files created for Distruct were not finding input files when absolute paths were being used.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v2.0.1",
        "name": "Admixture Pipeline v2.0.1",
        "release_id": 27751461,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/27751461",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/27751461",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2020-02-09T00:02:42Z",
        "date_published": "2020-02-09T00:18:28Z",
        "description": "Pre-release for new admixturePipeline version. \r\n\r\nv2.0 combines admixturePipeline with my admixture_cv_sum and distruct-rerun repositories.\r\n\r\nNew features include:\r\n* python3 compatibility\r\n* added distructRerun.py and cvSum.py\r\n* distructRerun.py can now execute distruct on drawparams files\r\n* New options and flexibility are included for selecting a color palette in distructRerun.py\r\n* distructRerun.py now performs functions that previously required additional bash commands to be run by the user\r\n\r\nBug fixes:\r\n* The correct input population list for CLUMPAK is now generated when using the blacklist option or excluding individuals due to high amounts of missing data in admixturePipeline. \r\n* Fixed a condition in which admixturePipeline would erroneously include .Q files from subdirectories.\r\n* Fixed parsing of boolean command line options\r\n* Various minor bug fixes\r\n\r\nExperimental options:\r\n* distructRerun.py now has an option that may allow you to re-run distruct on STRUCTURE data that was analyzed in CLUMPAK. Option is not robustly tested.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v2.0",
        "name": "Admixture Pipeline v2.0",
        "release_id": 23508502,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/23508502",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/23508502",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2019-07-07T18:38:06Z",
        "date_published": "2019-07-07T18:39:41Z",
        "description": "Updated README; merged changes made by TK Chafin",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v1.2.2",
        "name": "Admixture Pipeline v1.2.2",
        "release_id": 18458242,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/18458242",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/18458242",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2019-03-09T20:29:01Z",
        "date_published": "2019-03-09T20:32:01Z",
        "description": "Fixed bug introduced in previous version when the blacklisting option is not used. ",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v1.2.1",
        "name": "admixturePipeline v1.2.1",
        "release_id": 16014287,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/16014287",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/16014287",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2019-03-09T16:26:15Z",
        "date_published": "2019-03-09T16:27:57Z",
        "description": "Now supports removal of individuals from the VCF file via user-provided text file.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v1.2",
        "name": "admixturePipeline v1.2",
        "release_id": 16012861,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/16012861",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/16012861",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2018-12-03T19:00:03Z",
        "date_published": "2018-12-03T19:10:56Z",
        "description": "Options for filtering have been added or modified. The MAF filter now operates in VCFtools instead of PLINK. Also, PLINK will now output a structure-formatted file of the final filtered SNP dataset.",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v1.1",
        "name": "admixturePipeline v1.1",
        "release_id": 14322590,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/14322590",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/14322590",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "stevemussmann",
          "type": "User"
        },
        "date_created": "2018-12-03T16:38:08Z",
        "date_published": "2018-12-03T17:58:28Z",
        "description": "This contains the version of the code used for my dissertation (plus some command line options that were added later).",
        "html_url": "https://github.com/stevemussmann/admixturePipeline/releases/tag/v1.0",
        "name": "admixturePipeline",
        "release_id": 14321156,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/14321156",
        "value": "https://api.github.com/repos/stevemussmann/admixturePipeline/releases/14321156",
        "zipball_url": "https://api.github.com/repos/stevemussmann/admixturePipeline/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Program Dependencies",
        "parent_header": [
          "Manual Installation <a name=\"manualinstall\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The complete pipeline has six external program dependencies that must be installed. The modules from which they are called are listed below each program name:\n* **Admixture** (https://dalexander.github.io/admixture/download.html)\n  * admixturePipeline.py\n* **CLUMPAK** (http://clumpak.tau.ac.il/download/CLUMPAK.zip)\n  * submitClumpak.py\n* **distruct** (https://rosenberglab.stanford.edu/distructDownload.html)\n  * distructRerun.py\n* **evalAdmix** (https://github.com/GenisGE/evalAdmix)\n  * runEvalAdmix.py\n* **PLINK 1.9 beta 4.5 or newer** (https://www.cog-genomics.org/plink2)\n  * admixturePipeline.py\n  * runEvalAdmix.py\n* **VCFtools** (https://vcftools.github.io/index.html)\n  * admixturePipeline.py\n\nIt is advised that you install the latest version of each program manually. For example, admixturePipeline.py utilizes options in PLINK and VCFtools that are sometimes absent from the versions of these programs curated within repositories of some Linux package managers. Each program should be added to your $PATH as the lowercase version of its name (i.e., 'plink', 'vcftools', 'admixture', 'distruct') with the exception of evalAdmix (which should be in your $PATH as 'evalAdmix'). Special instructions are also provided below for manual installation of CLUMPAK. Additionally, you must make sure the vcf-query script from the vcftools package is present in your $PATH because it is now required by the admixturePipeline.py script. If you installed vcftools through the \"sudo make install\" method, then this should have already happened. \n\nYou may also have to modify the first line of each of the five AdmixPipe v3.2 module files (admixturePipeline.py, submitClumpak.py, distructRerun.py, cvSum.py, and runEvalAdmix.py). By default, the first line of each reads:\n```\n#!/usr/bin/env python3\n```\n\nTo find the location of your Python installation, you can type the following at the bash command prompt:\n```\nwhich python3\n```\nThis will return your /path/to/python3. Then modify the first line of each module to reflect the location of your python3 installation.\n\nOther dependencies (mainly Python libraries) are required for some modules. These dependencies are discussed with their associated modules below. I have provided instructions for each module separately because installation difficulty varies from one module to the next. Your utilization of AdmixPipe may not require all modules depending upon the goals of your study.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running AdmixPipe v3",
        "type": "Text_excerpt",
        "value": "AdmixPipe v3 is composed of five different modules. Follow the links below in the table of contents to find specific instructions for running each module. More detailed manual installation instructions are also provided if you cannot / do not want to use Docker container.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Table of Contents:",
        "parent_header": [
          "Running AdmixPipe v3"
        ],
        "type": "Text_excerpt",
        "value": "1. [admixturePipeline.py](#admixturepipeline)\n    * [Usage](#admixusage)\n    * [Options](#admixoptions)\n    * [Outputs](#admixoutputs)\n2. [submitClumpak.py](#submitclumpak)\n    * [Usage](#clumpakusage)\n    * [Options](#clumpakoptions)\n    * [Outputs](#clumpakoutputs)\n3. [distructRerun.py](#distructrerun)\n    * [Usage](#distructusage)\n    * [Options](#distructoptions)\n    * [Outputs](#distructoutputs)\n4. [cvSum.py](#cvsum)\n    * [Usage](#cvusage)\n    * [Options](#cvoptions)\n    * [Outputs](#cvoutputs)\n5. [runEvalAdmix.py](#runevaladmix)\n    * [Usage](#evalusage)\n    * [Options](#evaloptions)\n    * [Outputs](#evaloutputs)\n\nFor a full tutorial see the [example_files directory](https://github.com/stevemussmann/admixturePipeline/tree/master/example_files) in this repository. The remainder of this README file describes basic functions of AdmixPipe.\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:54:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 54
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage: <a name=\"admixusage\"></a>",
        "parent_header": [
          "1. admixturePipeline.py: <a name=\"admixturepipeline\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "You can run the program to print help options with the following command:\n\n```\n./admixturePipeline.py -h\n```\n\nRequired options:<a name=\"admixoptions\"></a>\n* **-m / --popmap:** Specify a tab-delimited population map (sample --> population).  Click [here](https://github.com/stevemussmann/admixturePipeline/blob/master/example_files/example_map.txt) for an example. This will be converted to a population list that can be input into a pipeline such as CLUMPAK (http://clumpak.tau.ac.il/) for visualization of data\n\nOne of the following three options is also required:\n* **-b / --bed:** Specify a binary plink file (.bed) for input. This option disables some individual sample-based filtering options in the program.\n* **-p / --ped:** Specify a text-based plink file (.ped) for input. File should have been produced using the --recode12 option in plink. This option disables some individual sample-based filtering options in the program.\n* **-v / --vcf:** Specify a VCF file for input.\n\nOptional arguments:\n* **-n / --np:** Specify the number of processors.  Currently the only multithreaded program is Admixture.\n\nAdmixture optional arguments:\n* **-c / --cv:** Specify the cross-validation number for the Admixture program.  See the admixture program manual for more information (default = 20)\n* **-H / --haploid:** If you want to perform haploid data analysis in Admixture, you can use this option to provide information in the same manner it would be provided to Admixture (e.g., `-H \"*\"`, see [page 10 of the Admixture user manual](https://dalexander.github.io/admixture/admixture-manual.pdf)).\n* **-k / --minK:** Specify the minimum K value to be tested (default = 1).\n* **-K / --maxK:** Specify the maximum K value to be tested (default = 20).\n* **-R / --rep:** Specify the number of replicates for each K value (default = 20)\n\nGeneral filtering options (enabled for both VCFtools and PLINK):\n* **-a / --maf:** Enter a minimum frequency for the minor allele frequency filter. (default = off, specify a value between 0.0 and 1.0 to turn it on).\n* **-M / --mac:** Enter the minimum count for the minor allele filter. (default = off, specify a positive integer to turn it on).\n* **-S / --snpcov:** Filter SNPs based on proportion of allowable missing data. Feature added by tkchafin. (default = 0.1; defined to be between 0 and 1, where 0 allows sites that are completely missing and 1 indicates no missing data allowed; input = float).\n* **-t / --thin:** Filter loci by thinning out any loci falling within the specified proximity to one another, measured in basepairs.  (default = off, specify an integer greater than 0 to turn it on).\n\nVCFtools filtering options:\n* **-B / --bi:** Turns biallelic filter off. (default = on, **we do not recommend turning this setting off because ADMIXTURE only processes biallelic SNPs**)\n* **-C / --indcov:** Filter samples based on maximum allowable missing data. Feature added by tkchafin. (default = 0.9, input = float).\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "parent_header": [
          "1. admixturePipeline.py: <a name=\"admixturepipeline\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The preferred usage of the program is to provide a .vcf file as input. The following command will run the program from K values 1 through 10, conducting 10 repetitions at each K value.  Admixture will use 16 processors for execution during each repetition, VCFtools will filter SNPs at an interval of 100bp, and the minor allele frequency filter in VCFtools will drop any loci with a minor allele frequency less than 0.05. Any individuals not present in popmap.txt will also be removed before Admixture is executed:\n```\nadmixturePipeline.py -m popmap.txt -v input.vcf -k 1 -K 10 -n 16 -t 100 -a 0.05\n```\n\nAlternatively, you can provide PLINK files as input. Text-based PLINK files (.ped and .map) should be equivalent to those output using the --recode12 option in PLINK. Specify the PLINK file prefix to use this option, as shown in the example below.\n```\nadmixturePipeline.py -m popmap.txt -p input -k 1 -K 10 -n 16\n```\n\nA similar command is used to provide a binary PLINK file (.bed, .fam, and .bim). \n```\nadmixturePipeline.py -m popmap.txt -b input -k 1 -K 10 -n 16\n```\n"
      },
      "source": "https://raw.githubusercontent.com/stevemussmann/admixturePipeline/master/README.md",
      "technique": "header_analysis"
    }
  ]
}