{
  "application_domain": [
    {
      "confidence": 13.11,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenInstitute/BarWare-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Allen Institute Contribution Agreement\n\nThis document describes the terms under which you may make \"Contributions\" - \nwhich may include without limitation, software additions, revisions, bug fixes, configuration changes,\ndocumentation, or any other materials - to any of the projects owned or managed by the Allen Institute.\nIf you have questions about these terms, please contact us at terms@alleninstitute.org.  \n\nYou certify that:\n\n.\tYour Contributions are either:\n\n1.\tCreated in whole or in part by you and you have the right to submit them under the designated license \n(described below); or\n2.\tBased upon previous work that, to the best of your knowledge, is covered under an appropriate \nopen source license and you have the right under that license to submit that work with modifications,\nwhether created in whole or in part by you, under the designated license; or\n\n3.\tProvided directly to you by some other person who certified (1) or (2) and you have not modified them.\n\n.\tYou are granting your Contributions to the Allen Institute under the terms of the [2-Clause BSD license](https://opensource.org/licenses/BSD-2-Clause)\n(the \"designated license\").\n\n.\tYou understand and agree that the Allen Institute projects and your Contributions are public and that \na record of the Contributions (including all metadata and personal information you submit with them) is \nmaintained indefinitely and may be redistributed consistent with the Allen Institute's mission and the \n2-Clause BSD license.  \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/CONTRIBUTING",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-18T16:52:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-18T22:41:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Hashed scRNA-seq data processing pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9678309211276767,
      "result": {
        "original_header": "Contribution Agreement",
        "type": "Text_excerpt",
        "value": "If you contribute code to this repository through pull requests or other mechanisms, you are subject to the Allen Institute Contribution Agreement, which is available in the file [CONTRIBUTING in this repository](https://github.com/AllenInstitute/BarWare-pipeline/blob/master/CONTRIBUTING)\n \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenInstitute/BarWare-pipeline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AllenInstitute/BarWare-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/01_run_BarCounter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/02_run_BarMixer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/00_setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Repository retrieval and installation",
        "parent_header": [
          "Installing and running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone git@github.com:AllenInstitute/BarWare-pipeline\ncd BarWare-pipeline\ngit submodule update --init\nR -e 'install.packages(\"BarMixer\", type = \"source\", repos = NULL)'\nchmod +x BarCounter-release/barcounter\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stage 1: Counting HTOs with BarCounter",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "A convenient wrapper script is provided in BarWare to run multiple wells in sequence using BarCounter: `01_run_BarCounter.sh`. This script has 4 parameters:\n- `-s`: the *full path* to the sample_sheet.csv file\n- `-w`: the *full path* to the well_sheet.csv file\n- `-o`: the *full path* of a directory to use for outputs\n\nFor example:\n```\nbash BarWare-pipeline/01_run_BarCounter.sh \\\n  -s $(pwd)/X017_sample_sheet.csv \\\n  -w $(pwd)/X017_well_sheet.csv \\\n  -o $(pwd)/X017_demultiplex_results\n```\n\nStage 1 will generate outputs for each well:\n```\n<output_dir>/\n  <well_id>/\n    hto_counts/\n      <fastq_prefix>_Tag_Counts.csv\n      <fastq_prefix>_BarCounter.log\n      <fastq_prefix>_valid_barcodes.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stage 2: Demultiplexing and QC with BarMixer",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "BarMixer demultiplexing can be run using the `02_run_BarMixer.sh` shell script. This script has 3 parameters:\n- `-s`: the *full path* to the sample_sheet.csv file\n- `-w`: the *full path* to the well_sheet.csv file\n- `-o`: the *full path* of a directory to use for outputs\n\nNote that the parameters `-s`, `-w`, and `-o` should be the same for both Stage 1 and Stage 2.\n\n```\nbash BarWare-pipeline/02_run_BarMixer.sh \\\n  -s $(pwd)/X017_sample_sheet.csv \\\n  -w $(pwd)/X017_well_sheet.csv \\\n  -o $(pwd)/X017_demultiplex_results\n```\n\nStage 2 will generate outputs for each well, and combined results for all wells. Final outputs separated by sample for downstream use are in the merged_h5/ subfolder.\n```\n<output_dir>/\n  <well_id>/\n    hto_processed/\n      <well_id>_hto_category_table.csv.gz\n      <well_id>_hto_count_matrix.csv.gz\n      <well_id>_hto_processing_metrics.json\n      <well_id>_hto_report.html\n    rna_metadata/\n      <well_id>.h5\n      <well_id>_well_metadata_report.html\n      <well_id>_well_metrics.json\n  split_h5/\n    <well_id>_<hash_tag>.h5\n    <well_id>_multiplet.h5\n    <well_id>_split_h5_metrics.json\n    <well_id>_split_report.html\n  merged_h5/\n    merge_report.html\n    <pool_id>_<sample_id>.h5\n    <pool_id>_multiplet.h5\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9912558987049569,
      "result": {
        "original_header": "Contribution Agreement",
        "type": "Text_excerpt",
        "value": "If you contribute code to this repository through pull requests or other mechanisms, you are subject to the Allen Institute Contribution Agreement, which is available in the file [CONTRIBUTING in this repository](https://github.com/AllenInstitute/BarWare-pipeline/blob/master/CONTRIBUTING)\n \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/LICENSE"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Using a docker image",
          "Legal Information"
        ],
        "type": "Text_excerpt",
        "value": "The license for this package is available on Github in the file [LICENSE in this repository](https://github.com/AllenInstitute/BarWare-pipeline/blob/master/LICENSE)\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BarWare-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AllenInstitute"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8367,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7409,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1038,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hypercompetent",
          "type": "User"
        },
        "date_created": "2021-10-28T18:20:39Z",
        "date_published": "2021-10-28T21:49:32Z",
        "description": "This update to BarWare introduces a change to the method used for unimodality testing. The previous version used the \"SI\" method (Silverman, 1981), which has been changed to the \"HH\" method (Hartigan and Hartigan, 1985) after further testing.\r\n\r\nThere is also a fix to final merged file naming when wells do not follow Allen Institute batch naming conventions (e.g. B001-P1C1W1). Instead of being prefixed with the Pool ID (e.g. B001-P1_<sample_id>.h5 ), other well naming will result in files prefixed with \"merged_\" (\"merged_<sample_id>.h5\").",
        "html_url": "https://github.com/AllenInstitute/BarWare-pipeline/releases/tag/1.0.1",
        "name": "BarWare pipeline 1.0.1",
        "release_id": 52274562,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/releases/52274562",
        "value": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/releases/52274562",
        "zipball_url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hypercompetent",
          "type": "User"
        },
        "date_created": "2021-08-14T00:27:21Z",
        "date_published": "2021-08-14T00:28:15Z",
        "description": "Initial release for review.",
        "html_url": "https://github.com/AllenInstitute/BarWare-pipeline/releases/tag/1.0",
        "name": "BarWare-pipeline v1.0",
        "release_id": 47841416,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/releases/47841416",
        "value": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/releases/47841416",
        "zipball_url": "https://api.github.com/repos/AllenInstitute/BarWare-pipeline/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Stage 0: Run cellranger count",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "The BarWare pipeline is currently configured to demultiplex 10x Genomics 3' scRNA-seq data. Before analysis with BarCounter and BarMixer, we recommend that you run cellranger count to obtain the necessary scRNA-seq inputs for use with this pipeline.\n\nIf you are using a different analysis pipeline or method and would like to utilize BarWare, please let us know in the Issues page.\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Before you run BarWare",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "You'll need 2 critical input files before running the BarWare pipeline:\n\n**1: A Well Sheet .csv file**\n\nYou will need to generate a Well Sheet .csv file to specify which wells will be demultiplexed. This .csv should have the following columns:\n- well_id: An identifier for each well\n- fastq_path: The path to the directory containing the HTO FASTQ files for your well\n- fastq_prefix: The prefix for your well that is appended to your HTO FASTQ files (multiple lanes will be automatically identified)\n- cellranger_outs: The full path to the cellranger count outs/ directory for each well\n\n**Example well_sheet.csv**\n```\nwell_id,fastq_path,fastq_prefix,cellranger_outs\nX017-P1C1W1,/mnt/barware-manuscript/X017_fastq/,Pool-16-HTO,/mnt/barware-manuscript/code-testing/X017-P1C1W1/outs/\nX017-P1C1W2,/mnt/barware-manuscript/X017_fastq/,Pool-24-HTO,/mnt/barware-manuscript/code-testing/X017-P1C1W2/outs/\nX017-P1C1W3,/mnt/barware-manuscript/X017_fastq/,Pool-32-HTO,/mnt/barware-manuscript/code-testing/X017-P1C1W3/outs/\n```\n\n**2: A Sample Sheet .csv file**\n\nThe samplesheet.csv file specifies which samples are associated with which barcodes. This .csv should have the following columns:  \n- sample_id: The name of each multiplexed sample\n- pool_id: An identifier for the pool of samples to demultiplex\n- hash_name: The name of the HTOs used for hashing\n- hash_tag: The sequence of the HTO barcodes used for hashing\n\n**example sample_sheet.csv**\n```\nsample_id,pool_id,hash_name,hash_tag\n2735BW-MEM-1,X017-P1,HT1,GTCAACTCTTTAGCG\n2735BW-MEM-2,X017-P1,HT2,TGATGGCCTATTGGG\n2735BW-NIV-1,X017-P1,HT3,TTCCGCCTCTCTTTG\n2735BW-NIV-2,X017-P1,HT4,AGTAAGTTCAGCGTA\n2735BW-NON-1,X017-P1,HT5,AAGTATCGTTTCGCA\n2735BW-NON-2,X017-P1,HT6,GGTTGCCAGATGTCA\n```\n\nWith these in hand, you're ready for the BarWare pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stage 1: Counting HTOs with BarCounter",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "A convenient wrapper script is provided in BarWare to run multiple wells in sequence using BarCounter: `01_run_BarCounter.sh`. This script has 4 parameters:\n- `-s`: the *full path* to the sample_sheet.csv file\n- `-w`: the *full path* to the well_sheet.csv file\n- `-o`: the *full path* of a directory to use for outputs\n\nFor example:\n```\nbash BarWare-pipeline/01_run_BarCounter.sh \\\n  -s $(pwd)/X017_sample_sheet.csv \\\n  -w $(pwd)/X017_well_sheet.csv \\\n  -o $(pwd)/X017_demultiplex_results\n```\n\nStage 1 will generate outputs for each well:\n```\n<output_dir>/\n  <well_id>/\n    hto_counts/\n      <fastq_prefix>_Tag_Counts.csv\n      <fastq_prefix>_BarCounter.log\n      <fastq_prefix>_valid_barcodes.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stage 2: Demultiplexing and QC with BarMixer",
        "parent_header": [
          "Installing and running the pipeline",
          "Running the pipeline"
        ],
        "type": "Text_excerpt",
        "value": "BarMixer demultiplexing can be run using the `02_run_BarMixer.sh` shell script. This script has 3 parameters:\n- `-s`: the *full path* to the sample_sheet.csv file\n- `-w`: the *full path* to the well_sheet.csv file\n- `-o`: the *full path* of a directory to use for outputs\n\nNote that the parameters `-s`, `-w`, and `-o` should be the same for both Stage 1 and Stage 2.\n\n```\nbash BarWare-pipeline/02_run_BarMixer.sh \\\n  -s $(pwd)/X017_sample_sheet.csv \\\n  -w $(pwd)/X017_well_sheet.csv \\\n  -o $(pwd)/X017_demultiplex_results\n```\n\nStage 2 will generate outputs for each well, and combined results for all wells. Final outputs separated by sample for downstream use are in the merged_h5/ subfolder.\n```\n<output_dir>/\n  <well_id>/\n    hto_processed/\n      <well_id>_hto_category_table.csv.gz\n      <well_id>_hto_count_matrix.csv.gz\n      <well_id>_hto_processing_metrics.json\n      <well_id>_hto_report.html\n    rna_metadata/\n      <well_id>.h5\n      <well_id>_well_metadata_report.html\n      <well_id>_well_metrics.json\n  split_h5/\n    <well_id>_<hash_tag>.h5\n    <well_id>_multiplet.h5\n    <well_id>_split_h5_metrics.json\n    <well_id>_split_report.html\n  merged_h5/\n    merge_report.html\n    <pool_id>_<sample_id>.h5\n    <pool_id>_multiplet.h5\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:31:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Level of Support",
        "parent_header": [
          "Using a docker image",
          "Legal Information"
        ],
        "type": "Text_excerpt",
        "value": "We are not currently supporting this code, but simply releasing it to the community AS IS but are not able to provide any guarantees of support. The community is welcome to submit issues, but you should not expect an active response.\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/BarWare-pipeline/main/README.md",
      "technique": "header_analysis"
    }
  ]
}