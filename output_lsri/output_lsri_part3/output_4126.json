{
  "application_domain": [
    {
      "confidence": 0.9443455453706515,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GrossTor/IdentiFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-14T13:19:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-22T19:42:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Identifiability and experimental design in perturbation studies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9626320465923109,
      "result": {
        "original_header": "IdentiFlow",
        "type": "Text_excerpt",
        "value": "Interaction strengths between nodes in directed networks can be quantified from observations of the network's response to perturbations. This package reveals the identifiability of the inferred network parameters and optimizes experimental design for network perturbation studies. See our [publication](https://doi.org/10.1093/bioinformatics/btaa404) for details. \nThe package is easy to use and we demonstrate its most relevant features in the example below. You find the example script in [identiflow/examples](identiflow/examples). This folder also contains the scripts that were used to analyse the KEGG pathways, as described in our [paper](https://www.biorxiv.org/content/10.1101/2020.02.03.931816v1). \nAfter successful installation of the package you are able to import it in your Python session. \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9492404491703892,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "First we define the network topology as a networkx Digraph and specify perturbations and their targets in a dictionary. \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9252740890127014,
      "result": {
        "original_header": "Identifiability",
        "type": "Text_excerpt",
        "value": "Next, we investigate which of the interaction and perturbation strengths are identifiable in this perturbation experiment. This can be done with the function `infer_identifiability` (or `infer_identifiability_by_simulation`, see function documentation for details). It returns dictionaries that specify the dimensionality of the associated solution spaces and the identifiability status. The latter can be depicted by the plotting function `draw_identifiability_graph`. \n\nTo elucidate the identifiability relationships between groups of network parameters we can can determine the cyclic flats using the function `infer_identifiability_relationships` and plot them with `draw_lattice`. \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9777152578977515,
      "result": {
        "original_header": "Experimental design",
        "type": "Text_excerpt",
        "value": "IdentiFlow also allows to identify perturbation sequences that maximize the number of identifiable parameters with a minimal number of perturbations. The function `optimize_experimental_design` has different options to do so, that are described in detail in its documentation. Here we try a few and compare their performances. \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GrossTor/IdentiFlow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GrossTor/IdentiFlow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GrossTor/IdentiFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IdentiFlow"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/GrossTor/IdentiFlow/master/./identiflow/examples/identi_net.png"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/GrossTor/IdentiFlow/master/./identiflow/examples/matroid_node_3.png"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/GrossTor/IdentiFlow/master/./identiflow/examples/matroid_node_4.png"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9737975874558495,
      "result": {
        "original_header": "IdentiFlow",
        "type": "Text_excerpt",
        "value": "\nYou can install the IdentiFlow package with [pip](https://pypi.org/project/pip/):\n```\npip install git+https://github.com/GrossTor/IdentiFlow#egg=identiflow\n```\n \nAfter successful installation of the package you are able to import it in your Python session. \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999973284,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "\n```python\nimport networkx as nx\n\nedges = [('node 0', 'node 1'),\n         ('node 0', 'node 2'),\n         ('node 0', 'node 3'),\n         ('node 1', 'node 3'),\n         ('node 2', 'node 3'),\n         ('node 3', 'node 0'),\n         ('node 4', 'node 3'),\n         ('node 4', 'node 5'),\n         ('node 5', 'node 4')]\n\nperturbations = {'P0': {'node 0', 'node 3'},\n                 'P1': {'node 2'},\n                 'P2': {'node 3', 'node 4'}}\n\n\nnet = nx.DiGraph(edges)\n\n#There must be no self_loops. The next line ensures it.\nnet.remove_edges_from(nx.classes.selfloop_edges(net))\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9911063171397491,
      "result": {
        "original_header": "Identifiability",
        "type": "Text_excerpt",
        "value": "\n```python\ncyclic_flats_dict = \\\n    identiflow.infer_identifiability_relationships(net, perturbations)\nfor node in cyclic_flats_dict:\n    if sol_space_dims[node]>0:\n        fig,ax=identiflow.draw_lattice(cyclic_flats_dict[node])\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9198528800531994,
      "result": {
        "original_header": "IdentiFlow",
        "type": "Text_excerpt",
        "value": "\n```python\nimport identiflow\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GrossTor/IdentiFlow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "experimental-design, identifiability, matroid, maximum-flow, network-inference, reverse-engineering, systems-biology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Torsten Gross\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IdentiFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "GrossTor"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 55404,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GrossTor/IdentiFlow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:14:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}