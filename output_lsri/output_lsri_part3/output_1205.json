{
  "application_domain": [
    {
      "confidence": 40.36,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks"
        ],
        "type": "Text_excerpt",
        "value": "If you find this useful please cite the paper mentioned above.\n\n\t@article{doi:10.1021/acs.jcim.1c00799,\n    author = {Aggarwal, Rishal and Gupta, Akash and Chelur, Vineeth and Jawahar, C. V. and Priyakumar, U. Deva},\n    title = {DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks},\n    journal = {Journal of Chemical Information and Modeling},\n    volume = {0},\n    number = {0},\n    pages = {null},\n    year = {0},\n    doi = {10.1021/acs.jcim.1c00799},\n    note ={PMID: 34374539},\n\n    URL = { \n        https://doi.org/10.1021/acs.jcim.1c00799\n    \n    },\n    eprint = { \n        https://doi.org/10.1021/acs.jcim.1c00799\n    \n    }\n\n    }\n\n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Aggarwal, Rishal and Gupta, Akash and Chelur, Vineeth and Jawahar, C. V. and Priyakumar, U. Deva",
        "doi": "10.1021/acs.jcim.1c00799",
        "format": "bibtex",
        "title": "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks",
        "type": "Text_excerpt",
        "url": " \nhttps://doi.org/10.1021/acs.jcim.1c00799\n\n",
        "value": "@article{doi:10.1021/acs.jcim.1c00799,\n    eprint = { \nhttps://doi.org/10.1021/acs.jcim.1c00799\n\n},\n    url = { \nhttps://doi.org/10.1021/acs.jcim.1c00799\n\n},\n    note = {PMID: 34374539},\n    doi = {10.1021/acs.jcim.1c00799},\n    year = {0},\n    pages = {null},\n    number = {0},\n    volume = {0},\n    journal = {Journal of Chemical Information and Modeling},\n    title = {DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks},\n    author = {Aggarwal, Rishal and Gupta, Akash and Chelur, Vineeth and Jawahar, C. V. and Priyakumar, U. Deva},\n}"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/devalab/DeepPocket"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-05T11:21:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-19T11:37:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ligand Binding Site detection using Deep Learning"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9166345221258662,
      "result": {
        "original_header": "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks",
        "type": "Text_excerpt",
        "value": "DeepPocket is a 3D convolutional Neural Network framework for ligand binding site detection and segmentation from protein structures. This is the official open source repository for the following paper: \nAggarwal, Rishal; Gupta, Akash; Chelur, Vineeth; Jawahar, C. V.; Priyakumar, U. Deva (2021): DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks. ACS JCIM. 2021 [Link](https://pubs.acs.org/doi/10.1021/acs.jcim.1c00799)  \nIf you want to use this project for development, we recommend going through [libmolgrid](https://github.com/gnina/libmolgrid) first. To use DeepPocket for predicting binding sites on an input protein skip to \"Predicting Binding Sites\" section. \n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9407017311753363,
      "result": {
        "original_header": "Dataset Preprocessing",
        "type": "Text_excerpt",
        "value": "PDB files are first parsed to remove hetero atoms, then converted to \"gninatypes\" files and finally collected into a \"molcache2\" file for quicker input and model training with libmolgrid. \"gninatypes\" and \"molcache2\" files are binary files that store an efficient representation of the input protein to be used for gridding the molecule. They are prepared for faster input with libmolgrid for quicker training of the CNN models. \ncavity6.mol2 files that are provided by scPDB and generated by volsite for other datasets are used as is, the \"data_dir\" argument in training scripts have to be pointed to the parent directory they are present. \n\".types\" files contain training data points prepared, the first column is the class label, the next three columns are pocket center cordinates (x,y,z) and the final columns contain molecule files required for that datapoint. All the molecule files specified in the types files must be present in either the molcache or in the \"data_dir\".  \nEdit - I now provide the ligands used in the publication for Coach420 and Holo4k in the same onedrive link above. The number of ligands is not the same as the original manuscript possibly due to differences in whether a molecule file is percieved as valid by different versions of openbabel. For Coach420 I now provide 361 molecules as compared to 359 in the manuscript, and for Holo4k I provide 4309 as compared to 4288 mentioned earlier.    \nI know this may be very cryptic, therefore I have written down simple steps in the last section of the README that one can use to prepare a new dataset for training. \n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8943670830629765,
      "result": {
        "original_header": "Predicting Binding Site",
        "type": "Text_excerpt",
        "value": "\"predict.py\" is a simple script that can be used for predicting binding sites from a .pdb file. It follows 6 steps namely:\n1) Hetero atom removal (clean_pdb)\n2) fpocket run\n3) Parsing fpocket output for candidate centers (get_centers)\n4) Creating gninatypes and types file for CNN input (types_and_gninatyper)\n5) Rerank types input according to CNN score (rank_pockets)\n6) Segment shape of top ranked pockets (segment_pockets) \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9406227426750913,
      "result": {
        "original_header": "Training Classifier",
        "type": "Text_excerpt",
        "value": "Description of each argument given in script.\n \nWe use [wandb](https://wandb.ai/site) to track training performance. It's free and easy to use. If you want to avoid using wandb, simply comment out all lines that contain \"wandb\" in the training script. \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9616829935156784,
      "result": {
        "original_header": "Training segmentation",
        "type": "Text_excerpt",
        "value": "    python train_segmentation.py --train_types seg_scPDB_train9.types --test_types seg_scPDB_test9.types -d data/ --train_recmolcache scPDB_new.molcache2 --test_recmolcache scPDB_new.molcache2 -b 8 -o model_saves/seg9 -e 200 -r seg9\n    \nDescription of each argument in script\n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9488439010924956,
      "result": {
        "original_header": "Substructure Benchmark",
        "type": "Text_excerpt",
        "value": "\"refined4414_predict.types\" file contains fpocket candidate centers closest to ligand for protein-ligand complexes in the refined dataset.\nThe data directory should contain clean (no water) .pdb files and ligand sdf files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9622521433861129,
      "result": {
        "original_header": "Dockerized Version",
        "type": "Text_excerpt",
        "value": "A dockerized version of DeepPocket is available in the `docker` directory. The docker image contains all the necessary dependencies to run DeepPocket. \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/devalab/DeepPocket/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/devalab/DeepPocket/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "devalab/DeepPocket"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/PocketPredict/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/PocketPredict/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devalab/DeepPocket/main/docker/PocketPredict/start.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparing Data",
        "parent_header": [
          "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks"
        ],
        "type": "Text_excerpt",
        "value": "I have written down steps below that pertain to preparing training data for a dataset like PDBbind, but could easily be adopted for other datasets by making approprate changes of file paths and file names in the scripts.\n\nSteps for preparing training data:\n\n1) remove hetero atoms (clean_pdb.py)\n2) run fpocket through structures (fpocket -f *_protein.pdb)\n3) get candidate pocket centers for all structures (get_centers.py)\n4) create .gninatypes files for all structure (gninatype() in types_and_gninatyper.py)\n5) make train and test types (make_types.py)\n6) create molcache file for training (create_molcache2.py)\n\nExample usage of create_molcache2:\n\n\tpython create_molcache2.py -c 4 --recmolcache scPDB_new.molcache2 -d data/scPDB/  scPDB_train0.types scPDB_test0.types\n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9029422479060708,
      "result": {
        "original_header": "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks",
        "type": "Text_excerpt",
        "value": "If you want to use this project for development, we recommend going through [libmolgrid](https://github.com/gnina/libmolgrid) first. To use DeepPocket for predicting binding sites on an input protein skip to \"Predicting Binding Sites\" section. \n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9836199767320486,
      "result": {
        "original_header": "Dataset Preprocessing",
        "type": "Text_excerpt",
        "value": "Prepared types, molcache and saved model checkpoints can be downloaded [here](https://iiitaphyd-my.sharepoint.com/:f:/g/personal/rishal_aggarwal_alumni_iiit_ac_in/EoJSrvuiKPlAluOJLjTzfpcBT2fVRdq8Sr4BMmil0_tvHw?e=kXUss4). SC6K can be downloaded from the same link (SC6K.tar.gz). COACH420 and HOLO4k are publicly available [here](https://github.com/rdk/p2rank-datasets) \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9991189368981231,
      "result": {
        "original_header": "Predicting Binding Site",
        "type": "Text_excerpt",
        "value": "    python predict.py -p protein.pdb -c first_model_fold1_best_test_auc_85001.pth.tar -s seg0_best_test_IOU_91.pth.tar -r 3 \nIf you asked for segmented pockets (\"-r\") the script will output \".dx\" files that can be visualised in pymol. It will also output \"pocket*.pdb\" files that contain predicted binding site residues. If no binding site residues are predicted that particular pocket*.pdb will not be created.\n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8943046331144366,
      "result": {
        "original_header": "Substructure Benchmark",
        "type": "Text_excerpt",
        "value": "To reproduce our results on the substructure benchmark, run the following command:\n     \n        python subpockets_benchmark_all.py --test_types refined4414_predict.types --model_weights refined_best_test_IOU_88.pth.tar -d ./data/ --test_recmolcache refined4414.molcache2 \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9064232503580112,
      "result": {
        "original_header": "Dockerized Version",
        "type": "Text_excerpt",
        "value": "A dockerized version of DeepPocket is available in the `docker` directory. The docker image contains all the necessary dependencies to run DeepPocket. \nThe detailed instructions to run the docker image are provided in the README of the `docker` directory.\n \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9039950549570104,
      "result": {
        "original_header": "Predicting Binding Site",
        "type": "Text_excerpt",
        "value": "Example usage of predict.py: \n    python predict.py -p protein.pdb -c first_model_fold1_best_test_auc_85001.pth.tar -s seg0_best_test_IOU_91.pth.tar -r 3 \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9163608421196618,
      "result": {
        "original_header": "Training Classifier",
        "type": "Text_excerpt",
        "value": "Example usage of train.py: \n    python train.py -m model.py --train_types scPDB_train0.types --test_types scPDB_test0.types -i 200000 --train_recmolcache scPDB_new.molcache2 --test_recmolcache scPDB_new.molcache2 -r val0 -o /model_saves/val9 --base_lr 0.001 --solver Adam  \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.877736018239247,
      "result": {
        "original_header": "Training segmentation",
        "type": "Text_excerpt",
        "value": "Example usage of train_segmentation.py: \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8879176248637584,
      "result": {
        "original_header": "Substructure Benchmark",
        "type": "Text_excerpt",
        "value": "To reproduce our results on the substructure benchmark, run the following command:\n     \n        python subpockets_benchmark_all.py --test_types refined4414_predict.types --model_weights refined_best_test_IOU_88.pth.tar -d ./data/ --test_recmolcache refined4414.molcache2 \n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/devalab/DeepPocket/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Deva Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepPocket"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "devalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 104937,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 713,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 199,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "DeepPocket: Ligand Binding Site Detection and Segmentation using 3D Convolutional Neural Networks"
        ],
        "type": "Text_excerpt",
        "value": "[Fpocket](https://github.com/Discngine/fpocket), [Pytorch](https://pytorch.org/), [libmolgrid](https://github.com/gnina/libmolgrid), [Biopython](https://biopython.org/) and other frequently used python packages\n\nTo reproduce the substructure benchmark [Prody](https://prody.csb.pitt.edu/) and [Rdkit](https://www.rdkit.org/) are also required.\n"
      },
      "source": "https://raw.githubusercontent.com/devalab/DeepPocket/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:59:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 89
      },
      "technique": "GitHub_API"
    }
  ]
}