{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AlkemaLab/fpemlocal"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-01T19:50:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-04T11:44:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "fpemlocal"
        ],
        "type": "Text_excerpt",
        "value": "The fpemlocal package is the one-country implementation of FPEM (family\nplanning estimation model) designed with tidyverse philosophy. The model\nin this package uses global model results from the package FPEMglobal to\naid in the estimation of country level family planning indicators.\nfpemlocal comes equiped with survey data, country unit data, and country\npopulation count data, to produce one-country runs. Running FPEM is\ndivided into three main functions.\n\n1.  [Fit a one country model](#fit) `fit_fp_c`\n2.  [Calculate family planning indicators](#results) `clac_fp_c`\n3.  [Plot the family planning estimates against the survey data](#plot)\n    `plot_fp_c`\n\nThese three functions make running one country FPEM straightforward,\nwhile retaining enough division to carry out a variety of developer and\nclient tasks. In this document we will cover the typical use of these\nthree functions.\n\nTo start a run we need to know the country code for the country of\ninterest. Our package contains country codes and other country units in\nthe dataset `divisions`.\n\n``` r\ndivisions %>% head\n```\n\n    ## # A tibble: 6 x 13\n    ##   division_numeri~ name_country name_region name_sub_region region_numeric_~\n    ##              <dbl> <chr>        <chr>       <chr>                      <dbl>\n    ## 1                4 Afghanistan  Asia        South-Central ~              935\n    ## 2                8 Albania      Europe      Southern Europe              908\n    ## 3               12 Algeria      Africa      Northern Africa              903\n    ## 4               16 American Sa~ Oceania     Polynesia                    909\n    ## 5               20 Andorra      Europe      Southern Europe              908\n    ## 6               24 Angola       Africa      Middle Africa                903\n    ## # ... with 8 more variables: sub_region_numeric_code <dbl>,\n    ## #   is_developed_region <chr>, is_less_developed_region <chr>,\n    ## #   is_least_developed_country <chr>, is_in_sub_saharan_africa <chr>,\n    ## #   is_unmarried_sexual_activity <chr>, is_low_population <chr>,\n    ## #   is_fp2020 <chr>\n\nOur package data sets are tibbles. The country codes used by our\npackage, known as `division_numeric_code`, are found in this data. In\nour example we will execute a one-country run for Afghanistan, code `4`.\nSurvey data is available in the dataset `contraceptive_use`. See\n`??contraceptive_use` for a detailed description of this dataset.\n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8941430364909907,
      "result": {
        "original_header": "1. Fit a one country model",
        "type": "Text_excerpt",
        "value": "The package can be installed by cloning and using `devtools::install()`.\nThe source code for vignettes can be found in\n[/vignettes](https://github.com/FPcounts/fpemlocal/tree/master/vignettes).\nBelow is a brief introduction. \n## Introduction \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.962060096971148,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "The fpemlocal package is the one-country implementation of FPEM (family\nplanning estimation model) designed with tidyverse philosophy. The model\nin this package uses global model results from the package FPEMglobal to\naid in the estimation of country level family planning indicators.\nfpemlocal comes equiped with survey data, country unit data, and country\npopulation count data, to produce one-country runs. Running FPEM is\ndivided into three main functions. \nThese three functions make running one country FPEM straightforward,\nwhile retaining enough division to carry out a variety of developer and\nclient tasks. In this document we will cover the typical use of these\nthree functions. \nTo start a run we need to know the country code for the country of\ninterest. Our package contains country codes and other country units in\nthe dataset `divisions`.\n``` r\ndivisions %>% head\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9921735782790031,
      "result": {
        "original_header": "1. Fit a one country model",
        "type": "Text_excerpt",
        "value": "Our package data sets are tibbles. The country codes used by our\npackage, known as `division_numeric_code`, are found in this data. In\nour example we will execute a one-country run for Afghanistan, code `4`.\nSurvey data is available in the dataset `contraceptive_use`. See\n`??contraceptive_use` for a detailed description of this dataset. \n`fit_fp_c` is a wrapper function to fit the one-country implementation\nof the family planning estimation model. There are two versions of this\nmodel, one for in-union and another for not-in-union women which can be\nspecified with the argument `is_in_union`. These are denoted `\"Y\"` and\n`\"N\"` respectively. The first\\_year and last\\_year arguments determine\nthe years of estimates exported from the run. Regardless of these\narguments, the function will use all years in which data is available\nfor estimation. When a survey file is not provided, as in this example,\nthe function uses default package contraceptive\\_use. The user may also\nsupply optional services statistics.\n``` r\nfit <- fit_fp_c(\n  is_in_union = \"Y\",\n  division_numeric_code = 4,\n  first_year = 1970,\n  last_year = 2030,\n  diagnostic = TRUE\n)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8940135870088458,
      "result": {
        "original_header": "2. Calculate point estimates for indicators",
        "type": "Text_excerpt",
        "value": "## 2\\. Calculate point estimates for indicators \n`fpet_calculate_indicators` is a wrapper function for calculating point\nestimates and confidence intervals. By default the function uses package\npopulation data (See `population_counts`) in order to calculate family\nplanning indicators. Custom population count data may be supplied (See\n`??fpet_get_results`).\n``` r\nresults <- calc_fp_c(fit)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8843681424687448,
      "result": {
        "original_header": "3. Plot the point estimates against the survey data",
        "type": "Text_excerpt",
        "value": "`plot_fp_c` plots the results of the model against the survey data. The\nuser supplies the objects exported from `fit_fp_c` and\n`fpet_calculate_indicators` as well as indicators of interest.\nIndicators of interest are supplied to the argument `indicators`. The\nargument `compare_to_global` adds point estimate and 95% credible\ninterval from the UNPD global model (See `global_estimates`). The global\nmodel estimates are plotted using dotted lines. Since we are only using\nthe default data from UNPD the estimates from our model should align\nwith the UNPD estimates.\n``` r\nplot_fp_c(\n  fit,\n  results,\n  indicators = c(\n    \"unmet_need_any\",\n    \"contraceptive_use_modern\",\n    \"contraceptive_use_traditional\",\n    \"contraceptive_use_any\"\n    ),\n  compare_to_global = FALSE\n)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AlkemaLab/fpemlocal/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AlkemaLab/fpemlocal/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlkemaLab/fpemlocal"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fpemlocal"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README_files/figure-gfm/unnamed-chunk-5-1.png"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README_files/figure-gfm/unnamed-chunk-5-2.png"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README_files/figure-gfm/unnamed-chunk-5-3.png"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README_files/figure-gfm/unnamed-chunk-5-4.png"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "fpemlocal"
        ],
        "type": "Text_excerpt",
        "value": "The package can be installed by cloning and using `devtools::install()`.\nThe source code for vignettes can be found in\n[/vignettes](https://github.com/FPcounts/fpemlocal/tree/master/vignettes).\nBelow is a brief introduction.\n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9626294595429513,
      "result": {
        "original_header": "1. Fit a one country model",
        "type": "Text_excerpt",
        "value": "## Installation \nThe package can be installed by cloning and using `devtools::install()`.\nThe source code for vignettes can be found in\n[/vignettes](https://github.com/FPcounts/fpemlocal/tree/master/vignettes).\nBelow is a brief introduction. \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8787397410210823,
      "result": {
        "original_header": "3. Plot the point estimates against the survey data",
        "type": "Text_excerpt",
        "value": "## <a name=\"plot\"></a> \n"
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AlkemaLab/fpemlocal/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 FPcounts\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fpemlocal"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AlkemaLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 584731,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 157722,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.html"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlkemaLab/fpemlocal/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregGu",
          "type": "User"
        },
        "date_created": "2020-11-20T21:39:48Z",
        "date_published": "2020-12-02T22:16:18Z",
        "description": "Release upon submission of manuscript. This release includes minor updates to wrapper functions and vignettes. The wrapper functions to fit, calculate, and plot are now capable of outputting in-union, not-in-union, and all women with a single function call.",
        "html_url": "https://github.com/AlkemaLab/fpemlocal/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 34719999,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/AlkemaLab/fpemlocal/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/AlkemaLab/fpemlocal/releases/34719999",
        "value": "https://api.github.com/repos/AlkemaLab/fpemlocal/releases/34719999",
        "zipball_url": "https://api.github.com/repos/AlkemaLab/fpemlocal/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregGu",
          "type": "User"
        },
        "date_created": "2020-06-01T20:16:46Z",
        "date_published": "2020-06-01T20:28:58Z",
        "description": "release of FPEMcountry deployed for track20 web application",
        "html_url": "https://github.com/AlkemaLab/fpemlocal/releases/tag/1.0.1",
        "name": "v1.0.1 2020 release",
        "release_id": 27110712,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/AlkemaLab/fpemlocal/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/AlkemaLab/fpemlocal/releases/27110712",
        "value": "https://api.github.com/repos/AlkemaLab/fpemlocal/releases/27110712",
        "zipball_url": "https://api.github.com/repos/AlkemaLab/fpemlocal/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:08:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}