{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/benliu5085/DRAGoM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-11T16:05:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-26T00:47:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description:",
        "type": "Text_excerpt",
        "value": "DRAGoM is a tool designed to predict and assemble ncRNA from next generation sequencing data.\nDRAGoM is written in C++ and has been tested on a 64-bit Linux system, Red hat (7) and Ubuntu (20.04 LTS).\nDRAGoM is freely available under the Creative Commons BY-NC-ND 4.0 License Agreement (https://creativecommons.org/licenses/by-nc-nd/4.0/).\nIf you have any troubles when using DRAGoM, feel free to contact Ben Liu (ben_0522@ku.edu) or Cuncong Zhong (cczhong@ku.edu).\n\nThe input for DRAGoM includes:\n1. raw reads, pair-end or single-end, trim if necessary;\n2. CM files of interested ncRNA from Rfam(https://rfam.xfam.org)\n\nThe output of DRAGoM includes:\n1. summary.csv: which summarized the read counts for each ncRNA family;\n2. predicted reads for each ncRNA family in seperate file;\n3. assembled ncRNA homologs for each ncRNA family in seperate file;\n\n=============================================="
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8965317862692908,
      "result": {
        "original_header": "Output:",
        "type": "Text_excerpt",
        "value": "1. summary.csv, this file summarized the read counts for each ncRNA family:\n(Note this is a csv file)\nacc,predicted reads,name\nRF00002,11,5_8S_rRNA\nRF00010,21,RNaseP_bact_a \n2. RF00010.assembled_rna.fa, this file listed all homologs of RF00010:\nE.g.\n>24,39,1,100,7,67,100_0_166_5.8e-28_RF00010\nTGGATGATAGATGGAGGAGAGGAAAGTCCGGGCTCCACAGGGCAGGGTGCCAGATAACGTGTGGGGGGTGAAAGCCCACGACCAGTGCAACAGAGAGCAA\nACCGCCGATGGCTTACTTAATGTAGGATCAGGTAAGGGTGAACGGGTGCGGTAAGAGCGCACCGCA\n>69,1,1,100_27_404_6.7e-98_RF00010\nGGAGTTGACTAGACATTCGCTGCTTTATCATTAATCCTTTGGATGATAGATGGAGGAGAGGAAAGTCCGGGCTCCACAGGGCAGGGTGCCAGATAACGTC\nTGGGGGGTGAAAGCCCACGACCAGTGCAACAGAGAGCAAACCGCCGATGGCTTACTTAATGTAGGATCAGGTAAGGGTGAAAGGGTGCGGTAAGAGCGCA\nCCGCACGGCTGGTAACAGTTCGTGGCACGGTAAACTCCACTCGGAGCAAGGCCAAATAGGGGTTCATTAGGTACGGCCCGTATCGAACCCGGGTAGGCTG\nCTTGAGCCAGTGCGTAAGTGCTGGCCTAGATGAATGATTGTCCACGACAGAACCCGGCTTATCGGTCAACTTCACAA \n3. RF00010.prediction.csv, this file listed all predicted reads for RF00010:\n(Note this is a csv file)\nE.g.\nRead_Header,E-value\ntest_203_341_0:0:0_1:0:0_16/1,6.7e-98\ntest_114_297_2:0:0_0:0:0_9/1,6.7e-98\ntest_114_297_2:0:0_0:0:0_9/2,6.7e-98 \n5. RF00002.prediction.csv, this file listed all predicted reads for RF00002:\n(Note this is a csv file)\nE.g.\nRead_Header,E-value\ntest_543_727_0:0:0_2:0:0_2/2,1.2e-16\ntest_512_722_1:0:0_2:0:0_b/1,1.2e-16\ntest_853_1013_1:0:0_3:0:0_0/2,6e-11 \n"
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/benliu5085/DRAGoM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/benliu5085/DRAGoM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "benliu5085/DRAGoM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DRAGoM: Detection of RNA using Assembly Graph from Metagenomics data"
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation:",
        "type": "Text_excerpt",
        "value": "To install DRAGoM, please follow the steps below:\n\n1. Untar the downloaded file \"DRAGoM.tar.gz\". This will generate the directory \"DRAGoM\".\n    $ tar xzvf DRAGoM.tar.gz\n\n2. Install DRAGoM by running the \"install.sh\" script.\n    $ bash install.sh\n\nNote:\n1. An 'env.config' file will be created automatically after runninng 'install.sh', which contains\n   the absolute directory to all executable of all third-party softwares. If you want to use another\n   version, update the corresponding directory to the executable you want DRAGoM to use.\n2. The 'cmsearch' and 'cmpress' are included in the software infernal.\n\n=============================================="
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999999912035,
      "result": {
        "original_header": "Third-party software:",
        "type": "Text_excerpt",
        "value": "1. sga (https://github.com/jts/sga)\n2. SPAdes (https://cab.spbu.ru/software/spades/)\n3. bwa (http://bio-bwa.sourceforge.net)\n4. infernal (http://eddylab.org/infernal/)\n5. cd-hit (http://weizhongli-lab.org/cd-hit/)\n6. samtools (http://www.htslib.org) \nNote:\n1. You must install the prerequisites to successfully run DRAGoM.\n2. We provided one set of pre-built binary of all third-party softwares with DRAGoM.\n   If you prefer to use another version of any third-party software, remember to update the env.config file.\n3. We have tested the softwares on Red hat ( > 7 ) and Ubuntu ( > 18.04 ), if you are going to use DRAGoM on\n   other OS, you might need to install the third-party softwares on your own. \n"
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8119911972396349,
      "result": {
        "original_header": "Output:",
        "type": "Text_excerpt",
        "value": "3. RF00010.prediction.csv, this file listed all predicted reads for RF00010:\n(Note this is a csv file)\nE.g.\nRead_Header,E-value\ntest_203_341_0:0:0_1:0:0_16/1,6.7e-98\ntest_114_297_2:0:0_0:0:0_9/1,6.7e-98\ntest_114_297_2:0:0_0:0:0_9/2,6.7e-98 \n"
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/benliu5085/DRAGoM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DRAGoM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "benliu5085"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 68261,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 26473,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2233,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 412,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites:",
        "type": "Text_excerpt",
        "value": "1. g++ compiler ( >= 4.8.5)\n2. boost ( >= 1.53)\n3. python 2.7\n4. make ( >= 3.82)\n5. cmake ( >= 3.12)\n\nNote:\nWe assume the boost library is installed using package manager to default directory (/usr/include/boost). If you installed boost library at other directory, please update the ~/DRAGoM/src/CMakeLists.txt \"set(Boost_INCLUDE_DIR /usr/include)\" into \"set(Boost_INCLUDE_DIR WHERE/BOOST/IS)\", WHERE/BOOST/IS is the directory where you installed boost library.\n"
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the program:",
        "type": "Text_excerpt",
        "value": "1.  The runDragom.py wrapper is used to run the DRAGoM.\n\nUSAGE: python2 runDragom.py [options]\n\nInput  options:\n-1   <filename>    : fastq file with forward paired-end reads\n-2   <filename>    : fastq file with reverse paired-end reads\n                   only use -1 <filename> means that input reads are interleaved paired-end reads\n-s   <filename>    : fastq file with single-end reads\n                   if both pair-end or single-end input are provided, the single-end input will be ignored\n-p   <filename>    : parameter file\n-m   <int>         : [optional] maximum extension length for anchors [default: 100]\n-d                 : [optional] anchor masking flag [use this to disable anchor masking]\n-h                 : print help message\n\n\nNote:\n1. The parameter file specifies the parameters used for running all programs including in DRAGoM;\n2. The parameter file must contain the path to input CM files;\n3. You must provide at least one cm file to run the program;\n4. Don't change the parameters if you don't understand what it means.\n\n=============================================="
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:34:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "type": "Text_excerpt",
        "value": "An example of simulated pair-end reads file is provided in the ~/example/ directory.\nYou can use the example to test the installation using:\n$ cd ~/example/\n$ python2 ../runDragom.py -1 example.read1.fq -2 example.read2.fq -p example.config\n\nNote:\nyou might need to unzip the example file using:\n$ tar -xvf example.tar.gz\n\n=============================================="
      },
      "source": "https://raw.githubusercontent.com/benliu5085/DRAGoM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}