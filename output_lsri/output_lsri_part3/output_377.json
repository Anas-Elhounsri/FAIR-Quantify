{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SONGDONGYUAN1994/scsampler"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "scSampler"
        ],
        "type": "Text_excerpt",
        "value": "Any questions or suggestions on `scSampler` are welcomed! If you have any questions, please report it on [issues](https://github.com/SONGDONGYUAN1994/scsampler/issues) or contact Dongyuan (<dongyuansong@ucla.edu>).\n"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-05T00:43:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-17T15:41:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.992463405849034,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "`scSampler` is a Python pacakge for fast diversity-preserving subsampling of large-scale single-cell transcriptomic data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SONGDONGYUAN1994/scsampler/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SONGDONGYUAN1994/scsampler/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SONGDONGYUAN1994/scsampler"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scSampler"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "scSampler"
        ],
        "type": "Text_excerpt",
        "value": "Please install it from PyPI:\n``` python\npip install scsampler\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SONGDONGYUAN1994/scsampler/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Dongyuan Song\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/LICENCE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scsampler"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SONGDONGYUAN1994"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8557,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:41:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "scSampler"
        ],
        "type": "Text_excerpt",
        "value": "First we load all modules.\n```python\nimport numpy as np\nimport pandas as pd\nimport scanpy as sc\nfrom time import time\nfrom scsampler import scsampler\nsc.settings.verbosity = 3             # verbosity: errors (0), warnings (1), info (2), hints (3)\nsc.logging.print_header()\nsc.settings.set_figure_params(dpi=80, facecolor='white')\n```"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Read in data",
        "parent_header": [
          "scSampler",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "The example data can be downloaded from https://doi.org/10.5281/zenodo.5811787 in the `anndata` format by `scanpy`. Here we use the ~68'000 PBMC cells. Please modify the path as your own path.\n```{python}\nadata = sc.read_h5ad('/home/dongyuan/scSampler/data/final_h5ad/pbmc68k.h5ad')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "anndata as input",
        "parent_header": [
          "scSampler",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "Subsample 10% cells and return a new anndata. The space is top PCs.\n```{python}\nadata_sub = scsampler(adata, fraction = 0.1, copy = True) \n```\nIf you want to speed it up, you can use the `random_split`. It will lead to slightly less optimal result, of course.\n```{python}\nstart = time()\nadata_sub = scsampler(adata, fraction = 0.1, obsm = 'X_pca', copy = True, random_split = 16)\nend = time()\nprint(end - start)\n```"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "matrix as input",
        "parent_header": [
          "scSampler",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "You can also use the `numpy.ndarray` as the input.\n```{python}\nmat = adata.obsm['X_pca']\nprint(type(mat))\nres = scsampler(mat, fraction = 0.1, copy = True, random_split = 16)\nsubsample_index = res[1]\nsubsample_mat = res[0]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SONGDONGYUAN1994/scsampler/main/README.md",
      "technique": "header_analysis"
    }
  ]
}