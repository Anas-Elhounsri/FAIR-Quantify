{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ankitgupta83/DeepCME"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-07T13:15:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-29T20:21:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A deep learning framework for solving the Chemical Master Equation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9453927044891002,
      "result": {
        "original_header": "DeepCME",
        "type": "Text_excerpt",
        "value": "A deep learning framework for computing solution statistics of the Chemical Master Equation \nThis is the code accompanying the manuscript titled **DeepCME: A deep learning framework for computing solution statistics of the chemical master equation** by *Ankit Gupta, Christoph Schwab* and *Mustafa Khammash* [PLoS Comput Biol 17(12): e1009623, 2021](https://doi.org/10.1371/journal.pcbi.1009623).  \n\n1. **main.py**: This is the main python script which requires a configuration JSON file as input (see below). Based on this configuration file, a reaction network  example is selected (from ReactionNetworkExamples.py), a deep neural network is trained (if requested), simulation-based output and sensitivity values are estimated (if requested), and the desired plots are generated. \n  \n2. **CME_Solver.py**: The file contains subroutines that construct and train the deep neural network (DNN) with a feedforward structure. The architecture of DNN is determined by the parameters defined in the configuration JSON file. The trained DNN is used for output estimation as well as the computation of its parameter sensitivities w.r.t. all reaction network parameters. \n4. **ReactionNetworkExamples.py**: This file contains classes that encode reaction network examples by inheriting the \"ReactionNetworkDefinition\" class from (ReactionNetworkClass.py). Note that for each example, the output functions must be defined using TensorFlow operations. Currently the file includes the four examples from the manuscript: independent birth death, linear signalling cascade, nonlinear signalling cascade and linear signalling cascade with feedback. More examples can be easily added based on these examples. \n5. **data_saving.py**: This file contains subroutines for saving and retrieving training/validation trajectories, saving training history and DeepCME estimated sensitivity values. \n6. **simulation_validation.py**: This file contains subroutines for estimating outputs with Monte Carlo simulations (with the stochastic simulation algorithm (SSA)) and the parameter sensitivities (with the Bernoulli path algorithm (BPA)). See the manuscript for more details on these methods. The parameters required for these simulation-based methods are taken from the configuration JSON file.  \n7. **plotting.py**: This file contains subroutines for plotting bar charts comparing DeepCME estimated outputs and sensitivity values with those obtained with simulation-based methods and also the exact values (if available). A subroutine for plotting the loss function trajectory is also provided.  \n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ankitgupta83/DeepCME/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ankitgupta83/DeepCME/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ankitgupta83/DeepCME"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCME"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9891166634753988,
      "result": {
        "original_header": "DeepCME",
        "type": "Text_excerpt",
        "value": "8. **ConfigFileDescription.txt**: This text file describes the configuration JSON file for an example. These configuration files are stored in the Configs subfolder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8360193030013483,
      "result": {
        "original_header": "DeepCME",
        "type": "Text_excerpt",
        "value": "8. **ConfigFileDescription.txt**: This text file describes the configuration JSON file for an example. These configuration files are stored in the Configs subfolder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ankitgupta83/DeepCME/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chemical-master-equation, deep-learning, reaction-networks"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 ankitgupta83\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCME"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ankitgupta83"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 96141,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "DeepCME"
        ],
        "type": "Text_excerpt",
        "value": "* [TensorFlow >=2.0](https://www.tensorflow.org/)\n\n\n\nIf you have any questions regarding the code, please contact Ankit Gupta at ankit.gupta@bsse.ethz.ch.\n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:02:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Command Line Execution Example",
        "parent_header": [
          "DeepCME"
        ],
        "type": "Text_excerpt",
        "value": "```\npython main.py independent_birth_death.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ankitgupta83/DeepCME/main/README.md",
      "technique": "header_analysis"
    }
  ]
}