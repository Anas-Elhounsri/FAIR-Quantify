{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Kmerator"
        ],
        "type": "Text_excerpt",
        "value": "[1] Guillaume Mar\u00e7ais, Carl Kingsford, A fast, lock-free approach for efficient parallel counting of occurrences of k-mers, Bioinformatics, Volume 27, Issue 6, 15 March 2011, Pages 764\u2013770, https://doi.org/10.1093/bioinformatics/btr011\n[2] Rodriguez JM, et al. Nucleic Acids Res. Database issue; 2017 Oct 23\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Transipedia/kmerator"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-28T15:55:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T14:21:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Prototype for decomposition of transcript or gene sequences and extraction of their specific k-mers"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9254243531423237,
      "result": {
        "original_header": "Prototype for decomposition of transcript or gene sequences and extraction of their specific k-mers",
        "type": "Text_excerpt",
        "value": "Kmerator is a prototype tool designed for the prediction of specific k-mers (also called tags) from input sequences, considering a reference genome and an ENSEMBL-like transcriptome. From these specific k-mers, it also outputs their corresponding specific contigs which are sequences of consecutive k-mers (overlapping length between k-mers must be k-1, otherwise, it's a new contig). You need to provide kmerator with a jellifsh index of the reference genome. Kmerator itself builds a jellyfish index of the reference transcriptome (by default the latest available version of Ensembl). It then  decomposes your input transcript or gene sequences to count the occurences of each k-mer in the genome and transcriptome. Number of occurrences are then interpreted, in different manners, to select specific k-mer from your input.  \nBefore using kmerator, a jellyfish index of the reference genome must be created. kmerator automatically creates a dataset according to the species and the desired release number (by default, homo_sapiens and the latest version). The dataset is composed of 4 files per species/version: a jellyfish index of the modified transcriptome (cDNA + ncRNA - alternative chormosomes) from Ensembl, a binary file representing the same transcriptome, another binary file containing general information on the genes of the transcriptome and a report file. \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9894988707589462,
      "result": {
        "original_header": "All arguments",
        "type": "Text_excerpt",
        "value": "```\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SELECTION [SELECTION ...], --selection SELECTION [SELECTION ...]\n                        list of gene IDs (ENSG, gene Symbol or alias) or\n                        transcript IDs (ENST) from which you want to extract\n                        specific kmers from. For genes, kmerator search\n                        specific kmers along the gene. For transcripts, it\n                        search specific kmers to the transcript. You can also\n                        give a file with yours genes/transcripts separated by\n                        space, tab or newline. If you want to use your own\n                        unannotated sequences, you must give your fasta file\n                        with --fasta-file option.\n  -f FASTA_FILE, --fasta-file FASTA_FILE\n                        Use this option when yours sequences are unannonated\n                        or provided by a annotation file external from\n                        Ensembl. Otherwise, use --selection option.\n  -d DATADIR, --datadir DATADIR\n                        Storage directory for kmerator datasets.We recommend\n                        to set this parameter by editing the configuration\n                        file (kmerator --edit)\n  -g GENOME, --genome GENOME\n                        Genome jellyfish index (.jf) to use for k-mers\n                        requests.\n  -S SPECIE, --specie SPECIE\n                        indicate a specie referenced in Ensembl, to help,\n                        follow the link\n                        https://rest.ensembl.org/documentation/info/species.\n                        You can use the 'name', the 'display_name' or any\n                        'alias'. For example human or homo_sapiens are valid\n                        (default: human).\n  -k KMER_LENGTH, --kmer-length KMER_LENGTH\n                        k-mer length that you want to use (default 31).\n  -r RELEASE, --release RELEASE\n                        release of transcriptome (default: last).\n  --chimera             Only with '--fasta-file' option.\n  --stringent           Only for genes with '--selection' option: use this\n                        option if you want to select gene-specific k-mers\n                        present in ALL transcripts for your gene. If false, a\n                        k-mer is considered as gene-specific if present in at\n                        least one isoform of your gene of interest.\n  -o OUTPUT, --output OUTPUT\n                        output directory, created if not exists (default:\n                        'output')\n  -t THREAD, --thread THREAD\n                        run n process simultaneously (default: 1)\n  --tmpdir TMPDIR       directory to temporary file (default:\n                        /tmp/kmerator_<random>)\n  -D, --debug           Show more details while Kmerator is running.\n  --keep                keep intermediate files (sequences, indexes, separate\n                        kmers and contigs files).\n  -y, --yes             assumes 'yes' as the prompt answer, run non-\n                        interactively.\n  -e, --edit-config     Edit config file\n  -l, --list-dataset, --list-datasets\n                        list the local datasets (based on the datadir option).\n  --rm-dataset          remove a dataset, according with --specie and\n                        --release options\n  --mk-dataset          make a dataset, according with --specie and --release\n                        options\n  --last-avail, --last-available\n                        last release available on Ensembl\n  -u, --update-dataset  builds a new dataset if a new version is found on\n                        Ensembl\n  --info gene [gene ...]\n                        get some information about gene. Multiple entries are\n                        allowed or a text file with list of genes\n  -a, --all             only with '--info' option. Give more info, like\n                        transcript sequences\n  -v, --version         show program's version number and exit\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9714279184371639,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "extract of kmers.fa:\n```\n>RUNX1:ENST00000675419.kmer3394 ct:3 ex:3/17\nTGAAGAGTATTTGAAAGCAGGACTTCAGAAC\n```\n* `kmer3394`: the first base is at this position in the canonical transcript or the given sequence (1 based)\n* `ct:3`: the kmer is associated to the 3rd contig of this gene/transcript, relative to `contigs.fa` file\n* `ex3/17`: the kmer is located in the 3rd exon of the 17 \nextract of contigs.fa:\n```\n>RUNX1:ENST00000675419.contig_3 (at position 2314)\nACTTCTTTGGGCCTCATAAACAACCACAGAACCACAAGTTGGGTAGCCTGGCAGTGTCAGAAGTCTGAACCCAG\n```\n* `contig_3`: contig count, relative to `ct:3` of  `kmers.fa` headers\n* `position 2314`: the first base of the contig is at this position (1 based) \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Transipedia/kmerator/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Transipedia/kmerator/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Transipedia/kmerator"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Kmerator"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Transipedia/kmerator/raw/main/img/specific-kmers.png"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Transipedia/kmerator/raw/main/img/specific-contigs.png"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 1 (preferred)",
        "parent_header": [
          "Kmerator",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install with pip\n\n```\npip3 install kmerator\n```\n\n\nWith pip, it is also easy to install an older version\n\n```\npip install kmerator==1.0.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 2",
        "parent_header": [
          "Kmerator",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Installation from github\n\n```\ngit clone https://github.com/Transipedia/kmerator3.git\nln -s $PWD/kmerator3/kmerator/kmerator.py /usr/local/bin/kmerator  # or somewhere in your $PATH\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9773302206468985,
      "result": {
        "original_header": "Prototype for decomposition of transcript or gene sequences and extraction of their specific k-mers",
        "type": "Text_excerpt",
        "value": "ref: <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8221386/> \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "All arguments",
        "type": "Text_excerpt",
        "value": "```\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SELECTION [SELECTION ...], --selection SELECTION [SELECTION ...]\n                        list of gene IDs (ENSG, gene Symbol or alias) or\n                        transcript IDs (ENST) from which you want to extract\n                        specific kmers from. For genes, kmerator search\n                        specific kmers along the gene. For transcripts, it\n                        search specific kmers to the transcript. You can also\n                        give a file with yours genes/transcripts separated by\n                        space, tab or newline. If you want to use your own\n                        unannotated sequences, you must give your fasta file\n                        with --fasta-file option.\n  -f FASTA_FILE, --fasta-file FASTA_FILE\n                        Use this option when yours sequences are unannonated\n                        or provided by a annotation file external from\n                        Ensembl. Otherwise, use --selection option.\n  -d DATADIR, --datadir DATADIR\n                        Storage directory for kmerator datasets.We recommend\n                        to set this parameter by editing the configuration\n                        file (kmerator --edit)\n  -g GENOME, --genome GENOME\n                        Genome jellyfish index (.jf) to use for k-mers\n                        requests.\n  -S SPECIE, --specie SPECIE\n                        indicate a specie referenced in Ensembl, to help,\n                        follow the link\n                        https://rest.ensembl.org/documentation/info/species.\n                        You can use the 'name', the 'display_name' or any\n                        'alias'. For example human or homo_sapiens are valid\n                        (default: human).\n  -k KMER_LENGTH, --kmer-length KMER_LENGTH\n                        k-mer length that you want to use (default 31).\n  -r RELEASE, --release RELEASE\n                        release of transcriptome (default: last).\n  --chimera             Only with '--fasta-file' option.\n  --stringent           Only for genes with '--selection' option: use this\n                        option if you want to select gene-specific k-mers\n                        present in ALL transcripts for your gene. If false, a\n                        k-mer is considered as gene-specific if present in at\n                        least one isoform of your gene of interest.\n  -o OUTPUT, --output OUTPUT\n                        output directory, created if not exists (default:\n                        'output')\n  -t THREAD, --thread THREAD\n                        run n process simultaneously (default: 1)\n  --tmpdir TMPDIR       directory to temporary file (default:\n                        /tmp/kmerator_<random>)\n  -D, --debug           Show more details while Kmerator is running.\n  --keep                keep intermediate files (sequences, indexes, separate\n                        kmers and contigs files).\n  -y, --yes             assumes 'yes' as the prompt answer, run non-\n                        interactively.\n  -e, --edit-config     Edit config file\n  -l, --list-dataset, --list-datasets\n                        list the local datasets (based on the datadir option).\n  --rm-dataset          remove a dataset, according with --specie and\n                        --release options\n  --mk-dataset          make a dataset, according with --specie and --release\n                        options\n  --last-avail, --last-available\n                        last release available on Ensembl\n  -u, --update-dataset  builds a new dataset if a new version is found on\n                        Ensembl\n  --info gene [gene ...]\n                        get some information about gene. Multiple entries are\n                        allowed or a text file with list of genes\n  -a, --all             only with '--info' option. Give more info, like\n                        transcript sequences\n  -v, --version         show program's version number and exit\n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9556654947456413,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "* kmers.fa\n* contigs.fa\n* report.md \n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Transipedia/kmerator/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kmerator"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Transipedia"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 100490,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Kmerator"
        ],
        "type": "Text_excerpt",
        "value": "- Python >= v3.7\n- Jellyfish >= 2.0\n\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Execute requests",
        "parent_header": [
          "Kmerator",
          "How to use kmerator"
        ],
        "type": "Text_excerpt",
        "value": "There are two main cases:\n\n- you find for specific k-mers for annotated genes or transcripts : use the `--selection` option, followed by:\n\t- the list of gene and/or transcripts separated by a space\n\t- or a file with the list of genes/transcripts. Separator could by a space, a tab or a newline, and comments are allowed (`#`)\n- you find for specific k-mers of unannotated sequences : use the `--fasta-file` option, followed by a fasta file containing yours requests. In case of you focuses on chimeras, add the `--chimera` option\n\n**Examples:**\n\n```\nkmerator -s npm1 brca2 ENST00000255409 ENSG00000159216    # you can mix genes and transcripts\nkmerator -s genes.txt                                     # you can also use a file with gene list\nkmerator -f file.fa                                       # give a fasta file fr unannotated sequences\n```\n\n**Note** the above commands assume that the configuration file contains at least the `datadir` and `genome` directives, the default species is homo_sapiens and the last available version will be used (if it is not present in datadir, kmerator will propose the construction of a dataset automatically)\n\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:29:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use kmerator",
        "parent_header": [
          "Kmerator"
        ],
        "type": "Text_excerpt",
        "value": "Before all, remember that kmerator needs a jellyfish index of the genome. You must build it according to the species you are studying. You can store and name the index file whatever you want. Please note that you must **not use the jellyfish -C option** when building the reference genome index.\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration file",
        "parent_header": [
          "Kmerator",
          "How to use kmerator"
        ],
        "type": "Text_excerpt",
        "value": "The arguments to run kmerator are numerous, so to reduce the number of arguments to enter, it is advisable to edit the configuration file with the command :\n\n```\nkmerator -e\n```\n\nBy filling in the `datadir` and `genome` directives, you will avoid having to re-enter the `--datadir` and `--genome` arguments systematically. If you are working on a species other than Human, you can also fill in the specie directive. And in a long-term project, you may want to set a release number.\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Note the difference between genes and transcripts",
        "parent_header": [
          "Kmerator",
          "How to use kmerator"
        ],
        "type": "Text_excerpt",
        "value": "- When you are looking for specific kmers of a **gene** (symbol, alias or Ensembl name), kmerator fetch sequence of its canonical transcript, extracts kmers and keep those that found only in the gene.\n- When you are looking for a **transcript**, kmerator only keeps the kmer found in the transcript, and only in that transcript. If isoforms completely cover the transcript, no kmer will be kept.\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Datasets",
        "parent_header": [
          "Kmerator",
          "How to use kmerator"
        ],
        "type": "Text_excerpt",
        "value": "To work, kmerator needs a jellyfish index of the genome, a jellyfish index of the transcriptome and various files. You will have to make the jellyfish genome index manually. Instead, kmerator builds the jellyfish transcriptome index and the files it needs, which we call datasets. There is one dataset per species and per transcriptome version. When kemrator does not find (in datadir) the requested transcriptome release (by default, the latest available on Ensembl), it offers to automatically build the dataset in question. In addition, dataset management options are available:\n\n```\nkmerator -l            # list local datasets\nkmerator -u            # find last release on Ensembl, and build dataset if not present\nkmerator --mk-dataset  # build dataset according to -r <release> and -S <specie> arguments\nkmerator --rm-dataset  # delete dataset according to -r <release> and -S <specie> arguments\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Info",
        "parent_header": [
          "Kmerator",
          "How to use kmerator"
        ],
        "type": "Text_excerpt",
        "value": "You can get information about gene, using the `--info` parameters. Like previous argument, you can enter a mix of symbol gene, Ensembl gene or Ensembl transcript (ex: braf, ENSG00000157764, ENST00000646427), or even use a text file with the list of requested genes separated by space, tab or newline (comments: '#').\nIn addition, you can add `--all` argument to get extended information, like transcript sequences.\n\n```\nkmerator --info MLLT3 ENSG00000157764 # info about the MLLT3 and BRAF genes\nkmerator --info mllt3 -r 109 -S mouse # info about mllt3 against mus_musculus release 109\nkmerator --info MMLT3 --all           # extended info about the MMLT3 gene\nkmerator --info genes.txt             # genes/transcripts are in a file\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Transipedia/kmerator/main/README.md",
      "technique": "header_analysis"
    }
  ]
}