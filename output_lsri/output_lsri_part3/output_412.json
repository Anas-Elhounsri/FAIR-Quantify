{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Yin-Shen/CharID"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact us",
        "type": "Text_excerpt",
        "value": "**Yin Shen**: shenyin1995@163.com <br>\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-25T08:09:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-10T11:01:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A two-step model that combines neural network and ensemble learning to predict OCR\u2013mediated interactions."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Open Chromatin Regions (OCRs) or chromatin accessible regions often harbor many Cis-acting elements and various transcription factor binding sites.Therefore, the efficient and precise identification of interactions between OCRs is essential for understanding eukaryotic transcription regulation.Various high-throughput chromosome conformation capture-based methods gives researchers the possibility to study OCR-mediated loops. But limited by the resolution and cell volume, there are still many potential OCR-mediated loops that have not been explored.Here,  we present **CharID**, a two-step prediction model that combines deep learning and machine learning for predicting OCR-mediated loops.The **CharID** model consists of two parts, the **CharID-Anchor** model and the **CharID-loop** model. **CharID-Anchor** model discriminates well between Anchor and Non-anchor OCRs, and **CharID-Loop** model accurately predicts the interaction between OCRs as Anchor. Finally, we hosted a user-friendly web server including online prediction, query and visulization functionalities that can befreely accessed at http://peaksniffer.hzau.edu.cn/. \n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "(i) Download and install CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ git clone https://github.com/Yin-Shen/CharID.git\n```\n```\n$ echo \"export PATH=\\\"${PWD}/CharID:\\$PATH\\\" \" >>~/.bashrc\n$ source ~/.bashrc\n$ cd CharID\n$ chmod -R 744 CharID\n```\n\nThe follow command can print help information.\n```\nCharID -h\n```\nOr print python scripts help information.\n```\n\npython model.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(ii) The directory structure of CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "The directory structure of CharID is as follows, which has three directories and three files.\n```\n    \u251c\u2500\u2500 src\n    \u251c\u2500\u2500 loops\n    \u251c\u2500\u2500 signal \n    \u251c\u2500\u2500 config.yaml\n    \u251c\u2500\u2500 Snakefile\n    \u2514\u2500\u2500 CharID\n\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Directories",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* All the python and shell scripts are in directory \u201c**CharID/src**\u201d, but users generally don't need to care about it.\n* Directory \u201c**CharID/loops**\u201dcontains loops identified by experiments such as Hi-C, ChIA-PET.The user needs to put the data in bedpe format of loop in this directory.\n* Directory \u201c**CharID/signal** holds sequence feature data (CTCF, conservation) and functional genomic feature data (ChIP-Seq, RNA-Seq) needed for the CharID model. \n\n```\n1. CTCF feature file is \"CTCF_motifs_p1e-5_with_phastCons.txt\",  which is already downloaded, no need to download.\n```\n\n```\n2. conservation feature file need to download by yourself.The download link can be clicked on http://hgdownload.cse.ucsc.edu/goldenpath/hg19/phastCons100way/hg19.100way.phastCons .\nUnder the \"signal\" directory, create a new \"phastCon_raw\" folder, and store the downloaded files under this folder, as shown below.\n```\n```\nchr1.phastCons100way.wigFix\nchr2.phastCons100way.wigFix\nchr3.phastCons100way.wigFix\nchr4.phastCons100way.wigFix\nchr5.phastCons100way.wigFix\nchr6.phastCons100way.wigFix\nchr7.phastCons100way.wigFix\nchr8.phastCons100way.wigFix\nchr9.phastCons100way.wigFix\nchr10.phastCons100way.wigFix\nchr11.phastCons100way.wigFix\nchr12.phastCons100way.wigFix\nchr13.phastCons100way.wigFix\nchr14.phastCons100way.wigFix\nchr15.phastCons100way.wigFix\nchr16.phastCons100way.wigFix\nchr17.phastCons100way.wigFix\nchr18.phastCons100way.wigFix\nchr19.phastCons100way.wigFix\nchr20.phastCons100way.wigFix\nchr21.phastCons100way.wigFix\nchr22.phastCons100way.wigFix\nchrX.phastCons100way.wigFix\nchrY.phastCons100way.wigFix\n```\n```\n3. ChIP-Seq and RNA-Seq Data for the specified cell lines can be downloaded from ENCODE in a format that can be standardized to the style below. In addition to the ChIP-Seq data used in this study below, users can also download other ChIP-Seq data of interest, as long as they are in bigWig format.\n```\n```\nH3K4me1.bigWig\nH3K4me2.bigWig\nH3K4me3.bigWig\nH3K9ac.bigWig\nH3K9me3.bigWig\nH3K27ac.bigWig\nH3K27me3.bigWig\nH3K36me3.bigWig\nH3K79me2.bigWig\nH4K20me1.bigWig\nCTCF.bigWig\nH2AFZ.bigWig\nRAD21.bigWig\nSMC3.bigWig\nZNF143.bigWig\nRNA_seq.bigWig\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* config.yaml (Configuration file)\n* Snakefile (Snakemake file)\n* CharID (Software run files)\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(vi) Output files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "If all steps are completed, the following result file is generated.\n\n```\nCharID_Anchor_Model_architecture.json---.json file of model architecture\nCharID_Anchor_Model_weights.h5---.h5 file of model parameters\nCharID_Anchor_Model_ROC.png---.png file of model ROC curve\nCharID_Anchor_Model_Loss.png---.png file of model training loss decline\nCharID_Anchor_Model_History.png---.png file of model training situation\nCharID_Anchor_Model_predict.bed---.bed file of CharID Anchor model predict anchors\nCharID_Loop_Model.model---model file of CharID Loop model\nCharID_Loop_Model_ROC.svg---.svg file of CharID Loop model ROC and PR curve\nCharID_Loop_Model_predict.bedpe---.bedpe file of CharID Loop predict loops\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Yin-Shen/CharID/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Yin-Shen/CharID/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Yin-Shen/CharID"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_predict_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_ap_filter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/run_batch_predict_new.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_new.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_add_feature_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_negative_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_new_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_add_feature_neg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_predict_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_neg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_batch_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_predict_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cluster_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_pos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_add_feature_neg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_negative_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_predict_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_pos_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_add_feature_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_construct_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/train_test_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/run_batch_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_pos_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cluster_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_construct_negative.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_neg_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_new_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/batch_predict_new_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/dbscan.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_negative.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cluster_bedpe.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_negative_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/train_test_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_batch_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_neg_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_batch_predict_new.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_add_feature_pos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_add_feature_pos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/plot_cross_val.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_pos_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_predict_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/construct_predict_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/add_feature_neg_local.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/train_test_pbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cat_cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_train_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_construct_predict.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cluster.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/cluster_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/rm_pbs_lsf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/src/submit_construct_negative.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/23165406/126583507-4e720000-9b84-46c5-966d-f0aa5a5e7d95.png"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Following Python packages are required:",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 1. Install  packages"
        ],
        "type": "Text_excerpt",
        "value": "* numpy\n* matplotlib\n* sklearn\n* HTSeq\n* pyBigWig\n* cooler\n* pybedtools\n* keras\n* tensorflow-gpu\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2. Install  Snakemake",
        "parent_header": [
          "Steps to install and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "We adopt an easy-to-use workflow software Snakemake to build our analysis  process, which combines a series of steps into a single pipeline. Snakemake and the  manual are provided in this [LINK](https://snakemake.readthedocs.io/en/stable/index.html). \n```\n$ pip install snakemake==5.5.2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(i) Download and install CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ git clone https://github.com/Yin-Shen/CharID.git\n```\n```\n$ echo \"export PATH=\\\"${PWD}/CharID:\\$PATH\\\" \" >>~/.bashrc\n$ source ~/.bashrc\n$ cd CharID\n$ chmod -R 744 CharID\n```\n\nThe follow command can print help information.\n```\nCharID -h\n```\nOr print python scripts help information.\n```\n\npython model.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(ii) The directory structure of CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "The directory structure of CharID is as follows, which has three directories and three files.\n```\n    \u251c\u2500\u2500 src\n    \u251c\u2500\u2500 loops\n    \u251c\u2500\u2500 signal \n    \u251c\u2500\u2500 config.yaml\n    \u251c\u2500\u2500 Snakefile\n    \u2514\u2500\u2500 CharID\n\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Directories",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* All the python and shell scripts are in directory \u201c**CharID/src**\u201d, but users generally don't need to care about it.\n* Directory \u201c**CharID/loops**\u201dcontains loops identified by experiments such as Hi-C, ChIA-PET.The user needs to put the data in bedpe format of loop in this directory.\n* Directory \u201c**CharID/signal** holds sequence feature data (CTCF, conservation) and functional genomic feature data (ChIP-Seq, RNA-Seq) needed for the CharID model. \n\n```\n1. CTCF feature file is \"CTCF_motifs_p1e-5_with_phastCons.txt\",  which is already downloaded, no need to download.\n```\n\n```\n2. conservation feature file need to download by yourself.The download link can be clicked on http://hgdownload.cse.ucsc.edu/goldenpath/hg19/phastCons100way/hg19.100way.phastCons .\nUnder the \"signal\" directory, create a new \"phastCon_raw\" folder, and store the downloaded files under this folder, as shown below.\n```\n```\nchr1.phastCons100way.wigFix\nchr2.phastCons100way.wigFix\nchr3.phastCons100way.wigFix\nchr4.phastCons100way.wigFix\nchr5.phastCons100way.wigFix\nchr6.phastCons100way.wigFix\nchr7.phastCons100way.wigFix\nchr8.phastCons100way.wigFix\nchr9.phastCons100way.wigFix\nchr10.phastCons100way.wigFix\nchr11.phastCons100way.wigFix\nchr12.phastCons100way.wigFix\nchr13.phastCons100way.wigFix\nchr14.phastCons100way.wigFix\nchr15.phastCons100way.wigFix\nchr16.phastCons100way.wigFix\nchr17.phastCons100way.wigFix\nchr18.phastCons100way.wigFix\nchr19.phastCons100way.wigFix\nchr20.phastCons100way.wigFix\nchr21.phastCons100way.wigFix\nchr22.phastCons100way.wigFix\nchrX.phastCons100way.wigFix\nchrY.phastCons100way.wigFix\n```\n```\n3. ChIP-Seq and RNA-Seq Data for the specified cell lines can be downloaded from ENCODE in a format that can be standardized to the style below. In addition to the ChIP-Seq data used in this study below, users can also download other ChIP-Seq data of interest, as long as they are in bigWig format.\n```\n```\nH3K4me1.bigWig\nH3K4me2.bigWig\nH3K4me3.bigWig\nH3K9ac.bigWig\nH3K9me3.bigWig\nH3K27ac.bigWig\nH3K27me3.bigWig\nH3K36me3.bigWig\nH3K79me2.bigWig\nH4K20me1.bigWig\nCTCF.bigWig\nH2AFZ.bigWig\nRAD21.bigWig\nSMC3.bigWig\nZNF143.bigWig\nRNA_seq.bigWig\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* config.yaml (Configuration file)\n* Snakefile (Snakemake file)\n* CharID (Software run files)\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(iv) Set the parameters of CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "Configuration file \u201cconfig.yaml\u201d contains all parameters of the tool. To run CharID, you only need to revise three parameters in the following according to your path and file name, while leaving others as they are.\n```\nbed : /public/home/yshen/deep_learning/CharID/GM12878.bed  #Bed file of Chromatin Accessible Regions for input(Need full path)\ndirectory : /public/home/yshen/deep_learning/CharID              #Current working root directory\ngenome : /public/home/yshen/deep_learning/CharID/hg19.fa    #Human genome file in fasta format(Need full path)\ncooler : /public/home/yshen/deep_learning/CharID/Rao2014-GM12878-MboI-allreps-filtered.5kb.cool  #Chromatin interaction Cool file\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(vi) Output files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "If all steps are completed, the following result file is generated.\n\n```\nCharID_Anchor_Model_architecture.json---.json file of model architecture\nCharID_Anchor_Model_weights.h5---.h5 file of model parameters\nCharID_Anchor_Model_ROC.png---.png file of model ROC curve\nCharID_Anchor_Model_Loss.png---.png file of model training loss decline\nCharID_Anchor_Model_History.png---.png file of model training situation\nCharID_Anchor_Model_predict.bed---.bed file of CharID Anchor model predict anchors\nCharID_Loop_Model.model---model file of CharID Loop model\nCharID_Loop_Model_ROC.svg---.svg file of CharID Loop model ROC and PR curve\nCharID_Loop_Model_predict.bedpe---.bedpe file of CharID Loop predict loops\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Yin-Shen/CharID/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chromatin-accessibiity, de-novo-prediction, deep-learning, hic, interaction, loops"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CharID"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Yin-Shen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 83209,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 37076,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Yin-Shen",
          "type": "User"
        },
        "date_created": "2021-07-22T02:51:24Z",
        "date_published": "2021-08-12T10:06:42Z",
        "html_url": "https://github.com/Yin-Shen/CharID/releases/tag/1.0",
        "release_id": 47733351,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/Yin-Shen/CharID/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Yin-Shen/CharID/releases/47733351",
        "value": "https://api.github.com/repos/Yin-Shen/CharID/releases/47733351",
        "zipball_url": "https://api.github.com/repos/Yin-Shen/CharID/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Following Python packages are required:",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 1. Install  packages"
        ],
        "type": "Text_excerpt",
        "value": "* numpy\n* matplotlib\n* sklearn\n* HTSeq\n* pyBigWig\n* cooler\n* pybedtools\n* keras\n* tensorflow-gpu\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(ii) The directory structure of CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "The directory structure of CharID is as follows, which has three directories and three files.\n```\n    \u251c\u2500\u2500 src\n    \u251c\u2500\u2500 loops\n    \u251c\u2500\u2500 signal \n    \u251c\u2500\u2500 config.yaml\n    \u251c\u2500\u2500 Snakefile\n    \u2514\u2500\u2500 CharID\n\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Directories",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* All the python and shell scripts are in directory \u201c**CharID/src**\u201d, but users generally don't need to care about it.\n* Directory \u201c**CharID/loops**\u201dcontains loops identified by experiments such as Hi-C, ChIA-PET.The user needs to put the data in bedpe format of loop in this directory.\n* Directory \u201c**CharID/signal** holds sequence feature data (CTCF, conservation) and functional genomic feature data (ChIP-Seq, RNA-Seq) needed for the CharID model. \n\n```\n1. CTCF feature file is \"CTCF_motifs_p1e-5_with_phastCons.txt\",  which is already downloaded, no need to download.\n```\n\n```\n2. conservation feature file need to download by yourself.The download link can be clicked on http://hgdownload.cse.ucsc.edu/goldenpath/hg19/phastCons100way/hg19.100way.phastCons .\nUnder the \"signal\" directory, create a new \"phastCon_raw\" folder, and store the downloaded files under this folder, as shown below.\n```\n```\nchr1.phastCons100way.wigFix\nchr2.phastCons100way.wigFix\nchr3.phastCons100way.wigFix\nchr4.phastCons100way.wigFix\nchr5.phastCons100way.wigFix\nchr6.phastCons100way.wigFix\nchr7.phastCons100way.wigFix\nchr8.phastCons100way.wigFix\nchr9.phastCons100way.wigFix\nchr10.phastCons100way.wigFix\nchr11.phastCons100way.wigFix\nchr12.phastCons100way.wigFix\nchr13.phastCons100way.wigFix\nchr14.phastCons100way.wigFix\nchr15.phastCons100way.wigFix\nchr16.phastCons100way.wigFix\nchr17.phastCons100way.wigFix\nchr18.phastCons100way.wigFix\nchr19.phastCons100way.wigFix\nchr20.phastCons100way.wigFix\nchr21.phastCons100way.wigFix\nchr22.phastCons100way.wigFix\nchrX.phastCons100way.wigFix\nchrY.phastCons100way.wigFix\n```\n```\n3. ChIP-Seq and RNA-Seq Data for the specified cell lines can be downloaded from ENCODE in a format that can be standardized to the style below. In addition to the ChIP-Seq data used in this study below, users can also download other ChIP-Seq data of interest, as long as they are in bigWig format.\n```\n```\nH3K4me1.bigWig\nH3K4me2.bigWig\nH3K4me3.bigWig\nH3K9ac.bigWig\nH3K9me3.bigWig\nH3K27ac.bigWig\nH3K27me3.bigWig\nH3K36me3.bigWig\nH3K79me2.bigWig\nH4K20me1.bigWig\nCTCF.bigWig\nH2AFZ.bigWig\nRAD21.bigWig\nSMC3.bigWig\nZNF143.bigWig\nRNA_seq.bigWig\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID",
          "(ii) The directory structure of CharID"
        ],
        "type": "Text_excerpt",
        "value": "* config.yaml (Configuration file)\n* Snakefile (Snakemake file)\n* CharID (Software run files)\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(iii)Download the files needed to run",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "* Chromatin Accessible Regions Data with bed file in specified cell line (download in [ucsc ftp](http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeUwDnase/))\n* Human genome file in fasta format(download in UCSC, [hg19.fa.gz](https://hgdownload.soe.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz))\n* Chromatin interaction Cool file(cool files are available on the [4DN data portal](https://data.4dnucleome.org/))\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(v) Run CharID",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "Snakemake file defines rules to performance operations. We have created a rule for each target and intermediate file. It is not necessary for the users to rewrite it. A complete \u201cSnakefile\u201d file is shown in subsequent section.\n```\nCharID\n```\n\nCharID will perform four steps in turn and output the results of predicted OCRs-mediated loops to a .bedpe format file.\n\n* **Data preprocessing**\n* **CharID Anchor Model**\n* **CharID Loop Model**\n* ***De novo* prediction**\n"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(vi) Output files",
        "parent_header": [
          "Steps to install and run CharID",
          "Step 3. Download and run CharID"
        ],
        "type": "Text_excerpt",
        "value": "If all steps are completed, the following result file is generated.\n\n```\nCharID_Anchor_Model_architecture.json---.json file of model architecture\nCharID_Anchor_Model_weights.h5---.h5 file of model parameters\nCharID_Anchor_Model_ROC.png---.png file of model ROC curve\nCharID_Anchor_Model_Loss.png---.png file of model training loss decline\nCharID_Anchor_Model_History.png---.png file of model training situation\nCharID_Anchor_Model_predict.bed---.bed file of CharID Anchor model predict anchors\nCharID_Loop_Model.model---model file of CharID Loop model\nCharID_Loop_Model_ROC.svg---.svg file of CharID Loop model ROC and PR curve\nCharID_Loop_Model_predict.bedpe---.bedpe file of CharID Loop predict loops\n```"
      },
      "source": "https://raw.githubusercontent.com/Yin-Shen/CharID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:51:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}