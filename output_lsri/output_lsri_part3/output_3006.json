{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "EpiDope"
        ],
        "type": "Text_excerpt",
        "value": "Maximilian Collatz, Florian Mock, Emanuel Barth, Martin H\u00f6lzer, Konrad Sachse, Manja Marz, EpiDope: A Deep Neural Network for linear B-cell epitope prediction, Bioinformatics, , btaa773, https://doi.org/10.1093/bioinformatics/btaa773\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcollatz/EpiDope"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-25T13:14:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-23T14:10:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Prediction of B-cell epitopes from amino acid sequences using deep neural networks."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9379314485790573,
      "result": {
        "original_header": "EpiDope",
        "type": "Text_excerpt",
        "value": "Prediction of B-cell epitopes from amino acid sequences using deep neural networks. Supported on Linux and Mac.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9283581952601414,
      "result": {
        "original_header": "System-requirements",
        "type": "Text_excerpt",
        "value": "8 GB RAM should be available. With 8GB even processing protein sequences longer than 6000 amino acids and/or multiple hundreds of sequences shouldn't be problematic.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9549755406560247,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "We also provide a Docker image for EpiDope.  \nSimply pull and run a ready-to-use image from Dockerhub:  \n```bash\ndocker run -t --rm -v /path/to/input/files:/in -v /path/to/output:/out \\\nflomock/epidope:v0.2 -i /in/proteins.fasta -o /out/epidope_results\n```\n(you need to mount files/folders that you want to access in the Docker via `-v`) \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8857009990302545,
      "result": {
        "original_header": "Note:",
        "type": "Text_excerpt",
        "value": "Run docker with a different memory allocation see [System requirements](#System-requirements) (default is 2GB for linux and mac):  \n(e.g. 8GB)\n```bash\ndocker run -t --rm -v -m=8g /path/to/input/files:/in -v /path/to/output:/out \\\nflomock/epidope:v0.2 -i /in/proteins.fasta -o /out/epidope_results\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9347567046831332,
      "result": {
        "original_header": "Further",
        "type": "Text_excerpt",
        "value": "If you are interested, you find most of the code which was used to create this tool under: \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mcollatz/EpiDope/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcollatz/EpiDope/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mcollatz/EpiDope"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Outdated! Please visit https://github.com/flomock/EpiDope for the newest Version."
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "EpiDope"
        ],
        "type": "Text_excerpt",
        "value": "1.  [Download and install Conda](https://conda.io/projects/conda/en/latest/user-guide/install/index.html).\n\n2.  Create a Conda environment with Python 3.7\n\n    ```bash\n    conda create -n epidope python=3.7\n    ```\n    \n3.  Activate the Conda environment. You will need to activate the Conda environment in each terminal in which you want to use epidope.\n\n    ```bash\n    conda activate epidope\n    ```\n4. Install epidope via conda \n\n    ```bash\n    conda install -c flomock -c conda-forge -c pytorch epidope h5py=2.10 jsonnet \n    ```\n   Note: While installation with conda, the loading bar of epidope is not working. So depending on your internet connection, it can take from a few seconds too minutes until you see any progress.\n   \n5. Install other dependencies\n\n    ```bash\n    pip install allennlp==0.9.0\n    ```\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999440951008597,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "We also provide a Docker image for EpiDope.  \nSimply pull and run a ready-to-use image from Dockerhub:  \n```bash\ndocker run -t --rm -v /path/to/input/files:/in -v /path/to/output:/out \\\nflomock/epidope:v0.2 -i /in/proteins.fasta -o /out/epidope_results\n```\n(you need to mount files/folders that you want to access in the Docker via `-v`) \nOr if you want you can build the image yourself locally from the `Dockerfile` in this repo:\n```bash\ndocker build -t epidope .\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.996546556547186,
      "result": {
        "original_header": "Note:",
        "type": "Text_excerpt",
        "value": "Run as non-root user under linux:\n```bash\ndocker run -t --rm -v /path/to/input/files:/in -v /path/to/output:/out -u `id -u $USER`:`id -g $USER` \\\nflomock/epidope:v0.2 -i /in/proteins.fasta -o /out/epidope_results\n``` \nRun docker with a different memory allocation see [System requirements](#System-requirements) (default is 2GB for linux and mac):  \n(e.g. 8GB)\n```bash\ndocker run -t --rm -v -m=8g /path/to/input/files:/in -v /path/to/output:/out \\\nflomock/epidope:v0.2 -i /in/proteins.fasta -o /out/epidope_results\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.998083881578065,
      "result": {
        "original_header": "Further",
        "type": "Text_excerpt",
        "value": "https://github.com/flomock/epitop_pred\n \n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mcollatz/EpiDope/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019, Florian Mock\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EpiDope"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mcollatz"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 118603,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 541,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "flomock",
          "type": "User"
        },
        "date_created": "2020-12-02T13:29:13Z",
        "date_published": "2020-12-02T13:42:22Z",
        "html_url": "https://github.com/mcollatz/EpiDope/releases/tag/v0.2",
        "name": "First release of EpiDope",
        "release_id": 34691801,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/mcollatz/EpiDope/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mcollatz/EpiDope/releases/34691801",
        "value": "https://api.github.com/repos/mcollatz/EpiDope/releases/34691801",
        "zipball_url": "https://api.github.com/repos/mcollatz/EpiDope/zipball/v0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:13:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "EpiDope"
        ],
        "type": "Text_excerpt",
        "value": "**Example**\n\n```bash\nepidope -i /path_to/multifasta.fa -o ./results/ -e /known/epitopes.txt\n```\n\n**Options:**\n\n\ncommand | what it does\n  ------------- | -------------\n-i, --infile          |Multi- or Singe- Fasta file with protein sequences.  [required]\n-o, --outdir          |Specifies output directory. Default = .\n--delim               |Delimiter char for fasta header. Default = White space\n--idpos               |Position of gene ID in fasta header. Zero based. Default = 0\n-t, --threshold       |Threshold for epitope score. Default = 0.818\n-l, --slicelen        |Length of the sliced predicted epitopes. Default = 15\n-s, --slice_shiftsize |Shiftsize of the slices on predited epitopes. Default = 5\n-p, --processes       |Number of processes used for predictions. Default = #CPU-cores\n-e, --epitopes        |File containing a list of known epitope sequences for plotting\n-n, --nonepitopes     |File containing a list of non epitope sequences for plotting\n-h, --help            |show this message and exit\n"
      },
      "source": "https://raw.githubusercontent.com/mcollatz/EpiDope/master/README.md",
      "technique": "header_analysis"
    }
  ]
}