{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/treynr/ness"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-01T21:40:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-23T16:30:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Heterogeneous graph aggregation and analysis using large-scale, multi-species, biological datasets. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9865445661966326,
      "result": {
        "original_header": "Network Enhanced Similarity Search (NESS)",
        "type": "Text_excerpt",
        "value": "NESS aggregates and harmonizes heterogeneous graph types\nincluding ontologies and their annotations, biological networks, and\nbipartite representations of experimental study results across species.\nThe tool employs diffusion metrics, specifically a random walk with\nrestart (RWR), to estimate the relations among entities in the graph and\nto make data-driven comparisons. \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8823239339108586,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": "NESS accepts five different input types for contstructing the heterogeneous graph: \nhomology mappings\n    ``-h/--homology``. Bipartite associations between homology clusters and genes.\n    Direct associations between homologous genes in separate species can also be used. \nontologies\n    ``-o/--ontologies``. Directed acyclic graphs (DAG) used for knowledge representation in\n    ontologies such as the `Gene Ontology`__ (GO). \nAll input formats *must* be tab delimited.\nHeader rows are optional--NESS will attempt to detect if one is present or not.\nRows that begin with '#' are treated as comments. \nGene set inputs contain four columns, the last two are optional.\nEach row lists a single gene contained in a specific set.\nThe first two columns specify identifiers for the sets and genes respectively.\nThe last two (optional) columns describe the biotypes for the sets and genes. \n    Upregulated in opioid dependence, DRD2, geneset, gene\n    Upregulated in opioid dependence, OPRM1, geneset, gene\n    GS1337, HDAC1, geneset, gene\n    GS1337, HDAC2, geneset, gene \n    Upregulated in opioid dependence, DRD2|OPRM1, geneset, gene\n    GS1337, HDAC1|HDAC2, geneset, gene \nHomology inputs contain four columns, the last two are optional.\nEach row lists a cluster of homologous genes and a gene belonging to that cluster.\nThe first two columns specify identifiers for the cluster and gene respectively.\nThe last two (optional) columns describe the biotypes for the cluster and gene. \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9839873064353271,
      "result": {
        "original_header": "Funding",
        "type": "Text_excerpt",
        "value": "Part of the GeneWeaver__ data repository and analysis platform.\nFor a detailed description of GeneWeaver, see this article__. \nThis work has been supported by joint funding from the NIAAA and NIDA, NIH [R01 AA18776];\nand `The Jackson Laboratory`__ (JAX) Center for Precision Genetics of the\nNIH [U54 OD020351]. \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/treynr/ness/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/treynr/ness/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "treynr/ness"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Network Enhanced Similarity Search (NESS)"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Network Enhanced Similarity Search (NESS)"
        ],
        "type": "Text_excerpt",
        "value": "The current release is :code:`v1.1.0`.\nInstall via pip:\n\n.. code:: bash\n\n    $ pip install https://github.com/treynr/ness/releases/download/v1.1.0/ness-1.1.0.tar.gz\n\nOr clone this repo and install using poetry__:\n\n.. code:: bash\n\n    $ git clone https://github.com/treynr/ness.git\n    $ cd ness\n    $ poetry install\n    $ poetry run ness\n\n.. __: https://python-poetry.org/\n\n\nTesting\n'''''''\n\nRun unit and functional tests:\n\n.. code:: bash\n\n    $ PYTHONPATH=. pytest tests -v\n\n..type checks:\n\n.. code:: bash\n\n    $ mypy --show-error-codes --ignore-missing-imports --no-strict-optional ness\n\n..and style checks:\n\n.. code:: bash\n\n    $ flake8 ness\n\n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999616859734848,
      "result": {
        "original_header": "Network Enhanced Similarity Search (NESS)",
        "type": "Text_excerpt",
        "value": ".. image:: https://img.shields.io/circleci/build/github/treynr/ness/master?style=flat-square&token=3e277067ea5de25755905e093e40d0e70db4c3cf\n    :target: https://circleci.com/gh/treynr/ness \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999914250282,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": ".. __: https://thebiogrid.org/\n.. __: https://geneweaver.org\n.. __: http://geneontology.org/\n.. __: http://www.informatics.jax.org/vocab/mp_ontology/ \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999991892172365,
      "result": {
        "original_header": "Funding",
        "type": "Text_excerpt",
        "value": ".. __: https://geneweaver.org\n.. __: https://www.ncbi.nlm.nih.gov/pubmed/26656951\n.. __: https://jax.org/\n \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8736938405343961,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": ".. csv-table:: Example edge list input\n    :header: node1, node2, biotype1, biotype2 \n.. csv-table:: Example gene set input\n    :header: geneset, gene, set_biotype, gene_biotype \n.. csv-table:: Example homology input\n    :header: cluster, gene, cluster_biotype, gene_biotype \n.. csv-table:: Example ontology input\n    :header: term1, term2, biotype1, biotype2 \n.. csv-table:: Example annotation input\n    :header: term, gene, term_biotype, gene_biotype \n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/treynr/ness/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ness"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "treynr"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67564,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "treynr",
          "type": "User"
        },
        "date_created": "2020-01-23T16:30:00Z",
        "date_published": "2020-01-23T16:35:05Z",
        "html_url": "https://github.com/treynr/ness/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 23078444,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/treynr/ness/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/treynr/ness/releases/23078444",
        "value": "https://api.github.com/repos/treynr/ness/releases/23078444",
        "zipball_url": "https://api.github.com/repos/treynr/ness/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "treynr",
          "type": "User"
        },
        "date_created": "2019-12-19T06:35:52Z",
        "date_published": "2019-12-19T07:02:57Z",
        "description": "Initial release.",
        "html_url": "https://github.com/treynr/ness/releases/tag/v1.0.0",
        "release_id": 22345545,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/treynr/ness/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/treynr/ness/releases/22345545",
        "value": "https://api.github.com/repos/treynr/ness/releases/22345545",
        "zipball_url": "https://api.github.com/repos/treynr/ness/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Network Enhanced Similarity Search (NESS)"
        ],
        "type": "Text_excerpt",
        "value": "See ``pyproject.toml`` for a complete list of required Python packages.\nThe major requirements are:\n\n- Python >= 3.7\n- dask__\n- networkx__\n- numpy__\n- pandas__\n- scipy__\n\n.. __: https://dask.org/\n.. __: https://networkx.github.io/\n.. __: https://numpy.org/\n.. __: https://pandas.pydata.org/\n.. __: https://scipy.org/\n\n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:58:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Network Enhanced Similarity Search (NESS)"
        ],
        "type": "Text_excerpt",
        "value": ".. code:: text\n\n    Usage: ness [OPTIONS] [OUTPUT]\n\n      Network Enhanced Similarity Search (NESS).\n      Integrate heterogeneous functional genomics datasets and calculate\n      diffusion metrics over the heterogeneous network using a random\n      walk with restart.\n\n    Options:\n      -a, --annotations PATH      ontology annotation files\n      -e, --edges PATH            edge list files\n      -g, --genesets PATH         gene set files\n      -h, --homology PATH         homology mapping files\n      -o, --ontologies PATH       ontology relation files\n      -s, --seeds TEXT            seed node\n      --seed-file PATH            file containing list of seed nodes\n      -m, --multiple              if using multiple seed nodes, start from all\n                                  seeds at once instead of one walk per seed\n      -d, --distributed           parallelize the random walk by distributing\n                                  across available cores\n      -c, --cores INTEGER         distribute computations among N cores (default =\n                                  all available cores)\n      -n, --permutations INTEGER  permutations to run\n      -r, --restart FLOAT         restart probability\n      --verbose                   clutter your screen with output\n      --version                   Show the version and exit.\n      --help                      Show this message and exit.\n\nFor example, NESS can be used calculate all pairwise gene affinities for genes in\nbiological network, with a restart probability of 0.15, and save the results to a file:\n\n.. code:: text\n\n    $ ness -e network.txt -r 0.15 results.tsv\n\nOr, calculate the affinity between a single gene (e.g., MOBP) and all other genes in\nthe network:\n\n.. code:: text\n\n    $ ness -e network.txt -s MOBP results.tsv\n\nFor large networks, the random walk can be distributed across cores (eight in this case):\n\n.. code:: text\n\n    $ ness -e network.txt -d -c 8 results.tsv\n\nThe significance of any results can be assessed via permutations of the graph:\n\n.. code:: text\n\n    $ ness -e network.txt -p 500 results.tsv\n\n"
      },
      "source": "https://raw.githubusercontent.com/treynr/ness/master/readme.rst",
      "technique": "header_analysis"
    }
  ]
}