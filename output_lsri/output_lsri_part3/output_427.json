{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karltayeb/cafeh"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-18T15:55:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-26T19:26:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9995683651596464,
      "result": {
        "original_header": "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety",
        "type": "Text_excerpt",
        "value": "This repository contains code for fitting and plotting results of CAFEH model. CAFEH is a method that performs finemapping and colocalization jointly over multiple phenotypes. CAFEH can be run with 10s of phenotypes and 1000s of variants in a few minutes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karltayeb/cafeh/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/CAFEHS_scale_invariance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/CAFEHS_scale_invariance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/CAFEH_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/CAFEH_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/weight_space_view.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/weight_space_view.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/.ipynb_checkpoints/example-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/notebooks/.ipynb_checkpoints/example-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/example/example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/example/example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/cafeh/.ipynb_checkpoints/weight_space_view-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/cafeh/.ipynb_checkpoints/weight_space_view-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/karltayeb/cafeh/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "karltayeb/cafeh"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/karltayeb/cafeh.git\ncd cafeh\nconda env create --file environment.yml  # create envrionment with dependencies\nconda activate cafeh  # activate environment\npip install .  # install package in cafeh environment\n```\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/karltayeb/cafeh/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2022 Karl Tayeb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cafeh"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "karltayeb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 5519886,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 126370,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:53:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety"
        ],
        "type": "Text_excerpt",
        "value": "You can use CAFEH as a command line tool or a python package. Read below for a minimum example of how to use CAFEH from the command line. Look at `notebooks/CAFEH_demo.ipynb` for an example of how to interact with CAFEH in Python.\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line:",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "To use CAFEH from the command line your input data will need to be formatted as a tab delimited text file. If you are using individual level data you will need to provide genotypes, phenotypes, and additional covariates. If you are running CAFEH with summary stats you will need to provide a reference LD matrix AND (effect sizes + standard errors OR z scores) AND sample sizes. For examples of how this input should be formatted look in the `example` subdirectory\n\nTo run CAFEH genotype, include `--mode genotype` in the arguments. You must specify `--genotype (-X)`, `--phenotype (-Y)`, if there are other covariates you may include them with `--covariates (-c)`\n\nThe output will be saved to the directory specified by `--out` flag, in the example below, output is saved to a directory `output`\n\n```\npython cafeh.py --mode genotype -X example/X_example.tsv -Y example/y_example.tsv -c example/cov_example.tsv --out output --save-model                                                                                          current_working_branch \u2731 \u25fc\nfitting CAFEH genotype...\nsaving output...\nsaving results table to output/cafeh.genotype.results\nsaving cafeh model to output/cafeh.genotype.model\n```\n\nTo run CAFEH with effect sizes and standard errors, include `--mode beta` in the arguments. You must provide input `--ld (-R)`, `--betas (-B)`, `--standard-errors (-S)`, and `--sample-sizes (-S)`.\n\n```\npython cafeh.py --mode beta -R example/LD_example.tsv -B example/beta_example.tsv -S example/stderr_example.tsv -n example/n_example.tsv --out output --save-model                                                              current_working_branch \u2731 \u25fc\nfitting CAFEH with effect sizes and standard errors...\nsaving output...\nsaving results table to output/cafeh.beta.results\nsaving cafeh model to output/cafeh.beta.model\n```\n\nTo fit CAFEH with zscores, use `--mode z` in the arguments. You must provide input `--ld (-R)`, and `--zscores (-z)`. In lieu of providing z scores you can also use the effect sizes and standard errors as input via `-B` and `-S`. The script will use these to compute z scores.\n\n\n```\npython cafeh.py --mode z -R example/LD_example.tsv -z example/z_example.tsv -n example/n_example.tsv --out output --save-model                                                                                                  current_working_branch \u2731 \u25fc\nfitting CAFEH with z scores...\nsaving output...\nsaving results table to output/cafeh.z.results\nsaving cafeh model to output/cafeh.z.model\n```\n\n\nFor a full list of options run\n\n```\npython cafeh.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CAFEH output:",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "After you run the script there will be two files saved to the output directory\n\n```\noutput\n\u251c\u2500\u2500 cafeh.{mode}.model\n\u2514\u2500\u2500 cafeh.{mode}.results\n```\n\nThe `.model` file is a pickle of the CAFEH model. You can load this pickle and interact with the CAFEH model in python. To generate this file you must include the `--save-model` flag.\n\nThe `.results` model provides a useful summary of CAFEH's output. It contains a row for each (SNP, study) pair. It reports\n- `pip` The posterior inclusion probability for that SNP in that study\n- `top_component` the CAFEH component with the largest probability for that SNP\n- `alpha` the smallest credible set level at which the SNP would be included in the credible set for `top_component`. e.g `alpha = 0.3` means that the SNP would be included in every `a * 100 %` credible set with `a >= alpha`\n-`rank` is the rank of the SNP in `top_component`. A rank of `n` indicates that there are `n` SNPs with larger posterior probability in `top_component`\n- `p_active` gives the probability that `top_component` is an active component in this study\n- `pi` is the posterior probability of the SNP being the causal SNP for `top_component`. This is distinct from `pip` which is the probability of this SNP being causal in any component\n- `effect` and `effect_var` are the posterior mean and variance of the effect size for this SNP in this study, conditioned on this SNP being the causal SNP.\n\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python:",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "```\nfrom cafeh.cafeh import fit_cafeh_genotype\nfrom cafeh.fitting import weight_ard_active_fit_procedure\n\n# prepare inputs for cafeh\n...\n\n# initialize and fit model\ncafehg = fit_cafeh_genotype(X, y, K=10)\n\n# downstream analysis of model fitting\n...\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Important files in this repository",
        "parent_header": [
          "CAFEH: Colocalization and Finemapping in the presence of Allelic Heterogeniety",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "`cafeh/cafeh_summary.py`: code for class `CAFEHSummary` for fitting CAFEH with summary stats\n`cafeh/cafeh_genotype.py`: code for class `CAFEHGenotype` for fitting CAFEH with individual level data\n`cafeh/cafeh.py`: high level scripts for running CAFEH in one command\n\n`cafeh/cafeh_model_queries.py`: methods for querying `CAFEHSummary` and `CAFEHGenotype` objects\n`cafeh/plotting.py`: some useful plots for CAFEH\n\n`notebooks/CAFEH_demo.ipynb`: Simple example running CAFEH Genotype and CAFEH Summary\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/karltayeb/cafeh/current_working_branch/README.md",
      "technique": "header_analysis"
    }
  ]
}