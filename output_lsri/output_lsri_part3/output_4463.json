{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XJJ-student/PhenoComp"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact email",
        "type": "Text_excerpt",
        "value": "Please don't hesitate to address comments/questions/suggestions regarding this R package to:\nJiajing Xie <xiejiajing_fjmu@163.com>; Haidan Yan <Joyan168@126.com>\n"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-31T01:23:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-12T19:46:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhenoComp is an algorithm to identify population-level differential genes in one-phenotype data. This algorithm is based on RankComp, an algorithm used to identify individual-level differentially expressed genes in each sample."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9899077948091862,
      "result": {
        "original_header": "PhenoComp",
        "type": "Text_excerpt",
        "value": "PhenoComp is an algorithm to identify population-level differential genes in one-phenotype data. This algorithm is based on RankComp, an algorithm used to identify individual-level differentially expressed genes in each sample. \n"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/XJJ-student/PhenoComp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XJJ-student/PhenoComp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "XJJ-student/PhenoComp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhenoComp"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "type": "Text_excerpt",
        "value": "To install the PhenoComp, install from github using devtools\n```\nlibrary(devtools)\ninstall_github(\"XJJ-student/PhenoComp\")\n```\nOr you can download the .ZIP file and unzip it.\n```\ninstall.packages(\"PhenoComp\",repos = NULL,type=\"source\")\n#The \"PhenoComp\" should be combined with the absolute path.\n```"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/XJJ-student/PhenoComp/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhenoComp"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "XJJ-student"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6197,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:33:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "StablePairs(expdata_list,freq)\nArguments|Description\n:--|:---\nexpdata_list|The gene expression profile list of the normal samples of one human tissue-type which is measured by one or more platforms. The first columns is the Entrez gene IDs and the remaining columns are the gene expression values of the normal samples.\nfreq|The criteria for identifying stable gene pairs in normal samples. The default setting of freq is 0.99.\n\nPhenoComp (stable_pair,expE,individualfdr,method,populationfdr)\nArguments|Description\n:--|:---\nstable_pair|Stable gene pairs identified by the function of StablePairs.\nexpE|A (non-empty) numeric matrix of disease samples. The first columns is the Entrez gene IDs and the remaining columns are the gene expression values of the disease samples.\nindividualfdr|The threshold of FDR for identifying individual-level differentially expressed genes.\nmethod|Method determines how to estimate the p_up and p_down. Method=1: the p_up and p_down were estimated as the median values of the frequencies of up-regulated and down-regulated genes for individual disease samples.Method=2: the p_up and p_down were estimated as the mean values of the frequencies of up-regulated and down-regulated genes for individual disease samples.\npopulationfdr|The threshold of FDR for identifying population-level differentially expressed genes.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "type": "Text_excerpt",
        "value": "```\nlibrary(PhenoComp)\ndata(example)\nexpdata_list=list(normalexp1,normalexp2)\nstable_pair=StablePairs(expdata_list,0.99)\nPhenoComp(stable_pair,expE,0.05,1,0.05)\n```\nThe gene expression data are from the database Gene Expression Omnibus (GEO).        \nThe **normalexp1** and **normalexp2** are the normal sample expression profiles of the first 1000 genes of GSE26887 and GSE46224, respectively.          \n**expE** is the disease sample expression profile of the first 1000 genes of GSE26887.          \n**Recommendation**: if the number of genes exceeds 10000, it is recommended to use the server.\n\n"
      },
      "source": "https://raw.githubusercontent.com/XJJ-student/PhenoComp/master/README.md",
      "technique": "header_analysis"
    }
  ]
}