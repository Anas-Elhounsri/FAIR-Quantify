{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/csbio/CG-TARGET"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-07-27T18:38:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-24T15:13:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9940695812221312,
      "result": {
        "original_header": "**CG-TARGET**",
        "type": "Text_excerpt",
        "value": "CG-TARGET is a collection of R scripts to be used for the purpose of predicting gene-set targets from chemical-genetic interaction profiles.\n \n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9831531618715151,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "- Interprets chemical-genetic interaction profiles using a reference set of genetic interaction networks.\n- Species-independent: any species with chemical-genetic interaction profiles can be intepreted, as long as an appropriate genetic interaction dataset is available.\n- Genetic interaction datasets and gene set annotations are automatically downloaded. (users can supply their own GI datasets and gene sets as well)\n- Scalable: amenable to the analysis of both small and large chemical-genetic interaction datasets.\n- Written in R; no other dependencies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/csbio/CG-TARGET/wiki"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Downloading CG-TARGET"
        ],
        "type": "Text_excerpt",
        "value": "Head on over to https://github.com/csbio/CG-TARGET/releases/ and download the latest release. Extract the compressed folder to a good location from which to run the software (i.e. get it out of your downloads folder!)\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Downloading CG-TARGET"
        ],
        "type": "Text_excerpt",
        "value": "If you know what you are doing and want to keep up-to-date with the latest version, clone the repository (git clone https://github.com/csbio/CG-TARGET.git or windows equivalent).\n\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/csbio/CG-TARGET/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/csbio/CG-TARGET/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "csbio/CG-TARGET"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CG-TARGET"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/CG-TARGET_overview.png"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "View available gene sets",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```\ngene_sets.r\n```\n\nUse this script to check which gene set annotations are available.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Downloading CG-TARGET"
        ],
        "type": "Text_excerpt",
        "value": "Head on over to https://github.com/csbio/CG-TARGET/releases/ and download the latest release. Extract the compressed folder to a good location from which to run the software (i.e. get it out of your downloads folder!)\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Downloading CG-TARGET"
        ],
        "type": "Text_excerpt",
        "value": "If you know what you are doing and want to keep up-to-date with the latest version, clone the repository (git clone https://github.com/csbio/CG-TARGET.git or windows equivalent).\n\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting up environment variables",
        "parent_header": [
          "**CG-TARGET**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Required: **TARGET_PATH**\n\nSet the value of this environment variable to the path of the CG-TARGET folder you downloaded and extracted. The scripts from BEAN-counter will look for this variable in your environment, so it must be set!\n\nOptional, but strongly recommended: adding `$TARGET_PATH/scripts/` to your PATH\n\nAdding the scripts folder inside of the CG-TARGET folder to your **PATH** environment variable allows you to execute the commands in the pipeline by calling them only by their names (all demos will assume this has been done).\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Linux/Mac",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Setting up environment variables",
          "How do I set my environment variables?"
        ],
        "type": "Text_excerpt",
        "value": "The best way to do this is by adding code to the scripts that run every time you open a new shell. If you use the bash shell, then add the following line to either your ~/.bashrc or ~/.bash_profile files:\n\n```\nexport TARGET_PATH=/your/path/to/CG-TARGET/\n```\n\nIf you use the c shell (csh), then add the following line to your ~/.cshrc file:\n\n```\nsetenv TARGET_PATH /your/path/to/CG-TARGET/\n```\n\n(but please, **please** do us all a favor and ditch the c shell already)\n\nTo append a directory to your PATH variable, add this line to your ~/.bashrc or ~/.bash_profile (or equivalent for ~/.cshrc):\n\n```\nexport PATH=$PATH:/your/path/to/CG-TARGET/scripts\n```\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows",
        "parent_header": [
          "**CG-TARGET**",
          "Installation",
          "Setting up environment variables",
          "How do I set my environment variables?"
        ],
        "type": "Text_excerpt",
        "value": "[Tutorial for changing path variable](http://www.computerhope.com/issues/ch000549.htm)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/csbio/CG-TARGET/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "**CG-TARGET**"
        ],
        "type": "Text_excerpt",
        "value": "Use of this code is free for academic use and for a 60-day commercial trial period. Sustained commercial use requires the purchase of a license.\n\nIn any case, please head on over to z.umn.edu/cgtarget to register for a license. This helps me keep track of the user base :)\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CG-TARGET"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "csbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 186507,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RussianImperialScott",
          "type": "User"
        },
        "date_created": "2016-09-08T21:23:47Z",
        "date_published": "2016-09-08T21:31:08Z",
        "description": "A very fully functional release - have at it!\n\nAvailable genetic interaction datasets and associated gene sets:\n- S. cerevisiae full genome (nonessential) array\n  - GO biological process\n",
        "html_url": "https://github.com/csbio/CG-TARGET/releases/tag/v0.2",
        "name": "CG-TARGET version 0.2",
        "release_id": 4085065,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/csbio/CG-TARGET/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/csbio/CG-TARGET/releases/4085065",
        "value": "https://api.github.com/repos/csbio/CG-TARGET/releases/4085065",
        "zipball_url": "https://api.github.com/repos/csbio/CG-TARGET/zipball/v0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "**CG-TARGET**",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This software is written in R, and thus requires a working R installation. Microsoft Open R (or any other R with an optimized BLAS library, such as OpenBLAS) is recommended, as speed at which some steps finish depends highly on the speed of the matrix multiplications involved.\n\n__**The following libraries are required:**__\n\n\tdata.table\n\tdigest\n\tggplot2\n\tgrid\n\tgridExtra\n\toptparse\n\treshape2\n\ttools\n\tyaml\n\t\n__**The following system commands are required:**__\n\n\tgzip (the function of `gzip -dc` must be to decompress a gzipped file and print to stdout)\n\n__**The following libraries are optional:**__\n\n(they are only required for the `visualize_gene_targets.r` script, which is optional)\n\n\tctc\n\tfastcluster\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:27:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "**CG-TARGET**"
        ],
        "type": "Text_excerpt",
        "value": "After downloading the software and setting up your environment variables, it is quite simple to run the commands. First, you will need to set up your configuration file (here called `config_file.yaml`). The `example_config_file.yaml` is provided as a template in the main folder.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "General overview",
        "parent_header": [
          "**CG-TARGET**",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "Given the following datasets, CG-TARGET predicts the biological processes (or other functionally coherent gene sets) that are perturbed by compounds:\n1. A dataset of chemical-genetic interaction profiles obtained for compounds and negative controls (typically a solvent control such as DMSO) against a mutant collection\n2. A dataset of genetic interaction profiles obtained for \"query\" gene mutants against a mutant collection that overlaps with the profiles in (1)\n3. A collection of biological process (or other gene set) annotations for the query genes in (2)\n\n![CG-TARGET overview](CG-TARGET_overview.png)\n\nCG-TARGET can be broken down into four distinct steps:\n\n1. `gen_randomized_profiles.r` generates randomly-resampled profiles, which are used in z-score/p-value and FDR calculations, from compound-treated conditions.\n2. `predict_gene_targets.r` integrates the chemical-genetic and genetic interaction profiles to generate a similarity score for each combination of compound and genetic interaction query gene.\n3. `predict_gene_set_targets.r` aggregates these compound-gene similarity scores at the level of biological processes (or other gene sets) to generate z-scores and p-values for each compound-process association.\n3. `gene_set_FDR_analysis.r` uses the process-level predictions derived from negative control and resampled chemical-genetic interaction profiles to calculate estimates of the false discovery rate.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Script details",
        "parent_header": [
          "**CG-TARGET**",
          "How to use"
        ],
        "type": "Text_excerpt",
        "value": "Note: config_file.yaml defines a folder that contains the output of all scripts, called `output_folder`. This is referenced below as `<output_folder>`.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "View available genetic interaction datasets",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```\ngi_datasets.r\n```\n\nUse this script to check which genetic interaction datasets are available.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generate resampled profiles",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```\ngen_randomized_profiles.r config_file.yaml\n```\n\nThis script generates the set of resampled profiles derived from compound-treated conditions. Output is in `<output_folder>/resampled_profiles/`.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predict gene targets for both the real and resampled profiles",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```\npredict_gene_targets.r config_file.yaml\npredict_gene_targets.r --rand config_file.yaml\n```\n\nThis script generates compound-gene similarity scores by integrating chemical-genetic and genetic interaction profiles. Output is in `<output_folder>/gene_target_prediction/`. Without the `--rand` flag, the computations are performed for the compound-treated and negative control profiles, and with the `--rand` flag, they are performed for the resampled profiles.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**Optional:** Create a clustered heat map of gene target prediction scores",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "This will be a *.CDT file, viewable with Java TreeView. You can choose to view the predictions for the resampled profiles too (again, using `--rand`).\n\n```\nvisualize_gene_targets.r config_file.yaml\nvisualize_gene_targets.r --rand config_file.yaml\n```\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predict the gene-set targets",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```predict_gene-set_targets.r config_file.yaml```\n\nThis script aggregates compound-gene similarity scores into z-scores and p-values for each combination of compound and biological process. Output is in `<output_folder>/gene_set_target_prediction/`.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Estimate false discovery rate and export final gene-set target prediction tables.",
        "parent_header": [
          "**CG-TARGET**",
          "How to use",
          "Script details"
        ],
        "type": "Text_excerpt",
        "value": "```gene_set_FDR_analysis.r config_file.yaml```\n\nThis script compares the rate of prediction for compounds versus 1) negative control profiles and 2) resampled profiles across the full range of p-values, resulting in empirical estimates of the false discovery rate. Output is in `<output_folder>/final_results/`.\n"
      },
      "source": "https://raw.githubusercontent.com/csbio/CG-TARGET/master/README.md",
      "technique": "header_analysis"
    }
  ]
}