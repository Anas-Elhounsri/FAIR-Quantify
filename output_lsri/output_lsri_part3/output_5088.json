{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anyouwang/finet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-26T21:39:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-30T04:44:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/anyouwang/finet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anyouwang/finet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anyouwang/finet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/anyouwang/finet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/anyouwang/finet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "finet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "anyouwang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 6001,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/anyouwang/finet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "description",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:44:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please note: without stability-selection, elastic-net produced mostly noise. Increasing m value (e.g. m=8) and p (e.g. 0.95) dramatically improves selection true positive ratio (true positives/total true callings), yet increasing iterations (n value) to a large number like 10000 does not help much as shown in our report (1) ",
        "type": "Text_excerpt",
        "value": "Copyright@  Anyou Wang \n\nFINET is a software to infer any network (1). Implemented by Julia with algorithms of stability selection and elastic-net, plus parameter optimization, finet can infer a network fast and accurately from a big data. Additionally, finet is user-friendly, only one single command line to complete all computational processes. Developed under Linux, but finet should work in any OS system. Installing and using finet becomes simple by using following instructions. \n\nAny comments, please contact anyou dot wang dot 2012 at google mail\n\n<H2>Install Julia and FINET</H2> \n\n<H4>1.Installing julia or upgrade julia to the latest version</H4>\n\n<H5>Install new julia</H5>\n\ngit clone git://github.com/JuliaLang/julia.git\n\ncd julia\n\ngit checkout v1.0.3\n\nmake\n\n\n\n<H5>Upgrade from old version</H5>\n\ncd /path/to/julia\n\ngit pull\n\ngit checkout v1.0.3\n\nmake\n\n\n\n\n<H4>2.Install packages</H4>\n\ntype julia from terminal\n\njulia> import Pkg; Pkg.add(\"StatsBase\")\n\njulia> import Pkg; Pkg.add(\"ArgParse\")\n\njulia> import Pkg; Pkg.add(\"GLMNet\")\n\njulia> import Pkg; Pkg.add(\"SharedArrays\")\n\n\n\n\n<H4>3.Download FINET</H4>\n\ngit clone https://github.com/anyouwang/finet.git\n\ncd finet\n\n\n<H2>Running FINET</H2>\n\nOnly input file and output name are required. Other arguments as optional. Any question type --help as shown below\n\nan example of running\n\njulia finet.jl -c 40 -k 5 -n 300 -m 8 -a 0.5 -p 0.95 -i mydata.txt -o mynetwork\n\nAn input file is a normalized matrix, with each column as a gene and a row as an observation\n\n<h4>Please note: without stability-selection, elastic-net produced mostly noise. Increasing m value (e.g. m=8) and p (e.g. 0.95) dramatically improves selection true positive ratio (true positives/total true callings), yet increasing iterations (n value) to a large number like 10000 does not help much as shown in our report (1) </h4>. \n\n<H2>For help</H2>\n\njulia finet.jl --help\n\nusage: finet.jl [-c CPUS] [-n ITERATION] [-m SUBSAMPLING]\n                        [-k KFOLDS] [-a ALPHA] [-p PERCENTCUTOFF]\n                        [-i I] -o O [-h]\n\n\n\n\narguments:\n\n  -c, --cpus CPUS       CPU number for parallel computation (type:\n                        Int64, default: 8)\n                        \n  -n, --iteration ITERATION\n                          Iteration times (type: Int64, default: 100)\n                        \n  -m, --subsampling SUBSAMPLING\n                        Numbers of subgroups, subsampling for\n                        stablility selection, pleaase keep default for\n                        most users (type: Int64, default: 2)\n                        \n  -k, --kfolds KFOLDS   K-fold cross validation for Elastic net (type:\n                        Int64, default: 5)\n                        \n  -a, --alpha ALPHA     alpha value (0<alpha <=1.0) for Elastic net\n                        (type: Float64, default: 0.5)\n                        \n  -p, --percentcutoff PERCENTCUTOFF\n                          Ranking frequency percentage for cutoff (0-1)\n                        (type: Float64, default: 0.9)\n                        \n  -i I                  Input file name, required\n  \n  -o O                  Output file name, required\n  \n  -h, --help            show this help message and exit\n  \n\n<h2>Reference</h2>\n(1)Wang, A. & Hai, R. FINET: Fast Inferring NETwork. bioRxiv 733683 (2019). doi:10.1101/733683\n"
      },
      "source": "https://raw.githubusercontent.com/anyouwang/finet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Please note: without stability-selection, elastic-net produced mostly noise. Increasing m value (e.g. m=8) and p (e.g. 0.95) dramatically improves selection true positive ratio (true positives/total true callings), yet increasing iterations (n value) to a large number like 10000 does not help much as shown in our report (1) ",
        "type": "Text_excerpt",
        "value": "Copyright@  Anyou Wang \n\nFINET is a software to infer any network (1). Implemented by Julia with algorithms of stability selection and elastic-net, plus parameter optimization, finet can infer a network fast and accurately from a big data. Additionally, finet is user-friendly, only one single command line to complete all computational processes. Developed under Linux, but finet should work in any OS system. Installing and using finet becomes simple by using following instructions. \n\nAny comments, please contact anyou dot wang dot 2012 at google mail\n\n<H2>Install Julia and FINET</H2> \n\n<H4>1.Installing julia or upgrade julia to the latest version</H4>\n\n<H5>Install new julia</H5>\n\ngit clone git://github.com/JuliaLang/julia.git\n\ncd julia\n\ngit checkout v1.0.3\n\nmake\n\n\n\n<H5>Upgrade from old version</H5>\n\ncd /path/to/julia\n\ngit pull\n\ngit checkout v1.0.3\n\nmake\n\n\n\n\n<H4>2.Install packages</H4>\n\ntype julia from terminal\n\njulia> import Pkg; Pkg.add(\"StatsBase\")\n\njulia> import Pkg; Pkg.add(\"ArgParse\")\n\njulia> import Pkg; Pkg.add(\"GLMNet\")\n\njulia> import Pkg; Pkg.add(\"SharedArrays\")\n\n\n\n\n<H4>3.Download FINET</H4>\n\ngit clone https://github.com/anyouwang/finet.git\n\ncd finet\n\n\n<H2>Running FINET</H2>\n\nOnly input file and output name are required. Other arguments as optional. Any question type --help as shown below\n\nan example of running\n\njulia finet.jl -c 40 -k 5 -n 300 -m 8 -a 0.5 -p 0.95 -i mydata.txt -o mynetwork\n\nAn input file is a normalized matrix, with each column as a gene and a row as an observation\n\n<h4>Please note: without stability-selection, elastic-net produced mostly noise. Increasing m value (e.g. m=8) and p (e.g. 0.95) dramatically improves selection true positive ratio (true positives/total true callings), yet increasing iterations (n value) to a large number like 10000 does not help much as shown in our report (1) </h4>. \n\n<H2>For help</H2>\n\njulia finet.jl --help\n\nusage: finet.jl [-c CPUS] [-n ITERATION] [-m SUBSAMPLING]\n                        [-k KFOLDS] [-a ALPHA] [-p PERCENTCUTOFF]\n                        [-i I] -o O [-h]\n\n\n\n\narguments:\n\n  -c, --cpus CPUS       CPU number for parallel computation (type:\n                        Int64, default: 8)\n                        \n  -n, --iteration ITERATION\n                          Iteration times (type: Int64, default: 100)\n                        \n  -m, --subsampling SUBSAMPLING\n                        Numbers of subgroups, subsampling for\n                        stablility selection, pleaase keep default for\n                        most users (type: Int64, default: 2)\n                        \n  -k, --kfolds KFOLDS   K-fold cross validation for Elastic net (type:\n                        Int64, default: 5)\n                        \n  -a, --alpha ALPHA     alpha value (0<alpha <=1.0) for Elastic net\n                        (type: Float64, default: 0.5)\n                        \n  -p, --percentcutoff PERCENTCUTOFF\n                          Ranking frequency percentage for cutoff (0-1)\n                        (type: Float64, default: 0.9)\n                        \n  -i I                  Input file name, required\n  \n  -o O                  Output file name, required\n  \n  -h, --help            show this help message and exit\n  \n\n<h2>Reference</h2>\n(1)Wang, A. & Hai, R. FINET: Fast Inferring NETwork. bioRxiv 733683 (2019). doi:10.1101/733683\n"
      },
      "source": "https://raw.githubusercontent.com/anyouwang/finet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}