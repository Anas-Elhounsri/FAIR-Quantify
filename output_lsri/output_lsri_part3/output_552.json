{
  "application_domain": [
    {
      "confidence": 19.09,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing quickPIV",
        "parent_header": [
          "quickPIV"
        ],
        "type": "Text_excerpt",
        "value": "If you find this package useful for your own research, you can cite quickPIV as:\n\nPereyra, M., Drusko, A., Kr\u00e4mer, F. et al. QuickPIV: Efficient 3D particle image velocimetry software applied to quantifying cellular migration during embryogenesis. BMC Bioinformatics 22, 579 (2021). https://doi.org/10.1186/s12859-021-04474-0\n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Marc-3d/quickPIV"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-13T09:20:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-29T02:21:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9288870025387657,
      "result": {
        "original_header": "quickPIV",
        "type": "Text_excerpt",
        "value": "Free and open-source three-dimensional PIV implementation for research. \n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.905426492277319,
      "result": {
        "original_header": "Evaluation instructions.",
        "type": "Text_excerpt",
        "value": "The evaluation code is included in the Evaluation branch. \nNOTE: After running \"using IJulia\" for the first time, you will be asked whether IJulia should download and install miniconda. This is needed to run the jupyter notebook. In windows, I got this [error] which is solved by temporarily stopping Kasperky antivirus while miniconda is downloaded and installed. \n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Marc-3d/quickPIV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Marc-3d/quickPIV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Marc-3d/quickPIV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "quickPIV"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation instructions.",
        "parent_header": [
          "quickPIV"
        ],
        "type": "Text_excerpt",
        "value": "To install this package in Julia you should first install the LIBTIFF package, and then quickPIV:\n```Julia\nusing Pkg\nPkg.add(url=\"https://github.com/Marc-3d/LIBTIFF.jl.git\")\nPkg.add(url=\"https://github.com/Marc-3d/quickPIV.git\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9983074709469484,
      "result": {
        "original_header": "Evaluation instructions.",
        "type": "Text_excerpt",
        "value": "1-. Clone the evaluation branch in your computer:\n```\ngit clone -b Evaluation https://github.com/Marc-3d/quickPIV.git\n```\n2-. Open a Julia terminal and install IJulia:\n```Julia\nusing Pkg\nPkg.add(\"IJulia\")\nusing IJulia\n```\n \nNOTE: After running \"using IJulia\" for the first time, you will be asked whether IJulia should download and install miniconda. This is needed to run the jupyter notebook. In windows, I got this [error] which is solved by temporarily stopping Kasperky antivirus while miniconda is downloaded and installed. \n[error]: https://discourse.julialang.org/t/problem-with-curl-exe-windows-and-package-installation/29525/21 \n3-. Run the jupyter notebook from Julia:\n```Julia\nIJulia.notebook()\n```\n \n4-. A tab will open in your default web browser. Make your way in the jupyter tree to the quickPIV folder that was downloaded in step 1. The \"EvaluationNotebooks\"  folder contains the Julia evaluation notebook, python performance evaluation notebook and .cpp performance script.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Marc-3d/quickPIV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 MarcP\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "quickPIV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Marc-3d"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 112080,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Marc-3d",
          "type": "User"
        },
        "date_created": "2021-09-25T13:08:36Z",
        "date_published": "2021-09-27T11:58:57Z",
        "description": "With this release, we make available our 3D PIV implementation written in Julia. This package is expected to be useful for quantifying collective cellular migration in 3D time-lapse recordings of biological samples. It ",
        "html_url": "https://github.com/Marc-3d/quickPIV/releases/tag/v1.0",
        "name": "QuickPIV: Efficient 3D particle image velocimetry software applied to quantifying cellular migration during embryogenesis",
        "release_id": 50313658,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/Marc-3d/quickPIV/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Marc-3d/quickPIV/releases/50313658",
        "value": "https://api.github.com/repos/Marc-3d/quickPIV/releases/50313658",
        "zipball_url": "https://api.github.com/repos/Marc-3d/quickPIV/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run quickPIV",
        "parent_header": [
          "quickPIV"
        ],
        "type": "Text_excerpt",
        "value": "After installing the package, running a PIV analysis takes three steps.   \n\n**1st** Load your data. (Look for packages that can open your data, ex [HDF5](https://github.com/JuliaIO/HDF5.jl)) <br>\n**2nd** Create an object of custom PIV parameters. <br>\n**3rd** Call the PIV function on two consecutive images/volumes.\n\n```Julia\nusing quickPIV\n\n# Thus far I have worked with volumes stored as .tiff files. I have modified LIBTIFF to read 3D scanline volumes.\nvolume1 = quickPIV.PIVload( \"filename1.tif\", typ=Float32, path=\"/path/to/data/\" )\nvolume2 = quickPIV.PIVload( \"filename2.tif\", typ=Float32, path=\"/path/to/data/\" )\n\n# interSize, overlap and searchMargin can be given different values for each dimension, ex interSize=(10,30,20), overlap=(5,5,8)...\nparams = quickPIV.setPIVParameters( interSize=32, overlap=10, searchMargin=12, corr=\"nsqecc\" );\n\nU, V, W, SN = quickPIV.PIV( volume1, volume2, params );\n```\n\nThe most meaningful parameters to change are the interrogation size (interSize), the overlap between adjacent interrogation areas/volumes (overlap), the search margin (searchMargin), the cross-correlation algorithm (corr) and multi-pass depth (mpass). The full list of options can be found in [the source code](src/parameters.jl). Feel free to contact me if you have any questions or suggestions about additional parameters that should be added to quickPIV.\n"
      },
      "source": "https://raw.githubusercontent.com/Marc-3d/quickPIV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:22:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ]
}