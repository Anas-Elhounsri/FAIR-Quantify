{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "@article{10.1093/nar/gkab815,\n    author = {Zorrilla, Francisco and Buric, Filip and Patil, Kiran R and Zelezniak, Aleksej},\n    title = \"{metaGEM: reconstruction of genome scale metabolic models directly from metagenomes}\",\n    journal = {Nucleic Acids Research},\n    volume = {49},\n    number = {21},\n    pages = {e126-e126},\n    year = {2021},\n    month = {10},\n    abstract = \"{Metagenomic analyses of microbial communities have revealed a large degree of interspecies and intraspecies genetic diversity through the reconstruction of metagenome assembled genomes (MAGs). Yet, metabolic modeling efforts mainly rely on reference genomes as the starting point for reconstruction and simulation of genome scale metabolic models (GEMs), neglecting the immense intra- and inter-species diversity present in microbial communities. Here, we present metaGEM (https://github.com/franciscozorrilla/metaGEM), an end-to-end pipeline enabling metabolic modeling of multi-species communities directly from metagenomes. The pipeline automates all steps from the extraction of context-specific prokaryotic GEMs from MAGs to community level flux balance analysis (FBA) simulations. To demonstrate the capabilities of metaGEM, we analyzed 483 samples spanning lab culture, human gut, plant-associated, soil, and ocean metagenomes, reconstructing over 14,000 GEMs. We show that GEMs reconstructed from metagenomes have fully represented metabolism comparable to isolated genomes. We demonstrate that metagenomic GEMs capture intraspecies metabolic diversity and identify potential differences in the progression of type 2 diabetes at the level of gut bacterial metabolic exchanges. Overall, metaGEM enables FBA-ready metabolic model reconstruction directly from metagenomes, provides a resource of metabolic models, and showcases community-level modeling of microbiomes associated with disease conditions allowing generation of mechanistic hypotheses.}\",\n    issn = {0305-1048},\n    doi = {10.1093/nar/gkab815},\n    url = {https://doi.org/10.1093/nar/gkab815},\n    eprint = {https://academic.oup.com/nar/article-pdf/49/21/e126/41503923/gkab815.pdf},\n}\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/CITATION.bib",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83c\udf7e Please cite",
        "parent_header": [
          "\ud83d\udc8e `metaGEM`"
        ],
        "type": "Text_excerpt",
        "value": "```\nmetaGEM: reconstruction of genome scale metabolic models directly from metagenomes\nFrancisco Zorrilla, Filip Buric, Kiran R Patil, Aleksej Zelezniak\nNucleic Acids Research, 2021; gkab815, https://doi.org/10.1093/nar/gkab815\n``` \n\n[![Nucleic Acids Research](https://img.shields.io/badge/Nucleic%20Acids%20Research-10.1093%2Fnar%2Fgkab815-critical)](https://academic.oup.com/nar/advance-article/doi/10.1093/nar/gkab815/6382386)\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nfz274@cam.ac.uk.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/franciscozorrilla/metaGEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udcf2 Contact",
        "parent_header": [
          "\ud83d\udc8e `metaGEM`"
        ],
        "type": "Text_excerpt",
        "value": "Please reach out with any comments, concerns, or discussions regarding `metaGEM`.\n\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/metaGEM/community)\n[![Twitter](https://img.shields.io/badge/Twitter-%40metagenomez-lightblue)](https://twitter.com/metagenomez)\n[![LinkedIn](https://img.shields.io/badge/LinkedIn-fzorrilla94-blue)](https://www.linkedin.com/in/fzorrilla94/)\n[![email](https://img.shields.io/badge/email-fz274%40cam.ac.uk-%23a6bddb)](fz274@cam.ac.uk)\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-14T15:26:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-19T07:27:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":gem: An easy-to-use workflow for generating context specific genome-scale metabolic models and predicting metabolic interactions within microbial communities directly from metagenomic data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9832980606863289,
      "result": {
        "original_header": "\ud83d\udc8e `metaGEM`",
        "type": "Text_excerpt",
        "value": "> **Note** \n> An easy-to-use workflow for generating context specific genome-scale metabolic models and predicting metabolic interactions within microbial communities directly from metagenomic data. \n`metaGEM` is a Snakemake workflow that integrates an array of existing bioinformatics and metabolic modeling tools, for the purpose of predicting metabolic interactions within bacterial communities of microbiomes. From whole metagenome shotgun datasets, metagenome assembled genomes (MAGs) are reconstructed, which are then converted into genome-scale metabolic models (GEMs) for *in silico* simulations. Additional outputs include abundance estimates, taxonomic assignment, growth rate estimation, pangenome analysis, and eukaryotic MAG identification.\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8377497812060132,
      "result": {
        "original_header": "\ud83e\uddc9 Try it now",
        "type": "Text_excerpt",
        "value": "You can set up and use `metaGEM` on the cloud by following along the google colab notebook.  \nPlease note that google colab does not provide the computational resources necessary to fully run `metaGEM` on a real dataset. This notebook demonstrates how to set up and use `metaGEM` by perfoming the first steps in the workflow on a toy dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8375121488896179,
      "result": {
        "original_header": "\ud83c\udfdb\ufe0f Wiki",
        "type": "Text_excerpt",
        "value": "Refer to the wiki for additional usage tips, frequently asked questions, and implementation details. \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9499772372842202,
      "result": {
        "original_header": "Core",
        "type": "Text_excerpt",
        "value": "1. Quality filter reads with [fastp](https://github.com/OpenGene/fastp)\n2. Assembly with [megahit](https://github.com/voutcn/megahit)\n3. Draft bin sets with [CONCOCT](https://github.com/BinPro/CONCOCT), [MaxBin2](https://sourceforge.net/projects/maxbin2/), and [MetaBAT2](https://sourceforge.net/projects/maxbin2/)\n4. Refine & reassemble bins with [metaWRAP](https://github.com/bxlab/metaWRAP)\n5. Taxonomic assignment with [GTDB-tk](https://github.com/Ecogenomics/GTDBTk)\n6. Relative abundances with [bwa](https://github.com/lh3/bwa) and [samtools](https://github.com/samtools/samtools)\n7. Reconstruct & evaluate genome-scale metabolic models with [CarveMe](https://github.com/cdanielmachado/carveme) and [memote](https://github.com/opencobra/memote)\n8. Species metabolic coupling analysis with [SMETANA](https://github.com/cdanielmachado/smetana)\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9056629218599591,
      "result": {
        "original_header": "Bonus",
        "type": "Text_excerpt",
        "value": "9. Growth rate estimation with [GRiD](https://github.com/ohlab/GRiD), [SMEG](https://github.com/ohlab/SMEG) or [CoPTR](https://github.com/tyjo/coptr)\n10. Pangenome analysis with [roary](https://github.com/sanger-pathogens/Roary)\n11. Eukaryotic draft bins with [EukRep](https://github.com/patrickwest/EukRep) and [EukCC](https://github.com/Finn-Lab/EukCC)\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9194938786245371,
      "result": {
        "original_header": "\ud83c\udfd7\ufe0f Active Development",
        "type": "Text_excerpt",
        "value": "If you want to see any new additional or alternative tools incorporated into the `metaGEM` workflow please raise an issue or create a pull request. Snakemake allows workflows to be very flexible, so adding new rules is as easy as filling out the following template and adding it to the Snakefile:\n```\nrule package-name:\n    input:\n        rules.rulename.output\n    output:\n        f'{config[\"path\"][\"root\"]}/{config[\"folder\"][\"X\"]}/{{IDs}}/output.file'\n    message:\n        \"\"\"\n        Helpful and descriptive message detailing goal of this rule/package.\n        \"\"\"\n    shell:\n        \"\"\"\n        # Well documented command line instructions go here\n        \n        # Load conda environment \n        set +u;source activate {config[envs][package]};set -u;\n\n        # Run tool\n        package-name -i {input} -o {output}\n        \"\"\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://img.shields.io/badge/metaGEM-Wiki-blue"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/franciscozorrilla/metaGEM/wiki"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/franciscozorrilla/metaGEM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 41
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "franciscozorrilla/metaGEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "\ud83d\udc8e metaGEM"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/workflow/metaGEM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/workflow/scripts/env_setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/137376259"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/35606471/116543667-0d0f8f00-a8e6-11eb-835c-bc1fe935f43e.png"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://colab.research.google.com/assets/colab-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.star-history.com/svg?repos=franciscozorrilla/metaGEM&type=Date"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\u2699\ufe0f Installation",
        "parent_header": [
          "\ud83d\udc8e `metaGEM`"
        ],
        "type": "Text_excerpt",
        "value": "You can start using `metaGEM` on your cluster with just one line of code with the [mamba package manager](https://github.com/mamba-org/mamba)\n\n```\nmamba create -n metagem -c bioconda metagem\n```\n\nThis will create an environment called `metagem` and start installing dependencies. Please consult the `config/README.md` page for more detailed setup instructions.\n\n[![installation](https://img.shields.io/badge/metaGEM-config-%2331a354)](https://github.com/franciscozorrilla/metaGEM/tree/master/config)\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8597142902994533,
      "result": {
        "original_header": "\ud83e\uddc9 Try it now",
        "type": "Text_excerpt",
        "value": "Please note that google colab does not provide the computational resources necessary to fully run `metaGEM` on a real dataset. This notebook demonstrates how to set up and use `metaGEM` by perfoming the first steps in the workflow on a toy dataset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999950659912,
      "result": {
        "original_header": "\ud83c\udfd7\ufe0f Active Development",
        "type": "Text_excerpt",
        "value": "If you want to see any new additional or alternative tools incorporated into the `metaGEM` workflow please raise an issue or create a pull request. Snakemake allows workflows to be very flexible, so adding new rules is as easy as filling out the following template and adding it to the Snakefile:\n```\nrule package-name:\n    input:\n        rules.rulename.output\n    output:\n        f'{config[\"path\"][\"root\"]}/{config[\"folder\"][\"X\"]}/{{IDs}}/output.file'\n    message:\n        \"\"\"\n        Helpful and descriptive message detailing goal of this rule/package.\n        \"\"\"\n    shell:\n        \"\"\"\n        # Well documented command line instructions go here\n        \n        # Load conda environment \n        set +u;source activate {config[envs][package]};set -u;\n\n        # Run tool\n        package-name -i {input} -o {output}\n        \"\"\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999370175,
      "result": {
        "original_header": "\u2b50 Star History",
        "type": "Text_excerpt",
        "value": "<a href=\"https://star-history.com/#franciscozorrilla/metaGEM&Date\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=franciscozorrilla/metaGEM&type=Date&theme=dark\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=franciscozorrilla/metaGEM&type=Date\" />\n    <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=franciscozorrilla/metaGEM&type=Date\" />\n  </picture>\n</a>\n \n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, computational-biology, flux-balance-analysis, genome-scale-metabolic-model, gut-microbiome, mags, metabolic-modeling, metabolic-models, metabolism, metagenome-assembled-genomes, metagenomics, microbial-ecology, microbiome, snakemake, systems-biology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Francisco Zorrilla\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://app.travis-ci.com/franciscozorrilla/metaGEM.svg?branch=master"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metaGEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "franciscozorrilla"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 150276,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 30234,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 28651,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2023-02-17T13:28:13Z",
        "date_published": "2023-02-17T13:32:26Z",
        "description": "* Added versioning information to metaGEM.sh wrapper, shown by default under logo/with help message\r\n* Trimmed down dependencies for main metagem environment to speed up installation",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.5",
        "name": "metaGEM v1.0.5",
        "release_id": 92838054,
        "tag": "v1.0.5",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/92838054",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/92838054",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2023-01-31T16:33:03Z",
        "date_published": "2023-02-17T12:21:28Z",
        "description": "* Minor updates to documentation, release will update setup instructions in the snakemake workflow catalog  \ud83d\udcdc\r\n* This release will also be used to create a recipe for the bioconda package manager channel \ud83d\udc0d ",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.4",
        "name": "metaGEM v1.0.4",
        "release_id": 92831043,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/92831043",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/92831043",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2023-01-27T16:28:33Z",
        "date_published": "2023-01-27T16:43:59Z",
        "description": "# Highlights\r\n\r\n\ud83d\udc8e metaGEM becomes >100 stars old \ud83d\udc74 \r\n\r\n* 8cbc664: bugfix: compositionVis \r\n* 29a05f8: expand README.md with new tutorial from EMBO MicroCom workshop\r\n* ff4ac0d: allow parallelization during local job submission\r\n* 0af4213: reformat repo structure and make necessary code changes to comply with [snakemake workflow standards](https://snakemake.github.io/snakemake-workflow-catalog/)",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.3",
        "name": "metaGEM v1.0.3",
        "release_id": 90447209,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/90447209",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/90447209",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2022-11-10T13:43:22Z",
        "date_published": "2022-11-14T14:30:50Z",
        "description": "Maintenance, documentation, and cosmetic changes since original release \ud83d\udc8e ",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.2",
        "name": "metaGEM v1.0.2",
        "release_id": 82993968,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/82993968",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/82993968",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2021-04-21T14:56:12Z",
        "date_published": "2021-04-21T15:13:11Z",
        "description": "Zenodo test",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.1",
        "name": "metaGEM v1.0.1",
        "release_id": 41784790,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/41784790",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/41784790",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "franciscozorrilla",
          "type": "User"
        },
        "date_created": "2021-04-21T14:56:12Z",
        "date_published": "2021-04-21T15:06:02Z",
        "description": "First official `metaGEM` release :gem:",
        "html_url": "https://github.com/franciscozorrilla/metaGEM/releases/tag/v1.0.0",
        "name": "metaGEM v1.0.0",
        "release_id": 41784307,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/41784307",
        "value": "https://api.github.com/repos/franciscozorrilla/metaGEM/releases/41784307",
        "zipball_url": "https://api.github.com/repos/franciscozorrilla/metaGEM/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:06:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 189
      },
      "technique": "GitHub_API"
    }
  ],
  "support_channels": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gitter.im/metaGEM/community"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udd27 Usage",
        "parent_header": [
          "\ud83d\udc8e `metaGEM`"
        ],
        "type": "Text_excerpt",
        "value": "Clone this repo\n\n```\ngit clone https://github.com/franciscozorrilla/metaGEM.git && cd metaGEM/workflow\n```\n\nRun `metaGEM` without any arguments to see usage instructions:\n\n```\nbash metaGEM.sh\n```\n```\nUsage: bash metaGEM.sh [-t|--task TASK] \n                       [-j|--nJobs NUMBER OF JOBS] \n                       [-c|--cores NUMBER OF CORES] \n                       [-m|--mem GB RAM] \n                       [-h|--hours MAX RUNTIME]\n                       [-l|--local]\n                       \n Options:\n  -t, --task        Specify task to complete:\n\n                        SETUP\n                            createFolders\n                            downloadToy\n                            organizeData\n                            check\n\n                        CORE WORKFLOW\n                            fastp \n                            megahit \n                            crossMapSeries\n                            kallistoIndex\n                            crossMapParallel\n                            kallisto2concoct \n                            concoct \n                            metabat\n                            maxbin \n                            binRefine \n                            binReassemble \n                            extractProteinBins\n                            carveme\n                            memote\n                            organizeGEMs\n                            smetana\n                            extractDnaBins\n                            gtdbtk\n                            abundance\n\n                        BONUS\n                            grid\n                            prokka\n                            roary\n                            eukrep\n                            eukcc\n\n                        VISUALIZATION (in development)\n                            stats\n                            qfilterVis\n                            assemblyVis\n                            binningVis\n                            taxonomyVis\n                            modelVis\n                            interactionVis\n                            growthVis\n\n  -j, --nJobs       Specify number of jobs to run in parallel\n  -c, --nCores      Specify number of cores per job\n  -m, --mem         Specify memory in GB required for job\n  -h, --hours       Specify number of hours to allocated to job runtime\n  -l, --local       Run jobs on local machine for non-cluster usage\n```\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udca9 Tutorials",
        "parent_header": [
          "\ud83d\udc8e `metaGEM`"
        ],
        "type": "Text_excerpt",
        "value": "`metaGEM` can be used to explore your own gut microbiome sequencing data from at-home-test-kit services such as [unseen bio](https://unseenbio.com/). The following tutorial showcases the `metaGEM` workflow on two unseenbio samples.\n\n[![Tutorial](https://img.shields.io/badge/metaGEM-Tutorial-%23d8b365)](https://github.com/franciscozorrilla/unseenbio_metaGEM)\n\nFor an introductory metabolic modeling tutorial, refer to the resources compiled for the [EMBOMicroCom: Metabolite and species dynamics in microbial communities](https://www.embl.org/about/info/course-and-conference-office/events/mcd22-01/) workshop in 2022.\n\n[![Tutorial3](https://img.shields.io/badge/MicroCom-Tutorial-green)](https://github.com/franciscozorrilla/EMBOMicroCom)\n\nFor a more advanced tutorial, check out the resources we put together for the [SymbNET: from metagenomics to metabolic interactions](https://www.ebi.ac.uk/training/events/symbnet-2022/) course in 2022.\n\n[![Tutorial2](https://img.shields.io/badge/SymbNET-Tutorial-red)](https://github.com/franciscozorrilla/SymbNET)\n"
      },
      "source": "https://raw.githubusercontent.com/franciscozorrilla/metaGEM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}