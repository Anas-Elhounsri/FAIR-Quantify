{
  "application_domain": [
    {
      "confidence": 9.31,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "\r\n[1] Tibshirani, R. Regression shrinkage and selection via the lasso. J. Royal Stat. Soc. Ser. B (Methodological) 267-288 (1996).\r\n\r\n[2] Zou, H. & Hastie, T. Regularization and variable selection via the elastic net. J. Royal Stat. Soc. Ser. B (Statistical Methodol.)\r\n67, 301-320 (2005).\r\n\r\n[3]  Kumar, M. P., Turki, H., Preston, D. & Koller, D. Learning specific-class segmentation from diverse data. In Computer\r\nVision (ICCV), 2011 IEEE International Conference on, 1800-1807 (IEEE, 2011).\r\n\r\n[4]   G\u00fcnther, O. P. et al. A computational pipeline for the development of multi-marker bio-signature panels and ensemble classifiers. BMC bioinformatics 13, 326 (2012).\r\n\r\n[5] Johnson, W. E., Li, C. & Rabinovic, A. Adjusting batch effects in microarray expression data using empirical bayes\r\nmethods. Biostatistics 8, 118-127 (2007).\r\n\r\n[6] Giordan, M. A two-stage procedure for the removal of batch effects in microarray studies. Stat. Biosci. 6, 73-84 (2014).\r\n"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Yang, Zi-Yi and Liu, Xiao-Ying and Shu, Jun and Zhang, Hui and Ren, Yan-Qiong and Xu, Zong-Ben and Liang, Yong",
        "format": "bibtex",
        "title": "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
        "type": "Text_excerpt",
        "value": "@article{yang2019multi,\n    publisher = {Nature Publishing Group},\n    year = {2019},\n    volume = {9},\n    journal = {Scientific reports},\n    author = {Yang, Zi-Yi and Liu, Xiao-Ying and Shu, Jun and Zhang, Hui and Ren, Yan-Qiong and Xu, Zong-Ben and Liang, Yong},\n    title = {Multi-view based integrative analysis of gene expression data for identifying biomarkers},\n}"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/must-bio-team/MVIAm"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-14T06:16:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-12T22:42:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9843595448784048,
      "result": {
        "original_header": "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
        "type": "Text_excerpt",
        "value": "\r\nThis repository provides some codes for this paper.\r\n\r\nThe code Version 1.0.\r\n\r\nIf you are interested in it but have doubts about the content, please feel free to contact me.\r\n\r\nCommunication: [yangziyi091100@163.com](mailto:yangziyi091100@163.com)\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997421575324602,
      "result": {
        "type": "Text_excerpt",
        "value": "\r\nThe widespread applications in microarray technology have produced the vast quantity of publicly available gene expression datasets. However, analysis of gene expression data using biostatistics and machine learning approaches is a challenging task due to (1) high noise; (2) small sample size with high dimensionality; (3) batch effects and (4) low reproducibility of significant biomarkers. These issues reveal the complexity of gene expression data, thus significantly obstructing microarray technology in clinical applications. The integrative analysis offers an opportunity to address these issues and provides a more comprehensive understanding of the biological systems, but current methods have several limitations. This work leverages state of the art machine learning development for multiple gene expression datasets integration, classification and identification of significant biomarkers. We design a novel integrative framework, MVIAm - Multi-View based Integrative Analysis of microarray data for identifying biomarkers. It applies multiple cross-platform normalization methods to aggregate multiple datasets into a multi-view dataset and utilizes a robust learning mechanism Multi-View Self-Paced Learning (MVSPL) for gene selection in cancer classification problems. We demonstrate the capabilities of MVIAm using simulated data and studies of breast cancer and lung cancer, it can be applied flexibly and is an effective tool for facing the four challenges of gene expression data analysis. Our proposed model makes microarray integrative analysis more systematic and expands its range of applications.\r\n\r\nIf you find this code useful in your research then please cite  \r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.924791496637489,
      "result": {
        "original_header": "i. The repository can be divided into two parts:",
        "type": "Text_excerpt",
        "value": "\r\n1. Codes for simulated experiments.\r\n2. Codes for real gene expression data experiments.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9958926423934019,
      "result": {
        "original_header": "ii . The compared methods:",
        "type": "Text_excerpt",
        "value": "\r\nWe demonstrate the performance of the proposed MVSPL in simulation and real microarray experiments.\r\n\r\nFour methods are compared with the MVSPL method: Sparse logistic regression with the Lasso penalty (L_1) [1], Sparse logistic regression with the Elastic Net penalty (L\\_EN) [2], Self-Paced Learning (SPL) [3], and Ensemble-based Elastic Net (Ensemble\\_EN) [4].\r\n\r\nWhen MVIAm generates single-view data, it degenerates into traditional ``early stage'' data integration, and data analysis can be performed by L\\_1, L\\_EN and SPL. Ensemble\\_EN and MVSPL construct a prediction model on each view of data before combing the model predictions and obtains the final prediction result based on Equation (1).  \r\n$$\r\ny_k=\\mathop{argmin}_{\\substack{y_k}}\\sum_{j=1}^{m}{L_k\\left(y_k,f^{(j)}\\left(x_k^{(j)},\\beta^{(j)}\\right)\\right)}         (1)\r\n$$\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "(II) For each study, download the expression data. The form of the expression data will depend on the studyDataType.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n\u2022 All the expression data should go in the same folder.  \r\n\u2022 If studyDataType is affy_geo or affy_custom, the expression data should be a folder containing cel or cel.gz files. The name of the folder should match the name of the study.  \r\n\u2022 If studyDataType is affy_series_matrix or series_matrix, the expression data should be a file ending in \"_series_matrix.txt\". The part of the file name prior to \"_series_matrix.txt\" should match the name of the study.  \r\n\u2022 If studyDataType is eset_rds, the expression data should be an RDS file containing a Bioconductor ExpressionSet. The part of the file name prior to \".rds\" should match the name of the study.  \r\n\r\nCreate fold named \"data\" in the current path, and download the dataset from GEO database. such as affy_series_matrix and affy_geo.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(III) Download all files and install all packages necessary for mapping probes to genes and for conducting a meta-analysis.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n$ Rscript meta_function_Install.R\r\n```\r\n\r\n**For each study with studyDataType of affy_geo or affy_custom, download the corresponding custom CDF package.**\r\n\r\n\u2022 Go to http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.  \r\n\u2022 Click on the link for the latest version of \"ENTREZG\".  \r\n\u2022 Download the appropriate R source package(s), which should end in \"cdf_nn.0.0.tar.gz\", where nn refers to the version number.  \r\n\u2022 Install the custom CDF packages.  \r\n\u2022 Open R and set the working directory to the folder containing the downloaded custom CDF packages. Execute the following command for each custom CDF.  \r\n\u2022 > install.packages('file name of custom CDF', repos=NULL, type='source')  \r\n\u2022 Make sure that the part of the file name prior to \"nn.0.0.tar.gz\" matches the information in the platformInfo column.  \r\n\r\n**For each study with studyDataType of affy_series_matrix, download the corresponding custom CDF zip file.**\r\n\r\n\u2022 Go to http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.  \r\n\u2022 Click on the link for the latest version of \"ENTREZG\".  \r\n\u2022 Download the appropriate zip file(s) (under column \"CDF Seq, Map, Desc\").  \r\n\u2022 Unzip each zip file.  \r\n\u2022 Move the file that ends in \"_mapping.txt\" to the folder that contains the downloaded expression data.  \r\n\u2022 Make sure that the part of the file name that occurs prior to \"_mapping.txt\" matches the information in the platformInfo column.  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(V) Import all the functions for pre-processing all the datasets.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\nsource('meta_function.R')\r\nsource('meta_function_Pamr.R')\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(VI) Merge expression data and perform cross-study normalization of training datasets, save the expression data and gene name.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n$ Rscript preprocess_data.R\r\n```\r\n\r\n\r\n\r\nIn this paper, we curated data from eight publicly available microarray studies: four breast cancer datasets (same platform) and four lung cancer datasets (disparate platform), as listed in Table 1 and Table 2. All these publicly available cancer gene expression datasets can be download from GEO (https://www.ncbi.nlm.nih.gov/geo/).\r\n\r\nTable 1. Four publicly available breast cancer gene expression datasets used in the real data experiments.\r\n\r\n| Dataset  | No. of Probes | Classes (Class1 / Class2) | No. of samples (Class1 / Class2) | Affymetrix Platform |\r\n| :------: | :-----------: | :-----------------------: | :------------------------------: | :-----------------: |\r\n| GSE1561  |     22215     |         -ve / +ve         |           49 (22 / 27)           |      HG-U133A       |\r\n| GSE6532  |     22283     |         -ve / +ve         |          125 (40 / 85)           |      HG-U133A       |\r\n| GSE20437 |     22283     |         -ve / +ve         |            18 (9 / 9)            |      HG-U133A       |\r\n| GSE22093 |     22283     |         -ve / +ve         |           82 (41 / 41)           |      HG-U133A       |\r\n\r\nTable 2. Four publicly available lung cancer gene expression datasets used in the real data experiments.\r\n\r\n| Dataset  | No. of Probes | Classes (Class1 / Class2) | No. of samples (Class1 / Class2) | Affymetrix Platform |\r\n| :------: | :-----------: | :-----------------------: | :------------------------------: | :-----------------: |\r\n| GSE10072 |     22284     |      Normal / Tumor       |          107 (49 / 58)           |        U133A        |\r\n| GSE19188 |     54675     |      Normal / Tumor       |          179 (88 / 91)           |    U133 Plus 2.0    |\r\n| GSE19804 |     54676     |      Normal / Tumor       |          120 (60 / 60)           |    U133 Plus 2.0    |\r\n| GSE43346 |     22283     |      Normal / Tumor       |           65 (42 / 23)           |        U133A        |\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/must-bio-team/MVIAm/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/must-bio-team/MVIAm/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "must-bio-team/MVIAm"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Multi-view based integrative analysis of gene expression data for identifying biomarkers"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "(III) Download all files and install all packages necessary for mapping probes to genes and for conducting a meta-analysis.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n$ Rscript meta_function_Install.R\r\n```\r\n\r\n**For each study with studyDataType of affy_geo or affy_custom, download the corresponding custom CDF package.**\r\n\r\n\u2022 Go to http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.  \r\n\u2022 Click on the link for the latest version of \"ENTREZG\".  \r\n\u2022 Download the appropriate R source package(s), which should end in \"cdf_nn.0.0.tar.gz\", where nn refers to the version number.  \r\n\u2022 Install the custom CDF packages.  \r\n\u2022 Open R and set the working directory to the folder containing the downloaded custom CDF packages. Execute the following command for each custom CDF.  \r\n\u2022 > install.packages('file name of custom CDF', repos=NULL, type='source')  \r\n\u2022 Make sure that the part of the file name prior to \"nn.0.0.tar.gz\" matches the information in the platformInfo column.  \r\n\r\n**For each study with studyDataType of affy_series_matrix, download the corresponding custom CDF zip file.**\r\n\r\n\u2022 Go to http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp.  \r\n\u2022 Click on the link for the latest version of \"ENTREZG\".  \r\n\u2022 Download the appropriate zip file(s) (under column \"CDF Seq, Map, Desc\").  \r\n\u2022 Unzip each zip file.  \r\n\u2022 Move the file that ends in \"_mapping.txt\" to the folder that contains the downloaded expression data.  \r\n\u2022 Make sure that the part of the file name that occurs prior to \"_mapping.txt\" matches the information in the platformInfo column.  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(V) Import all the functions for pre-processing all the datasets.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\nsource('meta_function.R')\r\nsource('meta_function_Pamr.R')\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(VI) Merge expression data and perform cross-study normalization of training datasets, save the expression data and gene name.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n```\r\n$ Rscript preprocess_data.R\r\n```\r\n\r\n\r\n\r\nIn this paper, we curated data from eight publicly available microarray studies: four breast cancer datasets (same platform) and four lung cancer datasets (disparate platform), as listed in Table 1 and Table 2. All these publicly available cancer gene expression datasets can be download from GEO (https://www.ncbi.nlm.nih.gov/geo/).\r\n\r\nTable 1. Four publicly available breast cancer gene expression datasets used in the real data experiments.\r\n\r\n| Dataset  | No. of Probes | Classes (Class1 / Class2) | No. of samples (Class1 / Class2) | Affymetrix Platform |\r\n| :------: | :-----------: | :-----------------------: | :------------------------------: | :-----------------: |\r\n| GSE1561  |     22215     |         -ve / +ve         |           49 (22 / 27)           |      HG-U133A       |\r\n| GSE6532  |     22283     |         -ve / +ve         |          125 (40 / 85)           |      HG-U133A       |\r\n| GSE20437 |     22283     |         -ve / +ve         |            18 (9 / 9)            |      HG-U133A       |\r\n| GSE22093 |     22283     |         -ve / +ve         |           82 (41 / 41)           |      HG-U133A       |\r\n\r\nTable 2. Four publicly available lung cancer gene expression datasets used in the real data experiments.\r\n\r\n| Dataset  | No. of Probes | Classes (Class1 / Class2) | No. of samples (Class1 / Class2) | Affymetrix Platform |\r\n| :------: | :-----------: | :-----------------------: | :------------------------------: | :-----------------: |\r\n| GSE10072 |     22284     |      Normal / Tumor       |          107 (49 / 58)           |        U133A        |\r\n| GSE19188 |     54675     |      Normal / Tumor       |          179 (88 / 91)           |    U133 Plus 2.0    |\r\n| GSE19804 |     54676     |      Normal / Tumor       |          120 (60 / 60)           |    U133 Plus 2.0    |\r\n| GSE43346 |     22283     |      Normal / Tumor       |           65 (42 / 23)           |        U133A        |\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step2:  After integrating multiple gene expression data sets, using training data set to train the modal and obtain the best solution for the model.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments"
        ],
        "type": "Text_excerpt",
        "value": "\r\nNeed to modify the path before executing the code, e.g. \"WhereAmI <- \"D:/path\".\r\n\r\nRunning single-view methods: L\\_1, L\\_EN, and SPL.\r\n\r\n```\r\n$ Rscript LR.R                 ## Using Logistic regression model with L1/Elatic Net penalty to train the model.\r\n$ Rscript SPL.R                ## Using self-paced learning with L1 penalty to train the model.\r\n```\r\n\r\nRunning multi-view methods: Ensemble\\_EN, and MVSPL:\r\n\r\n```\r\n$ Rscript EnsembleEN.R        ## Using Logistic regression model with Elastic net penalty embeded into ensemble framework to train the model.\r\n$ Rscript MVSPL.R             ## Using multi-view self-paced learning to train the model.\r\n```\r\n\r\nThe result include the predicted labels of training samples, the predicted labels of test samples, and the selected genes by the model (selected gene and its coefficient). For example:\r\n\r\n```\r\n$valpredmatrix\r\n          1  \r\nGSM26804  \"1\"\r\nGSM26867  \"1\"\r\nGSM26868  \"1\"\r\nGSM26869  \"1\"\r\nGSM26870  \"1\"\r\nGSM26871  \"0\"\r\nGSM26875  \"1\"\r\nGSM26876  \"1\"\r\nGSM26877  \"1\"\r\nGSM26878  \"0\"\r\nGSM26879  \"1\"\r\nGSM26883  \"0\"\r\nGSM26884  \"0\"\r\n...\r\n$evlpredmatrix\r\n          1  \r\nGSM26872  \"1\"\r\nGSM26873  \"1\"\r\nGSM26874  \"1\"\r\nGSM26880  \"0\"\r\nGSM26881  \"1\"\r\nGSM26882  \"0\"\r\nGSM26886  \"1\"\r\nGSM26889  \"1\"\r\nGSM26890  \"1\"\r\nGSM26893  \"0\"\r\nGSM26894  \"1\"\r\nGSM26896  \"1\"\r\nGSM26898  \"0\"\r\nGSM26900  \"1\"\r\n...\r\ncoef.gene   coef.value          \r\n [1,] \"KPNA5\"     \"-2.56373113493573\" \r\n [2,] \"RNASE2\"    \"-1.46375323666761\" \r\n [3,] \"BLCAP\"     \"1.02292385970561\"  \r\n [4,] \"ATXN7L3B\"  \"1.0087944164481\"   \r\n [5,] \"CCNC\"      \"-0.839655008878292\"\r\n [6,] \"ARID1A\"    \"-0.687994402204038\"\r\n [7,] \"TNPO1\"     \"0.541775628966189\" \r\n [8,] \"SPOP\"      \"0.541041907153896\" \r\n [9,] \"UBA5\"      \"-0.530869845792436\"\r\n[10,] \"CACFD1\"    \"0.522049776533395\" \r\n...\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/must-bio-team/MVIAm/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MVIAm"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "must-bio-team"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 68318,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 1755,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:28:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "(I) Create table of study metadata, with a row for each study. See Lung_main_study_metadata.csv for an example. At a minimum, the following  columns must exist: study, studyDataType, and platformInfo.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n\u2022 study: Name of the study, which must be unique.  \r\n\u2022 studyDataType: Indicates how the expression data is stored. There are currently five options for studyDataType: affy_geo, affy_custom, affy_series_matrix, series_matrix, and eset_rds.  \r\n\u2022 platformInfo: Microarray platform, used for mapping probes to genes.  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(II) For each study, download the expression data. The form of the expression data will depend on the studyDataType.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n\u2022 All the expression data should go in the same folder.  \r\n\u2022 If studyDataType is affy_geo or affy_custom, the expression data should be a folder containing cel or cel.gz files. The name of the folder should match the name of the study.  \r\n\u2022 If studyDataType is affy_series_matrix or series_matrix, the expression data should be a file ending in \"_series_matrix.txt\". The part of the file name prior to \"_series_matrix.txt\" should match the name of the study.  \r\n\u2022 If studyDataType is eset_rds, the expression data should be an RDS file containing a Bioconductor ExpressionSet. The part of the file name prior to \".rds\" should match the name of the study.  \r\n\r\nCreate fold named \"data\" in the current path, and download the dataset from GEO database. such as affy_series_matrix and affy_geo.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "(I) Create table of study metadata, with a row for each study. See Lung_main_study_metadata.csv for an example. At a minimum, the following  columns must exist: study, studyDataType, and platformInfo.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n\u2022 study: Name of the study, which must be unique.  \r\n\u2022 studyDataType: Indicates how the expression data is stored. There are currently five options for studyDataType: affy_geo, affy_custom, affy_series_matrix, series_matrix, and eset_rds.  \r\n\u2022 platformInfo: Microarray platform, used for mapping probes to genes.  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(IV) Create table of sample metadata, with a row for each sample. See Lung_sample_metadata.csv for an example.",
        "parent_header": [
          "Multi-view based integrative analysis of gene expression data for identifying biomarkers",
          "IV. Codes for real gene expression data experiments",
          "Step1: Download all the publicly available microarray data sets and pre-processing data for conducting a meta-analysis."
        ],
        "type": "Text_excerpt",
        "value": "\r\n\u2022 At a minimum, the following columns must exist: study, sample, and a column for outcome or class.  \r\n\u2022 The values in the study column should match the values in the study column in the table of study metadata.  \r\n\u2022 For studies with a studyDataType of affy_geo or affy_custom, the sample names should be the names of the cel or cel.gz files (excluding the file extension).  \r\n\u2022 For studies with a studyDataType of affy_series_matrix or series_matrix, the sample names should be the GSM identifiers.  \r\n\u2022 For studies with a studyDataType of eset_rds, the samples names should be the colnames of the corresponding ExpressionSet.  \r\n\u2022 The name of each sample must be unique across all the samples.  \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/must-bio-team/MVIAm/master/README.md",
      "technique": "header_analysis"
    }
  ]
}