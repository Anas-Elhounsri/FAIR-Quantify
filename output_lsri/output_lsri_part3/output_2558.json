{
  "application_domain": [
    {
      "confidence": 31.7,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DeepRank/deeprank"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Issues and Contributing",
        "parent_header": [
          "DeepRank"
        ],
        "type": "Text_excerpt",
        "value": "If you have questions or find a bug, please report the issue in the [Github issue channel](https://github.com/DeepRank/deeprank/issues).\n\nIf you want to change or further develop DeepRank code, please check the [Developer Guideline](./developer_guideline.md) to see how to conduct further development.\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-12T13:13:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-21T06:50:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository has been integrated in https://github.com/DeepRank/deeprank2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9877782137350377,
      "result": {
        "original_header": ":warning: Archiving Note",
        "type": "Text_excerpt",
        "value": "This repository is no longer being maintained and has been archived for historical purposes.  \nWe have now developed [DeepRank2](https://github.com/DeepRank/deeprank2), an improved and unified version of DeepRank, [DeepRank-GNN](https://github.com/DeepRank/Deeprank-GNN), and [DeepRank-Mut](https://github.com/DeepRank/DeepRank-Mut). \n:sparkles: DeepRank2 allows for transformation and storage of 3D representations of both protein-protein interfaces (PPIs) and protein single-residue variants (SRVs) into either graphs or volumetric grids containing structural and physico-chemical information. These can be used for training neural networks for a variety of patterns of interest, using either our pre-implemented training pipeline for graph neural networks (GNNs) or convolutional neural networks (CNNs) or external pipelines. \nWe look forward to seeing you in our new space - [DeepRank2](https://github.com/DeepRank/deeprank2)!\n \n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9844069051195972,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "DeepRank is a general, configurable deep learning framework for data mining protein-protein interactions (PPIs) using 3D convolutional neural networks (CNNs). \nDeepRank contains useful APIs for pre-processing PPIs data, computing features and targets, as well as training and testing CNN models.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9946423489895623,
      "result": {
        "original_header": "Features:",
        "type": "Text_excerpt",
        "value": "- Predefined atom-level and residue-level PPI feature types\n   - *e.g. atomic density, vdw energy, residue contacts, PSSM, etc.*\n- Predefined target types\n   - *e.g. binary class, CAPRI categories, DockQ, RMSD, FNAT, etc.*\n- Flexible definition of both new features and targets\n- 3D grid feature mapping\n- Efficient data storage in HDF5 format\n- Support both classification and regression (based on PyTorch)\n \n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://deeprank.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://deeprank.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DeepRank/deeprank/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DeepRank/deeprank/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepRank/deeprank"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":warning: Archiving Note"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3735042"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DeepRank"
        ],
        "type": "Text_excerpt",
        "value": "DeepRank requires a Python version 3.7 or 3.8 on Linux and MacOS.\nMake sure that mpi4py is installed in your environment before installing deeprank: `conda install mpi4py`\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stable Release",
        "parent_header": [
          "DeepRank",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "DeepRank is available in stable releases on [PyPI](https://pypi.org/project/deeprank/):\n-  Install the module `pip install deeprank`\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Development Version",
        "parent_header": [
          "DeepRank",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can also install the under development source code from the branch `development`\n\n- Clone the repository `git clone --branch development https://github.com/DeepRank/deeprank.git`\n- Go there             `cd deeprank`\n- Install the package  `pip install -e ./`\n\nTo check if installation is successful, you can run a test\n- Go into the test directory `cd test`\n- Run the test suite         `pytest`\n\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A . Generate the data set (using MPI)",
        "parent_header": [
          "DeepRank",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "The generation of the data require only require PDBs files of decoys and their native and the PSSM if needed. All the features/targets and mapped features onto grid points will be auomatically calculated and store in a HDF5 file.\n\n```python\nfrom deeprank.generate import *\nfrom mpi4py import MPI\n\ncomm = MPI.COMM_WORLD\n\n# let's put this sample script in the test folder, so the working path will be deeprank/test/\n# name of the hdf5 to generate\nh5file = './hdf5/1ak4.hdf5'\n\n# for each hdf5 file where to find the pdbs\npdb_source = ['./1AK4/decoys/']\n\n\n# where to find the native conformations\n# pdb_native is only used to calculate i-RMSD, dockQ and so on.\n# The native pdb files will not be saved in the hdf5 file\npdb_native = ['./1AK4/native/']\n\n\n# where to find the pssm\npssm_source = './1AK4/pssm_new/'\n\n\n# initialize the database\ndatabase = DataGenerator(\n    chain1='C', chain2='D',\n    pdb_source=pdb_source,\n    pdb_native=pdb_native,\n    pssm_source=pssm_source,\n    data_augmentation=0,\n    compute_targets=[\n        'deeprank.targets.dockQ',\n        'deeprank.targets.binary_class'],\n    compute_features=[\n        'deeprank.features.AtomicFeature',\n        'deeprank.features.FullPSSM',\n        'deeprank.features.PSSM_IC',\n        'deeprank.features.BSA',\n        'deeprank.features.ResidueDensity'],\n    hdf5=h5file,\n    mpi_comm=comm)\n\n\n# create the database\n# compute features/targets for all complexes\ndatabase.create_database(prog_bar=True)\n\n\n# define the 3D grid\n grid_info = {\n   'number_of_points': [30,30,30],\n   'resolution': [1.,1.,1.],\n   'atomic_densities': {'C': 1.7, 'N': 1.55, 'O': 1.52, 'S': 1.8},\n }\n\n# Map the features\ndatabase.map_features(grid_info,try_sparse=True, time=False, prog_bar=True)\n\n```\n\nThis script can be exectuted using for example 4 MPI processes with the command:\n\n```\n    NP=4\n    mpiexec -n $NP python generate.py\n```\n\nIn  the first part of the script we define the path where to find the PDBs of the decoys and natives that we want to have in the dataset. All the .pdb files present in _pdb_source_ will be used in the dataset. We need to specify where to find the native conformations to be able to compute RMSD and the dockQ score. For each pdb file detected in _pdb_source_, the code will try to find a native conformation in _pdb_native_.\n\nWe then initialize the `DataGenerator` object. This object (defined in `deeprank/generate/DataGenerator.py`) needs a few input parameters:\n\n-   pdb_source: where to find the pdb to include in the dataset\n-   pdb_native: where to find the corresponding native conformations\n-   compute_targets: list of modules used to compute the targets\n-   compute_features: list of modules used to compute the features\n-   hdf5: Name of the HDF5 file to store the data set\n\nWe then create the data base with the command `database.create_database()`. This function autmatically create an HDF5 files where each pdb has its own group. In each group we can find the pdb of the complex and its native form, the calculated features and the calculated targets. We can now mapped the features to a grid. This is done via the command `database.map_features()`. As you can see this method requires a dictionary as input. The dictionary contains the instruction to map the data.\n\n-   number_of_points: the number of points in each direction\n-   resolution: the resolution in Angs\n-   atomic_densities: {'atom_name': vvdw_radius} the atomic densities required\n\nThe atomic densities are mapped following the [protein-ligand paper](https://arxiv.org/abs/1612.02751). The other features are mapped to the grid points using a Gaussian function (other modes are possible but somehow hard coded)\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Visualization of the mapped features",
        "parent_header": [
          "DeepRank",
          "Tutorial",
          "A . Generate the data set (using MPI)"
        ],
        "type": "Text_excerpt",
        "value": "To explore the HDf5 file and vizualize the features you can use the dedicated browser <https://github.com/DeepRank/DeepXplorer>. This tool saloows to dig through the hdf5 file and to directly generate the files required to vizualie the features in VMD or PyMol. An iPython comsole is also embedded to analyze the feature values, plot them etc ....\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9944855429434195,
      "result": {
        "original_header": ":warning: Archiving Note",
        "type": "Text_excerpt",
        "value": "- :wrench: **Pull Requests** at [github.com/DeepRank/deeprank2/pulls](https://github.com/DeepRank/deeprank2/pulls)\n- :bug: **Bugs**: Reports of bugs can be filed agains our new repo [github.com/DeepRank/deeprank2/issues](https://github.com/DeepRank/deeprank2/issues)\n- :star: **Feature Requests**: Add your request or discuss the project w/ the community at [github.com/DeepRank/deeprank2/issues](https://github.com/DeepRank/deeprank2/issues) \n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DeepRank/deeprank/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "3d-cnn, docking, protein-protein-interaction, pytorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DeepRank/deeprank/master/./pics/deeprank.png"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deeprank"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "DeepRank"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/deeprank/"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 479635,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 3123,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1702,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 897,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 369,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1612.02751"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CunliangGeng",
          "type": "User"
        },
        "date_created": "2022-02-03T09:28:34Z",
        "date_published": "2022-02-03T09:32:09Z",
        "description": "Added:\r\n- Matthews correlation coefficient\r\n\r\nFixed:\r\n- [Run DeepRank on data without target values](https://github.com/DeepRank/deeprank/issues/123)\r\n",
        "html_url": "https://github.com/DeepRank/deeprank/releases/tag/0.2.1",
        "name": "0.2.1",
        "release_id": 58581613,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/DeepRank/deeprank/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/DeepRank/deeprank/releases/58581613",
        "value": "https://api.github.com/repos/DeepRank/deeprank/releases/58581613",
        "zipball_url": "https://api.github.com/repos/DeepRank/deeprank/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "CunliangGeng",
          "type": "User"
        },
        "date_created": "2021-01-20T14:29:05Z",
        "date_published": "2021-01-20T14:37:57Z",
        "description": "This is the first stable release which was used for the experiments in DeepRank paper.",
        "html_url": "https://github.com/DeepRank/deeprank/releases/tag/0.2.0",
        "name": "0.2.0",
        "release_id": 36659605,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/DeepRank/deeprank/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/DeepRank/deeprank/releases/36659605",
        "value": "https://api.github.com/repos/DeepRank/deeprank/releases/36659605",
        "zipball_url": "https://api.github.com/repos/DeepRank/deeprank/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "NicoRenaud",
          "type": "User"
        },
        "date_created": "2020-03-31T15:44:56Z",
        "date_published": "2020-03-31T16:08:59Z",
        "html_url": "https://github.com/DeepRank/deeprank/releases/tag/v0.1.0",
        "name": "DeepRank",
        "release_id": 25053370,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/DeepRank/deeprank/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/DeepRank/deeprank/releases/25053370",
        "value": "https://api.github.com/repos/DeepRank/deeprank/releases/25053370",
        "zipball_url": "https://api.github.com/repos/DeepRank/deeprank/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:22:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 145
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "DeepRank"
        ],
        "type": "Text_excerpt",
        "value": "We give here the tutorial like introduction to the DeepRank machinery. More informatoin can be found in the documentation <http://deeprank.readthedocs.io/en/latest/>.  We quickly illsutrate here the two main steps of Deeprank:\n\n-   the generation of the data\n-   running deep leaning experiments.\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Visualization of the mapped features",
        "parent_header": [
          "DeepRank",
          "Tutorial",
          "A . Generate the data set (using MPI)"
        ],
        "type": "Text_excerpt",
        "value": "To explore the HDf5 file and vizualize the features you can use the dedicated browser <https://github.com/DeepRank/DeepXplorer>. This tool saloows to dig through the hdf5 file and to directly generate the files required to vizualie the features in VMD or PyMol. An iPython comsole is also embedded to analyze the feature values, plot them etc ....\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "B . Deep Learning",
        "parent_header": [
          "DeepRank",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "The HDF5 files generated above can be used as input for deep learning experiments. You can take a look at the file `test/test_learn.py` for some examples. We give here a quick overview of the process.\n\n```python\nfrom deeprank.learn import *\nfrom deeprank.learn.model3d import cnn_reg\nimport torch.optim as optim\nimport numpy as np\n\n# input database\ndatabase = '1ak4.hdf5'\n\n# output directory\nout = './my_DL_test/'\n\n# declare the dataset instance\ndata_set = DataSet(database,\n            chain1='C',\n            chain2='D',\n            grid_info={\n                'number_of_points': (10, 10, 10),\n                'resolution': (3, 3, 3)},\n            select_feature={\n                'AtomicDensities': {'C': 1.7, 'N': 1.55, 'O': 1.52, 'S': 1.8},\n                'Features': ['coulomb', 'vdwaals', 'charge', 'PSSM_*']},\n            select_target='DOCKQ',\n            normalize_features = True, normalize_targets=True,\n            pair_chain_feature=np.add,\n            dict_filter={'DOCKQ':'<1'})\n\n\n# create the network\nmodel = NeuralNet(data_set,cnn_reg,model_type='3d',task='reg',\n                  cuda=False,plot=True,outdir=out)\n\n# change the optimizer (optional)\nmodel.optimizer = optim.SGD(model.net.parameters(),\n                            lr=0.001,\n                            momentum=0.9,\n                            weight_decay=0.005)\n\n# start the training\nmodel.train(nepoch = 50,divide_trainset=0.8, train_batch_size = 5,num_workers=0)\n```\n\nIn the first part of the script we create a Torch database from the HDF5 file. We can specify one or several HDF5 files and even select some conformations using the `dict_filter` argument. Other options of `DataSet` can be used to specify the features/targets the normalization, etc ...\n\nWe then create a `NeuralNet` instance that takes the dataset as input argument. Several options are available to specify the task to do, the GPU use, etc ... We then have simply to train the model. Simple !\n"
      },
      "source": "https://raw.githubusercontent.com/DeepRank/deeprank/master/README.md",
      "technique": "header_analysis"
    }
  ]
}