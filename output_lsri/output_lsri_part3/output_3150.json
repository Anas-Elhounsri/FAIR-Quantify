{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-09-20T16:57:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-05T20:44:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":eye: Python library to plot DNA sequence features (e.g. from Genbank files)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9698493503752319,
      "result": {
        "original_header": "DNA Features Viewer",
        "type": "Text_excerpt",
        "value": "\nDNA Features Viewer (full documentation `here <https://edinburgh-genome-foundry.github.io/DnaFeaturesViewer/>`_) is a Python library to visualize DNA features, e.g. from GenBank or GFF files, or Biopython SeqRecords: \nDNA Features Viewer automatically produce simple and clear plots even for sequences with many overlapping features and long labels. The libray plays well with Matplotlib and Biopython, and the plots can be output to many different formats (PNG, JPEG, SVG, PDF), e.g. for report generation, article figures, or LIMS interfaces.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.942437225644786,
      "result": {
        "original_header": "Custom Biopython translators",
        "type": "Text_excerpt",
        "value": "DNA Features Viewer allows to define \"themes\" by using custom record translators\ninstead of the default ``BiopythonTranslator``. Here is an example: \n        - Color terminators in green, CDS in blue, all other features in gold.\n        - Do not display features that are restriction sites unless they are BamHI\n        - Do not display labels for restriction sites\n        - For CDS labels just write \"CDS here\" instead of the name of the gene. \n        def compute_filtered_features(self, features):\n            \"\"\"Do not display promoters. Just because.\"\"\"\n            return [\n                feature for feature in features\n                if (feature.type != \"restriction_site\")\n                or (\"BamHI\" in str(feature.qualifiers.get(\"label\", '')))\n            ] \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9928039211994883,
      "result": {
        "original_header": "More biology software",
        "type": "Text_excerpt",
        "value": "DNA Features Viewer is part of the `EGF Codons <https://edinburgh-genome-foundry.github.io/>`_ synthetic biology software suite for DNA design, manufacturing and validation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 91
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Edinburgh-Genome-Foundry/DnaFeaturesViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DNA Features Viewer"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/docs/makehtml.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/article_examples/run_all.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DNA Features Viewer"
        ],
        "type": "Text_excerpt",
        "value": "If you have PIP installed, just type in a terminal:\n\n.. code:: bash\n\n    pip install dna_features_viewer\n\nDNA Features Viewer can be installed by unzipping the source code in one directory and using this command:\n\n.. code:: bash\n\n    python setup.py install\n\nIf you intend to use the bokeh features, you need to also install Bokeh and Pandas:\n\n.. code:: bash\n\n    pip install bokeh pandas\n\nTo parse GFF files, install the ``bcbio-gff`` library:\n\n.. code:: bash\n\n    pip install bcbio-gff\n\n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9776957023207447,
      "result": {
        "original_header": "DNA Features Viewer",
        "type": "Text_excerpt",
        "value": ".. image:: https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/actions/workflows/build.yml/badge.svg\n    :target: https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/actions/workflows/build.yml\n    :alt: GitHub CI build status \n.. image:: https://coveralls.io/repos/github/Edinburgh-Genome-Foundry/DnaFeaturesViewer/badge.svg?branch=master\n    :target: https://coveralls.io/github/Edinburgh-Genome-Foundry/DnaFeaturesViewer?branch=master \n\nDNA Features Viewer (full documentation `here <https://edinburgh-genome-foundry.github.io/DnaFeaturesViewer/>`_) is a Python library to visualize DNA features, e.g. from GenBank or GFF files, or Biopython SeqRecords: \n.. raw:: html \n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/graphic_record_defined_by_hand.png\" width=\"500\">\n    </p> \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.818177284946629,
      "result": {
        "original_header": "Examples of use",
        "type": "Text_excerpt",
        "value": ".. code:: python \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994899275823358,
      "result": {
        "original_header": "Custom Biopython translators",
        "type": "Text_excerpt",
        "value": ".. figure:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/custom_biopython_translator.png\n    :align: center\n \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999815575225,
      "result": {
        "original_header": "More biology software",
        "type": "Text_excerpt",
        "value": ".. image:: https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/Edinburgh-Genome-Foundry.github.io/master/static/imgs/logos/egf-codon-horizontal.png\n  :target: https://edinburgh-genome-foundry.github.io/ \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8540591530009247,
      "result": {
        "original_header": "Custom Biopython translators",
        "type": "Text_excerpt",
        "value": "    from dna_features_viewer import BiopythonTranslator \n\n    graphic_record = MyCustomTranslator().translate_record(\"example_sequence.gb\")\n    ax, _ = graphic_record.plot(figure_width=10)\n    ax.figure.tight_layout()\n    ax.figure.savefig(\"custom_bopython_translator.png\") \n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, dna-visualization, genbank, molecular-biology, synthetic-biology, visualization"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License = MIT",
        "parent_header": [
          "DNA Features Viewer"
        ],
        "type": "Text_excerpt",
        "value": "DNA Features Viewer is an open-source software originally written at the `Edinburgh Genome Foundry\n<http://genomefoundry.org>`_ by `Zulko <https://github.com/Zulko>`_\nand `released on Github <https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer>`_ under the MIT licence.\nEveryone is welcome to contribute !\n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DnaFeaturesViewer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Edinburgh-Genome-Foundry"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 100256,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2023-11-01T02:15:34Z",
        "date_published": "2023-11-01T02:19:10Z",
        "description": "* Compatibility with latest Biopython and matplotlib: fix #79 #81 #82\r\n* Set up Github Actions\r\n",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.1.3",
        "name": "v3.1.3",
        "release_id": 127465728,
        "tag": "v3.1.3",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/127465728",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/127465728",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2022-12-17T18:39:17Z",
        "date_published": "2022-12-17T18:43:19Z",
        "description": "* Fixes #73 (compatibility with Biopython v1.80)",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.1.2",
        "name": "v3.1.2",
        "release_id": 86411159,
        "tag": "v3.1.2",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/86411159",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/86411159",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2022-05-05T10:32:49Z",
        "date_published": "2022-05-05T10:39:13Z",
        "description": "* Test and build on Python 3.9\r\n",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.1.1",
        "name": "v3.1.1",
        "release_id": 66101764,
        "tag": "v3.1.1",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/66101764",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/66101764",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2021-09-21T16:17:22Z",
        "date_published": "2021-09-21T16:22:02Z",
        "description": "* #49 Encoding specified\r\n* #51 Parameter `filetype` added to `load_record()`\r\n* #56, #57 Bokeh bug fix\r\n* #60 Font dictionary bug fix\r\n* #61 Parameter `translation_params` added to `plot_on_multiple_lines()`\r\n",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.1.0",
        "name": "v3.1.0",
        "release_id": 49998773,
        "tag": "v3.1.0",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/49998773",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/49998773",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2020-09-20T18:38:58Z",
        "date_published": "2020-09-20T18:40:46Z",
        "description": "Biopython <=1.77 compatibility fix",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.0.3",
        "name": "v3.0.3",
        "release_id": 31579282,
        "tag": "v3.0.3",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/31579282",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/31579282",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2020-09-05T13:41:30Z",
        "date_published": "2020-09-05T14:22:56Z",
        "description": "Docstring corrections, license autodetect fix, biopython v1.78 compatibility",
        "html_url": "https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/tag/v3.0.2",
        "name": "v3.0.2",
        "release_id": 30777777,
        "tag": "v3.0.2",
        "tarball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/tarball/v3.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/30777777",
        "value": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/releases/30777777",
        "zipball_url": "https://api.github.com/repos/Edinburgh-Genome-Foundry/DnaFeaturesViewer/zipball/v3.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:44:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 588
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples of use",
        "parent_header": [
          "DNA Features Viewer"
        ],
        "type": "Text_excerpt",
        "value": "\nBasic plots\n~~~~~~~~~~~~\n\nIn this first example we define features \"by hand\":\n\n.. code:: python\n\n    from dna_features_viewer import GraphicFeature, GraphicRecord\n    features=[\n        GraphicFeature(start=0, end=20, strand=+1, color=\"#ffd700\",\n                       label=\"Small feature\"),\n        GraphicFeature(start=20, end=500, strand=+1, color=\"#ffcccc\",\n                       label=\"Gene 1 with a very long name\"),\n        GraphicFeature(start=400, end=700, strand=-1, color=\"#cffccc\",\n                       label=\"Gene 2\"),\n        GraphicFeature(start=600, end=900, strand=+1, color=\"#ccccff\",\n                       label=\"Gene 3\")\n    ]\n    record = GraphicRecord(sequence_length=1000, features=features)\n    record.plot(figure_width=5)\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/graphic_record_defined_by_hand.png\" width=\"500\">\n    </p>\n\n\nIf we replace `GraphicRecord` by `CircularGraphicRecord` in the code above we obtain\na circular plot of the construct:\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/graphic_record_defined_by_hand_circular.png\" width=\"443\">\n    </p>\n\nIt is also possible to generate interactive (browser-based) plots by using ``plot_with_bokeh`` instead of ``plot``:\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/plot_with_bokeh.png\" width=\"800\">\n    </p>\n\nNucleotide sequences, translations, and cropping\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDNA Features Viewer allows to plot nucleotide or amino acid sequences under\nthe record plot:\n\n.. code:: python\n\n    from dna_features_viewer import GraphicFeature, GraphicRecord\n\n    sequence = \"ATGCATGCATGCATGCATGCATGCATGC\"\n    record = GraphicRecord(sequence=sequence, features=[\n        GraphicFeature(start=5, end=10, strand=+1, color='#ffcccc'),\n        GraphicFeature(start=8, end=15, strand=+1, color='#ccccff')\n    ])\n\n    ax, _ = record.plot(figure_width=5)\n    record.plot_sequence(ax)\n    record.plot_translation(ax, (8, 23), fontdict={'weight': 'bold'})\n    ax.figure.savefig('sequence_and_translation.png', bbox_inches='tight')\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/sequence_and_translation.png\" width=\"415\">\n    </p>\n\nThis enables for instance to plot an overview of a sequence along with a detailed detail of a sequence subsegment (`full code <https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/blob/master/examples/overview_and_detail.py>`_)\n\n.. code:: python\n\n    ...\n    record.plot(ax=ax1)\n    cropped_record = record.crop((zoom_start, zoom_end))\n    cropped_record.plot(ax=ax2)\n    cropped_record.plot_sequence(ax=ax2)\n    cropped_record.plot_translation(ax=ax2, location=(408, 423))\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/overview_and_detail.png\" width=\"900\">\n    </p>\n\n\nReading the features from a GenBank or GFF file\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDnaFeaturesViewer plays nice with BioPython. As a result it is super easy to plot the content of a Biopython record, or directly a GenBank (or GFF) file:\n\n.. code:: python\n\n    from dna_features_viewer import BiopythonTranslator\n    graphic_record = BiopythonTranslator().translate_record(\"my_sequence.gb\")\n    ax, _ = graphic_record.plot(figure_width=10, strand_in_label_threshold=7)\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/from_genbank.png\" width=\"900\">\n    </p>\n\nNote 1: the script uses ``strand_in_label_threshold=7`` to indicate the strand with\nan arrow in the annotation text for every feature less than ~7 pixels in width.\n\nNote 2: the ``BiopythonTranslator`` class determines how the genbank information is\ntransformed into graphical features. It enables to chose which categories of\nfeatures to plot, the color of the different features.\n\nNote 3: parsing GFF files requires the BCBio library\n(``pip install bcbio-gff``). This library also enables to extract Biopython\nrecords from GFF files containing several records (using ``GFF.parse(\"records.gff\")``).\n\n\n\nDisplaying the features along with other plots\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs it uses Matplotlib, DNA Features Viewer can display the features on top of\nother sequences statistics, such as the local GC content:\n\n.. code:: python\n\n    import matplotlib.pyplot as plt\n    from dna_features_viewer import BiopythonTranslator\n    from Bio import SeqIO\n    import numpy as np\n\n    fig, (ax1, ax2) = plt.subplots(\n        2, 1, figsize=(12, 3), sharex=True, gridspec_kw={\"height_ratios\": [4, 1]}\n    )\n\n    # PLOT THE RECORD MAP\n    record = SeqIO.read(\"example_sequence.gb\", \"genbank\")\n    graphic_record = BiopythonTranslator().translate_record(record)\n    graphic_record.plot(ax=ax1, with_ruler=False, strand_in_label_threshold=4)\n\n    # PLOT THE LOCAL GC CONTENT (we use 50bp windows)\n    gc = lambda s: 100.0 * len([c for c in s if c in \"GC\"]) / 50\n    xx = np.arange(len(record.seq) - 50)\n    yy = [gc(record.seq[x : x + 50]) for x in xx]\n    ax2.fill_between(xx + 25, yy, alpha=0.3)\n    ax2.set_ylim(bottom=0)\n    ax2.set_ylabel(\"GC(%)\")\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/examples/with_gc_plot.png\" width=\"800\">\n    </p>\n\nMulti-line and multi-page plots\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSince v3.0 it is possible to plot a sequence over multiple lines (using ``record.plot_on_multiple_lines()``) or even on multiple pages (of a PDF):\n\n.. code:: python\n\n    graphic_record.plot_on_multiple_pages(\n        \"multipage_plot.pdf\",\n        nucl_per_line=70,\n        lines_per_page=7,\n        plot_sequence=True\n    )\n\n    \n.. raw:: html\n\n    <p align=\"center\">\n    <img alt=\"DNA Features Viewer Logo\" title=\"DNA Features Viewer Logo\" src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/docs/_static/images/multiline_example.png\" width=\"900\">\n    </p>\n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples in other packages:",
        "parent_header": [
          "DNA Features Viewer"
        ],
        "type": "Text_excerpt",
        "value": "DNA Chisel\n~~~~~~~~~~~\n\nThis GIF uses DNA Features Viewer to plot the progress in the optimization of a DNA sequence with `DNA Chisel <https://github.com/Edinburgh-Genome-Foundry/DnaChisel>`_. It also uses `Proglog <https://github.com/Edinburgh-Genome-Foundry/Proglog>`_ to automatically generate a picture at different time points. See the not-so-great python code for this example `on Gist <https://gist.github.com/Zulko/f9aa781aaaab2c4d66ccd968ca85ca1d>`_.\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img alt=\"DNA Chisel algorithm\" title=\"DNA Chisel\" src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaChisel/master/docs/_static/images/dnachisel_algorithm.gif\" width=\"800\">\n    <br />\n    </p>\n\nGeneBlocks\n~~~~~~~~~~\n`GeneBlocks <https://github.com/Edinburgh-Genome-Foundry/Geneblocks>`_ is a Python library which computes \"diffs\" of constructs two sequences, indicating all the changes (additions, deletions, mutations). It uses DNA Features Viewer to display these changesx along with the other sequence's features.\n\n.. raw:: html\n\n    <p align=\"center\">\n    <img alt=\"DNA Chisel algorithm\" title=\"DNA Chisel\" src=\"https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/GeneBlocks/master/examples/diff_blocks.png\" width=\"800\">\n    <br />\n    </p>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}