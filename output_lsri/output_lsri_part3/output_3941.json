{
  "application_domain": [
    {
      "confidence": 30.66,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DS3Lab/RosENet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-04T15:03:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-25T14:20:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9783069836756281,
      "result": {
        "original_header": "RosENet",
        "type": "Text_excerpt",
        "value": "This is the repository for the RosENet project. \n\u00b2Institute of Medical Virology, University of Zurich (UZH), CH-8057 Zurich, Switzerland \n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9165831222570491,
      "result": {
        "original_header": "Folder structure",
        "type": "Text_excerpt",
        "value": "To ease the setup, there are some requirements to the structure of the inputs.\nThe coarse unit of work is the dataset. A dataset is a folder with pdb folders and a file called labels.\nThe next unit of work is the pdb folder. A pdb folder stores a {code}_protein.pdb file and a {code}_ligand.mol2.\nThe labels file stores a line per pdb folder with the binding affinity assigned to it, separated by a space \n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9028887446250758,
      "result": {
        "original_header": "Neural networks",
        "type": "Text_excerpt",
        "value": "There are three CNNs implemented in the module, but any other implementation can be used. The only requirement is following TensorFlow's Estimator API.\nIt is easy to replicate the same structure as the ones given here. \n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8636579107084963,
      "result": {
        "original_header": "Selecting feature subsets",
        "type": "Text_excerpt",
        "value": "To select feature subsets, we can use the channel selectors. These are implemented by matching them as a substring of the feature names. Multiple channel selectors can be combined with underscored. \nAll `htmd` feature names represent both the protein and ligand features, so they are effectively two channels. \nFor example, using `htmd_rosetta` will include all the HTMD features, and all the Rosetta features. \nThe combination used in the paper release is `aromatic_acceptor_ion_rosetta`, adding to 20 feature maps. \n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.886997658809973,
      "result": {
        "original_header": "Settings",
        "type": "Text_excerpt",
        "value": "There are a few parameters that may be modified to change the behavior of the module. The file `settings.py` stores these options.\nThere we can change the voxelization methods and the size of the voxel image. We can also change the parameters for TensorFlow's input pipeline.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DS3Lab/RosENet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DS3Lab/RosENet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DS3Lab/RosENet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RosENet"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/clear_dataset.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/RosENet/voxelization/apbs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/logo.png"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setting the randomness",
        "parent_header": [
          "RosENet"
        ],
        "type": "Text_excerpt",
        "value": "The neural network actions use a seed parameter. For training, this seed is optional and can be randomly chosen by the module.\n\nThe seed is used to identify different trainings of the same model/data. When evaluating and predicting, the seed must be specified. The seed can be found in the name of the trained model folder, located under the training dataset folder with name format `_<model_name>_<features_string>_<seed>`.\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preparation",
        "parent_header": [
          "RosENet",
          "Running instructions"
        ],
        "type": "Text_excerpt",
        "value": "For the example dataset, substitute `<dataset>` with `test_dataset`\n\n1. preprocess\n```\npython3 -m RosENet -- preprocess <dataset>\n```\n2. voxelize\n```\npython3 -m RosENet -- voxelize <dataset>\n```\n3. postprocess\n```\npython3 -m RosENet -- postprocess <dataset>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DS3Lab/RosENet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RosENet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "DS3Lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 122628,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1365,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "RosENet"
        ],
        "type": "Text_excerpt",
        "value": "A script `install.sh` is included, which creates a Conda environment and install the necessary requirements.\n\nRosetta and Pyrosetta must be installed manually due to the required license.\n\nPyrosetta can be copied next to the RosENet folder or by adding it to the `PYTHONPATH`.\n\nYou must set the path to Rosetta's main folder in the attribute `rosetta.root` in file `RosENet/constants.py` [LINK](RosENet/constants.py#L65)\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run",
        "parent_header": [
          "RosENet"
        ],
        "type": "Text_excerpt",
        "value": "This repository is built as a Python module. To execute it, one should go above the root folder and run the following command:\n\n```\npython3 -m RosENet -- arguments\n```\n\nCurrently, six actions are implemented:\n\n1. preprocess\n2. voxelize\n3. postprocess\n4. train\n5. evaluate\n6. predict\n\nThese actions are also thought to be executed in this order.\nPreprocessing will compute the file transformations and energy minimization on the text files.\nVoxelization allows to create the 3D images for HTMD, Rosetta and electronegativity features and combine them.\nPostprocessing will transform the 3D images into a TFRecords format to be used as input for the neural networks.\nTraining, evaluation and prediction have the usual meanings.\n\nSubsteps in `preprocess` are cached. If some steps fail for some reason (usually faulty installations), the correct procedure after fixing the original problem is to clean the cached dataset. To do this, run `bash clear_dataset.sh <dataset>`, where `<dataset>` is the path to the dataset (i.e. `test_dataset`).\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running instructions",
        "parent_header": [
          "RosENet"
        ],
        "type": "Text_excerpt",
        "value": "To run the actions mentioned above with the example dataset, we need to run the following commands:\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Network training/evaluation",
        "parent_header": [
          "RosENet",
          "Running instructions"
        ],
        "type": "Text_excerpt",
        "value": "Substitute `<*_dataset>` with the paths to the respective datasets. \n\nSubstitute `<model>` for the path of a network model code. Some examples are located under `RosENet/models` (i.e. `RosENet/models/resnet.py`)\n\nSubstitute `<feature_string>` for an underscore-separated string of channel selectors.\n\nSubstitute `<seed>` for a non-negative integer to be used as seed.\n\n4. train\n```\npython3 -m RosENet -- train <train_dataset> <validation_dataset> <model> <features_string> [<seed>]\n```\n5. evaluate\n```\npython3 -m RosENet -- evaluate <train_dataset> <evaluation_dataset> <model> <features_string> <seed>\n```\n6. predict\n```\npython3 -m RosENet -- predict <train_dataset> <prediction_dataset> <model> <features_string> <seed>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preprocessed datasets",
        "parent_header": [
          "RosENet",
          "Running instructions"
        ],
        "type": "Text_excerpt",
        "value": "The datasets for training and validation of RosENet have been published and are accesible in https://doi.org/10.5281/zenodo.4625486\n\n"
      },
      "source": "https://raw.githubusercontent.com/DS3Lab/RosENet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:39:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ]
}