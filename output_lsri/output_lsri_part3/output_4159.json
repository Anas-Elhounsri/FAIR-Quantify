{
  "application_domain": [
    {
      "confidence": 29.41,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "BCREval"
        ],
        "type": "Text_excerpt",
        "value": "Zhou J, Zhao M, Sun Z, Wu F, Liu Y, Liu X, He Z, He Q, He Q. BCREval: a computational method to estimate the bisulfite conversion ratio in WGBS. BMC Bioinformatics. 2020 Jan 31;21(1):38. doi: 10.1186/s12859-019-3334-z. PMID: 32005131; PMCID: PMC6995172.\n"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hqyone/BCR_Evaluator"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-11T21:47:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-29T12:19:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCR evaluator is used to evaluate bisulfite conversion ratio in WGSBS experiment"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9844751282886671,
      "result": {
        "original_header": "BCREval",
        "type": "Text_excerpt",
        "value": "BCREval is used to evaluate bisulfite conversion ratio in WGSBS experiment \nWhole genome shotgun bisulfite sequencing (WGSBS) also known as BS-seq has been widely used to measure the methylation of whole genome at single-base resolution. One of the key steps in the assay is converting unmethylated cytosines into thymines (BS conversion). Incomplete conversion of unmethylated cytosines can introduces false positive methylation call. Developing a quick method to evaluate bisulfite conversion ratio (BCR) is benefit for both quality control and data analysis of WGSBS. Here BCReval is a small python script to estimate the unconverted rate (UCR) by using telomeric repetitive DNA as native spike-in control.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9225239155668478,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "In which:\n1. File: home/server3/data2/zmq/ENCFF329YKL.fastq.gz\n2. Type : +             //from FASTQ_1(+) or FASTQ_2(-)\n3. Min_unit_count : 8   //The minimal number of telomeric rep units\n4. Total_reads: 925473550  //Total number of reads in the FASTQ file\n5. Telomeric reads: 125151 . // Telomeric reads numbers\n6. Total_n3_reads:0     //The total number of reads which contain N3 units that has three methylated cytosines \n7. total_unit_num:2022759 . //The number of telomeric units in the files (All reads)\n8. c_strand_unit_num: 90386 . //The number of telomeric units of C-strand derived telomeric reads\n9. g_len_series:0,273921715,20071116,....6095,0,0,0,0 . // The number of reads containing certain number of G-telomeric derived units (TTAGGG). For example here 273921715 is the number of reads containing one G-unit.\n10. c_len_series:83503771,542711711,4739860,....574,0,0,0,0 . // The number of reads containing certain number of C-telomeric derived units (CCCTAA).\n11. a_count_series:89547,290,300,244,0,4,1,0  //The numbers of all possible units (A series, from FASTQ_1)\n12. b_count_series:304,76,2761,91,1383,4504,5226,1918028  //The numbers of all possible units (B series, from FASTQ_2), you can omit it here because this data is from FASTQ1 file.\n13. rc1: 0.0032 . //The unconverted/methylated ratio of the first C\n14. rc2: 0.0034 . //The unconverted/methylated ratio of the second C\n15. rc3: 0.0028 . //The unconverted/methylated ratio of the third C\n \n"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hqyone/BCR_Evaluator/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hqyone/BCR_Evaluator/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hqyone/BCR_Evaluator"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCREval"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9523382093320416,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "Example:\n/home/server3/data2/zmq/ENCFF156UKB.fastq.gz\t+\t8\t925473550\t125151\t0\t2022759\t90386\t0,273921715,20071116,304864,21496,9547,9123,9530,9139,8617,8387,7941,7707,7244,6903,6392,5836,5323,4954,4450,4221,4119,3765,3524,16106,6095,0,0,0,0\t83503771,542711711,4739860,42520,2172,544,250,180,176,108,111,107,111,110,96,76,105,102,109,163,163,210,194,200,1713,574,0,0,0,0\t89547,290,300,244,0,4,1,0\t304,76,2761,91,1383,4504,5226,1918028\t0.0032\t0.0034\t0.0028 \n"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hqyone/BCR_Evaluator/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BCR_Evaluator"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hqyone"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 12953,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:22:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage information",
        "parent_header": [
          "BCREval"
        ],
        "type": "Text_excerpt",
        "value": "Usage: python BCReval.py -n <rep_number> -i <input_files> -o <output_file>\n\nThe input_file should be a FASTQ file or a list of FASTQ files which are seperated by commas. \nIt has been tested in python 2.7\n"
      },
      "source": "https://raw.githubusercontent.com/hqyone/BCR_Evaluator/master/README.md",
      "technique": "header_analysis"
    }
  ]
}