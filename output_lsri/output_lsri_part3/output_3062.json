{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lmirsadeghi/EARN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-04T20:14:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-25T14:09:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This package proposes a fusion system. It can help to the analysis of Whole-Exome Sequencing (WES) data, files (.maf) and so on. It is used for identification of candidate driver genes associated with cancers based on mutations that occur in genes. For more detailed, it consists of four software tools and three learning machines. The software tools are MutsigCV, OncodriveCLIUST, OncodriveFM, and NetBox. They extract the features from the initial file. Also, the proposed ensemble machine involves three machines called SVM, ANN, and RF. They integrate features and predict driver genes. This package has been created in the Laboratory of Complex Biological Systems and Bioinformatics (CBB) in Department of Bioinformatics at University of Tehran, Tehran, Iran."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9876808465708439,
      "result": {
        "type": "Text_excerpt",
        "value": "CBBio v.0.1 By Leila Mirsadeghi\r\n\r\nContents\r\n\r\n1 Introduction \r\n\r\n2 Software Tools Requirements\r\n\r\n3 Software tools installation on windows \r\n\r\n4 Source code for running software tools\r\n\r\n5 Ensemble learning system Requirements\r\n\r\n6 Machine learning methods installation on windows\r\n\r\n7 Source codes for implementation of machine learning algorithms\r\n\r\n1 Introduction\r\n \r\nThis package called \"CBBio\" proposes a fusion system. This fusion system can help to analysis Whole-Exome Sequencing (WES) data, files (.maf) and so on. \r\nIn this package, the published data in a study [1] on metastatic breast cancer has been used as initial input data. It is also available in cBioPortal [2], and [3].\r\nThis proposed fusion method can be used for identification of candidate driver genes associated with cancers based on mutations that occur in genes.\r\n\r\nIn the first step, it uses four software tools for features extraction from mutation (whole-exome sequencing) data.\r\nThese software tools are MutSigCV v.1.4 [4], OncodriveCUST [5], OncodriveFM [6], and NetBox 1.0 [7]. They rank genes based on P-value.\r\n\r\nAnd then any tool assigns a number to genes as a feature.\r\n\r\nAt next an ensemble machine learning method [8] was applied for driver genes prioritization based on feature Integration. It involves three individual classifiers including non-linear SVM (Support Vector Machine) [9], ANN (Artificial Neural Network) [10] and [11], and RF (Random Forest) [12]. \r\n\r\nThey labeled genes based on two indexes 0 and 1 (0 means passenger gene and 1 means driver gene) and also predicted a score for a gene. Finally, the ensemble learning method adopts the final decision for each gene. \r\n\r\nSo, this fusion method integrates outputs and makes a decision based on Algebraic Combiners strategy [8] and [13]. It means that this ensemble approach calculates the average among three scores which are special for each gene and come from the results of the individual classifiers.\r\n\r\nTo analyze the results and rank candidate driver genes, it is recommended to use the analytical capabilities are available in TCGA or cBioPortal. \r\n\r\n2 Software Tools Requirements \r\n\r\n2.1 Requirements for MutsigCV v.1.4:\r\n\r\n\u2022\tA license for Matlab (Full ToolBox), you can run MutSigCV from its source code file: MutSigCV.m\r\n\r\n2.2 Requirements for OncodriveCLUST:\r\n\r\n\u2022\tPython 3; OncodriveCLUST depends on Python 3 and some external libraries, numpy, scipy, pandas and statsmodels.\r\n\r\n\u2022\tAnaconda 3; The easiest way to install all this software stack is using the well-known Anaconda Python distribution.\r\n\r\n2.3 Requirements for OncodriveFM:\r\n\r\n\u2022\tPython 3; OncodriveFM depends on Python 3 and some external libraries, numpy, scipy, pandas and statsmodels.\r\n\r\n\u2022\tAnaconda 3; The easiest way to install all this software stack is using the well-known Anaconda Python distribution.\r\n\r\n2.4 Requirements for NetBox:\r\n\r\n\u2022\tJava 1.5 or later.\r\n\r\n\u2022\tPython 2.5 or later. \r\n\r\n3 Software tools installation on windows\r\n\r\n\r\n3.1 To install MutsigCV v.1.4, you must have:\r\n \r\n\u2022\tThe MutsigCV software and its reference files are available for download at: \r\n\r\nhttps://software.broadinstitute.org/cancer/cga/mutsig https://software.broadinstitute.org/cancer/cga/mutsig_run\r\n\r\n3.2 To install OncodriveCLUST, you must have: \r\n\r\n\u2022\tOncodriveCLUST software and its requirements are available for download at: http://bg.upf.edu/group/projects/oncodrive-clust.php\r\nhttps://bitbucket.org/bbglab/oncodriveclust/overview\r\n\r\n3.3 To install OncodriveFM, you must have: \r\n\r\n\u2022\tOncodriveFM software and its requirements are available for download at: http://bg.upf.edu/group/projects/oncodrive-fm.php\r\nhttps://bitbucket.org/bbglab/oncodrivefm\r\n\r\n3.4 To install NetBox 1.0, you must have: \r\n\r\n\u2022\tThe NetBox software, user guide, checking updates, and example datasets are available for download at: http://cbio.mskcc.org/netbo\r\n\r\n\r\n4 Source code for running software tools\r\n\r\n4.1 Run the following command to see MutsigCV in action:\r\n\r\nMutSigCV('C:\\Users\\Ghasedak Store\\simpleSomaticMutations\\data_mutations_extended.maf'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\exome_full192.coverage.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\gene.covariates.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Example Data\\MutSigCV_example_data.1.0.1\\LUSC.example.output.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\mutation_type_dictionary_file.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\chr_files_hg19')\r\n\r\n4.2\tRun the following command to see OncodriveCLUST in action:\r\n\r\noncodriveclust -m 3 --cgc C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\data/CGC_phenotype.tsv C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\examples/nonsyn-mbca.txt C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\examples/syn-mbca.txt C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\data/gene_transcripts.tsv\r\n\r\n4.3\tRun the following command to see OncodriveFM in action:\r\n\r\noncodrivefm -e median -m C:\\ProgramData\\Anaconda3\\bbglab-oncodrivefm-0d3030da3f83\\data/ensg_kegg.tsv C:\\ProgramData\\Anaconda3\\bbglab-oncodrivefm-0d3030da3f83\\data/MBCA1.tdm\r\n\r\n4.4\tRun the following command to see NetBox in action:\r\n\r\ncd C:\\netbox\\brca_data \r\nC:\\Python\\Python36-32\\python.exe C:\\netbox\\bin\\netAnalyze.py C:\\netbox\\brca_data\\netbox1.props\r\n\r\n\r\n5 Ensemble learning system Requirements \r\nRequirements for machine learning methods:\r\nAnaconda 2, Python 2.5 or later; We used scikit-learn package to train machine learning models and implement our algorithms in python.\r\n\r\n6 Machine learning methods installation on windows\r\nScikit-learn package is available for download at:\r\n\r\nhttps://scikit-learn.org/stable/\r\n\r\nPlease follow the steps below to install three individual machine learning methods and the proposed ensemble learning method:\r\n\r\n\u2022\tDownload and UnRAR File named \u201cgene_classification.rar\u201d.\r\n\r\n\u2022\tReplace your desired files including feature file (.csv), positive and negative data files (.txt), and Test file (.txt) instead of the default file.\r\nNote that the file names and formats are preserved.\r\n\r\n7   Source codes for implementation of machine learning algorithms\r\n\r\nTo implement learning machine methods run the following commands in anaconda prompt 2:\r\n\r\nFor SVM: cd [directory] python svm_gene_classification.py -cvr 100\r\n\r\nFor ANN: cd [directory] python nn_gene_classification.py -cvr 100\r\n\r\nFor RF: cd [directory] python rf_gene_classification.py -cvr 100\r\n\r\nFor ensemble learning machine: cd [directory] python all_gene_classification.py -cvr 100\r\n\r\n\u2022\tFinally, two output files will be created for each of the machines.\r\n\r\nOne of the files named \u201c\u2026_predictions_train\u201d (.csv) assigns a new label to train data and predicts a score for each gene.\r\nIn the next file named \u201c\u2026_predictions_test\u201d (.csv), the test data is labeled and the scores for the genes are predicted.\r\nIn this way, genes are prioritized according to their importance in the occurrence of cancer.\r\n\r\nReferences:\r\n[1]\tN. Wagle et al., \u201cThe Metastatic Breast Cancer (MBC) project: Accelerating translational research through direct patient engagement.\u201d American Society of Clinical Oncology, 2017.\r\n[2]\tE. Cerami et al., \u201cThe cBio cancer genomics portal: an open platform for exploring multidimensional cancer genomics data.\u201d AACR, 2012.\r\n[3]\tJ. Gao et al., \u201cIntegrative analysis of complex cancer genomics and clinical profiles using the cBioPortal,\u201d Sci. Signal., vol. 6, no. 269, pp. pl1-pl1, 2013.\r\n[4]\tM. S. Lawrence et al., \u201cMutational heterogeneity in cancer and the search for new cancer-associated genes,\u201d Nature, vol. 499, no. 7457, pp. 214\u2013218, 2013.\r\n[5]\tD. Tamborero, A. Gonzalez-Perez, and N. Lopez-Bigas, \u201cOncodriveCLUST: exploiting the positional clustering of somatic mutations to identify cancer genes,\u201d Bioinformatics, vol. 29, no. 18, pp. 2238\u20132244, 2013.\r\n[6]\tA. Gonzalez-Perez and N. Lopez-Bigas, \u201cFunctional impact bias reveals cancer drivers,\u201d Nucleic Acids Res., vol. 40, no. 21, pp. e169\u2013e169, 2012.\r\n[7]\tE. Cerami, E. Demir, N. Schultz, B. S. Taylor, and C. Sander, \u201cAutomated network analysis identifies core pathways in glioblastoma,\u201d PLoS One, vol. 5, no. 2, p. e8918, 2010.\r\n[8]\tL. Rokach, \u201cEnsemble-based classifiers,\u201d Artif. Intell. Rev., vol. 33, no. 1\u20132, pp. 1\u201339, 2010.\r\n[9]\tC. Cortes and V. Vapnik, \u201cSupport-vector networks,\u201d Mach. Learn., vol. 20, no. 3, pp. 273\u2013297, 1995.\r\n[10]\tF. Rosenblatt, \u201cThe perceptron: a probabilistic model for information storage and organization in the brain.,\u201d Psychol. Rev., vol. 65, no. 6, p. 386, 1958.\r\n[11]\tJ. Schmidhuber, \u201cDeep learning in neural networks: An overview,\u201d Neural networks, vol. 61, pp. 85\u2013117, 2015.\r\n[12]\tT. K. Ho, \u201cRandom decision forests,\u201d in Document Analysis and Recognition, 1995., Proceedings of the Third International Conference on, 1995, vol. 1, pp. 278\u2013282.\r\n[13]\tR. Polikar, \u201cEnsemble based systems in decision making,\u201d Circuits Syst. Mag. IEEE, vol. 6, no. 3, pp. 21\u201345, 2006.\r\n\r\n\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/lmirsadeghi/EARN/master/ReadMe.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lmirsadeghi/EARN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lmirsadeghi/EARN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lmirsadeghi/EARN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/lmirsadeghi/EARN/master/ReadMe.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999876535783208,
      "result": {
        "type": "Text_excerpt",
        "value": "CBBio v.0.1 By Leila Mirsadeghi\r\n\r\nContents\r\n\r\n1 Introduction \r\n\r\n2 Software Tools Requirements\r\n\r\n3 Software tools installation on windows \r\n\r\n4 Source code for running software tools\r\n\r\n5 Ensemble learning system Requirements\r\n\r\n6 Machine learning methods installation on windows\r\n\r\n7 Source codes for implementation of machine learning algorithms\r\n\r\n1 Introduction\r\n \r\nThis package called \"CBBio\" proposes a fusion system. This fusion system can help to analysis Whole-Exome Sequencing (WES) data, files (.maf) and so on. \r\nIn this package, the published data in a study [1] on metastatic breast cancer has been used as initial input data. It is also available in cBioPortal [2], and [3].\r\nThis proposed fusion method can be used for identification of candidate driver genes associated with cancers based on mutations that occur in genes.\r\n\r\nIn the first step, it uses four software tools for features extraction from mutation (whole-exome sequencing) data.\r\nThese software tools are MutSigCV v.1.4 [4], OncodriveCUST [5], OncodriveFM [6], and NetBox 1.0 [7]. They rank genes based on P-value.\r\n\r\nAnd then any tool assigns a number to genes as a feature.\r\n\r\nAt next an ensemble machine learning method [8] was applied for driver genes prioritization based on feature Integration. It involves three individual classifiers including non-linear SVM (Support Vector Machine) [9], ANN (Artificial Neural Network) [10] and [11], and RF (Random Forest) [12]. \r\n\r\nThey labeled genes based on two indexes 0 and 1 (0 means passenger gene and 1 means driver gene) and also predicted a score for a gene. Finally, the ensemble learning method adopts the final decision for each gene. \r\n\r\nSo, this fusion method integrates outputs and makes a decision based on Algebraic Combiners strategy [8] and [13]. It means that this ensemble approach calculates the average among three scores which are special for each gene and come from the results of the individual classifiers.\r\n\r\nTo analyze the results and rank candidate driver genes, it is recommended to use the analytical capabilities are available in TCGA or cBioPortal. \r\n\r\n2 Software Tools Requirements \r\n\r\n2.1 Requirements for MutsigCV v.1.4:\r\n\r\n\u2022\tA license for Matlab (Full ToolBox), you can run MutSigCV from its source code file: MutSigCV.m\r\n\r\n2.2 Requirements for OncodriveCLUST:\r\n\r\n\u2022\tPython 3; OncodriveCLUST depends on Python 3 and some external libraries, numpy, scipy, pandas and statsmodels.\r\n\r\n\u2022\tAnaconda 3; The easiest way to install all this software stack is using the well-known Anaconda Python distribution.\r\n\r\n2.3 Requirements for OncodriveFM:\r\n\r\n\u2022\tPython 3; OncodriveFM depends on Python 3 and some external libraries, numpy, scipy, pandas and statsmodels.\r\n\r\n\u2022\tAnaconda 3; The easiest way to install all this software stack is using the well-known Anaconda Python distribution.\r\n\r\n2.4 Requirements for NetBox:\r\n\r\n\u2022\tJava 1.5 or later.\r\n\r\n\u2022\tPython 2.5 or later. \r\n\r\n3 Software tools installation on windows\r\n\r\n\r\n3.1 To install MutsigCV v.1.4, you must have:\r\n \r\n\u2022\tThe MutsigCV software and its reference files are available for download at: \r\n\r\nhttps://software.broadinstitute.org/cancer/cga/mutsig https://software.broadinstitute.org/cancer/cga/mutsig_run\r\n\r\n3.2 To install OncodriveCLUST, you must have: \r\n\r\n\u2022\tOncodriveCLUST software and its requirements are available for download at: http://bg.upf.edu/group/projects/oncodrive-clust.php\r\nhttps://bitbucket.org/bbglab/oncodriveclust/overview\r\n\r\n3.3 To install OncodriveFM, you must have: \r\n\r\n\u2022\tOncodriveFM software and its requirements are available for download at: http://bg.upf.edu/group/projects/oncodrive-fm.php\r\nhttps://bitbucket.org/bbglab/oncodrivefm\r\n\r\n3.4 To install NetBox 1.0, you must have: \r\n\r\n\u2022\tThe NetBox software, user guide, checking updates, and example datasets are available for download at: http://cbio.mskcc.org/netbo\r\n\r\n\r\n4 Source code for running software tools\r\n\r\n4.1 Run the following command to see MutsigCV in action:\r\n\r\nMutSigCV('C:\\Users\\Ghasedak Store\\simpleSomaticMutations\\data_mutations_extended.maf'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\exome_full192.coverage.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\gene.covariates.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Example Data\\MutSigCV_example_data.1.0.1\\LUSC.example.output.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\mutation_type_dictionary_file.txt'...\r\n    ,'C:\\Users\\Ghasedak Store\\MutSigCV\\Required inputs\\chr_files_hg19')\r\n\r\n4.2\tRun the following command to see OncodriveCLUST in action:\r\n\r\noncodriveclust -m 3 --cgc C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\data/CGC_phenotype.tsv C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\examples/nonsyn-mbca.txt C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\examples/syn-mbca.txt C:\\ProgramData\\Anaconda3\\bbglab-oncodriveclust-60e75d0cb432\\data/gene_transcripts.tsv\r\n\r\n4.3\tRun the following command to see OncodriveFM in action:\r\n\r\noncodrivefm -e median -m C:\\ProgramData\\Anaconda3\\bbglab-oncodrivefm-0d3030da3f83\\data/ensg_kegg.tsv C:\\ProgramData\\Anaconda3\\bbglab-oncodrivefm-0d3030da3f83\\data/MBCA1.tdm\r\n\r\n4.4\tRun the following command to see NetBox in action:\r\n\r\ncd C:\\netbox\\brca_data \r\nC:\\Python\\Python36-32\\python.exe C:\\netbox\\bin\\netAnalyze.py C:\\netbox\\brca_data\\netbox1.props\r\n\r\n\r\n5 Ensemble learning system Requirements \r\nRequirements for machine learning methods:\r\nAnaconda 2, Python 2.5 or later; We used scikit-learn package to train machine learning models and implement our algorithms in python.\r\n\r\n6 Machine learning methods installation on windows\r\nScikit-learn package is available for download at:\r\n\r\nhttps://scikit-learn.org/stable/\r\n\r\nPlease follow the steps below to install three individual machine learning methods and the proposed ensemble learning method:\r\n\r\n\u2022\tDownload and UnRAR File named \u201cgene_classification.rar\u201d.\r\n\r\n\u2022\tReplace your desired files including feature file (.csv), positive and negative data files (.txt), and Test file (.txt) instead of the default file.\r\nNote that the file names and formats are preserved.\r\n\r\n7   Source codes for implementation of machine learning algorithms\r\n\r\nTo implement learning machine methods run the following commands in anaconda prompt 2:\r\n\r\nFor SVM: cd [directory] python svm_gene_classification.py -cvr 100\r\n\r\nFor ANN: cd [directory] python nn_gene_classification.py -cvr 100\r\n\r\nFor RF: cd [directory] python rf_gene_classification.py -cvr 100\r\n\r\nFor ensemble learning machine: cd [directory] python all_gene_classification.py -cvr 100\r\n\r\n\u2022\tFinally, two output files will be created for each of the machines.\r\n\r\nOne of the files named \u201c\u2026_predictions_train\u201d (.csv) assigns a new label to train data and predicts a score for each gene.\r\nIn the next file named \u201c\u2026_predictions_test\u201d (.csv), the test data is labeled and the scores for the genes are predicted.\r\nIn this way, genes are prioritized according to their importance in the occurrence of cancer.\r\n\r\nReferences:\r\n[1]\tN. Wagle et al., \u201cThe Metastatic Breast Cancer (MBC) project: Accelerating translational research through direct patient engagement.\u201d American Society of Clinical Oncology, 2017.\r\n[2]\tE. Cerami et al., \u201cThe cBio cancer genomics portal: an open platform for exploring multidimensional cancer genomics data.\u201d AACR, 2012.\r\n[3]\tJ. Gao et al., \u201cIntegrative analysis of complex cancer genomics and clinical profiles using the cBioPortal,\u201d Sci. Signal., vol. 6, no. 269, pp. pl1-pl1, 2013.\r\n[4]\tM. S. Lawrence et al., \u201cMutational heterogeneity in cancer and the search for new cancer-associated genes,\u201d Nature, vol. 499, no. 7457, pp. 214\u2013218, 2013.\r\n[5]\tD. Tamborero, A. Gonzalez-Perez, and N. Lopez-Bigas, \u201cOncodriveCLUST: exploiting the positional clustering of somatic mutations to identify cancer genes,\u201d Bioinformatics, vol. 29, no. 18, pp. 2238\u20132244, 2013.\r\n[6]\tA. Gonzalez-Perez and N. Lopez-Bigas, \u201cFunctional impact bias reveals cancer drivers,\u201d Nucleic Acids Res., vol. 40, no. 21, pp. e169\u2013e169, 2012.\r\n[7]\tE. Cerami, E. Demir, N. Schultz, B. S. Taylor, and C. Sander, \u201cAutomated network analysis identifies core pathways in glioblastoma,\u201d PLoS One, vol. 5, no. 2, p. e8918, 2010.\r\n[8]\tL. Rokach, \u201cEnsemble-based classifiers,\u201d Artif. Intell. Rev., vol. 33, no. 1\u20132, pp. 1\u201339, 2010.\r\n[9]\tC. Cortes and V. Vapnik, \u201cSupport-vector networks,\u201d Mach. Learn., vol. 20, no. 3, pp. 273\u2013297, 1995.\r\n[10]\tF. Rosenblatt, \u201cThe perceptron: a probabilistic model for information storage and organization in the brain.,\u201d Psychol. Rev., vol. 65, no. 6, p. 386, 1958.\r\n[11]\tJ. Schmidhuber, \u201cDeep learning in neural networks: An overview,\u201d Neural networks, vol. 61, pp. 85\u2013117, 2015.\r\n[12]\tT. K. Ho, \u201cRandom decision forests,\u201d in Document Analysis and Recognition, 1995., Proceedings of the Third International Conference on, 1995, vol. 1, pp. 278\u2013282.\r\n[13]\tR. Polikar, \u201cEnsemble based systems in decision making,\u201d Circuits Syst. Mag. IEEE, vol. 6, no. 3, pp. 21\u201345, 2006.\r\n\r\n\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/lmirsadeghi/EARN/master/ReadMe.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lmirsadeghi/EARN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EARN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lmirsadeghi"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lmirsadeghi/EARN/master/ReadMe.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:27:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}