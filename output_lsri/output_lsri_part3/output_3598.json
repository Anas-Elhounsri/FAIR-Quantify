{
  "application_domain": [
    {
      "confidence": 28.11,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "CSBFinder-S",
          "<a name='overview'>Overview</a>"
        ],
        "type": "Text_excerpt",
        "value": "The following paper contains details regarding the first version of CSBFinder-S, denoted CSBFinder, that targeted the extraction of \nCSBs that correspond to operons. It contains details of the Suffix-Tree based algorithm for CSB extraction. \nThe options to use the Suffix-Tree based algorithm, and the extraction of directon CSBs, are still available in the \nnew CSBFinder-S tool.\n\nIf you used the tool as part of your research, please cite us:\n\nWhen searching for cross-strand colinear syntenic blocks:   \n\nDina Svetlitsky, Tal Dagan, Michal Ziv-Ukelson, \nDiscovery of multi-operon colinear syntenic blocks in microbial genomes, \nBioinformatics, Volume 36, Issue Supplement_1, July 2020, Pages i21\u2013i29, \n[https://doi.org/10.1093/bioinformatics/btaa503](https://doi.org/10.1093/bioinformatics/btaa503)\n\nWhen searching for colinear syntenic blocks that are conserved on the same strand:  \n\nDina Svetlitsky, Tal Dagan, Vered Chalifa-Caspi, Michal Ziv-Ukelson, \nCSBFinder: discovery of colinear syntenic blocks across thousands of prokaryotic genomes, Bioinformatics, \nVolume 35, Issue 10, 15 May 2019, Pages 1634\u20131643,\n [https://doi.org/10.1093/bioinformatics/bty861](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty861/5132694?guestAccessKey=1f04c37d-2e8f-4031-b802-08e73feff24b)\n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dinasv/CSBFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-02-28T17:26:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T06:38:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Java Desktop application with a graphical user interface for the discovery of colinear syntenic blocks across thousands microbial genomes "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Workflow Description",
        "parent_header": [
          "CSBFinder-S",
          "<a name='overview'>Overview</a>"
        ],
        "type": "Text_excerpt",
        "value": "The workflow of CSBFinder-S is given in the figure below.    \n\n**(A)** The input to the workflow is a dataset of input genomes, where each genome is modeled as a sequence of gene \nidentifiers: A gene identifier indicates the corresponding gene orthology group as well as the strand (+/-) in which \nthe gene is encoded. \nAdditional input consists of user-specified parameters **_k_** (number of allowed insertions) and **_q_** \n(the quorum parameter). In our formulation, a CSB is a pattern that\nappears as a substring of at least one of the input genomes, and has instances in at least **_q_** of the input\ngenomes, where each instance may vary from the CSB pattern by at most **_k_** gene insertions. \n\n**(B)** The genomes are mined to identify all patterns that qualify as CSBs according to the user-specified parameters. \n\n**(C)** All discovered CSBs are ranked according to a probabilistic score. \n\n**(D)** The CSBs are clustered to families according to their gene content similarity, and the rank of a family is\ndetermined by the score of its highest scoring CSB.\n\n![CSBFinder workflow](https://github.com/dinasv/CSBFinder/blob/master/images/workflow.png \"Workflow\")\n\n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9525106394746237,
      "result": {
        "original_header": "<a name='overview'>Overview</a>",
        "type": "Text_excerpt",
        "value": "**TL:DR** Watch this [video](https://www.youtube.com/watch?v=EG6Aue_Csps) from the ISMB conference to understand what CSBFinder is all about, including some examples on real data. \nCSBFinder-S implements a novel methodology for the discovery and ranking of \ncolinear syntenic blocks (**CSBs**) - groups of genes that are consistently located close to each other, \nin the same order, across a wide range of taxa.\nCSBFinder-S incorporates efficient algorithms that identify CSBs in large genomic datasets. \nThe discovered CSBs are ranked according to a probabilistic score and clustered to families according to their gene \ncontent similarity. \nThe overall toolkit includes two components, implementing two distinct algorithms and released in separate versions. \nThe first, denoted CSBFinder (published in ([Svetlitsky et. al., 2018](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty861/5132694?guestAccessKey=1f04c37d-2e8f-4031-b802-08e73feff24b)), cited below), incorporated a suffix-tree based \nalgorithm, and was optimized to seek single-operon CSBs. \nThe second version, CSBFinder-S ([Svetlitsky et. al., 2020](https://academic.oup.com/bioinformatics/article/36/Supplement_1/i21/5870523), cited below), \ngeneralizes the tool to cross-strand, multi operon CSBs and \nincorporates a match-point arithmetic based algorithm to efficiently support the generalizations. \n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9349730724844486,
      "result": {
        "original_header": "March 27, 2019 update",
        "type": "Text_excerpt",
        "value": "**CSBFinder-S** for the discovery of cross-strand multi-operon CSBs is released \n- In this version, the user can decide whether to segment the input genomes into directons (consecutive genes on the same \nstrand)  \n- A novel exact algorithm that uses match-point arithmetic is proposed and implemented. \nThe time and space complexities of the algorithm are insensitive to the number of insertions and maximal CSB length. \nThe new algorithm is faster than the algorithm given in (Svetlitsky et. al., 2018) for larger values of \ninsertions allowed. Additional advantages of the new algorithm are its simplicity of implementation, and the fact that it is easily \nparallelizable, yielding further scalability. \nCSBFinder-S provides several novel mechanisms to help the user sort, filter, and interpret the discovered CSBs. \n- A ranking score that considers the genomic distances between the genomes in which the corresponding CSBs \nappear. \n- The user can constrain the structural features of the desired CSBs (length, abundance, etc.), as well as to extract \nCSBs confined to specific functional semantic categories.  \n- A taxonomic viewer of the genomes that contain instances of each CSB. \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8849622707679243,
      "result": {
        "original_header": "<a name='ui'>Running CSBFinder-S via User Interface</a>",
        "type": "Text_excerpt",
        "value": "> Note: If you are going to use a very large input dataset you might need to change the maximal memory that can be\nused by CSBFinder-S. Go to the installation folder and edit the file \"CSBFinder-S.vmoptions\" using a Text Editor. Change\nthe Java option `-Xmx500m` to `-Xmx[maximal heap size]` depending of the available RAM.\n For example `-Xmx6g` sets the maximal JAVA heap size to 6GB. \n > It is recommended to use at least 6GB for a large dataset. You can specify a higher number, \n depending on you RAM size.  \n  \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8534123745792247,
      "result": {
        "original_header": "Importing input files",
        "type": "Text_excerpt",
        "value": "    2. The \"Run\" button should be enabled. Click on this button to set the parameters.\n \n    3. A progressBar appears. Hover over the question mark icon next to each parameter for an explanation of each parameter. \nAfter setting the parameters, click on \"Run\". This can take a few minutes, depending on the size of the dataset and \non the parameters specified.  \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750200502787035,
      "result": {
        "original_header": "Options:",
        "type": "Text_excerpt",
        "value": "Mandatory:\n- **-in** INPUT_DATASET_FILE_NAME    \n    Input file relative or absolute path. \n    See [Input files formats](#input_dataset) for more details.\n- **-q** QUORUM     \n      The quorum parameter. Minimal number of input sequences that must contain a CSB instance.   \n      Default: 1\n      Min Value: 1\n      Max Value: Total input sequences\n      \nOptional:     \n- **-ins** INSERTIONS    \n      Maximal number of insertions allowed in a CSB instance.\n      Default: 0\n- **-lmin** MIN_CSB_LENGTH     \n      Minimal length (number of genes) of a CSB   \n      Default: 2\n      Min Value: 2\n      Max Value: Maximal sequence length\n- **-lmax** MAX_CSB_LENGTH    \n      Maximal length (number of genes) of a CSB   \n      Default: Maximal sequence length\n      Min Value: 2\n      Max Value: Maximal sequence length\n- **--export-file** EXPORT_FILE_NAME ,**-e** EXPORT_FILE_NAME       \n      EXPORT_FILE_NAME will be the prefix of the names of the *.xlsx/*.txt output files.   \n      Default: dataset1\n- **--patterns** PATTERNS_FILE_NAME, **-p** PATTERNS_FILE_NAME    \n      A name of a file, located in a directory named 'input', in the same directory as the jar file.   \n      If this option is used, CSBs are no longer extracted from the input sequences.    \n      The file should contain specific CSB patterns that the user is interested to find in the input sequences.      \n      See [Input files formats](#in_patterns) for more details.    \n- **-cog-info** COG_INFO_FILE_NAME     \n      A name of a file, located in a directory named 'input', in the same directory as the jar file.   \n      This file should contain functional description of orthology groups.    \n      See [Input files formats](#cog_info) for more details.        \n- **--cross-strand**, **-cs**\n      If this option is provided, cross-strand CSBs will be extracted.\n- **-out** OUTPUT_FILE_TYPE    \n      Output file type   \n      Default: XLSX   \n      Possible Values: [TXT, XLSX, SESSION]\n- **-out-dir** OUT_DIR  \n      Path to output directory\n      Default: output\n- **-alg** ALG_NAME   \n      Algorithm to use for finding CSBs\n      Default: SUFFIX_TREE\n      Possible Values: [SUFFIX_TREE, MATCH_POINTS]\n- **-keep-all-patterns**\n      If this option is provided, keep all patterns, without removing sub-patterns with the same number of\n      instances\n- **--threshold** THRESHOLD, **-t** THRESHOLD   \n      Threshold for family clustering      \n      Default: 0.8    \n      Min Value: 0   \n      Max Value: 1    \n- **-clust-by** CLUSTER_BY    \n      Cluster CSBs to families by: 'score' or 'length'  \n      Default: SCORE   \n      Possible Values: [LENGTH, SCORE]\n- **-clust-denominator** CLUST_DENOMINATOR    \n      In the greedy CSB clustering to families, a CSB is added to an existing cluster if the \n      (intersection between the CSB and the Cluster genes/X) is above a threshold. Choose X.\n      Default: MIN_SET   \n      Possible Values: [MIN_SET, MAX_SET, UNION]   \n- **-skip-cluster-step**  \n      If this option is provided, skip the clustering to families step\n- **-procs** NUM_OF_PROCS    \n      Number of processes. 0 designates the maximal number of available\n      processes\n      Default: 1\n- **-h**, **--help**     \n      Show usage\n       \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.902839197868991,
      "result": {
        "original_header": "<a name='input_dataset'> Input file containing input genome sequences </a>",
        "type": "Text_excerpt",
        "value": "A text/fasta file containing all input genomes modeled as strings, where each character is an orthology group ID \n(for example, COG ID) that has been assigned to a corresponding gene \n- This is a mandatory input file\n- The path to this file is provided in:\n    - User Interface: Load this file by choosing `File->Import->Genomes File`\n    - Command Line: \"-in\" option \nAll replicons of the same genome should be consecutive, i.e.:\n```\n>genomeA|replicon1\n....\n>genomeA|replicon2\n...\n>genomeB|replicon1\n...\n```\n> Genes that do not belong to any gene orthology group, should be marked as 'X'\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8734889359089187,
      "result": {
        "original_header": "COG information input file",
        "type": "Text_excerpt",
        "value": "If you are using [COGs](https://www.ncbi.nlm.nih.gov/COG/) (Cluster of Orthologous Genes) as your \ngene orthology group identifiers, you can use the file _cog_info.txt_ provided in the input directory in the \ninstallation folder (also can be downloaded from [here](https://github.com/dinasv/CSBFinder/tree/master/input)). \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8670159448760358,
      "result": {
        "original_header": "<a name='in_patterns'>Input file containing CSB patterns </a>",
        "type": "Text_excerpt",
        "value": "If this file is provided, CSBs are no longer extracted from the input sequences. \nThis file shohuld contain specific CSB patterns which the user is interested to find in the input sequences. \n- This is an optional input text file\n- The path to this file is provided in:\n    - User Interface: In the progressBar opened after clicking on the \"Run\" button\n    - Command Line: \"--patterns\" or \"-p\" option \n> If you are running in \"cross-strand\" mode, you should add a strand (+/-) to each homology group ID\ne.g. COG3736+,COG3504+,COG2948-,COG0630+\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8819900396039999,
      "result": {
        "original_header": "<a name='in_taxa'>Input file containing Taxonomy information </a>",
        "type": "Text_excerpt",
        "value": "If this file is provided, taxonomic distribution of each CSB will be displayed in the user interface. \n> Missing data should be marked by \"-\" \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8582343775407745,
      "result": {
        "original_header": "<a name='in_metadata'>Input file containing additional metadata </a>",
        "type": "Text_excerpt",
        "value": "If this file is provided, the metadata from each genome, which contains a CSB or a CSB family, will be diplayed. \nThis file should use the following format:\n```\ngenome,col2,col3,...\ngenome-name(as provided in input genomes file),col2_data,col3_data,...\ngenome-name(as provided in input genomes file),col2_data,col3_data,...\n...\n```\n- The first column must contain the name of the genome, as provided in input genomes file. \nYou can choose your own column names.\n- There is not limitation on the number of columns. \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9549889773917308,
      "result": {
        "original_header": "<a name='output'>Output files</a>",
        "type": "Text_excerpt",
        "value": "- **File 1: A Catalog of CSBs**: An excel file (or txt file) containing the discovered CSBs named \"[export file name].xlsx\"   \n    This file contains three sheets: \n    1. Catalog    \n        - Each line describes a single CSB\n            - ID: unique CSB ID\n            - Length: number of characters in the CSB\n            - Score: a probabilistic ranking score, higher score indicates higher significance\n            - Instance count: number of input sequences with an instance\n            - CSB: a sequence of genes\n            - Main_Category: if functional category was provided in the -cog-info file, this column contains the functional category of                             the majority of CSB gene families\n            - Family_ID: CSBs with similar gene content will belong to the same family, indicated by a positive integer\n    2. Filtered CSBs\n        - This sheet contains only the top scoring CSB from each family\n    3. CSBs description\n        - Information about gene family IDs of each CSB \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8863644702246906,
      "result": {
        "original_header": "Input parameters",
        "type": "Text_excerpt",
        "value": "- The input genomes files is _plasmid_genomes.fasta_ located in the input directory.  \n- The quorum parameter is set to 10 (i.e., each CSB must have instances in at least 10 input genomes).  \n- The number of allowed insertions in a CSB instance is one.  \n- The export file name is _\"plasmids\"_\n- The gene orthology input file is _cog_info.txt_ located in the input directory \n##### Output\nThe output files will be now located in the output directory\n> On a laptop computer with Intel model i7 processor and 8GB RAM, this execution should take a few seconds\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/dinasv/CSBFinder/wiki"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dinasv/CSBFinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dinasv/CSBFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSBFinder-S"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/images/screenshot_results_example.PNG"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/images/workflow.png"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.ej-technologies.com/images/product_banners/install4j_medium.png"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9622865962102746,
      "result": {
        "original_header": "<a name='overview'>Overview</a>",
        "type": "Text_excerpt",
        "value": "CSBFinder-S is a standalone Desktop java application with a graphical user interface, \nthat can also be executed via command line. \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9537199628177047,
      "result": {
        "original_header": "<a name='download'>Download</a>",
        "type": "Text_excerpt",
        "value": "- Download the [latest release](https://github.com/dinasv/CSBFinder/releases) of CSBFinder-S installer.\n- The available options are Windows 64 or 32 bit, Unix and MacOS \n> CSBFinder-S has a user interface, but can be executed via the command line by executing the JAR file in the \ninstallation folder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9943346772038701,
      "result": {
        "original_header": "<a name='ui'>Running CSBFinder-S via User Interface</a>",
        "type": "Text_excerpt",
        "value": "Just double click on the CSBFinder-S executable file in the installation folder, or (if you checked these options \nduring installation) from the Start Menu / Desktop. \n> Note: If you are going to use a very large input dataset you might need to change the maximal memory that can be\nused by CSBFinder-S. Go to the installation folder and edit the file \"CSBFinder-S.vmoptions\" using a Text Editor. Change\nthe Java option `-Xmx500m` to `-Xmx[maximal heap size]` depending of the available RAM.\n For example `-Xmx6g` sets the maximal JAVA heap size to 6GB. \n > It is recommended to use at least 6GB for a large dataset. You can specify a higher number, \n depending on you RAM size.  \n  \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8875112474512769,
      "result": {
        "original_header": "Importing input files",
        "type": "Text_excerpt",
        "value": "1. **Importing a file containing the input genomes**:\n    1. Choose `File->Import->Genomes File`. If your dataset is large, this\nmake take a few minutes.\n    > [Sample input files](#sample) are provided in the input directory in the installation folder \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9862029462049482,
      "result": {
        "original_header": "<a name='cmd'>Running CSBFinder-S via Command Line </a>",
        "type": "Text_excerpt",
        "value": "> CSBFinder-S can be executed via the command line by executing the JAR file in the installation folder.  \n- In the terminal (linux) or cmd (windows) type:\n    ``` \n    java -jar CSBFinder-S-[version]-jar-with-dependencies.jar [options]\n    ```\n    > Note: If your input dataset is very large, add the argument -Xmx6g (6g might be enough, but you can specify a \n    higher number, depending on your RAM size).\n    For example:\n    BASH2*\n    > Note: When running CSBFinder-S without command line arguments, the user interface will be launched.\n     \n> [Sample input files](#sample) are provided below\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9975942883218234,
      "result": {
        "original_header": "COG information input file",
        "type": "Text_excerpt",
        "value": "If you are using [COGs](https://www.ncbi.nlm.nih.gov/COG/) (Cluster of Orthologous Genes) as your \ngene orthology group identifiers, you can use the file _cog_info.txt_ provided in the input directory in the \ninstallation folder (also can be downloaded from [here](https://github.com/dinasv/CSBFinder/tree/master/input)). \nYou can also use a custom file of your own. See instructions below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9066501394363283,
      "result": {
        "original_header": "User Interface",
        "type": "Text_excerpt",
        "value": "- You can also import `cog_info.txt` and `taxa_csbfinder.txt` for additional displayed information \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9671104984146848,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "You can export the resulting CSBs as a TXT or XLSX file.\nYou can also save the results in a session file, that can be opened using the user interface.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9843745195493353,
      "result": {
        "original_header": "Command Line",
        "type": "Text_excerpt",
        "value": "``` \njava -jar CSBFinder-[version]-jar-with-dependencies.jar -in input/plasmid_genomes.fasta -q 10 -ins 1 -e plasmids \n-cog-info input/cog_info.txt\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8111913256824587,
      "result": {
        "original_header": "<a name='ui_features'>User interface features</a>",
        "type": "Text_excerpt",
        "value": "--------------------------------------\n- Save - saving a session file (*.csb extension). This will save the current session, all filtered-out CSBs will be lost.\n- Double-clicking on a CSB gene, aligns all other CSBs/instances according to this gene\n- Re-clustering to families after filtration\n- Re-computing CSB scores with different paramaters\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9990837510591442,
      "result": {
        "original_header": "Properties files",
        "type": "Text_excerpt",
        "value": "The following files are present in the installation directory\n1. config.properties:   \nInclude paths to Session file, Taxonomy file, and Orthology info file. \nThese files will be loaded automatically when launching the program \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8372278412168308,
      "result": {
        "original_header": "<a name='license'>License</a>",
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0. See more details in [LICENSE](https://github.com/dinasv/CSBFinder/blob/master/LICENSE) file \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9063603109188699,
      "result": {
        "original_header": "<a name='author'>Author</a>",
        "type": "Text_excerpt",
        "value": "dina.svetlitsky@gmail.com\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.907913727248584,
      "result": {
        "original_header": "<a name='credit'>Credit</a>",
        "type": "Text_excerpt",
        "value": " This code modified a Generalized Suffix Tree code from https://github.com/abahgat/suffixtree, copyright 2012 Alessandro Bahgat Shehata, licensed under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0\"> Apache License, Version 2.0 </a> \n \n The User Interface uses icons made by\n <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a>,\n   <a href=\"https://www.flaticon.com/authors/kiranshastry\" title=\"Kiranshastry\">Kiranshastry</a>, \n  <a href=\"https://www.flaticon.com/authors/dave-gandy\" title=\"Dave Gandy\">Dave Gandy</a>, \n  <a href=\"https://www.freepik.com/\" title=\"Freepik\">Freepik</a>,\n  <a href=\"https://www.flaticon.com/authors/icon-works\" title=\"Icon Works\">Icon Works</a>\n  from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>, licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a> \nCSBFinder-S uses install4j - a multi-platform installer builder   \n[![install4j](https://www.ej-technologies.com/images/product_banners/install4j_medium.png \"install4j\")](https://www.ej-technologies.com/products/install4j/overview.html)\n \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8450723609051952,
      "result": {
        "original_header": "<a name='input_dataset'> Input file containing input genome sequences </a>",
        "type": "Text_excerpt",
        "value": "A text/fasta file containing all input genomes modeled as strings, where each character is an orthology group ID \n(for example, COG ID) that has been assigned to a corresponding gene \n- This is a mandatory input file\n- The path to this file is provided in:\n    - User Interface: Load this file by choosing `File->Import->Genomes File`\n    - Command Line: \"-in\" option \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8736250048100268,
      "result": {
        "original_header": "<a name='cog_info'>Input file with functional information of gene orthology group IDs </a>",
        "type": "Text_excerpt",
        "value": "- This is an optional input file\n- The path to this file is provided in:\n    - User Interface: `File->Import->Orthology Information file`\n    - Command Line: \"-cog-info\" option \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "<a name='in_patterns'>Input file containing CSB patterns </a>",
        "type": "Text_excerpt",
        "value": "#### Example\n```\n>1\nCOG3736,COG3504,COG2948,COG0630\n>564654\nCOG3736,COG3504,COG2948\n....\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8408047745657744,
      "result": {
        "original_header": "<a name='in_taxa'>Input file containing Taxonomy information </a>",
        "type": "Text_excerpt",
        "value": "- This is an optional input text file\n- User Interface: Load this file by choosing `File->Import->Taxonomy File` \nThis file should use the following format:\n```\nHEADER\ngenome-name(as provided in input genomes file),kingdom,phylum,class,genus,species\ngenome-name(as provided in input genomes file),kingdom,phylum,class,genus,species\n...\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8851186163849118,
      "result": {
        "original_header": "<a name='in_metadata'>Input file containing additional metadata </a>",
        "type": "Text_excerpt",
        "value": "- This is an optional input csv file\n- User Interface: Load this file by choosing `File->Import->Genome Metadata File` \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8829764780469933,
      "result": {
        "original_header": "User Interface",
        "type": "Text_excerpt",
        "value": "- Execute CSBfinder-S and choose `File->Import->Genomes File` \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8028134339469105,
      "result": {
        "original_header": "Properties files",
        "type": "Text_excerpt",
        "value": "The following files are present in the installation directory\n1. config.properties:   \nInclude paths to Session file, Taxonomy file, and Orthology info file. \nThese files will be loaded automatically when launching the program \n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gene-order, gene-orthology, genomics, microbial-genomics, pattern-mining, synteny"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2018 Dina Svetlitsky\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSBFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dinasv"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 511075,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2020-11-29T15:15:22Z",
        "date_published": "2020-11-29T15:32:00Z",
        "description": "- Bug fixes\r\n- Add an option to display a CSB of length 1 (however, the algorithm supports searching for CSBs of length 2 and up)\r\n- Add an option to import a genome metadata file",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.6.3",
        "name": "CSBFinder-S v0.6.3",
        "release_id": 34548375,
        "tag": "v0.6.3",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/34548375",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/34548375",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2020-08-05T14:49:51Z",
        "date_published": "2020-08-05T15:24:09Z",
        "description": "- Added a filtration feature\r\n- Bug fixes:\r\n  - Some rare instance were not found in single-strand mode\r\n  - Fixed score computation for very large datasets\r\n  - Fixed some circular genome views\r\n\r\n",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.6.2",
        "name": "CSBFinder-S v0.6.2",
        "release_id": 29368437,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/29368437",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/29368437",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2020-01-31T11:20:51Z",
        "date_published": "2020-01-31T11:48:26Z",
        "description": "- Added feature: search CSBs in circular genomes\r\n- Minor bug fixes",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.6.1",
        "name": "CSBFinder-S v0.6.1",
        "release_id": 23284972,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/23284972",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/23284972",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2019-12-07T11:50:09Z",
        "date_published": "2019-12-08T09:47:07Z",
        "description": "- CSB score can now be affected by genomic distances\r\n- Added extraction using predefined patterns\r\n### UI impovements:\r\n- Zoom-in and zoom-out\r\n- Improved filtration options\r\n- Taxonomy view for CSB instances \r\n- Add clustering and ranking as post-processing\r\n- Alignment of genes by double click\r\n- Configuration file for loading files automatically \r\n- Save and save as options\r\n- Gene colors are saved in a session file",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.6.0",
        "name": "CSBFinder-S v0.6.0",
        "release_id": 22054098,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/22054098",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/22054098",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2019-04-14T09:16:20Z",
        "date_published": "2019-04-14T10:16:58Z",
        "description": "Minor changes\r\n- Remove installer automatic launch on startup option\r\n- Remove unused options in the algorithms",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.5.1",
        "name": "CSBFinder-S v0.5.1",
        "release_id": 16748501,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/16748501",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/16748501",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2019-03-12T17:22:59Z",
        "date_published": "2019-03-27T09:52:00Z",
        "description": "CSBFinder-S - for cross-strand CSB discovery\r\n\r\nAn option for the discovery of CSBs that spread over two strands\r\nA \"match-point algorithm\" that consumes less memory, and is more efficient for larger values of insertions\r\nA multi-threaded mode for the \"match-point algorithm\"\r\nFiltration options for the CSBs in the user interface\r\nMemory improvement",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.5.0",
        "name": "CSBFinder-S v0.5.0",
        "release_id": 16377410,
        "tag": "v0.5.0",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/16377410",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/16377410",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-09-05T11:56:00Z",
        "date_published": "2018-09-05T12:07:09Z",
        "description": "Minor changes since the last version",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.3.2",
        "name": "CSBFinder v0.3.2",
        "release_id": 12739984,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/12739984",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/12739984",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-09-04T07:24:19Z",
        "date_published": "2018-09-04T07:54:09Z",
        "description": "In this version, the input parameters were split to basic and to advanced parameters in the UI.",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.3.1",
        "name": "CSBFinder v0.3.1",
        "release_id": 12713024,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/12713024",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/12713024",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-09-03T14:24:08Z",
        "date_published": "2018-09-03T18:30:05Z",
        "description": "Added a graphical user interface, but can be executed via command line as well",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.3.0",
        "name": "CSBFinder v0.3.0",
        "release_id": 12707502,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/12707502",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/12707502",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-05-22T11:11:46Z",
        "date_published": "2018-05-22T13:58:59Z",
        "description": "- Bug fix: start index of an instance on the reverse strand was incorrect",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.2.1",
        "name": "CSBFinder v0.2.1",
        "release_id": 11113381,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/11113381",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/11113381",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-04-27T12:09:11Z",
        "date_published": "2018-04-27T17:46:04Z",
        "description": "- Updated apache poi library to version 3.17\r\n- Check if output file is open when executing CSBFinder\r\n\r\n",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.2.0",
        "name": "CSBFinder v0.2.0",
        "release_id": 10759154,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/10759154",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/10759154",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dinasv",
          "type": "User"
        },
        "date_created": "2018-04-26T15:02:47Z",
        "date_published": "2018-04-26T15:09:24Z",
        "description": "The first release of CSBFinder",
        "html_url": "https://github.com/dinasv/CSBFinder/releases/tag/v0.1.0",
        "name": "CSBFinder v0.1.0",
        "release_id": 10737499,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/dinasv/CSBFinder/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dinasv/CSBFinder/releases/10737499",
        "value": "https://api.github.com/repos/dinasv/CSBFinder/releases/10737499",
        "zipball_url": "https://api.github.com/repos/dinasv/CSBFinder/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:21:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "parent_header": [
          "CSBFinder-S",
          "<a name='input'>Input files formats</a>",
          "<a name='input_dataset'> Input file containing input genome sequences </a>"
        ],
        "type": "Text_excerpt",
        "value": "```\n>Agrobacterium_H13_3_uid63403|NC_015183\nCOG1806\t+\nCOG0424\t+\nCOG0169\t+\nCOG0237\t+\nCOG0847\t+\nCOG1952\t-\nCOG3030\t-\nCOG4395\t+\nCOG2821\t+\n....\n>Agrobacterium_H13_3_uid63403|NC_015508\nX\t+\nX\t+\nCOG1487\t-\nX\t-\nX\t-\nX\t-\nCOG1525\t-\nX\t+\nCOG2253\t-\nCOG5340\t-\n....\n>Agrobacterium_radiobacter_K84_uid58269|NC_011983\nCOG1192\t+\nCOG1475\t+\nX\t+\nX\t+\nCOG0715\t+\nCOG0600\t+\n....\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "CSBFinder-S",
          "<a name='input'>Input files formats</a>",
          "<a name='input_dataset'> Input file containing input genome sequences </a>",
          "Assigning genes to orthology group identifiers"
        ],
        "type": "Text_excerpt",
        "value": "1. The [STRING](https://string-db.org/cgi/download.pl?sessionId=Dmc2Jkurdd3b) database contains \n[COG](https://www.ncbi.nlm.nih.gov/COG/) and [NOG](http://eggnogdb.embl.de/) annotations of many publicly \navailable genomes\n2. Newly sequenced genomes can be mapped to known orthology groups such as:\n    - COGs using [CDD](https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi)\n    - NOGs using [eggNOG mapper](http://eggnogdb.embl.de/#/app/emapper)\n3. A tool such as [Proteinortho](https://www.bioinf.uni-leipzig.de/Software/proteinortho/) detects orthologous genes within different species. \n4. The paper [\"New Tools in Orthology Analysis: A Brief Review of Promising Perspectives\" by Bruno T. L. Nichio et. al.](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5674930/)\nreviews several current tools for gene orthology detection\n"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "CSBFinder-S",
          "<a name='output'>Output files</a>"
        ],
        "type": "Text_excerpt",
        "value": "```\nCOG0318;Acyl-CoA synthetase (AMP-forming)/AMP-acid ligase II;I,Q;Lipid transport and metabolism;Secondary metabolites biosynthesis, transport and catabolism;CaiC;\nCOG0319;ssRNA-specific RNase YbeY, 16S rRNA maturation enzyme;J;Translation, ribosomal structure and biogenesis;YbeY;\nCOG0320;Lipoate synthase;H;Coenzyme transport and metabolism;LipA;\n...\n```"
      },
      "source": "https://raw.githubusercontent.com/dinasv/CSBFinder/master/README.md",
      "technique": "header_analysis"
    }
  ]
}