{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/seqan/lara"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-01-10T12:11:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-04T22:40:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LaRA 2: Lagrangian Relaxed structural Alignment"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.995624759327528,
      "result": {
        "original_header": "LaRA 2: Lagrangian Relaxed structural Alignment",
        "type": "Text_excerpt",
        "value": "LaRA 2 is an improved version of LaRA, a tool for sequence-structure alignment of RNA sequences. It... \n* computes all pairwise sequence-structure alignments of the input sequences\n* produces files that can be processed with T-Coffee or MAFFT to compute a multiple sequence-structure alignment\n* employs methods from combinatorial optimization to compute feasible solutions for an integer linear program\n* can read many input formats for RNA structure, e.g. Dot-bracket notation, Stockholm, Vienna format\n* is implemented to use multiple threads on your machine and runs therefore very fast\n* has a vectorized alignment kernel, which computes the results even faster\n* is based on the SeqAn library, currently version 2\n* is well-`documented <https://seqan.github.io/lara/>`__ and easy to use \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9187284679989146,
      "result": {
        "original_header": "Build instructions",
        "type": "Text_excerpt",
        "value": "Please create a new directory and build the program for your platform. \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9266100335893034,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "for multiple alignments with T-Coffee\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \nThe result of LaRA is a T-Coffee library file and its format is documented\n`here <http://www.tcoffee.org/Projects/tcoffee/documentation/index.html#t-coffee-lib-format-01>`__.\nIt contains the structural scores for each residue pair of each computed sequence pair.\nThis file is the input for T-Coffee, which computes the multiple alignment based on the scores: \nfor multiple alignments with MAFFT\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \nLaRA has an additional output format that can be read by the MAFFT framework.\nEach pairwise alignment produces three lines:\na description line composed of the two sequence ids and the two gapped sequences of the alignment. \nMAFFT invokes LaRA with the option *-o pairs* for receiving this output format. \nfor pairwise alignments\n~~~~~~~~~~~~~~~~~~~~~~~ \nLaRA can produce the aligned FastA format, which is recommended for a single pairwise alignment.\nIt looks like a normal FastA file with gap symbols in the sequences: \nYou need to pass the option *-o fasta* to the LaRA call for getting this output format. \nLaRA prints a warning if you use this format with more than two sequences.\nUsing this format with 3 or more sequences is possible but not recommended, because additional pairwise alignments\nwill simply be appended to the file, and it may be hard to distinguish the pairs later.\nIn addition, this can confuse other programs, which expect a single multiple sequence alignment\nas produced by MAFFT or T-Coffee. \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9771001692898653,
      "result": {
        "original_header": "Authorship &amp; Copyright",
        "type": "Text_excerpt",
        "value": "LaRA 2 is being developed by `J\u00f6rg Winkler <mailto:j.winkler@fu-berlin.de>`__ and\n`Gianvito Urgese <mailto:gianvito.urgese@polito.it>`__, but it incorporates a lot of work\nfrom other members of the `SeqAn project <http://www.seqan.de>`__. \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download instructions",
        "parent_header": [
          "LaRA 2: Lagrangian Relaxed structural Alignment"
        ],
        "type": "Text_excerpt",
        "value": "Clone the repository and use the *-\\-recurse-submodules* option for downloading SeqAn and Lemon as submodules.\n\n::\n\n  % git clone --recurse-submodules https://github.com/seqan/lara.git\n\nAlternatively, you can download a zip package of the repository via the green button at the top of the github page.\nIf you do so, please unzip the file into a new subdirectory named *lara* and download the dependencies separately.\n\n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/seqan/lara/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/seqan/lara/master/benchmark/benchmark_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/benchmark/benchmark_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/seqan/lara/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "seqan/lara"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LaRA 2: Lagrangian Relaxed structural Alignment"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999971707713816,
      "result": {
        "original_header": "Build instructions",
        "type": "Text_excerpt",
        "value": "  % mkdir bin\n  % cd bin\n  % cmake ../lara\n  % make\n  % cd .. \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9137897918261237,
      "result": {
        "original_header": "Output format",
        "type": "Text_excerpt",
        "value": "  % bin/t_coffee -lib results.lib \nYou need to pass the option *-o fasta* to the LaRA call for getting this output format. \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9988526280937053,
      "result": {
        "original_header": "Feedback &amp; Updates",
        "type": "Text_excerpt",
        "value": "+-------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| .. image:: https://raw.githubusercontent.com/seqan/lambda/gh-pages/images_readme/appbar.social.github.octocat.png | You can ask questions and report bugs on the `github tracker <https://github.com/seqan/lara/issues>`__.            |\n|    :alt: GitHub                                                                                                   | Please also `subscribe <https://github.com/seqan/lara/subscription>`__ and/or star us!                             |\n|    :target: https://github.com/seqan/lara/issues                                                                  |                                                                                                                    |\n|    :width: 76px                                                                                                   |                                                                                                                    |\n+-------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+\n| .. image:: https://raw.githubusercontent.com/seqan/lambda/gh-pages/images_readme/appbar.social.twitter.png        | You can also follow SeqAn on `twitter <https://twitter.com/SeqAnLib>`__ to receive updates on LaRA.                |\n|    :alt: Newsletter                                                                                               |                                                                                                                    |\n|    :target: https://twitter.com/SeqAnLib                                                                          |                                                                                                                    |\n|    :width: 76px                                                                                                   |                                                                                                                    |\n+-------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+ \n*Icons on this page by Austin Andrews: https://github.com/Templarian/WindowsIcons*\n \n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/seqan/lara/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alignment, bioinformatics, rna, rna-structure"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD-License (3-clause)\n======================\n\n| Copyright (c) 2016-2018, J\u00f6rg Winkler, Freie Universit\u00e4t Berlin\n| Copyright (c) 2016-2018, Gianvito Urgese, Politecnico di Torino\n| Copyright (c) 2006-2018, Knut Reinert, Freie Universit\u00e4t Berlin\n| All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n* Neither the name of J\u00f6rg Winkler, Gianvito Urgese, Knut Reinert,\nthe FU Berlin or the Politecnico di Torino nor the names of\nits contributors may be used to endorse or promote products derived\nfrom this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lara"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "seqan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1426784,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 10171,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6688,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3255,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/seqan/lara/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "LaRA 2: Lagrangian Relaxed structural Alignment"
        ],
        "type": "Text_excerpt",
        "value": "* platforms: Linux, MacOS\n* compiler: gcc \u2265 5 or clang \u2265 3.8 or icc \u2265 17\n* cmake \u2265 3.8\n\nLaRA is dependent on the following libraries:\n\n* `SeqAn 2.4 <https://github.com/seqan/seqan.git>`__\n* `Lemon 1.3.1 <https://github.com/seqan/lemon.git>`__\n\nTo process the output for multiple alignments (3 or more sequences), you need either\n\n* `T-Coffee 13 <https://github.com/cbcrg/tcoffee>`__ or\n* `MAFFT 7.453 for LaRA <https://github.com/bioinformatics-polito/LaRA2-mafft>`__\n\nOptionally, LaRA can predict the RNA structures for you if you provide\n\n* `ViennaRNA 2 <https://www.tbi.univie.ac.at/RNA/>`__\n\n*Note:* Users reported problems with installing ViennaRNA, so we provide some hints here.\n\n1. Install the `GNU MPFR Library <https://www.mpfr.org/>`__ first.\n2. Exclude unnecessary components of ViennaRNA:\n   ``./configure --without-swig --without-kinfold --without-forester --without-rnalocmin --without-gsl``\n3. If you have linker issues use\n   ``./configure --disable-lto``\n4. If your system supports SSE4.1 instructions then we recommend\n   ``./configure --enable-sse``\n\nIf you have further suggestions, we are happy to add them here.\n\n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:34:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "LaRA 2: Lagrangian Relaxed structural Alignment"
        ],
        "type": "Text_excerpt",
        "value": "After building the program binary, running LaRA is as simple as\n\n::\n\n  % bin/lara -i sequences.fasta\n\nWith the *-i* parameter you can pass one of the following formats to LaRA.\nThe filename must end with one of the specified suffixes, because the suffix determines the correct format parser.\n\n* FASTA sequence format (``.fa``, ``.fasta``, ``.faa``, ``.ffn``, ``.fna``, ``.frn``)\n* FASTQ sequence with quality annotation (``.fq``, ``.fastq``)\n* Raw sequence format (``.raw``)\n* EMBL sequence format (``.embl``)\n* Genbank sequence format (``.gbk``)\n* `Dot-bracket notation <https://rna.urmc.rochester.edu/Text/File_Formats.html#DotBracket>`__, with support for various bracket types (``.dbn``)\n* `Vienna format <https://www.ibi.vu.nl/programs/k2nwww/static/data_formats.html>`__, dot-bracket without pseudoknot (``.dbv``)\n* `Stockholm format <https://en.wikipedia.org/wiki/Stockholm_format>`__ (``.sth``)\n* `Connectivity Table <https://rna.urmc.rochester.edu/Text/File_Formats.html#CT>`__ (``.ct``)\n* `Bpseq format <https://www.ibi.vu.nl/programs/k2nwww/static/data_formats.html>`__ (``.bpseq``)\n* Extended Bpseq, with support for base pair probabilities (``.ebpseq``)\n\nNote that for some formats you need the ViennaRNA dependency, as the program must predict base pair probabilities.\nInstead, you can pass at least two dot plot files, which contain the base pair probabilities for a single sequence each.\nImportant: RNAfold must be executed with ``-p`` in order to retrieve a ``_dp.ps`` dot plot file!\n\n::\n\n  % bin/lara -d seq1_dp.ps -d seq2_dp.ps\n\nThe pairwise structural alignments are printed to stdout in the T-Coffee Library format (see below).\nIf you want to store the result in a file, please use the *-w* option or redirect the output.\n\n::\n\n  % bin/lara -i sequences.fasta -w results.lib\n  % bin/lara -i sequences.fasta  > results.lib\n\nWe recommend you to specify the number of threads with the *-j* option, e.g. to execute 4 alignments in parallel.\nIf you specify *-j 0* the program tries to detect the maximal number of threads available on your machine.\n\n::\n\n  % bin/lara -i sequences.fasta -j 4\n\nFor a list of options, please see the help message:\n\n::\n\n  % bin/lara --help\n\n"
      },
      "source": "https://raw.githubusercontent.com/seqan/lara/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}