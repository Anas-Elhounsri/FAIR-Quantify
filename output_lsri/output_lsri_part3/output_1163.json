{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Liuxg16/GeoPPI"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "GeoPPI"
        ],
        "type": "Text_excerpt",
        "value": "If you encounter any problems during the setup of environment or the execution of GeoPPI, do not hesitate to contact  [liuxg16@mails.tsinghua.edu.cn](mailto:liuxg16@mails.tsinghua.edu.cn)  or create an issue under the repository:  [https://github.com/Liuxg16/GeoPPI](https://github.com/Liuxg16/GeoPPI).\n\nCheers!\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-09T11:30:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-01T09:51:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9440170678492449,
      "result": {
        "original_header": "GeoPPI",
        "type": "Text_excerpt",
        "value": "Deep Geometric Representations for Modeling Effects of Mutations on Protein-Protein Binding Affinity \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9654086875697061,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "GeoPPI is a deep learning based framework that uses deep geometric representations of protein complexes to model the effects of mutations on the binding affinity. To achieve both the powerful expressive capacity for geometric structures and the robustness of prediction, GeoPPI sequentially employs two components, namely a geometric encoder (excelling in extracting graphical features) and a gradient-boosting tree (GBT, excelling in avoiding overfitting). The geometric encoder is a graph neural network that performs neural message passing on the neighboring atoms for updating representations of the center atom. It is trained via a novel self-supervised learning scheme to produce deep geometric representations for protein structures. Based on these learned representations of both a complex and its mutant, the GBT learns from the mutation data to predict the corresponding binding affinity change. \nThanks to the above design, GeoPPI enjoys accurate predictive power, strong generalizability, and high inference speed for the estimation of the mutation impact. \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3: Download FoldX",
        "parent_header": [
          "GeoPPI",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The FoldX Suite is available through academic and commercial licenses. Please apply for a license and download FoldX v4.0 binary file from: http://foldxsuite.crg.eu/\n\nOnce you download the FoldX file, please unzip the file and put the FoldX binary file in this main directory (i.e., `GeoPPI/foldx`). For example, suppose the file name is \"foldxLinux64.tar.gz\", run the following commands (ubuntu environment):\n```bash\ncp foldxLinux64.tar.gz ./\ntar -zxvf ./foldxLinux64.tar.gz\nchmod  a+x ./foldx\n```\nCongratulations! The environment is ready to run GeoPPI. \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Liuxg16/GeoPPI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Liuxg16/GeoPPI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Liuxg16/GeoPPI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeoPPI"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/install-cuda.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/data/fig/overview.png"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://latex.codecogs.com/svg.latex?\\Large&space;\\Delta\\Delta%20G=\\Delta%20G_{wildtype}-\\Delta%20G_{mutant}"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GeoPPI"
        ],
        "type": "Text_excerpt",
        "value": "This source code is tested with `Python 3.8` on`Ubuntu 20.04`.  Users need to accomplish the following three steps to complete the installation.\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Clone the GitHub repository",
        "parent_header": [
          "GeoPPI",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/Liuxg16/GeoPPI.git\ncd GeoPPI\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8429771892540154,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"data/fig/overview.png\" width=\"900\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Liuxg16/GeoPPI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 LiuXianggen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeoPPI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Liuxg16"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 26869,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3389,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Build the required dependencies",
        "parent_header": [
          "GeoPPI",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Building the required dependencies requires runing the script:\n```bash\nsource install.sh [flag]\n```\nIf your system has installed Anaconda software, please set [flag] to 1, otherwise set [flag] to 0. \n\nThe above script will complete the following two things: 1) building a virtual enviroment named \"ppi\"; 2) installing required dependencies.  If you meet any difficulty during this installation, please refer to the full documentation (i.e., `GeoPPI documentation.pdf`) for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running on your own structure",
        "parent_header": [
          "GeoPPI"
        ],
        "type": "Text_excerpt",
        "value": "Users can also use their own structures to analyze the mutation effects by putting the PDB files into the directory `data/testExamples/` and executing the above command again:\n```bash\npython run.py [pdb file] [Mutation] [partnerA_partnerB]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:48:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 75
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Example",
        "parent_header": [
          "GeoPPI"
        ],
        "type": "Text_excerpt",
        "value": "Users can use GeoPPI to compute the binding affinity changes given the complex and the mutation information.\n\nBefore using GeoPPI, please activate the environment first.\n\n```bash\nconda activate ppi\n```\nThen, you can use the following command to obtain the results:\n```bash\npython run.py [pdb file] [Mutation] [partnerA_partnerB]\n```\nwhere [pdb file] is the complex structure of interest, [Mutation] denotes the mutation information and [partnerA_partnerB] describes the two interaction partners in the protein complex.\n\n**Format of [Mutation]**: The mutation information includes WT residue, chain, residue index and mutant residue. such as \u201cTI38F\u201d, which stands for mutating the 38th acid amino at the I chain (i.e., phenylalanine) to threonine.\n\n**Format of [partnerA_partnerB]**: [partnerA_partnerB] are the chains of the two parts of the binding. For example, if the H chain and the A chain of the complex belong to different proteins and interact with each other in the complex, [partnerA_partnerB] is \u201cA_H\u201d. Similarly, \u201cHL_WV\u201d stands for the H and L chains interact with the W and V chains.\n\n\n**Program output**: After several seconds of computing, the GeoPPI program will return the impact of the input mutation, i.e., \n\n<p align=\"center\">\n<img src=\"https://latex.codecogs.com/svg.latex?\\Large&space;\\Delta\\Delta%20G=\\Delta%20G_{wildtype}-\\Delta%20G_{mutant}\" title=\"ddg\" />\n</p>\n\nThererfore, the positive value stands for the higher binding affinity between two proteins, i.e., the stabilizing mutation.\n\nFor example, when we execute the command:\n```bash\npython run.py data/testExamples/1PPF.pdb  TI17F  E_I\n```\n\nThe program output is similar to the following:\n\n```bash\n========================================Results============================================\nThe predicted binding affinity change (wildtype-mutant) is -1.76 kcal/mol (destabilizing mutation).\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More examples",
        "parent_header": [
          "GeoPPI",
          "Quick Example"
        ],
        "type": "Text_excerpt",
        "value": "In the GeoPPI/data directory, there are several example complexes for users to test GeoPPI. Here, we also provide some example commands as follows.\n```bash\npython run.py data/testExamples/1PPF.pdb  TI17R  E_I\npython run.py data/testExamples/1CZ8.pdb  KW84A  WV_HL\npython run.py data/testExamples/1CSE.pdb  LI38I  E_I\npython run.py data/testExamples/3SGB.pdb  KI7L  E_I\npython run.py data/testExamples/3BT1.pdb  PU149A  U_A\n```"
      },
      "source": "https://raw.githubusercontent.com/Liuxg16/GeoPPI/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}