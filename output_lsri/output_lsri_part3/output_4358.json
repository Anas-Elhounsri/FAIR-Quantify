{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "parent_header": [
          "GRGNN -- Gene Regulatory Graph Neural Network"
        ],
        "type": "Text_excerpt",
        "value": "1. SEAL code: https://github.com/muhanzhang/SEAL\n2. Dream data: http://dreamchallenges.org/project/dream-5-network-inference-challenge/ \n\n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/juexinwang/GRGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-22T14:34:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T08:16:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene Regulatory Graph Neural Networks"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.926188476604122,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "Gene regulatory graph neural network (GRGNN): an end-to-end approach to reconstruct GRNs from scratch utilizing the gene expression data, in both a supervised and a semi-supervised framework.  \nPreprocessing script is provided, readers can use the data directly or generate the data by downloading the DREAM5 challenge data from https://www.synapse.org/#!Synapse:syn3130840\n \n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/juexinwang/GRGNN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/juexinwang/GRGNN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "juexinwang/GRGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRGNN -- Gene Regulatory Graph Neural Network"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/software/pytorch_DGCNN/run_DGCNN.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/drawScripts/parameter_tmp1.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GRGNN -- Gene Regulatory Graph Neural Network"
        ],
        "type": "Text_excerpt",
        "value": "Type\n\n    bash install.sh\n\nto install the required software and libraries. [Node2vec](https://github.com/aditya-grover/node2vec) and [DGCNN](https://github.com/muhanzhang/pytorch_DGCNN) are included in software folder. \n\n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8817194331900252,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "Preprocessing script is provided, readers can use the data directly or generate the data by downloading the DREAM5 challenge data from https://www.synapse.org/#!Synapse:syn3130840\n \n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/juexinwang/GRGNN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2016 Aditya Grover\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/software/node2vec/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRGNN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "juexinwang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 179829,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scala",
        "size": 19178,
        "type": "Programming_language",
        "value": "Scala"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 11166,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 5321,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2944,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2538,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1220,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 708,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "GRGNN -- Gene Regulatory Graph Neural Network"
        ],
        "type": "Text_excerpt",
        "value": "Tested with Python 3.7.3, Pytorch 1.12.0 on Ubuntu 16.04\n\nRequired python libraries: gensim and scipy; all python libraries required by pytorch_DGCNN are networkx, tqdm, sklearn etc.\n\nIf you want to enable embeddings for link prediction, please install the network embedding software 'node2vec' in \"software\" (if the included one does not work).\n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:09:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usages",
        "parent_header": [
          "GRGNN -- Gene Regulatory Graph Neural Network"
        ],
        "type": "Text_excerpt",
        "value": "1. Unzip DREAM5 data\n\n    cd data/dream\n\n    unzip dreamdata.zip\n\n    cd ../../\n\n2. (Optional): Preprocessing DREAM5 data\n\n    cd preprocessing\n\n    python Preprocessing_DREAM5.py 3\n\n    python Preprocessing_DREAM5.py 4\n\n3. In this program, for simple, data3 means E.coli dataset, data4 means S. cerevisae dataset\nTrain S. cerevisae and test on E. coli with default parameters, Type:\n\n    python Main_inductive_ensemble.py  --traindata-name data4 --testdata-name data3\n\nTrain S. cerevisae and test on E. coli with hop 1 and embedding, Type:\n\n    python Main_inductive_ensemble.py  --traindata-name data4 --testdata-name data3 --hop 1 --use-embedding\n\nTrain E. coli and test on S. cerevisae with hop 1 and embedding, Type:\n\n    python Main_inductive_ensemble.py  --traindata-name data3 --testdata-name data4 --hop 1 --use-embedding\n\n"
      },
      "source": "https://raw.githubusercontent.com/juexinwang/GRGNN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}