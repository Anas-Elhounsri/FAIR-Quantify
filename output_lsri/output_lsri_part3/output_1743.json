{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/omicsEye/omeClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-10T00:10:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-16T19:37:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "multi-resolution clustering of omics data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9998193760617319,
      "result": {
        "original_header": "omeClust: multi-resolution clustering of omics data",
        "type": "Text_excerpt",
        "value": "**omeClust** is a clustering method that detects\nclusters of features using omics data and scores metadata \n(resolution score) based on their influences in clustering.\nThe similarity of features within each cluster can be \ndifferent (different resolution). Resolution of similarity score takes to \naccount not only similarity between measurements and \nalso the structure in a hierarchical structure of data and \nnumber of features which group together. \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9694155929176325,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "1. Generality: omeClust uses distance matrix as input, to allow users decide about appropriate distance metric for \ntheir data. \n3. A complete report including main outputs:\n    * A text file of clusters and related information is provided as output in a tab-delimited file, `clusters.txt`\n    * Ordination plots (PCoA, PCA, MDS, and t-SNE), heatmap,and network plot are provides for ease of interpretation\n    * Discretized metadata that has been used for enrichment score calculation \n     \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/omicsEye/omeClust/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/omicsEye/omeClust/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "omicsEye/omeClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "omeClust: multi-resolution clustering of omics data"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/fig1_overview.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Ground truth_PCoA_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Ground truth_PCoA_3D_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/network_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Ground truth_t-SNE_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Body area_t-SNE_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Body area_PCoA_3D_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Body area_t-SNE_plot_H_parainfluenzae.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/omicsEye/omeClust/master/img/Tissue_t-SNE_plot.png"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contents",
        "parent_header": [
          "omeClust user manual"
        ],
        "type": "Text_excerpt",
        "value": "* [Features](#features)\n* [omeClust](#omeClust)\n    * [omeClust approach](#omeClust-approach)\n    * [Requirements](#requirements)\n    * [Installation](#installation)\n* [Getting Started with omeClust](#getting-started-with-omeClust)\n    * [Test omeClust](#test-omeClust)\n    * [Options](#options) \n    * [Input](#input)\n    * [Output](#output)  \n* [Guides to omeClustviz for visualization](#guides-to-omeClustviz-for-visualiazation)\n* [Tutorials for distance calculation](#tutorials-for-distance-calculation)\n    * [Distance between sequencing alignments](#distance-between-sequencing-alignments)\n    * [Distance using correlation](#distance-using-correlation)\n    * [Distance using genomics variation](#distance-using-genomics-variation)\n* [Real world examples](#real-world-examples)\n    * [Microbial species communities](#microbial-species-communities)\n    * [Microbial strains](#microbial-strains)\n    * [Cell line gene expressions](#cell-line-gene-expressions)\n* [Tools](#tools)\n    * [omeClust synthetic paired datasets generator](#omeClust-synthetic-paired-datasets-generator)\n    * [omeClust Python API](#omeClust-python-api)\n* [Support](#Support)\n------------------------------------------------------------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "omeClust"
        ],
        "type": "Text_excerpt",
        "value": "* First install *conda*  \nGo to the [Anaconda website](https://www.anaconda.com/) and download the latest version for your operating system.  \n* For Windows users: do not forget to add `conda` to your system `path`\n* Second is to check for conda availability  \nopen a terminal (or command line for Windows users) and run:\n```\nconda --version\n```\nit should out put something like:\n```\nconda 4.10.3\n```\nif not, you must make *conda* available to your system for further steps.\nif you have problems adding conda to PATH, you can find instructions\n[here](https://docs.anaconda.com/anaconda/user-guide/faq/).  \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Windows Linux Mac",
        "parent_header": [
          "omeClust",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you are using an **Apple M1/M2 MAC** please go to the [Apple M1/M2 MAC](#apple-m1m2-mac) for installation\ninstructions.  \nIf you have a working conda on your system, you can safely skip to step three.  \nIf you are using windows, please make sure you have both git and Microsoft Visual C++ 14.0 or greater installed.\ninstall [git](https://gitforwindows.org/)\n[Microsoft C++ build tools](https://visualstudio.microsoft.com/visual-cpp-build-tools/)\nIn case you face issues with this step, [this link](https://github.com/pycaret/pycaret/issues/1254) may help you.\n1) Create a new conda environment (let's call it omeClust_env) with the following command:\n```\nconda create --name omeClust_env python=3.12.3\n```\n2) Activate your conda environment:\n```commandline\nconda activate omeClust_env \n```\n3) Install *omeClust*:\ninstall with pip:\n```commandline\npip install omeClust\n```\nor you can directly install if from GitHub:\n```commandline\npython -m pip install git+https://github.com/omicsEye/omeClust\n```"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Apple M1/M2 MAC",
        "parent_header": [
          "omeClust",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1) Update/install Xcode Command Line Tools\n  ```commandline\n  xcode-select --install\n  ```\n2) Install [Brew](https://brew.sh/index_fr)\n  ```commandline\n  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n  ```\n3) Install libraries for brew\n  ```commandline\n  brew install cmake libomp\n  ```\n4) Install miniforge\n  ```commandline\n  brew install miniforge\n  ```\n5) Close the current terminal and open a new terminal\n6) Create a new conda environment (let's call it omeClust_env) with the following command:\n  ```commandline\n  conda create --name omeClust_env python=3.12.3\n  ```\n7) Activate the conda environment\n  ```commandline\n  conda activate omeClust_env\n  ```\n\n8) Finally, install *omeClust*:\ninstall with pip:\n```commandline\npip install omeClust\n```\nor you can directly install if from GitHub:\n```commandline\npython -m pip install git+https://github.com/omicsEye/omeClust\n```\n------------------------------------------------------------------------------------------------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Guides to omeClustviz for visuzlaization",
        "type": "Text_excerpt",
        "value": "\n* **Basic usage:** `$ omeClustviz /path-to-omeClust-output/adist.txt /path-to-omeClust-output/clusters.txt --metadata metadata.txt --shapeby meta1 -o /path-to-omeClust-output/`\n* `adist.txt` = an distance matrix that used for clustering \n* `clusters.txt` = an omeClust output which assigns features to clusters\n* `metadata.txt`: is metadata file which contains metadata for features\n* `meta1`: is a metadata in the metadata file to be used for shaping points in the ordination plot\n* Run with `-h` to see additional command line options\n\nProduces a set of ordination plots for features colored by computational clusters and shaped by metadata.\n\n```\n$ omeClustviz -h\nusage: omeClustviz [-h] [--metadata METADATA] [--shapeby SHAPEBY] -o OUTPUT [--size-to-plot SIZE_TO_PLOT] [--fig-size FIG_SIZE FIG_SIZE] [--point-size POINT_SIZE] [--show] adist clusters\n\nomeClust visualization script.\n\npositional arguments:\n  adist                 the input file D*N, Rows: D features and columns: N samples OR \n                        a distance matrix file D*D (rows and columns should be the same and in the same order) \n                         \n  clusters              the input file D*N, Rows: D features and columns: N samples OR \n                        a distance matrix file D*D (rows and columns should be the same and in the same order) \n                         \n\noptional arguments:\n  -h, --help            show this help message and exit\n  --metadata METADATA   metadata\n  --shapeby SHAPEBY     the input file D*N, Rows: D features and columns: N samples OR \n                        a distance matrix file D*D (rows and columns should be the same and in the same order) \n                         \n  -o OUTPUT, --output OUTPUT\n                        the output directory\n  --size-to-plot SIZE_TO_PLOT\n                        Minimum size of cluster to be plotted\n  --fig-size FIG_SIZE FIG_SIZE\n                        width and height of plots\n  --point-size POINT_SIZE\n                        width and height of plots\n  --show                show ordination plot before save\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "omeClust synthetic paired datasets generator",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization"
        ],
        "type": "Text_excerpt",
        "value": "```buildoutcfg=\n$ python3\nfrom  omeClust import cluster_generator\nfrom  omeClust import dataprocess\nnX = 100\nnY = 100 \nnSamples = 50\n X,Y,A = cluster_generator.circular_block(nSamples = nSamples, nX =nX, nY = nY, nBlocks =5, noiseVar = 0.1,\n... blockIntraCov = 0.3, offByOneIntraCov = 0.0,\n... blockInterCov = 0.2, offByOneInterCov = 0.0,\n... holeCov = 0.3, holeProb = .25)\n\n# wite file\ndataprocess.write_table(X, name= '/your-file-path/' + 'X_'+ str(nSamples) + '_' + str(nX) + '.txt', prefix=\"Feature\")\n\ndataprocess.write_table(Y, name= '/your-file-path/' + 'Y_'+ str(nSamples) + '_' + str(nY) + '.txt', prefix=\"Feature\")\nrowheader = ['Feature'+ str(i) for i in range(0, nX)]\ncolheader = ['Feature'+ str(i) for i in range(0, nY)]\n\ndataprocess.write_table(A, name= '/your-file-path/' + 'A_'+ str(nX) + '_' + str(nY) +'.txt', prefix=\"Feature\", colheader = colheader, rowheader = rowheader)\n```\n`circular_block` function returns two datasets `X` and `Y`, and also \n`A` matrix for relationships between features among these two datasets.\n\nHere is a description for parameters of the function for properties of \nthe datasets and spiked relationship within and between datasets:\n* `nSample`: number of samples in each datasets (appers as columns)\n* `nX`: number of features in each datasets (appears as rows of X)\n* `nY`: number of features in each datasets (appears as rows of Y)\n* `nBlocks`: number of clusters in each dataset\n* `noiseVar`: noise variable between [0.0..1.0], 0.0 refers to no noise\n* `blockIntraCov`: specifies covariance between features within a cluster\n* `offByOneIntraCov`: \n* `blockInterCov`: specifies covariance between features among clusters between datasets\n* `offByOneInterCov`:\n* `holeCov`:\n* `holeCov`: \n* `holeProb`: \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Distance between sequencing alignments",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization",
          "Tutorials for distance calculation"
        ],
        "type": "Text_excerpt",
        "value": "Multiple sequence alignment (MSA) file can be used to measure dissimilarity between genomes or strains.\nWe have used this approch to investigate Coronavirus strains and microbial strains.\n\nBelow is demo code in `R` to calculate dissimalrity between aligned sequnces in a `fasta` format MSA file \n```buildoutcfg=\nlibrary(ape)\n\n#read FASTA file\nseq <- read.FASTA('data/Campylobacter_showae.fasta')\n\n# distance calculation\nD <- dist.dna(seq, model = \"TN93\", gamma = F, variance = TRUE,\n              pairwise.deletion = TRUE,\n              base.freq = NULL, as.matrix = TRUE)\n\n# write distance matrix to a file taht can be used as input for omeClust\nwrite.table( D, 'distance_matrix.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Distance using dissimilarity methods such as Bray-Curtis",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization",
          "Tutorials for distance calculation"
        ],
        "type": "Text_excerpt",
        "value": "```buildoutcfg=\n\nlibrary(vegan)\n\n##### load data from GWDBB package #####\n\n# 1- install GWDBB package\nlibrary(devtools)\ninstall_github('GWCBI/GWDBB')\nlibrary(GWDBB)\n\n# 2- load HMP1-II metadata\ndata(\"HMP1_II_Metadata\")\n\n# 3- See teh data: there is mislocation of headers du to space in a clumn header\nView(HMP1_II_Metadata)\n\n# 4- fix the headers\ncolnames(HMP1_II_Metadata) <- c(\"Person_ID\", \"VISNO\", \"Body_area\", \"Body_site\", \"SNPRNT\",  \"Gender\", \"WMSPhase\")\n\n# 5- slect meatadata of interest\nmy_HMP_metadata <- HMP1_II_Metadata[,c(\"Body_area\", \"Body_site\", \"Gender\")]\n\n# 6- write the meatdata in you computer as a tab-delimited file \nwrite.table( my_HMP_metadata, 'data/my_HMP_metadata.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n\n# 7- load HMP1-II microbial species abundances\ndata(\"HMP1_II_Microbial_Species\")\nHMP1_II_Microbial_Species <- t(HMP1_II_Microbial_Species)\n\n# 8- calculate simailrty between samples based on microbial species abundance\nlibrary(vegan)\nveg_dist <- as.matrix(vegdist(HMP1_II_Microbial_Species, method=\"bray\"))\n\n# 9- write the  in you computer as a tab-delimited file\nwrite.table( veg_dist, 'data/HMP_disatnce.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n\n\n# 10-  run the tool using HMP1-II data and metadata using \n$ omeClust -i HMP_disatnce.txt --metadata my_HMP_metadata.txt -o HMP_omeClust\n```"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9885467508795325,
      "result": {
        "original_header": "omeClust: multi-resolution clustering of omics data",
        "type": "Text_excerpt",
        "value": "Ali Rahnavard, Suvo Chatterjee, Bahar Sayoldin, Keith A. Crandall, Fasil Tekola-Ayele, and Himel Mallick (2021). **[Omics community detection using multi-resolution clustering](https://doi.org/10.1093/bioinformatics/btab317)**. *Bioinformatics*, 37(20):3588-3594, https://github.com/omicsEye/omeClust/.\n \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/omicsEye/omeClust/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 George Washington University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "omeClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "omicsEye"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 88347,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 567,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "REQUIREMENTS",
        "parent_header": [
          "omeClust"
        ],
        "type": "Text_excerpt",
        "value": "* [Matplotlib](http://matplotlib.org/)\n* [Python 3.*](https://www.python.org/download/releases/)\n* [Numpy 1.9.*](http://www.numpy.org/)\n* [Pandas (version >= 0.18.1)](http://pandas.pydata.org/getpandas.html)\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo run using synthetic data",
        "parent_header": [
          "Getting Started with omeClust",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "1. Download the input:\n[Distance matrix](data/synthetic/dist_4_0.001_4_200.txt) and\n[metadata](/data/synthetic/truth_4_0.001_4_200.txt))\n\nif you use command line (e.g. to run it on a remote server) use `curl` or `wget`.\n\nDownload metadata:\n```commandline\ncurl https://raw.githubusercontent.com/omicsEye/omeClust/master/data/synthetic/truth_4_0.001_4_200.txt -o ./truth_4_0.001_4_200.txt\n```\nDownload distance matrix:\n```commandline\ncurl https://raw.githubusercontent.com/omicsEye/omeClust/master/data/synthetic/dist_4_0.001_4_200.txt -o ./dist_4_0.001_4_200.txt\n```\n\n3. Run omeClust in command line with input\n``$ omeClust -i dist_4_0.001_4_200.txt --metadata truth_4_0.001_4_200.txt -o omeclust_demo --plot``\n\n4. Check your output folder\nHere we show the PCoA, PCoA 3D, network, and t-SNE plots from _omeClust_ generated plots. \n\n\n<img src=\"img/Ground truth_PCoA_plot.png\" height=\"35%\" width=\"35%\"> <img src=\"img/Ground truth_PCoA_3D_plot.png\" height=\"35%\" width=\"35%\">\n\n<img src=\"img/network_plot.png\" height=\"35%\" width=\"35%\"> <img src=\"img/Ground truth_t-SNE_plot.png\" height=\"35%\" width=\"35%\">\n\n\nBelow is an example output `clusters.txt` file, we only showing teh five members of each cluster for purpose of saving space:\n```\nCluster  |  Members                   |  n   |  resolution_score  |  branch_condensed_distance  |  Ground truth  |  Gender       |  Age\n---------|----------------------------|------|--------------------|-----------------------------|----------------|---------------|-------------\nC4       |  S185;S179;S160;S182;S155  |  54  |  0.346298577       |  0.517295151                |  1             |  0.103361176  |  0.025490005\nC2       |  S65;S102;S72;S88;S73      |  52  |  0.35782405        |  0.426337551                |  1             |  0.103361176  |  0.025490005\nC3       |  S13;S28;S12;S37;S25       |  51  |  0.330115156       |  0.53203748                 |  1             |  0.103361176  |  0.025490005\nC1       |  S129;S113;S132;S122;S131  |  43  |  0.321199973       |  0.365275944                |  1             |  0.103361176  |  0.025490005\n```\n*   File name: `` $OUTPUT_DIR/clusters.txt ``\n*   This file details the clusters. Features are grouped in clusters.\n*    **```Cluster```**: a column contains clusters names that each cluster name starts with `C` following with a number.\n*    **```Members```**: has one or more features that participate in the cluster.\n*    **```n```**: this value is corresponding to `binary silhouette score` introduced in this work.\n*    **```resolution_score```**: this value is corresponding to `binary silhouette score` introduced in this work.\n*    **```branch_condensed_distance```**: this value is corresponding to `condensed distance` of a cluster branch in hierarchy.\n*    **```Ground truth```**: is a metadata that has the actual membership of features in synthetic data and \nit was most influential metadata with normalized mutual information (NMI) 1. _omeClust_ uses NMI between \nmetadata categories and labels of detected clusters (communities) as an enrichment score for each metadata. \n*    **```Gender```**: is the second influential metadata with NMI 0.1.\n*    **```Age```**: Age is has less overlap with clusters. _omeClust_ discretize continuous (numeric) metadata to \ncalculate enrichment score.   \n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:06:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "Real world example",
          "Cell line gene expressions"
        ],
        "type": "Text_excerpt",
        "value": "* Please submit your questions or issues with the software at [Issues tracker](https://github.com/omicsEye/omeClust/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Test omeClust",
        "parent_header": [
          "Getting Started with omeClust"
        ],
        "type": "Text_excerpt",
        "value": "To test if omeClust is installed correctly, you may run the following command in the terminal:\n\n```\n#!cmd\n\nomeClust -h\n\n```\n\nWhich yields omeClust command line options.\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Options",
        "parent_header": [
          "Getting Started with omeClust"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ omeClust -h\nusage: omeClust [-h] [--version] [-i INPUT] -o OUTPUT [-m SIMILARITY] [--metadata METADATA] [-n ESTIMATED_NUMBER_OF_CLUSTERS] [--size-to-plot SIZE_TO_PLOT]\n                [-c {single,average,complete,weighted,centroid,median,ward}] [--plot] [--resolution {high,medium,low}] [--enrichment {nmi,freq}] [-v]\n\nMulti-resolution clustering using hierarchical clustering and Silhouette score.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -i INPUT, --input INPUT\n                        the input file D*N, Rows: D features and columns: N samples OR \n                        a distance matrix file D*D (rows and columns should be the same and in the same order) \n                         \n  -o OUTPUT, --output OUTPUT\n                        the output directory\n  -m SIMILARITY, --similarity SIMILARITY\n                        similarity measurement {default spearman, options: spearman, nmi, ami, dmic, mic, pearson, dcor}\n  --metadata METADATA   Rows are features and each column is a metadata\n  -n ESTIMATED_NUMBER_OF_CLUSTERS, --estimated_number_of_clusters ESTIMATED_NUMBER_OF_CLUSTERS\n                        estimated number of clusters\n  --size-to-plot SIZE_TO_PLOT\n                        Minimum size of cluster to be plotted\n  -c {single,average,complete,weighted,centroid,median,ward}, --linkage_method {single,average,complete,weighted,centroid,median,ward}\n                        linkage clustering method method {default = complete, options average, complete\n  --plot                dendrogram plus heatmap\n  --resolution {high,medium,low}\n                        Resolution c .         Low resolution is good when clusters are well separated clusters.\n  --enrichment {nmi,freq}\n                        enrichment method.\n  -v, --verbose         additional output is printed\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input",
        "parent_header": [
          "Getting Started with omeClust"
        ],
        "type": "Text_excerpt",
        "value": "The two required input parameters are:\n\n1. ``-i or --input:`` a distance matrix.\nTh input is a  symmetric distance matrix in a format of a tab-delimited text file of `n * n` where `n` is number of features \n(e.g. metabolites, stains, microbial species, individuals).\n2. ``--output-folder``: a folder containing all the output files\n\nAlso, user can specify a metadata input to find enrichment score for each metadata \n* ``--metadata``: a tab-delimited text file with `n` rows for features names and `m` columns for metadata\n\nA list of all options are provided in #options section. \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "Getting Started with omeClust"
        ],
        "type": "Text_excerpt",
        "value": "the main output is the `clusters.txt` a a tab-delimited text file that each row is a cluster with following columns.\n* cluster: includes cluster/community IDs started with C.\t\n* members: members of a cluster.\t\n* resolution_score: an score defined for each cluster calculated as harmonic mean of number of cluster and condensed \ndistance of cluster branch in hierarchy. We used 0.05 as threshold to call a cluster as a major cluster. \t\n* Meta1: if metadata is provides this is the first metadata that is enriched in cluster and\nis reported as most influential metadata on clusters structure. \t\n* Meta2: the second most \ninfluential metadata. (Metadata2 is a name of a column in metadata if if it is provided).\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo run using synthetic data",
        "parent_header": [
          "Getting Started with omeClust",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "1. Download the input:\n[Distance matrix](data/synthetic/dist_4_0.001_4_200.txt) and\n[metadata](/data/synthetic/truth_4_0.001_4_200.txt))\n\nif you use command line (e.g. to run it on a remote server) use `curl` or `wget`.\n\nDownload metadata:\n```commandline\ncurl https://raw.githubusercontent.com/omicsEye/omeClust/master/data/synthetic/truth_4_0.001_4_200.txt -o ./truth_4_0.001_4_200.txt\n```\nDownload distance matrix:\n```commandline\ncurl https://raw.githubusercontent.com/omicsEye/omeClust/master/data/synthetic/dist_4_0.001_4_200.txt -o ./dist_4_0.001_4_200.txt\n```\n\n3. Run omeClust in command line with input\n``$ omeClust -i dist_4_0.001_4_200.txt --metadata truth_4_0.001_4_200.txt -o omeclust_demo --plot``\n\n4. Check your output folder\nHere we show the PCoA, PCoA 3D, network, and t-SNE plots from _omeClust_ generated plots. \n\n\n<img src=\"img/Ground truth_PCoA_plot.png\" height=\"35%\" width=\"35%\"> <img src=\"img/Ground truth_PCoA_3D_plot.png\" height=\"35%\" width=\"35%\">\n\n<img src=\"img/network_plot.png\" height=\"35%\" width=\"35%\"> <img src=\"img/Ground truth_t-SNE_plot.png\" height=\"35%\" width=\"35%\">\n\n\nBelow is an example output `clusters.txt` file, we only showing teh five members of each cluster for purpose of saving space:\n```\nCluster  |  Members                   |  n   |  resolution_score  |  branch_condensed_distance  |  Ground truth  |  Gender       |  Age\n---------|----------------------------|------|--------------------|-----------------------------|----------------|---------------|-------------\nC4       |  S185;S179;S160;S182;S155  |  54  |  0.346298577       |  0.517295151                |  1             |  0.103361176  |  0.025490005\nC2       |  S65;S102;S72;S88;S73      |  52  |  0.35782405        |  0.426337551                |  1             |  0.103361176  |  0.025490005\nC3       |  S13;S28;S12;S37;S25       |  51  |  0.330115156       |  0.53203748                 |  1             |  0.103361176  |  0.025490005\nC1       |  S129;S113;S132;S122;S131  |  43  |  0.321199973       |  0.365275944                |  1             |  0.103361176  |  0.025490005\n```\n*   File name: `` $OUTPUT_DIR/clusters.txt ``\n*   This file details the clusters. Features are grouped in clusters.\n*    **```Cluster```**: a column contains clusters names that each cluster name starts with `C` following with a number.\n*    **```Members```**: has one or more features that participate in the cluster.\n*    **```n```**: this value is corresponding to `binary silhouette score` introduced in this work.\n*    **```resolution_score```**: this value is corresponding to `binary silhouette score` introduced in this work.\n*    **```branch_condensed_distance```**: this value is corresponding to `condensed distance` of a cluster branch in hierarchy.\n*    **```Ground truth```**: is a metadata that has the actual membership of features in synthetic data and \nit was most influential metadata with normalized mutual information (NMI) 1. _omeClust_ uses NMI between \nmetadata categories and labels of detected clusters (communities) as an enrichment score for each metadata. \n*    **```Gender```**: is the second influential metadata with NMI 0.1.\n*    **```Age```**: Age is has less overlap with clusters. _omeClust_ discretize continuous (numeric) metadata to \ncalculate enrichment score.   \n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials for distance calculation",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization"
        ],
        "type": "Text_excerpt",
        "value": "_omeClust_ is a genric tools and users can calculate a distance matrix using any appropriate method for their omics data \nand provide it as the input to _omeClust_. Here we provide methods for several **omics** applications. \n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Distance between sequencing alignments",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization",
          "Tutorials for distance calculation"
        ],
        "type": "Text_excerpt",
        "value": "Multiple sequence alignment (MSA) file can be used to measure dissimilarity between genomes or strains.\nWe have used this approch to investigate Coronavirus strains and microbial strains.\n\nBelow is demo code in `R` to calculate dissimalrity between aligned sequnces in a `fasta` format MSA file \n```buildoutcfg=\nlibrary(ape)\n\n#read FASTA file\nseq <- read.FASTA('data/Campylobacter_showae.fasta')\n\n# distance calculation\nD <- dist.dna(seq, model = \"TN93\", gamma = F, variance = TRUE,\n              pairwise.deletion = TRUE,\n              base.freq = NULL, as.matrix = TRUE)\n\n# write distance matrix to a file taht can be used as input for omeClust\nwrite.table( D, 'distance_matrix.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Distance using dissimilarity methods such as Bray-Curtis",
        "parent_header": [
          "Guides to omeClustviz for visuzlaization",
          "Tutorials for distance calculation"
        ],
        "type": "Text_excerpt",
        "value": "```buildoutcfg=\n\nlibrary(vegan)\n\n##### load data from GWDBB package #####\n\n# 1- install GWDBB package\nlibrary(devtools)\ninstall_github('GWCBI/GWDBB')\nlibrary(GWDBB)\n\n# 2- load HMP1-II metadata\ndata(\"HMP1_II_Metadata\")\n\n# 3- See teh data: there is mislocation of headers du to space in a clumn header\nView(HMP1_II_Metadata)\n\n# 4- fix the headers\ncolnames(HMP1_II_Metadata) <- c(\"Person_ID\", \"VISNO\", \"Body_area\", \"Body_site\", \"SNPRNT\",  \"Gender\", \"WMSPhase\")\n\n# 5- slect meatadata of interest\nmy_HMP_metadata <- HMP1_II_Metadata[,c(\"Body_area\", \"Body_site\", \"Gender\")]\n\n# 6- write the meatdata in you computer as a tab-delimited file \nwrite.table( my_HMP_metadata, 'data/my_HMP_metadata.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n\n# 7- load HMP1-II microbial species abundances\ndata(\"HMP1_II_Microbial_Species\")\nHMP1_II_Microbial_Species <- t(HMP1_II_Microbial_Species)\n\n# 8- calculate simailrty between samples based on microbial species abundance\nlibrary(vegan)\nveg_dist <- as.matrix(vegdist(HMP1_II_Microbial_Species, method=\"bray\"))\n\n# 9- write the  in you computer as a tab-delimited file\nwrite.table( veg_dist, 'data/HMP_disatnce.txt', sep = \"\\t\", eol = \"\\n\", na = \"\", col.names = NA, quote= F, row.names = T)\n\n\n# 10-  run the tool using HMP1-II data and metadata using \n$ omeClust -i HMP_disatnce.txt --metadata my_HMP_metadata.txt -o HMP_omeClust\n```"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Microbial species communities",
        "parent_header": [
          "Real world example"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"img/Body area_t-SNE_plot.png\" height=\"100%\" width=\"100%\"> <img src=\"img/Body area_PCoA_3D_plot.png\" height=\"100%\" width=\"100%\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Microbial strains",
        "parent_header": [
          "Real world example"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"img/Body area_t-SNE_plot_H_parainfluenzae.png\" height=\"100%\" width=\"100%\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cell line gene expressions",
        "parent_header": [
          "Real world example"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"img/Tissue_t-SNE_plot.png\" height=\"100%\" width=\"100%\">\n\n"
      },
      "source": "https://raw.githubusercontent.com/omicsEye/omeClust/master/README.md",
      "technique": "header_analysis"
    }
  ]
}