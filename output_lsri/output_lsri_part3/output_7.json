{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/niewenjuan-csu/TSNAPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-07T06:29:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-07T07:47:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TSNAPred is an ensemble predictor first proposed to identify type-specific nucleic acid-binding residues."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9568847030091968,
      "result": {
        "original_header": "TSNAPred",
        "type": "Text_excerpt",
        "value": "TSNAPred is a predictor first proposed to identify type-specific nucleic acid(A-DNA, B-DNA, ssDNA, mRNA, tRNA, rRNA) binding residues implemented by LightGBM and Capsule network.\n \n"
      },
      "source": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9495145400914564,
      "result": {
        "original_header": "Dataset",
        "type": "Text_excerpt",
        "value": "The high-quality dataset of proteins interacting with type-specific nucleic acid was displayed in the data folder. As mentioned in our paper, we divided the dataset into training(70%)-validation(15%)-test(15%) sets, and each protein in our dataset were shown in 3 lines:  \n"
      },
      "source": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/niewenjuan-csu/TSNAPred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/niewenjuan-csu/TSNAPred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "niewenjuan-csu/TSNAPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TSNAPred"
      },
      "source": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/niewenjuan-csu/TSNAPred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TSNAPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "niewenjuan-csu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 85846,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scheme",
        "size": 6944,
        "type": "Programming_language",
        "value": "Scheme"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "python == 3.6.2\n\ntensorflow == 1.2.0\n\nkeras == 2.0.7\n\nlightgbm == 3.2.1\n"
      },
      "source": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:17:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "The model folder provides binary classifiers for each binding nucleic acid that has been trained on the training data set. And you can load the model(.pkl file for LightGBM and .h5 file for CapsNet) directly to make predictions.\n\nBefore making predictions for proteins, the sequence feature should be generated by `feature_generation_lgb.py` and `feature_generation_capsnet.py`. The output of `feature_generation_lgb.py` would be as input for LightGBM while the output of `feature_generation_capsnet.py` would input to CapsNet.\n\nThen, run the `excution.py` to make the prediction.\n\nWhat's more, we also show a case study in `./code/case_study.py`. The sequence feature generated by `feature_generation_lgb.py` and `feature_generation_capsnet.py` for the representative protein O69644 were saved at `./feature/case_study`.\n\nThe other details can see in the paper and the codes.\n"
      },
      "source": "https://raw.githubusercontent.com/niewenjuan-csu/TSNAPred/master/README.md",
      "technique": "header_analysis"
    }
  ]
}