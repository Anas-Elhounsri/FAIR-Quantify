{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits and Citations",
        "parent_header": [
          "Ariadne: Barcoded Read Deconvolution"
        ],
        "type": "Text_excerpt",
        "value": "You can find the Ariadne manuscript [here](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-023-03033-5). If you've found Ariadne useful, please cite it as:\n\nAriadne: Barcoded Linked-Read Deconvolution Using de Bruijn Graphs. Mak, L., Meleshko, D., Danko, D.C. et al. Ariadne: synthetic long read deconvolution using assembly graphs. Genome Biol 24, 197 (2023). https://doi.org/10.1186/s13059-023-03033-5\n\nThis algorithm was developed by Waris Barakzai and myself, and tested by myself with help from Dmitrii Meleshko, David Danko, Natan Belchikov and Iman Hajirasouliha.\n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lauren-mak/ariadne"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-18T19:43:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-13T11:27:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ariadne, a de Bruijn graph-based program for barcoded read deconvolution "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9797276431609191,
      "result": {
        "original_header": "Ariadne: Barcoded Read Deconvolution",
        "type": "Text_excerpt",
        "value": "De novo assemblies are critical for capturing the genetic composition of complex samples. Linked-read sequencing techniques such as 10x Genomics\u2019 Linked-Reads, UST\u2019s TELL-Seq, Loop Genomics\u2019 LoopSeq, and BGI\u2019s Long Fragment Read (LFR) combines 30 barcoding with standard short-read sequencing to expand the range of linkage resolution from hundreds to tens of thousands of base-pairs. The application of linked-read sequencing to genome assembly has demonstrated that barcoding-based technologies balance the tradeoffs between long-range linkage, per-base coverage, and costs. \nLinked-reads come with their own challenges, chief among them the association of multiple long fragments with the same 3' barcode. The lack of a unique correspondence between a long fragment and a barcode, in conjunction with low sequencing depth, confounds the assignment of linkage between short-reads. \nHere, we introduce Ariadne, a novel assembly graph-based algorithm, that can be used to deconvolve a large metagenomic linked-read dataset. As demonstrated substantial increases in the largest alignments, contigs, and genomic contiguity, *de novo* assemblies from deconvolved reads represent advancements in terms of completeness and accuracy. Ariadne is intuitive, computationally efficient, and scalable to other large-scale linked-read problems, such as human genome phasing.  \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9418469127560772,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "The input for Ariadne are the paired-end FastQ files provided to cloudSPAdes. All barcoded reads must be suffixed with a `-1`, as the output module replaces this number with its own inferred cloud number. For example, `@D00547:847:HYHNTBCXX:1:1101:10000:10626 BX:Z:CCTTCCCTCCTTCAAT-1` will be appropriately processed, while `@D00547:847:HYHNTBCXX:1:1101:10000:10626 BX:Z:CCTTCCCTCCTTCAAT` will not. If your FastQ files do not carry the `-1` suffix, as with newer linked-read technologies such as TELL-Seq and LoopSeq, they can be modified as such:\n```\nsed '1~4s/$/-1/' <fastq_name>.R1.fastq > <fastq_suffixed>.R1.fastq\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9342992746590245,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "At the end of the deconvolution procedure, Ariadne outputs paired FastQ files with enhanced barcode assignments in the directory `/path/to/output_dir/K55/<max_search_dist>.RX.fastq`. The original barcode has been augmented with the enhanced grouping number. In this example, the first set of paired reads `@D00547:847:HYHNTBCXX:1:1101:10000:10626` have been assigned to the 13th group out of all reads with the barcode `BX:Z:CCTTCCCTCCTTCAAT`. This fastq can be directly provided as input to a *de novo* assembler or a read mapper optimized for linked-reads.\n```\n$ head /path/to/output/K55/<max_search_dist>.R1.fastq\n@D00547:847:HYHNTBCXX:1:1101:10000:10626 BX:Z:CCTTCCCTCCTTCAAT-13\nATGCTGGGGTTTCCGCTGCAATTCTTTGTCCGGTTCTTTAAGAACCACGGCTTGCTGTCGATCAGCAACCGCCCACAGTGGTGCGTGATCGAAGGCGGCTCCAGCAGCTACATCGAGCCGCTGACCC\n+\nIIGGIIIGIIIIIGIIIGGGGGGIIIGIIIIIIGGGGIGGGIIIIIGIGGGGGGGIIGGGGGGGIIIIIIIIIIGGGIGIIIIGGIIGIIIGIIIAGGG.GGIIGGGGGGGGGGIIIGGIIIIGGGI\n@D00547:847:HYHNTBCXX:1:1101:10000:11336 BX:Z:CAGGTATCAGCGTAAG-1\nTTCAGCAAGCGCAGCTTGATGGCATCCCGCAATTGATACAGGTTCAGGCCGGTGGTGTTGATCTTGAGGTCGGCCAGATCGATGATCGGTCCCAGCAGCGAGGTCTCGTCCTCGATGGCTTCGGCCA\n+\nA<.AGGGGGGGAGAAGGGIGGAAGGGGGGGGGGGGIGGGGGGIGGGIG.GGGAGGGGGGGG.GGGGGAGGGGG.AGA.AGG<GG<AAGGGGGGGGGAGGG.GGGIGGAG<<<AGAAGAAG<GGGGG.\n@D00547:847:HYHNTBCXX:1:1101:10000:11336 BX:Z:CAGGTATCAGCGTAAG-1\nGTCCTGGATGAACAAAACGGGCAGTAATCATGCGTTTGATCATCGTCAGCGGCCGCTCCGGCTCGGGTAAAAGCACCGCCCTCAACGTCCTTGAAGACAACGGCTTTTATTGCATCGACAACCTTCCCGCCGGTTTGCTGCCGGAGTTGG\n+\nG<..GGGGGGGGA<GGA.<GGGGGAGGG.GGAGAGAGG.AGG<<<..<...AAA<AA<G....<GAGGIGIGAGAG.....<AGG..<AAAA<..<...<.<...<<AGG...GGG<GAAAAGG..<A<AGGAG.<<.G...<7<<7GGG\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9572292820990078,
      "result": {
        "original_header": "Performance",
        "type": "Text_excerpt",
        "value": "A full exploration of performance metrics will be available with the manuscript. For example, for metagenomics-sized dataset such as the full MOCK5 dataset (97 million reads approx., see below), deconvolution at a maximum search distance of 5 kbp takes 6 hours 20 minutes, 62 GB RAM (in addition to the memory requirements of cloudSPAdes), and 20 CPUs. \n \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lauren-mak/Ariadne/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/src/projects/mts/scripts/Dataset_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/src/projects/mts/scripts/Dataset_analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lauren-mak/ariadne/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lauren-mak/ariadne"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ariadne: Barcoded Read Deconvolution"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/spades_compile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/ext/src/bwa/bwakit/typeHLA.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/ext/include/jemalloc/internal/size_classes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/ext/tools/bwa-0.7.12/bwakit/typeHLA.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Ariadne: Barcoded Read Deconvolution"
        ],
        "type": "Text_excerpt",
        "value": "Ariadne is functional out-of-the-box! The only required binary, `spades-core`, can be found pre-compiled in `src/bin`. All you need to do is clone the repo:\n```\ngit clone <url>   \ncd ariadne/\n./spades.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling",
        "parent_header": [
          "Ariadne: Barcoded Read Deconvolution",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Ariadne was initially developed as a module of cloudSPAdes but has since been spun off into a standalone program. The following libraries need to be pre-installed:\n\n* g++ (version 5.3.1 - 7.30)\n* cmake (version 2.8.12 or higher)\n* zlib\n* libbz2\n\n```\n./spades_compile.sh\n```\nThe installation directory can be set by `PREFIX=<destination_dir>` in the compile step. \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8379817407813603,
      "result": {
        "original_header": "Ariadne: Barcoded Read Deconvolution",
        "type": "Text_excerpt",
        "value": "The Ariadne manuscript will be publicly available soon. \n \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8185540086775015,
      "result": {
        "original_header": "Datasets",
        "type": "Text_excerpt",
        "value": "The MOCK5 10x, MOCK20 10x, MOCK5 LoopSeq and MOCK20 TELL-Seq datasets can be found at https://www.ncbi.nlm.nih.gov/bioproject/PRJNA728470. \n \n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lauren-mak/ariadne/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "SPADES: SAINT-PETERSBURG GENOME ASSEMBLER\nCopyright (c) 2015-2018 Saint Petersburg State University\nCopyright (c) 2011-2014 Saint Petersburg Academic University\n\nSPAdes is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License, Version 2,\ndated June 1991, as published by the Free Software Foundation.\n\nSPAdes is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n-------------------------------------------------------------------------------\n\nCurrent SPAdes contributors:\n\n    Dmitry Antipov,\n    Anton Bankevich,\n    Elena Bushmanova,\n    Vasisliy Ershov,\n    Yuriy Gorshkov,\n    Alexey Gurevich,\n    Anton Korobeynikov,\n    Sergey Nurk,\n    Andrey Prjibelski,\n    Ivan Tolstoganov,\n    Alla Lapidus and\n    Pavel Pevzner\n\nAlso contributed:\n\n    Max Alekseyev,\n    Mikhail Dvorkin,\n    Alexander Kulikov,\n    Valery Lesin,\n    Dmitriy Meleshko,\n    Sergey Nikolenko,\n    Son Pham,\n    Alexey Pyshkin,\n    Yana Safonova,\n    Vladislav Saveliev,\n    Alexander Sirotkin,\n    Yakov Sirotkin,\n    Artem Tarasov,\n    Glenn Tesler,\n    Irina Vasilinetc,\n    Nikolay Vyahhi\n\nContacts:\n    http://cab.spbu.ru/software/spades/\n    spades.support@cab.spbu.ru\n\nReferences:\n\nAnton Bankevich, Sergey Nurk, Dmitry Antipov, Alexey A. Gurevich, Mikhail\nDvorkin, Alexander S. Kulikov, Valery M. Lesin, Sergey I. Nikolenko, Son Pham,\nAndrey D. Prjibelski, Alexey V. Pyshkin, Alexander V. Sirotkin, Nikolay Vyahhi,\nGlenn Tesler, Max A. Alekseyev, and Pavel A. Pevzner. SPAdes: A New Genome\nAssembly Algorithm and Its Applications to Single-Cell Sequencing.  Journal of\nComputational Biology 19(5) (2012), 455-477. doi:10.1089/cmb.2012.0021\n\nSergey Nurk, Anton Bankevich, Dmitry Antipov, Alexey Gurevich, Anton Korobeynikov, \nAlla Lapidus, Andrey Prjibelsky, Alexey Pyshkin, Alexander Sirotkin, \nYakov Sirotkin, Ramunas Stepanauskas, Jeffrey McLean, Roger Lasken, \nScott Clingenpeel, Tanja Woyke, Glenn Tesler, Max Alekseyev, and Pavel Pevzner.\nAssembling Genomes and Mini-metagenomes from Highly Chimeric Reads. Lecture Notes \nin Computer Science 7821 (2013), pp. 158-170. doi:10.1007/978-3-642-37195-0_13\n\n"
      },
      "source": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ariadne"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lauren-mak"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 51056381,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 4119880,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2383328,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 992387,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 257766,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 252617,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 194301,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 108828,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 100957,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 73029,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lua",
        "size": 47426,
        "type": "Programming_language",
        "value": "Lua"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 13432,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12360,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 8434,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2846,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lauren-mak/Ariadne/ariadne_1.0/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:46:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}