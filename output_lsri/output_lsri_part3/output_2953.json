{
  "application_domain": [
    {
      "confidence": 0.8847251823077045,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JiajunQiu/NECARE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-08T06:07:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-21T23:04:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NEtwork-based CAncer gene RElationship prediciton"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9829807001106129,
      "result": {
        "original_header": "NECARE",
        "type": "Text_excerpt",
        "value": "NECARE is a network-based algrithom which use Relational Graph Convolutional Network (R-GCN) to predict protein-protein inetraction in cancer \nThe feature NECARE used include:1) knowledge-based feature OPA2Vec;                                                                                                         2)cancer specific feature which means mutation and expression profile of each gene from TCGA\n                                \nThe ouput is binary (1 or 0) and directional. \n"
      },
      "source": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JiajunQiu/NECARE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JiajunQiu/NECARE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JiajunQiu/NECARE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NECARE"
      },
      "source": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install",
        "parent_header": [
          "NECARE"
        ],
        "type": "Text_excerpt",
        "value": "NECARE is programmed bsaed in pytorch(with cuda)(python=3.7.4), so you need to install pytoch first:\n\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\n\nAfter then, you need install:\n\nnumpy=1.16.5\n\ndgl-cu101=0.4.1\n\nTo be eaier, you can also simply apply my conda environment by :\n\nconda create  --name necare --file requirements.txt\n\nor:\n\nconda env create -f environment.yml\n"
      },
      "source": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JiajunQiu/NECARE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 JiajunQiu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NECARE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JiajunQiu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 27192,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:00:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use",
        "parent_header": [
          "NECARE"
        ],
        "type": "Text_excerpt",
        "value": "Example:\n\nFor predict: NECARE.py -i ./dataset/test_pred.txt -o ./\n\nFor model training:  NECARE.py -t True -i ./dataset/test_trn.txt -g ./dataset/NECARE.graph -f ./dataset/NECARE_features.txt -s 0.1 -b 10 -e 10\n\nOptions:\n\n  -h, --help        show this help message and exit\n  \n  -t TRAINING       Turn on training model of NECARE to train your own\n                    modle(True/False), default is False\n                    \n  -i FILENAME       Iutput file (tab-delimited text file) contains the pairs\n                    of input inetracitons. The first column for source genes,\n                    the second column for target genes. If training model is\n                    on, it need a third column for labels\n                    \n  -o PATH           path of the directory to save the prediction or trained\n                    model, defalt is current directory\n                    \n  -m MODEL          The path of the modle for prediciton, default model is the\n                    one we reported in NECARE paper (if using default,\n                    parameters -m and -g will be ignored). -t True is\n                    incompatible with -m\n                    \n  -g GRAPH          General gene relationship network,tab-delimited text file,\n                    the first column for source genes, the second column for\n                    target genes, the third column for inetraction types.\n                    Default is the one used in NECARE paper\n                    \n  -f FEATURE        Features for the nodes, tab-delimited text file, the first\n                    column for gene names, Default is the what used in NECARE\n                    paper (OPA2Vec+TCGA)\n                    \n  -e EPOCH          Number of epoch (Only work for training model), default\n                    100\n                    \n  -r LEARNING_RATE  Learning rate (Only work for training model), default 0.01\n  \n  -l HIDDEN_LAYER   Number of hidden layer (Only work for training model),\n                    default 2\n                    \n  -n HIDDEN_NODE    Number of hidden node (Only work for training model),\n                    default 100\n                    \n  -d DROPOUT        Rate of drapout (Only work for training model), default\n                    0.2\n                    \n  -b BASE           Number of bases (Only work for training model), default 1\n  \n  -s BATCH          Batch size (Only work for training model), default 0.2\n                    (20% of general gene relationship network)\n"
      },
      "source": "https://raw.githubusercontent.com/JiajunQiu/NECARE/master/README.md",
      "technique": "header_analysis"
    }
  ]
}