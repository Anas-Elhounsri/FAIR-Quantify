{
  "application_domain": [
    {
      "confidence": 14.32,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite this article",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS"
        ],
        "type": "Text_excerpt",
        "value": "The methodology and utility of Tractor are more fully described in our manuscript. If you use Tractor in your research, please cite the following article:\n\n> Atkinson, E.G., Maihofer, A.X., Kanai, M. et al. Tractor uses local ancestry to enable the inclusion of admixed individuals in GWAS and to boost power. Nat Genet 53, 195\u2013204 (2021). [Link](https://doi.org/10.1038/s41588-020-00766-y)\n\nFor any inquiries, you can contact Elizabeth G. Atkinson at [elizabeth.atkinson@bcm.edu](mailto:elizabeth.atkinson@bcm.edu).\n\n[Contents](#contents)\n\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Atkinson-Lab/Tractor"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-29T21:48:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-21T06:00:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scripts for implementing the Tractor pipeline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9852925807358289,
      "result": {
        "original_header": "Current Version: v1.4.0 (released May 10, 2024)",
        "type": "Text_excerpt",
        "value": "- Added support for compressed (gz) hapcount/dosage and phenotype files.\n- Improved file reading efficiency by implementing fread in chunks, mitigating memory errors.\n- Implemented parallel processing for regression, resulting in significant speed improvements with multi-core systems.\n- Enhanced flexibility in organizing phenotype files:\n   - Users can specify sample ID column (`--sampleidcol`), phenotype ID column (`--phenocol`), and covariate column list (`--covarcollist`)\n- Updated output summary statistics to include SE and t-val, with column names adjusted to adhere to GWAS standards.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.955423015965898,
      "result": {
        "original_header": "TRACTOR - Local Ancestry Aware GWAS",
        "type": "Text_excerpt",
        "value": "Tractor is a specialized tool designed to enhance Genome-Wide Association Studies (GWAS) for diverse cohorts by addressing challenges associated with analyzing admixed populations. Admixed populations are often excluded from genomic studies due to concerns about how to properly account for their complex ancestry. \nTractor facilitates the inclusion of admixed individuals in association studies by leveraging local ancestry, allowing for finer resolution in controlling for ancestry in GWAS, and empowering identification of ancestry-specific loci.\n \n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9947715342115053,
      "result": {
        "original_header": "Classic GWAS vs. TRACTOR GWAS",
        "type": "Text_excerpt",
        "value": "Unlike traditional GWAS methods, Tractor requires local ancestry estimates in its analyses. It employs a multi-step approach involving phasing, local ancestry inference, and regression analysis with ancestral allele dosages. This method aims to improve the accuracy of association analyses in cohorts with diverse ancestries, overcoming issues such as population stratification and variable linkage disequilibrium patterns. \n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8011650625077771,
      "result": {
        "original_header": "Contents",
        "type": "Text_excerpt",
        "value": "* [Setup Conda environment](#setup-conda-environment)\n* [Steps for Running Tractor Locally](#steps-for-running-tractor-locally)\n  * [Step 0 \\[Optional\\]: Recovering Haplotypes Disrupted by Statistical Phasing](#step-0-optional-recovering-haplotypes-disrupted-by-statistical-phasing)\n  * [Step 1: Extracting Tracts and Ancestry Dosages](#step-1-extracting-tracts-and-ancestry-dosages)\n  * [Step 2: Running Tractor](#step-2-running-tractor) **(Tractor v1.4.0 released with additional functionalities)**\n* [Output Files (Running Tractor)](#output-files-running-tractor)\n* [Steps for Running Tractor on Hail](#steps-for-running-tractor-on-hail)\n* [License](#license)\n* [Cite this article](#cite-this-article)\n \n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/eatkinson/Tractor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eatkinson/Tractor/master/ipynbs/hail_example_tractor_gwas.ipynb"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/ipynbs/hail_example_tractor_gwas.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Atkinson-Lab/Tractor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atkinson-Lab/Tractor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eatkinson/Tractor/master/images/tractor_icon.png"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup Conda environment",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS"
        ],
        "type": "Text_excerpt",
        "value": "We recommend creating a Conda environment to run Tractor locally. This will install the necessary Python 3 and R dependencies required by the scripts.\n```bash\nconda env create -f conda_py3_tractor.yml\nconda activate py3_tractor\n```\n\n[Contents](#contents)\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IMPORTANT: Ensure your genotype data is phased (VCF file) and local ancestry is inferred for the following steps. Refer to our <a href=\"https://atkinson-lab.github.io/Tractor-tutorial/\">Tractor tutorial</a> for initial setup instructions.",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS",
          "Steps for Running Tractor Locally"
        ],
        "type": "Text_excerpt",
        "value": "All scripts desribed in the following steps are available in the [`scripts`](https://github.com/Atkinson-Lab/Tractor-New/tree/main/scripts) directory, and Hail implementation is present in the [`ipynbs`](https://github.com/Atkinson-Lab/Tractor-New/tree/main/ipynbs) directory\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8362825462793787,
      "result": {
        "original_header": "Contents",
        "type": "Text_excerpt",
        "value": "* [Setup Conda environment](#setup-conda-environment)\n* [Steps for Running Tractor Locally](#steps-for-running-tractor-locally)\n  * [Step 0 \\[Optional\\]: Recovering Haplotypes Disrupted by Statistical Phasing](#step-0-optional-recovering-haplotypes-disrupted-by-statistical-phasing)\n  * [Step 1: Extracting Tracts and Ancestry Dosages](#step-1-extracting-tracts-and-ancestry-dosages)\n  * [Step 2: Running Tractor](#step-2-running-tractor) **(Tractor v1.4.0 released with additional functionalities)**\n* [Output Files (Running Tractor)](#output-files-running-tractor)\n* [Steps for Running Tractor on Hail](#steps-for-running-tractor-on-hail)\n* [License](#license)\n* [Cite this article](#cite-this-article)\n \n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Atkinson-Lab/Tractor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gwas-model, tractor, tractor-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020-2023, Tractor authors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS"
        ],
        "type": "Text_excerpt",
        "value": "The Tractor program is licensed under the MIT License. You may obtain a copy of the License [here](https://github.com/Atkinson-Lab/Tractor-New/blob/main/LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tractor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Atkinson-Lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 3374149,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 27007,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 20085,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nirav572",
          "type": "User"
        },
        "date_created": "2024-05-11T04:36:31Z",
        "date_published": "2024-05-11T04:53:33Z",
        "description": "1. Added support for compressed (gz) hapcount/dosage and phenotype files.\r\n2. Improved file reading efficiency by implementing fread in chunks, mitigating memory errors.\r\n     - Use `--chunksize` to define number of lines from the file read. Default: 10000\r\n4. Implemented parallel processing for regression, resulting in significant speed improvements with multi-core systems.\r\n     - Use `--nthreads` to identify the number of threads for parallel processing.\r\n5. Enhanced flexibility in organizing phenotype files:\r\n     - Users can specify sample ID column (`--sampleidcol`), phenotype ID column (`--phenocol`), and covariate column list (`--covarcollist`)\r\n6. Updated output summary statistics to include SE and t-val, with column names adjusted to adhere to GWAS standards.",
        "html_url": "https://github.com/Atkinson-Lab/Tractor/releases/tag/v1.4.0",
        "name": "Tractor v1.4.0",
        "release_id": 155342500,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/Atkinson-Lab/Tractor/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Atkinson-Lab/Tractor/releases/155342500",
        "value": "https://api.github.com/repos/Atkinson-Lab/Tractor/releases/155342500",
        "zipball_url": "https://api.github.com/repos/Atkinson-Lab/Tractor/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 0 [Optional]: Recovering Haplotypes Disrupted by Statistical Phasing",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS",
          "Steps for Running Tractor Locally"
        ],
        "type": "Text_excerpt",
        "value": "Statistical phasing can lead to switch errors as described in [Fig. 1](https://www.nature.com/articles/s41588-020-00766-y/figures/1) of the Tractor publication.\nFor this purpose, we have written two scripts, `unkink_2way_mspfile.py` and `unkink_2way_genofile.py`. These scripts help recover disrupted tracts from the **MSP file and VCF file**, rectifying errors, and outputs an unkinked VCF file that can be used for subsequent steps. Currently they are implemented for two-way admixed popuations only.\n- `unkink_2way_mspfile.py`\n  \n  ```\n  --msp              Path stem to MSP file, not including \".msp.tsv\". (Must end in .msp.tsv)\n  ```\n- **Output File:**\n  - The output file \\*.switches.txt includes information on windows from the MSP file that needs to be switched. \n  - This file will serve as an input to `unkink_2way_genofile.py`\n- `unkink_2way_genofile.py`\n  \n  ```\n  --switches         Path to *.switches.txt, which includes info on windows to be switched\n  --genofile         Path stem to input VCF with phased genotypes, not including .vcf suffix\n  ```\n- **Output File:**\n  - The output file \\*.unkinked.vcf will include recovered haplotypes\n\n[Contents](#contents)\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1: Extracting Tracts and Ancestry Dosages",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS",
          "Steps for Running Tractor Locally"
        ],
        "type": "Text_excerpt",
        "value": "Simultaneously extract risk allele and local ancestry information, a prerequisite for running Tractor GWAS. The scripts output risk allele by ancestry dosages and haplotype counts for the input VCF files. A file of each of these is generated for each ancestry component.\n- **Note that the input VCF file must be the phased file on which local ancestry was called.**\n- Running `extract_tracts.py` requires the **input MSP and VCF file**, and the number of ancestral populations within the VCF file. This script outputs the dosage and hapcount files required for running Tractor.\n  - `extract_tracts.py`:\n    ```\n    --vcf              Path to VCF file (*.vcf or *.vcf.gz)\n    --msp              Path to MSP file (*.msp or *.msp.tsv)\n    --num-ancs         Number of ancestral populations within the VCF file.\n    --output-dir       Path to the output directory (default: same as VCF file).\n                       Directory must already exist.\n    --output-vcf       Whether to output the ancestry-specific VCF file (default: False).\n    --compress-output  Compress output dosage, hapcount, and VCF files (default: False).\n    ```\n\n    **Example run for 3-way admixed dataset:**\n    ```bash\n    python3 extract_tracts.py \\\n    --vcf dataset_qc_phased.vcf \\\n    --msp dataset_qc_phased.msp \\\n    --num-ancs 3 \\\n    --output-dir ${output_dir}\n    ```\n\n- If you used **[FLARE](https://github.com/browning-lab/flare) for LAI** and there are no MSP files, use the `extract_tracts_flare.py` script instead.\n  - `extract_tracts_flare.py`:\n    ```\n    --vcf              Path to VCF file (*.vcf or *.vcf.gz)\n    --num-ancs         Number of ancestral populations within the VCF file.\n    --output-dir       Path to the output directory (default: same as VCF file).\n                       Directory must already exist.\n    --output-vcf       Whether to output the ancestry-specific VCF file (default: False).\n    --compress-output  Compress output dosage, hapcount, and VCF files (default: False).\n    ```\n\n    **Example run for 3-way admixed dataset (with FLARE LAI):**\n    ```bash\n    python3 extract_tracts_flare.py \\\n    --vcf dataset_qc_phased.vcf \\\n    --num-ancs 3 \\\n    --output-dir ${output_dir}\n    ```\n\n- **Output Files:**\n  - Both scripts, `extract_tracts.py` and `extract_tracts_flare.py` will generate two files (`*.dosage.txt`, `*.hapcount.txt`) per ancestry.\n  - Additional ancestry-specific VCF files may be generated if `--output-vcf` argument is provided. This file is not required for running Tractor, but might be needed for painting ancestry-specific individual karyograms for personal research purposes.\n  - If files are compressed using the option `--compress-output`, they will undergo standard GZ compression, not BGZF compression (as expected by bcftools)\n\n[Contents](#contents)\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2: Running Tractor",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS",
          "Steps for Running Tractor Locally"
        ],
        "type": "Text_excerpt",
        "value": "The Tractor code runs in R, and to make sure the script works, you'll need to install the following libraries. Your conda environment should handle these installations by default.\n```\ninstall.packages('optparse')\ninstall.packages('data.table')\ninstall.packages('R.utils')\ninstall.packages('dplyr')\ninstall.packages('doParallel')\n```\n\n**Arguments:**\n```\n--hapdose       [Mandatory] Prefix for hapcount and dosage files.\n                    E.g. If you have the following files:\n                         filename.anc0.dosage.txt filename.anc0.hapcount.txt\n                         filename.anc1.dosage.txt filename.anc1.hapcount.txt\n                    use \"--hapdose filename\".\n--phenofile     [Mandatory] Path to the file containing phenotype and covariate data. \n                    Default assumptions: Sample ID column: \"IID\" or \"#IID\", Phenotype column: \"y\".\n                    If different column names are used, refer to --sampleidcol and --phenocol arguments.\n                    All covariates MUST be included using --covarcollist.\n--covarcollist  [Mandatory] Specify column names of covariates in the --phenofile.\n                    Only listed columns will be included as covariates.\n                    Separate multiple covariates with commas.\n                    E.g. --covarcollist age,sex,PC1,PC2.\n                    To exclude covariates, specify \"--covarcollist none\".\n--method        [Mandatory] Specify the method to be used: <linear> or <logistic>.\n--output        [Mandatory] File name for summary statistics output.\n                    E.g. /path/to/file/output_sumstats.txt\n\n--sampleidcol   [Optional] Specify sample ID column name in the --phenofile.\n                    Default: \"IID\" or \"#IID\"\n--phenocol      [Optional] Specify phenotype column name in the --phenofile.\n                    Default: \"y\"\n--chunksize     [Optional] Number of rows to read at once from hapcount and dosage files.\n                    Use smaller values for lower memory usage.\n                    Note: Higher chunksize speeds up streaming but requires more memory.\n                    If out-of-memory errors occur, try increasing memory or\n                    reducing --chunksize or --nthreads.\n                    Default: 10000\n--nthreads      [Optional] Specify number of threads to use.\n                    Increasing threads can speed up processing but may increase memory usage.\n                    Default: 1\n--totallines    [Optional] Specify total number of lines in hapcount/dosage files (wc -l *.hapcount.txt).\n                    If not provided, it will be calculated internally (recommended).\n                    Exercise caution: if --totallines is smaller than the actual lines in the files, \n                    only a subset of data will be analyzed. If larger than the actual lines in the files,\n                    an error will occur. Both scenarios are discouraged.\n```\n\n**Example Run (with Mandatory Arguments)**\n\n- The latest Tractor v1.4.0 update introduces changes to default arguments, enhancing versatility and applicability.\n- To run Tractor with the default assumptions, only 5 arguments are required.\n- Ensure all covariates are specified using the `--covarcollist` flag.\n```\nrun_tractor.R \\\n--hapdose /path/to/file/tmp1 \\\n--phenofile /path/to/file/dataset_qc_pheno_covars.txt \\\n--covarcollist age,sex,PC1,PC2,PC3,PC4,PC5 \\\n--method linear \\\n--output /path/to/results/test1.txt\n```\n\n**Example Run (with Optional Arguments)**\n\n- In real-world scenarios, datasets may vary in size and default assumptions may not apply. Tractor accommodates these scenarios with optional arguments.\n- Assuming a phenotype file with columns: PC1, PC2, PC3, PC4, PC5, age, sex, pheno1, pheno2, pheno3, sample_id, users can perform GWAS across different phenotypes.\n- Below is an example to run Tractor GWAS for the **pheno1** phenotype:\n```\nrun_tractor.R \\\n--hapdose /path/to/file/tmp1 \\\n--phenofile /path/to/file/dataset_qc_pheno_covars.txt \\\n--covarcollist age,sex,PC1,PC2,PC3,PC4,PC5 \\\n--method linear \\\n--output /path/to/results/test1.txt \\\n--sampleidcol sample_id \\\n--phenocol pheno1\n```\n\n- Users can utilize multi-threading for improved performance, and control file reading with chunking to avoid memory errors with extremely large files.\n- Ensure a balance between chunk size and thread count to optimize performance without encountering memory issues.\n- Below is an example to run Tractor GWAS for the **pheno1** phenotype w/ multithreading (4 cpu) and larger chunksize (15000):\n```\nrun_tractor.R \\\n--hapdose /path/to/file/tmp1 \\\n--phenofile /path/to/file/dataset_qc_pheno_covars.txt \\\n--covarcollist age,sex,PC1,PC2,PC3,PC4,PC5 \\\n--method linear \\\n--output /path/to/results/test1.txt \\\n--sampleidcol sample_id \\\n--phenocol pheno1 \\\n--chunksize 15000 \\\n--nthreads 4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output Files (Running Tractor)",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS"
        ],
        "type": "Text_excerpt",
        "value": "Tractor generates ancestry-specific summary statistics, producing output files with varying column numbers based on the input number of ancestries.\n\nAll summary statistic files include:\n* **Variant Information:**\n  * CHR: Chromosome\n  * POS: Position\n  * ID: SNP ID\n  * REF: Reference allele\n  * ALT: Alternate allele\n* **Sample Size:**\n  * N: Total number of samples going into the model (after exclude NAs).\n    * Note this number can vary from the number of samples present in hapcount/dosage files, as there may be samples with NAs in the phenotype file which are eventually skipped.\n* **Allele Frequency (AF), Local Ancestry Proportion (LAprop), Effect Size (beta), p-value (pval), and t-value (tval):**\n  * For each ancestry term (anc), there are 'n' sets of columns. For instance, if there are n=2 ancestries, expect 2 sets of columns for each of these parameters.\n* **Local Ancestry (LA) Related Columns:**\n  * LApval: p-value for the local ancestry term (X1 term in Tractor)\n  * LAeff: Effect size for the local ancestry term (X1 term in Tractor)\n  * For 'n' ancestry terms (anc), expect 'n-1' sets of these columns. For example, if there are n=2 ancestries, expect 1 set of columns for each of these parameters.\n\n**Example Output File Structure**\n```\nCHR             Chromosome \nPOS             Position \nID              SNP ID\nREF             Reference allele\nALT             Alternate allele\nN               Total sample size\nAF_anc0         Allele frequency for anc0; sum(dosage)/sum(local ancestry)\nLAprop_anc0     Local ancestry proportion for anc0; sum(local ancestry)/2 * sample size\nbeta_anc0       Effect size for alternate alleles inherited from anc0\nse_anc0         Standard error for effect size (beta_anc0)\npval_anc0       p-value for alternate alleles inherited from anc0 (NOT -log10(pvalues))\ntval_anc0       t-value for anc0\n...\nLApval_anc0     p-value for the local ancestry term (X1 term in Tractor)\nLAeff_anc0      Effect size for the local ancestry term (X1 term in Tractor)\n...\n\n```\n\n[Contents](#contents)\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Steps for Running Tractor on Hail",
        "parent_header": [
          "TRACTOR - Local Ancestry Aware GWAS"
        ],
        "type": "Text_excerpt",
        "value": "- Hail implementation of the pipeline is described in [`hail_example_tractor_gwas.ipynb`](https://github.com/Atkinson-Lab/Tractor-New/blob/main/ipynbs/hail_example_tractor_gwas.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/eatkinson/Tractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:36:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 44
      },
      "technique": "GitHub_API"
    }
  ]
}