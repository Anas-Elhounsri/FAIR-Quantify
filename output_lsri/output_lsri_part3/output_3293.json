{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Creating custom reference database",
        "type": "Text_excerpt",
        "value": "* Creating a custom database with example reference set\r\n        \r\n        source ./src/env.sh\r\n        ./src/Create_customDB.pl -ref ./examples/ref_list.example -names ./examples/names.dmp.gz -nodes ./examples/nodes.dmp.gz -o example_db\r\n        \r\n        \r\n        * Please add the path of jellyfish to your PATH or run the code below before running Create_customDB.pl\r\n        \r\n        source ./src/env.sh\r\n        \r\n        * If you miss this step, creating Kraken database would be failed.\r\n        \r\n\r\n* Options of running the creating custom database\r\n\r\n        ./src/Create_customDB.pl -h\r\n        \r\n        Usage: ./Create_customDB.pl -ref <reference list> -names <names.dmp> -nodes <nodes.dmp> -o <output directory>\r\n        -ref       <reference list>\r\n          This file must have paths of reference genome sequence file and their taxon ID in two separated column with '\\t'.\r\n        -names     <names.dmp>\r\n          Enter the NCBI names.dmp file has the information of scientific names.\r\n        -nodes     <nodes.dmp>\r\n          Enter the NCBI nodes.dmp file has the information of taxonomy tree.\r\n        -o | -out  <output directory name>  A directory with this name will be created into '[path of TAMA]/DB'.\r\n        -p | -cpu  <num of threads>\r\n        -rank      <target taxonomic rank>\r\n          Select one from species(default), genus, family, order, class, and phylum.\r\n        -h | -help Print this page.\r\n\r\n* Preparing input for generating custom database\r\n\r\n        * To create an integrated TAMA database, you have to prepare three input files.\r\n        1. The list of reference files and their taxon ID (user made)\r\n        - This file has to contain a pair of reference genome sequence file path and it's taxon ID\r\n          in two columns deliminated by '\\t'\r\n        - Example:\r\n          GCF_000007365.fna.gz\t438753\r\n          GCF_000007725.fna.gz\t198804\r\n          GCF_000009605.fna.gz\t224915\r\n        - Also, you can see an example in the examples directory of TAMA (ref_list.example)\r\n          \r\n        2. Taxonomy names file (names.dmp file from NCBI taxonomy)\r\n        3. Taxonomy nodes file (nodes.dmp file from NCBI taxonomy)\r\n        - You can download names.dmp and nodes.dmp from NCBI (ftp://ftp.ncbi.nih.gov/pub/taxonomy)\r\n        - Also, you can use the names.dmp and the nodes.dmp files in the examples directory of TAMA\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite",
        "type": "Text_excerpt",
        "value": "Sim M, Lee J, Lee D, Kwon D, Kim J. TAMA: improved metagenomic sequence classification through meta-analysis. BMC Bioinformatics. 2020 May 12;21(1):185. doi: 10.1186/s12859-020-3533-7.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jkimlab/TAMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "E-mail: bioinfolabkr@gmail.com\r\n\r\n        \r\n"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-25T04:13:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-02T01:27:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8737651215055011,
      "result": {
        "original_header": "TAMA",
        "type": "Text_excerpt",
        "value": "* Taxonomy Analysis pipeline for metagenome using Meta-Analysis\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9936854828310654,
      "result": {
        "original_header": "TAMA output",
        "type": "Text_excerpt",
        "value": "   \r\n* Read classification profile\r\n\r\n        - File name: read_classi.out\r\n        \r\n        - File format: there are three columns without header line\r\n            Column 1: Input read sequence ID\r\n            Column 2: Assigned taxon ID (or IDs)\r\n            Column 3: Meta-score\r\n\r\n\r\n* Relative species abundance profile\r\n\r\n        - File name: abundance_profile.*.out\r\n        ('*' is the input meta-score threshold (value of META-THRESHOLD parameter))\r\n        * To generate the abundance profile,\r\n          filtered read classification profile is generated before abundance estimation.\r\n        * The filtered read classification profile: read_classi.*.out\r\n          ('*' is the input meta-score threshold (value of META-THRESHOLD parameter))\r\n        \r\n        - File format: there are seven columns with header line\r\n            \r\n        1. The first line indicates name of each column\r\n            (1) Scientific name: the scientific name of this taxon\r\n            (2) Taxon ID: taxon id of this genome for the input taxonomic rank\r\n            (3) Genome size: estimated genome size of this taxon \r\n                (if the rank of input taxonomy is not a 'species', '-' is recorded)\r\n            (4) Ratio: the proportion of reads assigned to this taxon \r\n                ([the number of reads with this taxon ID]/[total number of reads])\r\n            (5) # of Read count: the number of reads assigned to this taxon\r\n            (6) # of Total read: the total number of reads in this sample\r\n            (7) Abundance: relative species abundance of this taxon\r\n            \r\n        2. The second line has information of 'unclassified reads'\r\n        3. From the third line, there are results of predicted species (in the reference database) \r\n           from 'classified reads'\r\n        \r\n        - Example: \r\n                Scientific name\tTaxonomy ID\tGenome size\tRatio\t# of Read count\t# of Total read\tAbundance\r\n                NA\tNA\tNA\t8.4622056739089e-05\t4\t47269\t-\r\n                Buchnera aphidicola\t9\t1722047\t0.931223423385305\t44018\t47269\t0.776485940413685\r\n                Lysobacter enzymogenes\t69\t451961\t0.0354354862594935\t1675\t47269\t0.11258023255361\r\n                Cellulomonas gilvus\t11\t430464\t0.033256468298462\t1572\t47269\t0.110933827032704\r\n        \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and installation",
        "type": "Text_excerpt",
        "value": "\r\n* Downloading TAMA\r\n\r\n        git clone https://github.com/jkimlab/TAMA.git\r\n        cd TAMA\r\n   \r\n* Installing TAMA\r\n\r\n    [[ RECOMMENDED ]]\r\n         \r\n        * Installing by docker (https://www.docker.com/)\r\n    \r\n        [Build docker image]\r\n        docker build -t [image_name] .\r\n        \r\n        [Run a container]\r\n        docker run -it [image_name] /bin/bash\r\n        cd TAMA\r\n     \r\n     [ Additional ]\r\n     \r\n        * Installing by source code\r\n          (We recommend installing it by docker.)\r\n\r\n        [ Check the required perl libraries ]\r\n        ./setup.pl --check\r\n        \r\n        [ Install TAMA package ]\r\n        ./setup.pl --install\r\n\r\n        [ Uninstall TAMA package ]\r\n        ./setup.pl --uninstall\r\n  \r\n* Running TAMA with an example dataset and an example reference database\r\n\r\n        * If you want to test whether the installation is successful,\r\n          set the prepared examples and run example command file.\r\n        * [ PLEASE CHECK! ] This requires more than 30GB of memory.\r\n        * This command file generates an example reference database and\r\n          runs TAMA with an example dataset.  \r\n          \r\n        ./setup.pl --example\r\n        source ./src/env.sh \r\n        bash Example_run.cmd.sh\r\n        \r\n\r\n* Setting the integrated TAMA databases\r\n\r\n        [ Downloading and setting the integrated TAMA database ]\r\n        ./setup.pl --db (or ./setup.pl --db --species)\r\n        \r\n        * In the case of CLARK, the independent database is used for each taxonomic rank.\r\n          So, the six databases of different taxonomic ranks are provided. (default: species) \r\n        * If you want to analyze with other taxonomic ranks,\r\n          you need to download additional databases using taxonomic rank options. \r\n          please add taxonomic rank options\r\n        * Example:\r\n          If you want to analyze by species rank, genus rank, and phylum rank,\r\n          run the setup.pl with below options for setting each database.\r\n        \r\n        ./setup.pl --db --species --genus --phylum\r\n\r\n        \r\n* Before downloading the database, please check the required disk space \r\n(To download and set the databases, you need to prepare about twice as much storage space, respectively.)\r\n\r\n| Tool       | Species | Genus | Family | Order | Class | Phylum |\r\n| :----:     | :-----: | :---: | :----: | :---: | :---: | :----: |\r\n| CLARK      | 88 GB   | 90 GB | 89 GB  | 90 GB | 88 GB | 91 GB  |\r\n\r\n| Tool       |   DB   |\r\n| :----:     | :----: |\r\n| Kraken     | 188 GB |\r\n| Centrifuge | 9.6 GB |\r\n\r\n\r\n\r\n      \r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jkimlab/TAMA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jkimlab/TAMA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jkimlab/TAMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jkimlab/TAMA/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jkimlab/TAMA/master/src/uninstall_tools.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jkimlab/TAMA/master/src/install_tools.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and installation",
        "type": "Text_excerpt",
        "value": "\r\n* Downloading TAMA\r\n\r\n        git clone https://github.com/jkimlab/TAMA.git\r\n        cd TAMA\r\n   \r\n* Installing TAMA\r\n\r\n    [[ RECOMMENDED ]]\r\n         \r\n        * Installing by docker (https://www.docker.com/)\r\n    \r\n        [Build docker image]\r\n        docker build -t [image_name] .\r\n        \r\n        [Run a container]\r\n        docker run -it [image_name] /bin/bash\r\n        cd TAMA\r\n     \r\n     [ Additional ]\r\n     \r\n        * Installing by source code\r\n          (We recommend installing it by docker.)\r\n\r\n        [ Check the required perl libraries ]\r\n        ./setup.pl --check\r\n        \r\n        [ Install TAMA package ]\r\n        ./setup.pl --install\r\n\r\n        [ Uninstall TAMA package ]\r\n        ./setup.pl --uninstall\r\n  \r\n* Running TAMA with an example dataset and an example reference database\r\n\r\n        * If you want to test whether the installation is successful,\r\n          set the prepared examples and run example command file.\r\n        * [ PLEASE CHECK! ] This requires more than 30GB of memory.\r\n        * This command file generates an example reference database and\r\n          runs TAMA with an example dataset.  \r\n          \r\n        ./setup.pl --example\r\n        source ./src/env.sh \r\n        bash Example_run.cmd.sh\r\n        \r\n\r\n* Setting the integrated TAMA databases\r\n\r\n        [ Downloading and setting the integrated TAMA database ]\r\n        ./setup.pl --db (or ./setup.pl --db --species)\r\n        \r\n        * In the case of CLARK, the independent database is used for each taxonomic rank.\r\n          So, the six databases of different taxonomic ranks are provided. (default: species) \r\n        * If you want to analyze with other taxonomic ranks,\r\n          you need to download additional databases using taxonomic rank options. \r\n          please add taxonomic rank options\r\n        * Example:\r\n          If you want to analyze by species rank, genus rank, and phylum rank,\r\n          run the setup.pl with below options for setting each database.\r\n        \r\n        ./setup.pl --db --species --genus --phylum\r\n\r\n        \r\n* Before downloading the database, please check the required disk space \r\n(To download and set the databases, you need to prepare about twice as much storage space, respectively.)\r\n\r\n| Tool       | Species | Genus | Family | Order | Class | Phylum |\r\n| :----:     | :-----: | :---: | :----: | :---: | :---: | :----: |\r\n| CLARK      | 88 GB   | 90 GB | 89 GB  | 90 GB | 88 GB | 91 GB  |\r\n\r\n| Tool       |   DB   |\r\n| :----:     | :----: |\r\n| Kraken     | 188 GB |\r\n| Centrifuge | 9.6 GB |\r\n\r\n\r\n\r\n      \r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999978262495439,
      "result": {
        "original_header": "Third party tools",
        "type": "Text_excerpt",
        "value": "\r\n* Trimmomatic (http://www.usadellab.org/cms/?page=trimmomatic)\r\n* BayesHammer (http://bioinf.spbau.ru/en/spades/bayeshammer)\r\n* CLARK (http://clark.cs.ucr.edu)\r\n* Kraken (https://ccb.jhu.edu/software/kraken/)\r\n* Centrifuge (https://ccb.jhu.edu/software/centrifuge/)\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jkimlab/TAMA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TAMA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jkimlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 61120,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 495,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 290,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements (tested versions)",
        "type": "Text_excerpt",
        "value": "\r\n* Programs\r\n\r\n        - perl (v5.22.1)\r\n        - python (2.7.12)\r\n        - java (1.8.0)\r\n        - git (2.7.4)\r\n        - gcc, g++ (5.4.0)\r\n        - make (GNU Make 4.1)\r\n        - zip (3.0)\r\n        - unzip (6.00)\r\n        - curl (7.47.0)\r\n        - Sort::Key::Natural (perl library)\r\n\r\n* Required system resources\r\n\r\n        When you run TAMA based on the species rank analysis using the included example dataset,\r\n        you need to prepare resources as below.\r\n        - Disk: (approximately) 300GB \r\n                * CLARK: 88GB, Kraken: 188GB, Centrifuge: 9.6GB\r\n        - Memory: (approximately) 185GB \r\n                * This large memory is required for running the taxonomy analysis tools,\r\n                  especially CLARK and Kraken\r\n        \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running TAMA",
        "type": "Text_excerpt",
        "value": "\r\n* Running TAMA with example datasets and the integrated TAMA database \r\n        \r\n        bash Run_TAMA.cmd.sh\r\n        \r\n        * Before running this command, you have to set the integrated TAMA database.\r\n        * How to set the integrated TAMA database is described above.\r\n        * [ PLEASE CHECK! ] This requires more than 185GB of memory.\r\n          (Loading database for CLARK: approximately 155GB, Kraken: approximately 184GB) \r\n\r\n\r\n* Options of running TAMA\r\n\r\n        ./TAMA.pl\r\n        \r\n        Usage: ./TAMA.pl [option] --param param.txt \r\n        Options:\r\n        \t-p\t\tThe number of threads  (default: 1)\r\n        \t-o\t\tPath of output directory  (default: Current directory)\r\n        \t-t\t\tSave temporary files (default: False)\r\n        \t\t\tIf you want to save, type 'True'\r\n        \t-h|help\t\tPrint help page\r\n        Input:\r\n        \t--param\t\t(Required) Path of paramter file\r\n        \r\n\r\n* To run TAMA, you need to prepare params file\r\n\r\n        * You can see detailed options in the \"params\" file. \r\n\r\n        ### Example of parameter file \r\n        # Each line has 'PARAMETERNAME' and 'VALUE', they concatenate by '='\r\n        # PARAMETERNAME is started by '$' symbol\r\n        # Please do not change the 'PARAMETERNAME'\r\n        # You can use your input files or options by changing the 'VALUE' after '=' symbol\r\n\r\n        [Project]\r\n        # PROJECTNAME parameter is the name of your project using followed all input datasets. \r\n        # Multiple datasets could be included in the project and analyzed in a single run. \r\n        # A directory with this name will be created in the output directory.\r\n        $PROJECTNAME=TEST\r\n\r\n        [Basic_options]\r\n        # TOOL parameter has to get a list of taxonomy analysis tools. \r\n        # You can use one and more tools for your analysis from CLARK, centrifuge, and kraken.\r\n        # (default: CLARK,centrifuge,kraken)\r\n        $TOOL=CLARK,centrifuge,kraken\r\n        # RANK parameter is targeted taxonomic rank of analysis.\r\n        # You can use one taxonomic rank from species, genus, family, order, class, and phylum.\r\n        # (default: species) \r\n        $RANK=species\r\n        # META-THRESHOLD parameter is the filtering threshold of meta-analysis for abundance estimation. \r\n        # You can use a positive number between 0 and 1. \r\n        # If the bigger threshold is used then the more strict filtering of meta-analysis will be done. \r\n        # (default: 0.34)\r\n        $META-THRESHOLD=\r\n        # WEIGHT-CLARK parameter is the weight (or confidence level) of CLARK results for meta-analysis. \r\n        # You can use a positive number between 0 and 1. \r\n        # (default: 0.9374)\r\n        $WEIGHT-CLARK=\r\n        # WEIGHT-centrifuge parameter is the weight (or confidence level) of centrifuge results for meta-analysis.\r\n        # You can use a positive number between 0 and 1.\r\n        # (default: 0.9600)\r\n        $WEIGHT-centrifuge=\r\n        # WEIGHT-kraken parameter is the weight (or confidence level) of kraken results for meta-analysis.\r\n        # You can use a positive number between 0 and 1. \r\n        # (default: 0.9362)\r\n        $WEIGHT-kraken=\r\n\r\n        [Database]\r\n        # DBNAME parameter is the directory name which has CLARK, kraken, and centrifuge directory \r\n        # and this directory have to be in 'DB' directory of TAMA package. \r\n        # Each directory (CLARK, kraken, and centrifuge) should have their database files. \r\n        # (default: tama)\r\n        $DBNAME=tama\r\n\r\n        [Input]\r\n        # You need to separate each dataset with '>' symbol. \r\n        # The name of each dataset should be described after '>'. \r\n        # The dataset could have multiple numbers of input sequence files. \r\n        # All the sequence files will be treated as an input to the current dataset until the next '>' symbol. \r\n        # The directory with this name will be created in the project directory \r\n        # (==> output_dir/projectname/samplename)\r\n        >sample1\r\n        # PAIRED1 and PAIRED2 parameter are the forward and \r\n        # reverse strand reads of a pair of paired-end sequencing read. \r\n        # If you have multiple sequence files, \r\n        # you should write a list of files by concatenating ',' or write them in multiple lines.\r\n        $PAIRED1=examples/sample1.1.fq\r\n        $PAIRED2=examples/sample1.2.fq\r\n        $PAIRED1=\r\n        $PAIRED2=\r\n        # SINGLE parameter is the single-end read file. \r\n        # If you have multiple sequence files, \r\n        # you should write a list of files by concatenating ',' or write them in multiple lines.\r\n        $SINGLE=\r\n\r\n        >sample2\r\n        $PAIRED1=examples/sample2.1.fq\r\n        $PAIRED2=examples/sample2.2.fq\r\n        $SINGLE=\r\n\r\n        [Preprocessing]\r\n        # TRIMMOMATIC-RUN parameter get whether to execute read trimming process or not. \r\n        # If you want to do the read trimming process, \r\n        # you should write 'true', or not you should write 'false'. \r\n        # (default: true)\r\n        $TRIMMOMATIC-RUN=true\r\n        # TRIMMOMATIC-OPTION parameter is the running options of the Trimmomatic program. \r\n        # (default: AVGQUAL:2 LEADING:3 TRAILING:3)\r\n        $TRIMMOMATIC-OPTION=\r\n        # BAYESHAMMER-RUN parameter get whether to execute read error correction process or not. \r\n        # If you want to do the read error correction process, \r\n        # you should write 'true', or not you should write 'false'. \r\n        # (default: true)\r\n        $BAYESHAMMER-RUN=true\r\n        \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/jkimlab/TAMA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:16:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}