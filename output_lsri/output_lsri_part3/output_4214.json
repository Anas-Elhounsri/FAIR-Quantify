{
  "application_domain": [
    {
      "confidence": 33.84,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "PWStableNet: Learning Pixel-wise Warping Maps for Video Stabilization"
        ],
        "type": "Text_excerpt",
        "value": "[1] M. Wang, G.-Y. Yang, J.-K. Lin, S.-H. Zhang, A. Shamir, S.-P. Lu,\r\nand S.-M. Hu, \u201cDeep online video stabilization with multi-grid warp-\r\ning transformation learning,\u201d IEEE Transactions on Image Processing,\r\nvol. 28, no. 5, pp. 2283\u20132292, 2019\r\n"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mindazhao/PWStableNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-28T03:44:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T20:19:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation of pixel-wise video stabilization"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9906887196235443,
      "result": {
        "original_header": "PWStableNet: Learning Pixel-wise Warping Maps for Video Stabilization",
        "type": "Text_excerpt",
        "value": "This is a [PyTorch](http://pytorch.org/) implementation of PWStableNet: Learning Pixel-wise Warping Maps\r\nfor Video Stabilization.\r\n\r\nSource code and models will be opened soon!\r\n\r\nIf you have any questions, please contact with me:\r\nzmd1992@mail.ustc.edu.cn\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8443165771862958,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "- The code will download the [VGG-16](https://arxiv.org/abs/1409.1556) PyTorch base network weights at:             https://download.pytorch.org/models/vgg16-397923af.pth automatically.\r\n\r\n- To train PWNet using the train script simply specify the parameters listed in `./lib/cfg.py` as a flag or manually change them.\r\n- The default parameters are set for the use of two NVIDIA 1080Ti graphic cards with 24G memory.\r\n\r\n```Shell\r\nCUDA_VISIBLE_DEVICES=0,1 python3 main.py\r\n```\r\n\r\n- Note:\r\n  * For training, an NVIDIA GPU is strongly recommended for speed.\r\n  * Before training, you should ensure the location of preprocessed dataset, which will be supplied soon.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download a pre-trained network",
        "parent_header": [
          "PWStableNet: Learning Pixel-wise Warping Maps for Video Stabilization",
          "Demos",
          "Use a pre-trained PWNet for video stabilization"
        ],
        "type": "Text_excerpt",
        "value": "- We are trying to provide a pre-trained model.\r\n- Currently, we provide the following PyTorch models:\r\n       model can be get from  home.ustc.edu.cn/~zmd1992/PWStableNet/netG_model.pth\r\n- You can test your own unstable videos by changing the parameter \"train\" with False and adjust the path yourself in function \"process()\".\r\n    \r\n\r\n\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mindazhao/PWStableNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mindazhao/PWStableNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mindazhao/PWStableNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PWStableNet: Learning Pixel-wise Warping Maps for Video Stabilization"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mindazhao/pix-pix-warping-video-stabilization/modified/videos/example.gif"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999898946044,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "- The code will download the [VGG-16](https://arxiv.org/abs/1409.1556) PyTorch base network weights at:             https://download.pytorch.org/models/vgg16-397923af.pth automatically.\r\n\r\n- To train PWNet using the train script simply specify the parameters listed in `./lib/cfg.py` as a flag or manually change them.\r\n- The default parameters are set for the use of two NVIDIA 1080Ti graphic cards with 24G memory.\r\n\r\n```Shell\r\nCUDA_VISIBLE_DEVICES=0,1 python3 main.py\r\n```\r\n\r\n- Note:\r\n  * For training, an NVIDIA GPU is strongly recommended for speed.\r\n  * Before training, you should ensure the location of preprocessed dataset, which will be supplied soon.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999935806568186,
      "result": {
        "original_header": "More video result with improved PWStableNet",
        "type": "Text_excerpt",
        "value": "- Example I: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/example1.avi\r\n- Example II: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/example2.avi\r\n- Parallax:\r\n  1. weak parallax: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/weak_parallax.avi\r\n  2. middle parallax: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/middle_parallax.avi\r\n  3. strong parallax: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/strong_parallax.avi\r\n- Low quality: https://github.com/mindazhao/pix-pix-warping-video-stabilization/blob/modified/videos/Low quality.avi\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mindazhao/PWStableNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PWStableNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mindazhao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 114089,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1409.1556"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "PWStableNet: Learning Pixel-wise Warping Maps for Video Stabilization"
        ],
        "type": "Text_excerpt",
        "value": "- Linux\r\n- Python 3\r\n- NVIDIA GPU (12G or 24G memory) + CUDA cuDNN\r\n- pytorch 0.4.0+\r\n- numpy\r\n- cv2\r\n- ...\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/mindazhao/PWStableNet/modified/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:37:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 37
      },
      "technique": "GitHub_API"
    }
  ]
}