{
  "application_domain": [
    {
      "confidence": 0.894492529547842,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rkapl/endicheck"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-11T14:24:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-20T01:46:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Valgrind based endianess checker"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9328250416032031,
      "result": {
        "original_header": "Supported platforms",
        "type": "Text_excerpt",
        "value": "- MIPS32 and MIPS64 platforms are currently supported.\n- Both little-endian and big-endian cores are supported.\n- MIPS DSP ASE on MIPS32 platforms is supported. \n"
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9469846563881993,
      "result": {
        "original_header": "Building V for MIPS",
        "type": "Text_excerpt",
        "value": "- Native build is available for all supported platforms. The build system\nexpects that native GCC is configured correctly and optimized for the platform.\nYet, this may not be the case with some Debian distributions which configure\nGCC to compile to \"mips1\" by default. Depending on a target platform, using\nCFLAGS=\"-mips32r2\", CFLAGS=\"-mips32\" or CFLAGS=\"-mips64\" or\nCFLAGS=\"-mips64 -mabi=64\" will do the trick and compile Valgrind correctly. \n- Use of cross-toolchain is supported as well.\n- Example of configure line and additional configure options: \n * --host=mips-linux-gnu is necessary only if Valgrind is built on platform\n   other then MIPS, tools for building MIPS application have to be in PATH. \n * --host=mips-linux-gnu is necessary if you compile it with cross toolchain\n   compiler for big endian platform. \n * --host=mipsel-linux-gnu is necessary if you compile it with cross toolchain\n   compiler for little endian platform. \n * If you are compiling Valgrind for mips32 with gcc version older then\n   gcc (GCC) 4.5.1, you must specify CFLAGS=\"-mips32r2 -mplt\", e.g. \n"
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9708156458494915,
      "result": {
        "original_header": "Limitations",
        "type": "Text_excerpt",
        "value": "- Some gdb tests will fail when gdb (GDB) older than 7.5 is used and gdb is\n  not compiled with '--with-expat=yes'.\n- You can not compile tests for DSP ASE if you are using gcc (GCC) older\n  then 4.6.1 due to a bug in the toolchain.\n- Older GCC may have issues with some inline assembly blocks. Get a toolchain\n  based on newer GCC versions, if possible.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rkapl/endicheck/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rkapl/endicheck/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rkapl/endicheck"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/auxprogs/dump_insn_ppc.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9949498034849551,
      "result": {
        "original_header": "Building V for MIPS",
        "type": "Text_excerpt",
        "value": "- Native build is available for all supported platforms. The build system\nexpects that native GCC is configured correctly and optimized for the platform.\nYet, this may not be the case with some Debian distributions which configure\nGCC to compile to \"mips1\" by default. Depending on a target platform, using\nCFLAGS=\"-mips32r2\", CFLAGS=\"-mips32\" or CFLAGS=\"-mips64\" or\nCFLAGS=\"-mips64 -mabi=64\" will do the trick and compile Valgrind correctly. \n   $ ./configure --host=mipsel-linux-gnu --prefix=<path_to_install_directory> \n * --host=mips-linux-gnu is necessary only if Valgrind is built on platform\n   other then MIPS, tools for building MIPS application have to be in PATH. \n * --host=mips-linux-gnu is necessary if you compile it with cross toolchain\n   compiler for big endian platform. \n * --host=mipsel-linux-gnu is necessary if you compile it with cross toolchain\n   compiler for little endian platform. \n * --build=mips-linux is needed if you want to build it for MIPS32 on 64-bit\n   MIPS system. \n * If you are compiling Valgrind for mips32 with gcc version older then\n   gcc (GCC) 4.5.1, you must specify CFLAGS=\"-mips32r2 -mplt\", e.g. \n   ./configure --prefix=<path_to_install_directory>\n   CFLAGS=\"-mips32r2 -mplt\" \n"
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999990636752,
      "result": {
        "original_header": "Limitations",
        "type": "Text_excerpt",
        "value": "- Some gdb tests will fail when gdb (GDB) older than 7.5 is used and gdb is\n  not compiled with '--with-expat=yes'.\n- You can not compile tests for DSP ASE if you are using gcc (GCC) older\n  then 4.6.1 due to a bug in the toolchain.\n- Older GCC may have issues with some inline assembly blocks. Get a toolchain\n  based on newer GCC versions, if possible.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rkapl/endicheck/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "endicheck"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rkapl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 35969408,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1086594,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Assembly",
        "size": 382211,
        "type": "Programming_language",
        "value": "Assembly"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 233640,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 189308,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 146468,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 125797,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 30215,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GDB",
        "size": 20086,
        "type": "Programming_language",
        "value": "GDB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 2647,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android_emulator"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.android"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.solaris"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.aarch64"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.valgrind"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.md"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.s390"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rkapl/endicheck/master/README.mips"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rkapl",
          "type": "User"
        },
        "date_created": "2018-11-18T23:22:44Z",
        "date_published": "2020-01-30T16:28:58Z",
        "description": "Artifact with demonstration test cases submitted to TACAS 2019 & 2020.",
        "html_url": "https://github.com/rkapl/endicheck/releases/tag/9e3406c4aaa2e",
        "name": "tacas2019-artifact",
        "release_id": 23261285,
        "tag": "9e3406c4aaa2e",
        "tarball_url": "https://api.github.com/repos/rkapl/endicheck/tarball/9e3406c4aaa2e",
        "type": "Release",
        "url": "https://api.github.com/repos/rkapl/endicheck/releases/23261285",
        "value": "https://api.github.com/repos/rkapl/endicheck/releases/23261285",
        "zipball_url": "https://api.github.com/repos/rkapl/endicheck/zipball/9e3406c4aaa2e"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:17:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}