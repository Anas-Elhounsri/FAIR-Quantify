{
  "application_domain": [
    {
      "confidence": 0.8029352122220788,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "1\\. Genome Research Limited. tabix manual page. 2018.\nhttp://www.htslib.org/doc/tabix.html. Accessed 29 Apr 2018.\n\n2\\. Genome Research Limited. samtools manual page. 2018.\nhttp://www.htslib.org/doc/samtools.html. Accessed 29 Apr 2018.\n\n3\\. The Bioconda Team. Using Bioconda \u2014 Bioconda documentation. 2016.\nhttps://bioconda.github.io/. Accessed 28 Apr 2018.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FadyMohareb/cramer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-03T12:48:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-23T10:23:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "The Cranfield Genome Browser - CRAMER"
        ],
        "type": "Text_excerpt",
        "value": "CRAMER is a customisable, JavaScript and Jade based genome browser for interactive exploration of genomic data. Data is visualized in the browser, meaning CRAMER can be installed on any website and show data from a wide range of online, ftp links or local sources. CRAMER works with a variety of formats, such as XML, JSON, BED, VCF, GFF, GFF3, BAM or delimited text files, and can be customised to parse and display any data source as required.\n\nThe application and source code is freely available to download from the\nCRAMER Github repository: <https://github.com/FadyMohareb/cramer>.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9867863222098731,
      "result": {
        "original_header": "CRAMER workflow",
        "type": "Text_excerpt",
        "value": "CRAMER consists of multiple web pages backed by a node server, and\na mongo database. It provides a number of web pages to assist with\nsetting up and visualising genomic tracks (**Fig. 1**), with the actual\ngenome browser page as the main gateway for the program. It is made up\nof a set of tracks \u2013 horizontal sections of the browser which display\nfeatures, such as genes or variants, \u2013 which share the same start and\nend position. These features can either be fetched from Ensembl or\nextracted from a local or FTP file. Currently, the browser\nsupports the following types of data files: FASTA, BED, BIGBED, BAM,\nWIG, BIGWIG, GFF, GFF3, GTF, VCF and RSEM genes.results. In addition,\nCRAMER has a series of plugins which add extra functionalities. \nThe plugins and tracks can be configured on the instance webpage. An\ninstance is a combination of a chosen genome, a choice of the plugins to\nimplement, and a selection of the tracks to visualize; that will be\ndisplayed in the browser. The genome data could be obtained from a local\nfile or through Ensembl database. \nThe welcome webpage allows registered users to create new instances or\nview and modify already existing instances. Non-registered users are\nstill able to view and explore existing instances however they do not\nhave the right to create or modify instances. Our intention is not to\nprovide the system users with means to register and add their own\ninstances; instead, this functionality is reserved to the genome browser\nadministrator (or group of administrators) to manage, on behalf of the\nresearch group. The reasoning behind this is to control the size of the\ndatabase and storage space on the deployment server, by preventing the\nusers uploading duplicating genome files and/or large bam files which\nmay result in running out of disk space quite quickly with genomic data.\nSince all the webpages are connected to an external server and a\ndatabase, the data that is introduced from any device is stored in the\ndatabase and is readily accessible from any other device.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8778712748645655,
      "result": {
        "original_header": "File requisites",
        "type": "Text_excerpt",
        "value": "  - **GFF, VCF, and BED:** These files must be gzipped and indexed using\n    tabix with the index file in the same directory \\[1\\]. The program\n    will be able to automatically distinguish the characteristic\n    chromosome IDs from the full chromosome names of the file, as long\n    as the IDs are at the end of the name (for example SL2.50ch**01**). \n  - **FASTA:** These files must be indexed using faidx with the index\n    file in the same directory \\[2\\], and the chromosome names have to\n    be formatted as chr\\[num\\] (for example chr**1**). \n  - **RSEM genes.results:** Matching gene IDs should be included in the\n    GFF file that is loaded with this file format as the genomic\n    coordinates of the genes will be fetched from it. \n  - **Genomic BAM:** These files must be gzipped and indexed with\n    SAMtools with the index file in the same directory \\[2\\]. Like with\n    tabix indexed files, the program will be able to automatically\n    distinguish the characteristic chromosome IDs from the full\n    chromosome names of the file, as long as the IDs are at the end of\n    the name (for example SL2.50ch**01**). This can be pre-processed\n    using the \"processingBAM.sh\" script. \n  - **read coverage BIGWIG:** These files can be made compatible with\n    CRAMER by using the \"processingBAM.sh\" script that is included\n    with the program. This script automates the steps to configure the\n    BAM file and generate a BIGWIG file for FTP loading, which can be\n    loaded into the program.\n    \n    The script can be executed by typing `./processingBAM.sh input.bam` in\n    a Linux terminal, and following the instructions that will be\n    prompted on the screen.\n    \n    Beware that for using the script and loading the file via FTP\n    correctly the chromosome IDs must be at the end of the chromosome\n    name (for example SL2.50ch01) as indicated for previous files. The\n    script requires the following tools to be fully executed: samtools,\n    bam2wig, and ucsc-wigtobigwig (installed through `bioconda`) \\[3\\].\n    Any BIGWIG that follows this format can be used. \nIn addition to this, local files can be dragged and dropped in the\ngenome browser window. The drag-and-drop action is available for the\nfollowing types of files, with the prerequisite that their indexed file\nis also stored in the same location: **GFF, GFF3, GTF, VCF, BED, BIGBED,\nWIG, BIGWIG** and **BAM** files can all be dragged and dropped into the\nuser interface but their format is restricted to chromosome numbers\nformatted as chr\\[num\\] or \\[num\\] (for example chr**01** or **1**). \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9014136688117419,
      "result": {
        "original_header": "Tracks",
        "type": "Text_excerpt",
        "value": "  - <span class=\"underline\">Ensembl Genes:</span> Fetches data from\n    Ensembl and displays the genes that are present in the chosen\n    chromosome positions. It also displays a legend for each gene. \n  - <span class=\"underline\">Ensembl Sequence:</span> Fetches data from\n    Ensembl and displays the nucleotide sequence of the chromosome. Each\n    base has a different colour assigned. Adenine (A) is green, Thymine\n    (T) is red, Cytosine (C) is blue, and Guanine (G) is yellow. \n  - <span class=\"underline\">SNP Database:</span> Fetches data from\n    Ensembl and displays the single nucleotide polymorphisms (SNPs)\n    present for the selected positions of the chromosome. It also\n    displays a legend. \n  - <span class=\"underline\">BED Annotation:</span> Displays the\n    positions and details of annotation from a BED file. \n  - <span class=\"underline\">Genomic BAM Transcripts:</span> Displays the\n    sequences of reads from a genomic BAM. \n  - <span class=\"underline\">BIGWIG Graph:</span> Displays the contents\n    of a BIGWIG file as a graph. \n  - <span class=\"underline\">SNP Density Graphs:</span> Displays the\n    density of SNPs over a range of positions. Requires a VCF file. \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9348385573319639,
      "result": {
        "original_header": "Plugins",
        "type": "Text_excerpt",
        "value": "Table 1. provides a summary and short description of the plugins\navailable in CRAMER. \n<table>\n<thead>\n<tr class=\"header\">\n<th><strong>Plugin</strong></th>\n<th><strong>Implements:</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Karyotype</td>\n<td><ul>\n<li><p>An ideogram of the selected chromosome on the top of the browser.</p></li>\n<li><p>A marker on the ideogram that reports the current position in the chromosome. This marker can be dragged and resized, which will update the positions of the tracks to match the positions of the markers.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Track Controls</td>\n<td><ul>\n<li><p>An additional menu in each track which provides the option to display info about the track, or to delete it.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Resizer</td>\n<td><ul>\n<li><p>A handler at the bottom of each track that can be vertically dragged to resize the track.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Focus Region</td>\n<td><ul>\n<li><p>A button on the control panel that resets the start and end positions currently displayed to the default ones of the instance.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Tooltips</td>\n<td><ul>\n<li><p>A button that displays a brief description of each element in the genome browser.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Select Chromosome</td>\n<td><ul>\n<li><p>A button that displays a list of all the chromosomes for the visualised genome. A chromosome can be displayed by clicking on the chromosome number on the list.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Search</td>\n<td><ul>\n<li><p>A button that displays a pop-up window which provides the option to search by gene name, gene position, gene name AND position, or ENSEMBL id in the currently displayed chromosome.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>File Drop</td>\n<td><ul>\n<li><p>Allows users to drag and drop a file -in a format supported by CRAMER - directly into the browser and display it.</p></li>\n</ul></td>\n</tr>\n</tbody>\n</table>\n \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9123466510405055,
      "result": {
        "original_header": "Welcome page",
        "type": "Text_excerpt",
        "value": "*Fig.3. Welcome page of the program for a logged-in user.* \nThe welcome page is where users can access existing instances.\nRegistered users can also log-in which provides them with the option to\ncreate, modify or remove instances (**Fig. 3**). \nOn the top of the page, there is a brief welcome message and description\nof what the user can do (**A**). Next to it, on the right side,\ndepending on whether the user is registered or not there can be\ndifferent buttons (**B**): \n  - <span class=\"underline\">Create a new instance and Sign out:</span>\n    Logged-in users can create new instances, which will redirect them\n    to the instances webpage, or sign out of their accounts. \nA list of all the available instances is displayed in the centre of the\nwelcome (**C**). The names of the instances are highlighted in blue\n(**D**), followed by a brief description of each instance in black\n(**E**). The name of the instances (**D**) are also links to the\ninstance deployment on the genome browser itself. If the user is\nlogged-in there will be two additional buttons: \n*Fig.4. (A) Instance page with examples of how to fill each field. (B)*\n*Pop-up window to create a new sub-track in the GFF Gene parent track*. \nThe instance page is accessed through the \u201cCreate new instance\u201d or\n\u201cModify\u201d button on the welcome page (**Fig. 4A**). This page is only\navailable for registered users and allows creating or modifying an\ninstance. When a new instance is being created, all the fields will be\nempty. In contrast, if an instance is being modified all the previous\nconfigurations will be provided in each field. \nIn the fields marked \u201cProject Name\u201d (A) and \u201cDescription\u201d (B) the user\ncan insert the instance name and a short description which will be\ndisplayed in the welcome page. Other fields required to be filled\ninclude: \u201cGenome\u201d (**C**), for the species genome, \u201cChromosome\u201d (**D**)\nfor the chromosome number in which the instance will be initialized\n(**D**), \u201cStart\u201d (E) and \u201cEnd\u201d (F) which need to be filled with the\nstart and end positions of the chromosome to be displayed. The species\ngenome karyotype (**C**) can be fetched from the Ensembl database,\nuploaded from a local file or selected from a list of already available\ngenomes. These options can be switched by a button next to the genomes\n(**G**), which is formed by three sub-buttons, one per each option. The\nuploaded file needs to follow the format described in the\n[Appendix](#hands-on-example). \nOn the right top corner of the screen, there is also a \u201cHome\u201d button\n(**H**) which redirects the user to the welcome page. \nOther features of the instance page include a list with the available\nplugins for the current instance (**I**), and a checkbox to\nactivate/deactivate individual plugins (**K, L**). \nIn the case where an Ensembl species genome has been selected, an\nadditional panel will appear underneath the \u201cPlugins\u201d entitled \u201cEnsembl\ntracks\u201d (**M**). The functionality of this type of tracks has been\ndescribed in the Tracks section above. \nThe other two types of tracks **Standard** and **File,** are grouped\ntogether in the \u201c\u2018Tracks\u201d box (**N**) adjacent to the \u201cPlugins\u201d box. The\nfile tracks are highlighted in blue (**O**) and next to them there is a\nblue plus-shape button (**P**). Clicking on this button will display a\npop-up window which allows creating a track by filling all the required\nforms (**Fig. 4B**). Once a track is created, clicking on the track type\n(**O**) will reveal all the tracks of this type (**Q**). A track can be\ndeleted by clicking on the remove button (**R**). In the case where the\nuser wishes to display data from a local file on a track, a track with\nan FTP file link needs to be created. It is the responsibility of the\nuser to write the FTP link to the correctly formatted file in order to\nget a correct track display. In addition, a custom track can be created\nby selecting the \u201cCustom Track\u201d option at the bottom of this list\n(**S**). \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9089504990696048,
      "result": {
        "original_header": "Genome browser page",
        "type": "Text_excerpt",
        "value": "*Fig.5. Genome browser page. In the browse is displayed the karyotype*\n*of the chromosome 5 of Mus musculus and the genes found in Ensembl for*\n*the current view position.* \nThe genome browser page (**Fig. 5**) is where all the data of the\ninstances is visually represented. The interface consists of a set of\ntracks, each representing a different type of data. On the left side of\nthe browser window there is a vertical panel with labels for each track\n(**A**) and a small handler which allows the user to vertically drag the\ntrack and relocate it (**B**). On the right side of the browser window,\nthere is a small menu tab (**C**) which allows the user to get more info\nabout the current track, adjust the height or remove the track\naltogether. \nThe karyotype of the chromosome is displayed on a ribbon located at the\ntop of the browser window (**E**). Users can navigate through the\nchromosome by clicking and dragging on the red bookmark located on the\nkaryotype. On the right side of the browser window there is a vertical\npanel with an arrangement of multiple buttons (**F**): \n  - <span class=\"underline\">Zoom in/out buttons (**H**):</span> Changes\n    the view position to get more or less detail of the viewed area. \n  - <span class=\"underline\">Tooltips (**K**):</span> Clicking on this\n    button will display little text boxes with a brief description of\n    each element on the browser interface. \n  - <span class=\"underline\">Select chromosome (**L**):</span> This\n    button will display a list of all the available chromosomes.\n    Clicking on one of them will show it on the browser. By default, the\n    button name is \u201cChr\u201d but, once that is used, it will change to the\n    name of the selected chromosome. \n  - <span class=\"underline\">Search (**M**):</span> This button will\n    trigger a pop-out window which allows searching genes by position,\n    name, or ID. If the positions forms are not filled, the tool will\n    search in the whole chromosome, while if a range of positions is\n    specified, it will only look for the genes in that range. Through\n    the three tick boxes, the search can be broadened to the GFF genes\n    track (if it is loaded) or to Ensembl IDs and gene names, in case\n    that the genome file is being fetched from Ensembl. Once the search\n    is completed, a new pop-up window with all the matches will appear\n    and, by doing click on one of the matches, the viewpoint will be\n    moved to the position of that match. \nIt is important to note that although the browser page allows users to\ndrag and drop correctly formatted files directly into the browser to\nvisualise them, these files will not be saved in the database.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/FadyMohareb/cramer/wiki"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download vcf files from the IGSR repository",
        "parent_header": [
          "Hands-on Example"
        ],
        "type": "Text_excerpt",
        "value": "VCF files from IGSR can be downloaded from the FTP site hosted at the\nEBI ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/.) Both the VCF files and\ntheir corresponding indexed files (.tbi) are available to download\neliminating the need to index the VCF files for use on CRAMER. To\ndownload the following files:\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.\u201d and\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.tbi\u201d type:\n\n`$ wget`\n`ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot\\_data/paper\\_data\\_sets/a\\_map\\_of\\_human\\_variation/low\\_coverage/snps/CHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\\*`\n\\_\n\nAs already mentioned in the \u201cFile requisites\u201d section, VCF files must be\ncompressed and properly indexed with tabix in order to be visualised on\nCRAMER.\n\nN.B. In the case where a tabix file is not available, it can be\ngenerated by running the following command on a compressed vcf file:\n\n`$ tabix vcf\\_file.vcf.gz`\n\nThe generated tabix file must be uploaded together with its\ncorresponding vcf file on CRAMER.\n\n## 2\\. Create a new instance on CRAMER from Ensembl\n\nApplication administrator can log into CRAMER and create new\ninstances or modify existing ones. To create a new instance, go to the\nwelcome page and click the \u201cSign in\u201d button. This will prompt you to add\nyour credentials. Type your email address and password and press \u201csign\nin\u201d. After signing in click on the \u201cCreate New Instance\u201d button to open\nthe instance page. Fill out the fields on the form (**Fig. 6**) to set a\nname and description for the new instance, select the chromosome to\ndisplay and set the default starting and end points of view when the\ninstance is displayed on the browser. All these details can be modified\nlater. To fetch the human genome from Ensembl, go to the \u201cGenome\u201d region\non the top of the page and hover with the mouse over the three available\ntabs to see the description of what each does. Click on the first button\n(*e\\!*), to activate it. This option enables you to fetch genomes from\nEnsembl. Then go to the scroll down menu underneath and select \u201cHuman\u201d.\n\nPlease note that not all the species genomes on this list can be fetched from Ensembl. The reason for this is that they are are either not available in the database, or that they content is not correctly formatted. A list of Ensembl genomes not currently displayed on CRAMER is avellable in the [Appendix](). \n\nNext you need to activate the \u201cEnsembl Tracks\u201d to display more\ninformation about the human genome. The available Ensembl tracks are\n\u201cEnsembl Genes\u201d, \u201cEnsembl Sequence\u201d and \u201cSNP database\u201d and their\nfunction has been described in the [Tracks](#tracks) section. You can\neither activate all the Ensembl tracks at once or select individual\ntracks to be displayed.\n\n![](media/image012.png)\n\n*Fig. 6 Form for new visualization instance on CRAMER*\n\n### Add local files\n\nNext, we need to visualize the files we have just downloaded in the\nprevious step. In this example we will upload the\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\u201d downloaded from\nIGSR. To create new VCF tracks follow the steps below:\n\n1.  Go to the \u201cTrack\u201d box and activate the \u201cVCF Highlights\u201d tab.\n\n2.  Click on the plus button next to \u201cVCF Highlights\u201d.\n\n3.  Start populating the fields in the pop-up window. The ones marked\n    with an asterisk (\\*) are mandatory and consist of:\n    1.  Name: Name of the track that is going to be created.\n    \n    2.  Info: Brief description of the track that will be used as a\n        hover label on the browser.\n    \n    3.  URL or Filepath: The url or the filepath of the VCF file.\n\nWhen the fields have been completed, press \u201cAdd Track\u201d.\n\nYou can also create a SNP density track by activating the \u201cAdd SNP\nDensity Track\u201d and uploading the same VCF file.\n\nFinally press the \u201cSubmit\u201d button. This action will take you back to the\ninstance list page. Scroll down and select the name of the instance you\njust created from the instance list. This will open the genome browser\nwindow (**Fig. 7**) and will display the data for the chromosome and\nspecific region you selected when creating the instance. This\ninformation is also contained within the URL link for this page, eg.\n<http://localhost:4000/index?name=Human%20Genome%20Testing&r=X:35938492-35987711>\nThe \u201cr=X denotes chromosome X and **35938492-35987711** is the region\ncurrently displayed on the genome browser. The link is updated each time\nthe user performs an action, such as zoom in/out or change chromosome\n(Please note that the vcf file we downloaded contains only variants on\nChromosome X, so if you pick a different chromosome, the visualization\ninstance would work fine, however, the vcf track will contain no SNPs).\nYou can replicate the same view of the genome by copying and pasting the\nURL link in a new tab on the web browser. ![](media/image013.png)\n\n*Fig. 7 Screenshot of the Human Genome visualisation instance showing*\n*tracks for: Chromosome X and **35938492-35987711***\n\n### Drag and drop \n\nAn alternative way of uploading files on CRAMER is by using the\n\u201cdrag and drop\u201d functionality which permits users to display data on\nthe genome browser page for as long as the instance is displayed. The\ndrag and drop functionality is a convenient way of displaying data\nwithout permanently adding them to the instance. Just select files with\nthe proper format and drag them to the browser which will automatically\ngenerate the tracks displaying the data for that specific region. To\nreplicate the example above, select both the\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\u201d file and its tabix\nindexed file \u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.tbi\u201d and\ndrag and drop them in the genome browser page. The name of the new track\nwill be the same as the file name. In case you only selected the vcf\nfile, the following error message will appear: \u201cERROR: GZipped VCF files\nmust be accompanied by a .tbi index file\u201d. Drag and drop can be used for\nother file types as well.\n\n### Explore Data\n\nOnce you have uploaded the data, there are a number of actions you can\ndo on the genome browser page to explore the data as described in the\n\u201c[Genome browser page](#genome-browser-page)\u201d section.\n<span class=\"underline\">For instance, you can search for a specific gene\non a chromosome, e.g. PLAC1 on chromosome X, by first selecting the\ncorrect chromosome from the drop down menu and then clicking on the\n\u201cSearch\u201d button and typing \u201cPLAC1\u201d in the name field</span> (**Fig. 8**).\n\n![](media/image016.png)\n\n*Fig. 8 CRAMER gene search form.*\n\nThen tick the fields \u201cEnsembl gene IDs\u201d and \u201cEnsembl gene names\u201d since\nthe genome is fetched from Ensembl. After clicking on the arrow next to\n\u201cSearch\u201d a list will appear containing information including the gene\nname and ID and the start and end positions. By clicking on the gene\nname on ID the browser will resize to display the area containing the\ngene of interest. For more information on the gene you can click\nanywhere on the gene schematic on the annotation track and a pop-up\nwindow will appear with additional information (**Fig. 9**). If you\nclick on the gene name on the pop-up window, you will be redirected to\nthe Ensembl webpage for this gene, which will open in a new tab.\n\n![](media/image017.png)\n\n*Fig. 9 CRAMER gene search result for PLAC1*\n\n## Common errors\n\n**<span class=\"underline\">When trying to visualise an instance the\nfollowing error messages may appear:</span>**\n\n***\u201cWrong Content in the Genome File\u201d or \u201cGenome File Does Not Exist.\u201d\nand/or \u201cthe instance is blank\u201d.***\n\nThis error can be caused by:\n\nA complex chromosome name such as\n\u201cgenescaffold:gadMor1:GeneScaffold\\_3590:1:3911206:1 REF\u201d\n\n  - The chromosome positions have not been correctly established on the\n    instance details.\n\n  - An incorrect URL/Filepath\n\n**<span class=\"underline\">When uploading a VCF file, the following error\nmay appear: *\u201cERROR: Gzipped VCF files must be accompanied by a .tbi\nindex file\u201d</span>***\n\nThis error means that the VCF file is not properly compressed.\n\n**<span class=\"underline\">In the genome browser page a warning may\nappear after you perform the drag and drop operation: *\u201cData for this\ntrack is not displayed in regions greater than 100.00 kb\u201d.</span>***\n\nTo remove this warning press the \"zoom in\" button repeatedly.\n\n# Appendix\n\n### Requirements for the correct display of imported files\n\nThe genome file needs to be in JSON Object format. The file needs to\nrespect some requirements:\n\n  - start with **\u2018Genoverse.Genomes.\u2019** and then the name of the genome;\n\n  - contain the name of the chromosome such as **\u201c1\u201d** or **\u201cMT\u201d**;\n\n  - in the chromosome element, the **size** and the **bands** are\n    **required**. The size is the length of the chromosome and the bands\n    can be filled with a list to display the karyotype.\n\nBelow, there is an example of the genome file for the tomato:\n\n*Genoverse.Genomes.tomato = {*\n\n*\"1\": {*\n\n*\"size\": 98543444,*\n\n*\"bands\": \\[\\]*\n\n*},*\n\n*\"2\": {*\n\n*\"size\": 55340444,*\n\n*\"bands\": \\[\\]*\n\n*},*\n\n*\"3\": {*\n\n*\"size\": 70787664,*\n\n*\"bands\": \\[\\]*\n\n*}*\n\n*};*\n\n\n\n### List of Ensembl Genomes not currently available to display\n\n(As of 20.10.2019)\n\n##### Genome files not available\n\nAlpaca, Algerian Mouse, Armadillo, Black snup-nosed monkey, Chinese Hamster CriGri, Chinese softshell turtle, Cod, Coelacanth, Coquerel's sifaka, Damara Mole Rat, Dolphin, Flycatcher, Hyrax, Lesser hedgehog tenrec, Marmoset, Shrew, Sloth, Sooty Mangabey, Tarsier, Tilapia, Tree Shrew, Upper Galilee, Wallaby.\n\n##### Genome file exists with wrong content\n\nAmazon Molly, Angola Colobus, Bolivian Squirrel Monkey, Brazilian Guinea Pig, Bush baby, C. Savignyi, Capuchin, Cave Fish, Chinese Hamster CHOK1GS, Cow, Degu, Drill, Elephant, Ferret, Fugu, Golden Hamster, Golden snub nosed monkey, Guinea Pig, Hedgehog, Horse, Kangaroo rat, Lamprey, Lesser Egyptian Jebroa, Long-tailed chinchilla, Ma's night monkey, Medaka, Megabat, Microbat, Naked mole rat female, Naked mole rat male, Northern American Deer Mouse, Panda, Pig tailed macaque, Pika, Platyfish, Squirrel, Stickleback, Tasmanian Devil, Xenopus.\n\n# References\n\n1\\. Genome Research Limited. tabix manual page. 2018.\nhttp://www.htslib.org/doc/tabix.html. Accessed 29 Apr 2018.\n\n2\\. Genome Research Limited. samtools manual page. 2018.\nhttp://www.htslib.org/doc/samtools.html. Accessed 29 Apr 2018.\n\n3\\. The Bioconda Team. Using Bioconda \u2014 Bioconda documentation. 2016.\nhttps://bioconda.github.io/. Accessed 28 Apr 2018.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FadyMohareb/cramer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Common errors",
        "parent_header": [
          "Hands-on Example"
        ],
        "type": "Text_excerpt",
        "value": "**<span class=\"underline\">When trying to visualise an instance the\nfollowing error messages may appear:</span>**\n\n***\u201cWrong Content in the Genome File\u201d or \u201cGenome File Does Not Exist.\u201d\nand/or \u201cthe instance is blank\u201d.***\n\nThis error can be caused by:\n\nA complex chromosome name such as\n\u201cgenescaffold:gadMor1:GeneScaffold\\_3590:1:3911206:1 REF\u201d\n\n  - The chromosome positions have not been correctly established on the\n    instance details.\n\n  - An incorrect URL/Filepath\n\n**<span class=\"underline\">When uploading a VCF file, the following error\nmay appear: *\u201cERROR: Gzipped VCF files must be accompanied by a .tbi\nindex file\u201d</span>***\n\nThis error means that the VCF file is not properly compressed.\n\n**<span class=\"underline\">In the genome browser page a warning may\nappear after you perform the drag and drop operation: *\u201cData for this\ntrack is not displayed in regions greater than 100.00 kb\u201d.</span>***\n\nTo remove this warning press the \"zoom in\" button repeatedly.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FadyMohareb/cramer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FadyMohareb/cramer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The Cranfield Genome Browser - CRAMER"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/processingBAM.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image001.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/login.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image005.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image007.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image010.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image012.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image013.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image016.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/media/image017.png"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install CRAMER",
        "parent_header": [
          "Table of Contents"
        ],
        "type": "Text_excerpt",
        "value": "This section provides detailed instructions on how to install and\nexecute the program, so it can to be accessed from any browser. This can be done using:\n\n1. Pre-built Docker image download\n2. Built a new Docker image using the latest version available on Git\n3. Manual installation\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "b. Build a new docker image based on the latest git version",
        "parent_header": [
          "Table of Contents",
          "How to install CRAMER",
          "Option 1: **Docker-based installation**"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to satisfy all dependencies and run CRAMER is to build and run the Docker image defined in Dockerfile within this repository. For this, you need to have Docker service available on your machine. To check if that is the case, you can run:\n\n```sudo service docker start``` \n\nVerify Docker:\n\n```sudo docker run hello-world```\n\n This docker image assumes there is a MongoDB service running on localhost:27017\n\n1. Make sure mongo is up and running on Docker: \n\n```sudo docker run --name mongo -p 27017:27017 -d mongo:latest```\n\nAlternatively, if you have already created the *mongo* container, run:\n\n```sudo docker start mongo``` \n\n2. Clone this repository locally: \n\n```git clone https://github.com/FadyMohareb/cramer.git && cd cramer```\n\n3. Build the application:\n\n```sudo docker build . -t cramer```\n\n4. Run CRAMER:\n\n```sudo docker run --rm --pid=host --network=host cramer```\n\nYou may now visit [http://localhost:4000](http://localhost:4000) in your web browser. \n\n**In order to start adding instances to your running application, you need to add a new admin user to the application back-end as follows:\n\n1. Stop the application using Ctrl+C in the terminal window running the CRAMER image.\n\n2. Install the npm dependencies by running:\n\n`npm install`\n\n3. Add a new admin user using the following command:\n\n`npm run newUser <user@example.com> <password> <John>`\n\nFor example: ```npm run newUser admin@admin.com adminadmin admin```\n\n4. Build the application:\n\n```sudo docker build . -t cramer```\n\n5. Run CRAMER:\n\n```sudo docker run --rm --pid=host --network=host cramer```\n\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker-based installation (MacOS)",
        "parent_header": [
          "Table of Contents",
          "How to install CRAMER",
          "Option 1: **Docker-based installation**",
          "b. Build a new docker image based on the latest git version"
        ],
        "type": "Text_excerpt",
        "value": "Although it is possible to get the docker image to work on Mac, the process can be tricky and not very stable. This is mainly due to the fact that the host networking driver currently only works on Linux hosts (See more information here: https://docs.docker.com/network/network-tutorial-host/). It's possible to use a different port for the application, however access to the \"helper\" tools such as tabix and samtools can be tricky. Therefore, we do recommend the manual installation on Mac, and this is quite straight forward as shown below:\n\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Option 2: **Manual installation**",
        "parent_header": [
          "Table of Contents",
          "How to install CRAMER"
        ],
        "type": "Text_excerpt",
        "value": "First of all, make sure you have all the [Dependencies](#dependencies) installed.  Make sure that they are available on the $PATH. (Typically installed under /usr/local/bin). To check whether this is the case, type\n\n ```echo $PATH```\n\n This should include (among other paths) `usr/local/bin`.\n\n1. Clone the Github repository with the following command:\n\n`git clone https://github.com/FadyMohareb/cramer`\n\n2. To install, run the following commands:\n\n`cd \\<cramer/Directory\\>`\n\n`npm install`\n\n`node bin/www`\n\n3. The output should be:\n\n`Running at port: \\<port\\>`\n\n`MongoDB connection open`\n\n4. Then, it could be accessible from any browser on any operating\n   systems. Open your browser and write this in the URL address. Make\n   sure the port value is the same than in the output displayed in the\n   prompt command:\n\n`localhost:\\<port\\>`\n\nOR\n\n`IPaddress:\\<port\\>`\n\nTo begin adding visualisation instances, you need to add a new admin user using the following command:\n\n`npm run newUser <user@example.com> <password> <John>`\n\nFor example: ```npm run newUser admin@admin.com adminadmin admin```\n\n\nOnce installed, the multiple files that form the program can be altered\nto change the functionalities of the program as the developer team\nwants, and then saved to apply these changes. However, modified files\nwhich are contained in *list-js.js* would require building the program\nbefore running it to apply the changes. This can be done with the\nfollowing command:\n\n`$ npm run-script build`\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999962464606784,
      "result": {
        "original_header": "File requisites",
        "type": "Text_excerpt",
        "value": "  - **read coverage BIGWIG:** These files can be made compatible with\n    CRAMER by using the \"processingBAM.sh\" script that is included\n    with the program. This script automates the steps to configure the\n    BAM file and generate a BIGWIG file for FTP loading, which can be\n    loaded into the program.\n    \n    The script can be executed by typing `./processingBAM.sh input.bam` in\n    a Linux terminal, and following the instructions that will be\n    prompted on the screen.\n    \n    Beware that for using the script and loading the file via FTP\n    correctly the chromosome IDs must be at the end of the chromosome\n    name (for example SL2.50ch01) as indicated for previous files. The\n    script requires the following tools to be fully executed: samtools,\n    bam2wig, and ucsc-wigtobigwig (installed through `bioconda`) \\[3\\].\n    Any BIGWIG that follows this format can be used. \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9973754701664898,
      "result": {
        "original_header": "How to create a new user account",
        "type": "Text_excerpt",
        "value": "The administrator can create new user accounts  via the command line by typing the following: \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995077890135665,
      "result": {
        "original_header": "b. Build a new docker image based on the latest git version",
        "type": "Text_excerpt",
        "value": "`npm run newUser <user@example.com> <password> <John>` \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8868538982520474,
      "result": {
        "original_header": "Sign in",
        "type": "Text_excerpt",
        "value": "*Fig.2. Login page for registered users.*\n \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8705160588982097,
      "result": {
        "original_header": "Plugins",
        "type": "Text_excerpt",
        "value": "**Table 1. Plugins included in CRAMER.** \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9275773356054401,
      "result": {
        "original_header": "Welcome page",
        "type": "Text_excerpt",
        "value": "The welcome page is where users can access existing instances.\nRegistered users can also log-in which provides them with the option to\ncreate, modify or remove instances (**Fig. 3**). \n  - <span class=\"underline\">Modify:</span> A registered user can modify\n    instances that are already created (**F**). This button will\n    redirect the user to the instances webpage. \nOther features of the instance page include a list with the available\nplugins for the current instance (**I**), and a checkbox to\nactivate/deactivate individual plugins (**K, L**). \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9685988449227989,
      "result": {
        "original_header": "Genome browser page",
        "type": "Text_excerpt",
        "value": "It is important to note that although the browser page allows users to\ndrag and drop correctly formatted files directly into the browser to\nvisualise them, these files will not be saved in the database.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FadyMohareb/cramer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cramer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "FadyMohareb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 1653136,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 68675,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 33823,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1714,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1405,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Dependencies**",
        "parent_header": [
          "Table of Contents",
          "How to install CRAMER"
        ],
        "type": "Text_excerpt",
        "value": "CRAMER requires running on Linux or MacOS.  The programme requires NodeJS  and three commonly used bioinformatics programs.\n\n- [NodeJS](https://nodejs.org/en/download/) LTS (The application was also tested on the latest current version 12.12.0)\n- [Samtools](http://www.htslib.org/download/)\n- [Bwtool](https://github.com/CRG-Barcelona/bwtool)\n- [kentUtils from UCSC](https://github.com/ENCODE-DCC/kentUtils)\n\n Make sure that they are available on the $PATH. (Typically installed under /usr/local/bin). To check whether this is the case, type\n\n ```echo $PATH```\n\n This should include (among other paths) `usr/local/bin`\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements for the correct display of imported files",
        "parent_header": [
          "Appendix"
        ],
        "type": "Text_excerpt",
        "value": "The genome file needs to be in JSON Object format. The file needs to\nrespect some requirements:\n\n  - start with **\u2018Genoverse.Genomes.\u2019** and then the name of the genome;\n\n  - contain the name of the chromosome such as **\u201c1\u201d** or **\u201cMT\u201d**;\n\n  - in the chromosome element, the **size** and the **bands** are\n    **required**. The size is the length of the chromosome and the bands\n    can be filled with a list to display the karyotype.\n\nBelow, there is an example of the genome file for the tomato:\n\n*Genoverse.Genomes.tomato = {*\n\n*\"1\": {*\n\n*\"size\": 98543444,*\n\n*\"bands\": \\[\\]*\n\n*},*\n\n*\"2\": {*\n\n*\"size\": 55340444,*\n\n*\"bands\": \\[\\]*\n\n*},*\n\n*\"3\": {*\n\n*\"size\": 70787664,*\n\n*\"bands\": \\[\\]*\n\n*}*\n\n*};*\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "a. Run CRAMER using pre-built docker image",
        "parent_header": [
          "Table of Contents",
          "How to install CRAMER",
          "Option 1: **Docker-based installation**"
        ],
        "type": "Text_excerpt",
        "value": "For this, you need to have Docker service available on your machine. To check if that is the case, you can run:\n\n```sudo service docker start``` \n\nVerify Docker:\n\n```sudo docker run hello-world```\n\n This docker image assumes there is a MongoDB service running on localhost:27017\n\n1. Make sure mongo is up and running on Docker: \n\n```sudo docker run --name mongo -p 27017:27017 -d mongo:latest```\n\nAlternatively, if you have already created the *mongo* container, run:\n\n```sudo docker start mongo``` \n\n2. Run CRAMER via the docker image:\n\n```sudo docker run --rm --name=cramer --pid=host --network=host digimeow/genoverse2```\n\nYou may now visit [http://localhost:4000](http://localhost:4000) in your web browser. \n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "license",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:24:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Hands-on Example",
        "type": "Text_excerpt",
        "value": "**Objective:** to create a visualization instance for vcf files\ncontaining human variant calls from the International Genome Sample\nResource (IGSR) and the 1000 Genomes Project repository.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Create a new instance on CRAMER from Ensembl",
        "parent_header": [
          "Hands-on Example"
        ],
        "type": "Text_excerpt",
        "value": "# The Cranfield Genome Browser - CRAMER\n\n## Introduction\n\nCRAMER is a customisable, JavaScript and Jade based genome browser for interactive exploration of genomic data. Data is visualized in the browser, meaning CRAMER can be installed on any website and show data from a wide range of online, ftp links or local sources. CRAMER works with a variety of formats, such as XML, JSON, BED, VCF, GFF, GFF3, BAM or delimited text files, and can be customised to parse and display any data source as required.\n\nThe application and source code is freely available to download from the\nCRAMER Github repository: <https://github.com/FadyMohareb/cramer>.\n\n# Table of Contents\n\n[How to install CRAMER](#how-to-install-cramer)\n\n[Dependencies](#dependencies)\n\n[Install Cramer on Linux](#install-cramer-on-linux)\n\n[Option 1: Docker-based installation](#option-1-docker-based-installation)\n\n[a. Run CRAMER using pre-built docker image](#a.-run-cramer-using-pre-built-docker-image)\n\n[b. Build a new docker image based on the latest git version](#b.-build-a-new-docker-image-based-on-the-latest-git-version)\n\n[Docker-based installation (MacOS)](#docker-based-installation-(macos))\n\n[Option 2: Manual installation](#option-2-manual-installation)\n\n[CRAMER workflow](#cramer-workflow)\n\n[How to create a new user account](#how-to-create-a-new-user-account)\n\n[Tracks](#tracks)\n\n[Plugins](#plugins)\n\n[How to navigate CRAMER](#how-to-navigate-cramer)\n\n[Welcome page](#welcome-page)\n\n[Genome browser page](#genome-browser-page)\n\n[Hands-on Example](#hands-on-example)\n\n[Common errors](#common-errors)\n\n[Appendix](#appendix)\n\n[Requirements for the correct display of imported files](#requirements-for-the-correct-display-of-imported-files)\n\n[List of Ensembl Genomes not currently available to display](#list-of-ensembl-genomes-not-currently-available-to-display)\n\n[References](#references)\n\n\n## How to install CRAMER\n\nThis section provides detailed instructions on how to install and\nexecute the program, so it can to be accessed from any browser. This can be done using:\n\n1. Pre-built Docker image download\n2. Built a new Docker image using the latest version available on Git\n3. Manual installation\n\n### **Dependencies**\n\nCRAMER requires running on Linux or MacOS.  The programme requires NodeJS  and three commonly used bioinformatics programs.\n\n- [NodeJS](https://nodejs.org/en/download/) LTS (The application was also tested on the latest current version 12.12.0)\n- [Samtools](http://www.htslib.org/download/)\n- [Bwtool](https://github.com/CRG-Barcelona/bwtool)\n- [kentUtils from UCSC](https://github.com/ENCODE-DCC/kentUtils)\n\n Make sure that they are available on the $PATH. (Typically installed under /usr/local/bin). To check whether this is the case, type\n\n ```echo $PATH```\n\n This should include (among other paths) `usr/local/bin`\n\n### Install CRAMER on Linux\n\n### Option 1: **Docker-based installation**\n#### a. Run CRAMER using pre-built docker image\nFor this, you need to have Docker service available on your machine. To check if that is the case, you can run:\n\n```sudo service docker start``` \n\nVerify Docker:\n\n```sudo docker run hello-world```\n\n This docker image assumes there is a MongoDB service running on localhost:27017\n\n1. Make sure mongo is up and running on Docker: \n\n```sudo docker run --name mongo -p 27017:27017 -d mongo:latest```\n\nAlternatively, if you have already created the *mongo* container, run:\n\n```sudo docker start mongo``` \n\n2. Run CRAMER via the docker image:\n\n```sudo docker run --rm --name=cramer --pid=host --network=host digimeow/genoverse2```\n\nYou may now visit [http://localhost:4000](http://localhost:4000) in your web browser. \n\n#### b. Build a new docker image based on the latest git version\nThe easiest way to satisfy all dependencies and run CRAMER is to build and run the Docker image defined in Dockerfile within this repository. For this, you need to have Docker service available on your machine. To check if that is the case, you can run:\n\n```sudo service docker start``` \n\nVerify Docker:\n\n```sudo docker run hello-world```\n\n This docker image assumes there is a MongoDB service running on localhost:27017\n\n1. Make sure mongo is up and running on Docker: \n\n```sudo docker run --name mongo -p 27017:27017 -d mongo:latest```\n\nAlternatively, if you have already created the *mongo* container, run:\n\n```sudo docker start mongo``` \n\n2. Clone this repository locally: \n\n```git clone https://github.com/FadyMohareb/cramer.git && cd cramer```\n\n3. Build the application:\n\n```sudo docker build . -t cramer```\n\n4. Run CRAMER:\n\n```sudo docker run --rm --pid=host --network=host cramer```\n\nYou may now visit [http://localhost:4000](http://localhost:4000) in your web browser. \n\n**In order to start adding instances to your running application, you need to add a new admin user to the application back-end as follows:\n\n1. Stop the application using Ctrl+C in the terminal window running the CRAMER image.\n\n2. Install the npm dependencies by running:\n\n`npm install`\n\n3. Add a new admin user using the following command:\n\n`npm run newUser <user@example.com> <password> <John>`\n\nFor example: ```npm run newUser admin@admin.com adminadmin admin```\n\n4. Build the application:\n\n```sudo docker build . -t cramer```\n\n5. Run CRAMER:\n\n```sudo docker run --rm --pid=host --network=host cramer```\n\n\n##### Docker-based installation (MacOS)\nAlthough it is possible to get the docker image to work on Mac, the process can be tricky and not very stable. This is mainly due to the fact that the host networking driver currently only works on Linux hosts (See more information here: https://docs.docker.com/network/network-tutorial-host/). It's possible to use a different port for the application, however access to the \"helper\" tools such as tabix and samtools can be tricky. Therefore, we do recommend the manual installation on Mac, and this is quite straight forward as shown below:\n\n\n### Option 2: **Manual installation** \nFirst of all, make sure you have all the [Dependencies](#dependencies) installed.  Make sure that they are available on the $PATH. (Typically installed under /usr/local/bin). To check whether this is the case, type\n\n ```echo $PATH```\n\n This should include (among other paths) `usr/local/bin`.\n\n1. Clone the Github repository with the following command:\n\n`git clone https://github.com/FadyMohareb/cramer`\n\n2. To install, run the following commands:\n\n`cd \\<cramer/Directory\\>`\n\n`npm install`\n\n`node bin/www`\n\n3. The output should be:\n\n`Running at port: \\<port\\>`\n\n`MongoDB connection open`\n\n4. Then, it could be accessible from any browser on any operating\n   systems. Open your browser and write this in the URL address. Make\n   sure the port value is the same than in the output displayed in the\n   prompt command:\n\n`localhost:\\<port\\>`\n\nOR\n\n`IPaddress:\\<port\\>`\n\nTo begin adding visualisation instances, you need to add a new admin user using the following command:\n\n`npm run newUser <user@example.com> <password> <John>`\n\nFor example: ```npm run newUser admin@admin.com adminadmin admin```\n\n\nOnce installed, the multiple files that form the program can be altered\nto change the functionalities of the program as the developer team\nwants, and then saved to apply these changes. However, modified files\nwhich are contained in *list-js.js* would require building the program\nbefore running it to apply the changes. This can be done with the\nfollowing command:\n\n`$ npm run-script build`\n\n## CRAMER workflow\n\nCRAMER consists of multiple web pages backed by a node server, and\na mongo database. It provides a number of web pages to assist with\nsetting up and visualising genomic tracks (**Fig. 1**), with the actual\ngenome browser page as the main gateway for the program. It is made up\nof a set of tracks \u2013 horizontal sections of the browser which display\nfeatures, such as genes or variants, \u2013 which share the same start and\nend position. These features can either be fetched from Ensembl or\nextracted from a local or FTP file. Currently, the browser\nsupports the following types of data files: FASTA, BED, BIGBED, BAM,\nWIG, BIGWIG, GFF, GFF3, GTF, VCF and RSEM genes.results. In addition,\nCRAMER has a series of plugins which add extra functionalities.\n\nThe plugins and tracks can be configured on the instance webpage. An\ninstance is a combination of a chosen genome, a choice of the plugins to\nimplement, and a selection of the tracks to visualize; that will be\ndisplayed in the browser. The genome data could be obtained from a local\nfile or through Ensembl database.\n\n![C:\\\\Users\\\\Sergio\\\\Desktop\\\\forsergio.png](media/image001.png)\n\n*Fig.1. Diagram of the relation between the multiple webpages that form*\n*CRAMER*\n\n\n\nThe welcome webpage allows registered users to create new instances or\nview and modify already existing instances. Non-registered users are\nstill able to view and explore existing instances however they do not\nhave the right to create or modify instances. Our intention is not to\nprovide the system users with means to register and add their own\ninstances; instead, this functionality is reserved to the genome browser\nadministrator (or group of administrators) to manage, on behalf of the\nresearch group. The reasoning behind this is to control the size of the\ndatabase and storage space on the deployment server, by preventing the\nusers uploading duplicating genome files and/or large bam files which\nmay result in running out of disk space quite quickly with genomic data.\nSince all the webpages are connected to an external server and a\ndatabase, the data that is introduced from any device is stored in the\ndatabase and is readily accessible from any other device.\n\n## File requisites\n\nThe numerous file types that the genome browser can support must adhere\nto certain formatting rules. Any of the changes that are required to\nconvert the files into compatible files are to be carried out by the\nuser prior to loading them into the web application. The requirements\nfor compatibility for each file type are the following:\n\n  - **GFF, VCF, and BED:** These files must be gzipped and indexed using\n    tabix with the index file in the same directory \\[1\\]. The program\n    will be able to automatically distinguish the characteristic\n    chromosome IDs from the full chromosome names of the file, as long\n    as the IDs are at the end of the name (for example SL2.50ch**01**).\n\n  - **FASTA:** These files must be indexed using faidx with the index\n    file in the same directory \\[2\\], and the chromosome names have to\n    be formatted as chr\\[num\\] (for example chr**1**).\n\n  - **RSEM genes.results:** Matching gene IDs should be included in the\n    GFF file that is loaded with this file format as the genomic\n    coordinates of the genes will be fetched from it.\n\n  - **Genomic BAM:** These files must be gzipped and indexed with\n    SAMtools with the index file in the same directory \\[2\\]. Like with\n    tabix indexed files, the program will be able to automatically\n    distinguish the characteristic chromosome IDs from the full\n    chromosome names of the file, as long as the IDs are at the end of\n    the name (for example SL2.50ch**01**). This can be pre-processed\n    using the \"processingBAM.sh\" script.\n\n  - **read coverage BIGWIG:** These files can be made compatible with\n    CRAMER by using the \"processingBAM.sh\" script that is included\n    with the program. This script automates the steps to configure the\n    BAM file and generate a BIGWIG file for FTP loading, which can be\n    loaded into the program.\n    \n    The script can be executed by typing `./processingBAM.sh input.bam` in\n    a Linux terminal, and following the instructions that will be\n    prompted on the screen.\n    \n    Beware that for using the script and loading the file via FTP\n    correctly the chromosome IDs must be at the end of the chromosome\n    name (for example SL2.50ch01) as indicated for previous files. The\n    script requires the following tools to be fully executed: samtools,\n    bam2wig, and ucsc-wigtobigwig (installed through `bioconda`) \\[3\\].\n    Any BIGWIG that follows this format can be used.\n\nIn addition to this, local files can be dragged and dropped in the\ngenome browser window. The drag-and-drop action is available for the\nfollowing types of files, with the prerequisite that their indexed file\nis also stored in the same location: **GFF, GFF3, GTF, VCF, BED, BIGBED,\nWIG, BIGWIG** and **BAM** files can all be dragged and dropped into the\nuser interface but their format is restricted to chromosome numbers\nformatted as chr\\[num\\] or \\[num\\] (for example chr**01** or **1**).\n\n\n\n## How to create a new user account\n\nThe administrator can create new user accounts  via the command line by typing the following:\n\n`npm run newUser <user@example.com> <password> <John>`\n\nThe required inputs are the user's email address, the password and a user name. \n\n## Sign in\n\nRegistered users can sign in by clicking on the sign in link on the home page and entering their login credentials on the login page (**Fig. 2**).\n\n![](media/login.png)\n\n*Fig.2. Login page for registered users.*\n\n## Tracks\n\nCurrently, CRAMER has sixteen different tracks available that can\nbe divided into three groups: **Standard** tracks, **Ensembl** tracks,\nand **File** tracks.\n\nThere are two **Standard** tracks which can work without the need to\nfetch data from Ensembl or upload a file:\n\n  - <span class=\"underline\">Scalebar:</span> Displays a bar which\n    provides information regarding the current position in the\n    chromosome.\n\n  - <span class=\"underline\">Chromosome:</span> Displays the karyotype of\n    the selected chromosome.\n\nThe **Ensembl** tracks are only available when the user chooses a genome\nfrom the Ensembl database. There are three Ensembl tracks:\n\n  - <span class=\"underline\">Ensembl Genes:</span> Fetches data from\n    Ensembl and displays the genes that are present in the chosen\n    chromosome positions. It also displays a legend for each gene.\n\n  - <span class=\"underline\">Ensembl Sequence:</span> Fetches data from\n    Ensembl and displays the nucleotide sequence of the chromosome. Each\n    base has a different colour assigned. Adenine (A) is green, Thymine\n    (T) is red, Cytosine (C) is blue, and Guanine (G) is yellow.\n\n  - <span class=\"underline\">SNP Database:</span> Fetches data from\n    Ensembl and displays the single nucleotide polymorphisms (SNPs)\n    present for the selected positions of the chromosome. It also\n    displays a legend.\n\nThe **File** tracks work in a different way to the others. A user can\ngenerate multiple tracks of each type with a name, a short description,\nand an URL or file path to the file that the user wants to display on\nthe browser. Each track type has different configurable properties, such\nas the threshold for example, due to the nature of the file. Each track\ntype can be individually activated, deactivated and any tracks created\ncan be removed. There are eight **File** tracks available:\n\n  - <span class=\"underline\">FASTA sequence:</span> Displays the\n    chromosome sequence from a FASTA file.\n\n  - <span class=\"underline\">BED Annotation:</span> Displays the\n    positions and details of annotation from a BED file.\n\n  - <span class=\"underline\">Genomic BAM Transcripts:</span> Displays the\n    sequences of reads from a genomic BAM.\n\n  - <span class=\"underline\">BIGWIG Graph:</span> Displays the contents\n    of a BIGWIG file as a graph.\n\n  - <span class=\"underline\">GFF Genes:</span> Displays a GFF file with\n    all the components forming a gene with exons and introns\n    represented.\n\n  - <span class=\"underline\">VCF Variants:</span> Displays the position\n    of each variation and whether they are higher or lower than the\n    quality threshold set. Requires a VCF file.\n\n  - <span class=\"underline\">SNP Density Graphs:</span> Displays the\n    density of SNPs over a range of positions. Requires a VCF file.\n\n  - <span class=\"underline\">Gene Expression Graphs:</span> Displays the\n    predicted counts at the position of each gene.\n\nFinally, there is an additional track available within the **File**\ntracks, called **Custom** track. A **Custom** track must be written as a\nJavaScript object, which will be implemented into the program. There is\nno limit to the number of **Custom** tracks a user can create.\n\n### Plugins\n\nTable 1. provides a summary and short description of the plugins\navailable in CRAMER.\n\n**Table 1. Plugins included in CRAMER.**\n\n<table>\n<thead>\n<tr class=\"header\">\n<th><strong>Plugin</strong></th>\n<th><strong>Implements:</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Karyotype</td>\n<td><ul>\n<li><p>An ideogram of the selected chromosome on the top of the browser.</p></li>\n<li><p>A marker on the ideogram that reports the current position in the chromosome. This marker can be dragged and resized, which will update the positions of the tracks to match the positions of the markers.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Track Controls</td>\n<td><ul>\n<li><p>An additional menu in each track which provides the option to display info about the track, or to delete it.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Resizer</td>\n<td><ul>\n<li><p>A handler at the bottom of each track that can be vertically dragged to resize the track.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Focus Region</td>\n<td><ul>\n<li><p>A button on the control panel that resets the start and end positions currently displayed to the default ones of the instance.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Tooltips</td>\n<td><ul>\n<li><p>A button that displays a brief description of each element in the genome browser.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>Select Chromosome</td>\n<td><ul>\n<li><p>A button that displays a list of all the chromosomes for the visualised genome. A chromosome can be displayed by clicking on the chromosome number on the list.</p></li>\n</ul></td>\n</tr>\n<tr class=\"odd\">\n<td>Search</td>\n<td><ul>\n<li><p>A button that displays a pop-up window which provides the option to search by gene name, gene position, gene name AND position, or ENSEMBL id in the currently displayed chromosome.</p></li>\n</ul></td>\n</tr>\n<tr class=\"even\">\n<td>File Drop</td>\n<td><ul>\n<li><p>Allows users to drag and drop a file -in a format supported by CRAMER - directly into the browser and display it.</p></li>\n</ul></td>\n</tr>\n</tbody>\n</table>\n\n# How to navigate CRAMER\n\n## Welcome page\n\n![C:\\\\UNIVERSIDAD\\\\Applied Bioinformatics\\\\Group Project\\\\STARTING\nDEF\\\\User\nGuide\\\\Screenshots\\\\Screenshot\\_Welcome\\_page.png](media/image005.png)\n\n*Fig.3. Welcome page of the program for a logged-in user.*\n\nThe welcome page is where users can access existing instances.\nRegistered users can also log-in which provides them with the option to\ncreate, modify or remove instances (**Fig. 3**).\n\nOn the top of the page, there is a brief welcome message and description\nof what the user can do (**A**). Next to it, on the right side,\ndepending on whether the user is registered or not there can be\ndifferent buttons (**B**):\n\n  - <span class=\"underline\">Sign in:</span> Registered users can sign in\n    to unlock additional actions; this will direct them to the login\n    webpage.\n\n  - <span class=\"underline\">Create a new instance and Sign out:</span>\n    Logged-in users can create new instances, which will redirect them\n    to the instances webpage, or sign out of their accounts.\n\nA list of all the available instances is displayed in the centre of the\nwelcome (**C**). The names of the instances are highlighted in blue\n(**D**), followed by a brief description of each instance in black\n(**E**). The name of the instances (**D**) are also links to the\ninstance deployment on the genome browser itself. If the user is\nlogged-in there will be two additional buttons:\n\n  - <span class=\"underline\">Modify:</span> A registered user can modify\n    instances that are already created (**F**). This button will\n    redirect the user to the instances webpage.\n\n  - <span class=\"underline\">Remove:</span> A registered user can delete\n    an instance that is already created (**G**). Clicking on the button\n    will make a pop-out window asking confirmation appear, if the user\n    clicks on \u201cOK\u201d, the instance will be deleted.\n\n  - \n**Instance page**\n\n![](media/image007.png)\n\n*Fig.4. (A) Instance page with examples of how to fill each field. (B)*\n*Pop-up window to create a new sub-track in the GFF Gene parent track*.\n\nThe instance page is accessed through the \u201cCreate new instance\u201d or\n\u201cModify\u201d button on the welcome page (**Fig. 4A**). This page is only\navailable for registered users and allows creating or modifying an\ninstance. When a new instance is being created, all the fields will be\nempty. In contrast, if an instance is being modified all the previous\nconfigurations will be provided in each field.\n\nIn the fields marked \u201cProject Name\u201d (A) and \u201cDescription\u201d (B) the user\ncan insert the instance name and a short description which will be\ndisplayed in the welcome page. Other fields required to be filled\ninclude: \u201cGenome\u201d (**C**), for the species genome, \u201cChromosome\u201d (**D**)\nfor the chromosome number in which the instance will be initialized\n(**D**), \u201cStart\u201d (E) and \u201cEnd\u201d (F) which need to be filled with the\nstart and end positions of the chromosome to be displayed. The species\ngenome karyotype (**C**) can be fetched from the Ensembl database,\nuploaded from a local file or selected from a list of already available\ngenomes. These options can be switched by a button next to the genomes\n(**G**), which is formed by three sub-buttons, one per each option. The\nuploaded file needs to follow the format described in the\n[Appendix](#hands-on-example).\n\nOn the right top corner of the screen, there is also a \u201cHome\u201d button\n(**H**) which redirects the user to the welcome page.\n\nOther features of the instance page include a list with the available\nplugins for the current instance (**I**), and a checkbox to\nactivate/deactivate individual plugins (**K, L**).\n\nIn the case where an Ensembl species genome has been selected, an\nadditional panel will appear underneath the \u201cPlugins\u201d entitled \u201cEnsembl\ntracks\u201d (**M**). The functionality of this type of tracks has been\ndescribed in the Tracks section above.\n\nThe other two types of tracks **Standard** and **File,** are grouped\ntogether in the \u201c\u2018Tracks\u201d box (**N**) adjacent to the \u201cPlugins\u201d box. The\nfile tracks are highlighted in blue (**O**) and next to them there is a\nblue plus-shape button (**P**). Clicking on this button will display a\npop-up window which allows creating a track by filling all the required\nforms (**Fig. 4B**). Once a track is created, clicking on the track type\n(**O**) will reveal all the tracks of this type (**Q**). A track can be\ndeleted by clicking on the remove button (**R**). In the case where the\nuser wishes to display data from a local file on a track, a track with\nan FTP file link needs to be created. It is the responsibility of the\nuser to write the FTP link to the correctly formatted file in order to\nget a correct track display. In addition, a custom track can be created\nby selecting the \u201cCustom Track\u201d option at the bottom of this list\n(**S**).\n\nFinally, an instance can be saved in the database by clicking on the\n\u201cSubmit\u201d button (**T**). If any parameters are incomplete or wrongly\nfilled, a red alert will inform the user about the cause of the error.\n\n## Genome browser page\n\n![](media/image010.png)\n\n*Fig.5. Genome browser page. In the browse is displayed the karyotype*\n*of the chromosome 5 of Mus musculus and the genes found in Ensembl for*\n*the current view position.*\n\nThe genome browser page (**Fig. 5**) is where all the data of the\ninstances is visually represented. The interface consists of a set of\ntracks, each representing a different type of data. On the left side of\nthe browser window there is a vertical panel with labels for each track\n(**A**) and a small handler which allows the user to vertically drag the\ntrack and relocate it (**B**). On the right side of the browser window,\nthere is a small menu tab (**C**) which allows the user to get more info\nabout the current track, adjust the height or remove the track\naltogether.\n\nOn the top corner of the left panel, there is a \u201cTracks\u201d button (**D**)\nwhich displays a pop-out window where all the current implemented tracks\nare listed. From there, any implemented track can be removed (clicking\non the \u201cx\u201d shape button) or added (clicking on the \u201c+\u201d shape button),\neven if it has already been added.\n\nThe karyotype of the chromosome is displayed on a ribbon located at the\ntop of the browser window (**E**). Users can navigate through the\nchromosome by clicking and dragging on the red bookmark located on the\nkaryotype. On the right side of the browser window there is a vertical\npanel with an arrangement of multiple buttons (**F**):\n\n  - <span class=\"underline\">Scrolling buttons (**G**):</span> Changes\n    the current view position of the chromosome to the left (\\<) or\n    right (\\>).\n\n  - <span class=\"underline\">Zoom in/out buttons (**H**):</span> Changes\n    the view position to get more or less detail of the viewed area.\n\n  - <span class=\"underline\">Mouse drag action (**I**):</span> Switches\n    the outcome of the user dragging with the mouse. By default, when\n    the user drags the mouse, the view position is scrolled through the\n    chromosome. However, if the other option is activated, the drag\n    mouse action will highlight the dragged area and zoom in.\n\n  - <span class=\"underline\">Mouse wheel action (**J**):</span> Switches\n    the outcome of the user spinning the mouse wheel. By default, this\n    will make the user scroll over the web page, but with the other\n    option, the user will make zoom in/out on the area where the mouse\n    cursor is placed.\n\n  - <span class=\"underline\">Tooltips (**K**):</span> Clicking on this\n    button will display little text boxes with a brief description of\n    each element on the browser interface.\n\n  - <span class=\"underline\">Select chromosome (**L**):</span> This\n    button will display a list of all the available chromosomes.\n    Clicking on one of them will show it on the browser. By default, the\n    button name is \u201cChr\u201d but, once that is used, it will change to the\n    name of the selected chromosome.\n\n  - <span class=\"underline\">Search (**M**):</span> This button will\n    trigger a pop-out window which allows searching genes by position,\n    name, or ID. If the positions forms are not filled, the tool will\n    search in the whole chromosome, while if a range of positions is\n    specified, it will only look for the genes in that range. Through\n    the three tick boxes, the search can be broadened to the GFF genes\n    track (if it is loaded) or to Ensembl IDs and gene names, in case\n    that the genome file is being fetched from Ensembl. Once the search\n    is completed, a new pop-up window with all the matches will appear\n    and, by doing click on one of the matches, the viewpoint will be\n    moved to the position of that match.\n\n  - <span class=\"underline\">Reset focus (**N**):</span> This button will\n    reset the viewpoint to the default one of the instances.\n\nTo get back to the welcome page, users can click on the \u201cHome\u201d button on\nthe top right corner of the browser window (**O**).\n\nIt is important to note that although the browser page allows users to\ndrag and drop correctly formatted files directly into the browser to\nvisualise them, these files will not be saved in the database.\n\n# Hands-on Example \n\n**Objective:** to create a visualization instance for vcf files\ncontaining human variant calls from the International Genome Sample\nResource (IGSR) and the 1000 Genomes Project repository.\n\n## Download vcf files from the IGSR repository\n\nVCF files from IGSR can be downloaded from the FTP site hosted at the\nEBI ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/.) Both the VCF files and\ntheir corresponding indexed files (.tbi) are available to download\neliminating the need to index the VCF files for use on CRAMER. To\ndownload the following files:\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.\u201d and\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.tbi\u201d type:\n\n`$ wget`\n`ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot\\_data/paper\\_data\\_sets/a\\_map\\_of\\_human\\_variation/low\\_coverage/snps/CHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\\*`\n\\_\n\nAs already mentioned in the \u201cFile requisites\u201d section, VCF files must be\ncompressed and properly indexed with tabix in order to be visualised on\nCRAMER.\n\nN.B. In the case where a tabix file is not available, it can be\ngenerated by running the following command on a compressed vcf file:\n\n`$ tabix vcf\\_file.vcf.gz`\n\nThe generated tabix file must be uploaded together with its\ncorresponding vcf file on CRAMER.\n\n## 2\\. Create a new instance on CRAMER from Ensembl\n\nApplication administrator can log into CRAMER and create new\ninstances or modify existing ones. To create a new instance, go to the\nwelcome page and click the \u201cSign in\u201d button. This will prompt you to add\nyour credentials. Type your email address and password and press \u201csign\nin\u201d. After signing in click on the \u201cCreate New Instance\u201d button to open\nthe instance page. Fill out the fields on the form (**Fig. 6**) to set a\nname and description for the new instance, select the chromosome to\ndisplay and set the default starting and end points of view when the\ninstance is displayed on the browser. All these details can be modified\nlater. To fetch the human genome from Ensembl, go to the \u201cGenome\u201d region\non the top of the page and hover with the mouse over the three available\ntabs to see the description of what each does. Click on the first button\n(*e\\!*), to activate it. This option enables you to fetch genomes from\nEnsembl. Then go to the scroll down menu underneath and select \u201cHuman\u201d.\n\nPlease note that not all the species genomes on this list can be fetched from Ensembl. The reason for this is that they are are either not available in the database, or that they content is not correctly formatted. A list of Ensembl genomes not currently displayed on CRAMER is avellable in the [Appendix](). \n\nNext you need to activate the \u201cEnsembl Tracks\u201d to display more\ninformation about the human genome. The available Ensembl tracks are\n\u201cEnsembl Genes\u201d, \u201cEnsembl Sequence\u201d and \u201cSNP database\u201d and their\nfunction has been described in the [Tracks](#tracks) section. You can\neither activate all the Ensembl tracks at once or select individual\ntracks to be displayed.\n\n![](media/image012.png)\n\n*Fig. 6 Form for new visualization instance on CRAMER*\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Add local files",
        "parent_header": [
          "Hands-on Example",
          "2. Create a new instance on CRAMER from Ensembl"
        ],
        "type": "Text_excerpt",
        "value": "Next, we need to visualize the files we have just downloaded in the\nprevious step. In this example we will upload the\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\u201d downloaded from\nIGSR. To create new VCF tracks follow the steps below:\n\n1.  Go to the \u201cTrack\u201d box and activate the \u201cVCF Highlights\u201d tab.\n\n2.  Click on the plus button next to \u201cVCF Highlights\u201d.\n\n3.  Start populating the fields in the pop-up window. The ones marked\n    with an asterisk (\\*) are mandatory and consist of:\n    1.  Name: Name of the track that is going to be created.\n    \n    2.  Info: Brief description of the track that will be used as a\n        hover label on the browser.\n    \n    3.  URL or Filepath: The url or the filepath of the VCF file.\n\nWhen the fields have been completed, press \u201cAdd Track\u201d.\n\nYou can also create a SNP density track by activating the \u201cAdd SNP\nDensity Track\u201d and uploading the same VCF file.\n\nFinally press the \u201cSubmit\u201d button. This action will take you back to the\ninstance list page. Scroll down and select the name of the instance you\njust created from the instance list. This will open the genome browser\nwindow (**Fig. 7**) and will display the data for the chromosome and\nspecific region you selected when creating the instance. This\ninformation is also contained within the URL link for this page, eg.\n<http://localhost:4000/index?name=Human%20Genome%20Testing&r=X:35938492-35987711>\nThe \u201cr=X denotes chromosome X and **35938492-35987711** is the region\ncurrently displayed on the genome browser. The link is updated each time\nthe user performs an action, such as zoom in/out or change chromosome\n(Please note that the vcf file we downloaded contains only variants on\nChromosome X, so if you pick a different chromosome, the visualization\ninstance would work fine, however, the vcf track will contain no SNPs).\nYou can replicate the same view of the genome by copying and pasting the\nURL link in a new tab on the web browser. ![](media/image013.png)\n\n*Fig. 7 Screenshot of the Human Genome visualisation instance showing*\n*tracks for: Chromosome X and **35938492-35987711***\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Drag and drop",
        "parent_header": [
          "Hands-on Example",
          "2. Create a new instance on CRAMER from Ensembl"
        ],
        "type": "Text_excerpt",
        "value": "An alternative way of uploading files on CRAMER is by using the\n\u201cdrag and drop\u201d functionality which permits users to display data on\nthe genome browser page for as long as the instance is displayed. The\ndrag and drop functionality is a convenient way of displaying data\nwithout permanently adding them to the instance. Just select files with\nthe proper format and drag them to the browser which will automatically\ngenerate the tracks displaying the data for that specific region. To\nreplicate the example above, select both the\n\u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz\u201d file and its tabix\nindexed file \u201cCHBJPT.low\\_coverage.2010\\_09.xchr.sites.vcf.gz.tbi\u201d and\ndrag and drop them in the genome browser page. The name of the new track\nwill be the same as the file name. In case you only selected the vcf\nfile, the following error message will appear: \u201cERROR: GZipped VCF files\nmust be accompanied by a .tbi index file\u201d. Drag and drop can be used for\nother file types as well.\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Explore Data",
        "parent_header": [
          "Hands-on Example",
          "2. Create a new instance on CRAMER from Ensembl"
        ],
        "type": "Text_excerpt",
        "value": "Once you have uploaded the data, there are a number of actions you can\ndo on the genome browser page to explore the data as described in the\n\u201c[Genome browser page](#genome-browser-page)\u201d section.\n<span class=\"underline\">For instance, you can search for a specific gene\non a chromosome, e.g. PLAC1 on chromosome X, by first selecting the\ncorrect chromosome from the drop down menu and then clicking on the\n\u201cSearch\u201d button and typing \u201cPLAC1\u201d in the name field</span> (**Fig. 8**).\n\n![](media/image016.png)\n\n*Fig. 8 CRAMER gene search form.*\n\nThen tick the fields \u201cEnsembl gene IDs\u201d and \u201cEnsembl gene names\u201d since\nthe genome is fetched from Ensembl. After clicking on the arrow next to\n\u201cSearch\u201d a list will appear containing information including the gene\nname and ID and the start and end positions. By clicking on the gene\nname on ID the browser will resize to display the area containing the\ngene of interest. For more information on the gene you can click\nanywhere on the gene schematic on the annotation track and a pop-up\nwindow will appear with additional information (**Fig. 9**). If you\nclick on the gene name on the pop-up window, you will be redirected to\nthe Ensembl webpage for this gene, which will open in a new tab.\n\n![](media/image017.png)\n\n*Fig. 9 CRAMER gene search result for PLAC1*\n"
      },
      "source": "https://raw.githubusercontent.com/FadyMohareb/cramer/master/README.md",
      "technique": "header_analysis"
    }
  ]
}