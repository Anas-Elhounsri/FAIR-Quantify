{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please cite the following paper if you use AgrVATE in your research. Thank you!\n\nRaghuram V, Alexander AM, Loo HQ, Petit RA 3rd, Goldberg JB, Read TD. Species-Wide Phylogenomics of the Staphylococcus aureus Agr Operon Revealed Convergent Evolution of Frameshift Mutations. Microbiol Spectr. 2022 Jan 19;10(1):e0133421. doi: 10.1128/spectrum.01334-21. Epub ahead of print. PMID: 35044202; PMCID: PMC8768832.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VishnuRaghuram94/AgrVATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-18T01:41:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-26T16:48:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rapid identification of Staphylococcus aureus agr locus type and agr operon variants."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9443032696513227,
      "result": {
        "original_header": "WORKFLOW:",
        "type": "Text_excerpt",
        "value": "AgrVATE accepts a *S. aureus* genome assembly as input and performs a kmer search using an Agr-group specific kmer database to assign the Agr-group. The *agr* operon is then extracted using *in-silico* PCR and variants are called using an Agr-group specific reference operon.  \n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9769709673737997,
      "result": {
        "original_header": "RESULTS:",
        "type": "Text_excerpt",
        "value": "\t\tcol 1: Assembly Contig ID\n\t\tcol 2: ID of matched agr group kmer\n\t\tcol 3: evalue\n\t\tcol 4: Percentage identity of match\n\t\tcol 5: Start position of kmer alignment on input sequence\n\t\tcol 6: End position of kmer alignment on input sequence \n* __**fasta-agr_operon_frameshifts.tab:**__  \n\tFrameshift mutations in CDS of extracted agr operon detected by Snippy. An agr-group specific reference sequence is used to call variants. \n\t\n\t\tcol 1: Filename\n\t\tcol 2: Position on agr operon compared to reference\n\t\tcol 3: Type of frameshift\n\t\tcol 4: Effect of mutation\n\t\tcol 5: Gene\n\t\t\n* __**fasta-blastn-log.txt:**__  \n\tStandard output of ncbi blastn \n\t\t\n* __**fasta-agr_operon.fna:**__  \n\tAgr operon extracted from in-silico PCR using USEARCH -SEARCH_PCR in fasta format\n\t\n* __**fasta-hmm.tab:**__  \n\tTabular output of [nhmmer](http://hmmer.org/documentation.html)\n\tThis file is present only if the agr group is untypeable. \n\t\t\n* __**fasta-hmm-log.txt:**__  \n\tStandard output of [nhmmer](http://hmmer.org/documentation.html)\n\tThis file is present only if the agr group is untypeable. \n\t\t\n* __**fasta-pcr-log.tab:**__  \n\tStandard output of [USEARCH -SEARCH_PCR](https://drive5.com/usearch/manual/cmd_search_pcr.html)\n\t\n* __**fasta-snippy_log.txt:**__  \n\tStandard output of [Snippy](https://github.com/tseemann/snippy)\n\t\t\n* __**fasta-snippy/**__  \n\tAll output files of [Snippy](https://github.com/tseemann/snippy)\n\t\n* __**fasta-mummer_log.txt:**__  \n\tStandard output of [MUMmer dnadiff](https://github.com/garviz/MUMmer)\n\t\t\n* __**fasta-mummer/**__  \n\tAll output files of [MUMmer dnadiff](https://github.com/garviz/MUMmer)\t\n \n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VishnuRaghuram94/AgrVATE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VishnuRaghuram94/AgrVATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AgrVATE"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VishnuRaghuram94/agr_fs_detection/main/agrvate_workflow.png"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALLATION:",
        "type": "Text_excerpt",
        "value": "Please see the [PREREQUISITES](#PREREQUISITES) section for all the tools required to run AgrVATE. For ease of use, I recommended you install AgrVATE using [Conda](https://conda.io/en/latest/).\n\n\t\n\tconda create -n agrvate -c bioconda agrvate\n\tconda activate agrvate\n\t\nThis will install all necessary dependencies EXCEPT Usearch.  \t\nDue to Usearch's license, it cannot be provided with the conda installation. Please download and extract usearch11.0.667 (osx32 or linux32) from [here](https://www.drive5.com/downloads/) and add it to your PATH\n\t\nFor example (Use the version appropriate for your operating system):\n\t\n\t\n\tcurl \"https://www.drive5.com/downloads/usearch11.0.667_i86linux32.gz\" --output usearch11.0.667_i86linux32.gz #Downloads usearch binary\n\t\n\tgunzip usearch11.0.667_i86linux32.gz #Decompresses usearch binary\n\t\n\tchmod 755 usearch11.0.667_i86linux32 #Changes permissions to executable\n\t\n\tcp ./usearch11.0.667_i86linux32 $(dirname \"$(which agrvate)\") #Copies usearch binary to the same directory as agrvate \n\n***NOTE:*** Currently, only the 32-bit version of usearch is free to use. This version is not supported by WSL or MacOS (post-Catalina). Therefore, it is recommended to use AgrVATE on Linux machines or older versions MacOS. If you are unable to run usearch, use the ```-m``` option to run MUMmer instead (IN BETA). However, please note that if there are large insertions/deletions in the agr-operon, MUMmer can split the alignment into 2 and the resulting extracted agr-operon will not be intact, in which case frameshift detection using snippy may miss these indels.\t\n\n---\n\t"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9527230859714967,
      "result": {
        "original_header": "RESULTS:",
        "type": "Text_excerpt",
        "value": "* __**fasta-summary.tab:**__   \n* __**fasta-agr_operon_frameshifts.tab:**__  \n\tFrameshift mutations in CDS of extracted agr operon detected by Snippy. An agr-group specific reference sequence is used to call variants. \n\t\n\t\tcol 1: Filename\n\t\tcol 2: Position on agr operon compared to reference\n\t\tcol 3: Type of frameshift\n\t\tcol 4: Effect of mutation\n\t\tcol 5: Gene\n\t\t\n* __**fasta-blastn-log.txt:**__  \n\tStandard output of ncbi blastn \n\t\t\n* __**fasta-agr_operon.fna:**__  \n\tAgr operon extracted from in-silico PCR using USEARCH -SEARCH_PCR in fasta format\n\t\n* __**fasta-hmm.tab:**__  \n\tTabular output of [nhmmer](http://hmmer.org/documentation.html)\n\tThis file is present only if the agr group is untypeable. \n\t\t\n* __**fasta-hmm-log.txt:**__  \n\tStandard output of [nhmmer](http://hmmer.org/documentation.html)\n\tThis file is present only if the agr group is untypeable. \n\t\t\n* __**fasta-pcr-log.tab:**__  \n\tStandard output of [USEARCH -SEARCH_PCR](https://drive5.com/usearch/manual/cmd_search_pcr.html)\n\t\n* __**fasta-snippy_log.txt:**__  \n\tStandard output of [Snippy](https://github.com/tseemann/snippy)\n\t\t\n* __**fasta-snippy/**__  \n\tAll output files of [Snippy](https://github.com/tseemann/snippy)\n\t\n* __**fasta-mummer_log.txt:**__  \n\tStandard output of [MUMmer dnadiff](https://github.com/garviz/MUMmer)\n\t\t\n* __**fasta-mummer/**__  \n\tAll output files of [MUMmer dnadiff](https://github.com/garviz/MUMmer)\t\n \n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9812911560492528,
      "result": {
        "original_header": "TROUBLESHOOTING",
        "type": "Text_excerpt",
        "value": "An error report summary file with suffix ```-error-report.tab``` will be created in the working directory.   \n* __**error-report.tab:**__   \n\t\tcol 1: Input name - the argument supplied to the -i flag\n\t\tcol 2: Input check - If fail, the input did not pass the valid fasta file criteria\n\t\tcol 3: Databases check - If fail, the databases folder or the path to the databases was not valid. \n\t\tcol 4: Outdir check - If fail, the results directory already exists and couldn't be overwritten. Use flag -f or --force. \n\t\tcol 5: Agr typing - If fail, the Agr typing kmer search could not be performed. Check if blastn is installed correctly. \n\t\tcol 6: Operon check - If fail, in-silico PCR was not performed by usearch or agr operon search was not performed by mummer. Check if usearch/mummer is installed correctly. \n\t\tcol 7: Snippy check - If fail, agr operon frameshift detection was not performed. Check if snippy is installed correctly. \n\t*If multiple assemblies are run, use this command from parent directory to output a consolidated report table for all samples*\n\t\n\t\tawk 'FNR==1 && NR!=1 { while (/^#/) getline; } 1 {print}' ./*-error-report.tab > filename.tab \n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8609560233690954,
      "result": {
        "original_header": "TROUBLESHOOTING",
        "type": "Text_excerpt",
        "value": "\t*If multiple assemblies are run, use this command from parent directory to output a consolidated report table for all samples*\n\t\n\t\tawk 'FNR==1 && NR!=1 { while (/^#/) getline; } 1 {print}' ./*-error-report.tab > filename.tab \n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "agr, agr-group, agr-operon, alleles, aureus, bioinformatics, frameshifts, genomics, mummer, operon, quorum-sensing, sequencing, staphylococcus, staphylococcus-aureus, typing, usearch"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 VishnuRaghuram94\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AgrVATE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "VishnuRaghuram94"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1287286,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 16613,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VishnuRaghuram94",
          "type": "User"
        },
        "date_created": "2021-10-27T22:38:59Z",
        "date_published": "2021-10-27T22:41:31Z",
        "description": "Frameshift detection by snippy will now run even if mummer reports a discontiguous alignment\r\nMinor change: Exit status after usearch binary check fail is now 0 instead of 1. ",
        "html_url": "https://github.com/VishnuRaghuram94/AgrVATE/releases/tag/v1.0.2",
        "name": "Mummer behaviour change",
        "release_id": 52185731,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/52185731",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/52185731",
        "zipball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VishnuRaghuram94",
          "type": "User"
        },
        "date_created": "2021-09-21T14:47:13Z",
        "date_published": "2021-09-21T14:49:28Z",
        "description": "Added fix for dots in sample names ( commit 40521e7f7e5fac6e2f35ba0a1154fe1a32acbb23 )\r\nAdded manuscript related code, figures and data tables. ",
        "html_url": "https://github.com/VishnuRaghuram94/AgrVATE/releases/tag/v1.0.1",
        "name": "Minor fix + manuscript related data",
        "release_id": 49991589,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/49991589",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/49991589",
        "zipball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VishnuRaghuram94",
          "type": "User"
        },
        "date_created": "2021-04-25T01:13:40Z",
        "date_published": "2021-04-25T01:14:57Z",
        "html_url": "https://github.com/VishnuRaghuram94/AgrVATE/releases/tag/v1.0",
        "name": "First release",
        "release_id": 41955160,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/41955160",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/41955160",
        "zipball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VishnuRaghuram94",
          "type": "User"
        },
        "date_created": "2021-02-18T04:56:32Z",
        "date_published": "2020-12-28T19:11:29Z",
        "description": "added mummer as an alternate to usearch",
        "html_url": "https://github.com/VishnuRaghuram94/AgrVATE/releases/tag/v0.5.7",
        "name": "Conda-test",
        "release_id": 35781985,
        "tag": "v0.5.7",
        "tarball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/tarball/v0.5.7",
        "type": "Release",
        "url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/35781985",
        "value": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/releases/35781985",
        "zipball_url": "https://api.github.com/repos/VishnuRaghuram94/AgrVATE/zipball/v0.5.7"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PREREQUISITES:",
        "type": "Text_excerpt",
        "value": "* __[Usearch 32 bit linux](https://drive5.com/usearch/)__  \nRobert C. Edgar, Search and clustering orders of magnitude faster than BLAST, Bioinformatics, Volume 26, Issue 19, 1 October 2010, Pages 2460\u20132461, https://doi.org/10.1093/bioinformatics/btq461\n\t\n* __[NCBI blast+](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/)__  \nCamacho, C., Coulouris, G., Avagyan, V. et al. BLAST+: architecture and applications. BMC Bioinformatics 10, 421 (2009). https://doi.org/10.1186/1471-2105-10-421\n\t\n* __[Snippy](https://github.com/tseemann/snippy)__  \nSeemann T (2015). Snippy: fast bacterial variant calling from NGS reads. https://github.com/tseemann/snippy\n\n* __[MUMmer](https://github.com/garviz/MUMmer)__  \nS. Kurtz. et al (2004). Versatile and open software for comparing large genomes. Genome Biology, R12. https://doi.org/10.1186/gb-2004-5-2-r12\n\t\n* __[HMMER](http://hmmer.org/)__  \nS.R. Eddy. Biological sequence analysis using profile hidden Markov models. http://hmmer.org/\n\n* __[SeqKit](https://bioinf.shenwei.me/seqkit/)__  \nShen W, Le S, Li Y, Hu F (2016) SeqKit: A Cross-Platform and Ultrafast Toolkit for FASTA/Q File Manipulation. PLoS ONE 11(10): e0163962. https://doi.org/10.1371/journal.pone.0163962\n\t\n* Databases folder for agr group typing and variant calling  \n\t* __[DREME](http://meme-suite.org/doc/dreme.html)__  \n\t***DREME is not required for AgrVATE but it was used to build the kmer database for Agr-group typing*** (```gp1234_motifs_all.fasta```)    \n\tTimothy L. Bailey, DREME: motif discovery in transcription factor ChIP-seq data, Bioinformatics, Volume 27, Issue 12, 15 June 2011, Pages 1653\u20131659, https://doi.org/10.1093/bioinformatics/btr261\n\t```\n\tagrvate_databases/\n\t\t\u251c\u2500\u2500 agrD_hmm.hmm\n\t\t\u251c\u2500\u2500 agrD_hmm.hmm.h3f\n\t\t\u251c\u2500\u2500 agrD_hmm.hmm.h3i\n\t\t\u251c\u2500\u2500 agrD_hmm.hmm.h3m\n\t\t\u251c\u2500\u2500 agrD_hmm.hmm.h3p\n\t\t\u251c\u2500\u2500 agr_operon_primers.fa\n\t\t\u251c\u2500\u2500 gp1234_motifs_all.fasta\n\t\t\u2514\u2500\u2500 references\n\t\t\t\u251c\u2500\u2500 gp1-operon_ref.gbk\n\t\t\t\u251c\u2500\u2500 gp2-operon_ref.gbk\n\t\t\t\u251c\u2500\u2500 gp3-operon_ref.gbk\n\t\t\t\u2514\u2500\u2500 gp4-operon_ref.gbk\n\t\t\t\u2514\u2500\u2500 mummer_ref_operon.fna\t\n\t```\n---\n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:59:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "USAGE:",
        "type": "Text_excerpt",
        "value": "\tagrvate -i filename.fasta [options]\n\t\n* FLAGS:  \n\t* ```-i```&nbsp;&nbsp;&nbsp;Input S. aureus genome in FASTA format [alternate: ```--input```]\n\t* ```-t```&nbsp;&nbsp;&nbsp;Does agr typing only (skips agr operon extraction and frameshift detection) [alternate: ```--typing-only```]\n\t* ```-m```&nbsp;&nbsp;&nbsp;Uses MUMmer dnadiff instead of usearch [alternate: ```--mummer```]\n\t* ```-f```&nbsp;&nbsp;&nbsp;Force overwrite existing results directory [alternate: ```--force```]\n\t* ```-d```&nbsp;&nbsp;&nbsp;Path to agrvate_databases (Not required if installed using Conda) [alternate: ```--databases```]\n\t* ```-h```&nbsp;&nbsp;&nbsp;Print this help message and exit [alternate: ```--help```]\n\t* ```-v```&nbsp;&nbsp;&nbsp;Print version and exit [alternate: ```--version```]\n\n*AgrVATE supports a single FASTA file as input, but the file can be a multi-fasta file. To run multiple *S. aureus* genomes, it is recommended to keep them as separate files in a common directory.*  \n*For example*:\n\n\tls fasta_files/* | xargs -I {} agrvate -i {} [options]\n\t\n---\n"
      },
      "source": "https://raw.githubusercontent.com/VishnuRaghuram94/AgrVATE/main/README.md",
      "technique": "header_analysis"
    }
  ]
}