{
  "application_domain": [
    {
      "confidence": 24.45,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Publication and Citation",
        "parent_header": [
          "covNormRpkg"
        ],
        "type": "Text_excerpt",
        "value": "If you use covNorm in a paper, please cite:\n\n> Kyukwang Kim and Inkyung Jung,  \n> covNorm: an R package for coverage based  normalization of Hi-C and capture Hi-C data,  \n> *Computational and Structural Biotechnology Journal*, Volume 19, pages 3149-3159(2021).  \n> doi: https://doi.org/10.1016/j.csbj.2021.05.041 \n\nThe preliminary forms of covNorm in previous works:\n\n> Kim, K., *et al*,\n> 3DIV update for 2021: a comprehensive resource of 3D genome and 3D cancer genome  \n> *Nucleic Acids Research*, Volume 49, Issue D1, pages D38\u2013D46(2020).  \n> doi: https://doi.org/10.1093/nar/gkaa1078\n\n> Jung, I., *et al*,   \n> A compendium of promoter-centered long-range chromatin interactions in the human genome   \n> *Nature Genetics* Volume 51, pages 1442\u20131449(2019).  \n> doi: https://doi.org/10.1038/s41588-019-0494-8\n\n> Yang, D., *et al*,   \n> 3DIV: A 3D-genome Interaction Viewer and database   \n> *Nucleic Acids Research*, Volume 46, Issue D1, pages D52\u2013D57(2018).  \n> doi: https://doi.org/10.1093/nar/gkx1017\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kaistcbfg/covNormRpkg"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-26T05:30:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-06T07:21:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package implementation of 'covNorm' method"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "covNormRpkg"
        ],
        "type": "Text_excerpt",
        "value": "Hi-C and capture Hi-C have greatly advanced our understanding the principle of higher order chromatin structure, but still development of computational methods that effectively eliminate innate biases is essential to precise detection of chromatin contacts. To resolve this issue, we developed an implicit normalization method named \u2018covNorm\u2019 and implemented as an R package which performs negative binomial model-based normalization for genomic bin coverages and ligated DNA fragment distances, visualizes the process for quality control, and provides significance scores of the chromatin contacts. Taken together, the proposed method provides accurate and reproducible results between biological replicates as well as easily applicable to various \u2018C\u2019 technologies.\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9010978522487406,
      "result": {
        "original_header": "Sample Data and Input Format",
        "type": "Text_excerpt",
        "value": "The input file must follow following format, imported as a data.frame in R.\n|        frag1        |           frag2          | cov_frag1 | cov_frag2 | freq | dist     |\n|:-------------------:|:------------------------:|:---------:|:---------:|------|----------|\n| chr17.140000.160000 |  chr17.83160000.83180000 |    2296   |    2304   |  1.0 | 83020000 |\n| chr17.140000.160000 | chr17.83180000.83200000  |    2296   |    2072   |  2.0 | 83040000 |\n| chr17.140000.160000 |  chr17.83200000.83220000 |    2296   |    778    |  2.0 | 83060000 |\n|         ...         |            ...           |    ...    |    ...    |  ... |    ...   |\n| chr17.160000.180000 |    chr17.200000.220000   |    2119   |    2253   | 12.0 |   40000  |\n| chr17.160000.180000 |    chr17.220000.240000   |    2119   |    1744   |  9.0 |   60000  | \n**frag1**: Dot spliced chromosome, start coordinate, end coordinate of the first DNA fragment.  \n**frag2**: Dot spliced chromosome, start coordinate, end coordinate of the second DNA fragment.  \nIn case of pcHi-C, frag1 should be 'promoter' site in PO-interaction normalization.  \n**freq**: Raw interaction frequency between two bins.   \n**dist**: Genomic distance between two bins' start coordinates.  \nUse midpoint between start and end for pcHi-C. \n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9432124727309938,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "For detailed interpretation of the result, check 'Supplmentary Information' of our published paper. \n**rand**: Random integer used for coverage 1 & 2 shuffle. Not used in pcHi-C normalization.  \n**exp_value_capture**: Expected interaction frequency between DNA fragment based on coverage values.  \n**capture_res**: Coverage normalized interaction frequency between DNA fragments.  \n**exp_value_dist**: Expected interaction frequency between DNA fragment based on genomic distance between DNA fragments.  \n**dist_res**: Distance normalized interaction frequency between DNA fragments.   \n**p_result_dist**: *p*-value of the interaction.  \n**FDR_dist_res**: FDR of the interaction.   \n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kaistcbfg/covNormRpkg/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kaistcbfg/covNormRpkg/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kaistcbfg/covNormRpkg"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "covNormRpkg"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/67453667/87240706-f4b5ad00-c456-11ea-9ae3-8263be2e2ebd.png"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "covNormRpkg"
        ],
        "type": "Text_excerpt",
        "value": "Prerequisites for covNormRpkg can be installed by\n```R\ninstall.packages(c(\"MASS\", \"propagate\", \"FAdist\", \"stringr\", \"splines\"))    # Imports\ninstall.packages(c(\"reshape2\", \"gplots\", \"ggplot2\", \"corrplot\"))            # Suggests\n```\nInstall the latest released version from GitHub using [devtools](https://cran.r-project.org/package=devtools) with\n\n```R\ndevtools::install_github(\"kaistcbfg/covNormRpkg\")\n```\nDownload covNorm source code and install with the R CMD\n\n```bash\ngit clone https://github.com/kaistcbfg/covNormRpkg.git\nR CMD build covNormRpkg\nR CMD INSTALL covNormRpkg_1.1.0.tar.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9240890291722097,
      "result": {
        "original_header": "Sample Data and Input Format",
        "type": "Text_excerpt",
        "value": "Sample Hi-C/pcHi-C datasets for the covNorm can be downloaded with:\n```bash\nwget http://junglab.kaist.ac.kr/Dataset/GM19204.chr17.cis.feature.gz #Hi-C Replicate 1,  783588 rows, 12Mb\nwget http://junglab.kaist.ac.kr/Dataset/GM19240.chr17.cis.feature.gz #Hi-C Replicate 2, 1136435 rows, 19Mb\n\nwget http://junglab.kaist.ac.kr/Dataset/GM12878.po.no0.feature.gz #pcHi-C Replicate 1, 4298847 rows, 59Mb\nwget http://junglab.kaist.ac.kr/Dataset/GM19240.po.no0.feature.gz #pcHi-C Replicate 2, 3582541 rows, 49Mb\n```  \n \n**cov_frag1**: Coverage value of frag1 bin.  \n**cov_frag2**: Coverage value of frag2 bin.  \nUse 'coverageBed' tool from ['bedtools'](https://github.com/arq5x/bedtools2) to compute bin coverage. \n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728282780648082,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "<img src=\"https://user-images.githubusercontent.com/67453667/87240706-f4b5ad00-c456-11ea-9ae3-8263be2e2ebd.png\" width=\"50%\"></img>\n \n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.940328100446891,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\nUse **'capture_res'** value to plot coverge normalized Hi-C contact map.  \nFollowing example code can be used:\n```python\nimport numpy as np\nimport matplotlib\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt\nimport gzip\n\nchromosome_size = 83257441 #hg38 chr17\nresolution = 40000 # 40kb\nbin_length = (chromosome_size/resolution) + 1\n\ncontact_map = np.zeros((bin_length, bin_length))\n\nf = gzip.open('GM19240.chr17.covnorm.gz') # coverage normalization result file\nf.readline() #header\nfor line in f:\n    line = line.rstrip()\n    linedata = line.split('\\t')\n    bin1 = int(linedata[0].split('.')[1])/resolution\n    bin2 = int(linedata[1].split('.')[1])/resolution\n    freq = float(linedata[8])\n\n    contact_map[bin1][bin2] += freq\n    contact_map[bin2][bin1] += freq\n#\nf.close()\n\nfig = plt.figure(1)\nax = fig.add_subplot(111)\ncax = ax.matshow(contact_map, cmap=plt.cm.RdYlBu_r, vmin=0, vmax=5)\nfig.colorbar(cax)\nplt.savefig(\"HiC_contact_map.pdf\", dpi=1000)\n```\nGM19240 chr17 normalized Hi-C contact matrix  \n \n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kaistcbfg/covNormRpkg/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) YEAR: 2020 COPYRIGHT HOLDER: KAIST (Corporation registration number: 114471-0000668).\nRegistered at the Korea Copyright Commission(C-2021-022800) in accordance with Article 53 of the Copyright Act. \n\nDeveloped by Kyukwang Kim & Inkyung Jung, KAIST Dept. of Biological Sciences.\nFor commercial use of the software, please contact the authors.\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "covNormRpkg"
        ],
        "type": "Text_excerpt",
        "value": "Copyright (c) YEAR: 2020 COPYRIGHT HOLDER: KAIST (Corporation registration number: 114471-0000668).\nRegistered at the Korea Copyright Commission(C-2021-022800) in accordance with Article 53 of the Copyright Act. \n\nDeveloped by Kyukwang Kim & Inkyung Jung, KAIST Dept. of Biological Sciences.\nFor commercial use of the software, please contact the authors.\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "covNormRpkg"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kaistcbfg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 12228,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:03:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Codes",
        "parent_header": [
          "covNormRpkg"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to the 'Supplmentary Information' of our published paper or the man page of each function (e.g. ```?covNormRpkg::normCoverage```) for analysis tips and details about input parameters.\n\nWe  provide example codes for Hi-C and pcHi-C analysis demonstration. \n\n```R\nlibrary('covNormRpkg')\n\nargs <- commandArgs(TRUE)\nfile_name=args[1]\n\nraw_data <- read.table(gzfile(file_name),head=TRUE)\nprint(\"1: Data Loaded.\")\n\nraw_data_filter <- covNormRpkg::filterInputDF(raw_data)\nprint(\"2: Data Filtered.\")\n\ncov_result <- covNormRpkg::normCoverage(raw_data_filter)\ncov_result$coeff_cov1\ncov_result$coeff_cov2\ncov_df <- cov_result$result_df\nwrite.table(cov_df, file=gzfile(\"outFileName1\"), row.names=FALSE, col.names=TRUE, sep=\"\\t\", quote=FALSE) # Coverage normalization result\nprint(\"3: Coverage normalized.\")\n\ncovNormRpkg::checkFreqCovPCC(cov_df, outpdfname='QCplot_coverage_PCC.pdf')\ncovNormRpkg::plotCovNormRes( cov_df, outpdfname='QCplot_coverage_heatmap.pdf')\nprint(\"4: Plot coverage normalization results.\")\n\ndist_result <- covNormRpkg::normDistance(cov_df, max_dist=2000000)\ndist_df <- dist_result$result_df\nprint(\"5: Distance normalized.\")\n\ncovNormRpkg::checkFreqDistPCC(dist_df, outpdfname='QCplot_dist_PCC.pdf')\ncovNormRpkg::plotDistNormRes( dist_df, outpdfname='QCplot_dist_hexmap.pdf')\nprint(\"6: Plot distance normalization results.\")\n\nfinal_df <- covNormRpkg::contactPval(dist_df, 'fit.pdf')\nprint(\"7: Significant interactions called.\")\n\n#Uncomment 'saveEachChr' to split-save file for each chromosome.\n#covNormRpkg::saveEachChr(final_df, \"./outputFolder\", \"outputSampleName\") \nwrite.table(final_df, file=gzfile(\"outFileName2\"), row.names=FALSE, col.names=TRUE, sep=\"\\t\", quote=FALSE) # Distance normalization & significant interactions\n```\nFor pcHi-C PO-interaction normalization, modify step 3 (Coverage normalization) part with following code.\n```R\nraw_data_filter <- raw_data_filter[which(raw_data_filter$dist<2000000),] # Consider 15kb-2Mb interactions only in pcHi-C\ncov_result <- covNormRpkg::normCoverage(raw_data_filter, do_shuffle=FALSE, cov1_thresh=200, cov2_thresh=50) \n#in pcHi-C PO-interaction normalization, lower coverage threshold for 'other' interaction\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kaistcbfg/covNormRpkg/master/README.md",
      "technique": "header_analysis"
    }
  ]
}