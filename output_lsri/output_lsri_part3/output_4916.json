{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chasewnelson/OLGenie"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-29T19:32:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-23T19:30:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Program for estimating dN/dS in overlapping genes (OLGs)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9569525490640917,
      "result": {
        "original_header": "<a name=\"description\"></a>Description",
        "type": "Text_excerpt",
        "value": "Given the codon triplet and antiparallel nature of the genetic code, a single segment of double-stranded nucleic acid has the potential to encode six reading frames: three in the forward (sense) direction and three in the reverse (antisense) direction. This allows for the possibility that two or more genes may overlap the same nucleotide positions in a genome. Indeed, a substantial fraction of genes in taxa ranging from viruses to humans may encode overlapping gene (**OLG**) pairs, running in either the same (**ss**; sense-sense) or opposite (**sas**; sense-antisense) directions (*e.g.*, see Pavesi *et al.* 2018 and Sabath 2009). We use the nomenclature of Wei and Zhang (2015), referring to these overlapping frames as ss12, ss13, sas11, sas12, or sas13, where the first number refers to the codon position in a reference gene, and the second number refers to the codon position in an alternate (overlapping) gene: \nThe choice of which gene to consider the reference gene is arbitrary. Typically, the **reference gene** (mother/ORF1 gene) is the gene whose functional status is known, while the functionality of the **alternate gene** (daughter/ORF2 gene) may be in question. Thus, in practice, the reference gene is usually larger than the alternate gene, and the alternate gene is either partially or fully embedded within the reference. For example, in sas12, genes overlap in a sense-antisense relationship such that position 1 of codons in the sense (reference) gene correspond to position 2 of codons in the reverse strand (alternate) gene. In other words, the sense gene's first codon position overlaps the antisense gene's second codon position:\n\t\n<img src=\"https://github.com/chasewnelson/OLGenie/blob/master/sas12_figure.png\" alt=\"sas12 logo\" align=\"middle\" width=\"2500px\"> \nIt is common to detect natural selection in a DNA sequence alignment using *d*<sub>N</sub>/*d*<sub>S</sub>, *i.e.*, the ratio of nonsynonymous (changes the amino acid) to synonymous (does not change the amino acid) differences per site. While *d*<sub>N</sub>/*d*<sub>S</sub> = 1 implies neutrality (*i.e.*, the null hypothesis of no effect), negative (purifying) selection may lead to *d*<sub>N</sub>/*d*<sub>S</sub> < 1 and positive (Darwinian) selection may lay to *d*<sub>N</sub>/*d*<sub>S</sub> > 1. Thus, *d*<sub>N</sub>/*d*<sub>S</sub> can be used to detect functional protein-coding genes. Unfortunately, standard methods for estimating *d*<sub>N</sub>/*d*<sub>S</sub> do not apply to OLGs, because a mutation that is synonymous in one frame may be nonsynonymous in another, and *vice versa*. Although some methods for detecting natural selection in OLGs have been developed, they are generally computationally intensive and limited in utility (*e.g.*, Wei and Zhang 2015; Sabath *et al.* 2008). Thus, it is necessary to develop improved approaches for detecting selection in OLGs that can be implemented with genome-scale data. \nOLGenie represents a simplification and extension of the method of Wei and Zhang (2015), utilizing the approach of <a target=\"_blank\" href=\"https://github.com/chasewnelson/SNPGenie\">SNPGenie</a> (Nelson *et al.* 2015), and tailored for detecting selection in OLGs. The method considers the effects of mutations in the overlapping frame to determine the numerator (number of differences) and denominator (number of sites) of *d*<sub>N</sub> and *d*<sub>S</sub>. For example, *d*<sub>N</sub> is usually calculated as the mean number of nonsynonymous nucleotide differences per nonsynonymous nucleotide site, and *d*<sub>S</sub> is similarly calculated for synonymous differences and sites. In order to control for the possibility that synonymous sites in the frame of interest may be under selection in the alternate overlapping reading frame, Wei-Zhang further considers the expanded measures *d*<sub>NN</sub>, *d*<sub>SN</sub>, *d*<sub>NS</sub>, and *d*<sub>SS</sub>, where the first subscript refers to the reference gene, and the second to the alternate gene. For example, *d*<sub>SN</sub> refers to the mean number of differences per site that are synonymous in the reference frame but nonsynonymous in the alternate frame (*i.e.*, SN). Using these measures, it is possible to estimate *d*<sub>N</sub>/*d*<sub>S</sub> for the reference gene using *d*<sub>NN</sub>/*d*<sub>SN</sub> or *d*<sub>NS</sub>/*d*<sub>SS</sub>, and to estimate *d*<sub>N</sub>/*d*<sub>S</sub> for the alternate gene as *d*<sub>NN</sub>/*d*<sub>NS</sub> or *d*<sub>SN</sub>/*d*<sub>SS</sub>, *i.e.*, the subscript in the alternate OLG is held constant to control for OLG effects. \nFor more details, please refer to our manuscript.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9598527045545198,
      "result": {
        "original_header": "<a name=\"how-it-works\"></a>How it Works",
        "type": "Text_excerpt",
        "value": "OLGenie is written in Perl with no dependencies for maximum portability (just download and run). The program examines a user-provided FASTA alignment of one protein-coding gene region from the reference gene point of view. This means that the alignment begins at the first site of a reference gene codon, and ends at the last (third) site of a reference gene codon. In practice, depending on the goal of the user, the alignment may contain a reference gene in which a smaller OLG is embedded; just that portion of a reference gene known to contain an OLG; a portion of a reference gene thought not to contain an OLG (*i.e.*, a negative control); or a region in which no OLG is known, but one is being sought. \nAfter reading in the user-provided alignment, OLGenie calculates the number of NN, SN, NS, and SS sites and differences, reporting the mean of all pairwise comparisons. This is done separately for each focal reference codon by considering all unique nonamer (9nt) alleles of which the reference codon is the center, and of which 6nt constitute a minimum overlapping unit: one reference gene codon and its two overlapping alternate gene codons. (Note that sas13 is unique in that one reference codon overlaps exactly one alternate codon.) OLGenie is sufficiently fast that these tasks require no parallelism beyond the level of the single gene alignment. Thus, for datasets with many genes, the user can implement their own parallelization by running numerous alignments (genes) simultaneously. \nAfter results are obtained for each focal codon in the alignment, significant deviations from the null expectation of neutrality (*d*<sub>N</sub> - *d*<sub>S</sub> = 0) may be tested using a *Z*-test, where the standard error is estimated using bootstrapping (focal codon unit). Don't worry \u2014 we provide scripts to do it all!\n \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8238333020604723,
      "result": {
        "original_header": "<a name=\"options\"></a>Options",
        "type": "Text_excerpt",
        "value": "* `--fasta_file` (**REQUIRED**): a FASTA file containing multiple aligned sequences of one coding sequence. The entire coding sequence will be analyzed as an OLG, even if only part (or none) of the alignment constitues a true OLG. The frame of the alignment must be the frame of the reference gene (see the --frame option). If the user wishes to align their own sequences, it is recommended to translate the gene sequences, align at the amino acid level, and then impose the amino acid alignment on the DNA alignment to preserve complete codons. (If you need a tool to help with this, see align\\_codon2aa.pl at <a target=\"_blank\" href=\"https://github.com/chasewnelson/EBT\">Evolutionary Bioinformatics Toolkit</a>.)\n* `--frame` (**REQUIRED**): the frame relationship of the overlapping gene (OLG): ss12, ss13, sas11, sas12, or sas13 (see [description](#description) above).\n* `--output_file` (*OPTIONAL*): name of the TAB-delimited output file to be placed in the working directory unless a full path name is given. If not specified, a file will be printed in the working directory by the name **OLGenie_codon_results.txt** (DEFAULT).\n* `--verbose` (*OPTIONAL*): tell OLGenie to report all unique nonamers (9nt) overlapping each reference codon, along with their counts, in the output file. May lead to large output files in cases with many and/or divergent sequences. If not specified, verbose output will not be reported (DEFAULT).\n \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9187459011144956,
      "result": {
        "original_header": "<a name=\"examples\"></a>EXAMPLES",
        "type": "Text_excerpt",
        "value": "Example input and output files for `OLGenie.pl` are available in the `EXAMPLE_INPUT` and `EXAMPLE_OUTPUT` directories at this GitHub page, where reproducible examples are numbered (*e.g.*, **example1.out**). This script produces TAB-delimited output with one row for each (non-terminal) codon, with columns as described in the [Codon Results Output File](#codon-output-file) section. \nNote that, if your input file(s) (*e.g.*, **alignment.fasta**) are not in the working directory (*i.e.*, where your Terminal is currently operating), you will need to specify the full path of the file name (*e.g.*, **/Users/ohta/Desktop/OLGenie\\_practice/alignment.fasta**). Also note that, in the examples below, a `\\` is used simply to continue the previous command on the line. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9671079305539576,
      "result": {
        "original_header": "<a name=\"standard-output\"></a>Standard Output",
        "type": "Text_excerpt",
        "value": "\r\nAt the command line (Terminal), OLGenie will first report the date and time, the file and frame relationship used in the analysis, and any warning messages. Following completion of the analysis, OLGenie will report the following summary statistics:\r\n\r\n* **Mean numbers of sites and differences**: the total numbers of NN, SN, NS, and SS sites and differences for the entire alignment, obtained by summing the results for all codons.\r\n* **Mean substitution rates (between-species) or nucleotide diversities (within-species):**: OLGenie's estimates of *d*<sub>NN</sub>, *d*<sub>SN</sub>, *d*<sub>NS</sub>, and *d*<sub>SS</sub> for the entire alignment, calculated as (\\*\\_diffs / \\*\\_sites) for each site type.\n* **dN/dS estimates**: OLGenie's estimates of *d*<sub>N</sub>/*d*<sub>S</sub> for the reference gene (*d*<sub>NN</sub>/*d*<sub>SN</sub>, *d*<sub>NS</sub>/*d*<sub>SS</sub>) and alternate gene (*d*<sub>NN</sub>/*d*<sub>NS</sub> and *d*<sub>SN</sub>/*d*<sub>SS</sub>) for the entire alignment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9602956041746951,
      "result": {
        "original_header": "<a name=\"codon-output-file\"></a>Codon Results Output File",
        "type": "Text_excerpt",
        "value": "* `codon_num`: the codon position in the alignment, starting at codon 2 and ending at the penultimate codon. The first and last codons are excluded because their values cannot be estimated, as one of their overlapping (alternate gene) codons is unknown, occurring before or after the alignment begins or ends, respectively. (Note that sas13 is an exception.)\r\n* `ref_codon_maj`: the major (most common) allele for the reference gene codon at this position.\n* `alt_codon1_maj`: the major (most common) allele for the alternate gene codon overlapping the beginning (5' side) of the reference codon at this position.\n* `alt_codon2_maj`: the major (most common) allele for the alternate gene codon overlapping the end (3' side) of the reference codon at this position. Note that only `alt_codon1_maj` will be reported for the sas13 frame, since OLG codons form one-to-one overlaps in this frame.\n* `nonamers`: only included when using the `--verbose` option. This column contains all unique nonamer (9nt) alleles occuring at this position, with the reference focal codon at the center. Different alleles are separated using the colon (`:`) delimiter.\n* `nonamer_counts`: only included when using the `--verbose` option. This column contains the counts (number of sequences) having each unique nonamer (9nt) allele at this position, in the same order given in the `nonamers` column. Values for different alleles are separated using the colon (`:`) delimiter.\n* `multiple_variants`: whether the nonamer at this position contains more than one nucleotide variant. If so, the OLGenie method may underestimate *d*<sub>S</sub> at this position. In this case, the *d*<sub>N</sub>/*d*<sub>S</sub> ratio will constitute a conservative test of purifying (negative) selection, but positive (Darwinian) selection should be inferred with caution.\n* `NN_sites`: the number of sites (*i.e.*, possible nucleotide changes) that are nonsynonymous in both the reference and alternate genes at this reference codon.\n* `SN_sites`: the number of sites (*i.e.*, possible nucleotide changes) that are synonymous in the reference gene but nonsynonymous in the alternate gene at this reference codon.\n* `NS_sites`: the number of sites (*i.e.*, possible nucleotide changes) that are nonsynonymous in the reference gene but synonymous in the alternate gene at this reference codon.\n* `SS_sites`: the number of sites (*i.e.*, possible nucleotide changes) that are synonymous in both the reference and alternate genes at this reference codon.\n* `NN_diffs`: the number of differences (*i.e.*, observed nucleotide changes) that are nonsynonymous in both the reference and alternate genes at this reference codon.\n* `SN_diffs`: the number of differences (*i.e.*, observed nucleotide changes) that are synonymous in the reference gene but nonsynonymous in the alternate gene at this reference codon.\n* `NS_diffs`: the number of differences (*i.e.*, observed nucleotide changes) that are nonsynonymous in the reference gene but synonymous in the alternate gene at this reference codon.\n* `SS_diffs`: the number of differences (*i.e.*, observed nucleotide changes) that are synonymous in both the reference and alternate genes at this reference codon. \nNote that any desired estimate of *d*<sub>N</sub>, *d*<sub>S</sub>, or their ratio can be obtained for any subregion of the alignment by summing the appropriate numbers of sites and differences and performing the appropriate calculations. For example, to calculate the alternate gene *d*<sub>N</sub>/*d*<sub>S</sub> = *d*<sub>SN</sub>/*d*<sub>SS</sub> ratio for a 25-codon window within an alignment: \n1. Calculate *d*<sub>SN</sub> as sum(`SN_diffs`)/sum(`SN_sites`) for those 25 codons;\n2. Calculate *d*<sub>SS</sub> as sum(`SS_diffs`)/sum(`SS_sites`) for those 25 codons; and\n3. Calculate the *d*<sub>SN</sub>/*d*<sub>SS</sub> value.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9672052083924124,
      "result": {
        "original_header": "<a name=\"bootstrap-output\"></a>Bootstrap Output",
        "type": "Text_excerpt",
        "value": "Significant deviations from neutrality (*d*<sub>N</sub> - *d*<sub>S</sub> = 0) can be detected using a *Z*-test, where the standard error of *d*<sub>N</sub> - *d*<sub>S</sub> is estimated using bootstrapping (reference codon unit) (Nei and Kumar 2000). Consider using our R script, `OLGenie_bootstrap.R` (see [examples](#examples)). This produces four lines of output, one for each of the four ratios: *d*<sub>NN</sub>/*d*<sub>SN</sub>, *d*<sub>NN</sub>/*d*<sub>NS</sub>, *d*<sub>NS</sub>/*d*<sub>SS</sub>, and *d*<sub>SN</sub>/*d*<sub>SS</sub>. Columns of values are given in the following order (numbered here for clarity, as these headers do not appear in the output): \n1. `num_codons`: the total number of codons examined.\n2. `NN_sites`: see the description of the [codon output file](#codon-output-file).\n3. `SN_sites`: see the description of the [codon output file](#codon-output-file).\n4. `NS_sites`: see the description of the [codon output file](#codon-output-file).\n5. `SS_sites`: see the description of the [codon output file](#codon-output-file).\n6. `NN_diffs`: see the description of the [codon output file](#codon-output-file).\n7. `SN_diffs`: see the description of the [codon output file](#codon-output-file).\n8. `NS_diffs`: see the description of the [codon output file](#codon-output-file).\n9. `SS_diffs`: see the description of the [codon output file](#codon-output-file).\n10. `ratio`: the ratio being estimated on this line: dNNdSN denotes *d*<sub>NN</sub>/*d*<sub>SN</sub>; dNNdNS denotes *d*<sub>NN</sub>/*d*<sub>NS</sub>; dNSdSS denotes *d*<sub>NS</sub>/*d*<sub>SS</sub>; and dSNdSS denotes *d*<sub>SN</sub>/*d*<sub>SS</sub>.\n11. `site_rich_ratio`: whether this is the most site-rich ratio (**TRUE** or **FALSE**). Note that, for sas12, the more accurate ratios (*d*<sub>NS</sub>/*d*<sub>SS</sub> and *d*<sub>SN</sub>/*d*<sub>SS</sub>) are not the most site-rich.\n12. `gene`: whether this line is an estimate of *d*<sub>N</sub>/*d*<sub>S</sub> for the reference gene (**ORF1**) or the alternate gene (**ORF2**).\n13. `num_replicates`: number of bootstrap replicates performed.\n14. `dN`: the point estimate of *d*<sub>N</sub> (numerator of `ratio`).\n15. `dS`: the point estimate of *d*<sub>S</sub> (denominator of `ratio`).\n16. `dNdS`: the point estimate of *d*<sub>N</sub>/*d*<sub>S</sub> (value of `ratio`).\n17. `dN_m_dS`: the point estimate of *d*<sub>N</sub> - *d*<sub>S</sub>.\n18. `boot_dN_SE`: the standard error of mean *d*<sub>N</sub>, estimated by bootstrapping.\n19. `boot_dS_SE`: the standard error of mean *d*<sub>S</sub>, estimated by bootstrapping.\n20. `boot_dN_over_dS_SE`: the standard error of mean *d*<sub>N</sub>/*d*<sub>S</sub>, estimated by bootstrapping.\n21. `boot_dN_over_dS_P`: the *P* value of a deviation from *d*<sub>N</sub>/*d*<sub>S</sub> = 1 (two-sided; *Z*-test).\n22. `boot_dN_m_dS_SE`: the standard error of mean *d*<sub>N</sub> - *d*<sub>S</sub>, estimated by bootstrapping.\n23. `boot_dN_m_dS_P`: the *P* value of a deviation from *d*<sub>N</sub>-*d*<sub>S</sub>=0, estimated from the bootstrap SE (two-sided; *Z*-test). (***Recommended test.***)\n24. `boot_dN_gt_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub>>*d*<sub>S</sub>.\n25. `boot_dN_eq_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub>=*d*<sub>S</sub>.\n26. `boot_dN_lt_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub><*d*<sub>S</sub>.\n27. `ASL_dN_gt_dS_P`: one-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub>>*d*<sub>S</sub>.\n28. `ASL_dN_lt_dS_P`: one-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub><*d*<sub>S</sub>.\n29. `ASL_dNdS_P`: two-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub>=*d*<sub>S</sub>. \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8898510956460787,
      "result": {
        "original_header": "<a name=\"sliding-window-output\"></a>Sliding Window Output",
        "type": "Text_excerpt",
        "value": "The R script `OLGenie_sliding_windows.R` can be used to compute any of the *d*<sub>N</sub>/*d*<sub>S</sub> ratio estimators and bootstrap them in one feel swoop (see [examples](#examples)). The output includes all the original columns present in the [codon results output file](#codon-output-file), along with additional columns specific to the sliding windows. These are: \n* `sw_ratio`: the overlapping gene *d*<sub>N</sub>/*d*<sub>S</sub> ratio estimator computed in the analysis, *i.e.*, dNNdSN, dNNdNS, dNSdSS, or dSNdSS (denoting *d*<sub>NN</sub>/*d*<sub>SN</sub>, *d*<sub>NN</sub>/*d*<sub>NS</sub>, *d*<sub>NS</sub>/*d*<sub>SS</sub>, and *d*<sub>SN</sub>/*d*<sub>SS</sub>, respectively).\n* `sw_start`: first codon included in the window.\n* `sw_center`: middle codon included in the window.\n* `sw_end`: last codon included in the window.\n* `sw_num_replicates`: number of bootstrap replicates.\n* `sw_N_diffs`: sum of NUMERATOR-type (NN, SN, or NS) differences observed in the window.\n* `sw_S_diffs`: sum of DENOMINATOR-type (SN, NS, or SS) differences observed in the window.\n* `sw_N_sites`: sum of NUMERATOR-type (NN, SN, or NS) sites observed in the window.\n* `sw_S_sites`: sum of DENOMINATOR-type (SN, NS, or SS) sites observed in the window.\n* `sw_dN`: *d*<sub>N</sub> (NUMERATOR) estimate for the window.\n* `sw_dS`: *d*<sub>S</sub> (DENOMINATOR) estimate for the window.\n* `sw_dNdS`: *d*<sub>N</sub>/*d*<sub>S</sub> ratio estimate for the window (neutral null expectation: 1).\n* `sw_dN_m_dS`: *d*<sub>N</sub>-*d*<sub>S</sub> difference estimate for the window (neutral null expectation: 0).\n* `sw_boot_dN_SE`: standard error (SE) of mean *d*<sub>N</sub>, estimated as the standard deviation of the bootstrap replicates.\n* `sw_boot_dS_SE`: standard error (SE) of mean *d*<sub>S</sub>, estimated as the standard deviation of the bootstrap replicates.\n* `sw_boot_dN_over_dS_SE`: standard error (SE) of mean *d*<sub>N</sub>/*d*<sub>S</sub>, estimated as the standard deviation of the bootstrap replicates.\n* `sw_boot_dN_over_dS_P`: *Z*-test *P*-value of null hypothesis that *d*<sub>N</sub>/*d*<sub>S</sub>=1, estimated from the bootstrap SE.\n* `sw_boot_dN_m_dS_SE`: standard error (SE) of mean *d*<sub>N</sub>-*d*<sub>S</sub>, estimated as the standard deviation of the bootstrap replicates.\n* `sw_boot_dN_m_dS_P`: the *P* value of a deviation from *d*<sub>N</sub>-*d*<sub>S</sub>=0, estimated from the bootstrap SE (two-sided; *Z*-test). (***Recommended test.***)\n* `sw_boot_dN_gt_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub>>*d*<sub>S</sub>.\n* `sw_boot_dN_eq_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub>=*d*<sub>S</sub>.\n* `sw_boot_dN_lt_dS_count`: number of bootstrap replicates in which *d*<sub>N</sub><*d*<sub>S</sub>.\n* `sw_ASL_dN_gt_dS_P`: one-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub>>*d*<sub>S</sub>.\n* `sw_ASL_dN_lt_dS_P`: one-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub><*d*<sub>S</sub>.\n* `sw_ASL_dNdS_P`: two-sided achieved significance level (ASL) *P*-value of the null hypothesis that *d*<sub>N</sub>=*d*<sub>S</sub>.\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8659667745986392,
      "result": {
        "original_header": "<a name=\"troubleshooting\"></a>Troubleshooting",
        "type": "Text_excerpt",
        "value": "\r\nIf you have questions about **OLGenie**, please click on the <a target=\"_blank\" href=\"https://github.com/chasewnelson/OLGenie/issues\">Issues</a> tab at the top of this page and begin a new thread, so that others might benefit from the discussion. Common questions will be addressed in this section.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9462190501446384,
      "result": {
        "original_header": "<a name=\"acknowledgments\"></a>Acknowledgments",
        "type": "Text_excerpt",
        "value": "**OLGenie** was written with support from a Gerstner Scholars Fellowship from the Gerstner Family Foundation at the American Museum of Natural History to C.W.N. (2016-2019), and is maintained with support from a \u4e2d\u592e\u7814\u7a76\u9662 Academia Sinica Postdoctoral Research Fellowship (2019-2021). The logo image was designed by Mitch Lin (2019); copyright-free DNA helix obtained from Pixabay. Thanks to Reed Cartwright, Dan Graur, Jim Hussey, Michael Lynch, Sergios Orestis-Kolokotronis, Wen-Hsiung Li, Apurva Narechania, Siegfried Scherer, Sally Warring, Jeff Witmer, Meredith Yeager, Jianzhi (George) Zhang, Martine Zilversmit, and the Sackler Institute for Comparative Genomics workgroup for discussion along the way.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8613630167428339,
      "result": {
        "original_header": "<a name=\"contact\"></a>Contact",
        "type": "Text_excerpt",
        "value": "If you have questions about **OLGenie**, please click on the <a target=\"_blank\" href=\"https://github.com/chasewnelson/OLGenie/issues\">Issues</a> tab at the top of this page and begin a new thread, so that others might benefit from the discussion.\r\n\r\nOther correspondence should be addressed to Chase W. Nelson: \r\n\r\n* cnelson <**AT**> amnh <**DOT**> org\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9384451163837857,
      "result": {
        "original_header": "<a name=\"references\"></a>References",
        "type": "Text_excerpt",
        "value": "* Nei M, Gojobori T. 1986. <a target=\"_blank\" href=\"https://academic.oup.com/mbe/article/3/5/418/988012\">Simple methods for estimating the numbers of synonymous and nonsynonymous nucleotide substitutions</a>. *Molecular Biology and Evolution* **3**(5):418-426.\n* Nei M, Kumar S. 2000. *Molecular Evolution and Phylogenetics*. New York, NY: Oxford University Press.\n* Nelson CW, Moncla LH, Hughes AL. 2015. <a target=\"_blank\" href=\"https://academic.oup.com/bioinformatics/article/31/22/3709/241742\">SNPGenie: estimating evolutionary parameters to detect natural selection using pooled next-generation sequencing data</a>. *Bioinformatics* **31**(22):3709-3711.\n* Pavesi A, Vianelli A, Chirico N, Bao Y, Blinkova O, Belshaw R, Firth A, Karlin D. 2018. <a target=\"_blank\" href=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0202513\">Overlapping genes and the proteins they encode differ significantly in their sequence composition from non-overlapping genes</a>. *PLoS ONE* **13**:e0202513.\n* Sabath N. 2009. <a target=\"_blank\" href=\"http://nsmn1.uh.edu/dgraur/niv/Sabath_PhD_Thesis.pdf\">*Molecular Evolution of Overlapping Genes*</a>. ProQuest Dissertation #3405062.\r* Sabath N, Landan G, Graur D. 2008. <a target=\"_blank\" href=\"https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0003996\">A method for the simultaneous estimation of selection intensities in overlapping genes</a>. *PLoS One* **3**(12):e3996.\r* Wei X, Zhang J. 2015. <a target=\"_blank\" href=\"https://academic.oup.com/gbe/article/7/1/381/604609\">A simple method for estimating the strength of natural selection on overlapping genes</a>. *Genome Biology and Evolution* **7**(1):381-390.\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9153302164452086,
      "result": {
        "type": "Text_excerpt",
        "value": "**OLGenie** is a Perl program for estimating *d*N/*d*S to detect selection and function in overlapping genes (OLGs). It relies on no external dependencies, facilitating maximum portability. Just download and run. \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chasewnelson/OLGenie/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chasewnelson/OLGenie/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chasewnelson/OLGenie"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/OLGs_all_frames.png"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/sas12_figure.png"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.997364171752929,
      "result": {
        "original_header": "<a name=\"description\"></a>Description",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/chasewnelson/OLGenie/blob/master/OLGs_all_frames.png\" alt=\"sas12 logo\" align=\"middle\"> \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8208467151714612,
      "result": {
        "original_header": "<a name=\"options\"></a>Options",
        "type": "Text_excerpt",
        "value": "Call **OLGenie** using the following options:  \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999987905487653,
      "result": {
        "original_header": "<a name=\"examples\"></a>EXAMPLES",
        "type": "Text_excerpt",
        "value": "Note that, if your input file(s) (*e.g.*, **alignment.fasta**) are not in the working directory (*i.e.*, where your Terminal is currently operating), you will need to specify the full path of the file name (*e.g.*, **/Users/ohta/Desktop/OLGenie\\_practice/alignment.fasta**). Also note that, in the examples below, a `\\` is used simply to continue the previous command on the line. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8849658525483234,
      "result": {
        "original_header": "<a name=\"codon-output-file\"></a>Codon Results Output File",
        "type": "Text_excerpt",
        "value": "OLGenie will report codon-by-codon results in the file **OLGenie\\_codon\\_results.txt** (or any file specified with the `--output_file` option). The columns contain the following information: \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9963105867379773,
      "result": {
        "original_header": "<a name=\"citation\"></a>Citation",
        "type": "Text_excerpt",
        "value": "and this page:\r\n\r\n>https://github.com/chasewnelson/OLGenie\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9955247596289599,
      "result": {
        "type": "Text_excerpt",
        "value": "To test the software with the , execute the program at the Unix command line or Mac Terminal as follows: \n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chasewnelson/OLGenie/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dnds, dnds-estimation, molecular-evolution, natural-selection, nei-gojobori, neutral-evolution, overlapping, overlapping-genes, perl, positive-selection, purifying-selection, selection"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/OLGenie_logo.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OLGenie"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "chasewnelson"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 386593,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 68635,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "singing-scientist",
          "type": "User"
        },
        "date_created": "2020-09-08T18:29:02Z",
        "date_published": "2020-09-19T19:30:24Z",
        "html_url": "https://github.com/chasewnelson/OLGenie/releases/tag/v1.0.0",
        "name": "First tagged release",
        "release_id": 31565647,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/chasewnelson/OLGenie/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chasewnelson/OLGenie/releases/31565647",
        "value": "https://api.github.com/repos/chasewnelson/OLGenie/releases/31565647",
        "zipball_url": "https://api.github.com/repos/chasewnelson/OLGenie/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE 1: A SIMPLE RUN",
        "parent_header": [
          "<a name=\"examples\"></a>EXAMPLES"
        ],
        "type": "Text_excerpt",
        "value": "Note that this is a 'real' example and may take up to 60 seconds!\n\r\n\tOLGenie.pl --fasta_file=HIV1_env_BLAST.fa --frame=sas12 > example1.out\n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:04:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE 1: A SIMPLE RUN",
        "parent_header": [
          "<a name=\"examples\"></a>EXAMPLES"
        ],
        "type": "Text_excerpt",
        "value": "Note that this is a 'real' example and may take up to 60 seconds!\n\r\n\tOLGenie.pl --fasta_file=HIV1_env_BLAST.fa --frame=sas12 > example1.out\n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE 2: VERBOSE OUTPUT TO A USER-SPECIFIED FILE",
        "parent_header": [
          "<a name=\"examples\"></a>EXAMPLES"
        ],
        "type": "Text_excerpt",
        "value": "Remember to replace the `--output_file` path with a location that exists on your machine.\n\r\n\tOLGenie.pl --fasta_file=HIV1_env_BLAST.fa --frame=sas12 \\\n\t--output_file=/Users/ohta/Desktop/OLGenie_codon_results_ex2.txt --verbose > example2.out\n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE 3: TESTING FOR SIGNIFICANCE WITH BOOTSTRAPPING",
        "parent_header": [
          "<a name=\"examples\"></a>EXAMPLES"
        ],
        "type": "Text_excerpt",
        "value": "Use our script `OLGenie_bootstrap.R`. We provide this script separately so that users can take advantage of the accessible statistical resources offerred by R without having to install Perl modules. Just make sure the R packages `readr` and `boot` have been installed (*e.g.*, by calling `install.packages(\"readr\")` and `install.packages(\"boot\")` at the R console).\n\nCall the script with the following 3-6 (unnamed) arguments (in this order):\n\n1. **CODON RESULTS FILE**. The name/path of the file containing the codon results file from the OLGenie analysis. This file must not have been modified, and should only contain the results for one analysis (i.e., one gene product and frame).\n2. **MINIMUM NUMBER OF DEFINED CODONS PER CODON POSITION** (\u22652; *RECOMMENDED*=6). Alignment positions with very few defined (non-gap, non-ambiguous) codons may be prone to erroreous *d*<sub>N</sub>/*d*<sub>S</sub> estimates.\n3. **NUMBER OF BOOTSTRAP REPLICATES** (\u22652; *RECOMMENDED*=10000). The number of bootstrap replicates to perform (typically 1,000 or 10,000).\n4. **NUMBER OF CPUS** (*OPTIONAL*; \u22651; DEFAULT=1). The number of parallel processes (CPUs) to use when bootstrapping. A typical personal laptop computer can utilize 4-8 CPUs, while a high performance computing cluster might provide access to 10s or 100s.\n5. **MULTIPLE HITS CORRECTION** (*OPTIONAL*; \\\"NONE\\\" or \\\"JC\\\"; DEFAULT=NONE). When the raw *p*-distance (mean number of pairwise differences per site) exceeds 0.1, the possibility that sites have undergone multiple hits (recurrent changes at the same hit which cannot be measured) increases. Although no known correction is technically applicable to overlapping genes, we offer Jukes-Cantor as an option.\n6. **STRING TO PREPEND TO OUTPUT LINES** (*OPTIONAL*; DEFAULT=\\\"\\\").\n\nThus, the format is:\n\n\tOLGenie_bootstrap.R <CODON RESULTS FILE>.txt <MIN DEFINED CODONS> <NUM BOOTSTRAPS> <NUM CPUS> > <output>.out\n\nFor example, try the following using the results from **Example 2**:\n\n\tOLGenie_bootstrap.R OLGenie_codon_results_ex2.txt 2 1000 4 > example3.out\n\nThis produces TAB-delimited output, as described in the [Bootstrap Output](#bootstrap-output) section.\n"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE 4: SLIDING WINDOWS WITH BOOTSTRAPPING",
        "parent_header": [
          "<a name=\"examples\"></a>EXAMPLES"
        ],
        "type": "Text_excerpt",
        "value": "Use our script `OLGenie_sliding windows.R`. Make sure the R packages `dplyr`, `readr`, `stringr`, and `boot` have been installed (*e.g.*, by calling `install.packages(\"boot\")` at the R console).\n\nCall the script with the following 5-10 (unnamed) arguments (in this order):\n\n1. **CODON RESULTS FILE**. The name/path of the file containing the codon results file from the OLGenie analysis (OLGenie_codon_results.txt). This file must not have been modified, and should only contain the results for one analysis (i.e., one gene product and frame).\n2. **NUMERATOR SITE TYPE**. NN, SN, or NS.\n3. **DENOMINATOR SITE TYPE**. SN, NS, or SS.\n4. **SLIDING WINDOW SIZE**. Measured in CODONS; must be \u22652; \u226525 recommended.\n5. **SLIDING WINDOW STEP SIZE**. Measured in CODONS; must be \u22651.\n6. **NUMBER OF BOOTSTRAP REPLICATES PER WINDOW** (*OPTIONAL*; \u22652; DEFAULT=1000).\n7. **MINIMUM NUMBER OF DEFINED CODONS PER CODON POSITION** (*OPTIONAL*; \u22652; DEFAULT=6).\n8. **MULTIPLE HITS CORRECTION** (*OPTIONAL*; \"NONE\" or \"JC\", Jukes-Cantor; DEFAULT=NONE). Keep in mind that no correction is truly applicable to OLGs.\n9. **NUMBER OF CPUS** (*OPTIONAL*; \u22651; DEFAULT=1). A typical personal laptop computer can utilize 4-8 CPUs, while a high performance computing cluster might provide access to 10s or 100s.\n10. **STRING TO PREPEND TO OUTPUT LINES** (*OPTIONAL*; DEFAULT=\"\").\n\nThus, the format is:\n\n\tOLGenie_sliding_windows.R <CODON RESULTS FILE> <NUMERATOR> <DENOMINATOR> <WINDOW SIZE> <WINDOW STEP SIZE> <NUM BOOTSTRAPS> <MIN DEFINED CODONS> <CORRECTION> <NUM CPUS> > <output>.out\n\nFor example, a real command might look like the following:\n\n\tOLGenie_sliding_windows.R OLGenie_codon_results.txt NN NS 25 1 1000 6 NONE 6 > OLGenie_sliding_windows.out\n\nThis produces TAB-delimited **output**, as described in the [Sliding Window Output](#sliding-window-output) section. The output file is placed within the same directory using the name of the input file as a prefix, but adding the suffix `*_WINDOWS_<RATIO>.tsv`.\n\r"
      },
      "source": "https://raw.githubusercontent.com/chasewnelson/OLGenie/master/README.md",
      "technique": "header_analysis"
    }
  ]
}