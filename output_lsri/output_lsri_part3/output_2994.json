{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "EPTool Userguide",
          "Function"
        ],
        "type": "Text_excerpt",
        "value": "Please cite the following paper in your publication if it helps your research:\n\nGuo, Y., Wu, J., Ma, H., Wang, S. and Huang, J., 2020, May. Bagging MSA Learning: Enhancing Low-Quality PSSM with Deep Learning for Accurate Protein Structure Property Prediction. In International Conference on Research in Computational Molecular Biology (pp. 88-103). Springer, Cham.\n\nGuo, Y., Wu, J., Ma, H., Wang, S., & Huang, J. (2021). EPTool: A New Enhancing PSSM Tool for Protein Secondary Structure Prediction. Journal of Computational Biology, 28(4), 362-364.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yuzhiguo07/EPTool"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-09T22:46:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-20T08:09:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A New Enhancing PSSM Tool for Protein Secondary Structure Prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9990126239245241,
      "result": {
        "original_header": "EPTool: A New Enhancing PSSM Tool for Protein Secondary Structure Prediction",
        "type": "Text_excerpt",
        "value": "Recently, a deep learning based enhancing PSSM method (Bagging MSA Learning (Y Guo, et al.)) has been proposed, and its effectiveness has been empirically proved. Program EPTool is the implementation of Bagging MSA Learning, which provides a complete training and evaluation workflow for the enhancing PSSM model. It is capable for handling different input dataset and various computing algorithms to train the enhancing model, then eventually improve the PSSM quality for those proteins with insufficient homologous sequences. In addition, EPTool equips several convenient applications, such as PSSM features calculator, and PSSM features visualization. In this paper, we propose designed EPTool, and briefly introduce its functionalities and applications. The detail accessible instructions is also provided. \n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.834949593163313,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "*method* - PSSM calculation method num, `0`, `1` or `2`, Usually using `1`. \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9187861562556515,
      "result": {
        "original_header": "Unsupervised model training example",
        "type": "Text_excerpt",
        "value": "This part of the manual will be completed upon acceptance of the EPTool paper. \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xiaozhi0689/EPTool/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yuzhiguo07/EPTool/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yuzhiguo07/EPTool"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EPTool: A New Enhancing PSSM Tool for Protein Secondary Structure Prediction"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "preparation",
        "parent_header": [
          "EPTool Userguide"
        ],
        "type": "Text_excerpt",
        "value": "Download Uniref50 fasta format database from https://www.uniprot.org/downloads to `./db/uniref50.fasta`\n\nDonwload HMMER3.2.1 from http://hmmer.org/download.html and install the HMMER following the Userguide.pdf.\n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8838876966328275,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "*aln_path* - MSA file path \n*save_path* - save pssm feature file path \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.808940144778939,
      "result": {
        "original_header": "Generate PSSM Grayscale",
        "type": "Text_excerpt",
        "value": "```\npython grayscale.py --pssm_path ./feat_example/sample.pssm\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8449148023599073,
      "result": {
        "original_header": "Calculate PSSM",
        "type": "Text_excerpt",
        "value": "```\npython calculate_pssm.py --aln_path ./aln_example/sample.aln --save_path ./feat_example/sample.pssm --method 1 \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8419101529301868,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "*aln_path* - MSA file path \n*ss_path*(optional) - secondary structure label file path, see `./ss_example/sample.ss` for an example.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8598584151035065,
      "result": {
        "original_header": "Generate enhanced feature",
        "type": "Text_excerpt",
        "value": "```\npython generate_new_feat.py --eval_feat_path='./feat_example/sample2.feat' --save_fpath='./feat_example/new.feat' --model_path='./try01' --epoch=1\n```\nSee comments for all hyper-parameters in `generate_new_feat.py` \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9306155104873078,
      "result": {
        "original_header": "Generate PSSM Grayscale",
        "type": "Text_excerpt",
        "value": "```\npython grayscale.py --pssm_path ./feat_example/sample.pssm\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yuzhiguo07/EPTool/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EPTool"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yuzhiguo07"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32790,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scheme",
        "size": 275,
        "type": "Programming_language",
        "value": "Scheme"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "parent_header": [
          "EPTool Userguide"
        ],
        "type": "Text_excerpt",
        "value": "cuda 10.2\n\npython 3.6\n\npytorch 1.4.0\n\nsmile `pip install smile`\n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run jackhmmer",
        "parent_header": [
          "EPTool Userguide",
          "Function"
        ],
        "type": "Text_excerpt",
        "value": "Run Jackhmmer following the Jackhmmer guide book(http://eddylab.org/software/hmmer/Userguide.pdf), and fit the output to the `aln_example/sample.aln` format. Here are the hmmer parameters:\n```\nphmmer -E 1 --domE 1 --incE 0.01 --incdomE 0.03 --mx BLOSUM62 --pextend 0.4 --popen 0.02 -o {out_path} -A {sto_path} --notextw --cpu {cpu_num} {fasta_path} {db_path}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:10:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Unsupervised model training example",
        "parent_header": [
          "EPTool Userguide",
          "Function"
        ],
        "type": "Text_excerpt",
        "value": "```\npython train.py --aln_dpath='./aln_example' --train_fname='sample.aln' --valid_fname='sample.aln' --model_path=./try01 2>&1 | tee try01.log\n```\nSee comments for all hyper-parameters in `train.py`\n\nThis part of the manual will be completed upon acceptance of the EPTool paper.\n\nSee `./aln_example/sample.aln` for an example of input MSA file.\n"
      },
      "source": "https://raw.githubusercontent.com/xiaozhi0689/EPTool/master/README.md",
      "technique": "header_analysis"
    }
  ]
}