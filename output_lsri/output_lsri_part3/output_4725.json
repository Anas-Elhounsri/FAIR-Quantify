{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iobio-zjut/CGLFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-01T10:16:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-20T10:25:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The official repository for the protein structure prediction software CGLFold"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8540518227090138,
      "result": {
        "original_header": "a contact-assisted de novo protein structure prediction using global exploration and loop perturbation sampling algorithm",
        "type": "Text_excerpt",
        "value": "**Developer:**   \n                Jun Liu  \n                College of Information Engineering  \n                University of Zhejiang University of Technology, Zhejiang  \n                Email: junl@zjut.edu.cn  \n\t\t\n**Contact:**  \n                Guijun Zhang, Prof  \n                College of Information Engineering  \n                University of Zhejiang University of Technology, Zhejiang  \n                Email: zgj@zjut.edu.cn  \n \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9106755769067237,
      "result": {
        "original_header": "3. OUTPUT",
        "type": "Text_excerpt",
        "value": "Output files of CGLFold are stored in the ``\"example/output_files/\"`` folder, including five predicted model (model_X.pdb) and the filtered contact map. \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9823925653052215,
      "result": {
        "original_header": "5. DISCLAIMER",
        "type": "Text_excerpt",
        "value": "The executable software and the source code of CGLFold is distributed free of charge \nas it is to any non-commercial users. The authors hold no liabilities to the performance \nof the program.\n \n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/iobio-zjut/CGLFold/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iobio-zjut/CGLFold/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iobio-zjut/CGLFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CGLFold"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. INSTALLATION",
        "parent_header": [
          "CGLFold"
        ],
        "type": "Text_excerpt",
        "value": "Binaries for Linux 64 bit system has been included in the package. The Linux binary was compiled using GCC 5.4.0. Users need to have these versions of GCC compilers when using binaries.\n\nPlease Follow the below steps to install and configure CGLFold:\n\n- Download Rosetta3.10 source package from https://www.rosettacommons.org/software/ \nand extract it to ``\"~/\"`` directory.\n\n- Copy and paste source code of ``\"ClassicAbinitio.cc\"``, ``\"ClassicAbinitio.hh\"``,   ``\"LJAngleRotation.cc\"``, ``\"LJAngleRotation.hh\"``, and ``\"LJAngleRotation.fwd.hh\"`` from ``\"src/\"`` folder in CGLFold package to ``\"~/Rosetta/main/source/src/protocols/abinitio/\"`` folder in Rosetta. Copy and paste configuration file ``\"protocols_b_6.src.settings\"`` from ``\"src/\"`` folder in CGLFold package to ``\"~/Rosetta/main/source/src/\"`` folder in Rosetta.\n\n- Compile Rosetta source code using the following commands:\n\n```\n $ cd ~/Rosetta/main/source/\n $ ./scons.py -j<NumOfJobs> mode=release bin\n```\n\n- If you want to recompile CGLFold source code, use the following commands:\n\n```\n $ cd ~/CGLFold/\n $ g++ -o bin/CGLFold src/CGLFold.cpp\n```"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/iobio-zjut/CGLFold/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CGLFold"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "iobio-zjut"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 114147,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 6239,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:28:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "4. EXAMPLE",
        "parent_header": [
          "CGLFold"
        ],
        "type": "Text_excerpt",
        "value": "Please follow the below steps to run CGLFold:\n\n- Go to the ``\"example/\"`` folder of CGLFold.\n  \n- Run CGLFold with the following command:\n  \n```\n      $ ./../bin/CGLFold -f ./input_files/fasta.txt -c input_files/contact.txt -frag3 input_files/3mer_fragment_library -frag9 input_files/9mer_fragment_library -rosetta ~/rosetta_src_2018.33.60351_bundle/main/source/bin/AbinitioRelax.linuxgccrelease\n```\n\n- Five models and the filtered contact map are generated in the ``\"output_files/\"`` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/iobio-zjut/CGLFold/master/README.md",
      "technique": "header_analysis"
    }
  ]
}