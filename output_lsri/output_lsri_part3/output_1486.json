{
  "application_domain": [
    {
      "confidence": 0.9198939817316514,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "[1] Danying Shao, Gretta Kellogg, Shaun Mahony, William Lai, and B. Franklin Pugh. 2020. PEGR: a management platform for ChIP-based next generation sequencing pipelines. In preparation. doi: https://doi.org/10.1101/2021.07.26.453821\n\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "PEGR Project Code of Conduct\n==============================\n\nThis code of conduct outlines our expectations for participants within the\nPEGR community, as well as steps to reporting unacceptable behavior. We are\ncommitted to providing a welcoming and inspiring community for all and expect\nour code of conduct to be honored. Anyone who violates this code of conduct may\nbe banned from the community.\n\nOur open source community strives to:\n\n* **Be friendly and patient.**\n\n* **Be welcoming**: We strive to be a community that welcomes and\n  supports people of all backgrounds and identities. This includes, but is not\n  limited to members of any race, ethnicity, culture, national origin, colour,\n  immigration status, social and economic class, educational level, sex, sexual\n  orientation, gender identity and expression, age, size, family status,\n  political belief, religion, and mental and physical ability.\n\n* **Be considerate**: Your work will be used by other people, and you in turn\n  will depend on the work of others. Any decision you take will affect users\n  and colleagues, and you should take those consequences into account when\n  making decisions. Remember that we're a world-wide community, so you might\n  not be communicating in someone else's primary language.\n\n* **Be respectful**: Not all of us will agree all the time, but disagreement is\n  no excuse for poor behavior and poor manners. We might all experience some\n  frustration now and then, but we cannot allow that frustration to turn into a\n  personal attack. It\u2019s important to remember that a community where people\n  feel uncomfortable or threatened is not a productive one.\n\n* **Be careful in the words that we choose**: We are a community of\n  professionals, and we conduct ourselves professionally. Be kind to others. Do\n  not insult or put down other participants. Harassment and other exclusionary\n  behavior aren't acceptable. This includes, but is not limited to: Violent\n  threats or language directed against another person, Discriminatory jokes and\n  language, Posting sexually explicit or violent material, Posting (or\n  threatening to post) other people\u2019s personally identifying information\n  (\u201cdoxing\u201d), Personal insults, especially those using racist or sexist terms,\n  Unwelcome sexual attention, Advocating for, or encouraging, any of the above\n  behavior, Repeated harassment of others. In general, if someone asks you to\n  stop, then stop.\n\n* **Try to understand why we disagree**: Disagreements, both social and\n  technical, happen all the time. It is important that we resolve disagreements\n  and differing views constructively. Remember that we\u2019re different. Diversity\n  contributes to the strength of our community, which is composed of people\n  from a wide range of backgrounds. Different people have different\n  perspectives on issues. Being unable to understand why someone holds a\n  viewpoint doesn\u2019t mean that they\u2019re wrong. Don\u2019t forget that it is human to\n  err and blaming each other doesn\u2019t get us anywhere. Instead, focus on helping\n  to resolve issues and learning from mistakes.\n\n### Diversity Statement\n\nWe encourage everyone to participate and are committed to building a community\nfor all. Although we will fail at times, we seek to treat everyone both as\nfairly and equally as possible. Whenever a participant has made a mistake, we\nexpect them to take responsibility for it. If someone has been harmed or\noffended, it is our responsibility to listen carefully and respectfully, and do\nour best to right the wrong.\n\nAlthough this list cannot be exhaustive, we explicitly honor diversity in age,\ngender, gender identity or expression, culture, ethnicity, language, national\norigin, political beliefs, profession, race, religion, sexual orientation,\nsocioeconomic status, and technical ability. We will not tolerate\ndiscrimination based on any of the protected characteristics above, including\nparticipants with disabilities.\n\n### Reporting Issues\n\nIf you experience or witness unacceptable behavior, or have any other concerns,\nplease report it to any combination of the following people:\n\n- Danying Shao (dus73@psu.edu)\n- William Lai (wkl29@cornell.edu)\n- Gretta D Kellogg (gretta.kellogg@psu.edu)\n\nAll reports will be handled with discretion. In your report please include:\n\n- Your contact information.\n\n- Names (real, nicknames, or pseudonyms) of any individuals involved. If there\n  are additional witnesses, please include them as well. Your account of what\n  occurred, and if you believe the incident is ongoing. If there is a publicly\n  available record (e.g. a mailing list archive or a public IRC logger), please\n  include a link.\n\n- Any additional information that may be helpful.\n\nAfter filing a report, a representative will contact you personally, review the\nincident, follow up with any additional questions, and make a decision as to\nhow to respond. If the person who is harassing you is part of the response\nteam, they will recuse themselves from handling your incident. If the complaint\noriginates from a member of the response team, it will be handled by a\ndifferent member of the response team. We will respect confidentiality requests\nfor the purpose of protecting victims of abuse.\n\n### Attribution & Acknowledgements\n\nThis code of conduct is based on the Open Code of Conduct from the Galaxy project.\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/seqcode/pegr"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nPEGR welcomes new development!  This document briefly describes how to \ncontribute to the [PEGR repository](https://github.com/seqcode/pegr).\n\n## Before you Begin\n\nIf you have an idea for a feature to add or an approach for a bugfix, it is\nbest to communicate with PEGR developers early. The primary venue for this is\nthe [GitHub issue tracker](https://github.com/seqcode/pegr/issues).\nBrowse through existing GitHub issues and if one seems related, comment on it.\n\n## Reporting a new issue\n\nIf no existing PEGR issue seems appropriate, a new issue can be opened using\n[this form](https://github.com/seqcode/pegr/issues/new).\n\n## How to Contribute\n\nAll changes to the [PEGR repository](https://github.com/seqcode/pegr) should be made through pull\nrequests (with just two exceptions outlined below).\n\nIf you are new to Git, the Software Carpentry's [Version Control with\nGit](https://swcarpentry.github.io/git-novice/) tutorial is a good place to\nstart.  More learning resources are listed at\nhttps://help.github.com/en/github/getting-started-with-github/git-and-github-learning-resources\n\n1. Make sure you have a free [GitHub](https://github.com/) account. To increase\n   the security of your account, we strongly recommend that you configure\n   [two-factor authentication](https://docs.github.com/en/github/authenticating-to-github/securing-your-account-with-two-factor-authentication-2fa).\n   Additionally, you may want to [sign your commits](https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification).\n\n2. Fork the [PEGR repository](https://github.com/seqcode/pegr) on\n   GitHub to make your changes.  To keep your copy up to date with respect to\n   the main repository, you need to frequently [sync your\n   fork](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/syncing-a-fork):\n\n   ```\n   $ git remote add upstream https://github.com/seqcode/pegr\n   $ git fetch upstream\n   $ git checkout dev\n   $ git merge upstream/dev\n   ```\n\n3. Choose the correct branch to develop your changes against.\n\n   * The `master` branch is kept in sync with the latest tagged release, but\n     should **not** be used as the base (i.e. target) branch of a pull request.\n\n   * Additions of new features to the codebase should be based off the `dev`\n     branch (`git checkout -b feature_branch dev`), with few\n     [exceptions](doc/source/project/organization.rst#handling-pull-requests).\n\n   * Most bug fixes should target the oldest supported release exhibiting the\n     issue (`git checkout -b bugfix_branch release_XX.XX`).\n\n   * Serious security problems should not be fixed via pull request.\n\n4. If your changes modify code please ensure the resulting files conform to\n   the code conventions [Google Style Guide](https://google.github.io/styleguide/javaguide.html)\n   for Groovy, JAVA and JavaScript respectively.\n\n5. Please run any existing tests that seem relevant. And if possible, also try to add new tests for the features added or bugs fixed\n   by your pull request.\n\n   Developers reviewing your pull request will be happy to help you add or run\n   the relevant tests as part of the pull request review process.\n\n6. Write a useful and properly formatted commit message. \n   Follow [these guidelines and template](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines),\n   in particular start your message with a short imperative sentence on a single\n   line, possibly followed by a blank line and a more detailed explanation.\n\n   In the detailed explanation it's good to include relevant external references\n   (e.g. GitHub issue fixed) using full URLs, and errors or tracebacks the\n   commit is supposed to fix.\n   You can use the Markdown syntax for lists and code highlighting, wrapping the\n   explanation text at 72 characters when possible.\n\n7. Commit and push your changes to your\n   [fork](https://help.github.com/en/github/using-git/pushing-commits-to-a-remote-repository).\n\n8. Open a [pull\n   request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request)\n   with these changes. Your pull request message ideally should include:\n\n   * Why you made the changes (e.g. references to GitHub issues being fixed).\n\n   * A description of the implementation of the changes.\n\n   * How to test the changes, if you haven't included specific tests already.\n\n9. The pull request should pass all the continuous integration tests which are\n   automatically started by GitHub using e.g. Travis CI.\n\n10. If, before your pull request is merged, conflicts arise between your branch\n    and the target branch (because other commits were pushed to the target\n    branch), you need to either:\n\n    1) [rebase your branch](https://git-scm.com/docs/git-rebase) on top of the\n       target branch, or\n    2) merge the target branch into your branch.\n\n    We recommend the first approach (i.e. rebasing) because it produces cleaner\n    git histories, which are easier to bisect. If your branch is called\n    `feature_branch` and your target branch is `dev`, you can rebase your branch\n    with the following commands:\n\n    ```\n    $ git checkout feature_branch\n    $ git pull\n    $ git fetch upstream\n    $ git rebase upstream/dev\n    ```\n\n    Once you have resolved the conflicts in all commits of your branch, you can\n    force-push the rebased branch to update the pull request:\n\n    ```\n    $ git push --force\n    ```\n\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-01-25T02:10:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-03T18:59:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Platform for Eukaryotic Genome Regulation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Platform for Epigenomic and Genomic Research (PEGR) is a web service platform that logs metadata for samples and sequencing experiment, manages the data processing workflows, and provides reporting and visualization. PEGR links together people, samples, protocols, sequencer and bioinformatics computation [1].\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/seqcode/pegr/wiki"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/seqcode/pegr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/seqcode/pegr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "seqcode/pegr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/18726510/145878749-9148ea49-2ef5-4276-a666-74d76abc8cca.png"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/18726510/145878772-fe397589-9d7c-4700-bfca-9c172f3d9c35.png"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/18726510/145878780-4fe88a96-a141-47be-a0a7-44837fa7da45.png"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/18726510/145878795-2cb55ba7-462e-4ea9-818c-c96f4818a3a2.png"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/18726510/145878801-26749c48-8298-46c9-ac08-62fd4fab9a17.png"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/seqcode/pegr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 PEGR.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pegr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "seqcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 1682885,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 252654,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 81647,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4672,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 2375,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2220,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 2138,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2022-03-30T17:40:13Z",
        "date_published": "2022-03-30T17:48:56Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.3.1",
        "release_id": 63184133,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/63184133",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/63184133",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-12-02T20:37:00Z",
        "date_published": "2021-12-03T18:55:53Z",
        "description": "Build on Java 11.",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.3.0",
        "release_id": 54600632,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/54600632",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/54600632",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-07-24T14:23:29Z",
        "date_published": "2021-07-24T14:37:16Z",
        "description": "Build on Java 8.",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.2.6",
        "release_id": 46715044,
        "tag": "v0.2.6",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/46715044",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/46715044",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-06-22T12:53:59Z",
        "date_published": "2021-06-22T13:02:32Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.2.5",
        "release_id": 45026852,
        "tag": "v0.2.5",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/45026852",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/45026852",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-05-26T03:23:19Z",
        "date_published": "2021-05-13T02:39:00Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.2.4",
        "release_id": 42879890,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/42879890",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/42879890",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-04-30T02:40:09Z",
        "date_published": "2021-05-03T12:46:20Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.2.3",
        "release_id": 42356838,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/42356838",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/42356838",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-04-13T18:31:20Z",
        "date_published": "2021-04-13T18:44:59Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.2.2",
        "release_id": 41372946,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/41372946",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/41372946",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2021-02-27T09:40:55Z",
        "date_published": "2021-03-18T11:27:30Z",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/v0.1-beta",
        "release_id": 39997797,
        "tag": "v0.1-beta",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/v0.1-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/39997797",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/39997797",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/v0.1-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dshao",
          "type": "User"
        },
        "date_created": "2019-08-12T12:34:38Z",
        "date_published": "2020-01-31T14:27:08Z",
        "description": "This version is based on Grails 2.",
        "html_url": "https://github.com/seqcode/pegr/releases/tag/0.00",
        "name": "Pre-release based on Grails 2",
        "release_id": 23290285,
        "tag": "0.00",
        "tarball_url": "https://api.github.com/repos/seqcode/pegr/tarball/0.00",
        "type": "Release",
        "url": "https://api.github.com/repos/seqcode/pegr/releases/23290285",
        "value": "https://api.github.com/repos/seqcode/pegr/releases/23290285",
        "zipball_url": "https://api.github.com/repos/seqcode/pegr/zipball/0.00"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "type": "Text_excerpt",
        "value": "A tested stack of versions is listed below.\n\n1. OpenJDK 11.0.12\n   - MacOS: We recommend Homebrew to install and manage Java 11\n      - Homebrew command to install and use Java 11:\n      ```\n      brew tap adoptopenjdk/openjdk\n      brew install --cask adoptopenjdk8\n      ```\n      - Java 11 executable is now located here:\n      ```\n      /Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/bin/java\n      ```\n2. MariaDB 10.5.5\n   - Linux: https://mariadb.org/download/\n   - MacOS: We recommend Hombrew to install and manage MariaDB\n   - https://mariadb.com/kb/en/installing-mariadb-on-macos-using-homebrew/\n   ```\n   $ brew install mariadb\n   ```\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:10:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "type": "Text_excerpt",
        "value": "1. Download the latest release of PEGR\n\n   - https://github.com/seqcode/pegr/releases\n\n   1.1 (MacOS only) Turn on MariaDB server\n   ```\n   $ mysql.server start\n   ``` \n\n   (Optional) To make MariaDB start automatically on system startup \n   ```\n   $ brew services start mariadb\n   ```\n\n2. Set up database. Create an empty database with utf8 coding, a database user, and assigning privileges.\n```\n$ mysql\n> CREATE DATABASE <DB_NAME> CHARACTER SET utf8 COLLATE utf8_general_ci;\n> CREATE USER '<USER_NAME>'@'localhost' IDENTIFIED BY '<USER_PASS>';\n> GRANT ALL PRIVILEGES ON <DB_NAME>.* TO '<USER_NAME>'@'localhost' with grant option;\n> FLUSH PRIVILEGES;\n> exit\n```\n<DB_NAME> : Name assigned to PEGR database\n\n<USER_NAME> : User ID that will access PEGR database\n\n<USER_PASS> : Password used by User ID to access PEGR database\n\n\nExample mySQL code provided here:\n```\n$ mysql\n> CREATE DATABASE pegrDB CHARACTER SET utf8 COLLATE utf8_general_ci;\n> CREATE USER 'pegruser'@'localhost' IDENTIFIED BY 'password';\n> GRANT ALL PRIVILEGES ON pegrDB.* TO 'pegruser'@'localhost' with grant option;\n> FLUSH PRIVILEGES;\n> exit\n```\n\n3. Import the baseline database and copy over the PDF files for the pre-defined protocols.\n   \nGeneric code:\n```\n$ mysql -u <USER_NAME> -p <DB_NAME> < sample_files/pegr_baseline.sql \n```\nCode following example above:\n```\n$ mysql -u pegruser -p pegrDB < sample_files/pegr_baseline.sql\n```\nThe baseline database has pre-defined item types and protocols. The PDF files for the  pre-defined protocols are provided in the folder \"sample_files/protocols\". Copy the \"protocols\" folder into your selected folder that stores uploaded data:\n\nGeneric code:\n```\n$ cp -r sample_files/protocols /path/to/store/uploaded/data\n```\nCode following example above:\n```\n$ cp -r sample_files/protocols /tmp/\n```\n\n<details close>\n<summary>pegrDB MariaDB Schema</summary>\n<br>\n\n   Alignment schema:\n   ![AlignmentTables](https://user-images.githubusercontent.com/18726510/145878749-9148ea49-2ef5-4276-a666-74d76abc8cca.png)\n   \n   Authorization schema:\n   \n   ![AuthorizationTables](https://user-images.githubusercontent.com/18726510/145878772-fe397589-9d7c-4700-bfca-9c172f3d9c35.png)\n   \n   Experiment schema:\n   ![ExperimentTables](https://user-images.githubusercontent.com/18726510/145878780-4fe88a96-a141-47be-a0a7-44837fa7da45.png)\n   \n   Sample schema:\n   ![SampleTables](https://user-images.githubusercontent.com/18726510/145878795-2cb55ba7-462e-4ea9-818c-c96f4818a3a2.png)\n   \n   Sequencing schema:\n   ![SequencingTables](https://user-images.githubusercontent.com/18726510/145878801-26749c48-8298-46c9-ac08-62fd4fab9a17.png)\n   \n\n</details>\n\n4. Create a config file 'pegr-config.properties' in the folder {userHome}/.grails/ for the environment variables, e.g. the information on database connection, NGS repository connection, email connection and Single Sign On.\n\nA sample config file 'pegr-config.properties' is inlcuded in the sample_files folder https://github.com/seqcode/pegr/tree/master/sample_files. \n```\n$ mkdir ~/.grails/\n$ cp sample_files/pegr-config.properties ~/.grails/\n```\n\nNot all pegr-config.properites need to be filled out for PEGR to function. Below are the minimum properties needed to be set.\nGeneric 'pegr-config.properties':\n```\ndataSource.url= jdbc:mysql://localhost/<DB_NAME>?useUnicode=true&characterEncoding=UTF-8\ndataSource.username=<USER_NAME>\ndataSource.password=<USER_PASS>\nsso.url=none\nsso.type=none\nsso.principle=none\nfilesroot=/path/to/store/uploaded/data\n```\n\nSample 'pegr-config.properties' following example above:\n```\ndataSource.url= jdbc:mysql://localhost/pegrDB?useUnicode=true&characterEncoding=UTF-8\ndataSource.username=pegruser\ndataSource.password=password\nsso.url=none\nsso.type=none\nsso.principle=none\nfilesroot=/tmp\n```\nMore detailed instructions on the config file are provided at https://github.com/seqcode/pegr/wiki/Configurations.\n\n5. Start PEGR.\n\n```\n$ java -Dgrails.env=prod -jar pegr.war\n```\n\n6. Go to http://localhost:8080/pegr/ in your browser to see the PEGR login page.\n\nDefault login is user name \"labadmin\" and password \"labadmin\". **Change the password right away at the user's profile page.**\n\nFor more information, please visit https://github.com/seqcode/pegr/wiki.\n"
      },
      "source": "https://raw.githubusercontent.com/seqcode/pegr/master/README.md",
      "technique": "header_analysis"
    }
  ]
}