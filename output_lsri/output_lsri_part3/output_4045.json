{
  "application_domain": [
    {
      "confidence": 21.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tsudalab/BLOX"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-15T15:24:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T01:37:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BoundLess Objective-free eXploration (BLOX) for discovery of out-of-trend materials"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9874787639371175,
      "result": {
        "original_header": "BLOX",
        "type": "Text_excerpt",
        "value": "Python implementation of BoundLess Objective-free eXploration (BLOX)* for discovery of out-of-trend materials using Stein novelty.  \n"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tsudalab/BLOX/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tsudalab/BLOX/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tsudalab/BLOX"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BLOX"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BLOX"
        ],
        "type": "Text_excerpt",
        "value": "Download or clone the github repository, e.g., git clone https://github.com/tsudalab/BLOX\n"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tsudalab/BLOX/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Tsuda Laboratory\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BLOX"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "tsudalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 13579,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "BLOX"
        ],
        "type": "Text_excerpt",
        "value": "- Python > 3.6\n"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:58:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "BLOX"
        ],
        "type": "Text_excerpt",
        "value": "- Preparation\n  - feature_list_of_observed_data.csv: Feature list of the observed materials. As an example, morgan fingerprints of 10 ZINC molecules are prepared. \n  - properties_of_observed_data.csv: List of the observed properties by experiment or simulation. The lengths of \"feature_list_of_observed_data.csv\" and \"properties_of_observed_data.csv\" should be the same. Here, we prepared three properties: 1 absorption wavelength, 2 intensity, and 3 molecular weight data. The absorption wavelength and intensity data were calculated by DFT simulations.\n  - feature_list_of_unchecked_data.csv: Feature list of the unchecked materials. Here, we prepared morgan fingerprints of 100 ZINC molecules.\n  - properties_of_unchecked_data.csv: Please note that these data are not prepared in the actual situation. Here, to demonstrate BLOX, we calculated absorption wavelength, intensity, and molecular weight data of the unchecked data in advance.\n\n- Exploration by BLOX\n  - `python explore_by_BLOX.py feature_list_of_observed_data.csv feature_list_of_unchecked_data.csv properties_of_observed_data.csv --prediction_model RF --iteration_num 20 --dimension 2`\n  - The plotted image of observed data and recommended data is saved in the fig directory.\n  - The prediction model can be set as '--prediction model RF' for random forest.  \n  - The kernel parameter of the kernelized Stein discrepancy can be set as '--sigma XX' without '--adaptive' option.\n  - If the dimension is set as 2 (--dimension 2), the absorption wavelength and intensity properties are used for exploration. If the parameter is set as 3, all 3 properties are used. \n\n\n- Recommend the next candidate by Stein novelty\n  - `python recommend_next_data.py feature_list_of_observed_data.csv feature_list_of_unchecked_data.csv properties_of_observed_data.csv --dimension 2`\n  - The recommend candidate and its predicted properties are saved in \"recommend_data_by_Stein_novelty.csv.\"\n\n"
      },
      "source": "https://raw.githubusercontent.com/tsudalab/BLOX/master/README.md",
      "technique": "header_analysis"
    }
  ]
}