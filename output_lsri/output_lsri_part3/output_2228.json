{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/loolab2020/ClipsMS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-18T05:46:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-27T14:34:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Comprehensive Localization of Internal Protein Sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9573757826964032,
      "result": {
        "type": "Text_excerpt",
        "value": "Software that can analyze terminal and internal fragments in top-down mass spectrometry data.\nInstallation Instructions:\n1.\tMake sure that your device is running at least python 3.7.\n2.\tClick on \u201cReleases\u201d on GitHub on the right side of your window.\n3.\tGo to your downloads folder and extract the files.\n4.\tPlace the unzipped file where it will be easy to find.\n5.\tDouble click the ClipsMS_2.0.1.exe file in the unzipped folder to run the program.\nProgram instructions:\n1.\tRun the ClipsMS_2.0.1.exe file.\n2.\tInsert user parameters into the GUI that appears. \nA. Insert a PPM error tolerance value for terminal and internal fragments. (We recommended a PPM error of less than 2 to reduce false positives when searching for internal fragments)\nB. Insert the protein sequence you want to compare the fragments against in the sequence box.\nC. Insert a number for the smallest internal fragment size. (We recommend 5 amino acids for most proteins.) \nD. Click \"Observed Fragments\" and upload a .csv file with the deconvoluted masses ([M+H]+ format) in column 1 and the intensities in column 2. (If the intensity is not known, insert \"1\" for all intensity values) \nE. Choose a terminal modification if you expect one on your protein. If a terminal modification exists on the protein but does not show up in the list, treat it as a localized modification and place it on the first/last amino acid. \nF. To insert localized modifications, upload a .csv file by clicking the \"Localized Modifications\" tab. The .csv file should have 4 columns including name of the modification in column 1, the monoisotopic molecular weight in column 2, the amino acid number that contains the modifications in column 3, and a color in the column 4 (all lower case and no spaces). For an example of the format, open the No_Localized_Modificaitons.csv file.\nG. To insert unlocalized modifications, upload a .csv file by clicking the \"Unlocalized Modifications\" tab. The .csv file should have 12 columns. For an example of the format, open the No_Unlocalized_Modificaitons.csv file.\ni. Column 1 should contain the name of the modification and column 2 should contain the monoisotopic molecular weight of the modification. \nii. To limit modification assignment to fragments containing specific amino acid(s), insert the one letter amino acid code(s) the modification ascribes to column 3 and the number of amino acids the fragment must contain to column 4. If not applicable, write \u201cNone\u201d in column 3 and \u201c0\u201d in column 4.\niii. To limit the modification to contain part of a region of the protein, insert the number of the amino acid that is closest to the N-terminus in column 5 and the number of the amino acid closest to the C-terminus in column 6. If not applicable, write \u201c0\u201d in column 5 and \u201c0\u201d in column 6. \niv. To limit the modification to contain an entire region, insert the number of the amino acid that is closest to the N-terminus in column 7 and the number of the amino acid closest to the C-terminus in column 8. If not applicable, write \u201c0\u201d in column 7 and \u201c0\u201d in column 8. \nv. To apply a link to two amino acids in the same protein chain, insert a name for the link in column 9, the number of the amino acid that is closest to the N-terminus in column 10, and the number of the amino acid closest to the C-terminus in column 11. If not applicable, write \u201cNone\u201d in column 9, \u201c0\u201d in column 10, and \u201c0\u201d in column 11.\nvi. Lastly, write a color that represents the modification in column 12 (all lower case and no spaces).\nH. Select the fragmentation technique used for the TD-MS experiment. This will preselect certain fragment types that are expected for that technique. \nI. If you would like to include/exclude certain fragment types they can be checked/unchecked under \"Search Fragment Type\". \nJ. If you are searching for fragments that contain c or z cleavages, you can exclude cleavages that occur at proline residues by checking the last box.\n3.\tOnce all parameters have been input, click \"Run Program\".\n4.\tIf you are looking for both internal and terminal fragments, a dialog box will ask if you want to bias for terminal fragments. Click \"Yes\" if you want to bias for terminal fragments or \"No\" if you want to treat terminal fragments and internal fragments equally likely.\n5.\tDepending on the sequence length, the number of observed fragments, and the types of fragments searched, the program could run from ~5s to ~1hour. A progress bar should appear in the dialog box indicating the progress of ClipsMS.\n6.\tOnce completed, a \"Matched_Fragments_Final.csv\" file should appear in the \"ClipsMS_2.0.0\" folder with all matched fragments.\n7.\tIn addition, three figures should automatically pop up indicating the sequence coverage, the cleavage sites, and the fragment location. \n8.\tIf you have any questions email: internalfragments.loolab@gmail.com\n \n"
      },
      "source": "https://raw.githubusercontent.com/loolab2020/ClipsMS-Version-1.0.0/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/loolab2020/ClipsMS-Version-1.0.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/loolab2020/ClipsMS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "loolab2020/ClipsMS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/loolab2020/ClipsMS-Version-1.0.0/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/loolab2020/ClipsMS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License (modified)\n\nCopyright (c) 2020\n\nPermission is hereby granted, free of charge, to any person or organisation obtaining a copy\nof this software and associated documentation files (\"ClipsMS_v2.0.1\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, merge, and/or publish copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\na) modifications to the code will be deemed as no longer property of the authors and any damages caused by modifications of the code will not be liable on the authors\nb) sale of the code to other parties is strictly prohibited under NIH/NSF grant funding schemes \n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nAny use of this code for publications should cite \"ClipsMS: An Algorithm for Analyzing Internal Fragments Resulting from Top-Down Mass Spectrometry\"\n"
      },
      "source": "https://raw.githubusercontent.com/loolab2020/ClipsMS-Version-1.0.0/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ClipsMS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "loolab2020"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 704570,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/loolab2020/ClipsMS-Version-1.0.0/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "loolab2020",
          "type": "User"
        },
        "date_created": "2022-07-22T18:58:17Z",
        "date_published": "2022-07-23T00:09:07Z",
        "description": "This release has minor bug fixes including a bug causing the statistics file to remain locked until ClipsMS is closed.",
        "html_url": "https://github.com/loolab2020/ClipsMS/releases/tag/ClipsMS_v2.0.1",
        "name": "ClipsMS_v2.0.1",
        "release_id": 72587404,
        "tag": "ClipsMS_v2.0.1",
        "tarball_url": "https://api.github.com/repos/loolab2020/ClipsMS/tarball/ClipsMS_v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/loolab2020/ClipsMS/releases/72587404",
        "value": "https://api.github.com/repos/loolab2020/ClipsMS/releases/72587404",
        "zipball_url": "https://api.github.com/repos/loolab2020/ClipsMS/zipball/ClipsMS_v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "loolab2020",
          "type": "User"
        },
        "date_created": "2022-05-30T01:57:51Z",
        "date_published": "2022-05-30T03:55:24Z",
        "html_url": "https://github.com/loolab2020/ClipsMS/releases/tag/ClipsMS_v2.0.0",
        "name": "ClipsMS_v2.0.0",
        "release_id": 68107975,
        "tag": "ClipsMS_v2.0.0",
        "tarball_url": "https://api.github.com/repos/loolab2020/ClipsMS/tarball/ClipsMS_v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/loolab2020/ClipsMS/releases/68107975",
        "value": "https://api.github.com/repos/loolab2020/ClipsMS/releases/68107975",
        "zipball_url": "https://api.github.com/repos/loolab2020/ClipsMS/zipball/ClipsMS_v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "loolab2020",
          "type": "User"
        },
        "date_created": "2022-05-30T01:57:51Z",
        "date_published": "2022-05-30T02:00:26Z",
        "html_url": "https://github.com/loolab2020/ClipsMS/releases/tag/ClipsMS_v1.1.0",
        "name": "ClipsMS_v1.1.0",
        "release_id": 68108230,
        "tag": "ClipsMS_v1.1.0",
        "tarball_url": "https://api.github.com/repos/loolab2020/ClipsMS/tarball/ClipsMS_v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/loolab2020/ClipsMS/releases/68108230",
        "value": "https://api.github.com/repos/loolab2020/ClipsMS/releases/68108230",
        "zipball_url": "https://api.github.com/repos/loolab2020/ClipsMS/zipball/ClipsMS_v1.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:13:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}