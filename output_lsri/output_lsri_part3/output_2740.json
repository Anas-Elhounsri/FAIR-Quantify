{
  "application_domain": [
    {
      "confidence": 31.03,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "This project was inspired by ![ARMOR](https://github.com/csoneson/ARMOR), if you work with RNA-seq data check it out!\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing ARPEGGIO",
        "type": "Text_excerpt",
        "value": "Milosavljevic, S., Kuo, T., Decarli, S. et al. ARPEGGIO: Automated Reproducible Polyploid EpiGenetic GuIdance workflOw. BMC Genomics 22, 547 (2021). https://doi.org/10.1186/s12864-021-07845-2\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/supermaxiste/ARPEGGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-11T13:36:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-05T14:05:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A SnakeMake workflow to analyse whole genome bisulfite sequencing data from allopolyploids."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9989690445101501,
      "result": {
        "original_header": "ARPEGGIO: Automated Reproducible Polyploid EpiGenetic GuIdance wOrkflow",
        "type": "Text_excerpt",
        "value": "ARPEGGIO is a snakemake workflow that analyzes whole genome bisulfite sequencing (WGBS) data coming from (allo)polyploid species. The workflow includes all basic steps in WGBS data analysis (trimming, quality check and alignment), a read sorting tool specific for allopolyploids, the most comprehensive statistical tool for Differential Methylation (DM) analysis and a set of downstream analyses to obtain a list of genes showing differential methylation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9991668273404306,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "In the last decade, the use of High-Throughput Sequencing (HTS) technologies has become widespread across life sciences. With technology not being a bottleneck anymore, the new challenge with HTS data has shifted towards data analysis.\nTo process and analyze WGBS data, many tools exist, but most of them were developed and/or tested with a focus on diploid model species. For polyploid species there are some complexities that are often not taken into account. One example is the large amount of duplicated genes in polyploids (homeologous genes) which might be challenging at the mapping step and influence downstream analyses.\nTo help with the analysis of polyploid WGBS data we developed ARPEGGIO: an automated and reproducible workflow which aims at being easy to set up and use.\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962704585611253,
      "result": {
        "original_header": "Why ARPEGGIO?",
        "type": "Text_excerpt",
        "value": "ARPEGGIO is easily setup with one configuration file and once ready, it will automatically analyse your WGBS data to provide a list of differentially methylated regions (DMRs). Thanks to Snakemake, a human readable, Python based language for workflows and Conda, a widely-used package manager, ARPEGGIO takes care of installing all the software needed fo the analyses and running all the steps in the workflow in the correct order. ARPEGGIO also ensures reproducibility of your analysis, you only need to share your configuration and your initial raw data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989424358943351,
      "result": {
        "original_header": "What's new in ARPEGGIO?",
        "type": "Text_excerpt",
        "value": "Besides the workflow itself (which is already quite a lot of new), ARPEGGIO includes an allopolyploid specific read-sorting algorithm that has been adapted to deal with BS-seq data: [EAGLE-RC](https://github.com/tony-kuo/eagle). Check out the papers [\"Homeolog expression quantification methods for allopolyploids\"](https://doi.org/10.1093/bib/bby121) and [\"EAGLE: Explicit Alternative Genome Likelihood Evaluator\"](https://doi.org/10.1186/s12920-018-0342-1) by Kuo _et al._ for more details. Together with EAGLE-RC, there's also `dmrseq`: an R package for differential methylation analysis. This package has one of the most comprehensive approaches to deal with WGBS data problems: mainly statistical and computational. If you're curious check out [\"Detection and accurate false discovery rate control of differentially methylated regions from whole genome bisulfite sequencing\"](https://doi.org/10.1093/biostatistics/kxy007) by Korthauer _et al_.\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/supermaxiste/ARPEGGIO/wiki"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/supermaxiste/ARPEGGIO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/supermaxiste/ARPEGGIO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "supermaxiste/ARPEGGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/harp.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/sticker_try5.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/csoneson/ARMOR"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "To install this workflow you first need to [install Snakemake via Conda](https://snakemake.readthedocs.io/en/stable/getting_started/installation.html). To further ensure reproducibility you can also install [Singularity](http://singularity.lbl.gov/). Once everything is set up, run the following commands to clone the ARPEGGIO repository to your computer and run the workflow. With Conda only:\n\n```\ngit clone https://github.com/supermaxiste/ARPEGGIO\ncd ARPEGGIO\nsnakemake --use-conda\n```\n\nWith Conda and Singularity:\n\n```\ngit clone https://github.com/supermaxiste/ARPEGGIO\ncd ARPEGGIO\nsnakemake --use-conda --use-singularity\n```\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup and run",
        "type": "Text_excerpt",
        "value": "Check out the [Wiki](https://github.com/supermaxiste/ARPEGGIO/wiki) to set up and run ARPEGGIO. If you're in a hurry you can also find a Quick Setup section. The Wiki will help you better understand the workflow design, input, output and summary files.\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9997786780443901,
      "result": {
        "original_header": "Why ARPEGGIO?",
        "type": "Text_excerpt",
        "value": "ARPEGGIO is easily setup with one configuration file and once ready, it will automatically analyse your WGBS data to provide a list of differentially methylated regions (DMRs). Thanks to Snakemake, a human readable, Python based language for workflows and Conda, a widely-used package manager, ARPEGGIO takes care of installing all the software needed fo the analyses and running all the steps in the workflow in the correct order. ARPEGGIO also ensures reproducibility of your analysis, you only need to share your configuration and your initial raw data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8536092454918122,
      "result": {
        "original_header": "ARPEGGIO: Automated Reproducible Polyploid EpiGenetic GuIdance wOrkflow",
        "type": "Text_excerpt",
        "value": "<img align=\"right\" width=\"150\" height=\"177\" src=\"images/sticker_try5.png\"> \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8375821387998006,
      "result": {
        "original_header": "Workflow overview",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n  <img src=\"images/ARPEGGIO_scheme.png\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/supermaxiste/ARPEGGIO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "allopolyploid, automation, bisulfite-sequencing, dna-methylation, epigenetics, plants, reproducibility, snakemake, whole-genome-sequencing, workflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Stefan Milosavljevic\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/images/ARPEGGIO_scheme.png"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ARPEGGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "supermaxiste"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 133089,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 10739,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 4015,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "supermaxiste",
          "type": "User"
        },
        "date_created": "2021-01-22T09:19:28Z",
        "date_published": "2021-01-25T09:23:55Z",
        "description": "New version of ARPEGGIO formatted following the new code standards available via the `snakemake --lint` command. In addition all the tools have been updated to their latest versio and minor fixes have been implemented. For details see the log below:\r\n\r\nUpdates in ARPEGGIO v3:\r\n\r\n### Major\r\n\r\n - Code adapted to follow `snakemake --lint` standards (https://snakemake.readthedocs.io/en/stable/snakefiles/writing_snakefiles.html?highlight=lint#best-practices)\r\n - New GitHub action to format code with `snakefmt`(https://github.com/snakemake/snakefmt)\r\n - Added rule in Snakefile to check config file for mistakes in the conditional parameters\r\n - ARPEGGIO is now tested with [GitHub Actions](https://github.com/supermaxiste/ARPEGGIO/actions) and not with TravisCI anymore\r\n\r\n### Minor\r\n\r\n - Added minimum Snakemake version requirement (`5.20.1` shown also with badge on Readme)\r\n - Added temporary files in the methylation extraction rules to remove large unused context files and save disk space\r\n - Added `--scaffolds` option to prevent errors by Bismark when using unfinished genomes (new option added to config file as well)\r\n - Fixed input conditions for `DIPLOID_ONLY` and `POLYPLOID_ONLY` modes\r\n - Updated tools' versions:\r\n```\r\n trim-galore=0.6.5 -> 0.6.6\r\n fastqc=0.11.8 -> 0.11.9\r\n bismark=0.22.3 -> 0.23.0\r\n samtools=1.10 -> 1.11\r\n multiqc=1.8 -> 1.9\r\n bioconductor-dmrseq=1.6.0 -> 1.10.0\r\n r-base=3.6.2 -> 4.0.3\r\n r-data.table=1.12.8 -> 1.13.6\r\n bedtools=2.29.1 -> 2.29.2\r\n r-stringi=1.4.3 -> 1.5.3\r\n```",
        "html_url": "https://github.com/supermaxiste/ARPEGGIO/releases/tag/v3.0.0",
        "name": "ARPEGGIO v3",
        "release_id": 36846285,
        "tag": "v3.0.0",
        "tarball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/tarball/v3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/36846285",
        "value": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/36846285",
        "zipball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/zipball/v3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "supermaxiste",
          "type": "User"
        },
        "date_created": "2020-02-19T10:07:22Z",
        "date_published": "2020-02-19T10:17:24Z",
        "description": "In this new complete version of ARPEGGIO we have:\r\n\r\n * Full Conda support, with no need to install anything other than Snakemake\r\n * Full Singularity support, meaning that ARPEGGIO can be run in a container (still using Conda)\r\n * Complete set of analyses with 7 steps: conversion check, quality check, trimming, alignment, deduplication, read sorting, methylation extraction, statistical analyses and downstream analyses on differentially methylated regions\r\n * Different modes supporting 3 experimental designs: polyploid vs diploid parents, polyploid vs polyploid (different conditions) and diploid vs diploid (different conditions)\r\n * Optimal multithreading: ARPEGGIO's rule granularity makes full use of Snakemake's multi-threading option\r\n * A Wiki page provides step-by-step explanations on how to setup and run ARPEGGIO together with some advanced information for more interested users",
        "html_url": "https://github.com/supermaxiste/ARPEGGIO/releases/tag/v2.0.0",
        "name": "ARPEGGIO Complete",
        "release_id": 23798031,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/23798031",
        "value": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/23798031",
        "zipball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "supermaxiste",
          "type": "User"
        },
        "date_created": "2019-08-08T09:18:01Z",
        "date_published": "2019-08-08T09:22:37Z",
        "description": "This release includes the first 4 steps of Whole Genome Bisulfite Sequencing data analysis: Quality Control (trimming and quality check), Alignment (Bismark), Read-Sorting (eagle-rc) and Differential Methylation analysis (dmrseq). ",
        "html_url": "https://github.com/supermaxiste/ARPEGGIO/releases/tag/v1.0.0",
        "name": "ARPEGGIO Skeleton",
        "release_id": 19158758,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/19158758",
        "value": "https://api.github.com/repos/supermaxiste/ARPEGGIO/releases/19158758",
        "zipball_url": "https://api.github.com/repos/supermaxiste/ARPEGGIO/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup and run",
        "type": "Text_excerpt",
        "value": "Check out the [Wiki](https://github.com/supermaxiste/ARPEGGIO/wiki) to set up and run ARPEGGIO. If you're in a hurry you can also find a Quick Setup section. The Wiki will help you better understand the workflow design, input, output and summary files.\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:08:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting and support",
        "type": "Text_excerpt",
        "value": "Google doesn't help? Are you stuck on an error that no one else seems to be having? Have you checked all the pages mentioning your problem but the solutions are not suitable? On the Wiki there's a list of common problems together with some general solutions. If that didn't work either, feel free to open an issue. Please make sure to describe your problem/errors and your trials in detail so that you can get the best help possible.\n"
      },
      "source": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/supermaxiste/ARPEGGIO/master/Snakefile"
      },
      "technique": "file_exploration"
    }
  ]
}