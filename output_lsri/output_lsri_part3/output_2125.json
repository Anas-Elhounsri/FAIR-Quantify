{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "1. Pertea, M., Pertea, G., Antonescu, C. et al. StringTie enables improved reconstruction of a transcriptome from RNA-seq reads. Nat Biotechnol 33, 290\u2013295 (2015). https://doi.org/10.1038/nbt.3122\n2. Kent WJ, Sugnet CW, Furey TS, et al. The human genome browser at UCSC. Genome Res. 2002;12(6):996\u20101006. doi:10.1101/gr.229102\n3. Kim D, Langmead B, Salzberg SL. HISAT: a fast spliced aligner with low memory requirements. Nat Methods. 2015;12(4):357\u2010360. doi:10.1038/nmeth.3317\n4. Andrew D Yates, Premanand Achuthan, Wasiu Akanni, James Allen, Jamie Allen, Jorge Alvarez-Jarreta, M Ridwan Amode, Irina M Armean, Andrey G Azov, Ruth Bennett, Jyothish Bhai, Konstantinos Billis, Sanjay Boddu, Jos\u00e9 Carlos Marug\u00e1n, Carla Cummins, Claire Davidson, Kamalkumar Dodiya, Reham Fatima, Astrid Gall, Carlos Garcia Giron, Laurent Gil, Tiago Grego, Leanne Haggerty, Erin Haskell, Thibaut Hourlier, Osagie G Izuogu, Sophie H Janacek, Thomas Juettemann, Mike Kay, Ilias Lavidas, Tuan Le, Diana Lemos, Jose Gonzalez Martinez, Thomas Maurel, Mark McDowall, Aoife McMahon, Shamika Mohanan, Benjamin Moore, Michael Nuhn, Denye N Oheh, Anne Parker, Andrew Parton, Mateus Patricio, Manoj Pandian Sakthivel, Ahamed Imran Abdul Salam, Bianca M Schmitt, Helen Schuilenburg, Dan Sheppard, Mira Sycheva, Marek Szuba, Kieron Taylor, Anja Thormann, Glen Threadgold, Alessandro Vullo, Brandon Walts, Andrea Winterbottom, Amonida Zadissa, Marc Chakiachvili, Bethany Flint, Adam Frankish, Sarah E Hunt, Garth IIsley, Myrto Kostadima, Nick Langridge, Jane E Loveland, Fergal J Martin, Joannella Morales, Jonathan M Mudge, Matthieu Muffato, Emily Perry, Magali Ruffier, Stephen J Trevanion, Fiona Cunningham, Kevin L Howe, Daniel R Zerbino, Paul Flicek, Ensembl 2020, Nucleic Acids Research, Volume 48, Issue D1, 08 January 2020, Pages D682\u2013D688, https://doi.org/10.1093/nar/gkz966\n5. Andrews, S. FASTQC. A quality control tool for high throughput sequence data (2010).\n6. Martin, M. Cutadapt removes adapter sequences from high-throughput sequencing reads. EMBnet.journal 17, 10, doi:10.14806/ej.17.1.200 (2011).\n \nIf you have any questions or suggestions please feel free to email: ryan.lusk@cuanschutz.edu\n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luskry/aptardi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-01-28T17:58:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-16T18:13:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aptardi"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "High throughput RNA sequencing (RNA-Seq) is a powerful tool for characterizing and quantitating the expressed transcriptome. Yet constructing the transcriptome from RNA-Seq data alone is a challenging task, particularly at transcript boundaries such as the 3' end, i.e. the polyadenylation (polyA) site. \n\nAs a result, some have utilized the information afforded by DNA sequence to identify polyA sites. However, DNA sequence alone does not consider expression of specific samples, information that is crucial for studies concerned with the role of alternative polyadenylation on health and disease. \n\nTo overcome these limitations, here we introduce aptardi, which combines both RNA-Seq data and DNA sequence. Namely, aptardi takes as input a transcriptome (gtf/gff format), possibly constructed from RNA-Seq data, and combines RNA-Seq data from the sample with the genome (DNA sequence) of the sample to identify 3' ends of transcripts using machine learning. The output of aptardi is a new gtf/gff file that incorporates transcripts identified by aptardi. Note that aptardi does not evaluate intron junctions but rather only evalutes 3' terminal exons of input transcripts and annotates 3' ends accordingly.\n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9298952062168443,
      "result": {
        "original_header": "aptardi",
        "type": "Text_excerpt",
        "value": "***a**lternative **p**olyadenylation **t**rascriptome **a**nalysis from **R**NA sequencing and **D**NA sequencing **i**nformation* \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9318762355938685,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "\t\n\tRequired arguments\n\t\n\t--o <output directory>\t\t\tAbsolute directory path with read/write permissions \n\t--f <fasta file>\t\t\tFasta file where headers are chromosomes\n\t--r <input gtf file or stdin>\t\tTranscript file in gtf/gff format (or standard output from pipe) - this tool was designed to take the output of StringTie, but other formats may work\n\t--b <bam file>\t\t\t\tSorted bam file of aligned RNA-Seq reads\n\t\n\t1. Mode 1: Using pre-built model (canonical usage)\n\t\n\t\tAdditional required arguments\n\t\t\n\t\t--n/-n <model file>\t\tLocation of model (model.hdf5) downloaded from src/aptardi/ml_scale folder\n\t\t--t/-t <scale file>\t\tLocation of scale (scale.pk) downloaded from src/aptardi/ml_scale folder \n\t\t\n\t2. Mode 2: Building your own model (non-canonical usage)\n\t\n\t\t--m/-m <machine learning mode>\tEnables Mode 2, building your own model, requires reliable genomic locations of polyA sites as the gold standard labels to train model\n\t\t\n\t\tAdditional required arguments\n\t\t\n\t\t--e/-e <model name>\t\tName to save custom model in output directory\n\t\t--k/-k <scale name>\t\tName to save custom model's scale in output directory\n\t\t--s/-s <polyA sites file>\tTab separated file containing gold standard polyA sites for training model\n\t\t--l/-l <int,int,int>\t\t0-based coordinates of chromosome, strand, and site columns in polyA sites file (comma separated list with no spaces)\n\t\t\n\t\tAdditional optional arguments\n\t\t\n\t\t--c/-c <int>\t\t\tSet seed for reproducibly building model\n\t\t\n\tUniversal optional arguments\n\t\t--g/-g <output gtf file>\tName to save output gtf file in output directory\n\t\t-h <help>\t\t\tPrints help/usage\n\t\t--version/-v <version>\t\tPrints version\n\t\t--d/-d <debugging>\t\tSaves intermediate files to facilitate debugging\n\t\t-verbose/-vb <verbose>\t\tPrints progress to standard output\n\t\t--i/-i <int>\t\t\tMaximum length analyzed per transcript (default: 300, which is number of bins analyzed, i.e 300 and bin size of 100 = 300 * 100 = 30,000 bases long transcript) \n\t\t--p/-p <float>\t\t\tProbability threshold, predictions >= threshold are labeled transription stop site (default: 0.5, value must be constrained by (0, 1))\n\t\t--a/-a <fr or rf>\t\tUpstream/downstream mate orientations for paired-end alignment against the forward reference strand, fr = firststrand (appropriate for Illumina paired-end library pre, rf = secondstrand (default: fr)\n\t\t--w/-w <int>\t\t\tSize of bin to make predictions on (default: 100, choices: 25-200 in 25 base increments, we DO NOT recommend altering this argument using the pre-built model since this model was built using 100 base bins)\n \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8045416087246657,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Aptardi analyzes the input gtf file and outputs a new gtf file with aptardi transcripts added along with original transcripts, i.e. aptardi does not remove any transcripts from the input transcriptome. The new gtf file can be used for downstream analyses (i.e. quantitation and systems studies) in the same manner as the input gtf file. Note by default aptardi writes to standard output.\n \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9856520999591035,
      "result": {
        "original_header": "Filtering",
        "type": "Text_excerpt",
        "value": "Since aptardi identifies **genomic** regions to annotate polyA sites, we HIGHLY RECOMMEND filtering to remove redundant, i.e. false positive, aptardi transcripts, especially if your input transcriptome has many transcript isoforms that share 3' terminal exons. For example, if aptardi probes the same region for two transcript isoforms and identifies a polyA site, it will enumerate an aptardi transcript for both isoforms (i.e. add two additional aptardi transcripts to make four total) when the polyA site may truly represent an APA transcript for a single of these two isoforms. In our recent work where we applied aptardi to ~100 RNA-Seq samples, we found a relatively conservative filter of removing transcripts without at least one count in 2/3 of samples does a good job of identifying high quality aptardi transcripts (we will be sure to add a link to the paper when published). If you are working with fewer or a single sample, simply using a threshold will likely also work, but this exact number may depend on your dataset. Here is a summary of our filtering pipeline: \n\t1. Quantitate aptardi transcriptome with RSEM\n\t2. Generate high quality transcriptome by removing transcripts without at least 1 count in 2/3 of samples\n\t3. Proceed with downstream analyses (we re-quantitated the high quality transcriptome with RSEM to perform differential expression analysis)\n\t \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9266110276884871,
      "result": {
        "original_header": "Generating required input files",
        "type": "Text_excerpt",
        "value": "\tTwo options:\n\t1. [Reference genome with headers as chromosomes](https://hgdownload.soe.ucsc.edu/downloads.html)\n\t2. Sample specific genome (user generated)\n\t\n2. Sorted bam file\n\tNote: Prior to aligning reads to the genome, we recommend assessing read quality with a tool such as [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and performing any processing steps based on the results (e.g. trim adapters with [Cutadapt](https://cutadapt.readthedocs.io/en/stable/installation.html)) \n\t\n\t\tEx. Using HISAT2 with paired end, stranded reads generated from Illumina's protocol (i.e. firststrand)\n\t\t(hisat2 -q -p 5 --reorder -t --rna-strandness RF --dta -x <hisat2_index> -1 <myfq1_1.fq,myfq2_1.fq,etc> -2 <myfq1_2.fq,myfq2_2.fq,etc> | samtools view -F 0x4 -bS - | samtools sort - -o sorted.bam 2> sum_sorted_bam.txt \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/luskry/aptardi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luskry/aptardi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "luskry/aptardi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/119283548"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation (~10 min)",
        "type": "Text_excerpt",
        "value": "1. Install conda/bioconda [here](https://bioconda.github.io/user/install.html) if not already installed\n\n2. Add the conda-forge channel for conda if not already present\n\n\t\tconda config --add channels conda-forge\n\t\n3. Create the conda environment containing aptardi and its Python dependencies\n\n\t\tconda create -n [your_environment_name] --channel conda-forge -c bioconda aptardi\n\t\n4. Activate conda environment\n\n\t\tconda activate [your_environment_name]\n\t\n5. Check that aptardi was successfully installed and that samtools and bedtools can be called from your environment, e.g. from within your environment type:\n\n\t\taptardi --version\n\t\t\n\t\tsamtools --version\n\t\n\t\tbedtools --version\n\t"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8498420135177454,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "\t\n\tRequired arguments\n\t\n\t--o <output directory>\t\t\tAbsolute directory path with read/write permissions \n\t--f <fasta file>\t\t\tFasta file where headers are chromosomes\n\t--r <input gtf file or stdin>\t\tTranscript file in gtf/gff format (or standard output from pipe) - this tool was designed to take the output of StringTie, but other formats may work\n\t--b <bam file>\t\t\t\tSorted bam file of aligned RNA-Seq reads\n\t\n\t1. Mode 1: Using pre-built model (canonical usage)\n\t\n\t\tAdditional required arguments\n\t\t\n\t\t--n/-n <model file>\t\tLocation of model (model.hdf5) downloaded from src/aptardi/ml_scale folder\n\t\t--t/-t <scale file>\t\tLocation of scale (scale.pk) downloaded from src/aptardi/ml_scale folder \n\t\t\n\t2. Mode 2: Building your own model (non-canonical usage)\n\t\n\t\t--m/-m <machine learning mode>\tEnables Mode 2, building your own model, requires reliable genomic locations of polyA sites as the gold standard labels to train model\n\t\t\n\t\tAdditional required arguments\n\t\t\n\t\t--e/-e <model name>\t\tName to save custom model in output directory\n\t\t--k/-k <scale name>\t\tName to save custom model's scale in output directory\n\t\t--s/-s <polyA sites file>\tTab separated file containing gold standard polyA sites for training model\n\t\t--l/-l <int,int,int>\t\t0-based coordinates of chromosome, strand, and site columns in polyA sites file (comma separated list with no spaces)\n\t\t\n\t\tAdditional optional arguments\n\t\t\n\t\t--c/-c <int>\t\t\tSet seed for reproducibly building model\n\t\t\n\tUniversal optional arguments\n\t\t--g/-g <output gtf file>\tName to save output gtf file in output directory\n\t\t-h <help>\t\t\tPrints help/usage\n\t\t--version/-v <version>\t\tPrints version\n\t\t--d/-d <debugging>\t\tSaves intermediate files to facilitate debugging\n\t\t-verbose/-vb <verbose>\t\tPrints progress to standard output\n\t\t--i/-i <int>\t\t\tMaximum length analyzed per transcript (default: 300, which is number of bins analyzed, i.e 300 and bin size of 100 = 300 * 100 = 30,000 bases long transcript) \n\t\t--p/-p <float>\t\t\tProbability threshold, predictions >= threshold are labeled transription stop site (default: 0.5, value must be constrained by (0, 1))\n\t\t--a/-a <fr or rf>\t\tUpstream/downstream mate orientations for paired-end alignment against the forward reference strand, fr = firststrand (appropriate for Illumina paired-end library pre, rf = secondstrand (default: fr)\n\t\t--w/-w <int>\t\t\tSize of bin to make predictions on (default: 100, choices: 25-200 in 25 base increments, we DO NOT recommend altering this argument using the pre-built model since this model was built using 100 base bins)\n \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8251345353407047,
      "result": {
        "original_header": "Generating required input files",
        "type": "Text_excerpt",
        "value": "3. Input gtf file \n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/luskry/aptardi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 aptardi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aptardi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "luskry"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 97349,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://cutadapt.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-20T21:21:05Z",
        "date_published": "2021-05-20T21:21:29Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.4",
        "name": "v.1.4",
        "release_id": 43317120,
        "tag": "v.1.4",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43317120",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43317120",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-19T19:48:59Z",
        "date_published": "2021-05-19T19:49:27Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.13",
        "name": "v.1.3.13",
        "release_id": 43242514,
        "tag": "v.1.3.13",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.13",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43242514",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43242514",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-19T14:25:39Z",
        "date_published": "2021-05-19T14:26:06Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.12",
        "name": "v.1.3.12",
        "release_id": 43221452,
        "tag": "v.1.3.12",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.12",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43221452",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43221452",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-19T13:18:25Z",
        "date_published": "2021-05-19T13:18:51Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.11",
        "name": "v.1.3.11",
        "release_id": 43214860,
        "tag": "v.1.3.11",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.11",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43214860",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43214860",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-19T01:05:18Z",
        "date_published": "2021-05-19T01:06:14Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.10",
        "name": "v.1.3.10",
        "release_id": 43183147,
        "tag": "v.1.3.10",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.10",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43183147",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43183147",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-18T19:05:21Z",
        "date_published": "2021-05-18T19:06:31Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.9",
        "name": "v.1.3.9",
        "release_id": 43164300,
        "tag": "v.1.3.9",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.9",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43164300",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43164300",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-17T21:19:15Z",
        "date_published": "2021-05-17T21:19:58Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.8",
        "name": "v.1.3.8",
        "release_id": 43087829,
        "tag": "v.1.3.8",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/43087829",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/43087829",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-15T00:05:09Z",
        "date_published": "2021-05-15T00:05:50Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.7",
        "name": "v.1.3.7",
        "release_id": 42986660,
        "tag": "v.1.3.7",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42986660",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42986660",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T23:53:05Z",
        "date_published": "2021-05-14T23:41:45Z",
        "description": "Still recipe stuff.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.6",
        "name": "v.1.3.6",
        "release_id": 42986218,
        "tag": "v.1.3.6",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42986218",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42986218",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T23:29:50Z",
        "date_published": "2021-05-14T23:31:59Z",
        "description": "Still working on recipe.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.4",
        "name": "v.1.3.4",
        "release_id": 42986060,
        "tag": "v.1.3.4",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42986060",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42986060",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T20:57:14Z",
        "date_published": "2021-05-14T20:57:57Z",
        "description": "Fixed bioconda recipe bug.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.3",
        "name": "v.1.3.3",
        "release_id": 42981682,
        "tag": "v.1.3.3",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42981682",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42981682",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T20:39:06Z",
        "date_published": "2021-05-14T20:39:42Z",
        "description": "Fixed bug in bioconda recipe.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.2",
        "name": "v.1.3.2",
        "release_id": 42980985,
        "tag": "v.1.3.2",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42980985",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42980985",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T19:57:14Z",
        "date_published": "2021-05-14T20:36:00Z",
        "description": "Fixed bug in setup.py.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3.1",
        "name": "v.1.3.1",
        "release_id": 42980809,
        "tag": "v.1.3.1",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42980809",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42980809",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2021-05-14T19:48:36Z",
        "date_published": "2021-05-14T19:50:00Z",
        "description": "Convert aptardi to bioconda recipe.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.3",
        "name": "v.1.3",
        "release_id": 42978860,
        "tag": "v.1.3",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/42978860",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/42978860",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-11-29T22:45:05Z",
        "date_published": "2021-01-29T20:08:28Z",
        "description": "The aptardi program is in aptardi.zip.\r\n\r\nAdded a Zenodo DOI.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.2.1",
        "release_id": 37103009,
        "tag": "v.1.2.1",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/37103009",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/37103009",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-11-29T22:45:05Z",
        "date_published": "2020-12-04T14:29:54Z",
        "description": "The aptardi program is in aptardi.zip.\r\n\r\nMade it so the temporary directory folder is deleted in any case unless debugging is specified. Also made it so the output directory is deleted if it is empty.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.2.0",
        "name": "v.1.2.0",
        "release_id": 34829145,
        "tag": "v.1.2.0",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/34829145",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/34829145",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-11-29T22:45:05Z",
        "date_published": "2020-11-30T20:40:29Z",
        "description": "The aptardi program is in aptardi.zip.\r\n\r\nFixed a bug to make the RNA-Seq features amenable to different bin sizes now that different bin sizes can be specified since v.1.1.0.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.1.1",
        "name": "v.1.1.1",
        "release_id": 34600632,
        "tag": "v.1.1.1",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/34600632",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/34600632",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-11-23T14:39:03Z",
        "date_published": "2020-11-23T14:43:59Z",
        "description": "The aptardi program is in aptardi.zip.\r\n\r\nAdded an optional argument to specify choice of bin size to make predictions on.\r\n\r\nAlso made extracting DNA sequence features amenable to bin size.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.1.0",
        "name": "aptardi",
        "release_id": 34313455,
        "tag": "v.1.1.0",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/34313455",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/34313455",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-09-02T01:15:40Z",
        "date_published": "2020-09-03T14:37:19Z",
        "description": "The aptardi program is in aptardi.zip\r\n\r\nFixed a rare bug that occurs when data instances are near 0 or the maximum chromosome length that leads to probing DNA sequence less than 0 or greater than the chromosome length.",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.0.1",
        "name": "aptardi",
        "release_id": 30664318,
        "tag": "v.1.0.1",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/30664318",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/30664318",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "luskry",
          "type": "User"
        },
        "date_created": "2020-08-27T22:28:03Z",
        "date_published": "2020-08-27T22:30:13Z",
        "description": "Initial release\r\n\r\nThe aptardi program is in aptardi.zip",
        "html_url": "https://github.com/luskry/aptardi/releases/tag/v.1.0.0",
        "name": "aptardi",
        "release_id": 30292468,
        "tag": "v.1.0.0",
        "tarball_url": "https://api.github.com/repos/luskry/aptardi/tarball/v.1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/luskry/aptardi/releases/30292468",
        "value": "https://api.github.com/repos/luskry/aptardi/releases/30292468",
        "zipball_url": "https://api.github.com/repos/luskry/aptardi/zipball/v.1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "1. Linux or MacOS machine\n\n2. Conda (aptardi is installed using conda)\n\n3. [SAMtools (v.1.9)](http://www.htslib.org/download/)\n\n4. [BEDtools (v.2.29.2)](https://bedtools.readthedocs.io/en/latest/content/installation.html)\n\n**Note: The bioconda samtools and bedtools packages may prevent aptardi from working, please make sure these packages are not installed in the same environment as aptardi**\n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:47:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage (in conda environment)",
        "type": "Text_excerpt",
        "value": "\taptardi {OPTIONS}\t\n"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Demo files (in demo folder, these example files contain data only for chromosome 1):\n1. sorted.bam\n2. hg38.fa.zip (please unzip)\n3. stringtie.gtf \n4. polya_sites.bed\n\nNote: \n1. Any command provided to an argument that starts with name (i.e. name_aptardi.gtf) should be given simply a name and not an absolute path; the file will be saved to the output directory path with the name.\n2. Any command provided to an argument that does not start with name requires the path; the path can be relative to the current working directory, but when in doubt, specify the absolute path (i.e. /Users/foo_name/model.hdf5).\n\n[StringTie](https://ccb.jhu.edu/software/stringtie/#install) and [RSEM](https://deweylab.github.io/RSEM/) are required to utilize the piping examples.\n\n\tEx. 1: Standalone using pre-built model (~25 min runtime)\n\taptardi --b sorted.bam --f hg38.fa --r stringtie.gtf --g name_aptardi.gtf --n model.hdf5 --t scale.pk --o output_dir\n\t\n\tEx. 2: Standalone building own model (~1 hr 15 min runtime)\n\taptardi --b sorted.bam --f hg38.fa --r stringtie.gtf --g name_aptardi.gtf --m --e name_model.hdf5 --k name_scale.pk --s polya_sites.bed --l 0,4,1 --o output_dir\n\t\n\tEx. 3: Pipe upstream standard input from StringTie to aptardi\n\tstringtie sorted.bam {OPTIONS} | aptardi --b sorted.bam --f hg38.fa --r - --g name_aptardi.gtf --n model.hdf5 --t scale.pk --o output_dir\n\t\n\tEx. 4: Pipe aptardi's standard output gtf to downstream RSEM\n\taptardi --b sorted.bam --f hg38.fa --r stringtie.gtf --n model.hdf5 --t scale.pk --o output_dir | rsem-prepare-reference --gtf - {OPTIONS}\n\t\n\tEx. 5: Pipe StringTie standard input to aptardi and pipe aptardi's standard output gtf to downstream RSEM\n\tstringtie sorted.bam {OPTIONS} | aptardi --b sorted.bam --f hg38.fa --r - --n model.hdf5 --t scale.pk --o output_dir | rsem-prepare-reference --gtf - {OPTIONS}\n\t"
      },
      "source": "https://raw.githubusercontent.com/luskry/aptardi/master/README.md",
      "technique": "header_analysis"
    }
  ]
}