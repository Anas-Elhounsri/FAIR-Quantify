{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lyotvincent/PBGI"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-16T08:27:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-21T07:24:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9955366703367307,
      "result": {
        "original_header": "PBGI",
        "type": "Text_excerpt",
        "value": "PBGI is an effective approach and automatic bioinformatics pipeline for bacterial genome identification, performing automatedly and customized bioinformatics analysis using short-reads or long-reads sequencing data produced by multiple platforms such as Illumina, PacBio and Oxford Nanopore.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9558352967198285,
      "result": {
        "original_header": "Databases",
        "type": "Text_excerpt",
        "value": "NCBI Genbank  \nDrugbank  \nPATRIC  \nCARD  \n```download_bacteria_data.py``` could download bacterial data from NCBI Genbank to local file folder and build blastdb based on BASH2*.  \nUnfortunately, due to problems such as the need for authentication, the data for Drugbank,PATRIC,CARD needs to be configured by the user.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9134984731905147,
      "result": {
        "original_header": "Configuration file",
        "type": "Text_excerpt",
        "value": "```pbgi_configuration.xlsx``` in the BASH2* is the configuration file of PBGI.  \nUsers could customize parameters in this configuration file.   \nThe picture is a screenshot of part of the configuration file.  \nThe green box contains the parameter name. Users could enter parameters in the red box to customize the software.  \nIn order to control the choice of software, users could set True or False for the \"enable\" of software. \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lyotvincent/PBGI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lyotvincent/PBGI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lyotvincent/PBGI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PBGI"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/install_dependencies.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sjlgg/images/main/conf.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "From github",
        "parent_header": [
          "PBGI",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "1. Download program first: ```git clone https://github.com/lyotvincent/PBGI.git```  \n2. Install external tools:  \n2.1. Install miniconda from *https://docs.conda.io/en/latest/miniconda.html* or anaconda from *https://www.anaconda.com/products/individual*  \n2.2. Create python3.7 environment (because QUAST depends on python3.7) ```conda create -n env_name python=3.7```   \n2.3. Install external tools by running a shell script ```sh install_dependencies.sh```  \n3. Build bacteria database: create a folder to save bacteria data ```mkdir /path/to/bacteria/data``` && then run ```python download_bacteria_data.py``` to build bacteria local database.  \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From bioconda",
        "parent_header": [
          "PBGI",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "We are working for this.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9994770058962745,
      "result": {
        "original_header": "External tools",
        "type": "Text_excerpt",
        "value": "These software/tools respectively support part of the entire pipeline. If you want to use all the functions of the pipeline, all these software in the table should be installed.\nThe \u2714 in 'conda' column means that the software cound install by conda. \n|software|conda|download link|\n|----|----|----|\n|FastQC|\u2714|<http://www.bioinformatics.babraham.ac.uk/projects/fastqc/>|\n|fastp|\u2714|<https://github.com/OpenGene/fastp>|\n|trimmomatic|\u2714|<https://github.com/timflutre/trimmomatic>|\n|cutadapt|\u2714|<https://github.com/marcelm/cutadapt>|\n|megahit|\u2714|<https://github.com/voutcn/megahit>|\n|spades|\u2714|<https://github.com/ablab/spades>|\n|velvet|\u2714|<https://github.com/dzerbino/velvet>|\n|QUAST|\u2714|<https://github.com/ablab/quast>|\n|BLAST|\u2714|<https://blast.ncbi.nlm.nih.gov/Blast.cgi>|\n|BLAT|\u2714|<http://genome.ucsc.edu/goldenPath/help/hgTracksHelp.html#BLATAlign>|\n|prokka|\u2714|<https://github.com/tseemann/prokka>|\n|prodigal|\u2714|<https://github.com/hyattpd/Prodigal>|\n|snap-aligner|\u2714|<https://github.com/amplab/snap>|\n|bowtie2|\u2714|<https://github.com/BenLangmead/bowtie2>|\n|samtools|\u2714|<https://github.com/samtools/samtools>|\n|minimap2|\u2714|<https://github.com/lh3/minimap2>|\n|biopython|\u2714|pip|\n|bcbio-gff|\u2714|pip|\n|xlrd|\u2714|pip|\n|pyyaml|\u2714|pip|\n|datasketch|\u00d7|pip|\n \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9577659720252614,
      "result": {
        "original_header": "Databases",
        "type": "Text_excerpt",
        "value": "Bacterial data can be downloaded from the database below.   \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lyotvincent/PBGI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PBGI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lyotvincent"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 208452,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 498,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sjlgg",
          "type": "User"
        },
        "date_created": "2021-01-12T08:38:33Z",
        "date_published": "2021-01-12T09:16:35Z",
        "html_url": "https://github.com/lyotvincent/PBGI/releases/tag/v0.0.1",
        "name": "first release",
        "release_id": 36268351,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/lyotvincent/PBGI/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/lyotvincent/PBGI/releases/36268351",
        "value": "https://api.github.com/repos/lyotvincent/PBGI/releases/36268351",
        "zipball_url": "https://api.github.com/repos/lyotvincent/PBGI/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:55:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Help",
        "parent_header": [
          "PBGI"
        ],
        "type": "Text_excerpt",
        "value": "simple usage\n```python pbgi_pipeline.py -1 XXX.fastq -2 XXX.fastq -ngs -conf_file_path ./pbgi_configuration.xlsx -o ./result_folder/XXX```  \n\n```python pbgi_pipeline.py -h``` to help.  \n\nparameters in pipeline:  \n\nhelp:  \n-f input single end file  \n-1 and -2 input paired end files  \n-o out directory name  \n-ngs make pipeline run for next-generation sequencing data (short reads)  \n-3gs make pipeline run for third-generation sequencing data (long reads)  \n-conf_file_path configuration file for PBGI pipeline which is in xlsx format  \n-h or -help or --h or --help look help  \n"
      },
      "source": "https://raw.githubusercontent.com/lyotvincent/PBGI/master/README.md",
      "technique": "header_analysis"
    }
  ]
}