{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TBLabFJD/VariantCallingFJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "VariantCallingFJD",
          "Developers"
        ],
        "type": "Text_excerpt",
        "value": " - Gonzalo N\u00fa\u00f1ez Moreno (gonzalo.nunezm@quironsalud.es)\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-21T15:09:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-12T11:44:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9981404328116171,
      "result": {
        "original_header": "VariantCallingFJD",
        "type": "Text_excerpt",
        "value": "\nThe objective of the development of this pipeline was to automate the customized genomics analysis that we carry out in the **Bioinformatics Unit** for the **Department of Genetics and Genomics** of the [**Institituto de Investigaci\u00f3n Sanitaria Fundaci\u00f3n Jim\u00e9nez D\u00edaz (IIS-FJD)**](https://www.fjd.es/iis-fjd). This pipeline is designed to be run in a [Slurm Workload Manager](https://slurm.schedmd.com/documentation.html) system wich is an \"open source, fault-tolerant, and highly scalable cluster management and job scheduling system for large and small Linux clusters\". \n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TBLabFJD/VariantCallingFJD/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TBLabFJD/VariantCallingFJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VariantCallingFJD"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-calling/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-calling/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-preprocessing/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-preprocessing/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/mosdepth/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/mosdepth/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/qc-bam-snv/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/qc-bam-snv/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-processing/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-processing/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-filtering/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-filtering/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-calling/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-preprocessing/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/mosdepth/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/qc-bam-snv/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/bam-processing/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/batchx/snv-filtering/entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/SNVcalling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/checkproject.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/SNVfiltering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/BAMpreprocessing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/combinedGVCF.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/mergeGVCF.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/VEPannotation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/genotyping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/CNV_tsv2vcf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/genotypeRefinement.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/mosdepth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/LOH.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/mapping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/tasks/removeDirs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline5_combinedGenotyping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline1_downloadMapping.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline3_BAMprocessing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline4_LohAnnotationOutput.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline2_QCbamSNVCallingFiltering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline6_WGSgenotypingFiltering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline9_CNVcalling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline7_WGSAnnotation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/._pipeline4_WGSgenotypingAnnotation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/pipelines/pipeline8_WGSmergeAnnotationProcessing.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/Workflow.png"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9996796850354619,
      "result": {
        "original_header": "Instalation",
        "type": "Text_excerpt",
        "value": "1. Install all the dependencies. \n    1.1. We recommend installing all the above bioinformatics programs and programming languages in modules as follow:\n    - Python v2.7.15 --> python/2.7.15\n    - Perl v5.28.0 --> perl/5.28.0\n    - R v3.5.0 --> R/R\n    - bwa v0.7.17 --> bwa/0.7.17\n    - samtools v1.9 --> samtools/1.9\n    - picard v2.18.9 --> picard/2.18.9\n    - gatk v4.2.0 --> gatk/4.2.0\n    - mosdepth 0.2.5 --> miniconda/3.6\n    - bedtools v2.27.0 --> bedtools/2.27.0\n    - bcftools v1.3 --> bcftools/1.3\n    - annotsv v2.2 --> annotsv/2.2\n    - vep release 103 --> vep/release103\n    \n    1.2. Install all Python and R packages \n    1.3 Download the following binaries and executables\n    - The BaseSpace Sequence Hub CLI tool suite binary (optional)\n    - BaseSpace-copy binary (optional)\n    - GATK executable jar file\n    - Picard executable jar file\n    - PLINK binary (optional) \n2. Clone this repository using:\n```sh\ngit clone https://github.com/TBLabFJD/VariantCallingFJD.git\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "VariantCallingFJD"
        ],
        "type": "Text_excerpt",
        "value": "VariantCallingFJD source code is provided under the [**Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)**](https://creativecommons.org/licenses/by-nc-sa/4.0/). VariantCallingFJD includes several third party packages provided under other open source licenses, please check them for additional details.\n\n\n[![Licencia de Creative Commons](https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png)](http://creativecommons.org/licenses/by-nc-sa/4.0/)\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://images.batchx.io/gh-badge-logo.svg"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VariantCallingFJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TBLabFJD"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 120496,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 101209,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 87086,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 45232,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2657,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gonumo",
          "type": "User"
        },
        "date_created": "2021-09-17T08:30:30Z",
        "date_published": "2021-09-16T10:43:46Z",
        "html_url": "https://github.com/TBLabFJD/VariantCallingFJD/releases/tag/v2.1.0",
        "name": " VariantCallingFJD-v2.0.0",
        "release_id": 49666132,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/releases/49666132",
        "value": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/releases/49666132",
        "zipball_url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gonumo",
          "type": "User"
        },
        "date_created": "2021-04-23T12:24:27Z",
        "date_published": "2021-09-15T14:48:33Z",
        "html_url": "https://github.com/TBLabFJD/VariantCallingFJD/releases/tag/v1.0.0",
        "name": "VariantCallingFJD-v1.0.0",
        "release_id": 49607862,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/releases/49607862",
        "value": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/releases/49607862",
        "zipball_url": "https://api.github.com/repos/TBLabFJD/VariantCallingFJD/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "VariantCallingFJD"
        ],
        "type": "Text_excerpt",
        "value": "**Job scheduler:**\n- **Slurm Workload Manager:** This pipeline has been developped to be run in a Slurm Workload Manager system. We use the the function `sbatch` to submit the jobs to the queue. We also have installed the diferent programs in different modules to prevent incompatibilities.\n\n**Programming languages:**\n- **Python v2.7.15:** All python scrips were developped using python v2.7.15. In task `\"Mosdepth.sh\"` python v3.6.12 is used by loading the module miniconda/3.6 to use `mosdepth`.\n- **Perl v5.28.0**\n- **R v3.5.0**\n\n**Bioinformatic tools:**\n- **bwa v0.7.17**\n- **samtools v1.9**\n- **picard v2.18.9**\n- **gatk v4.2.0**\n- **mosdepth 0.2.5**\n- **bedtools v2.27.0** \n- **bcftools v1.3**\n- **annotsv v2.2**\n- **PLINK v1.90b6.9 64-bit (4 Mar 2019)**\n- **BaseSpaceCLI v1.0.0**\n- **bscp v0.6.1.337**\n\n**R libraries:** (these versions are the ones tested)\n- **dplyr v0.8.3**\n- **optparser v1.6.6**\n- **stringr v1.4.0**\n- **CODEX2 v1.3.0**\n- **panelcn.mops v1.4.0**\n- **cn.mops v1.28.0**\n- **ExomeDepth v1.1.15**\n- **GenomicRanges v1.34.0**\n\n\n**Python libraries**\n- **csv**\n- **argparse**\n- **os**\n- **subprocess**\n- **sys**\n- **re**\n- **glob**\n- **numpy**\n- **pandas**\n- **datetime**\n- **shutil**\n- **ConfigParser**\n- **string**\n- **json**\n- **itertools**\n- **operator**\n- **collections**\n- **time**\n\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:33:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "VariantCallingFJD"
        ],
        "type": "Text_excerpt",
        "value": "0. (Optional) **BaseSpace credentials setup.** To be able to use the -b/--basespace option to automatically download samples from BaseSpace, run this command:\n```sh \nBaseSpace_Sequence_Hub_CLI_tool_suite_binary_path/bs authenticate\n```\n * This command generates a URL to copy into a web browser and login into BaseSpace. After login, it creates into your directory a `.basespace` file with the credentials so that when you run the pipeline it autamatically acces the data.\n\n1. **Configuration file.** There is a [`pipeline.conf`](https://github.com/TBLabFJD/VariantCallingFJD/blob/master/pipeline.conf) file that needs to be filled with the apropiate information (some information is optional or required depending on the selected parameters):\n   - Slurm credentials\n     - account\n     - partition\n   - Files\n     - Reference genome (in FASTA format)\n     - Validated VCF with known sites of common variation. We use a VCF from The HapMap project. Available at: https://storage.googleapis.com/genomics-public-data/resources/broad/hg38/v0/hapmap_3.3.hg38.vcf.gz\n     - Validated VCF with known sites of common variation. We use a VCF from The 1000 Genomes Project. Available at: https://storage.googleapis.com/genomics-public-data/resources/broad/hg38/v0/1000G_omni2.5.hg38.vcf.gz\n     - Index of the reference (.fasta.fai) genome to be used by CoNVading (CNV calling algorithm). This file should be a two column file with the name of the chromosomes (without the \"chr\") and their size (See CoNVaDING documentation for more information).\n   - Directories\n     - Temporal directory used for merging FASTQ files.\n     - (Optional) Dictory where to move a copy of the VCF file with the SNVs and INDELs for data base creation.\n     - (Optional) Dictory where to move a copy of the BED file with the covered regions for data base creation.\n   - Binaries & Executables\n     - The BaseSpace Sequence Hub CLI tool suite binary\n     - BaseSpace-copy binary\n     - GATK executable (.jar)\n     - PICARD executable (.jar)\n     - conda binary (same binary as the une installed for the miniconda)\n     - PLINK binary\n     - ANNOTSV executable (.tcl)\n \n 2. Run the pipeline as follow\n \n ```sh\nmodule load python/2.7.15\nmodule load perl/5.28.0\n\npipeline=\"path_to_the_downloaded_git_repository/variantDiscoveryFJD_panelWES.py\"\ninput_path=\"input_directory_with_fastq_files\"\noutput_path=\"output_directory\"\nbed_path=\"path_to_bed_file\"\n\npython ${pipeline} -i ${input_path} -o ${output_path} -p ${bed_path} -a all -A\n```\n \n\n ## Output\nThe output looks like:\n - **bams** - directoy containing the mapped samples\n - **cnvs** - directory containing CNV calling and annotation results\n   -  **CODEX2** - directory containing CODEX2 CNV calling results\n   -  **CoNVaDING** - directory containing CoNVaDING CNV calling results\n   -  **ExomeDepth** - directory containing ExomeDepth CNV calling results\n   -  **Panelcn.MOPS** - directory containing Panelcn.MOPS CNV calling results\n   -  *run_name.combinedAnnotated.tsv* - file containing the annotated CNVs\n   -  *run_name.combined.txt* - file containing the combined results of the 4 CNV calling algorithms (in TSV format)\n   -  *run_name.combined.vcf* - file containing the combined results of the 4 CNV calling algorithms (in VCF format)\n   -  *run_name.extended.bed* - modified bed file use by the CNV calling algorithms\n   -  *run_name.final.txt* - file containing the final report with the annotated CNVs\n   -  *run_name.final.genelist.txt* - file containing the final report with the annotated CNVs filtered by the provided gene list\n - **genotyping** - directory containing temporal information about the variant calling\n - **logfiles** - directory containing the .err and .out logfiles of all jobs\n - **plink** - directory containing PLINKS's output with information about homozygosity\n - **qc** - directory containing quality (coverage) information of the for SNV and CNV calling  \n - **snvs** - directory containing SNV and INDEL calling and annotation results\n   - *sample_name.annotated.MAFfiltered.pvm.txt* - file containing the final report with the PASS annotated SNVs and INDELs filtered by minor allele frequency (in TSV format)\n   - *sample_name.annotated.MAFfiltered.txt* - file containing the PASS annotated SNVs and INDELs  filtered by minor allele frequency (in TSV format) \n   - *sample_name.annotated.MAFfiltered.vcf* - vcf containing the PASS annotated SNVs and INDELs filtered by minor allele frequency (in VCF format)\n   - *sample_name.annotated.vcf* - vcf containing the PASS annotated SNVs and INDELs (in VCF format)\n   - *sample_name.final.vcf* - file containing PASS SNVs and INDELs  (in VCF format)\n   - *sample_name.gatkLabeled.vcf* - vcf containing the SNV and INDEL (in VCF format)\n   - *sample_name.gatkLabeled.vcf.idx* - index of the *sample_name.annotated.gatkLabeled.vcf* file\n - *software_run_name.txt* - file containing the software use in each section of the analysis\n - *sophia_clinical_exome_ces_annotated_run_name_10bp.bed* - filtered bedfile used in the pipeline\n"
      },
      "source": "https://raw.githubusercontent.com/TBLabFJD/VariantCallingFJD/master/README.md",
      "technique": "header_analysis"
    }
  ]
}