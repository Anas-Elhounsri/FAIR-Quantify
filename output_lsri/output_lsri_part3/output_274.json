{
  "application_domain": [
    {
      "confidence": 17.28,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.932811550793776,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/splatlab/mantis"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "mantis"
        ],
        "type": "Text_excerpt",
        "value": "------------\nContributions via GitHub pull requests are welcome.\n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-10T04:08:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-07T21:05:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mantis: A Fast, Small, and Exact Large-Scale Sequence-Search Index"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9848933863552233,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Mantis is a space-efficient data structure that can be used to index thousands of raw-\nread experiments and facilitate large-scale sequence searches on those experiments. Mantis uses counting quotient\nfilters instead of Bloom filters, enabling rapid index builds and queries, small indexes, and exact results, i.e., no\nfalse positives or negatives. Furthermore, Mantis is also a colored de Bruijn graph representation, so it supports fast\ngraph traversal and other topological analyses in addition to large-scale sequence-level searches. \nMantis was presented at RECOMB 2018, and a full journal paper is published in [Cell Systems](https://www.cell.com/cell-systems/abstract/S2405-4712(18)30239-4).\nNew version of Mantis that uses MST-based compression for equivalence class bit\nvectors was presented at RECOMB 2019.\nIf you use Mantis, please cite these papers:\n>Prashant Pandey, Fatemeh Almodaresi, Michael A. Bender, Michael Ferdman, Rob Johnson, and Rob Patro. \"Mantis: A Fast, Small, and Exact Large-Scale Sequence-Search Index.\" Cell Systems (2018).\n>Fatemeh Almodaresi, Prashant Pandey, Michael Ferdman, Rob Johnson, and Rob Patro. \"An Efficient, Scalable and Exact Representation of High-Dimensional Color Information Enabled via de Bruijn Graph Search.\" RECOMB (2019). \n\nA preprint of the paper is available [on bioRxiv](https://www.biorxiv.org/content/biorxiv/early/2017/11/10/217372.full.pdf).\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9699001226733389,
      "result": {
        "original_header": "Notes",
        "type": "Text_excerpt",
        "value": "Mantis uses `mmap` to read input Squeakr files and write to output counting\nquotient filter (CQF) file. During construction, input Squeakr files and output\nCQF file are accessed sequentially. Each page is accessed only once and can be\nremoved from memory once it's used.  However, unless there is memory pressure\nused pages are not cleared from the process memory which causes `/usr/bin/time`\ntool to report very high max resident set size (RSS). \nIn the current release, we use `madvise` system call to explicitly let the\nkernel know to remove used pages from process memory. This has negligible cost\nto the overall runtime of the construction process and keeps max RSS in check. \nMantis should be used with the latest version of\n[squeakr](https://github.com/splatlab/squeakr/tree/master), and we _highly\nrecommend_ running squeakr with the desired k-mer count threshold and the\n`--no-counts` argument.  Early versions of mantis used _unfiltered_ squeakr\noutput to build the mantis data structure, which required considerable\nintermediate disk-space, as those files represented the original k-mers and\ntheir counts in each sample exactly.  When run with the `--no-counts` argument,\neach squeakr file encodes the threshold only once in its metadata, and includes\nonly the k-mers that passed the abundance threshold; this can reduce the\nintermediate storage requirements by over an order of magnitude. \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8976763348524003,
      "result": {
        "original_header": "API",
        "type": "Text_excerpt",
        "value": "--------\n* `mantis build`: builds a mantis index from a collection of (squeakr) CQF files.\n* `mantis mst`: builds a new encoding based on Minimum Spanning Trees for the color information.\n* `mantis query`: query k-mers in the mantis index.\n* `mantis merge`: merges two mantii into a single mantis index.\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9028363964223559,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "Library dependencies (given version or higher):\n - [zlib](https://zlib.net/)\n - [sdsl-lite](https://github.com/simongog/sdsl-lite)\n \nTo build mantis, you will also need [CMake](https://cmake.org/) version 3.9 or higher and C++17. \nThe Counting Quotient Filter (CQF) code uses two new instructions to implement select on machine words\nintroduced in intel's Haswell line of CPUs. However, there is also an alternate\nimplementation of select on machine words to work on CPUs older than Haswell.\nTo build on an older hardware (older than Haswell) pass `-DNH=1` as a cmake argument.\n```bash\n $ mkdir build\n $ cd build\n $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../ ..\n $ make install\n $ cd ..\n```\nIf SDSL is not installed in a standard location, you can try and tell CMake where to look by adding\nthe following to the cmake command:\n```\n -DSDSL_INSTALL_PATH=<path-to-sdsl-build-location>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9282371360317163,
      "result": {
        "original_header": "Build Mantis",
        "type": "Text_excerpt",
        "value": "```\nSYNOPSIS\n        mantis build [-e] -s <log-slots> -i <input_list> -o <build_output>\n\nOPTIONS\n        -e, --eqclass_dist\n                    write the eqclass abundance distribution\n\n        <log-slots> log of number of slots in the output CQF\n\n        <input_list>\n                    file containing list of input filters\n\n        <build_output>\n                    directory where results should be written\n``` \n'log-slots': The initial value for log of the number of slots in the CQF (i.e. the number of quotient bits).\n Mantis will automatically resize when the CQF reaches its capacity during the build process.\n Starting with a reasonable value is recommended so that the build process does not have to perform a bunch of resizes. Each resize operation will halt the build process and in-turn increase the overall build time. \nSuggested starting values based on the size of input Squeakr files:\n* 28 for a small set of genomes like a bacterial genomes.\n* 30 for a large set of medium size read files.\n* 33 for a large set of big read files.\nNotice that these are just suggestions. You can start with a other smaller values as well. \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9169671106388222,
      "result": {
        "original_header": "Build MST",
        "type": "Text_excerpt",
        "value": "-------\n`mantis mst` encodes the color information into a list of succinct \nint-vectors and bit-vectors. It creates a color graph derived from the de Bruijn graph of k-mers \nand encodes its minimum spanning tree (MST) in a format to be able to retrieve the color classes.\n```bash\n $ ./bin/mantis mst -p raw/ -t 8 -k\n```\nThe options and arguments are as follows:\n```bash\nSYNOPSIS\n        mantis mst -p <index_prefix> [-t <num_threads>] (-k|-d)\n\nOPTIONS\n        <index_prefix>\n                    The directory where the index is stored.\n\n        <num_threads>\n                    number of threads\n\n        -k, --keep-RRR\n                    Keep the previous color class RRR representation.\n\n        -d, --delete-RRR\n                    Remove the previous color class RRR representation.\n```\nThis step is will further compress the color class representation.\nIt is highly recommended that you run this step after `mantis build`\nsince this makes your query required memory much smaller and doesn't hurt\nthe query time.\n \nIf you want to keep the RRR-compressed representation of color classes\nafter having the mst representation you require to use `-k` option\nand if you want to delete this intermediate representation\nyou should use `-d`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9699461913230529,
      "result": {
        "original_header": "Query",
        "type": "Text_excerpt",
        "value": "`mantis query` lets you query a mantis index with a set of sequences.\n```bash\n $ ./bin/mantis query -p raw/ -o query.res raw/input_txns.fa\n```\nThe options and arguments are as follows:\n```bash\nSYNOPSIS\n        mantis query [-1] [-j] [-k <kmer>] -p <query_prefix> [-o <output_file>] <query>\n\nOPTIONS\n        -1, --use-colorclasses\n                    Use color classes as the color info representation instead of MST\n\n        -j, --json  Write the output in JSON format\n        <kmer>      size of k for kmer.\n\n        <query_prefix>\n                    Prefix of input files.\n\n        <output_file>\n                    Where to write query output.\n\n        <query>     Prefix of input files.\n```\n \n There are also a couple of optional inputs:\n - `--use-colorclasses,-1`: This option runs a query over the list of color classes.\n - `-k <kmer>`: mantis supports approximate queries for `k`\n larger than the `k` that the index and its de Bruijn graph was built with.\n `k` can only be larger than the `index k`. If not set, the default\n is providing exact query results for a `k` equal to the `index k`.\n \n **Note** that if you haven't run `mantis mst` and don't\n have the MST encoding of color information, the `--use-colorclasses,-1` option becomes\n mandatory, because the default behavior of query is to look for\n the MST encoding of the color information unless this option is set.\n \n Finally, rather than writing the results in the \"simple\" output format, they can be written in JSON if you\n provide the `--json,-j` flag to the `query` comamnd.\n \nThe output file contains the list of experiments (i.e., hits) corresponding to each queried transcript.\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9310019576374436,
      "result": {
        "original_header": "Merge Two Mantii",
        "type": "Text_excerpt",
        "value": "`num_threads`: The default number of threads to use at various intermediate phases is 1. \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/splatlab/mantis/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/splatlab/mantis/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "splatlab/mantis"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mantis"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/scripts/merge_into_master.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/scripts/check_shasum.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/scripts/limitMem.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/scripts/merge_into_develop.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999944857032439,
      "result": {
        "original_header": "Build",
        "type": "Text_excerpt",
        "value": "Library dependencies (given version or higher):\n - [zlib](https://zlib.net/)\n - [sdsl-lite](https://github.com/simongog/sdsl-lite)\n \nTo build mantis, you will also need [CMake](https://cmake.org/) version 3.9 or higher and C++17. \nThe Counting Quotient Filter (CQF) code uses two new instructions to implement select on machine words\nintroduced in intel's Haswell line of CPUs. However, there is also an alternate\nimplementation of select on machine words to work on CPUs older than Haswell.\nTo build on an older hardware (older than Haswell) pass `-DNH=1` as a cmake argument.\n```bash\n $ mkdir build\n $ cd build\n $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../ ..\n $ make install\n $ cd ..\n```\nIf SDSL is not installed in a standard location, you can try and tell CMake where to look by adding\nthe following to the cmake command:\n```\n -DSDSL_INSTALL_PATH=<path-to-sdsl-build-location>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9981744239935236,
      "result": {
        "original_header": "Build Mantis",
        "type": "Text_excerpt",
        "value": "-------\n`mantis build` creates a colored de Bruijn graph representation that can be used to query transcripts.\n``` bash\n $ ./bin/mantis build -s 20 -i raw/incqfs.lst -o raw/\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9938912922635931,
      "result": {
        "original_header": "Build MST",
        "type": "Text_excerpt",
        "value": "If you want to keep the RRR-compressed representation of color classes\nafter having the mst representation you require to use `-k` option\nand if you want to delete this intermediate representation\nyou should use `-d`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998925202118251,
      "result": {
        "original_header": "Query",
        "type": "Text_excerpt",
        "value": " The only required option for the command is the following:\n - `--query-prefix,-p`: the directory where the output of coloreddbg command is present.\n \n additionally the command takes the following mandatory _positional_ argument :\n - query transcripts: input transcripts to be queried. \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8566948920638955,
      "result": {
        "original_header": "Merge Two Mantii",
        "type": "Text_excerpt",
        "value": "-------\n`mantis merge` merges two mantis indices into a single mantis index.\n``` bash\n $ ./bin/mantis merge -i1 raw/in1 -i2 raw/in2 -t 4 -o raw/out\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8804554788729442,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "-------\n- Prashant Pandey <ppandey@cs.stonybrook.edu>\n- Fatemeh Almodaresi <falmodaresit@cs.stonybrook.edu>\n- Michael Bender <bender@cs.stonybrook.edu>\n- Mike Ferdman <mferdman@cs.stonybrook.edu>\n- Rob Johnson <rob@cs.stonybrook.edu>\n- Rob Patro <rob.patro@cs.stonybrook.edu>\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8052917437878886,
      "result": {
        "original_header": "Query",
        "type": "Text_excerpt",
        "value": "`mantis query` lets you query a mantis index with a set of sequences.\n```bash\n $ ./bin/mantis query -p raw/ -o query.res raw/input_txns.fa\n```\nThe options and arguments are as follows:\n```bash\nSYNOPSIS\n        mantis query [-1] [-j] [-k <kmer>] -p <query_prefix> [-o <output_file>] <query>\n\nOPTIONS\n        -1, --use-colorclasses\n                    Use color classes as the color info representation instead of MST\n\n        -j, --json  Write the output in JSON format\n        <kmer>      size of k for kmer.\n\n        <query_prefix>\n                    Prefix of input files.\n\n        <output_file>\n                    Where to write query output.\n\n        <query>     Prefix of input files.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/splatlab/mantis/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2017, \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mantis"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "splatlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 2206335,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 154750,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4721,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 4415,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 819,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/splatlab/mantis/mergeMSTs/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "prashantpandey",
          "type": "User"
        },
        "date_created": "2019-06-06T16:11:26Z",
        "date_published": "2019-06-06T19:14:08Z",
        "html_url": "https://github.com/splatlab/mantis/releases/tag/v0.1",
        "release_id": 17835595,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/splatlab/mantis/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/splatlab/mantis/releases/17835595",
        "value": "https://api.github.com/repos/splatlab/mantis/releases/17835595",
        "zipball_url": "https://api.github.com/repos/splatlab/mantis/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:21:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 80
      },
      "technique": "GitHub_API"
    }
  ]
}