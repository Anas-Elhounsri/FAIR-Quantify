{
  "application_domain": [
    {
      "confidence": 13.65,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8622209189754434,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiocomputeLab/paraSBOLv"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-10T16:56:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-17T16:53:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A lightweight Python library designed to simplify the development of tools that render SBOL Visual diagrams."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9945539969768916,
      "result": {
        "original_header": "paraSBOLv",
        "type": "Text_excerpt",
        "value": "A lightweight Python library designed to simplify the rendering of highly-customisable SBOL Visual glyphs and diagrams. To do this, `paraSBOLv` uses the [Parametric Scalable Vector Graphic (pSVG)](https://parametric-svg.js.org) format to enable the encoding of the shape geometry and allowed parametric variations for each glyph. The best way to learn how to use `paraSBOLv` is to dive into our [`gallery`](./gallery/) of examples which cover most of the capabilities present. In addition, all functions and classes are extensively documented in code to allow usage to be easily inferred. \n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9710948077043565,
      "result": {
        "original_header": "Relationship to DNAplotlib",
        "type": "Text_excerpt",
        "value": "We are regularly asked about the relationship of `parasbolv` and another genetic design visualisation tool we have developed called [`dnaplotlib`](http://www.dnaplotlib.org). The major difference between the two packages is that `parasbolv` is designed to be lightweight, include minimal additional functionality, and be tailored to tool developers to provide them with low level access to the rendering of SBOL Visual glyphs and interactions. In contrast, `dnaplotlib` is designed to provide a much fuller and wider range of functionalities to both developers and biologists. \nIt should be noted that `dnaplotlib` version 2.0, which is currently under development, will completely replace its legacy rendering pipeline with `paraSBOLv`. This will not only simplify maintenance, but also allow access to new glyphs ratified by the SBOL community as they become available.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.959479734723085,
      "result": {
        "original_header": "Dependancies",
        "type": "Text_excerpt",
        "value": "`paraSBOLv` does not require any other dependancies when installed. However, internally it does make use of the [`svgpath2mpl`](https://github.com/nvictus/svgpath2mpl) package to handle the generation of `matplotlib` compatible paths from an SVG path string. Do check this package out if you'd like to know more about using SVG with `matplotlib`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8902967899728575,
      "result": {
        "original_header": "Tools",
        "type": "Text_excerpt",
        "value": "To inspire you to make your own tools, we created some simple plotting tools using paraSBOLv as a convenient foundation.  \n**[sbolv-cli](gallery/sbolv-cli)** - streamlined CLI version of paraSBOLv for rapid generation of designs from the command line.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "paraSBOLv"
        ],
        "type": "Text_excerpt",
        "value": "Automatically generated documentation can be accessed at: [https://biocomputelab.github.io/paraSBOLv/index.html](https://biocomputelab.github.io/paraSBOLv/index.html)\n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiocomputeLab/paraSBOLv/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiocomputeLab/paraSBOLv/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BiocomputeLab/paraSBOLv"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "paraSBOLv"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/gallery/07_sbolv-kaleidoscope/create_gif.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/gallery/04_plot_gff/04_plot_gff.jpg?raw=true"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "paraSBOLv"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to start playing with `parasbolv` is to clone this repository and place the `parasbolv` directory into you `PYTHONPATH` environment variable. Once done, it should be possible to then:\n\n```\nimport parasbolv as psv\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9958665359748778,
      "result": {
        "original_header": "Dependancies",
        "type": "Text_excerpt",
        "value": "`paraSBOLv` does not require any other dependancies when installed. However, internally it does make use of the [`svgpath2mpl`](https://github.com/nvictus/svgpath2mpl) package to handle the generation of `matplotlib` compatible paths from an SVG path string. Do check this package out if you'd like to know more about using SVG with `matplotlib`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiocomputeLab/paraSBOLv/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biodesign, sbol, sbol-visual, sbolv, svg, synbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Biocompute Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "paraSBOLv"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BiocomputeLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 222691,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 50,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:08:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "paraSBOLv"
        ],
        "type": "Text_excerpt",
        "value": "If you use this tool to create diagrams or as a basis for new software please cite the following paper. Without citations that demonstrate use it becomes difficult to support this tool.\n\n`Clark C.J., Scott-Brown J. & Gorochowski T.E. \"paraSBOLv: a foundation for standard-compliant genetic design visualisation tools\", Synthetic Biology, 2021` doi:[10.1093/synbio/ysab022](https://dx.doi.org/10.1093/synbio/ysab022)\n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "paraSBOLv"
        ],
        "type": "Text_excerpt",
        "value": "- [Getting started with paraSBOLv](tutorials/getting_started.md) - This provides a basic introduction to the `paraSBOLV` library and the core data types of functions available. It is recommended that this is used together with the [examples gallery](./gallery/).\n\n- [Creating parametric SVG glyph files](creating_psvg_glyphs) - If you are looking to create new parametric glyphs to use with this library then this provides an overview of the core elements that need to be added. If you are creating a new glyph that you think others in the synthetic biology might find useful, please consider also submitting to the [SBOL Visual standard](https://sbolstandard.org).\n"
      },
      "source": "https://raw.githubusercontent.com/BiocomputeLab/paraSBOLv/master/README.md",
      "technique": "header_analysis"
    }
  ]
}