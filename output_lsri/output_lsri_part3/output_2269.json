{
  "application_domain": [
    {
      "confidence": 0.8160363862994364,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 4.33,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/BPM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-04-01T07:25:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-10T13:45:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Grid computing framework for enabling large-scale comparative genomics processes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "INTRODUCTION",
        "type": "Text_excerpt",
        "value": "BPM (BLAST - Phylogenetic Profile - MCL) is a distributed modular application \nfor sequence alignment, phylogenetic profiling and clustering of protein sequences, \nby utilizing the European Grid Infrastructure. \nSpecifically, the application comprises three main components; \n(a) BLAST alignment \n(b) construction of phylogenetic profiles based on the produced alignment scores and \n(c) clustering of entities using the MCL algorithm. \nThese modules have been selected as they represent a common aspect of a vast majority \nof bionformatics workflows. It is important to note that the modules can be combined independently, \nand ultimately provide 4 different modes of operation.\n\nThis work was spawned from parallel activities at the [BCPL lab](https://bcplab.wordpress.com/) (previously CGU) at CERTH and inspired by data, algorithms and protocols developed previously in conjunction with those activities.\n\n\n * Submit bug reports and feature suggestions: olgavrou@gmail.com\n \n--------------- "
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.905657143960538,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "        <b>query_file:</b> <the exact name of the query file, as it is uploaded in the user interface, e.g. query.tar.gz> [if option is 5, this will be ignored]\n        <b>gene_map:</b> <the exact name of the gene map file, as it is uploaded in the user interface, e.g. List.txt>\n        <b>raw_database:</b> <this field should be filled, if the database is provided as a folder with more than one fasta files; the exact name of the folder should be provided, e.g. Database.tar.gz>\n        <b>ready_database:</b> <this field should be filled, if the database is provided as one fasta file; the exact name of this file should be provided, e.g. database.faa>\n        <b>option:</b> 5 \n            # Option: 1 for only mcl clustering (the query file will be split for each job to process)\n            # Option: 2 for only phylogenetic profile (the database file will be split for each job to process)\n            # Option: 3 for phylogenetic profile and the mcl clustering of the phyl. prof. (the database file will be split for each job to process)\n            # Option: 4 for all the above outputs (the database file will be split for each job to process)\n            # Option: 5 for all-vs-all (the query file will be split for each job to process)  \n            # I for Identity or E for E-value (choose the output of blastp)\n        <b>I_or_E:</b> I\n  \n            # F for binary or C for extended phylogenetic profiles (choose the type of phylogenetic profiles that will be constructed)\n        <b>F_or_C:</b> C \n            # enter your email address if you wish to be informed via email that the application is done\n        email: olgavrou@gmail.com\n        \n        NOTE: either raw_database or ready_database should be defined \n         A valid proxy should be obtained in order for the application to run on HellasGrid.\n         The \"proxy-tools\" command is recommended for obtaining a my-proxy certificate, \n         and for the voms-proxy to be automatically renewed. \n   <b>B.</b> Screen\n   \n         It is advised that the application runs in screen mode, to avoid the application from being aborted\n         due to connectivity issues.\n         \n         \n   \n* Execution:\n      \n      Run the application like so: \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/BPM/wiki"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BiodataAnalysisGroup/BPM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiodataAnalysisGroup/BPM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BiodataAnalysisGroup/BPM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/SecondJobScript.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/JobScript.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/BPM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/MasterScript.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/CleanUp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/Upload.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/Download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/RemoveFromSE.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/SelectDatabaseGene.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/tools/SelectFastaFile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/HandleJobs/ParametricJobs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/HandleJobs/HandleSingleJob.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClustersWithNumElements.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClusterSequences.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/GetClusters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClusterPhylProfiles.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClustersWithUniqueElements.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/OneOrganismClusters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/SpecificPhylogeneticProfile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClusterElements.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/ParseOutput/ClustersWithUniqueElementsFromEveryGene.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/MakeFiles/GenerateReport.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/MakeFiles/MakeInputFile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/BPM/MakeFiles/MakeJDLFile.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALLATION",
        "type": "Text_excerpt",
        "value": "The scripts lying in the BPM folder must be uploaded to the HellasGrid User Interface and decompressed.\nThe BPM.sh script must be executable (chmod +x BPM.sh).\n\n--------------- "
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9939796402744482,
      "result": {
        "original_header": "CONTENTS OF THIS FILE",
        "type": "Text_excerpt",
        "value": "   \n * Introduction\n * Requirements\n * Installation\n * Execution\n * Example\n * Folder Structure\n \n---------------- \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9827673853152274,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "  <b>B.</b> Configuration file:\n  \n      The file Input.txt that is provided must be configured.\n      It consists of the following fields:\n       \n            # enter your email address if you wish to be informed via email that the application is done\n        email: olgavrou@gmail.com\n        \n        NOTE: either raw_database or ready_database should be defined \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8466658711982256,
      "result": {
        "original_header": "FOLDER STRUCTURE",
        "type": "Text_excerpt",
        "value": "You can view the folder structure in the FolderStructure.txt file \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8066620808457431,
      "result": {
        "original_header": "EXECUTION",
        "type": "Text_excerpt",
        "value": "      <b>   ./BPM.sh Input.txt </b>\n      \n      A folder named SessionFolder_<timestamp> will be created at the same level as the Input.txt file.\n      \n      DO NOT delete or modify the folder or it's contents while the application is running. It will be deleted\n      when the application has completed.\n      \n      \n* Output:\n   \n      A folder named Output_timestamp will be created at the same level as the Input.txt file. The database file,\n      query file, genome map file, will be copied there.  \n"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BiodataAnalysisGroup/BPM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://genomics-lab.fleming.gr/fleming/reczko/elixir/logos/ELIXIR_GREECE_and_ESPA_logos-1338x218.png"
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BPM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BiodataAnalysisGroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 76572,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "REQUIREMENTS",
        "type": "Text_excerpt",
        "value": "In order for the application to run, the user needs to have an account \nat HellasGrid (National Grid Infrastructure). \nFurther instructions can be found here: https://access.hellasgrid.gr\n\n--------------- "
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:21:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "EXAMPLE",
        "type": "Text_excerpt",
        "value": "In the folder Example.tar.gz, you will find an example of a query, database and genome file.\nThe Input.txt file is configured to accept these files as an input.\nIn the folders testcase1.tar.gz and testcase2.tar.gz, you can find examples of the\ngenerated output.\n\n\n------------------ "
      },
      "source": "https://raw.githubusercontent.com/BiodataAnalysisGroup/BPM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}