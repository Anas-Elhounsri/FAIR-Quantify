{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "Struct2Graph"
        ],
        "type": "Text_excerpt",
        "value": "The proposed GCN architecture comprising of mutual attention mechanism for interaction prediction between query proteins is built upon our prior work on using GCNs for metabolic pathway prediction [1].\n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.9875730182810162,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "Struct2Graph"
        ],
        "type": "Text_excerpt",
        "value": "    1. Baranwal, Mayank, Abram Magner, Paolo Elvati, Jacob Saldinger, Angela Violi, and Alfred Hero. \"A deep learning architecture for metabolic pathway prediction.\" Bioinformatics (2019)\n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/baranwa2/Struct2Graph"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Struct2Graph"
        ],
        "type": "Text_excerpt",
        "value": "Contact: <a href=\"https://web.eecs.umich.edu/~mayankb/\">Mayank Baranwal, Postdoctoral Fellow, University of Michigan at Ann Arbor</a>\n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-02T16:51:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-29T14:05:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A PyTorch implementation of GCN with mutual attention for protein-protein interaction prediction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9859491448129081,
      "result": {
        "original_header": "Struct2Graph",
        "type": "Text_excerpt",
        "value": "A PyTorch implementation of GCN with mutual attention for protein-protein interaction prediction \nStruct2Graph uses two graph  convolutional networks (GCNs) with weight sharing, and a mutual attention network to extract relevant geometric features related toquery protein pairs. The details of the GCN architecture is described in our paper (currently under review). \nA dataset of 11160 interactions (5580 positive pairs, 5580 negative pairs) consisting of 4024 proteins was downloaded from UniProt Acc. and IntAct.\n \n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/baranwa2/Struct2Graph/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/baranwa2/Struct2Graph/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "baranwa2/Struct2Graph"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Struct2Graph"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/approach.png"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/baranwa2/Struct2Graph/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Struct2Graph"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "baranwa2"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 47251,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Struct2Graph"
        ],
        "type": "Text_excerpt",
        "value": "* PyTorch\n* scikit-learn\n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "run",
    "download",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:27:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 56
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Struct2Graph"
        ],
        "type": "Text_excerpt",
        "value": "We provide multiple python scripts that incorporate functionalities, such as, downloading PDBs, proceesing them to create protein graphs, creating training and testing datasets and training a GCN-classifier. These scripts must be run in the following order:\n1. download_pdbs.py - will download PDB files corresponding to proteins listed in \"list_of_prots.txt\".\n2. parse_entries.py - will parse/preprocess all the downloaded PDB files.\n3. create_examples.py - will create training and test datasets (both balanced, as well as unbalanced) using examples listed in \"interactions_data.txt\".\n4. k-fold-CV.py - will train the classifier on the balanced set.\n"
      },
      "source": "https://raw.githubusercontent.com/baranwa2/Struct2Graph/master/README.md",
      "technique": "header_analysis"
    }
  ]
}