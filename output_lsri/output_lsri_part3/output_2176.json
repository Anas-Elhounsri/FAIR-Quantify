{
  "application_domain": [
    {
      "confidence": 15.3,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pmelsted/pizzly"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-20T21:55:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-11T14:17:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast fusion detection using kallisto"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9935271835652256,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "pizzly is a program for detecting gene fusions from RNA-Seq data of cancer samples. \nIt requires running [kallisto](https://pachterlab.github.io/kallisto) with the `--fusion`\nparameter (available in version `0.43.1` or later). \n \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8053705646993401,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "pizzly uses the [SeqAn](http://www.seqan.de/) and requires a recent compiler with `c++14` enabled.\nThis means `gcc 4.9` or later on linux or `clang 3.5` or later. Since these compilers are not always\nawailable on cluster systems we provide a precompiled binary under [releases](https://github.com/pmelsted/pizzly/releases). Compiling pizzly also\nrequires `cmake 3.0.0` or later. \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pmelsted/pizzly/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pmelsted/pizzly/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pmelsted/pizzly"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pizzly"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "pizzly"
        ],
        "type": "Text_excerpt",
        "value": "pizzly can be installed via the [Conda package manager](https://conda.io) from the [Bioconda channel](https://bioconda.github.io/).\n\n```bash\nconda create pizzly --name pizzly -c bioconda\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ingredients",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "Pizzly requires the reference transcriptome in FASTA format as well as a GTF file describing the transcriptome.\nWe recommend using the [Ensembl](http://www.ensembl.org/index.html) transcriptomes.\n\nThe example below assumes you have your transcriptome in FASTA format as `transcripts.fa.gz`, the GTF file `transcripts.gtf.gz` \nand your paired-end RNA-Seq data sets in `r1.fastq.gz` and `r2.fastq.gz`\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "The `--output test` parameter is used as a prefix and two files are created `test.fusions.fasta` and `test.json`, this contains the filtered fusion calls. For unfiltered fusion calls, use the corresponding `.unfiltered` files.\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Scripts",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "The `scripts` subfolder contains useful Python scripts\n\n- `get_fragment_length.py` examines an `abundance.h5` produced by `kallisto` and finds the 95th percentile of the fragment length distribution\n- `flatten_json.py` reads the `.json` output and converts to a simple gene table\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Annotations",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "pizzly has been tested on [Ensembl](http://www.ensembl.org/) (versions 75+) and [Gencode](http://www.gencodegenes.org/) (version 19+) annotations. We recommend using the latest Ensembl annotations (version 87 [GTF](ftp://ftp.ensembl.org/pub/release-89/gtf/homo_sapiens/), [FASTA](ftp://ftp.ensembl.org/pub/release-89/fasta/homo_sapiens/cdna/)) for running with pizzly.\n\nNote that for gencode you will need to modify the FASTA file to remove pipe symbols (`|`) from the target names. The following should work (use `gzcat` on macosx)\n\n```\nzcat gencode.v26.transcripts.fa.gz  | tr '|' ' ' | gzip -1 >  gencode.v26.transcripts.fixed.fa.gz\n```\n\nThe FASTA file used must be the same one that was used to build the kallisto index.\n\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999983366621,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "pizzly uses the [SeqAn](http://www.seqan.de/) and requires a recent compiler with `c++14` enabled.\nThis means `gcc 4.9` or later on linux or `clang 3.5` or later. Since these compilers are not always\nawailable on cluster systems we provide a precompiled binary under [releases](https://github.com/pmelsted/pizzly/releases). Compiling pizzly also\nrequires `cmake 3.0.0` or later. \nIn order to compile just run the following in the source directory\n```\nmkdir build\ncd build\ncmake ..\nmake\nmake install\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pmelsted/pizzly/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) [2017], [Pall Melsted]\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "BSD-2\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pmelsted/pizzly/master/logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pizzly"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pmelsted"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 11573530,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 331369,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 120656,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 4322,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 1134,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pmelsted",
          "type": "User"
        },
        "date_created": "2017-07-20T21:30:09Z",
        "date_published": "2017-07-20T21:40:39Z",
        "description": "We recommend that users switch to this release because of a few bug fixes.\r\n\r\n- Wrong strand reported when fusions are only supported by pairs and no split reads\r\n- Bug with negative coordinates fixed\r\n- Bug fixed when reference sequences had lower case characters\r\n- Correct order of `geneA` and `geneB` in JSON output\r\n\r\nAdditionally we now have a scripts folder with useful python scripts\r\n\r\n- `get_fragment_length.py` examines an `abundance.h5` produced by `kallisto` and finds the 95th percentile of the fragment length distribution\r\n- `flatten_json.py` reads the `.json` output and converts to a simple gene table\r\n\r\nLicense was switched from GPL to BSD-2",
        "html_url": "https://github.com/pmelsted/pizzly/releases/tag/v0.37.3",
        "name": "Bug fixes and license switch",
        "release_id": 7115535,
        "tag": "v0.37.3",
        "tarball_url": "https://api.github.com/repos/pmelsted/pizzly/tarball/v0.37.3",
        "type": "Release",
        "url": "https://api.github.com/repos/pmelsted/pizzly/releases/7115535",
        "value": "https://api.github.com/repos/pmelsted/pizzly/releases/7115535",
        "zipball_url": "https://api.github.com/repos/pmelsted/pizzly/zipball/v0.37.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pmelsted",
          "type": "User"
        },
        "date_created": "2017-06-28T10:00:09Z",
        "date_published": "2017-06-28T11:03:04Z",
        "description": "## GTF\r\nThis version includes bug fixes that improve GTF parsing. We now support the Ensembl and Gencode annotations and have been tested with the latest versions.\r\n\r\nNote that for Gencode the FASTA files must be modified so that they match the GTF files (Gencode fasta uses pipes, `|`, as a separator in the FASTA sequence names, rather than a space). This can be fixed by running\r\n\r\n```\r\nzcat gencode.v26.transcripts.fa.gz  | tr '|' ' ' | gzip -1 >  gencode.v26.transcripts.fixed.fa.gz\r\n```\r\n\r\n## Protein coding annotation\r\npizzly limits the fusion reports to transcripts that have been annotated as protein coding. If this information is not present in the annotation, the `--ignore-protein` option ignores this requirement. Running pizzly in this way will most likely increase the number of false positives reported.\r\n\r\n## Warnings\r\npizzly will now warn when there are sequences in the FASTA file with no corresponding annotation and exit if no sequences have available annotation. pizzly also warns if no transcripts are annotated as protein coding.\r\n\r\n",
        "html_url": "https://github.com/pmelsted/pizzly/releases/tag/v0.37.2",
        "name": "Better GTF support",
        "release_id": 6862294,
        "tag": "v0.37.2",
        "tarball_url": "https://api.github.com/repos/pmelsted/pizzly/tarball/v0.37.2",
        "type": "Release",
        "url": "https://api.github.com/repos/pmelsted/pizzly/releases/6862294",
        "value": "https://api.github.com/repos/pmelsted/pizzly/releases/6862294",
        "zipball_url": "https://api.github.com/repos/pmelsted/pizzly/zipball/v0.37.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pmelsted",
          "type": "User"
        },
        "date_created": "2017-04-12T21:07:21Z",
        "date_published": "2017-04-12T21:38:28Z",
        "description": "## Filtering\r\n\r\nPizzly now outputs filtered and unfiltered fusion calls.\r\n\r\nPizzly filters on \r\n\r\n- number of supporting reads\r\n- distance of fusion breakpoint to exon boundaries\r\n- for fusions with unknown breakpoints, only read pairs that observe the maximum fragment length are included\r\n\r\n## Example\r\n\r\nAn example pipeline based on data from Tembe et al., [Open-access synthetic spike-in mRNA-seq data for cancer gene fusions](https://dx.doi.org/10.1186/1471-2164-15-824).\r\n\r\nThe example pipeline is implemented in snakemake.",
        "html_url": "https://github.com/pmelsted/pizzly/releases/tag/v0.37.1",
        "name": "Better filtering",
        "release_id": 6065542,
        "tag": "v0.37.1",
        "tarball_url": "https://api.github.com/repos/pmelsted/pizzly/tarball/v0.37.1",
        "type": "Release",
        "url": "https://api.github.com/repos/pmelsted/pizzly/releases/6065542",
        "value": "https://api.github.com/repos/pmelsted/pizzly/releases/6065542",
        "zipball_url": "https://api.github.com/repos/pmelsted/pizzly/zipball/v0.37.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pmelsted",
          "type": "User"
        },
        "date_created": "2017-03-21T20:45:50Z",
        "date_published": "2017-03-21T20:54:04Z",
        "description": "First release of pizzly.",
        "html_url": "https://github.com/pmelsted/pizzly/releases/tag/v0.37.0",
        "name": "First release",
        "release_id": 5823543,
        "tag": "v0.37.0",
        "tarball_url": "https://api.github.com/repos/pmelsted/pizzly/tarball/v0.37.0",
        "type": "Release",
        "url": "https://api.github.com/repos/pmelsted/pizzly/releases/5823543",
        "value": "https://api.github.com/repos/pmelsted/pizzly/releases/5823543",
        "zipball_url": "https://api.github.com/repos/pmelsted/pizzly/zipball/v0.37.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "pizzly",
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "First we create the kallisto index\n\n```\nkallisto index -i index.idx -k 31 transcripts.fa.gz\n```\n\nNext we quantify using kallisto with fusion detection enabled\n\n```\nkallisto quant -i index.idx --fusion -o output r1.fastq.gz r2.fastq.gz\n```\n\nThis creates the file `output/fusion.txt` which is used by pizzly, finally we run pizzly\n\n```\npizzly -k 31 --gtf transcripts.gtf --cache index.cache.txt --align-score 2 \\\n        --insert-size 400 --fasta transcripts.fa.gz --output test output/fusion.txt\n```\n\nThe parameters to set are \n\n* `--insert-size`, which should be the maximum insert size of the paired-end library (kallisto will estimate this from the reads, default used is 400)\n* `--align-score`, the number of mismatches allowed when aligning reads to a reference transcript (default used is 2)\n`--ignore-protein`, ignore any information about protein coding in the annotation, **warning** this will probably lead to an increase in the number of false positives reported.\n* `--cache`, if this file does not exist, pizzly will parse the GTF (which can take up to a minute or two) and store the required data in the cached file. If the cache file exists (if you've run pizzly previously on the same GTF file), pizzly will parse this file instead, which is much faster than parsing the GTF. \n\n\nA more sophisticated example is in the `test` directory which contains a `snakemake` workflow to index, quantify, call fusions and requantify using `kallisto` and `pizzly`.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/pizzly/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:59:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 80
      },
      "technique": "GitHub_API"
    }
  ]
}