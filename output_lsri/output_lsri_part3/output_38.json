{
  "application_domain": [
    {
      "confidence": 0.9595627052255201,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GNNHap"
        ],
        "type": "Text_excerpt",
        "value": "> Zhuoqing Fang, Gary Peltz, An Automated Multi-Modal Graph-Based Pipeline for Mouse Genetic Discovery, Bioinformatics, 2022;, btac356, https://doi.org/10.1093/bioinformatics/btac356\n\n\n![GNNHap](./GNNHap.jpg)\n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zqfang/GNNHap"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-15T10:10:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-21T20:29:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Graph neural newtork for haplotype based genetic mapping (Mouse GWAS)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8887818597017149,
      "result": {
        "original_header": "GNNHap",
        "type": "Text_excerpt",
        "value": "Graph Neural Network based Haplotype Prioritization for inbred mouse. \n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8550467140957275,
      "result": {
        "original_header": "Build Graph and Train Model",
        "type": "Text_excerpt",
        "value": "if you would like to use our pretrain model, go to the prediction step or `web interface` step.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Download files",
        "parent_header": [
          "GNNHap",
          "Build Graph and Train Model"
        ],
        "type": "Text_excerpt",
        "value": "see Download.md"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zqfang/gnnhap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zqfang/GNNHap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zqfang/GNNHap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GNNHap"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zqfang/gnnhap/master/run.single.case.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zqfang/gnnhap/master/./GNNHap.jpg"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zqfang/gnnhap/master/webapp/static/images/GNNHap.png"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GNNHap"
        ],
        "type": "Text_excerpt",
        "value": "- numpy\n- pandas\n- Pytorch\n- Pytorch Geometric\n- torchmetrics\n- sentencetransformers\n- pubtator\n- spacy\n    - en_ner_bionlp13cg_md\n    ```shell\n    pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.3.0/en_ner_bionlp13cg_md-0.3.0.tar.gz\n    ```\n\n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9591665479497115,
      "result": {
        "original_header": "Prediction",
        "type": "Text_excerpt",
        "value": "Download the [GNNHap_Bundle](https://doi.org/10.5281/zenodo.6463988), which contained necessary files  \n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8973705366429242,
      "result": {
        "original_header": "3. Train your GNN and LinkPredictor",
        "type": "Text_excerpt",
        "value": "```shell\n# GNN encoder + Linkpredictor\n## hidden_size 50 fits to a 24G GPU card\n## hidden_size 64 fits to a 32G GPU card\npython GNNHap/train_gnn.py --batch_size 10000 \\\n                    --hidden_size 64 \\\n                    --num_epochs 5 \\\n                    --mesh_embed ${WKDIR}/human_gene_unirep.embeb.csv \\\n                    --gene_embed ${WKDIR}/mesh.sentencetransformer.embed.csv \\\n                    --gene_mesh_graph ${WKDIR}/human_gene_mesh_hetero_nx.gpkl\n\n# optional, we won't use it in later steps\n# train Link predictor only\npython GNNHap/train_mlp.py --batch_size 10000 \\\n                    --hidden_size 64 \\\n                    --num_epochs 5 \\\n                    --mesh_embed ${WKDIR}/human_gene_unirep.embeb.csv \\\n                    --gene_embed ${WKDIR}/mesh.sentencetransformer.embed.csv \\\n                    --gene_mesh_graph ${WKDIR}/human_gene_mesh_hetero_nx.gpkl\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zqfang/GNNHap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GNNHap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zqfang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 240613,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 20693,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 5974,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 411,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Run Full GNNHap pepeline (Combined with Haplomap, or HBCGM)",
        "parent_header": [
          "GNNHap",
          "Prediction"
        ],
        "type": "Text_excerpt",
        "value": "see the [full guide](https://github.com/zqfang/haplomap) to get Haplomap (a.k.a HBCGM) results\n\nAn snakemake pipeline in the `example` folder shows the full commands.\n\n```shell\nsnakemake -s gnnhap.smk --configfile config.yaml -j 12 -p\n```\n\nFor HBCGM results,\n\n**Case 1**: single result file\n```python\npython GNNHap/predict.py --bundle /path/to/GNNHap_Bundle  \\\n                  --hbcgm_result_dir ${RESULTS}  \\ # parent path to *results.txt\n                  --mesh_terms D018919,D009389,D043924,D003315  \\ # separate each term with comma\n                  --species mouse \\\n                  --num_cpus 12\n            \n```\n\n**Case 2**: multiple result files\n**NOTE 1**: the `${HBCGM_RESULT_DIR}`  folder looks like this:\n``` \n|-RESULTS\n|--- MPD_000.results.txt\n|--- MPD_001.results.txt\n...\n```\n\n**NOTE 2**: provide a json file for `--mesh_terms` if multiple result file are predicted.\nthe json file records the each files's MeSH term IDs.\n\n```python\npython GNNHap/predict.py --bundle /path/to/GNNHap_Bundle  \\\n                  --hbcgm_result_dir ${RESULTS} \\ # parent path to *results.txt\n                  --mesh_terms mpd2mesh.json  \\\n                  --species mouse\n                  --num_cpus 12\n            \n```\n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run this program with a web interface ?",
        "parent_header": [
          "GNNHap"
        ],
        "type": "Text_excerpt",
        "value": "set up correct path for all required files and programs.\n\nrun\n```shell\ncd webapp\npython app.py\n```\n\nyou need to update \n- the `config.json` file for the web server\n- the `config.yaml` for gnnhap.smk to run haplomap\n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:28:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Simple usage case",
        "parent_header": [
          "GNNHap",
          "Prediction"
        ],
        "type": "Text_excerpt",
        "value": "input only need a text file with at least two columns (gene_symbol, MeSH_ID)\n\nexample.txt (first two column are required):\n```\nGeneName        MeSH    p_val   avg_log2FC      pct.1   pct.2   p_val_adj\nITGA1   D007694 5.15054414391506e-228   2.01032118407705        1       0.108   1.2017764650997e-223\nITGAE   D007694 3.27480562769949e-160   1.89432929036404        1       0.242   7.64110397111121e-156\nACP5    D007694 5.98597006687121e-154   2.11626850602703        0.851   0.147   1.39670639570306e-149\nCSF1    D007694 7.41183069402442e-146   2.14699909313243        0.744   0.102   1.72940245583672e-141\nLGALS3  D007694 8.92764452941871e-123   1.6742751831308 0.818   0.182   2.08308729804927e-118\n\n```\nrun prediction\n```shell\npython GNNHap/predict_simple.py \n            --bundle /path/to/GNNHap_Bundle \n            --input example.txt \n            --output example.gnn.txt\n            --species human # or mouse\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/zqfang/gnnhap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}