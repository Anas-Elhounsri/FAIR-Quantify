{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)"
        ],
        "type": "Text_excerpt",
        "value": "BLAST: https://doi.org/10.1016/S0022-2836(05)80360-2\n\nMAFFT: https://doi.org/10.1093/molbev/mst010\n\nFastTree2: https://doi.org/10.1371/journal.pone.0009490\n\ndendropy: https://dendropy.org/ and https://doi.org/10.1093/bioinformatics/btq228\n\nWhen using KIPEs in your research, please cite:\n\nPucker B., Reiher F., and Schilbert H.M. (2020). Automatic identification of players in the flavonoid biosynthesis with application on the biomedicinal plant _Croton tiglium_. Plants 2020, 9, 1103. doi:[10.3390/plants9091103](https://doi.org/10.3390/plants9091103).\n\nRempel A, Choudhary N, Pucker B (2023) KIPEs3: Automatic annotation of biosynthesis pathways. PLoS ONE 18(11): e0294342. doi:[10.1371/journal.pone.0294342](https://doi.org/10.1371/journal.pone.0294342).\n\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bpucker/KIPEs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-12T16:15:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-04T20:57:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Knowledge-based Identification of Pathway Enzymes (KIPEs) performs an automatic annotation of the flavonoid biosynthesis steps in a new transcriptome of genome sequence assembly."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "HTML summary",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Result files"
        ],
        "type": "Text_excerpt",
        "value": "The final output of KIPEs is a HTML document called 'SUMMARY.html'. This table shows the best candidates for all steps in the pathway. It is possible to specify the order of genes in a pathway using the `--pathway` option (see below for details). Previously described amino acid residues are checked in all candidate sequences and the results are summarized in this table. Mismatches of conserved residues are indicated by highlighting in red.\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9968937681040776,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "This tool enables the identification of candidate sequences in a collection of peptide sequences, transcript sequences, or in a genome sequence. An initial BLAST (BLASTp, tBLASTn) search is used to get putative sequences which are than analysed in a global alignment with MAFFT and screened for the presence of conserved residues and conserved domains. As a proof of concept, this tool was applied for the identification of genes in the flavonoid biosynthesis. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952056696647554,
      "result": {
        "original_header": "Peptide sequence collection (result of an assembly annotation process)",
        "type": "Text_excerpt",
        "value": "If a collection of peptide sequences is provided, BLASTp is applied with a manually curated collection of bait sequences. Candidates are identified based on similarity cutoffs. Next, these sequences are subjected to a global alignment via MAFFT. The overall similarity of candidate and bait sequences is calculated. Additionally, the presence of conserved (functionally relevant) amino acid residues and conserved domains is inspected based on a reference sequence. If available, a peptide sequence collection should be provided instead of a transcript sequence set or a genome sequence. The computational costs of the analysis are substantially lower. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9823359023866872,
      "result": {
        "original_header": "Genome sequence (genome assembly)",
        "type": "Text_excerpt",
        "value": "A tBLASTn is applied to identify regions in the genome sequence, which might encode the desired peptide. As BLAST hits only indicate exons and might be fragmented, BLAST hits are group to putative genes. Fragments of a putative gene are extended to account for incomplete hits at exon borders. This includes the detection of splice sites (currently only canonical GT-AG combinations). If full length peptide sequences are provided as query, the stop codon should be indicated by a * at the end of the peptide sequence. We recommend to run a proper gene prediction tool like [AUGUSTUS](https://github.com/Gaius-Augustus/Augustus) or [GeMoMa](http://www.jstacs.de/index.php/GeMoMa) if possible. These dedicated tools will outperform the very basic gene structure identification methods implemented in KIPEs in most cases. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9939504831016343,
      "result": {
        "original_header": "Similarity matrix",
        "type": "Text_excerpt",
        "value": "One similarity matrix is generated per bait sequence file. The similarity of all candidate sequences against all bait sequences is displayed. Although this table is generated as a text file, it is possible to open these files as tables (e.g. with [Calc](https://www.libreoffice.org/discover/calc/)). \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9873482281209219,
      "result": {
        "original_header": "Conserved residues",
        "type": "Text_excerpt",
        "value": "The presence of all conserved residues is analysed in all candidate sequences. Presence/absence are indicated in a table comprising all sequences and all residues. A summary of these results is diplayed in a HTML file as described above. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9871525738742011,
      "result": {
        "original_header": "Conserved regions",
        "type": "Text_excerpt",
        "value": "The output format of this analysis of conserved regions matches the output format of conserved residues. The percentage of identical amino acid residues in the domain is calculated for each candidate sequence. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9968074517183794,
      "result": {
        "original_header": "Limitations and outlook",
        "type": "Text_excerpt",
        "value": "As this tool is an automatic identification pipeline for candidate genes, the resolution of this analysis might be inferior to a manual annotation in certain cases like ODDs (F3H, FLS, ANS/LDOX). Therefore, it is recommended to carefully inspect the results from this pipeline. Generally, the quality of results is depending on the input quality. This pipeline was developed for the annotation of genes in the flavonoid biosynthesis of plants, but could be applied to other pathways if sufficient information is available. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9120461295341028,
      "result": {
        "original_header": "Automatic construction of gene trees",
        "type": "Text_excerpt",
        "value": "Once KIPEs identified candidate sequences for all the steps in a pathway or all members of a gene family, users might be interested to see these sequences in a phylogenetic tree. Since it is time consuming to construct single gene trees for all steps of the flavonoid biosynthesis, we added a script to do this automatically. \n\n```\nUsage:\n  python forester.py --in <DIR> --out <DIR> --ref <DIR>\n \nMandatory:\n  --in          STR    Directory with (multiple) FASTA files (KIPEs results folder 'final_pep_files')\n  --out         STR    Output directory\n  --ref         STR    Directory containing multiple FASTA file with reference sequences (e.g. initial baits)\n\t\t\n  Optional:\n  --occ         FLOAT  Minimal occupancy in alignment columns\n  --clean       STR    Activates the removal of all intermediate files\n  --mafft       STR    Full path to MAFFT (if not in your $PATH)\n  --fasttree    STR    Full path to the FastTree binary (if not in your $PATH)\n``` \n\n`--in` is the full path to the folder 'final_pep_files' in the KIPEs output. This folder contains FASTA files which are used for the construction of gene trees. \n`--out` is the output folder. All FASTA files and trees will be stored in this folder. If the folder does not exist already, it will be created. \n`--ref` is a full path with FASTA files that serve as reference in the gene tree. This could be the folder with initial bait sequences used for KIPEs. \n`--clean` activates the removal of all intermediate files. This option is off by default to allow inspection of temporary files and to avoid removal of folders by accident. \n`--mafft` specifies the MAFFT path if this is not globally available. \n`--fasttree` specifies the FastTree path if this is not globally available. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9302094761773461,
      "result": {
        "original_header": "Collect KIPEs results",
        "type": "Text_excerpt",
        "value": "When running KIPEs on a large number of data sets, it can be helpful to collect the best candidates in one table. This scripts allows filtering of the candidates and produces a summary table of all analyzed species: \n\n```\nUsage:\n  python3 collect_KIPEs_results.py --in <DIR> --out <DIR> --genes <STR>\n \nMandatory:\n  --in          STR    Directory with KIPEs result folders\n  --out         STR    Output file\n  --genes       STR    Comma-separated list of genes\n\t\t\n  Optional:\n  --mapping     STR    Folder name to species name mapping\n  --minsim      FLOAT  Minimal similarity\n  --minmatches  FLOAT  Minimal residue match ratio\n``` \n\n`--in` is the full path to the folder that contains the KIPEs result folder of the analyses of many species. \n`--genes` is a list of all gene names that should be listed in the final result table. The names of genes are comma-separated e.g. \"CHS,CHI1,F3H\". \n`--mapping` is the full path to a table that contains the name of folders in the directory provided via `--in` in the first column and the corresponding species name in the second column. \n`--minsiim` minimal similarity of a candidate to the bait sequences.[0.5] \n`--minmatches` minimal ratio of detected conserved amino acid residues.[0.9] \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9769085229251304,
      "result": {
        "original_header": "Interested in another pathway?",
        "type": "Text_excerpt",
        "value": "KIPEs is not restricted to analyzing the flavonoid biosynthesis. This README explains how to add a new pathway to KIPEs. \nIMPORTANT NOTICE: Please get in touch before constructing your own input files. We are already working on the integration of additional pathways. You might be able to save time and energy.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9921863674768343,
      "result": {
        "original_header": "1) Find a paper describing the pathway/reactions of interest and at least one characterized sequence",
        "type": "Text_excerpt",
        "value": "If you do not know all steps involved in the pathway of interest, you need to identify publications describing it. This is important to include all known steps in the following analysis. It is not possible to discover novel pathways using KIPEs. You need to identify at least a single characterized sequence for each step in the pathway - more are better.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9825910703235807,
      "result": {
        "original_header": "3) Construct FASTA file of collected sequences",
        "type": "Text_excerpt",
        "value": "The final result of this preliminary analysis is a FASTA file containing bait sequences for KIPEs. The quality of this sequence collection determines the quality of the KIPEs results.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9434601144310948,
      "result": {
        "original_header": "4) Construct file with conserved amino acid residues",
        "type": "Text_excerpt",
        "value": "If possible, construct a file describing the positions of conserved amino acid residues. Relying on highly conserved residues might be an option if no additional information is available. However, the quality of this list of residues is decisive. See the descriptions above for details about the file structure. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/bpucker/KIPEs/wiki/Datasets"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/bpucker/KIPEs/wiki"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bpucker/KIPEs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bpucker/KIPEs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bpucker/KIPEs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KIPEs (Knowledge-based Identification of Pathway Enzymes)"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/255121677"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)"
        ],
        "type": "Text_excerpt",
        "value": "While some dependencies are required, this tool does not require an installation. Downloading and executing the script on a Linux system is sufficient. There is currently no support for other operating systems. Most required modules are included in the initial Python installation, but dendropy might not be available on all systems. \n\n[Python3](https://www.python.org/) (```sudo apt-get install python3.8```). It is also possible to use other Python3 versions.\n\n[dendropy](https://dendropy.readthedocs.io/en/main/) (```sudo apt install python3-pip && python3 -m pip install git+https://github.com/jeetsukumaran/DendroPy.git```)\n\n[MAFFT](https://mafft.cbrc.jp/alignment/software/linuxportable.html) (```sudo apt-get install -y mafft```)\n\n[BLAST](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/) (```sudo apt-get install ncbi-blast+```) or [HMMER](http://hmmer.org/documentation.html)(```conda install -c bioconda hmmer```)\n\n[FastTree](http://www.microbesonline.org/fasttree/#Install) (```sudo apt-get install -y fasttree```) and/or [RAxML-NG](https://github.com/amkozlov/raxml-ng) (precompiled binaries recommended)\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data sets",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)"
        ],
        "type": "Text_excerpt",
        "value": "**baits.tar.gz** recommended data sets for analysing the flavonoid biosynthesis in a new species.\n\n**residues.tar.gz** recommended data sets for analysing the flavonoid biosynthesis in a new species.\n\n**FlavonoidBioSynBaits_v1.0.tar.gz** was used in the proof of concept of [KIPEs](https://doi.org/10.3390/plants9091103) analysing the [transcriptome assembly of *Croton tiglium*](https://doi.org/10.3389/fmolb.2018.00062).\n\n**MYB_bHLH_WDR_v1.0.tar.gz** was used in the proof of concept of [KIPEs](https://doi.org/10.3390/plants9091103) analysing the [transcriptome assembly of *Croton tiglium*](https://doi.org/10.3389/fmolb.2018.00062). This data set comprises transcription factors belonging to the three families MYB, bHLH, and WDR."
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MYB",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Data sets"
        ],
        "type": "Text_excerpt",
        "value": "bHLHs: *Arabidopsis thaliana* [Heim et al., 2003](https://academic.oup.com/mbe/article/20/5/735/985548), *Vitis vinifera* [Wang et al., 2018](https://www.frontiersin.org/articles/10.3389/fpls.2018.00064/full), *Nelumbo nucifera* [Mao et al., 2019](https://peerj.com/articles/7153/), *Citrus grandis* [Zhang et al., 2020](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-020-6644-7), *Musa acuminata* [Wang et al., 2020](https://doi.org/10.3389/fpls.2020.00650), and *Solanum melongena* [Tian et al., 2019](https://doi.org/10.7717/peerj.7768);\nWDRs: *Arabidopsis thaliana* [Nocker et al., 2003](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC317288/), *Triticum aestivum* [Hu et al., 2018](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-5157-0), and *Setaria italica* [Mishra et al., 2014](https://doi.org/10.1371/journal.pone.0086852)\n\n\n#### MYB ###\n\nAlthough KIPEs can be used to identify MYBs, it is recommend to use the **[MYB_annotator](https://github.com/bpucker/MYB_annotator)** instead. This dedicated tool allows a more reliable and computationally optimized identification of MYBs. Functional annotations are also added.\n\n<details>\n<summary>(click to expand)</summary>\n\n(v1.0) *Arabidopsis thaliana* [Stracke et al., 2001](https://doi.org/10.1016/S1369-5266(00)00199-0):The R2R3-MYB gene family in Arabidopsis thaliana\n\n(v1.0) *Vitis vinifera* [Matus et al., 2008](https://bmcplantbiol.biomedcentral.com/articles/10.1186/1471-2229-8-83): Analysis of the grape MYB R2R3 subfamily reveals expanded wine quality-related clades and conserved gene structure organization across Vitis and Arabidopsis genomes\n\n(v1.0) *Beta vulgaris* [Stracke et al., 2014](https://bmcplantbiol.biomedcentral.com/articles/10.1186/s12870-014-0249-8): Genome-wide identification and characterisation of R2R3-MYB genes in sugar beet (Beta vulgaris)\n\n(v1.0) *Musa acuminata* [Pucker et al., 2020](https://doi.org/10.1371/journal.pone.0239275): The R2R3-MYB gene family in banana (Musa acuminata): genome-wide identification, classification and expression patterns\n\n(v1.1) *Croton tiglium* [Pucker et al., 2020](https://doi.org/10.3390/plants9091103): Automatic identification of players in the flavonoid biosynthesis with application on the biomedicinal plant Croton tiglium\n\n(v1.1) *Marchantia polymorpha* (Pucker, 2021): Genome-wide identification of *Marchantia polymorpha* MYBs via KIPEs\n\nThis dataset is a trade-off between covering a broad phylogenetic width and small size (=short run time). Please have a look at the [wiki](https://github.com/bpucker/KIPEs/wiki/Datasets) for more information about additional MYB sequence datasets.\n  \n  </p>\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9697355117490145,
      "result": {
        "original_header": "Automatic construction of gene trees",
        "type": "Text_excerpt",
        "value": "\n```\nUsage:\n  python forester.py --in <DIR> --out <DIR> --ref <DIR>\n \nMandatory:\n  --in          STR    Directory with (multiple) FASTA files (KIPEs results folder 'final_pep_files')\n  --out         STR    Output directory\n  --ref         STR    Directory containing multiple FASTA file with reference sequences (e.g. initial baits)\n\t\t\n  Optional:\n  --occ         FLOAT  Minimal occupancy in alignment columns\n  --clean       STR    Activates the removal of all intermediate files\n  --mafft       STR    Full path to MAFFT (if not in your $PATH)\n  --fasttree    STR    Full path to the FastTree binary (if not in your $PATH)\n``` \n`--out` is the output folder. All FASTA files and trees will be stored in this folder. If the folder does not exist already, it will be created. \n`--mafft` specifies the MAFFT path if this is not globally available. \n`--fasttree` specifies the FastTree path if this is not globally available. \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.962985828685489,
      "result": {
        "original_header": "1) Find a paper describing the pathway/reactions of interest and at least one characterized sequence",
        "type": "Text_excerpt",
        "value": "If you do not know all steps involved in the pathway of interest, you need to identify publications describing it. This is important to include all known steps in the following analysis. It is not possible to discover novel pathways using KIPEs. You need to identify at least a single characterized sequence for each step in the pathway - more are better.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8246437061634573,
      "result": {
        "original_header": "Collect KIPEs results",
        "type": "Text_excerpt",
        "value": "\n```\nUsage:\n  python3 collect_KIPEs_results.py --in <DIR> --out <DIR> --genes <STR>\n \nMandatory:\n  --in          STR    Directory with KIPEs result folders\n  --out         STR    Output file\n  --genes       STR    Comma-separated list of genes\n\t\t\n  Optional:\n  --mapping     STR    Folder name to species name mapping\n  --minsim      FLOAT  Minimal similarity\n  --minmatches  FLOAT  Minimal residue match ratio\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bpucker/KIPEs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "annotation, anthocyanins, bioinformatics, evolution, flavones, flavonoids, flavonols, plants, proanthocyanidins, sequencing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KIPEs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bpucker"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 189245,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://dendropy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bpucker",
          "type": "User"
        },
        "date_created": "2022-05-28T15:22:36Z",
        "date_published": "2022-05-28T15:26:49Z",
        "description": "KIPEs v0.35 release for DOI assignment",
        "html_url": "https://github.com/bpucker/KIPEs/releases/tag/v0.35",
        "name": "KIPEs v0.35",
        "release_id": 68073810,
        "tag": "v0.35",
        "tarball_url": "https://api.github.com/repos/bpucker/KIPEs/tarball/v0.35",
        "type": "Release",
        "url": "https://api.github.com/repos/bpucker/KIPEs/releases/68073810",
        "value": "https://api.github.com/repos/bpucker/KIPEs/releases/68073810",
        "zipball_url": "https://api.github.com/repos/bpucker/KIPEs/zipball/v0.35"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the main function (KIPEs)",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nUsage:\n  python3 KIPEs3.py --baits <DIR> --out <DIR> --subject <FILE>\n  or\n  python3 KIPEs3.py --baits <DIR> --out <DIR> --subjectdir <DIR>\n\nMandatory:\n  Bait sequences\n  --baits          STR    Directory with (multiple) FASTA files\n  \n  Output directory\n  --out            STR    Output directory\n\n  Input sequences\n  --subject        STR    Multiple FASTA file with sequences to screen\n  --subjectdir     STR    Directory containing multiple FASTA file with sequences to screen\n\t\t\n  Optional:\n  --positions      STR    Directory with text files (one per step in pathway)\n  --seqtype        STR    Defines type of input sequence (pep|rna|dna)[pep]\n \n  --cpus           INT    Number of threads in BLAST runs [10]\n  --scoreratio     FLOAT  BLAST score ratio of self vs. input sequences [0.3]\n  --simcut         FLOAT  Minimal similarity of BLAST hits [40.0]\n  --checks         STR    Validation of input data (on|off)[on]\n   \n  --genesize      INT    Maximal gene size (for tblastn hit grouping) [5000]\n  --minsim        FLOAT  Minimal similarity required in global alignment [0.4]\n  --minres        FLOAT  Minimal proportion of conserved residues [-1.0]\n  --minreg        FLOAT  Minimal proportion of conserved regions [-1.0]\n  --pathway       STR    Full path to text file with pathway enzyme names (default is alphabetical sorting)\n  --possibilities INT    Maximal number of enzyme functions to consider per sequence [3]\n   \n  --mafft          STR    Full path to MAFFT (if not in your $PATH)\n  --blastp         STR    Full path to the BLASTp binary (if not in your $PATH)\n  --tblastn        STR    Full path to the tBLASTn binary (if not in your $PATH)\n  --makeblastdb    STR    Full path to the makeblastdb binary (if not in your $PATH)\n  \n  --fasttree       STR    Full path to the FastTree binary\n  \n  --forester       STR    Activates the automatic construction of gene trees (on|off)[off]\n  \n  --exp            STR    Gene expression file (activates heatmap construction)\n  --rcut           FLOAT  Minimal correlation cutoff [0.3]\n  --pcut           FLOAT  Maximal p-value cutoff [0.05]\n  --minexp         INT    Minimal expression per gene [30]\n```\n\n\n`--baits` is the full path to a folder containing (mutliple) FASTA files. The filename needs to match the gene name. Extension should be '.fasta' or '.fa'.\n\n`--out` is the full path to an output folder which will be created if necessary. All temporary and result files will be stored in this folder and subfolders therein.\n\n`--subject` is the full path to an input multiple FASTA file. A collection of peptide (pep), transcript (rna), or genomic (dna) sequences can serve as input. The appropriate input data type needs to be specified via `--seqtype` (pep|rna|dna).\n\n`--subjectdir` can be used to run KIPEs on multiple data sets (to analyse multiple species). All subject files in the provided folder are analysed consecutively. It is important that all data sets are of the same sequence type (`--seqtype` (pep|rna|dna)).\n\n`--positions` (or `--residues`) is the full path to a folder containing text files matching the provided FASTA files. The filename needs to match the gene name. Example: CHS.fasta contains the bait sequences and CHS.txt contains information about relevant amino acid residues and domains. File extension should be '.txt' or '.res'. The header line starts with an exclamation mark followed by the reference sequence name. It is crucial that the name of this sequence is matched by one entry in the bait sequences FASTA file. Each of the following lines contains information about one important amino acid residue or a domain. The type of feature is indicated in the first column using R to specify residues or D to specify domains. Fields are separated by tab (not space!). The format of entries of residues and domains is slightly different as you can see in this example:\n\n!AtCHS \\\nR\tR\t13\tcomment1 \\\nR\tQ,X\t16\tcomment2 \\\nR\tR\t17\tcomment3 \\\nD\tmalonyl-CoA_binding_motif\t313\t329\tcomment4\n\nResidues: Important residues have their amino acid in the second column (one letter code!) and the position in the third column. It is possible to specify multiple alternative amino acids for one position as indicated by the 'X' in the second entry. Columns following the third column can be used for user comments and are ignored by KIPEs.\n\nDomains: The domain entry indicator (D) is followed by the name of the domain in the first column. This name must not contain any TABs. The third column contains the start position of the domain and the fourth column contains the end position. All following columns are ignored by KIPEs and can be used for user comments.\n\n`--seqtype` specifies the input data type as peptide (pep), transcript (rna), or genomic (dna) sequences.\n\n`--cpus` specifies the number of threads to use for BLAST.\n\n`--scoreratio` specifies the minimal score ratio between BLAST hits against the subject sequences and the bait sequence itself. The value range is 0.0 to 1.0 with default at 0.3.\n\n`--simcut` specifies the minimal similarity of BLAST hits against the subject to be considered. The value range is 0 to 100 with default at 40.\n\n`--checks` activates (on) or deactivates (off) the validation of input data. Sequence names provided in the conserved positions files are checked against the sequence names in the bait sequence files. \n\n`--genesize` specifies the maximal distance between tblastn hits to be considered as parts of the same gene.\n\n`--minsim` specifies the minimal similariy required in the global alignment. A low value leads to a high sensitivity, but causes the analysis of more sequences thus increasing the run time.\n\n`--minres` specifies the minimal proportion (0.0 - 1.0) of important amino acid residues that need to be conserved. This filtering option should only be used to remove low quality hits. However, manual inspection of top hits with just a few amino acid substitutions is recommended. Sequences with amino acid substitutions might have lost the ancestral function of an enzyme, but could have gained a new one.\n\n`--minreg` specifies the minimal proportion (0.0 - 1.0) of domains that need to be conserved. This filtering option should only be used to remove low quality hits. However, manual inspection of top hits with just a few amino acid substitutions is recommended. Sequences with amino acid substitutions in these domains might have lost the ancestral function of an enzyme, but could have gained a new one.\n\n`--pathway` can be used to provide the order of all steps in the pathway as a text file. One enzyme/gene name needs to be given per line and the names need to match the names of provided data files (bait sequence and residue/domain info files) excactly.If no information about the pathway genes/enzymes is provided, results will be sorted in alphabetical order. Enzyme/gene names missing from the pathway file will be appended to the provided list to avoid the loss of results.\n\n\n`--possibilities` specifies the number of different enzyme functions that are considered per sequence. This argument is relevant if looking for multiple different enzymes with high overall sequence similarity e.g. CHS/STS or F3H/FLS/ANS(LDOX). One sequence can be checked for the relevant amino acid residues of each of these enzymes to allow a high fidelity classification.\n\n\n\n`--mafft` full path to MAFFT binary if this is not included in $PATH. MAFFT can be downloaded as a single binary here: https://mafft.cbrc.jp/alignment/software/ .\n\n`--blastp` full path to blastp binary if this is not included in $PATH. BLAST can be downloaded from the [NCBI](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download).\n\n`--tblastn` full path to tblastn binary if this is not included in $PATH. BLAST can be downloaded from the [NCBI](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download).\n\n`--makeblastdb` full path to makeblastdb binary if this is not included in $PATH. BLAST can be downloaded from the [NCBI](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download).\n\n`--fasttree` full path to FastTree binary. If this option is set, a phylogenetic tree is used to classify candidate sequences. FastTree can be downloaded as a single binary file here: http://www.microbesonline.org/fasttree/ .\n\n`--forester` activates the automatic construction of gene tree with all identified candidates. One tree per step in the pathway is constructed with FastTree. The construction of gene trees requires that the `--fasttree`  is used. Otherwise, FastTree is expected in the $PATH. Default: off.\n\n`--exp` specifies gene expression file. The first column contains the gene IDs which need to match the sequence IDs of the dataset analyzed by KIPEs. The first row contains the names of samples. Providing a gene expression file activates the construction of a co-expression heatmap with all candidate genes. Default: off.\n\n`--rcut` specifies the minimal correlation cutoff value. Only genes with at least this strength of correlation are reported. Default: 0.3.\n\n`--pcut` specifies the maximal p-value cutoff. Only genes with a correlation that has a lower p-value are reported. Default: 0.05.\n\n`--minexp` specifies the minimal expression per gene (across all samples) that is required for a gene to be considered in the co-expression analysis. Default: 30.\n  \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Run tree-based selection of additional sequences",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Interested in another pathway?"
        ],
        "type": "Text_excerpt",
        "value": "KIPEs is based on information already available in the literature and in databases. Therefore, it is crucial to identify well characterized bait sequences and conserved amino acid residues in the active center. You can complement this dataset by looking for orhtologs. These sequences require a manual inspection. Yang et al., 2015 described a pipeline for the identification of orthologs based on an initial sequence. This approach can also be used to prepare a collection of sequences for exploration if conserved amino acid residues are not known yet.\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:18:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "General recommendation",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Full paths should be used to specify input and output files and folders. Sequence names should not contain white space characters like spaces and TABs. Underscores can be used to replace spaces.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generating tables of conserved residues",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The generation of required input data (conserved residues) can be performed based on a multiple FASTA file which contains previously characterized sequences of the same gene in multiple species.\n\n\n```\nUsage:\n  python get_cons_pos.py --in <FILE> --out <DIR> --ref <STRING> --name <STRING>\n\nMandatory:\n  --in STR          A multiple FASTA file. \n  --out STR         Directory for temporary and output files.\n  --ref STR         Name of the reference sequence.\n  --name STR        Name of the output files.\n\t\t\nOptional:\n  --mincons FLOAT  Minimal conservation frequency.[1.0]\n  --mafft STR      Full path to MAFFT (if not in your $PATH)\n```\n\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Identification of residues for classification",
        "parent_header": [
          "KIPEs (Knowledge-based Identification of Pathway Enzymes)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "In order to differentiate between enzymes with high sequence similarity (e.g. CHS, STS, and LAP5), known sequences of each type can be collected in a multiple FASTA file. This scripts allows the identification of residues which differentiate sequences of the different types. \n\n```\nUsage:\n  python find_contrasting_residues.py --in <FILE> --out <DIR> --ref <STRING> --pos <STRING> --neg <STRING>\n  or\n  python find_contrasting_residues.py --in1 <FILE> --in2 --out <DIR> --ref <STRING>\n  \nArguments:\n  --in  STR         A multiple FASTA file.\n  --in1 STR         A multiple FASTA file with white list sequences.\n  --in2 STR         A multiple FASTA file with black list sequences.\n  --out STR         Directory for temporary and output files.\n  --ref STR         Name of the reference sequence.\n  --pos STR         Comma-separated names of sequences (white list).\n  --neg STR         Comma-separated names of sequences (black list).\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bpucker/KIPEs/master/README.md",
      "technique": "header_analysis"
    }
  ]
}