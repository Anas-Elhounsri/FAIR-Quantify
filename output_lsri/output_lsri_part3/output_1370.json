{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/swidler/LINADMIX"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-12T07:29:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-12T21:17:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8821794423665981,
      "result": {
        "original_header": "LINADMIX",
        "type": "Text_excerpt",
        "value": "LINADMIX is an algorithm that tests how well a mixture of ancient populations explains the genetics of a modern population. \n-the .fam and .raw files from PLINK \n-the .P and .Q files from ADMIXTURE \nThe input file names and their directory should be specified in the config file. In the same script, the user can specify the name of the output directory and file, as well as the source and target populations, the desired number of bootstrap repetitions, and the minimum Q-value for the variance calculations. \nThe output is a text file that gives the target population and the source populations, followed by the mixing coefficients and standard errors (corresponding to the source populations) and the P value. \n"
      },
      "source": "https://raw.githubusercontent.com/swidler/linadmix/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/swidler/linadmix/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/swidler/LINADMIX/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "swidler/LINADMIX"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LINADMIX"
      },
      "source": "https://raw.githubusercontent.com/swidler/linadmix/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9480054213673127,
      "result": {
        "original_header": "LINADMIX",
        "type": "Text_excerpt",
        "value": "\n**Required modules:** \nnumpy, pandas, qpsolvers, copy, itertools \nThe script takes no command line inputs and can be run using the command **python run_linadmix.py**. \nThe *example* directory contains 9 files. Five are examples of the input files LINADMIX expects. The 2 config files show how the variables are set. The .txt\nfiles are the outputs using the example inputs (results may vary slightly).\nRun the examples using the run_linadmix_example.py/run_linadmix_example2.py scripts. \n"
      },
      "source": "https://raw.githubusercontent.com/swidler/linadmix/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8351020691532276,
      "result": {
        "original_header": "LINADMIX",
        "type": "Text_excerpt",
        "value": "The master script (run_linadmix.py) expects 5 input files: \nThe script takes no command line inputs and can be run using the command **python run_linadmix.py**. \nThe *example* directory contains 9 files. Five are examples of the input files LINADMIX expects. The 2 config files show how the variables are set. The .txt\nfiles are the outputs using the example inputs (results may vary slightly).\nRun the examples using the run_linadmix_example.py/run_linadmix_example2.py scripts. \n"
      },
      "source": "https://raw.githubusercontent.com/swidler/linadmix/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/swidler/LINADMIX/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LINADMIX"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "swidler"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "OpenEdge ABL",
        "size": 2671488,
        "type": "Programming_language",
        "value": "OpenEdge ABL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HiveQL",
        "size": 52272,
        "type": "Programming_language",
        "value": "HiveQL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 30719,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/swidler/linadmix/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:45:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}