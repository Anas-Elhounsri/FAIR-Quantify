{
  "application_domain": [
    {
      "confidence": 0.851627323525217,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lLegon/gcFront"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-08T18:23:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-03-29T09:03:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gcFront searches genome-scale metabolic models to find combinations of gene/reaction KOs that will enforce growth coupling. gcFront does so with a multiobjective genetic algorithm that identifies a Pareto front of designs that maximise growth rate, product synthesis and coupling strength."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.912348083365773,
      "result": {
        "type": "Text_excerpt",
        "value": "gcFront searches for reaction/gene knockouts that will growth-couple a metabolite of interest in a constraint-based model. \ngcFront is available under a GNU general public license. In short, this is a copyleft license that gives you the freedom to use, modify and make/transmit copies of gcFront, as long as you extend those same freedoms to others who you supply with gcFront or any code derived from it. For a full list of the terms and conditions associated with the use of gcFront, see the 'License.txt' file. \nIf you find gcFront useful, please remember to cite the paper in which gcFront was developed. \nYou will also need a linear algebra solver. You probably don't HAVE to install one, since you probably already have the solver GLPK as part of the COBRA toolbox. However, while GLPK appears to work with gcFront, other programs have reported issues when using parallel processing with GLPK, and other solvers are typically faster. Thus, it is recommended that you install a different COBRA-compatible linear algebra solver. \nLinks to some compatible solvers with free academic licenses that we've tested:\nhttps://www.gurobi.com/products/gurobi-optimizer/ \nhttps://www.ibm.com/uk-en/analytics/cplex-optimizer\nSee COBRA toolbox documentation for a list of all compatible solvers. \nAfter these pre-requisites have been installed, gcFront can be run. See the file 'gcFront documentation.pdf' for a summary of how gcFront works, 'gcFront tutorial.pdf' for a walk-through of how to use gcFront, and 'TUTORIAL_SUCCINATE.m' for an example of code that uses gcFront to search for KOs that couple succinate in the E. Coli core model. \ngcFront was developed in MATLAB 2017a with Gurobi 8.1.1 and the COBRA toolbox version 3.1. If gcFront doesn't work for you, try running it with these software versions. \n'License.txt' - the GNU general public license that this code is distributed under. \n'gcFront_Documentation.pdf' - explanation of how gcFront works. \nRegen_MainFig1:\n\t'RUNME_FindAlgTimesAndSols.m' - compares the speed and designs found by gcFront and several other gc design software packages. Used to get the data for figure 1 in the gcFront paper.\n\t'fGetEssGenes.m' - function used by FindAlgTimesAndSols. Returns a list of E. coli essential genes found by Goodall et al. (2018).\n\tOther folders - contain original and modified code from FastPros, GCopt, the COBRA toolbox implementation of OptGene, and the OptPipe implementation of RobustKnock, so that they can be compared to gcFront by FindAlgTimesAndSols. \nRegen_SuppFig2:\n\t'RUNME_SUPP_FIG_2.m' - the script used to plot product and coupling strength for two-reaction knockout pairs in e_coli_core. Used to create the plot in Supplementary figure 2 in the gcFront paper.\n\tOther files - functions used to carry out calculations in SUPP_FIG_2. \nTutorial_SuccSynthStrains:\n\t'gcFront_tutorial.pdf' - Text that gives a worked example on how to use gcFront to find growth coupled designs.\n\t'TUTORIAL_SUCCINATE.m' - Code that searches for growth-coupled designs in the E. coli core model. \n\t'e_coli_core.mat' - the E. coli core metabolic model, as downloaded from the BiGG database. \n"
      },
      "source": "https://raw.githubusercontent.com/lLegon/gcFront/V1.2/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lLegon/gcFront/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lLegon/gcFront/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lLegon/gcFront"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/lLegon/gcFront/V1.2/README.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9723196440378808,
      "result": {
        "type": "Text_excerpt",
        "value": "To run gcFront, you must first install:\nMATLAB + MATLAB's global optimisation toolbox\nThe COBRA toolbox \nLinks:\nhttps://www.mathworks.com/products/matlab.html\nhttps://www.mathworks.com/products/global-optimization.html\nhttps://opencobra.github.io/cobratoolbox/stable/ \nYou will also need a linear algebra solver. You probably don't HAVE to install one, since you probably already have the solver GLPK as part of the COBRA toolbox. However, while GLPK appears to work with gcFront, other programs have reported issues when using parallel processing with GLPK, and other solvers are typically faster. Thus, it is recommended that you install a different COBRA-compatible linear algebra solver. \nLinks to some compatible solvers with free academic licenses that we've tested:\nhttps://www.gurobi.com/products/gurobi-optimizer/ \nhttps://www.ibm.com/uk-en/analytics/cplex-optimizer\nSee COBRA toolbox documentation for a list of all compatible solvers. \ngcFront was developed in MATLAB 2017a with Gurobi 8.1.1 and the COBRA toolbox version 3.1. If gcFront doesn't work for you, try running it with these software versions. \n'README.txt' - the file you are currently reading. \n"
      },
      "source": "https://raw.githubusercontent.com/lLegon/gcFront/V1.2/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lLegon/gcFront/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Tobias Benedikt Alter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/lLegon/gcFront/V1.2/Regen_MainFig1/GCopt/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gcFront"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lLegon"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 475126,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lLegon/gcFront/V1.2/README.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lLegon",
          "type": "User"
        },
        "date_created": "2022-05-25T12:08:01Z",
        "date_published": "2022-05-25T14:06:21Z",
        "description": "The most up to date version of gcFront as of the time it was published in Bioinformatics.",
        "html_url": "https://github.com/lLegon/gcFront/releases/tag/V1.2_Publication_version",
        "name": "gcFront V1.2",
        "release_id": 67803919,
        "tag": "V1.2_Publication_version",
        "tarball_url": "https://api.github.com/repos/lLegon/gcFront/tarball/V1.2_Publication_version",
        "type": "Release",
        "url": "https://api.github.com/repos/lLegon/gcFront/releases/67803919",
        "value": "https://api.github.com/repos/lLegon/gcFront/releases/67803919",
        "zipball_url": "https://api.github.com/repos/lLegon/gcFront/zipball/V1.2_Publication_version"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lLegon",
          "type": "User"
        },
        "date_created": "2021-10-08T18:29:34Z",
        "date_published": "2021-10-08T18:37:30Z",
        "description": "1st release of gcFront",
        "html_url": "https://github.com/lLegon/gcFront/releases/tag/V1.0",
        "name": "gcFront V1.0",
        "release_id": 51054459,
        "tag": "V1.0",
        "tarball_url": "https://api.github.com/repos/lLegon/gcFront/tarball/V1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/lLegon/gcFront/releases/51054459",
        "value": "https://api.github.com/repos/lLegon/gcFront/releases/51054459",
        "zipball_url": "https://api.github.com/repos/lLegon/gcFront/zipball/V1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:42:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}