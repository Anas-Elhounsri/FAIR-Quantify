{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "fastISM: Performant *in-silico* saturation mutagenesis for convolutional neural networks; Surag Nair, Avanti Shrikumar*, Jacob Schreiber*, Anshul Kundaje (Bioinformatics 2022)\n[http://doi.org/10.1093/bioinformatics/btac135](http://doi.org/10.1093/bioinformatics/btac135). \n\n\\*equal contribtion \n\nPreprint available on bioRxiv.\n\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/fastISM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-06T08:28:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T18:03:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "In-silico Saturation Mutagenesis implementation with 10x or more speedup for certain architectures. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9888646723452312,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "A Keras implementation for fast in-silico saturated mutagenesis (ISM) for convolution-based architectures. It speeds up ISM by 10x or more by restricting computation to those regions of each layer that are affected by a mutation in the input.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9244350157325685,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "You can estimate the speedup obtained by comparing with a naive implementation of ISM.\n```python\n# Test this code as is\n>>> from fastism import FastISM, NaiveISM\n>>> from fastism.models.basset import basset_model\n>>> import tensorflow as tf\n>>> import numpy as np\n>>> from time import time\n\n>>> model = basset_model(seqlen=1000)\n>>> naive_ism_model = NaiveISM(model)\n>>> fast_ism_model = FastISM(model)\n\n>>> def time_ism(m, x):\n        t = time()\n        o = m(x)\n        print(time()-t)\n        return o\n\n>>> x = tf.random.uniform((1024, 1000, 4),\n                          dtype=model.input.dtype)\n\n>>> naive_out = time_ism(naive_ism_model, x)\n144.013728\n>>> fast_out = time_ism(fast_ism_model, x)\n13.894407\n>>> np.allclose(naive_out, fast_out, atol=1e-6) \nTrue\n>>> np.allclose(fast_out, naive_out, atol=1e-6) \nTrue # np.allclose is not symmetric\n``` \nSee `notebooks/ISMBenchmark.ipynb` for benchmarking code that accounts for initial warm-up.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/fastISM/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://fastism.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/fastISM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/ISMBenchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/ISMBenchmark.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/GradxInputBenchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/GradxInputBenchmark.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/BassetTFKeras.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/BassetTFKeras.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/DeepSHAPBenchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/DeepSHAPBenchmark.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/MaxBatchSize.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/MaxBatchSize.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/IntegratedGradientsBenchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/IntegratedGradientsBenchmark.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/BassetFast.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/BassetFast.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/VaryParams.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/VaryParams.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/Enformer.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/Enformer.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/TimeBassetParts.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/TimeBassetParts.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/Akita.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/Akita.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/seq_to_np.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/seq_to_np.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/colab/DeepSEA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/notebooks/colab/DeepSEA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/docs/tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/docs/tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kundajelab/fastISM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kundajelab/fastISM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Quickstart"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "Currently, fastISM is available to download from PyPI. Bioconda support is expected to be added in the future. fastISM requires TensorFlow 2.3.0 or above.\n```bash\npip install fastism\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9177215824516229,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "You can estimate the speedup obtained by comparing with a naive implementation of ISM.\n```python\n# Test this code as is\n>>> from fastism import FastISM, NaiveISM\n>>> from fastism.models.basset import basset_model\n>>> import tensorflow as tf\n>>> import numpy as np\n>>> from time import time\n\n>>> model = basset_model(seqlen=1000)\n>>> naive_ism_model = NaiveISM(model)\n>>> fast_ism_model = FastISM(model)\n\n>>> def time_ism(m, x):\n        t = time()\n        o = m(x)\n        print(time()-t)\n        return o\n\n>>> x = tf.random.uniform((1024, 1000, 4),\n                          dtype=model.input.dtype)\n\n>>> naive_out = time_ism(naive_ism_model, x)\n144.013728\n>>> fast_out = time_ism(fast_ism_model, x)\n13.894407\n>>> np.allclose(naive_out, fast_out, atol=1e-6) \nTrue\n>>> np.allclose(fast_out, naive_out, atol=1e-6) \nTrue # np.allclose is not symmetric\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kundajelab/fastISM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cnn, genomics, interpretability, interpretable-deep-learning, ism"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Kundaje Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kundajelab/fastISM/raw/docs/images/logo.jpeg"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fastISM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "kundajelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1299207,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 149103,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "suragnair",
          "type": "User"
        },
        "date_created": "2020-11-04T20:03:08Z",
        "date_published": "2020-11-04T20:16:29Z",
        "description": "- Cropping1D support with tests\r\n- Activation support after initial sequence, before first convolution (modified a couple of tests for this)\r\n- Bugfixes for node segmentation and SliceAssign\r\n- DeepSEA Colab Tutorial\r\n- Better docs",
        "html_url": "https://github.com/kundajelab/fastISM/releases/tag/v0.4.1",
        "release_id": 33471938,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/kundajelab/fastISM/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/kundajelab/fastISM/releases/33471938",
        "value": "https://api.github.com/repos/kundajelab/fastISM/releases/33471938",
        "zipball_url": "https://api.github.com/repos/kundajelab/fastISM/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "suragnair",
          "type": "User"
        },
        "date_created": "2020-09-16T10:11:20Z",
        "date_published": "2020-09-16T10:18:46Z",
        "html_url": "https://github.com/kundajelab/fastISM/releases/tag/v0.4.0",
        "release_id": 31390255,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/kundajelab/fastISM/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/kundajelab/fastISM/releases/31390255",
        "value": "https://api.github.com/repos/kundajelab/fastISM/releases/31390255",
        "zipball_url": "https://api.github.com/repos/kundajelab/fastISM/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "suragnair",
          "type": "User"
        },
        "date_created": "2020-08-24T13:04:38Z",
        "date_published": "2020-08-24T13:11:50Z",
        "html_url": "https://github.com/kundajelab/fastISM/releases/tag/v0.3.0",
        "release_id": 30052540,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/kundajelab/fastISM/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/kundajelab/fastISM/releases/30052540",
        "value": "https://api.github.com/repos/kundajelab/fastISM/releases/30052540",
        "zipball_url": "https://api.github.com/repos/kundajelab/fastISM/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "suragnair",
          "type": "User"
        },
        "date_created": "2020-08-22T12:57:32Z",
        "date_published": "2020-08-22T13:09:26Z",
        "html_url": "https://github.com/kundajelab/fastISM/releases/tag/v0.2.0",
        "release_id": 30012387,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/kundajelab/fastISM/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/kundajelab/fastISM/releases/30012387",
        "value": "https://api.github.com/repos/kundajelab/fastISM/releases/30012387",
        "zipball_url": "https://api.github.com/repos/kundajelab/fastISM/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:45:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Help",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "fastISM supports the most commonly used subset of Keras for biological sequence-based models. Occasionally, you may find that some of the layers used in your model are not supported by fastISM. Refer to the [Supported Layers](https://fastism.readthedocs.io/en/latest/layers.html) section in Documentation for instructions on how to incorporate custom layers. In a few cases, the fastISM model may fail correctness checks, indicating there are likely some issues in the fastISM code. In such cases or any other bugs, feel free to reach out to the author by posting an [Issue](https://github.com/kundajelab/fastISM/issues) on GitHub along with your architecture, and we'll try to work out a solution!\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "fastISM provides a simple interface that takes as input Keras models. For any Keras ``model`` that takes in sequence as input of dimensions `(B, S, C)`, where\n- `B`: batch size\n- `S`: sequence length\n- `C`: number of characters in vocabulary (e.g. 4 for DNA/RNA, 20 for proteins)\n\nPerform ISM as follows:\n\n```python\nfrom fastism import FastISM\n\nfast_ism_model = FastISM(model)\n\nfor seq_batch in sequences:\n    # seq_batch has dim (B, S, C)\n    ism_seq_batch = fast_ism_model(seq_batch)\n    # ism_seq_batch has dim (B, S, num_outputs) \n```\n\nfastISM does a check for correctness when the model is initialised, which may take a few seconds depending on the size of your model. This ensures that the outputs of the model match that of an unoptimised implementation. You can turn it off as `FastISM(model, test_correctness=False)`. fastISM also supports introducing specific mutations, mutating different ranges of the input sequence, and models with multiple outputs. Check the [Examples](https://fastism.readthedocs.io/en/latest/examples.html) section of the documentation for more details. An executable tutorial is available on [Colab](https://colab.research.google.com/github/kundajelab/fastISM/blob/master/notebooks/colab/DeepSEA.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Help",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "fastISM supports the most commonly used subset of Keras for biological sequence-based models. Occasionally, you may find that some of the layers used in your model are not supported by fastISM. Refer to the [Supported Layers](https://fastism.readthedocs.io/en/latest/layers.html) section in Documentation for instructions on how to incorporate custom layers. In a few cases, the fastISM model may fail correctness checks, indicating there are likely some issues in the fastISM code. In such cases or any other bugs, feel free to reach out to the author by posting an [Issue](https://github.com/kundajelab/fastISM/issues) on GitHub along with your architecture, and we'll try to work out a solution!\n"
      },
      "source": "https://raw.githubusercontent.com/kundajelab/fastISM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}