{
  "application_domain": [
    {
      "confidence": 14.53,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map"
        ],
        "type": "Text_excerpt",
        "value": "If you find this work useful in your research, please consider citing the paper:  \n**\"To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map\"**\nhttps://pubs.acs.org/doi/10.1021/acs.jcim.9b00438\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biomed-AI/SPROF"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map"
        ],
        "type": "Text_excerpt",
        "value": "`yuedong.yang@gmail.com`or `chensh88@mail2.sysu.edu.cn`\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-19T03:30:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-15T00:33:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9203108355527855,
      "result": {
        "original_header": "Data Preprocess",
        "type": "Text_excerpt",
        "value": "This repository has include the CASP13 test set data on 'input/casp_test/', 'target/casp_test/' and raw features on 'raw_features/', raw pdbs on 'raw_pdbs/'. \nif you want to generate other data for training/test: \nThirdly use the 'raw_feature_generate.py' to generate raw features:\n```\nusage: raw_feature_generate.py [-h] [--preprocess_list PREPROCESS_LIST]\n--preprocess_list PREPROCESS_LIST\n                        The path of your preprocess list.\n```\nThe generated raw-features will be deposit on 'raw_features', use 'preprocess.py' to generate features for model training/test:\nBASH2*\nThe generated input&target data for training/test will be deposit on the input_path and target_path. \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9554967260235865,
      "result": {
        "original_header": "Command line:",
        "type": "Text_excerpt",
        "value": "```\nusage: train.py [-h] [--batch_size BATCH_SIZE] [--learning_rate LEARNING_RATE]\n                [--maximum_epoch MAXIMUM_EPOCH]\n                [--sequential_features SEQUENTIAL_FEATURES]\n                [--pairwise_features PAIRWISE_FEATURES]\n                [--target_output TARGET_OUTPUT] \n                [--train_list TRAIN_LIST] [--models_name MODELS_NAME]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --learning_rate LEARNING_RATE\n                        The learning rate of ADAM optimization.\n  --maximum_epoch MAXIMUM_EPOCH\n                        The maximum epoch of training\n  --sequential_features SEQUENTIAL_FEATURES\n                        The full path of sequential features of training data.\n  --pairwise_features PAIRWISE_FEATURES\n                        The full path of pairwise features of training data.\n  --target_output TARGET_OUTPUT\n                        The full path of the target outputs.\n  --train_list TRAIN_LIST\n                        The full path of the train list.\n  --models_name MODELS_NAME\n                        The name of models.\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biomed-AI/SPROF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biomed-AI/SPROF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biomed-AI/SPROF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/process_pdb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/energy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/runpred.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/fragment.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/SPIN2/process_pdb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/SPIN2/results/process_pdb2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/raw_feature_generate/SPIN2/results/process_pdb.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9801292080812665,
      "result": {
        "original_header": "Data Preprocess",
        "type": "Text_excerpt",
        "value": "Firstly, install dssp by 'apt-get install dssp' and deposite your pdbs(the examples of pdb in correct format are on 'raw_pdbs/') on 'raw_pdbs/'.  \nSecondly you should make a list file namd 'xxx.txt' (for example) which contains all your training/test pdbs' name. \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8660323003229722,
      "result": {
        "original_header": "Data Preprocess",
        "type": "Text_excerpt",
        "value": "Secondly you should make a list file namd 'xxx.txt' (for example) which contains all your training/test pdbs' name. \nThirdly use the 'raw_feature_generate.py' to generate raw features:\n```\nusage: raw_feature_generate.py [-h] [--preprocess_list PREPROCESS_LIST]\n--preprocess_list PREPROCESS_LIST\n                        The path of your preprocess list.\n```\nThe generated raw-features will be deposit on 'raw_features', use 'preprocess.py' to generate features for model training/test:\nBASH2*\nThe generated input&target data for training/test will be deposit on the input_path and target_path. \n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biomed-AI/SPROF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Sun Yat-sen University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPROF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biomed-AI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5219517,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 4550079,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 638535,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 47996,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7351,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 7034,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map",
          "Getting Start"
        ],
        "type": "Text_excerpt",
        "value": "Installing requirements:  \n```\npip3 install -r requirements.txt\n```\n\nor avoiding problems in multiple Python environments:  \n\n```\npython3 -m pip install -r requirements.txt\n```\nif you want to generate features by 'raw_feature_generate.py', install dssp by \n```\napt-get install dssp\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:13:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Start",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map"
        ],
        "type": "Text_excerpt",
        "value": "These instructions will get you a copy of the project up and running on your local machine.\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Environment",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map",
          "Getting Start"
        ],
        "type": "Text_excerpt",
        "value": "SPROF has been implemented in `Python3`.\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Start Training:",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map",
          "Training"
        ],
        "type": "Text_excerpt",
        "value": "The input data of training is too large to upload. To get these data, please refer to 'Data Preprocess' and use the 'train_list' as preprocess_list, if any problem, contact chensh88@mail2.sysu.edu.cn.\n\nExample of training:  \n* Using default paramters to train:\n```\n    python3 train.py \n```  \n\n* Using different paramters to train:\n```\n    python3 train.py --learning_rate=0.0005 --maximum_epoch=40 --sequential_features='input/casp_test/sequential_features' --pairwise_features='input/casp_test/pairwise_features' --target_output='target/casp_test' --train_list='train_list' --models_name='models'\n```\nThen you can obtain several models and save them in the your models_name directory.\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "SPROF: To Improve Protein Sequence Profile Prediction through Image Captioning on Pairwise Residue Distance Map",
          "Testing"
        ],
        "type": "Text_excerpt",
        "value": "The CASP13 test set has been included in the repository, so you can test our model's perpormance easily.\n* Using default paramters to test:\n``` \n    python3 test.py\n```\n\n* Using different paramters test\n```\n    python3 test.py --sequential_features='input/casp_test/sequential_features' --pairwise_features='input/casp_test/pairwise_features' --target_output='target/casp_test' --train_list='train_list' --models_path='models'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biomed-AI/SPROF/master/README.md",
      "technique": "header_analysis"
    }
  ]
}