{
  "application_domain": [
    {
      "confidence": 12.15,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Licheng-Guo/AutoBridge"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-08T22:55:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-01T10:52:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This is a personal archive. Please refer to github.com/UCLA-VAST/AutoBridge"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9690300226959767,
      "result": {
        "original_header": "Latest",
        "type": "Text_excerpt",
        "value": "- **[02/20/2022]** We decide to only maintain AutoBridge as a plug-in of the [TAPA](https://github.com/UCLA-VAST/tapa) workflow. The TAPA framework provides a stable and robust environment for AutoBridge across different HLS versions. TAPA is easy and natural to use if you are familiar with the HLS dataflow coding style. \n\n- **[01/06/2022]** We are integrating AutoBridge and [TAPA](https://github.com/UCLA-VAST/tapa) to create a robust workflow. Currently AutoBridge relis on hacking the RTL generated by Vivado HLS, which makes it fragile. Instead, using the open-source TAPA compiler as the frontend will make the floorplanning-pipelining flow much more robust. While the integration of AutoBridge and TAPA is still in progress, feel free to contact me if you want to try it out, we will provide as much help as needed to make your design work! \n- **[01/06/2022]** With the help of AutoBridge and TAPA, [Serpens](https://arxiv.org/pdf/2111.12555.pdf) achieves 270 MHz on Alveo U280 while using 24 HBM channels, while a normal Vitis flow will failed in routing. Serpens is an HBM-based accelerator for sparse matrix-vector multiplication (SpMV). With the high frequency, Serpens gets a 3.79X performance improvement over the previous state-of-the art [GraphLily](https://ieeexplore.ieee.org/document/9643582). \n- **[12/20/2021]** We just open-sourced [RapidStream](https://github.com/Licheng-Guo/RapidStream), a follow-up work of AutoBridge. This time we parallelize the placement and routing of each slot based on the floorplanning by AutoBridge. Check out how we achieve 5-7X speedup over Vivado! \n- For the old implementation (AutoBridge/src), here is a useful example of integrating AutoBridge:\nhttps://autosa.readthedocs.io/en/latest/tutorials/auto_bridge.html\n \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9331773189089807,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "- `What`: AutoBridge is a floorplanning tool for Vivado HLS dataflow designs. \n- `Why`: Co-optimizing HLS compilation and placement brings new opportunities to improve the final achievable frequency. \n- In our experiments with a total of 43 design configurations, we improve the average frequency from 147 MHz to 297 MHz. \n   * Comparison of a stencil accelerator on Xilinx U280. From routing failure to 297 MHz.\n      * Each color represents a module.\n      * AutoBridge ensures a clean separation of logic in different regions to minimize unnecessary die crossing.\n![][image-1] \n   * Comparison of a systolic array on Xilinx U250. From 158 MHz to 316 MHz.\n      * Note that Vivado will try to pack things together to avoid die crossing as much as possible.\n      * Instead, we ensure a balanced resource utilization across the whole device to reduce local congestion.\n      * Meanwhile, the global connections will be adequately pipelined.\n![][image-2] \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8906961732198532,
      "result": {
        "original_header": "Successful Cases",
        "type": "Text_excerpt",
        "value": "- [Serpens](https://arxiv.org/abs/2111.12555), to appear in DAC'22, achieves 270 MHz on the Xilinx Alveo U280 HBM board when using 24 HBM channels. The Vivado baseline failed in routing.\n- [Sextans](https://dl.acm.org/doi/pdf/10.1145/3490422.3502357), FPGA'22, achieves 260 MHz on the Xilinx Alveo U250 board when using 4 DDR channels. The Vivado baseline achieves only 189 MHz.\n- [SPLAG](https://github.com/UCLA-VAST/splag), FPGA'22,\n  achieves up to a 4.9\u00d7 speedup over state-of-the-art FPGA accelerators,\n  up to a 2.6\u00d7 speedup over 32-thread CPU running at 4.4 GHz,\n  and up to a 0.9\u00d7 speedup over an A100 GPU\n  (that has 4.1\u00d7 power budget and 3.4\u00d7 HBM bandwidth).\n- [AutoSA Systolic-Array Compiler](https://github.com/UCLA-VAST/AutoSA),\n  FPGA'21:\n  ![AutoSA Frequency Figure](https://user-images.githubusercontent.com/32432619/157976148-594e98bc-2658-4ebc-ae0d-3d2a347d1854.png)\n- [KNN](https://github.com/SFU-HiAccel/CHIP-KNN), FPT'20, achieves 252 MHz on the Xilinx Alveo U280 board. The Vivado baseline achieves only 165 MHz.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9088781923839166,
      "result": {
        "original_header": "FPGA'21 Artifact Review",
        "type": "Text_excerpt",
        "value": "Currently only a subset of the source code of the benchmarks are open-sourced here, as some designs are not published yet and will be updated later. \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Licheng-Guo/AutoBridge/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Licheng-Guo/AutoBridge/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Licheng-Guo/AutoBridge"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Latest"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/20x20/u280/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/20x20/u280/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/20x20/u250/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/20x20/u250/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/24x24/u280/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/24x24/u280/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/24x24/u250/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/24x24/u250/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/12x12/u280/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/12x12/u280/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/12x12/u250/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/12x12/u250/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/16x16/u280/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/16x16/u280/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/16x16/u250/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/LUDecomposition/16x16/u250/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/2PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/2PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/3PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/3PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/8PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/8PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/7PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/7PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/5PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/5PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/6PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/6PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/4PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/4PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/1PE/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/Stencil/1PE/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x8/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x8/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x10/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x10/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x16/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x16/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x4/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x4/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x12/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x12/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x6/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x6/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x2/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x2/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x14/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/CNN/13x14/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/PageRank/run_vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/PageRank/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/benchmarks/PageRank/run_autobridge.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/reference-scripts/step4-run-vitis.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/reference-scripts/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/regression/systolic_2x2/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/archive/regression/systolic_2x2/step4-run-vitis.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/32432619/157976696-a08c646a-55db-49f0-86dc-fb4985c06b39.png"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/32432619/104076425-e8729880-51ca-11eb-97e0-402e9b67c4e8.png"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/32432619/104076467-017b4980-51cb-11eb-8c44-f01ccf681da5.png"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/32432619/157976148-594e98bc-2658-4ebc-ae0d-3d2a347d1854.png"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999998129187906,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "    * AutoSA Systolic Array Compiler (https://github.com/UCLA-VAST/AutoSA)\n    * TAPA Compiler (https://github.com/UCLA-VAST/tapa) \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9603083244911483,
      "result": {
        "original_header": "FPGA'21 Artifact Review",
        "type": "Text_excerpt",
        "value": "The experiment results for all benchmarks in our submission to FPGA'21 are available at:\nhttps://ucla.box.com/s/5hpgduqrx93t2j4kx6fflw6z15oylfhu \n[image-1]:\thttps://user-images.githubusercontent.com/32432619/104076425-e8729880-51ca-11eb-97e0-402e9b67c4e8.png\n[image-2]:\thttps://user-images.githubusercontent.com/32432619/104076467-017b4980-51cb-11eb-8c44-f01ccf681da5.png\n[image-3]:  https://user-images.githubusercontent.com/32432619/104138330-441e5c80-5358-11eb-8a7f-bc2841ee72c8.png\n \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8565317517320893,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "- Motivating Examples: \n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Licheng-Guo/AutoBridge/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Licheng Guo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AutoBridge"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Licheng-Guo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 19350281,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1536117,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 464606,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Tcl",
        "size": 136991,
        "type": "Programming_language",
        "value": "Tcl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 49235,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SystemVerilog",
        "size": 12349,
        "type": "Programming_language",
        "value": "SystemVerilog"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://tapa.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://autosa.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2111.12555.pdf"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/pdf/2109.11081.pdf"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2111.12555"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:45:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "About"
        ],
        "type": "Text_excerpt",
        "value": "+ [Installation](https://tapa.readthedocs.io/en/latest/installation.html)\n+ [Tutorial](https://tapa.readthedocs.io/en/latest/tutorial.html)\n+ [API Reference](https://tapa.readthedocs.io/en/latest/api.html)\n"
      },
      "source": "https://raw.githubusercontent.com/Licheng-Guo/AutoBridge/master/README.md",
      "technique": "header_analysis"
    }
  ]
}