{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A Note on References",
        "parent_header": [
          "RiboFlow"
        ],
        "type": "Text_excerpt",
        "value": "RiboFlow is designed to work with transcriptomic references. RiboFlow does **NOT** work with genomic references.\nThe users need to provide a transcriptome reference and annotation to run this software.\nThere is a curated set of RiboFlow references, that users can download and use, in\n[this GitHub repository](https://github.com/ribosomeprofiling/references_for_riboflow)\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "RiboFlow"
        ],
        "type": "Text_excerpt",
        "value": "[RiboFlow, RiboR and RiboPy: an ecosystem for analyzing ribosome profiling data at read length resolution, H. Ozadam, M. Geng, C. Cenik\nBioinformatics 36 (9), 2929-2931](https://academic.oup.com/bioinformatics/article/36/9/2929/5701654)\n\n```bibtex\n@article{ozadam2020riboflow,\n  title={RiboFlow, RiboR and RiboPy: an ecosystem for analyzing ribosome profiling data at read length resolution},\n  author={Ozadam, Hakan and Geng, Michael and Cenik, Can},\n  journal={Bioinformatics},\n  volume={36},\n  number={9},\n  pages={2929--2931},\n  year={2020},\n  publisher={Oxford University Press}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Ozadam, Hakan and Geng, Michael and Cenik, Can",
        "format": "bibtex",
        "title": "RiboFlow, RiboR and RiboPy: an ecosystem for analyzing ribosome profiling data at read length resolution",
        "type": "Text_excerpt",
        "value": "@article{ozadam2020riboflow,\n    publisher = {Oxford University Press},\n    year = {2020},\n    pages = {2929--2931},\n    number = {9},\n    volume = {36},\n    journal = {Bioinformatics},\n    author = {Ozadam, Hakan and Geng, Michael and Cenik, Can},\n    title = {RiboFlow, RiboR and RiboPy: an ecosystem for analyzing ribosome profiling data at read length resolution},\n}"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ribosomeprofiling/riboflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-25T21:57:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-18T21:16:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pipeline for Ribosome Profiling Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9960490290642011,
      "result": {
        "original_header": "RiboFlow",
        "type": "Text_excerpt",
        "value": "RiboFlow is a [Nextflow](https://www.nextflow.io/) based pipeline\nfor processing ribosome profiling data. As output, it generates [ribo files](https://ribopy.readthedocs.io/en/latest/ribo_file_format.html) that can be analyzed using [RiboR](https://github.com/ribosomeprofiling/ribor) or [RiboPy](https://github.com/ribosomeprofiling/ribopy).\nRiboFlow belongs to a [software ecosystem](https://ribosomeprofiling.github.io/) desgined to work with ribosome profiling data. \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9489696556581535,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Ribosome occupancy data is in a single\n[ribo file](https://ribopy.readthedocs.io/en/latest/ribo_file_format.html) called `all.ribo`. \nYou can use\n[RiboR](https://github.com/ribosomeprofiling/ribor) or\n[RiboPy](https://github.com/ribosomeprofiling/ribopy) to work with ribo files. \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9314354838674659,
      "result": {
        "original_header": "RiboFlow on Your Data",
        "type": "Text_excerpt",
        "value": "1. Organize your data. The following files are required for RiboFlow\n   * **Ribosome profiling sequencing data:** in gzipped fastq files\n   * **Transcriptome Reference:** Bowtie2 index files\n   * **Filter Reference:** Bowtie2 index files (typically for rRNA sequences)\n   * **Annotation:** A bed file defining CDS, UTR5 and UTR3 regions.\n   * **Transcript Lengths:** A two column tsv file containing transcript lengths \n3. In `project.yaml`, provide RiboFlow parameters such as `clip_arguments`, alignment arguments etc.\nYou can simply modify the arguments in the sample file `project.yaml` in this repository. \n5. RNA-Seq data is optional for RiboFlow. So, if you do NOT have RNA-Seq data, in the project file, set \nIf you have RNA-Seq data to be paired with ribosome profiling data, see the [Advanced Features](#advanced-features) below. \n\n6. Metadata is optional for RiboFlow. If you do NOT have metadata, in the project file, set \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9681423721076029,
      "result": {
        "original_header": "Working with Unique Molecular Identifiers",
        "type": "Text_excerpt",
        "value": "Unique Molecular Identifiers (UMIs) can be ligated to either side of the molecules and \nthey allow labeling molecules uniqely. This way UMIs can be used to deduplicate mapped reads\nfor more accurate quantification. \nIf there are UMIs in your ribosome profiling data, Riboflow can trim them and deduplicate reads based on UMIs.  \nRiboFlow extracts UMIs and stores them in the Fastq headers and uses the UMIs in deduplication \n(instead of position based read collapsing). For this purpose RiboFlow uses \n[umi_tools](https://github.com/CGATOxford/UMI-tools). \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9231075874071788,
      "result": {
        "original_header": "Project File",
        "type": "Text_excerpt",
        "value": "Here we explain the related parts of the project file to be able to use UMIs feature of Riboflow. \nAlso, we provide a working example of project file in this repository: *project_umi.yaml*. \nFor example: \n```\numi_tools_extract_arguments: \"-p \\\"^(?P<umi_1>.{12})(?P<discard_1>.{4}).+$\\\" --extract-method=regex\"\numi_tools_dedup_arguments:   \"--read-length\"\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9487138327160701,
      "result": {
        "original_header": "RNA-Seq Data",
        "type": "Text_excerpt",
        "value": "If you have RNA-Seq data that you want to pair with ribosome profiling experiments,\nprovide the paths of the RNA-Seq (gzipped) fastq files  in the configuration file in\n_input -> metadata_. See the file `project.yaml` in this repository for an example.\nNote that the names in defining RNA-Seq files must match the names in definig ribosome profiling data.\nAlso turn set the do_rnaseq flag to true, in the project file: \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9136197455339116,
      "result": {
        "original_header": "Metadata",
        "type": "Text_excerpt",
        "value": "If you have metadata files for the ribosome profiling experiments,\nprovide the paths of the metadata files (in yaml format) in the configuration file in\n_input -> metadata_. See the file `project.yaml` in this repository for an example.\nNote that the names in defining metadata files must match the names in definig ribosome profiling data.\nAlso turn set the metadata flag to true, in the project file: \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ribosomeprofiling/riboflow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ribosomeprofiling/riboflow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ribosomeprofiling/riboflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RiboFlow"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/docker/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/docker/deploy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/docker/tag.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3376949"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master//docs/figures/ecosystem_overview.jpg"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Option",
        "parent_header": [
          "RiboFlow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Install [Docker](https://docs.docker.com/install/).\nHere is a [tutorial for Ubuntu.](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04)\n\nAll remaining dependencies come in the Docker image [hakanozadam/riboflow](https://hub.docker.com/r/hakanozadam/riboflow).\nThis image is automatically pulled by RiboFlow when run with Docker (see test runs below).\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda Option",
        "parent_header": [
          "RiboFlow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This option has been tested on Linux systems only.\n\nInstall  [Conda](https://conda.io/en/latest/miniconda.html).\n\nAll other dependencies can be installed using the environment file,\nenvironment.yaml, in this repository.\n```\ngit clone https://github.com/ribosomeprofiling/riboflow.git\nconda env create -f riboflow/environment.yaml\n```\n\nThe above command will create a conda environment called _ribo_\nand install dependencies in it.\nTo start using RiboFlow, you need to activate the _ribo_ environment.\n\n`conda activate ribo`\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8938724159959512,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Pipeline run may take several minutes.\nWhen finished, the resulting files are in the `./output` folder. \nYou can use\n[RiboR](https://github.com/ribosomeprofiling/ribor) or\n[RiboPy](https://github.com/ribosomeprofiling/ribopy) to work with ribo files. \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9281536764986905,
      "result": {
        "original_header": "RiboFlow on Your Data",
        "type": "Text_excerpt",
        "value": "2. Prepare a custom `project.yaml` file.\nYou can use the sample file `project.yaml`, provided in this repository,\nas template. \n4. You can adjust the hardware and computing environment settings in Nextflow configuration file(s).\nFor Docker option, see `configs/docker_local.config`. If you are not using Docker,\nsee `configs/local.config`. \nIf you have RNA-Seq data to be paired with ribosome profiling data, see the [Advanced Features](#advanced-features) below. \n\n6. Metadata is optional for RiboFlow. If you do NOT have metadata, in the project file, set \nIf you have metadata, see [Advanced Features](#advanced-features) below. \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9637835341618423,
      "result": {
        "original_header": "Project File",
        "type": "Text_excerpt",
        "value": "The following parameter must be set:\n```\ndedup_method: \"umi_tools\"\n``` \nAlso, users must set the following two parameters: `umi_tools_extract_arguments` and `umi_tools_dedup_arguments`. \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8447695807338936,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Mapping statistics are compiled in a csv file called `stats.csv`\n```\nls output/stats/stats.csv\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8433910469740941,
      "result": {
        "original_header": "RiboFlow on Your Data",
        "type": "Text_excerpt",
        "value": "For running RiboFlow on actual data, files must be organized and a parameters file must be prepared.\nYou can examine the sample run above to see an example. \n2. Prepare a custom `project.yaml` file.\nYou can use the sample file `project.yaml`, provided in this repository,\nas template. \n7. Run RiboFlow using the new parameters file `project.yaml`. \n`nextflow RiboFlow.groovy -params-file project.yaml -profile docker_local` \n`nextflow RiboFlow.groovy -params-file project.yaml`\n \n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ribosomeprofiling/riboflow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pipeline, ribosome, ribosome-profiling, ribosome-profiling-data, translation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Ribosome Profiling\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master//docs/figures/riboflow_logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "riboflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ribosomeprofiling"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 76986,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1205,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 881,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 880,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ribopy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://umi-tools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hakanozadam",
          "type": "User"
        },
        "date_created": "2019-08-25T22:04:56Z",
        "date_published": "2019-08-25T22:29:47Z",
        "html_url": "https://github.com/ribosomeprofiling/riboflow/releases/tag/v0.0.0",
        "name": "Initial Release",
        "release_id": 19521352,
        "tag": "v0.0.0",
        "tarball_url": "https://api.github.com/repos/ribosomeprofiling/riboflow/tarball/v0.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ribosomeprofiling/riboflow/releases/19521352",
        "value": "https://api.github.com/repos/ribosomeprofiling/riboflow/releases/19521352",
        "zipball_url": "https://api.github.com/repos/ribosomeprofiling/riboflow/zipball/v0.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "RiboFlow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* [Nextflow](https://www.nextflow.io/)\n* [Docker](https://docs.docker.com/install/) (Optional)\n* [Conda](https://conda.io/en/latest/miniconda.html) (Optional)\n\nFirst, follow the instructions in [Nextflow website](https://www.nextflow.io/) and install Nextflow.\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Test Run",
        "parent_header": [
          "RiboFlow"
        ],
        "type": "Text_excerpt",
        "value": "For fresh installations, before running RiboFlow on actual data,\nit is recommended to do a test run.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Using Docker",
        "parent_header": [
          "RiboFlow",
          "Test Run"
        ],
        "type": "Text_excerpt",
        "value": "```\n# Clone this repository in a new folder and change your working directory to the RiboFlow folder.\nmkdir rf_test_run && cd rf_test_run\ngit clone https://github.com/ribosomeprofiling/riboflow.git\ncd riboflow\n\n# Obtain a copy of the sample data in the working directory.\ngit clone https://github.com/ribosomeprofiling/rf_sample_data.git\nnextflow RiboFlow.groovy -params-file project.yaml -profile docker_local\n```\n\nNote that we provided the argument `-profile docker_local` to Nextflow to indicate that RiboFlow will be run via Docker containers. In other words, the steps of RiboFlow will be executed inside Docker containers by Nextflow. \nHence, no locally installed software (other than Java and Nextflow) is needed by RiboFlow.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Using Conda Environment",
        "parent_header": [
          "RiboFlow",
          "Test Run"
        ],
        "type": "Text_excerpt",
        "value": "In Conda option, the steps of RiboFlow are run locally. So, we need to install the dependencies first. This can easily be done via conda. The default profile directs RiboFlow to run locally, so we can simply skip the `-profile` argument. Also note that the conda environment has to be activated before running RiboFlow. \n\nBefore running the commands below, make sure that you have created the conda environment, called _ribo_,\nusing the instructions above. \n\n```\n# List the environments to make sure that ribo environment exists\nconda env list\n\n# Activate the ribo environment\nconda activate ribo\n\n# Get RiboFlow repository\nmkdir rf_test_run && cd rf_test_run\ngit clone https://github.com/ribosomeprofiling/riboflow.git\ncd riboflow\n\n# Obtain a copy of the sample data in the working directory.\ngit clone https://github.com/ribosomeprofiling/rf_sample_data.git\n\n# Finally run RiboFlow\nnextflow RiboFlow.groovy -params-file project.yaml\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test Run with UMIs",
        "parent_header": [
          "RiboFlow",
          "Working with Unique Molecular Identifiers"
        ],
        "type": "Text_excerpt",
        "value": "We provide a mini dataset, with two samples, to try Riboflow with sequencing reads having UMIs.\nIn this sample dataset, the first 12 nucleotides on the 5' end of the reads are UMIs.\nFour nucleotides following the UMIs need to be discarded.\nOn the 3' end of the reads, there are adapters having the sequence `AAAAAAAAAACAAAAAAAAAA`.\nThe parameters of this sample run are provided in the file *project_umi.yaml*.\nBelow are the steps to process this data.\n\n\n```\n# List the environments to make sure that ribo environment exists\nconda env list\n\n# Activate the ribo environment\nconda activate ribo\n\n# Get RiboFlow repository\nmkdir rf_test_run && cd rf_test_run\ngit clone https://github.com/ribosomeprofiling/riboflow.git\ncd riboflow\n\n# Obtain a copy of the sample data in the working directory.\ngit clone https://github.com/ribosomeprofiling/rf_sample_data.git\n\n# Finally run RiboFlow\nnextflow RiboFlow.groovy -params-file project_umi.yaml\n\n# At the end of the run\n# checkk the ribo file\nribopy info output_umi/ribo/all.ribo\n```\n\n ### UMI support for RNA-Seq\n \n In the current version, UMIs are supported for ribosome profiling data only. So RNA-Seq libraries can either be used without deduplication or the reads can be collapsed based on position.\n"
      },
      "source": "https://raw.githubusercontent.com/ribosomeprofiling/riboflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:22:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ]
}