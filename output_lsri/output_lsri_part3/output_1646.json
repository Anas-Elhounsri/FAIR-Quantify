{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yassaee/MinDrug"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-23T21:56:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-30T10:03:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9956688604148491,
      "result": {
        "original_header": "MinDrug",
        "type": "Text_excerpt",
        "value": "MinDrug is a method for predicting anti-cancer drug response by finding an optimal subset of drugs that have the most similarity with other drugs. This method predicts IC50 for a new cell-line.\n \n"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yassaee/MinDrug/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yassaee/MinDrug/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yassaee/MinDrug"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MinDrug"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yassaee/MinDrug/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MinDrug"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yassaee"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8044,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run MinDrug",
        "parent_header": [
          "MinDrug"
        ],
        "type": "Text_excerpt",
        "value": "MinDrug is based on python 3.6 and upper\n"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required libraries:",
        "parent_header": [
          "MinDrug",
          "Run MinDrug"
        ],
        "type": "Text_excerpt",
        "value": "- Argparse\n- Pandas\n- Numpy\n- Sklearn\n- Math\n- Os\n- Pickle\n \n**Note:**\nPlease make sure that these libraries are installed."
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run",
        "parent_header": [
          "MinDrug",
          "Run MinDrug"
        ],
        "type": "Text_excerpt",
        "value": "At the first, Run `Sub_drug.py` as follows:"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sub_drug",
        "parent_header": [
          "MinDrug",
          "Run MinDrug",
          "Run"
        ],
        "type": "Text_excerpt",
        "value": "**Input files and Parameters**\n- `Train_path`: contains a matrix of real values of log IC50 where rows are cell lines and columns are drugs.\n- `Theta`: is a value such that two drugs are similar, if the similarty between them is bigger or equal of Theta.\n- `out_dir`: demonstrates output folder such that the output files save there.\n\n**Output files**\n- `{:out_dir}/Sub_drug.csv`: This file consists of the name and index of drugs that have most similarity with other drugs and the number of them is minimal (Sub_drug).\n-  `{:out_dir}/Sub_drug.pickle`: This file consists of index of drugs in Sub_drug and IC50 matrix of training data that is needed to execute following modules.\n\n**Command**\n```\npython ./Code/Sub_drug.py Train_path=./Sample_Data/Train.csv Theta=0.67 out_dir=Results\n```\nUsers have two options to run MinDrug. If the IC50 of drugs in Sub_drug are available for cell-lines in Test file in Test file, run `Main_MinDrug.py`. Else, run `Sim_MinDrug.py`."
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Main_MinDrug",
        "parent_header": [
          "MinDrug",
          "Run MinDrug",
          "Run"
        ],
        "type": "Text_excerpt",
        "value": "- `Test_path`: contains a matrix where rows are cell lines and columns are drugs.\n- `Pickle_path`: is a pickle file that get from `Sub_drug.py`. \n- `out_dir`: demonstrates output folder such that the output files save there.\n\n**Output files**\n- `{:out_dir}/Predict_Main.csv`: This file is the predicted IC50 values for all drugs in each cell-lines in Test file. \n\n**Command**\n```\npython ./Code/Main_MinDrug.py Test_path=./Sample_Data/Test.csv Pickle_path=./Results/Sub_drug.pickle out_dir=Results\n```"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sim_MinDrug",
        "parent_header": [
          "MinDrug",
          "Run MinDrug",
          "Run"
        ],
        "type": "Text_excerpt",
        "value": "- `Test_path`: contains a matrix where rows are cell lines and columns are drugs.\n- `Pickle_path`: is a pickle file that get from `Sub_drug.py`. \n- `SimCell_path`: contains the similarity matrix between cell-lines.\n- `out_dir`: demonstrates output folder such that the output files save there.\n\n**Output files**\n- `{:out_dir}/Predict_Sim.csv`: This file is the predicted IC50 values for all drugs in each cell-lines in Test file. \n\n**Command**\n```\npython ./Code/Sim_MinDrug.py Test_path=./Sample_Data/Test.csv Pickle_path=./Results/Sub_drug.pickle Test_path=./Sample_Data/Sim_Cell_line.csv out_dir=Results\n```\n"
      },
      "source": "https://raw.githubusercontent.com/yassaee/MinDrug/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:44:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}