{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanglabNKU/HDMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-24T11:49:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-13T14:46:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDMC (Hierarchical Distribution Matching and Contrastive learning) is a novel deep learning based framework for batch effect removal in scRNA-seq data. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9972719832842151,
      "result": {
        "original_header": "HDMC: Hierarchical Distribution Matching and Contrastive learning",
        "type": "Text_excerpt",
        "value": "Code and data for using HDMC, a novel deep learning based framework for batch effect removal in scRNA-seq data. \n \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanglabNKU/HDMC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanglabNKU/HDMC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zhanglabNKU/HDMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDMC: Hierarchical Distribution Matching and Contrastive learning"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning"
        ],
        "type": "Text_excerpt",
        "value": "git clone https://github.com/zhanglabNKU/HDMC.git  \ncd HDMC/\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanglabNKU/HDMC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HDMC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zhanglabNKU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 45265,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 9151,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "R Dependencies",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning"
        ],
        "type": "Text_excerpt",
        "value": "* Seurat 2.3.0\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Dependencies",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.7.7\n* scikit-learn 0.23.2\n* pytorch 1.3.1\n* imbalanced-learn 0.7.0\n* rpy2 2.9.4\n* universal-divergence 0.2.0\n* pandas 1.0.4\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:10:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning"
        ],
        "type": "Text_excerpt",
        "value": "Given several datasets (each treated as a batch) for combination, there are two main steps: (i) preprocess the datasets and run metaneighbor algorithm to compute cluster similarities; (ii) train an HDMC model for batch correction."
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preprocessing",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Run the R script pre_processing.R as follows:\n```\nRscript pre_processing.R folder_name file1 file2 ...\n```\nFor example:\n```\nRscript pre_processing.R example batch1.csv batch2.csv\n```\n> The two datasets batch1.csv and batch2.csv (must be csv form) will be processed by the script and you will get three files saved in the same folder: the processed data named batch1_seurat.csv and batch2_seurat.csv, a file named metaneighbor.csv containing values of the cluster similarities between different batches."
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Batch correction",
        "parent_header": [
          "HDMC: Hierarchical Distribution Matching and Contrastive learning",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Run the python script hdmc.py to combine the datasets and remove batch effects as follows:\n```\npython hdmc.py -data_folder folder -files file1 file2 ... -h_thr thr1 -l_thr thr2\n```\nFor example:\n```\npython hdmc.py -data_folder example/ -files batch1_seurat.csv batch2_seurat.csv -h_thr 0.9 -l_thr 0.5\n```\n> This command will train an HDMC model for the selected files in the data_folder with two thresholds (-h_thr is the higher threshold and -l_thr is the lower one). When the training is finished, the datasets will be combined without batch effectes and the result file named combined.csv will be saved in the same data folder.  \n\nIn addition, some optional parameters are also available:\n* `-num_epochs`: number of the training epochs (default=2000)\n* `-code_dim`: dimension of the embedded code (default=20)\n* `-base_lr`: base learning rate for network training (default=1e-3)\n* `-lr_step`: step decay of learning rates (default=200)\n* `-gamma`: hyperparameter for adversarial learning (default=1)  \n\nUnder most circumstances, you don't need to change the optional parameters.  \n\nUse the help command to print all the options:\n```\npython hdmc.py --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglabNKU/HDMC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}