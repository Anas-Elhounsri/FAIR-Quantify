{
  "application_domain": [
    {
      "confidence": 38.53,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at mark.wilkinson@upm.es. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FAIRMetrics/Metrics"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-06T09:14:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-12T13:05:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This repository contains the results of the FAIR Metrics Group"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.914617309255942,
      "result": {
        "original_header": "FAIR Maturity Indicators and Tools",
        "type": "Text_excerpt",
        "value": "Resources and guidelines to assess the FAIRness of a digital resource. \nOnly Gen2 tests function with the current version of the [Evaluator software](https://w3id.org/AmIFAIR).\n \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9844830714583965,
      "result": {
        "original_header": "Directly Related Publications",
        "type": "Text_excerpt",
        "value": "* [Paper describing the metrics in this Git](https://doi.org/10.1038/sdata.2018.118)\n* A manuscript describing the Gen2 Maturity Indicators, and the Evaluator, is currently in preparation\n \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.982800690109449,
      "result": {
        "original_header": "HOW TO CREATE AND REGISTER A NEW MATURITY INDICATOR",
        "type": "Text_excerpt",
        "value": "FAIR Maturity Indicators are created, initially, as a narrative document, <a href='http://fairmetrics.org/fairmetricform.html'>following a template<a> extablished by the FAIR Metrics Authoring Group. A [MarkDown version of this template](https://github.com/FAIRMetrics/Metrics/blob/master/MaturityIndicators/MaturityIndicatorTemplate.md) is available above, and should be used for Maturity Indicator submissions by the public.  Guidance for how to complete this document is found in the <a href='http://fairmetrics.org/framework.html'>authoring framework overview</a>.\n  \nA Template Markdown file is provided for you in the [MaturityIndicator folder](https://github.com/FAIRMetrics/Metrics/tree/master/MaturityIndicators).  Once a Maturity Indicator has been designed, the document should be submitted via 'pull request' to this repository, at which time it becomes available for community discussion.   \nAt this time, there is no formal process for adoption of Maturity Indicators (incuding those that the Authoring Group have designed themselves!), as there is no official body that can recognize or \"stamp\" a Maturity Indicator as being \"valid\".  Nevertheless, authors should consider the comments and criticisms they receive, and modify the submission accordingly if the criticisms are justified. When the Maturity Indicator is considered ready for use, the FAIRsharing curators will replace the \"in development\" with a \"ready\" tag to indicate readiness. \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9426673004751122,
      "result": {
        "original_header": "HOW TO CREATE A NEW MATURITY INDICATOR TEST",
        "type": "Text_excerpt",
        "value": "With the goal of providing an objective, automated way of testing (meta)data resources against the Maturity Indicators, the Authorship Group have created the FAIR Evaluator, which is running as a demonstration service at [https://w3id.org/FAIR_Evaluator](https://w3id.org/FAIR_Evaluator).  The Evaluator provides a registry and execution functions for: \n* Maturity Indicator Tests\n* Community-defined Collections of Maturity Indicator Tests\n* Quantitative FAIRness evaluations of a Resource based on these Collections. \nA Maturity Indicator Test is a Web API that has the following features: \n1)  It is described in YAML using a [smartAPI](http://smart-api.info/) interface annotation (smartAPI is an extension of openAPI/Swagger, which allows semantic annotation of various metadata elements and interface input/output fields.  [An editor for smartAPI](http://smart-api.info/editor/) is available.\n2)  HTTP GET on the endpoint of the Maturity Indicator Test URL returns that smartAPI document in YAML (for example: http://linkeddata.systems/cgi-bin/FAIR_Tests/gen2_unique_identifier)\n3)  HTTP POST of the **metadata GUID** to that same endpoint, in a simple JSON document {\"subject\": \"GUID\"}, triggers the execution of the test.  \n4)  The Test returns a block of JSON-LD containing information about the test, including date/time, comments, and score \n\nThe \"score\" of the Maturity Indicator Test is the value of the \"SIO:000300\" (has_value) predicate, and must be binary 0 or 1.  The precise meaning of that value should be explained in the Comments (schema:comment) section, along wth, for example, explanations for failure.  Other metadata is provided, as shown (all shown fields are required!). \n**NOTE** No other information may be provided to the Maturity Indicator Test beyond the **metadata** GUID.  The purpose of FAIR Maturity Indicator Tests is to determine if machines can find, access, and \"interpret\" (meta)data, thus it is a firm requirement that only the metadata GUID may be given to the test.  The aspect of FAIRness being evaluated **must** be automatically discernable using that metadata. \nOnce registered, a Maturity Indicator Test can be included in new Maturity Indicator Collections, and used by the Evaluator software for automated testing of data resources.\n \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9540536928305586,
      "result": {
        "original_header": "PHILOSOPHY OF FAIR TESTING (under development - Comments welcome!)",
        "type": "Text_excerpt",
        "value": "Evaluating FAIRness is a controversial issue!  We (the Maturity Indicator Authoring Group) feel that these concerns can be eased through bringing more clarity regarding the \"philosophy\" behind FAIRness testing. \nFirst, there is no such thing as \"FAIR\", and neither is there \"unFAIR\"!  As described in [this manuscript](https://content.iospress.com/articles/information-services-and-use/isu824), we view FAIR as a continuum of 'behaviors' exhibited by a data resource that increasingly enable machine discoverability and (re)use.  Moreover, the final FAIR Principle speaks directly to the fact that \"FAIR\" will have different requirements for different communities!  Thus, a given Maturity Indicator (and its associated Maturity Indicator Test) may not be applicable to certain types of resources from a given community; or, alternatively, there may exist in that community some standard that is widely accepted within that community to enable machine-actionability of a data resource, but that would not be recognized by a \"generic\" computational agent.  This is all completely acceptable, and is the reason that the Maturity Indicators and the Maturity Indicator Testing framework have been established as a community-driven initiative, rather than top-down.  \nFor example:  In the bioinformatics community, a widely used format for Sequence Features is [GFF3](https://www.ensembl.org/info/website/upload/gff3.html) - a tab-delimited format with specific constraints on the content of each field.  From the perspective of a \"generic\" computational agent, it would be ~impossible to interpret or reuse that data; however, there are constraints on that format that speak directly to the interoperability objectives of FAIR - for example, that the \"type\" field must consist of a term from the Sequence Ontology.  Thus, it would be reasonable for the Bioinformatics community to create a FAIR Maturity Indicator, and its associated Maturity Indicator Test, that evaluated if a GFF3 file fulfilled those requirements.  Thus, a community could create a Maturity Indicator Collection that eschewed the \"generic\" test for machine-readability of the data, and instead, utilized their own Maturity Indicator Test that validated the content of that GFF3 file. \nIn light of this, we insist that FAIR evaluations are not intended to be used as \"judgement\", but rather as a means to objectively (AND TRANSPARENTLY!) test if a resource has successfully fulfilled the FAIRness requirements that **that community** has established.  In this light, FAIR Evaluation is a way for individual providers, or repository owners, to test their own compliance, and to take remedial action if their resources are not passing the tests.  Confirmation and/or guidance, rather than judgement. \nCertainly, we believe that some FAIR Maturity Indicator (for example, that the entity has a globally unique identifier, and that all data should have a license and citation information) are universal, and a prerequisite for FAIRness; however, many of the FAIR Principles must be interpreted by the individual communities, keeping as close to the \"spirit\" of FAIR as possible. \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/FAIRMetrics/Metrics/wiki"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FAIRMetrics/Metrics/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FAIRMetrics/Metrics/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FAIRMetrics/Metrics"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FAIR Maturity Indicators and Tools"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/make-trusty.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/MaturityIndicators/Gen2/make-all-nanopubs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9774197347168119,
      "result": {
        "original_header": "HOW TO CREATE A NEW MATURITY INDICATOR TEST",
        "type": "Text_excerpt",
        "value": "(we are working on JSON Schema for these documents now, but following the example below will get you started) \n    curl -L -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" -d '{\"subject\": \"10.5281/zenodo.1147435\"}' https://w3id.org/FAIR_Tests/tests/gen2_unique_identifier \n\n      [\n        {\n          \"@id\": \"http://w3id.org/FAIR_Tests/tests/gen2_unique_identifier#10.5281/zenodo.1147435/result-2018-12-31T13:32:43+00:00\",\n          \"@type\": [\n            \"http://fairmetrics.org/resources/metric_evaluation_result\"\n          ],\n          \"http://purl.obolibrary.org/obo/date\": [\n            {\n              \"@value\": \"2018-12-31T13:32:43+00:00\",\n              \"@type\": \"http://www.w3.org/2001/XMLSchema#date\"\n            }\n          ],\n          \"http://schema.org/softwareVersion\": [\n           {\n             \"@value\": \"Hvst-1.0.1:Tst-0.2.2\",\n             \"@type\": \"http://www.w3.org/2001/XMLSchema#float\"\n           }\n          ],\n          \"http://schema.org/comment\": [\n            {\n              \"@value\": \"Found a DOI - pass\",\n              \"@language\": \"en\"\n            }\n          ],\n          \"http://semanticscience.org/resource/SIO_000332\": [\n            {\n              \"@value\": \"10.5281/zenodo.1147435\",\n              \"@language\": \"en\"\n            }\n          ],\n          \"http://semanticscience.org/resource/SIO_000300\": [\n            {\n              \"@value\": \"1.0\",\n              \"@type\": \"http://www.w3.org/2001/XMLSchema#float\"\n            }\n          ]\n        }\n      ] \nThis Maturity Indicator Test is registered by either HTTP POST of properly formatted JSON to the Evaluator registry (see API here:https://github.com/FAIRMetrics/Metrics/tree/master/MetricsEvaluatorCode/Ruby/fairmetrics), or by visiting the [manual submission page](https://www.w3id.org/FAIR_Evaluator/metrics/new), where the form field on that page asks for the URL of the Maturity Indicator Test's YAML document. \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9882314340685786,
      "result": {
        "original_header": "PHILOSOPHY OF FAIR TESTING (under development - Comments welcome!)",
        "type": "Text_excerpt",
        "value": "TO DOWNLOAD ALL OF THE METRICS IN ONE PDF:  https://github.com/FAIRMetrics/Metrics/blob/master/MaturityIndicators/Gen1/ALL.pdf \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FAIRMetrics/Metrics/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 FAIR Maturity Testing and Evaluation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Metrics"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FAIRMetrics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 268939,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 171329,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 95997,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 50877,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 49531,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 44160,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 26258,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5921,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3128,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 2356,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CoffeeScript",
        "size": 1477,
        "type": "Programming_language",
        "value": "CoffeeScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "markwilkinson",
          "type": "User"
        },
        "date_created": "2018-07-04T10:50:49Z",
        "date_published": "2018-07-04T11:18:05Z",
        "description": "This release is to parallel the formal publication of the FAIR Metrics rubric and exemplar Metrics set (https://www.nature.com/articles/sdata2018118).  It contains the latest updates to the Metrics, based on responses to the Issues raised in GitHub.  It contains the results of the evaluation study.  It also contains the strawman version of the Metrics Evaluator code (for access to the Evaluator interface, contact any of the authors)",
        "html_url": "https://github.com/FAIRMetrics/Metrics/releases/tag/v1.0.3",
        "name": "FAIR Metrics, Evaluation results, and initial release of automated evaluator code",
        "release_id": 11775809,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/11775809",
        "value": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/11775809",
        "zipball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "markwilkinson",
          "type": "User"
        },
        "date_created": "2018-03-22T08:54:38Z",
        "date_published": "2018-03-22T09:02:56Z",
        "description": "The initial metrics have been updated based on github user comments and corrections.  In addition, we executed an evaluation of the Metrics via a questionnaire.  The results of this evaluation are in the \"Evaluation Of Metrics\" folder in the Git, and discussions about the questionnaire, the answers provided, and what is/not an \"acceptable\" answer, is ongoing within the GitHub issues pages.",
        "html_url": "https://github.com/FAIRMetrics/Metrics/releases/tag/1.0.2",
        "name": "Proposed FAIR Metrics and results of the Metrics evaluation questionnaire",
        "release_id": 10206234,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/10206234",
        "value": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/10206234",
        "zipball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "markwilkinson",
          "type": "User"
        },
        "date_created": "2017-11-24T10:19:46Z",
        "date_published": "2017-11-24T11:13:15Z",
        "description": "The FAIR Metrics Authoring group (Wilkinson, Dumontier, Sansone, Schultz, Doorn and Olavo Bonino) has produced this initial set of generally-applicable metrics spanning all of the FAIR sub-principles. These are intended to act as a starting point for broader community discussion about both the authoring of Metrics (the rubric) and about the proposed metrics themselves.",
        "html_url": "https://github.com/FAIRMetrics/Metrics/releases/tag/v1.0.1",
        "name": "Initial set of proposed FAIR Metrics for community discussion",
        "release_id": 8645059,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/8645059",
        "value": "https://api.github.com/repos/FAIRMetrics/Metrics/releases/8645059",
        "zipball_url": "https://api.github.com/repos/FAIRMetrics/Metrics/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:47:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 106
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAIRsharing contents to help in Maturity Indicator Testing",
        "type": "Text_excerpt",
        "value": "[FAIRsharing](https://fairsharing.org) is a FAIR-enabling resource and a registry for a wide variety of community data and metadata standards, including file formats, ontologies, identifier schemas, as well as for <a href='https://fairsharing.org/standards/?q=&selected_facets=type_exact:metric'> Maturity Indicators </a>.  In addition, FAIRsharing provides a JSON API that can be used within Maturity Indicator Tests to look-up \"standards\" a test encounters in its exploration of (meta)data to determine if that standard is registered.  \n\nStandards that are not registered with FAIRsharing are encouraged to do so by contacting the appropriate standards-body, or by submitting the missing standards via the <a href='https://fairsharing.org/new'>submission form </a>, or by contacting the FAIRsharing curators <a href='mailto:contact@fairsharing.org'> by email </a> to include the standard in their registry. \n"
      },
      "source": "https://raw.githubusercontent.com/FAIRMetrics/Metrics/master/README.md",
      "technique": "header_analysis"
    }
  ]
}