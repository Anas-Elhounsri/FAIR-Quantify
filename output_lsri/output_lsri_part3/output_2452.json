{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation:",
        "type": "Text_excerpt",
        "value": "Please see and cite our manuscript: \"PhaseME: automatic assessment of phasing quality and phasing improvement\", GigaSceince, 2020.\n\nPhaseME has been registered in [BioTools](https://bio.tools/phaseme).\n\n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sinamajidian/phaseme"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-20T16:51:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-30T19:44:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool set to assess the quality of the per read phasing and  reduce the errors."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9574002374671055,
      "result": {
        "original_header": "PhaseME",
        "type": "Text_excerpt",
        "value": "PhaseME is a tool set to assess the quality of the per read phasing information and help to reduce the errors during this process. \n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8744067340819224,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "1- You require your VCF file to be read based phased, which can be generated by e.g. WhatsHap. \n2- Run PhaseME using Python3 on Linux to obtain stats and improve the quality of phase blocks. The only requirement is Numpy.\n```\ntar -xzf precomputed/pairlist.tar.gz\npython phaseme.py improver my.vcf output_prefix\n```\nIf you only want to have the quality assessment report use `quality` instead of `improver`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smajidian/phaseme/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sinamajidian/phaseme/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sinamajidian/phaseme"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhaseME"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Test",
        "parent_header": [
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "Please try our sample data to establish the correctness of the pipeline installation. This can be found in the folder `example`.\n\n```\npython phaseme.py improver example/my.vcf example/out\n```\n\nThe output will be a quality assessment report `example/out/quality.csv` as well as an improved version of the input phased VCF `example/out/improved.vcf`.\n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999992547721709,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "2- Run PhaseME using Python3 on Linux to obtain stats and improve the quality of phase blocks. The only requirement is Numpy.\n```\ntar -xzf precomputed/pairlist.tar.gz\npython phaseme.py improver my.vcf output_prefix\n```\nIf you only want to have the quality assessment report use `quality` instead of `improver`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/sinamajidian/phaseme/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Sina Majidian & Fritz Sedlazeck\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phaseme"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "sinamajidian"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 119032,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sinamajidian",
          "type": "User"
        },
        "date_created": "2020-05-11T17:32:53Z",
        "date_published": "2020-05-15T08:20:17Z",
        "html_url": "https://github.com/sinamajidian/phaseme/releases/tag/v0.0.1",
        "name": "Initial release",
        "release_id": 26547606,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/sinamajidian/phaseme/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/sinamajidian/phaseme/releases/26547606",
        "value": "https://api.github.com/repos/sinamajidian/phaseme/releases/26547606",
        "zipball_url": "https://api.github.com/repos/sinamajidian/phaseme/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:54:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Complete usage",
        "type": "Text_excerpt",
        "value": "In quick start section the precomputed linkage information is used. Here, individual-specific linkage information is considered.  For grasping the full advantage of PhaseME, few steps are needed prior using PhaseME.\n\n1- You need to download 1000 Genomes reference panel haplotypes.\n\n```\nwget https://mathgen.stats.ox.ac.uk/impute/1000GP_Phase3.tgz\n```\nWarning: These are more than 10Gb.\n\n\n2- You need to download the [Shapeit](https://mathgen.stats.ox.ac.uk/genetics_software/shapeit/shapeit.html)\n\n3- Now, run PhasME as following.\n\n\n```\npython phaseme.py improver my.vcf output_prefix  /path/to/shapeit /path/to/1000G/dataset\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parental mode",
        "parent_header": [
          "Complete usage"
        ],
        "type": "Text_excerpt",
        "value": "PhaseME can also assess and improve the phasings results using parental data instead of linkage information. The user should prepare a three-sample VCF including son, mother and father SNV in this order. This can be done using e.g. `bcftools merge`. Prior to that you may need `bgzip`, `tabix` and `bcftools index` on all three samples. \n\nTo obtain quality insights:\n```\npython phaseme.py quality example/trio.vcf example/out_trio_q trio\n```\n\nOnce you want to improve phasing results:\n```\npython phaseme.py improver example/trio.vcf example/out_trio trio\n```\n\n\n\nFor using PhaseME in MAC computer please check the folder [mac](https://github.com/smajidian/phaseme/tree/master/mac).\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/smajidian/phaseme/master/readme.md",
      "technique": "header_analysis"
    }
  ]
}