{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite this as",
        "type": "Text_excerpt",
        "value": "Peng H. 2020. CFSP: a collaborative frequent sequence pattern discovery algorithm for nucleic acid sequence classification. PeerJ 8:e8965 https://doi.org/10.7717/peerj.8965   \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HePeng2016/CFSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-12T07:04:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-16T10:06:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9375183653887208,
      "result": {
        "original_header": "Elemental Comands",
        "type": "Text_excerpt",
        "value": "    motifTools   Gen  SimpleFile  FeatureFile \n  \n  The input (SimpleFile) and output (FeatureFile) follow the keyword 'Gen'. Frequent sequences set, composed by frequent sequence and gaps, are recorded in the FeatureFile. \n   \nThe format of the SimpleFile is as follows: \nThe format of the FeatureFile is as follows: \n\n     motifTools  Stat \u00a0 FeatureFile\u00a0 SimpleFile  FeatureProfileFile\n\u00a0 \u00a0\n  The input (FeatureFile and SimpleFile) and output (FeatureProfileFile) follow the keyword, 'Stat'.\u00a0 FeatureFile is a frequent sequences set file; SimpleFile is an original sequence file. Original sequence, mutational information for each frequent sequence, and each frequent sequence are recorded in the SimpleFile, FeatureProfileFile, and FeatureFile, respectively. \n\n The format of Feature FeatureProfile file is as follows:\n \n     N   M \n     A\n     B [ SUB N1 N2 C A ]\n    \n    \n  N is a number identify which frequent sequences module this muational information belong to.\n  \n  M is the frequence for this frequent sequences set.\n  \n  A is the count of mutional information for for this frequent sequences set.\n  \n  B is the frequence for this mutional information.\n  \n  N1 is a number to identify which frequent sequence the muation was occurred in.\n  \n  N2 is the position of the mutation at the frequent seuqeunce.\n  \n  Letters following N1,N2 denote the change from one to another.\n  \n  SUB/INS/DEL is the muational type.  \n\n        motifTools  Map Feature FeatureProfile SimpleTagFile  Out.libsvm\n        \n  This command is composed of the keyword, \u2018Map\u2019, \u00a0followed by the Feature file,\u00a0FeatureProfile file,\u00a0sequence file which recorded sequences with tag (SimpleTagFile) and out file (Out.libsvm with libsvm as the format).\u00a0\n\u00a0 \n  The first character in a sequence is the tag for that sequence.\n \u00a0  \n\n     SupportRatio = 0.2 \n     MinLength = 3  \n     ThresholdRatio = 0.1  \n     MinToleranceLength = 6  \n     \nThere are four parameters:\n\u00a0 \n \n   SupportRatio is the minimum frequence for single frequent sequence.\n   \n   MinLength is the minimum length for single frequent sequence.\n   \n   ThresholdRatio is the minimum frequence for frequnent sequences module.\n   \n   MinToleranceLength is the minimum length for frequent sequence will do approximate match.\n \u00a0 \n   \n    motifTools   ToPSSM  FeatureFile FeatureProfile  OutPutPSSMfile\n  \n  \n  This command can transform the mutational information format to PSSM (Position Specific Scoring Matrix) format. FeatureProfile is a mutational information file,FeatureFile is a file recorded frequent sequences sets, and the OutPutPSSMfile is a PSSM  format output file. The Score for PSSM will be normalize by the frequency of frequent sequences set. Notice that because the length of motif is fixed so that the insert muational information will be ignored.\n   \n   \n  \n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9523264069562134,
      "result": {
        "original_header": "Encapsulated Commands",
        "type": "Text_excerpt",
        "value": "The encapsulated Command is composed of elemental commands and shell scripts.   \n        FeatureGen   SampleFile  OutFileName\n        \n   This command will generate two files, one file is feature file that record the frequent sequence with gaps, and another file is feature profile file that record the mutation information for those frequent sequences. The SampleFile is fasta format. \u00a0And names of two outputfile are OutFileName.Feature, OutFileName.FeatureProfile.  \n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HePeng2016/CFSP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HePeng2016/CFSP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HePeng2016/CFSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/FuzzyMatchingLib/utils/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/FuzzyMatchingLib/utils/build-rpm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/FuzzyMatchingLib/utils/ltmain.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "    ./make \n \n  Compile the source code.\n \n    ./install\n   \n  Configure the environmental variables; to make all commands available, logging in again is necessary.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999690001617691,
      "result": {
        "original_header": "Elemental Comands",
        "type": "Text_excerpt",
        "value": "  The config file is necessary that exist in the same directory with data file. if not,the path of config file must be specified.\n  \n \n e.g \n  \n      motifTools  Gen  SimpleFile  OutFileName  -config  configPATH/config\n      \n \nThe content of config file: \n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.809269111318124,
      "result": {
        "original_header": "Encapsulated Commands",
        "type": "Text_excerpt",
        "value": "  This command will generate libsvm format file directly without Feature file input,the FeatureFile FeatureProfile are generated from positive Sample. positiveSample and negativeSample are fasta format.\u00a0\n  \n  \n      \n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/HePeng2016/CFSP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 HePeng2016\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CFSP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "HePeng2016"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 531042,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 431467,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 331618,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 112908,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 69337,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Pep8",
        "size": 69104,
        "type": "Programming_language",
        "value": "Pep8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 45746,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 11828,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1578,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 376,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sed",
        "size": 370,
        "type": "Programming_language",
        "value": "sed"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:30:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "The demo commands.",
        "type": "Text_excerpt",
        "value": "   \n   Demo files for test are located in MotifTest file. \n   \n   For two class:\n   \n        libsvmGenerate PositiveSample NegativeSample OutFileName \n        \n   \n   For muticlasss: \n \u00a0 \n   \n        FeatureGen \u00a0 FeatureDateSet  FeatureFile\n        libsvmGenWithFeature  FeatureFile.Feature  FeatureFile.FeatureProfile  Class1Sample Class2Sample ..  ClassNSample  OutFileName\n        "
      },
      "source": "https://raw.githubusercontent.com/HePeng2016/CFSP/master/README.md",
      "technique": "header_analysis"
    }
  ]
}