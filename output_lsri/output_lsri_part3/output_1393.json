{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "\ncff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Rossi\"\n  given-names: \"Massimiliano\"\n  orcid: \"https://orcid.org/0000-0002-3012-1394\"\ntitle: \"MONI: A Pangenomic Index for Finding Maximal Exact Matches\"\nurl: \"https://github.com/maxrossi91/moni\"\npreferred-citation:\n  type: journal-paper\n  authors:\n  - family-names: \"Rossi\"\n    given-names: \"Massimiliano\"\n    orcid: \"https://orcid.org/0000-0002-3012-1394\"\n  - family-names: \"Oliva\"\n    given-names: \"Marco\"\n    orcid: \"https://orcid.org/0000-0003-0525-3114\"\n  - family-names: \"Langmead\"\n    given-names: \"Ben\"\n    orcid: \"https://orcid.org/0000-0003-2437-1976\"\n  - family-names: \"Gagie\"\n    given-names: \"Travis\"\n    orcid: \"https://orcid.org/0000-0003-3689-327X\"\n  - family-names: \"Boucher\"\n    given-names: \"Christina\"\n    orcid: \"https://orcid.org/0000-0001-9509-9725\"\n  doi: 10.1089/cmb.2021.0290\n  journal: \"Journal of Computational Biology\"\n  start: 169  # First page number\n  end: 187 # Last page number\n  title: \"MONI: A Pangenomic Index for Finding Maximal Exact Matchesx\"\n  year: 2022\n  volume: 29\n  number: 2"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please, if you use this tool in an academic setting cite the following papers:\n\n    @article{RossiOLGB21,\n    author      = { Massimiliano Rossi and \n                    Marco Oliva and\n                    Ben Langmead and\n                    Travis Gagie and\n                    Christina Boucher},\n    title       = {MONI: A Pangenomics Index for Finding Maximal Exact Matches},\n    booktitle   = {Research in Computational Molecular Biology - 25th Annual \n                    International Conference, {RECOMB} 2021, Padova, Italy},\n    journal     = {Journal of Computational Biology},\n    volume      = {29},\n    number      = {2},\n    pages       = {169--187},\n    year        = {2022},\n    publisher   = {Mary Ann Liebert, Inc., publishers 140 Huguenot Street, 3rd Floor New~\u2026}\n    }\n\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "[1] Hideo Bannai, Travis Gagie, and Tomohiro I, *\"Refining ther-index\"*, Theoretical Computer Science, 812 (2020), pp. 96\u2013108\n\n[2] Christina Boucher, Travis Gagie, Alan Kuhnle and Giovanni Manzini, *\"Prefix-Free Parsing for Building Big BWTs\"*, In Proc. of the 18th International Workshop on Algorithms in Bioinformatics (WABI 2018).\n\n[3] Christina Boucher, Travis Gagie, Alan Kuhnle, Ben Langmead, Giovanni Manzini, and Taher Mun. *\"Prefix-free parsing for building big BWTs.\"*, Algorithms for Molecular Biology 14, no. 1 (2019): 13."
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": " Massimiliano Rossi and \nMarco Oliva and\nBen Langmead and\nTravis Gagie and\nChristina Boucher",
        "format": "bibtex",
        "title": "MONI: A Pangenomics Index for Finding Maximal Exact Matches",
        "type": "Text_excerpt",
        "value": "@article{RossiOLGB21,\n    publisher = {Mary Ann Liebert, Inc., publishers 140 Huguenot Street, 3rd Floor New~\u2026},\n    year = {2022},\n    pages = {169--187},\n    number = {2},\n    volume = {29},\n    journal = {Journal of Computational Biology},\n    booktitle = {Research in Computational Molecular Biology - 25th Annual \nInternational Conference, {RECOMB} 2021, Padova, Italy},\n    title = {MONI: A Pangenomics Index for Finding Maximal Exact Matches},\n    author = { Massimiliano Rossi and \nMarco Oliva and\nBen Langmead and\nTravis Gagie and\nChristina Boucher},\n}"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxrossi91/moni"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-01T19:45:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T19:16:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MONI: A Pangenomic Index for Finding MEMs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8616580615530798,
      "result": {
        "original_header": "MONI",
        "type": "Text_excerpt",
        "value": "MONI index uses the prefix-free parsing of the text [2][3] to build the Burrows-Wheeler Transform (BWT) of the reference genomes, the suffix array (SA) samples at the beginning and at the end of each run of the BWT, and the threshold positions of [1]. \n \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8896963355189741,
      "result": {
        "original_header": "Why \"MONI\"?",
        "type": "Text_excerpt",
        "value": "**Moni** is the Finnish word for *multi*.\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\ngit clone https://github.com/maxrossi91/moni\n```"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxrossi91/moni/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxrossi91/moni/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "maxrossi91/moni"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MONI"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxrossi91/moni/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Packages",
        "parent_header": [
          "MONI",
          "How to get MONI"
        ],
        "type": "Text_excerpt",
        "value": "We provide MONI on a `.deb` package:\n```console\nwget https://github.com/maxrossi91/moni/releases/download/v0.2.2/moni_v0.2.2_amd64.deb\nsudo dpkg -i moni_v0.2.2_amd64.deb\nmoni -h\n```\nWe provide MONI on a linux `.sh` installer:\n```console\nwget https://github.com/maxrossi91/moni/releases/download/v0.2.2/moni_v0.2.2-Linux.sh\nchmod +x moni_v0.2.2-Linux.sh\n./moni_v0.2.2-Linux.sh\nmoni -h\n```\nWe provide MONI on a pre-compiled `.tar.gz`:\n```console\nwget https://github.com/maxrossi91/moni/releases/download/v0.2.2/moni_v0.2.2-Linux.tar.gz\ntar -xzvf moni_v0.2.2-Linux.tar.gz\nmoni_v0.2.2-Linux/bin/moni -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install prerequisite packages",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\napt-get update\napt-get install -y build-essential cmake git python3 zlib1g-dev\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compile",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\nco moni\nmkdir build\ncd build; cmake -DCMAKE_INSTALL_PREFIX=<path/to/install/prefix> ..\nmake\n```\n\nReplace `<path/to/install/prefix>` with your preferred install path. If not specified the install path is `/usr/bin` by default.\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\nmake install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9899101049622782,
      "result": {
        "original_header": "MONI",
        "type": "Text_excerpt",
        "value": "```console\n                           __  __  ____  _   _ _____\n                          |  \\/  |/ __ \\| \\ | |_   _|\n                          | \\  / | |  | |  \\| | | |\n                          | |\\/| | |  | | . ` | | |\n                          | |  | | |__| | |\\  |_| |_\n                          |_|  |_|\\____/|_| \\_|_____|\n                                            ver 0.2.2\n```\nA Pangenomics Index for Finding MEMs. \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8228844468530963,
      "result": {
        "original_header": "Theoretical results:",
        "type": "Text_excerpt",
        "value": "* Christina Boucher\n* Travis Gagie\n* Ben Langmead\n* Massimiliano Rossi\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxrossi91/moni/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "matching-statistics, maximal-exact-matches, r-index"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Massimiliano Rossi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "moni"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "maxrossi91"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 192601,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31241,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 17212,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 862,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maxrossi91",
          "type": "User"
        },
        "date_created": "2024-09-19T02:38:21Z",
        "date_published": "2024-09-19T02:44:44Z",
        "description": "## What's Changed\r\n* Emit valid SAM format outputs by @AndreaGuarracino in https://github.com/maxrossi91/moni/pull/9\r\n* Fix: Expose minimum MEM length command option by @maxrossi91 in https://github.com/maxrossi91/moni/pull/8\r\n* Feature: Add SAM output to `moni mems` by @maxrossi91 in https://github.com/maxrossi91/moni/pull/11\r\n\r\n## New Contributors\r\n* @AndreaGuarracino made their first contribution in https://github.com/maxrossi91/moni/pull/9\r\n\r\n**Full Changelog**: https://github.com/maxrossi91/moni/compare/v0.2.1...v0.2.2",
        "html_url": "https://github.com/maxrossi91/moni/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "release_id": 175794400,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/maxrossi91/moni/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/maxrossi91/moni/releases/175794400",
        "value": "https://api.github.com/repos/maxrossi91/moni/releases/175794400",
        "zipball_url": "https://api.github.com/repos/maxrossi91/moni/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maxrossi91",
          "type": "User"
        },
        "date_created": "2024-08-05T13:13:51Z",
        "date_published": "2024-08-05T13:20:23Z",
        "description": "# Fixes\r\n\r\n* Revert to previous klib version to enable compile.\r\n* Bugfix related to newscan.x and creation of SLP (#5) [@oma219]\r\n\r\n# Changes / enhancements\r\n\r\n* Add `-e` option to include ref occurrence in MEMS output. (#6)\r\n\r\n**Full Changelog**: https://github.com/maxrossi91/moni/compare/v0.2.0...v0.2.1",
        "html_url": "https://github.com/maxrossi91/moni/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 168713605,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/maxrossi91/moni/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/maxrossi91/moni/releases/168713605",
        "value": "https://api.github.com/repos/maxrossi91/moni/releases/168713605",
        "zipball_url": "https://api.github.com/repos/maxrossi91/moni/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maxrossi91",
          "type": "User"
        },
        "date_created": "2021-12-03T02:37:20Z",
        "date_published": "2021-12-03T02:58:01Z",
        "description": "### Fixes\r\n\r\n- Fix `BigRePair` executable folder in pipeline.\r\n- Fix `thresholds` construction missing bitvector for single run character.\r\n\r\n### Changes / enhancements\r\n\r\n- Add install feature in `CMake` file.\r\n- Add `CPack` component to generate install files and `.deb` package.\r\n- Add SARS-CoV2 example data, from [EBI\u2019s COVID-19 data portal](https://www.covid19dataportal.org/).\r\n- Exposed `ksw2` configuration parameters.\r\n- Removed dependency from `psutil`.\r\n- Add `seqidx` to print `SAM` preamble and contig names.\r\n\r\n**Full Changelog**: https://github.com/maxrossi91/moni/compare/v0.1.0...v0.2.0",
        "html_url": "https://github.com/maxrossi91/moni/releases/tag/v0.2.0",
        "name": "MONI 0.2.0",
        "release_id": 54547788,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/maxrossi91/moni/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/maxrossi91/moni/releases/54547788",
        "value": "https://api.github.com/repos/maxrossi91/moni/releases/54547788",
        "zipball_url": "https://api.github.com/repos/maxrossi91/moni/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maxrossi91",
          "type": "User"
        },
        "date_created": "2021-07-07T03:14:45Z",
        "date_published": "2021-07-08T17:47:25Z",
        "html_url": "https://github.com/maxrossi91/moni/releases/tag/v0.1.0",
        "name": "v0.1.0 release",
        "release_id": 45922751,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/maxrossi91/moni/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/maxrossi91/moni/releases/45922751",
        "value": "https://api.github.com/repos/maxrossi91/moni/releases/45922751",
        "zipball_url": "https://api.github.com/repos/maxrossi91/moni/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install prerequisite packages",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\napt-get update\napt-get install -y build-essential cmake git python3 zlib1g-dev\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:50:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "MONI",
          "How to get MONI"
        ],
        "type": "Text_excerpt",
        "value": "MONI is available on `docker`:\n\n```console\ndocker pull maxrossi91/moni:v0.2.2\ndocker run maxrossi91/moni:v0.2.2 moni -h\n```\nif using `singularity`:\n```console\nsingularity pull moni_sif docker://maxrossi91/moni:v0.2.2\n./moni_sif moni --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compile",
        "parent_header": [
          "MONI",
          "How to get MONI",
          "Compile and install"
        ],
        "type": "Text_excerpt",
        "value": "```console\nco moni\nmkdir build\ncd build; cmake -DCMAKE_INSTALL_PREFIX=<path/to/install/prefix> ..\nmake\n```\n\nReplace `<path/to/install/prefix>` with your preferred install path. If not specified the install path is `/usr/bin` by default.\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Construction of the index:",
        "parent_header": [
          "MONI",
          "How to get MONI"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: moni build [-h] -r REFERENCE [-w WSIZE] [-p MOD] [-t THREADS] [-k] [-v]\n                  [-f] [--moni-ms] [--spumoni]\n  -h, --help            show this help message and exit\n  -r REFERENCE, --reference REFERENCE\n                        reference file name (default: None)\n  -o OUTPUT, --output OUTPUT\n                        output directory path (default: same as reference)\n  -w WSIZE, --wsize WSIZE\n                        sliding window size (default: 10)\n  -p MOD, --mod MOD     hash modulus (default: 100)\n  -t THREADS, --threads THREADS\n                        number of helper threads (default: 0)\n  -k                    keep temporary files (default: False)\n  -v                    verbose (default: False)\n  -f                    read fasta (default: False)\n  -g GRAMMAR, --grammar GRAMMAR\n                        select the grammar [plain, shaped] (default: plain)\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Computing the matching statistics with MONI:",
        "parent_header": [
          "MONI",
          "How to get MONI"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: moni ms [-h] -i INDEX -p PATTERN [-o OUTPUT] [-t THREADS]\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        reference index base name (default: None)\n  -p PATTERN, --pattern PATTERN\n                        the input query (default: None)\n  -o OUTPUT, --output OUTPUT\n                        output directory path (default: .)\n  -t THREADS, --threads THREADS\n                        number of helper threads (default: 1)\n  -g GRAMMAR, --grammar GRAMMAR\n                        select the grammar [plain, shaped] (default: plain)\n```\n\n### Computing the matching statistics with MONI:\n```\nusage: moni mems [-h] -i INDEX -p PATTERN [-o OUTPUT] [-e] [-s] [-t THREADS]\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        reference index base name (default: None)\n  -p PATTERN, --pattern PATTERN\n                        the input query (default: None)\n  -o OUTPUT, --output OUTPUT\n                        output directory path (default: .)\n  -e, --extended-output\n                        output MEM occurrence in the reference (default: False)\n  -s, --sam-output\n                        output MEM in a SAM formatted file. (default: False)\n  -t THREADS, --threads THREADS\n                        number of helper threads (default: 1)\n  -g GRAMMAR, --grammar GRAMMAR\n                        select the grammar [plain, shaped] (default: plain)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Computing the MEM extension with MONI and ksw2:",
        "parent_header": [
          "MONI",
          "How to get MONI"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: moni extend [-h] -i INDEX -p PATTERN [-o OUTPUT] [-t THREADS] [-b BATCH] [-g GRAMMAR] [-L EXTL] [-A SMATCH] [-B SMISMATCH] [-O GAPO] [-E GAPE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        reference index folder (default: None)\n  -p PATTERN, --pattern PATTERN\n                        the input query (default: None)\n  -o OUTPUT, --output OUTPUT\n                        output directory path (default: .)\n  -t THREADS, --threads THREADS\n                        number of helper threads (default: 1)\n  -b BATCH, --batch BATCH\n                        number of reads per thread batch (default: 100)\n  -g GRAMMAR, --grammar GRAMMAR\n                        select the grammar [plain, shaped] (default: plain)\n  -L EXTL, --extl EXTL  length of reference substring for extension (default: 100)\n  -A SMATCH, --smatch SMATCH\n                        match score value (default: 2)\n  -B SMISMATCH, --smismatch SMISMATCH\n                        mismatch penalty value (default: 4)\n  -O GAPO, --gapo GAPO  coma separated gap open penalty values (default: 4,13)\n  -E GAPE, --gape GAPE  coma separated gap extension penalty values (default: 2,1)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the index for `SARS-CoV2.1k.fa.gz` in the `data/SARS-CoV2` folder",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```console\nmoni build -r data/SARS-CoV2/SARS-CoV2.1k.fa.gz -o sars-cov2 -f\n```\nIt produces three files `sars-cov2.plain.slp`, `sars-cov2.thrbv.ms`, and `sars-cov2.idx` in the current folder which contain the grammar, the rlbwt and the thresholds, and the starting position and name of each fasta sequence in the reference file respectively.\n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute the matching statistics of `reads.fastq.gz` against `SARS-CoV2.1k.fa.gz` in the `data/SARS-CoV2` folder",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```console\nmoni ms -i sars-cov2 -p data/SARS-CoV2/reads.fastq.gz -o reads\n```\nIt produces two output files `reads.lengths` and `reads.pointers` in the current folder which store the lengths and the positions of the matching statistics of the reads against the reference in a fasta-like format.  \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute the MEMs of `reads.fastq.gz` against `SARS-CoV2.1k.fa.gz` in the `data/SARS-CoV2` folder",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```console\nmoni mems -i sars-cov2 -p data/SARS-CoV2/reads.fastq.gz -o reads\n```\nIt produces one output file `reads.mems` in the current folder which store the MEMs reposted as pairs of position and lengths in a fasta-like format.  \n"
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compute the MEM extension of `reads.fastq.gz` against `SARS-CoV2.1k.fa.gz` in the `data/SARS-CoV2` folder",
        "parent_header": [
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "```console\nmoni extend -i sars-cov2 -p data/SARS-CoV2/reads.fastq.gz -o reads\n```\nIt produces one output file `reads.sam` in the current folder which stores the information of the MEM extensions in SAM format.  "
      },
      "source": "https://raw.githubusercontent.com/maxrossi91/moni/main/README.md",
      "technique": "header_analysis"
    }
  ]
}