{
  "application_domain": [
    {
      "confidence": 32.73,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Prosperi, M., Marini, S. & Boucher, C. Fast and exact quantification of motif occurrences in biological sequences. BMC Bioinformatics 22, 445 (2021). https://doi.org/10.1186/s12859-021-04355-6\n\nJournal paper link: https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-021-04355-6\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "Marschall T, Rahmann S. Efficient exact motif discovery, Bioinformatics 2009;25:i356\u2013i364.\n\nProsperi MCF, Prosperi L, Gray RR, Salemi M. On counting the frequency distribution of string motifs in molecular sequences. International Journal of Biomathematics 2012;5(6):1250055.\n\nRobin S, Rodolphe F, Schbath S. DNA, Words and Model: Statistics of Exceptional Words. Cambridge University Press 2005; Cambridge, UK.\n\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DataIntellSystLab/motif_prob"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-05T18:20:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-18T21:08:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "type": "Text_excerpt",
        "value": "Identification of DNA/RNA motifs and quantification of their occurrences are important for the study of genetic diseases, gene evolution, transcription sites, and other biological mechanisms. Although several algorithms for motif characterization are available, most of them are quasi-exact, and correct p-value calculation remains challenging. Exact formulae for motif occurrence, under Bernoullian or Markovian models, have exponential complexity, thus can be cumbersome to be implemented efficiently, but approximations can be calculated with constant cost. Prosperi et al. (2012) provided an exact formula for counting the distribution of strings that do not overlap with themselves (i.e. non-clumpable), coupled with a mathematical demonstration of its validity, under both Bernoullian and Markovian models.\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9688642850977857,
      "result": {
        "original_header": "Implementation notes",
        "type": "Text_excerpt",
        "value": "This software implements the exact formula by Prosperi et al. (2012) under the Markovian model. Two different implementations have been produced: one in Perl (\"strperl1e\") and another in C++ (\"formlp03\"). Both programs take the same input and parameters to the formula, namely: (1) a query string or multiple strings to be analyzed; (2) the length of the reference string (i.e. the genome); and (3) the nucleotide frequencies of the genome. \nThe formula is obviously consistent only for motifs whose length is smaller than the genome length. If a clumped motif is present in the input, the string is flagged.\nSince the computational complexity of the formula is exponential, motif occurrences are calculated at increasing counts until the occurrence probability becomes lower than 10e-7, or the upper limit of 500 counts is reached. These values can be changed in the source code, but can be considered appropriate for most of realistic ratios between motif and genome lengths. \nIn order to avoid issues with floating point operations when frequency/length ratios diverge, and to provide comprehensive estimations for relatively ill-posed configurations, we have further implemented the calculation of the expected number of strings and the motif's (stationary) occurrence probability at any text position, according to Robin et al. (2005) and Marschall & Rahmann (2008).\n \n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8795482727772322,
      "result": {
        "original_header": "Perl",
        "type": "Text_excerpt",
        "value": "A single input file (named INPPERL.TXT, which can be changed in the source code) where the first four lines include the relative nucleotide frequencies in the reference genome sequence, the fifth line is the length of the genome, and then each of all the following lines contains a motif (only ACGT characters allowed). \n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DataIntellSystLab/motif_prob/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DataIntellSystLab/motif_prob/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DataIntellSystLab/motif_prob"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "motif_prob"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Executables",
        "parent_header": [
          "Installation Notes"
        ],
        "type": "Text_excerpt",
        "value": "Executable files for MS Windows are available on this repository (\"strperl1e.exe\", \"formlp3.exe\"). The programs were compiled under Padre Perl and MinGW (32bit) C++ suites.\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Source code and binaries",
        "parent_header": [
          "Installation Notes"
        ],
        "type": "Text_excerpt",
        "value": "Each program consists of a unique source code file (\"strperl1e\" written in Perl 5.3 and \"formlp03.cpp\" written in ISO C++ v14.0, respectively) and no other dependencies/libraries are required. The Perl script can be invoked directly without compilation.\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Makefile",
        "parent_header": [
          "Installation Notes"
        ],
        "type": "Text_excerpt",
        "value": "Binaries for UNIX are also available on the repository, along with the Makefile for the C++ version (using g++ compiler). To compile, just run:\n```\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DataIntellSystLab/motif_prob/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MIT license",
        "type": "Text_excerpt",
        "value": "Copyright (c) [2021] [Mattia Prosperi, Simone Marini, et al.]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "motif_prob"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "DataIntellSystLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 18810,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 12405,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 66,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:04:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples:",
        "parent_header": [
          "Input specifications",
          "C++"
        ],
        "type": "Text_excerpt",
        "value": "User adds genome file (to be used to calculated the nucleotide frequencies, and length):\n```\nformlp03 -i INPCPLUSPLUS_unix.TXT -o OUTCPLUSPLUS.TXT -f mygenome.fasta\n```\nUser inputs nucleotide frequencies and genome length from command line:\n```\nformlp03 -i INPCPLUSPLUS_unix.TXT -o OUTCPLUSPLUS.TXT -a 0.1 -c 0.3 -g 0.1 -t 0.5 -n 100000\n```\n\nExample of C++ input file:\nExample of Perl input file:\n```\nCAGATA\nGATTACA\nGAGGCGGCGTGC\nAGCTGTCGA\nCGAGGCTGGCG\nGCGCGC\nGCACTGC\nCGGTCAAA\n```"
      },
      "source": "https://raw.githubusercontent.com/DataIntellSystLab/motif_prob/main/README.md",
      "technique": "header_analysis"
    }
  ]
}