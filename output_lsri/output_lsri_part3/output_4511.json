{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wanyuac/GeneMates"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-28T01:12:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-20T04:53:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package identifying horizontal gene co-transfer between bacteria using association analysis and whole-genome sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a name = \"smmaryStats\">3.3. Summary statistics of input data</a>",
        "parent_header": [
          "GeneMates: an R package identifying horizontal gene co-transfer between bacteria",
          "<a name=\"scriptOrganisation\">3. Function hierarchy</a>"
        ],
        "type": "Text_excerpt",
        "value": "- *calcGeneFreq*: calculates gene frequency using the output of *countAlleles*.  \n- *corPatternProj*: estimates the correlation between allele distribution patterns and sample projections. This function is similar to *corCladeProj*.  \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9914319524164429,
      "result": {
        "original_header": "GeneMates: an R package identifying horizontal gene co-transfer between bacteria",
        "type": "Text_excerpt",
        "value": "GeneMates is an R package implementing a network approach to identify horizontal gene co-transfer (HGcoT) between bacteria using whole-genome sequencing (WGS) data. It is particularly useful for investigating intra-species HGcoT, where presence-absence status of acquired genes is usually confounded by bacterial population structure due to clonal reproduction. \nThis project was supported by the Department of Biochemistry and Molecular Biology, University of Melbourne, Victoria, Australia. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8471601117517907,
      "result": {
        "original_header": "<a name=\"installation\">1. Installation</a>",
        "type": "Text_excerpt",
        "value": "The latest stable release is [v0.2.2](https://github.com/wanyuac/GeneMates/releases/tag/v0.2.2) (21 March 2020). You may find previous versions on the [Releases](https://github.com/wanyuac/GeneMates/releases) page. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9425290042135075,
      "result": {
        "original_header": "<a name=\"helpers\">1.2. Helper program and scripts</a>",
        "type": "Text_excerpt",
        "value": "We have developed the following scripts to help users to prepare input data for GeneMates as well as to validate results:   \n- Screening genomic data for known genes  \n    - [PAMmaker](https://github.com/wanyuac/PAMmaker), which compiles and converts outputs of [SRST2](https://github.com/katholt/srst2), [ARIBA](https://github.com/sanger-pathogens/ariba), and geneDetector into allelic presence-absence matrices (PAMs).  \n    - [geneDetector](https://github.com/wanyuac/geneDetector) for genome assemblies.  \n- [readSimulator](https://github.com/wanyuac/readSimulator) for simulating short reads from template DNA sequences.  \n- [cgSNPs](https://github.com/wanyuac/cgSNPs) for processing core-genome SNPs (cgSNPs).  \n- Measurement and compilation of allelic physical distances (APDs)  \n    - [Bandage (distance)](https://github.com/wanyuac/Bandage/releases/tag/v0.8.0_distance) , a particular [branch](https://github.com/wanyuac/Bandage/tree/distance) of program [Bandage](https://github.com/rrwick/Bandage) v0.8.0 created for the distance measurement.  \n    - [APDtools](https://github.com/wanyuac/APDtools) (previously known as physDist) for compiling APDs measured by Bandage.  \n- Validation of inferred co-transferred allele clusters through sequence search and clustering\n    - [alleleClusterLocator](https://github.com/wanyuac/alleleClusterLocator) \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9835394814299611,
      "result": {
        "original_header": "<a name=\"quickStart\">2. Quick start</a>",
        "type": "Text_excerpt",
        "value": "Function _findPhysLink_ is a pivotal function and a major user interface of this package. Here we show a typical procedure for the usage of GeneMates. We assume this procedure is run on a computing server.\n```R\nsetwd(\"Analysis\")\n\nlibrary(GeneMates)\n\ntr <- read.tree(\"rooted.tree\")  # a maximum-likelihood tree\n\nassoc <- findPhysLink(snps = \"Analysis/snps.csv\", snps.delim = \",\", pos.col = \"Pos\", ref.pos = \"Ref\", min.mac = 1, genetic.pam = \"gpam.tsv\", genetic.pam.delim = \"\\t\", allelic.pam = \"apam.tsv\", allelic.pam.delim = \"\\t\", mapping = NULL, min.count = 15, phys.dists = \"prioritised_dists.tsv\", dist.delim = \"\\t\", max.node.num = 2, max.dist = 250e3, ref = \"ref\", tree = tr, min.co = 2, d.qs = c(0, 0.25, 0.5, 0.75, 1), max.p = 0.05, max.range = 2000, min.pIBD = 0.9, output.dir = \"Output\", prefix = \"demo\", gemma.path = \"~/Apps/gemma\", n.cores = 8, save.stages = TRUE, del.temp = FALSE, skip = TRUE)\n\nsnps <- assoc[[\"snps\"]]  # a large list\nsaveRDS(snps, file = \"Out/snps.rds\")  # Analysis/Out/snps.rds\n\nassoc <- assoc[-which(names(assoc) == \"snps\")]\nsaveRDS(assoc, file = \"Out/assoc.rds\")  # Analysis/Out/assoc.rds\n```\n \nThe element \"snps\" in the result list is usually too large to be loaded to an R session when the sample size or SNP number is large. Therefore we recommend to save the result list in two files. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9664246136094399,
      "result": {
        "original_header": "<a name=\"scriptOrganisation\">3. Function hierarchy</a>",
        "type": "Text_excerpt",
        "value": "This section illustrates organisation of public functions in GeneMates.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9967275230590975,
      "result": {
        "original_header": "<a name = \"mainFunction\">3.1. Main function</a>",
        "type": "Text_excerpt",
        "value": "- *lmm*: fits linear mixed models (LMMs) for allelic presence-absence status. It has the following subordinate functions:  \n  - *importCoreGenomeSNPs*: reads and processes a core-genome SNP (cgSNP) table.\n  - *importGeneticPAM*: reads and processes a genetic presence-absence matrix (PAM).\n  - *importAllelicPAM*: reads and processes an allelic PAM.\n  - *countAlleles*: counts the occurrence of each allele across bacterial isolates and summarises the number of alleles per gene.\n  - *assignPairID*: assigns an identifier to each pair of linear models Y ~ X and X ~ Y.\n  - *projectSamples*: performs sample projection via singular-value decomposition.\n  - *tree2Clades*: converts a user-specified or projection tree into a presence-absence matrix of isolates in each clade.\n  - *findMinIncClade*: determines the minimum inclusive clade (MIC) of each allele across the tree.\n  - *testForStruEff*: hypothesis tests for structural random effects.\n  - *corCladeProj*: estimates correlation between clades and sample projections.\n- _importPhysicalDists_: reads physical distances between genomic loci of bacterial isolates.\n- *summariseDist*: summarises APDs.  \n- *evalPL*: evaluates evidence of physical linkage between alleles and scores edges in the output network.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9976359431019753,
      "result": {
        "original_header": "<a name = \"networkAnalysis\">3.2. Network analysis</a>",
        "type": "Text_excerpt",
        "value": "- *mkNetwork*: creates a network object (Graph) from the result of *findPhysLink*.  \n- *compileGraphs*: compiles graphs into a single network while retaining separation between individual graphs.  \n- *summariseCliques*: summarises allele content per clique.  \n- *summarisePhysDistForClusters*: summarises APDs for allele clusters.  \n- *summariseDistsForEdges*: summarises APDs for each edge.  \n- *betaSignCongruence*: compares signs of fixed effects estimated using LMMs and penalised logistic models (PLMs).  \n- *mergeIddAlleles*: merges nodes representing identically distributed alleles into a single node in an output network of *findPhysLink*.  \n- *alleleClusterDistr*: computes a matrix for presence of allele clusters based on allelic presence-absence status.  \n- *allelicCoMatrix*: create a co-occurrence matrix from allelic PAM.  \n- *compEdgeOccur*: compare similarity between edges' occurrence across bacterial isolates.  \n- *countGeneClassLinks*: counts the number of links in a network at the level of gene classes.  \n- *countNeighbours*: count neighbours of each node in a network.  \n- *extractSubgraphs*: creates objects of the class \"Graph\" for subgraphs of a large graph.  \n- *getClusterMemberCooccurrence*: retrieves member allele co-occurrence status and isolate distributions for clusters of alleles.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9650898206584265,
      "result": {
        "original_header": "<a name = \"MGEdiscovery\">3.5. Identification of mobile gene clusters</a>",
        "type": "Text_excerpt",
        "value": "- *findSeq*: searches for a query sequence against a list of assemblies. This function requires accessibility to [Bandage](https://github.com/rrwick/Bandage).  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9902313815162271,
      "result": {
        "original_header": "<a name = \"spatiotemporal\">3.6. Spatiotemporal analysis</a>",
        "type": "Text_excerpt",
        "value": "GeneMates comprises functions analysing spatial and temporal distributions of bacterial isolates and alleles of genes of interest. \n- Spatial analysis  \n  - *countAllelesPerCountry*: counts alleles of interest in each country.  \n  - *countAllelesPerGeneByCountry*: counts every allele of given genes in each country.  \n  - *calcAllelicDiveristyPerCountry*: calculates Simpson's or Shannon's diversity index for alleles per country or any other kind of geographic regions. The function assumes that each strain must belong to only a single country or region.  \n- Temporal analysis  \n  - *countAllelesPerYear*: count alleles per year.  \n  - *countAllelesPerGeneByYear*: counts every allele of given genes per year.  \n  - *getAllelesEarliestAppearance*: identifies the earliest appearance of each allele specified by a vector.  \n  - *mkCoocurNetwork*: converts a network produced by *findPhysLink* into a co-occurrence network.  \n  - *tempNet*: creates a temporal network from graphs (such as a co-occurrence network).  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9921807261295975,
      "result": {
        "original_header": "<a name = \"visualisation\">3.7. Visualisation</a>",
        "type": "Text_excerpt",
        "value": "- *ringPlotPAM*: makes a ring plot to show presence-absence of genotypes and allelic co-occurrence.  \n- *heatMapPAM*: an expansion of ggtree's gheatmap function for displaying an allelic PAM.  \n- *drawHeatMap*: a generic function creating a heat map for a given variable.  \n- *comparePvalues*: draws a scatter plot and histograms to compare p-values from LMMs and PLMs.  \n- *showGeneContent*: draws a bubble plot and two bar plots to summarise gene and allele frequencies.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9885937587513258,
      "result": {
        "original_header": "<a name = \"helpers\">3.8. Helper functions</a>",
        "type": "Text_excerpt",
        "value": "Functions under this category are developed for helping users to extract and inspect specific aspects of results from *findPhysLink*. \n- *getRowsXY*: a generic function used for retrieves rows in a data frame through a pair of keys.  \n- extractPairedRows*: splits a data frame into two data frames for paired rows (that is, X ~ Y and Y ~ X) and unpaired rows (that is, only X ~ Y or Y ~ X exists in the input data frame), respectively.  \n- *findMinIncCladeOfStrains*: finds out and summarises the minimal inclusive clade containing all given strains or isolates.  \n- *getAllelesPerPattern*: returns a vector of allele names under each distribution pattern.  \n- *getAssocGenePair*: searches the association table produced by *findPhysLink* for rows corresponding to alleles of a given pair of genes.  \n- *getGeneClass*: extracts gene classe names from a vector of SRST2-formatted allele IDs.  \n- *mkFilterTSV*: makes a guidance tab-delimited file as an input for the [physDist](https://github.com/wanyuac/physDist) pipeline.  \n- *vertexAttr2Size*: maps a numeric vector to vertex sizes through a linear transformation.  \n- *retrieveAlleleSetInfo*: retrives allelic presence-absence information given a vector of allele names.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.838132579967869,
      "result": {
        "original_header": "<a name = \"plr\">3.9. Alternative association analysis</a>",
        "type": "Text_excerpt",
        "value": "- *plr*: uses Firth's penalised logistic regression rather than LMMs to model allelic presence-absence status. It works in a similar manner as *lmm*.   \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9989760888238312,
      "result": {
        "original_header": "<a name = \"inputs\">4. Inputs</a>",
        "type": "Text_excerpt",
        "value": "GeneMates takes as input four kinds of data for detection of HGcoT. A function is created for importing each kind of data. This section explain the usage of these four functions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9851161060995681,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Function *importCoreGenomeSNPs* reads a cgSNP table, encodes SNP genotypes, extracts biallelic SNPs and performs zero-centring of encoded SNP genotypes. The behaviour of this function is similar to the function *get_SNP_data* in R package [BugWAS](https://github.com/sgearle/bugwas) (see BUGWAS_modular.R). The function *importCoreGenomeSNPs* expects the SNP table to follow the output format of the script parseSNPtable.py in a read-mapping pipeline [RedDog](https://github.com/katholt/RedDog). Accordingly, the SNP table should be stored as a CSV file by default and an example of its structure is shown as follows. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9397405749276628,
      "result": {
        "original_header": "Arguments (excluding those specifying output filenames)",
        "type": "Text_excerpt",
        "value": "- snps.delim: a single character for the delimiter in the SNP table to be imported. Default: \",\".\n- pos.col: the name for the position column. Default: \"Pos\".\n- ref.col: the name for the reference column. Default: \"Ref\".\n- replace.ref: new name for the reference column when the column is present in the SNP table.\n- ingroup: a character vector of isolate names to be included in the resulting SNP matrix, which may include reference SNP genotypes.\n- outliers: a character vector of outlier isolate names, which may include the reference strain. These isolates will be excluded from the SNP matrix. Note that an error arises when ingroup and outliers overlap.\n- min.mac: the minimum minor-allele count of each SNP across all isolates excluding outlier isolates. Default: 1, keep every SNP whose minor allele occurs at least once in the remaining isolates.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9535341101736385,
      "result": {
        "original_header": "Limitation",
        "type": "Text_excerpt",
        "value": "Because of the code\n```R\nsnps.var <- apply(snps.core, 2, function(x) length(unique(x)))\nsnps.bi <- snps.core[, as.integer(snps.var) == 2]\nsnp.alleles <- .getAllelePairs(snps.bi)\nG <- .encodeAlleles(snps.bi, snp.alleles)\n```\n \nfunction *importCoreGenomeSNPs* only works correctly when all SNPs are detected in all ingroup genomes (namely, cgSNPs). In other words, missing SNP genotypes (each is denoted by a hyphen) create false genotype counts. It is not necessary to address this limitation for GeneMates because our estimation of bacterial population structure only relies on biallelic SNP sites that are found in all ingroup isolates.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9900283664129869,
      "result": {
        "original_header": "Procedure",
        "type": "Text_excerpt",
        "value": "- Read the SNP table, replace the reference strain name when possible, exclude outlier isolates and/or keep ingroup isolates.\n- Count the number of genotypes per SNP site, identify biallelic SNP sites in the ingroup genomes and determine minor (allele frequency < 0.5) and major alleles of each biallelic SNP site. Note that when both alleles of the same SNP site occur at the same frequency 0.5, the alleles will be sorted alphabetically (namely, following the order of \"A\", \"C\", \"G\", \"T\" resulting from the behaviour of the R function *table*) and the first allele will be chosen as the minor allele.\n- Encode alleles of each biallelic SNP site in accordance with a convention in genome-wide association analysis (GWAS)<sup>1, 2 (software manual)</sup>.\n  - 1: minor allele\n  - 0: major allele\n- (Optional) filter out biallelic SNPs of insufficient minor-allele frequencies (MAFs).\n- MAF-based zero-centring of the remaining biallelic SNP matrix.\n- Save codes and positions of biallelic SNPs in the BIMBAM format for [GEMMA](https://github.com/genetics-statistics/GEMMA) (see the [manual](http://www.xzlab.org/software/GEMMAmanual.pdf) of GEMMA for details of this file format) and return a large list to the parental R session.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951628659256739,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "- G: a binary matrix (rows: isolate names, columns: SNP sites) of biallelic SNP sites in the ingroup genomes. This matrix does not contain information of SNP positions.\n- S: a column-wise zero-centred SNP matrix G.\n- snp.alleles: a matrix of major and minor alleles of SNP sites in G.\n- mac: a named integer vector of minor-allele counts of SNP sites in G.\n- core: a matrix of unencoded cgSNP genotypes in ingroup genomes (rows denote isolate names and columns denote SNP sites). This matrix includes biallelic SNPs.\n- var: a named integer vector of genotype counts across all cgSNPs in ingroup genomes.\n- bi: a matrix of biallelic SNPs extracted from the matrix _core_.\n- G.bimbam: a BIMBAM-formatted data frame directly converted from the matrix G.\n- annots: a BIMBAM-formatted data frame of SNP positions.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9955727727629609,
      "result": {
        "original_header": "<a name = \"majorOutput\">5. Output</a>",
        "type": "Text_excerpt",
        "value": "- assoc: a data frame comprising linkage scores _s_, association scores _s<sub>a</sub>_, distance scores _s<sub>d</sub>_, and other critical results. Users may want to inspect this element in the first place upon finishing running the function _findPhysLink_.  \n- Elements generated by the subordinate function _lmm_ (which can be used independently)  \n  - outputs: a named list of elements \"snps\", \"snp.annots\", \"pam\", \"Y\", \"K\", \"U\", \"D\" and \"lmms.pat\", which store paths to output files.  \n  - stage.outputs: a named list of elements \"snps\", \"genes\", \"alleles\", \"gene.alleles\", \"allele.pairs\", \"lmms.pat.dif\", \"lmms.pat.idd\", \"lmms\", \"struc\", and another three elements that are only generated in _findPhysLink_: \"ds\", \"ds.summary\" and \"assoc\". These elements save paths to stage data (RDS files) under the temporary directory (_temp_) generated by _lmm_ and _findPhysLink_. Both functions skip certain steps when corresponding stage records are found under the _temp_ directory.  \n  - snps: output of the function _importCoreGenomeSNPs_. Since the data within this list is usually of a tremendous size, users may need to move this element to another variable so that it will be faster to load the rest of elements into R.\n  - genes: output of the function _importGeneticPAM_.  \n  - alleles: output of the function _importAllelicPAM_.  \n  - mapping: output of the function _countAlleles_. This element is a data frame mapping allele names to gene names and summarising allele frequencies.  \n  - tests: configurations of response (Y) and explanatory (X) alleles for LMMs used for association analysis.  \n  - lmms.pat: parameter estimates of pattern-level LMMs.  \n  - lmms: parameter estimates of allele-level LMMs.  \n  - struc: a named list of elements \"C\" (output of the function _projectSamples_), \"clades\" (output of the function _tree2Clades_), \"mc\" (minimal inclusive clades, output of the function _findMinIncClade_), \"eff\" (structural random effects, output of the function _testForStruEff_), \"cor\" (output of the function _corCladeProj_) and \"tree\" (a tree of sample projections when the parameter ```tree = NULL``` or the tree specified by users with this parameter). This list saves results from the tests of structural random effects in fitted LMMs.  \n- ds: output of the function _importPhysicalDists_ \u2014 unfiltered APDs.\n- lmms.ds: a list of an element \"dif\" (for differently distributed alleles tested for associations) and when identically distributed alleles are present, an element \"idd\". Each element is a data frame linking APDs to LMMs by allele pairs (Y, X).\n- ds.stats: output of the function _summariseDist_, a named list storing summary statistics of APDs for every LMM. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9469561974114873,
      "result": {
        "original_header": "<a name = \"references\">References</a>",
        "type": "Text_excerpt",
        "value": "1. McVean, G. A Genealogical Interpretation of Principal Components Analysis. _PLOS Genet_. 5, e1000686 (2009).\n2. Zhou, X. & Stephens, M. Genome-wide efficient mixed-model analysis for association studies. _Nat Genet_ 44, 821\u2013824 (2012). \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wanyuac/GeneMates/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wanyuac/GeneMates"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneMates: an R package identifying horizontal gene co-transfer between bacteria"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/install_GeneMates.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9375339791595483,
      "result": {
        "original_header": "GeneMates: an R package identifying horizontal gene co-transfer between bacteria",
        "type": "Text_excerpt",
        "value": "We would appreciate your citation if you find GeneMates or its helper scripts helpful to your project: \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998111654990597,
      "result": {
        "original_header": "<a name=\"installation\">1. Installation</a>",
        "type": "Text_excerpt",
        "value": "The latest stable release is [v0.2.2](https://github.com/wanyuac/GeneMates/releases/tag/v0.2.2) (21 March 2020). You may find previous versions on the [Releases](https://github.com/wanyuac/GeneMates/releases) page. \nThere are two approaches to install this package. Take GeneMates v0.2.2 for example. Assuming that we are going to install the package under a user-specified directory Lib: \n**R**\n```R\ninstall.packages(pkgs = \"GeneMates_0.2.2.tar.gz\", lib = \"Lib\")\n```\n \nThe program Rscript should be accessible as a command. Namely, the path of R should be added to $PATH before hand.\n````bash\n./install_GeneMates.sh GeneMates_0.2.2.tar.gz Lib \n````\n \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999410099765,
      "result": {
        "original_header": "R packages",
        "type": "Text_excerpt",
        "value": "Since dependent R packages are not maintained by the GeneMates team and R may not install them automatically as you install GeneMates, you may follow manuals of these packages to complete the installation. \n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "antimicrobial-resistance, association-analysis, bacterial-genomes, horizontal-gene-transfer, mobile-genetic-elements, r-package"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GeneMates"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "wanyuac"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 430456,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4163,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wanyuac/GeneMates/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wanyuac",
          "type": "User"
        },
        "date_created": "2022-08-08T10:01:02Z",
        "date_published": "2022-08-08T10:51:13Z",
        "description": "The only change in this version is an update to function `heatMapPAM` in order to fix the issue of lossing tip labels when scaling colours in the heat map. Thanks to K. L. for raising this problem.\r\n\r\nThis update can be installed from file `GeneMates_0.2.3.tar.gz` using R function `install.packages` or RStudio.",
        "html_url": "https://github.com/wanyuac/GeneMates/releases/tag/v0.2.3",
        "name": "v0.2.3",
        "release_id": 73876710,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/wanyuac/GeneMates/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/wanyuac/GeneMates/releases/73876710",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/releases/73876710",
        "zipball_url": "https://api.github.com/repos/wanyuac/GeneMates/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wanyuac",
          "type": "User"
        },
        "date_created": "2020-03-21T17:49:30Z",
        "date_published": "2020-03-21T17:53:12Z",
        "description": "Changes in this version:\r\n- A substantial improvement of function `comparePvalues`.\r\n- Minor updates to other code and documentation.\r\n",
        "html_url": "https://github.com/wanyuac/GeneMates/releases/tag/v0.2.2",
        "name": "Version 0.2.2",
        "release_id": 24737826,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/wanyuac/GeneMates/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/wanyuac/GeneMates/releases/24737826",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/releases/24737826",
        "zipball_url": "https://api.github.com/repos/wanyuac/GeneMates/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wanyuac",
          "type": "User"
        },
        "date_created": "2019-08-28T21:19:04Z",
        "date_published": "2019-08-28T21:23:32Z",
        "description": "This version comprises a major update and enhancement to GeneMates, including a new model used for spatiotemporal analysis and some name changes in accordance with our manuscript of GeneMates. This version has been tested with the data set that is accessible under the directory Example.",
        "html_url": "https://github.com/wanyuac/GeneMates/releases/tag/v0.2.1",
        "name": "Version 0.2.1",
        "release_id": 19605965,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/wanyuac/GeneMates/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/wanyuac/GeneMates/releases/19605965",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/releases/19605965",
        "zipball_url": "https://api.github.com/repos/wanyuac/GeneMates/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "wanyuac",
          "type": "User"
        },
        "date_created": "2019-04-22T02:35:30Z",
        "date_published": "2018-08-03T14:47:26Z",
        "description": "The first formal release of GeneMates (version 0.1, patch 5). This is a stable version achieving all aims of this project. The binary package was compiled on a Win10 machine (AMD 64-bit CPU).",
        "html_url": "https://github.com/wanyuac/GeneMates/releases/tag/v0.1.5",
        "name": "First public release",
        "release_id": 12244695,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/wanyuac/GeneMates/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/wanyuac/GeneMates/releases/12244695",
        "value": "https://api.github.com/repos/wanyuac/GeneMates/releases/12244695",
        "zipball_url": "https://api.github.com/repos/wanyuac/GeneMates/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:41:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ]
}