{
  "application_domain": [
    {
      "confidence": 16.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/opencobra/Medusa"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-18T19:14:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T04:33:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Analysis of ensembles of metabolic network reconstructions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.90255355451848,
      "result": {
        "original_header": "Medusa - Analysis of ensembles of metabolic network reconstructions",
        "type": "Text_excerpt",
        "value": "Medusa is a tool for constraint-based reconstruction and analysis (COBRA) of ensembles. It builds on the COBRApy package (https://github.com/opencobra/cobrapy) by extending most single-model functionality to efficient ensemble-scale analysis. Additionally, Medusa provides novel functions for the analysis of ensembles. \nMedusa is developed openly and we welcome contributions in the form of feedback, requests, ideas, and code. Please contact us by opening an issue if you are interested in a feature we have not yet implemented. \nCheck out the tutorials, examples, and API reference in the readthedocs documentation: https://medusa.readthedocs.io/en/latest/ \nWhen using medusa, please cite the COBRApy software paper, the medusa software paper, and the paper describing the method you used that was implemented within COBRApy or medusa. The COBRApy/Medusa citations are provided below. Please note either the release (if installed via pip) and/or the commit (if working from the development branch between versions) in your publication. \nWe recommend familiarizing yourself with standard COBRA methods in the COBRApy package (https://github.com/opencobra/cobrapy). Some examples of ensemble analyses with genome-scale metabolic models can be found in our `recent preprint <https://doi.org/10.1101/460071>`_ and the accompanying `code repository <https://github.com/gregmedlock/ssl_ensembles>`_. \nFor reading on ensembles in metabolic modeling and systems biology, see our recent papers: \n2. Medlock GL, Papin JA (2018) Guiding the refinement of biochemical knowledgebases with ensembles of metabolic networks and semi-supervised learning. bioRxiv, 2018. https://doi.org/10.1101/460071 \n"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://medusa.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/opencobra/Medusa/wiki"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/opencobra/Medusa/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/install.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/install.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/stats_compare.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/stats_compare.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/creating_ensemble.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/creating_ensemble.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/medusa_objects.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/medusa_objects.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/faq.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/faq.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/why.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/why.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/simulating.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/simulating.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/io.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/io.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/benchmark_iterative_gapfill.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/benchmark_iterative_gapfill.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/machine_learning.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/machine_learning.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/benchmark_mem_cpu.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/benchmark_mem_cpu.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/parallel_fba.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/parallel_fba.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/assess_ROC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/docs/assess_ROC.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/opencobra/Medusa/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "opencobra/Medusa"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Medusa - Analysis of ensembles of metabolic network reconstructions"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9876746668127865,
      "result": {
        "original_header": "Medusa - Analysis of ensembles of metabolic network reconstructions",
        "type": "Text_excerpt",
        "value": "|Build Status| |PyPI| \n\nInstallation\n~~~~~~~~~~~~ \nUse pip to install medusa from PyPI (Note: we support Python 3 only; use Python 2 at your own peril):: \n    pip install medusa-cobra \nCheck out the tutorials, examples, and API reference in the readthedocs documentation: https://medusa.readthedocs.io/en/latest/ \nWe recommend familiarizing yourself with standard COBRA methods in the COBRApy package (https://github.com/opencobra/cobrapy). Some examples of ensemble analyses with genome-scale metabolic models can be found in our `recent preprint <https://doi.org/10.1101/460071>`_ and the accompanying `code repository <https://github.com/gregmedlock/ssl_ensembles>`_. \nWe greatly appreciate feedback from current and prospective users from all backgrounds.\nFeel free to post issues via github or contact us directly via email with any questions or thoughts. \n.. |Build Status| image:: https://api.travis-ci.org/gregmedlock/Medusa.svg?branch=master\n   :target: https://travis-ci.org/gregmedlock/Medusa/\n.. |PyPI| image:: https://badge.fury.io/py/medusa-cobra.svg\n   :target: https://pypi.python.org/pypi/medusa-cobra\n \n"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9067314017992678,
      "result": {
        "original_header": "Medusa - Analysis of ensembles of metabolic network reconstructions",
        "type": "Text_excerpt",
        "value": "    import medusa \n"
      },
      "source": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/opencobra/Medusa/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Medusa"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "opencobra"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 94231,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/opencobra/Medusa/development/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gregmedlock",
          "type": "User"
        },
        "date_created": "2020-07-28T21:32:15Z",
        "date_published": "2020-07-28T21:39:12Z",
        "description": "This release fixes import issues in the previous pip release, makes some minor updates to documentation notebooks, and some linting of package imports.",
        "html_url": "https://github.com/opencobra/Medusa/releases/tag/v0.2.1",
        "name": "Pip patch",
        "release_id": 29048490,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/opencobra/Medusa/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/opencobra/Medusa/releases/29048490",
        "value": "https://api.github.com/repos/opencobra/Medusa/releases/29048490",
        "zipball_url": "https://api.github.com/repos/opencobra/Medusa/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gregmedlock",
          "type": "User"
        },
        "date_created": "2018-12-11T21:38:11Z",
        "date_published": "2018-12-11T21:37:09Z",
        "description": "* Docs drafted\r\n* transitioned to Feature/Member representation of ensembles",
        "html_url": "https://github.com/opencobra/Medusa/releases/tag/0.2",
        "name": "Version 0.2",
        "release_id": 14477450,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/opencobra/Medusa/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/opencobra/Medusa/releases/14477450",
        "value": "https://api.github.com/repos/opencobra/Medusa/releases/14477450",
        "zipball_url": "https://api.github.com/repos/opencobra/Medusa/zipball/0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gregmedlock",
          "type": "User"
        },
        "date_created": "2018-06-21T18:53:03Z",
        "date_published": "2018-06-21T19:05:16Z",
        "description": "With this release, most of the old code was refactored using a custom object-oriented strategy, rather than the old approach(es) of using a dictionary or dataframe for model states and features.\r\n\r\nEssentially all code from previous versions is now deprecated.",
        "html_url": "https://github.com/opencobra/Medusa/releases/tag/0.1.2",
        "name": "v0.1.2",
        "release_id": 11594415,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/opencobra/Medusa/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/opencobra/Medusa/releases/11594415",
        "value": "https://api.github.com/repos/opencobra/Medusa/releases/11594415",
        "zipball_url": "https://api.github.com/repos/opencobra/Medusa/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gregmedlock",
          "type": "User"
        },
        "date_created": "2018-02-07T19:57:09Z",
        "date_published": "2018-02-07T20:26:39Z",
        "description": "reposting this release due to some pip issues",
        "html_url": "https://github.com/opencobra/Medusa/releases/tag/0.1.1a_1",
        "name": "repost",
        "release_id": 9580097,
        "tag": "0.1.1a_1",
        "tarball_url": "https://api.github.com/repos/opencobra/Medusa/tarball/0.1.1a_1",
        "type": "Release",
        "url": "https://api.github.com/repos/opencobra/Medusa/releases/9580097",
        "value": "https://api.github.com/repos/opencobra/Medusa/releases/9580097",
        "zipball_url": "https://api.github.com/repos/opencobra/Medusa/zipball/0.1.1a_1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gregmedlock",
          "type": "User"
        },
        "date_created": "2018-02-07T19:57:09Z",
        "date_published": "2018-02-07T20:22:37Z",
        "description": "Small amount of refactoring of flux_analysis, essentially removing functionality from the Ensemble class and putting it into smaller units. Also implemented unit tests for flux analysis (FBA and FVA) and continuous integration with Travis.",
        "html_url": "https://github.com/opencobra/Medusa/releases/tag/0.1.1a",
        "name": "flux_analysis refactor",
        "release_id": 9580012,
        "tag": "0.1.1a",
        "tarball_url": "https://api.github.com/repos/opencobra/Medusa/tarball/0.1.1a",
        "type": "Release",
        "url": "https://api.github.com/repos/opencobra/Medusa/releases/9580012",
        "value": "https://api.github.com/repos/opencobra/Medusa/releases/9580012",
        "zipball_url": "https://api.github.com/repos/opencobra/Medusa/zipball/0.1.1a"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:54:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ]
}