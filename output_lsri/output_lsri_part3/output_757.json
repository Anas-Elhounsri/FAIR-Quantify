{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwbio/PROSE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-03T04:22:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-16T22:34:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Given a gene/protein list, PROSE identifies similarly enriched genes/proteins from a co-expression matrix. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9765231099742042,
      "result": {
        "original_header": "PROSE",
        "type": "Text_excerpt",
        "value": "Given a list of well-defined observed/unobserved proteins, PROSE rapidly learns their underlying co-regulation patterns in a related gene co-expression matrix, before generating an enrichment score for all proteins in the proteome, including _missing proteins_ that were not considered in the initial lists. \nIn general, these enrichment scores correspond to the _importance_ of the individual proteins in the sample phenotype. As we expect a considerable number of proteins to be missing in any proteomic screen, we can use a high enrichment score as a threshold for recoving some of these missing proteins. PROSE scores can also be directly applied to downstream analyses, with the increased proteome coverage leading to more robust results. \n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8973149939695774,
      "result": {
        "original_header": "Logging",
        "type": "Text_excerpt",
        "value": "By default, PROSE also creates a log folder to store its output (you can disable this by setting **_verbose_** = False).\n- **_log.txt_** contains the main arguments used for the run, as well as prediction metrics\n- **_summary.tsv_** contains a human-readable version of the above DataFrame\n- **_prose_object.pkl_** contains the pickled PROSE output\n- **_distribution.png_** shows the score and probability distributions of the individual classes\n<img src=\"https://github.com/bwbio/PROSE/blob/assets/Distribution.jpg\" width=\"75%\" height=\"75%\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bwbio/PROSE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwbio/PROSE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bwbio/PROSE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PROSE"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwbio/PROSE/assets/Schematic.jpg"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwbio/PROSE/assets/Distribution.jpg"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "PROSE"
        ],
        "type": "Text_excerpt",
        "value": "PROSE (and necessary dependencies) can be installed directly from PyPI as follows:\n```\npip install pyprose\n```\n\nOr, to update PROSE to its latest version:\n```\npip install pyprose -U\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9641204035203282,
      "result": {
        "original_header": "PROSE",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/bwbio/PROSE/blob/assets/Schematic.jpg\" width=\"100%\" height=\"100%\"> \n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bwbio/PROSE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Bertrand Wong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PROSE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bwbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 177422,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:14:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "PROSE"
        ],
        "type": "Text_excerpt",
        "value": "PROSE can be easily run as a command line tool or in your IDE of choice. The following Python code demonstrates how to generate PROSE enrichment scores for proteins in a given correlation matrix. \n\n**_pyprose.vignette_()** contains our example dataset. This includes [HeLa protein sets from Mehta et al. (2021)](https://doi.org/10.1101/2020.11.07.372276), as well as a co-expression matrix generated from the [Klijn et al. (2015) RNA-Seq dataset](https://doi.org/10.1038/nbt.3080).\n```\nimport pyprose\n\n#load the test data\ntest_data = pyprose.vignette()\n\n#get the observed/unobserved protein lists\nobs = test_data.obs\nunobs = test_data.unobs\n\n#get the correlation matrix\npanel_corr = test_data.panel_corr \n\n#use this setting train only 5 sub-classifiers (much faster)\nbag_kwargs = {'n_estimators':5}\n\n#run PROSE\nresult = pyprose.prose(obs, unobs, panel_corr, bag_kwargs = bag_kwargs)\n\n#show the resultant DataFrame\nprint(result.summary)\n```\n\n\n**result.summary** returns a pandas DataFrame object, similar to below:\n\n|   protein  \t| y_pred \t| y_true \t|  score \t| score_norm \t|  prob \t|\n|:----------:\t|:------:\t|:------:\t|:------:\t|:----------:\t|:-----:\t|\n|   O43657   \t|    1   \t|   -1   \t|  1.096 \t|    0.923   \t|  0.65 \t|\n|   Q9H2S6   \t|    0   \t|    0   \t| -1.675 \t|   -0.279   \t| 0.187 \t|\n|   O60762   \t|    1   \t|    1   \t|  1.73  \t|    1.198   \t|  0.75 \t|\n|   Q8IZE3   \t|    0   \t|   -1   \t| -1.539 \t|    -0.22   \t| 0.203 \t|\n|     ...    \t|   ...  \t|   ...  \t|   ...  \t|     ...    \t|  ...  \t|\n| A0A0B4J2D5 \t|    0   \t|   -1   \t|  -1.35 \t|   -0.139   \t| 0.227 \t|\n| A0A0B4J2H0 \t|    1   \t|    0   \t|  0.813 \t|     0.8    \t|  0.6  \t|\n| A0A0D9SF12 \t|    0   \t|   -1   \t|  -3.77 \t|   -1.188   \t| 0.045 \t|\n|   Q9BTK6   \t|    0   \t|    1   \t| -2.781 \t|    -0.76   \t| 0.091 \t|\n\n- **_protein_** gives individual protein IDs, taken from the index of the correlation matrix used\n- **_y_pred_** is the predicted label\n- **_y_true_** is the true label (1 for observed, 0 for unobserved, -1 for unknown)\n- **_score_** measures how strongly a protein is close to the 'observed' group (positive values are closer)\n- **_score_norm_** is the normalized score (ideally, use this for downstream analysis)\n- **_prob_** is the probability that the protein is considered 'observed'\n"
      },
      "source": "https://raw.githubusercontent.com/bwbio/PROSE/main/README.md",
      "technique": "header_analysis"
    }
  ]
}