{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/COMBINE-lab/minnow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-29T14:07:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-08T17:12:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9805634349148883,
      "result": {
        "original_header": "Minnow ( read level simulator for dscRNA-seq data)",
        "type": "Text_excerpt",
        "value": "Most analysis pipelines validate their results using known marker genes (which are not widely available for all types of analysis) and by using simulated data from gene-count-level simulators. Typically, the impact of using different read-alignment or UMI deduplication methods has not been widely explored. Assessments based on simulation tend to start at the level of assuming a simulated count matrix, ignoring the effect that different approaches for resolving UMI counts from the raw read data may produce. Here, we present minnow, a comprehensive sequence-level droplet-based single-cell RNA-seq (dscRNA-seq) experiment simulation framework.  Minnow accounts for important sequence-level characteristics of experimental scRNA-seq datasets and models effects such as PCR amplification,  CB (cellular barcodes) and UMI (Unique Molecule Identifiers) selection, and sequence fragmentation and sequencing.  \nMinnow is a read level simulator for droplet based single cell RNA-seq data. Minnow simulates the reads by sampling sequences from the underlying de-Bruijn graph (using `--dbg`) of the reference transcriptome or alternatively just samples sequences from the reference transcriptome. As the `--dbg` option also enables other features of the software, it is useful to describe those. \n<p align=\"center\">\n<img src=\"data/minnow_main_figure.001.jpeg\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9869241497510322,
      "result": {
        "type": "Text_excerpt",
        "value": "Current development is awaiting a release use `minnow-velocity` for using the recent version of minnow \n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/COMBINE-lab/minnow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "COMBINE-lab/minnow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Minnow ( read level simulator for dscRNA-seq data)"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/scripts/check_shasum.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/scripts/make-release.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/scripts/push-binary.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/.drone/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/.drone/copy_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/.drone/unit_tests.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install the current active branch `minnow-velocity`",
        "type": "Text_excerpt",
        "value": "Minnow-velocity is currently available on Minnow's github repo under the minnow-velocity branch, for downloading, please\n1. Open your Terminal and go to the folder you want to download minnow in.\n2. Run the following codes:\n``` shell\ngit clone --single-branch --branch minnow-velocity https://github.com/COMBINE-lab/minnow.git\ncd minnow\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n**NOTICE: In the following steps, we assume that your working directory is in the `minnow/build` folder.**\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3 -- Prepare a read count matrix",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "Here we show how to use [splatter package](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-017-1305-0) in R to simulate the read count matrix, you can [download this package from Bioconductor](https://www.bioconductor.org/packages/release/bioc/html/splatter.html).\n\n1. create 100 genes with 150 cells data\nSplatter is a package for the simulation of single-cell RNA sequencing count data, following codes are ran in R.\n\n```r\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"splatter\")\n\nlibrary(splatter)\n\nout_dir <- \"data/test_splatter_data\"\nnum_genes <- 100\nnum_cells <- 150\nsim <- splatSimulate( \n\tnGenes=num_genes, \n\tbatchCells=num_cells, \n\tverbose = FALSE\n)\n\ndir.create(out_dir, showWarnings=FALSE)\nwrite.table(colnames(sim), file= file.path(out_dir, \"quants_mat_cols.txt\"), quote=FALSE, col.names=FALSE, row.names=FALSE)\nwrite.table(counts(sim), file= file.path(out_dir, \"quants_mat.csv\"), quote=FALSE, col.names=FALSE, row.names=FALSE, sep=\",\")  \n\n```\n\n2. Specify gene names for simulated data.\nAs we want to simulate data with real gene names, while splatter only returns meaningless gene names (for instance, gene1, gene2, etc), we need to randomly select gene names from our reference files such that the selected genes have at least one isoform with length longer than read length. Fortunately, if you have run `minnow estimate`, you will have a fixed reference file `ref_k101_fixed.fa` which contains only transcripts that meet this criteria.\n\n```\ncut -f 2 data/gencode.vM25.annotation.tx2gene.tsv | sort | uniq | shuf -n 100 - > data/test_splatter_data/quants_mat_rows.txt\n```\n\nIf you are using Mac OS and `shuf` is not found, please download it from [Homebrew](https://brew.sh) by `brew install coreutils` or use a Linux machine.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9706166355320582,
      "result": {
        "type": "Text_excerpt",
        "value": "Current development is awaiting a release use `minnow-velocity` for using the recent version of minnow \n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/data/minnow_main_figure.001.jpeg"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "minnow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "COMBINE-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3855796,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 83693,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 34665,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7990,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6326,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1140,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2020-05-15T13:38:27Z",
        "date_published": "2020-06-01T14:49:05Z",
        "description": "Much cleaned up version enabling two paco indexing inbuild.",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.6",
        "name": "beta_velocity_1.0",
        "release_id": 27098862,
        "tag": "beta_1.6",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/27098862",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/27098862",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-08-15T15:40:10Z",
        "date_published": "2019-08-16T02:01:18Z",
        "description": "Adding the `-fPIC` flag to fix the bioconda compilation ",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.5",
        "name": "Solving the bioconda compilation problem",
        "release_id": 19327796,
        "tag": "beta_1.5",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/19327796",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/19327796",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-08-14T16:28:16Z",
        "date_published": "2019-08-14T16:37:10Z",
        "description": "This release contains latest updates including \r\n\r\n1. Resolving the bug for dropping some genes due to sampling of PCR tree.\r\n2. Adding the capability of setting `--CBLength` and `--UMILength`.",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.4",
        "name": "Adding the CB Length, UMI Length parameters",
        "release_id": 19292280,
        "tag": "beta_1.4",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/19292280",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/19292280",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-03-13T02:55:41Z",
        "date_published": "2019-03-13T03:18:47Z",
        "description": "- resolved optional flag for `--dupCount`\r\n- added relative path to the 10X umi counts ",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.3",
        "name": "resolving bugs ",
        "release_id": 16076720,
        "tag": "beta_1.3",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/16076720",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/16076720",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-02-08T02:42:28Z",
        "date_published": "2019-02-08T15:47:06Z",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.2",
        "name": "Conda based release ",
        "release_id": 15451111,
        "tag": "beta_1.2",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15451111",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15451111",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-02-07T19:36:05Z",
        "date_published": "2019-02-07T19:53:15Z",
        "description": "Solved mac os x bug for conda installation ",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta_1.1",
        "release_id": 15433115,
        "tag": "beta_1.1",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta_1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15433115",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15433115",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta_1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hiraksarkar",
          "type": "User"
        },
        "date_created": "2019-02-05T23:11:50Z",
        "date_published": "2019-02-05T23:34:32Z",
        "description": "This release contains. For detailed instructions please check README.md and [minnow tutorial](https://combine-lab.github.io/alevin-tutorial/2019/running-minnow/) \r\n \r\n`splatter-mode`\r\n`normal-mode`\r\n`alevin-mode`",
        "html_url": "https://github.com/COMBINE-lab/minnow/releases/tag/beta",
        "name": "Minnow first release ",
        "release_id": 15384146,
        "tag": "beta",
        "tarball_url": "https://api.github.com/repos/COMBINE-lab/minnow/tarball/beta",
        "type": "Release",
        "url": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15384146",
        "value": "https://api.github.com/repos/COMBINE-lab/minnow/releases/15384146",
        "zipball_url": "https://api.github.com/repos/COMBINE-lab/minnow/zipball/beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
        "type": "Text_excerpt",
        "value": "As Minnow need the BFH file dumpped from Alevin to make its probability files, we need to run alevin before simulation with `--dumpBfh` option specified.\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 0.1 -- build salmon index",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "Download the reference files from [GENCODE](https://www.gencodegenes.org), and build Salmon index.\n```shell\nmkdir data\n\nwget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.pc_transcripts.fa.gz\ngunzip data/gencode.vM25.pc_transcripts.fa.gz\n\nwget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz\ngunzip data/gencode.vM25.annotation.gtf.gz\n\nwget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz\ngunzip data/GRCm38.primary_assembly.genome.fa.gz\n\ngrep \">\" GRCm38.primary_assembly.genome.fa | cut -d \">\" -f 2 | cut -d \" \" -f 1 > GRCm38.primary_assembly.genome.chrnames.txt\n\ncd ..\n\nsalmon index \\\n-t gencode.vM25.pc_transcripts.fa \\\n-i gencode.vM25.annotation.sidx --gencode -p 128 \\\n-d GRCm38.primary_assembly.genome.chrnames.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 0.2 -- Run Alevin on a mouse dataset",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "1. Get data set from [Hermann et al., 2018](https://www.sciencedirect.com/science/article/pii/S2211124718316024?via%3Dihub). Here we use [bamtofastq](https://github.com/10XGenomics/bamtofastq) from 10X Genomics, please load before you run the code.\n\n```shell\ncd data\nwget https://sra-pub-src-1.s3.amazonaws.com/SRR6459157/AdultMouse_Rep3_possorted_genome_bam.bam.1\n\nmv AdultMouse_Rep3_possorted_genome_bam.bam.1 AdultMouse_Rep3_possorted_genome_bam.bam\n\nbamtofastq --reads-per-fastq=500000000 AdultMouse_Rep3_possorted_genome_bam.bam FASTQtmp\n\nmv FASTQtmp/Ad-Ms-Total-Sorted_20k_count_MissingLibrary_1_HK2GNBBXX/bamtofastq_S1_L006_I1_001.fastq.gz AdultMouseRep3_S1_L001_I1_001.fastq.gz\n\nmv FASTQtmp/Ad-Ms-Total-Sorted_20k_count_MissingLibrary_1_HK2GNBBXX/bamtofastq_S1_L006_R1_001.fastq.gz AdultMouseRep3_S1_L001_R1_001.fastq.gz\n\nmv FASTQtmp/Ad-Ms-Total-Sorted_20k_count_MissingLibrary_1_HK2GNBBXX/bamtofastq_S1_L006_R2_001.fastq.gz AdultMouseRep3_S1_L001_R2_001.fastq.gz\ncd ..\n```\n\n2. Run Alevin to quantify the gene abundances based on the index generated above.\n\n```shell\nawk -F \"\\t\" '$3 == \"transcript\" { print $9 }' data/gencode.vM25.annotation.gtf | tr -d \";\\\"\" | awk '{print $4\"\\t\"$2}' > data/gencode.vM25.annotation.tx2gene.tsv\n\nsalmon alevin -l ISR -i gencode.vM25.annotation.sidx \\\n-1 data/AdultMouseRep3_S1_L001_R1_001.fastq.gz \\\n-2 data/AdultMouseRep3_S1_L001_R2_001.fastq.gz \\\n-o alevin_out -p 36 \\\n--tgMap data/gencode.vM25.annotation.tx2gene.tsv \\\n--chromium \\\n--dumpFeatures --expectCells 1850 \\\n--dumpBfh\n```\n\nBy specifying `--dumpBfh`, alevin will dump the BFH file in its result, which will be used in the following steps.\n\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1 -- `minnow index`",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "The indexing phase of minnow is mostly concerned with creating de-Bruijn graph for the transcriptome, additionally to run minnow we need a transcript to gene mapping which can be obtained from gtf file. At the end, minnow index command will create a direcory with updated fasta file that has the following features:\n- Any sequence in the fasta file with smaller length than the read length will be removed.\n- PolyA tails will be clipped.\n- `N`s will be replaced by random `A/T/G/C`.\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1 De-Bruijn graph construction using `minnow index`",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "Create the de-Buijn graph on your **transcriptome file**  using the following command, note that **do not** pass your genome file into `minnow index`.\n\n``` shell\nsrc/minnow index -r data/gencode.vM25.pc_transcripts.fa -k 101 -f 20 --tmpdir tmp -p 10 -o minnow_index\n```\n\nThere will be a `ref_k101_fixed.fa` in the `minnow index` folder, this fasta file is the updated fasta file we talked above. \n\n\nFollowings are the options,\n\n```\nSYNOPSIS\n        minnow index -r <ref_file>... -o <output_dir> [-f <filt_size>] [--tmpdir <twopaco_tmp_dir>] [-k <kmer_length>] [-p <threads>]\n\nOPTIONS\n        -r, --ref <ref_file>\n                    path to the reference transcriptome fasta file\n\n        -o, --output <output_dir>\n                    directory where index is written\n\n        -f, --filt-size <filt_size>\n                    filter size to pass to TwoPaCo when building the reference dBG\n\n        --tmpdir <twopaco_tmp_dir>\n                    temporary work directory to pass to TwoPaCo when building the reference dBG\n\n        -k, --klen <kmer_length>\n                    length of the k-mer with which the dBG was built (default = 101)\n\n        -p, --threads <threads>\n                    total number of threads to use for building MPHF (default = 16)\n```\n\nWhile creating the index, `-k` option should be treated as `read length` for rest of the simulation.\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2  Clean the transcriptome file header (optional)",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "If you just want to see the transcript name in your fasta file, please run the following option to clean the header in this file.\n```shell\nsed -e '/^>/ s/|.*//' data/gencode.vM25.pc_transcripts.fa > \\\ngencode.vM25.pc_transcripts_cleanHeader.fa\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2 -- `minnow estimate`",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "You can find the `bfh.txt` file in the `alevin_out/alevin` folder, this file is what we need for `minnow estimate` to get geneProb and cellProb files, which specify the multimapping probability.\n\nTo run minnow estimate, please run \n\n```shell\nsrc/minnow estimate -o minnow_estimate -r data/gencode.vM25.pc_transcripts.fa --g2t data/gencode.vM25.annotation.tx2gene.tsv --bfh alevin_out/alevin/bfh.txt\n```\nThe `countProb.txt` file will be used in the following steps.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 4 -- `minnow simulate`",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "Now we can start our simulation process. There are two mode in minnow, here we give the example of ``--splatter-mode`.\n\nWe can run minnow simulate in `--splatter-mode` by running the following codes:\n\n```shell\nsrc/minnow simulate --splatter-mode \\\n--g2t  data/gencode.vM25.annotation.tx2gene.tsv \\\n--inputdir data/test_splatter_data \\\n--PCR 4 \\\n-r minnow_index/ref_k101_fixed.fa \\\n-e 0.01 \\\n-p 16 \\\n-o minnow_simulate \\\n--dbg \\\n--gfa minnow_index/dbg.gfa \\\n-w data/737K-august-2016.txt \\\n--countProb minnow_estimate/countProb.txt \\\n--custom \\\n--gencode \n```\n\nMinnow generate two `fastq` files as the simulated read files, which can be analyzed by Alevin directly!\n\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "(Optional) Step 5 -- Run Alevin on minnow simulated data",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on."
        ],
        "type": "Text_excerpt",
        "value": "we will use alevin to re-estimate the read count matrix, all required files have already been downloaded in the `data` folder.\n\n```\nsalmon alevin -l ISR -i gencode.vM25.annotation.sidx \\\n-1 minnow_simulate/hg_100_S1_L001_R1_001.fastq.gz \\\n-2 minnow_simulate/hg_100_S1_L001_R2_001.fastq.gz \\\n-o minnow_simulate/alevin_out -p 16 \\\n--tgMap data/gencode.vM25.annotation.tx2gene.tsv \\\n--chromium \\\n--dumpFeatures --expectCells 100 \\\n```\n\nNow we are done with the process!\n\nThe truth read count matrix is in the `minnow_simulate/alevin` folder, and the re-estimated read count matrix is in the `minnow_simulate/alevin_out/alevin` folder, check it now!\n\n--------------------------\n\n<div id=\"TLDR\"></div>\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Making consistent transcript to gene name and compatible De-Bruijn graphs",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nwget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.chr_patch_hapl_scaff.annotation.gtf.gz\n\nwget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz\n```"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "extracting the t2g mapping",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR",
          "Making consistent transcript to gene name and compatible De-Bruijn graphs"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nawk -F \"\\t\" '$3 == \"transcript\" { print $9 }' <( zcat gencode.vM25.chr_patch_hapl_scaff.annotation.gtf.gz ) | tr -d \";\\\"\" | awk '{print $4\"\\t\"$2}' > tx2gene.tsv\n```"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "making right de-Bruijn graph",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR",
          "Making consistent transcript to gene name and compatible De-Bruijn graphs"
        ],
        "type": "Text_excerpt",
        "value": "```\nsrc/minnow index -r ../mouse/GRCm38.p6/gencode.vM25.transcripts.fa.gz -k 101 -f 20 --tmpdir tmp -p 10 -o minnow_ind\n```\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run minnow (assuming inside build)",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsrc/minnow simulate --splatter-mode \\\n--g2t tx2gene.tsv \\\n--inputdir splatter_out \\\n--PCR 6 \\\n-r minnow_ind/ref_k101_fixed.fa \\\n-e 0.01 -p 10 -o minnow_splatter_out \\\n--dbg --gfa minnow_ind/dbg.gfa \\\n-w ../data/737K-august-2016.txt --countProb ../data/hg/countProb_pbmc_4k.txt --custom \n```\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick validation",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "To check the edit distance distribution and the distribution of `distance from end` please run the following\n```\nsrc/validate validate -f <( gunzip -c hg_100_S1_L001_R2_001.fastq.gz ) -t minnow_ind/ref_k101_fixed.fa -o splatter_out/edit.dist -m 10\n```\n`-m` option is for edit distance, if you use a PCR cycle of 6, it's unlikely to see a sequence which is more than 6 edit distance apart, if you use a higher\nPCR cycle then use higher values to find the edit-distance distribution with arbitarary high edit distances, \n\nThe edit distance distribution will be followd by a distribution of the `distance from end`. A snapshot of the out put from the above command is as follows,\n```\n\u279c  build git:(minnow-velocity) \u2717 head -20 splatter_out/edit.dist\n0       606398\n1       304145\n2       75481\n3       12264\n4       1537\n5       157\n6       18\n--\n100     6522\n101     6490\n102     6637\n103     6604\n104     6161\n105     6131\n106     5891\n107     5887\n108     5213\n109     5448\n110     5405\n111     5295\n...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Things to be added",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "1. [x] Doublets\n2. [ ] Empty-drops\n3. [ ] Retained intron\n4. [x] Clusters \n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:43:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting the right branch of minnow",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone --single-branch --branch minnow-velocity https://github.com/COMBINE-lab/minnow.git\ncd minnow\nmkdir build\ncd build\ncmake ..\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generating the splatter matrix (I followed your example just making a realistic gene number)",
        "parent_header": [
          "Step 0 -- Run Alevin for a dataset of the orgamism you will work on.",
          "&#9889; TLDR"
        ],
        "type": "Text_excerpt",
        "value": "```R\nBiocManager::install(\"splatter\")\nlibrary(splatter)\nlibrary(scater)\nset.seed(1)\nnum_genes<- 1000\nnum_cells <- 1000\nsim <- splatSimulate( \n  nGenes=num_genes, \n  batchCells=num_cells, \n  verbose = FALSE\n)\nout_dir<-\"splatter_out\"\nwrite.table(rownames(sim), file= file.path(out_dir, \"quants_mat_rows.txt\"), quote=FALSE, col.names=FALSE, row.names=FALSE)\nwrite.table(colnames(sim), file= file.path(out_dir, \"quants_mat_cols.txt\"), quote=FALSE, col.names=FALSE, row.names=FALSE)\nwrite.table(counts(sim), file= file.path(out_dir, \"quants_mat.csv\"), quote=FALSE, col.names=FALSE, row.names=FALSE, sep=\",\")\n```\n\nAssigning _unique_ gene names  (same number of _unique_ gene names as your rows in the count matrix generated in splatter)\n```\ncut -f 2 ../mouse/GRCm38.p6/tx2gene.tsv | sort | uniq > ../mouse/GRCm38.p6/gene.list\nshuf -n 1000 ../mouse/GRCm38.p6/gene.list > splatter_out/quants_mat_rows.txt\n```\n\nNow you can run minnow with the files generated above \n"
      },
      "source": "https://raw.githubusercontent.com/COMBINE-lab/minnow/minnow-velocity/README.md",
      "technique": "header_analysis"
    }
  ]
}