{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "USAGE"
        ],
        "type": "Text_excerpt",
        "value": "The methods used for encoding the reads names, model frequency counters, and to do the reads parsing, are the ones proposed by James Bonefield in FQZComp, with some modifications. The range coder is derived from Eugene Shelwien.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/guilledufort/EnanoFASTQ"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-30T20:31:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-05T19:08:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A FASTQ lossless compression algorithm especially designed for nanopore sequencing FASTQ files."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "ENANO FASTQ"
        ],
        "type": "Text_excerpt",
        "value": "ENANO is a FASTQ lossless compression algorithm especially designed for nanopore sequencing FASTQ files. We tested ENANO and current state-of-the-art compressors on several publicly available nanopore datasets. The results show that our algorithm consistently achieves the best compression performance on every nanopore dataset, while being computationally efficient in terms of speed and memory requirements when compared to existing alternatives.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download repository",
        "parent_header": [
          "ENANO FASTQ",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/guilledufort/EnanoFASTQ.git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading the datasets",
        "parent_header": [
          "USAGE",
          "Datasets information"
        ],
        "type": "Text_excerpt",
        "value": "To download a dataset you have to run the *download_script.sh* of the specific dataset.\nFor example, to download *sor* run:\n```bash\ncd EnanoFASTQ\ndataset/sor/download_script.sh\n```\n\nThe scripts use the command *wget* to perform the download. \nTo install *wget* on macOS run:\n ```bash\nbrew install wget\n```\nTo install *wget* on Ubuntu or CentOS run:\n ```bash\nsudo apt-get install wget\n```\n\nSome datasets require the SRA toolkit (2.9.6-1 release) to be downloaded. To install the SRA toolkit you can follow the instructions here https://ncbi.github.io/sra-tools/install_config.html, and place the toolkit's root-folder under the EnanoFASTQ directory, or you can run one of the scripts we provide. There is a different script for each OS, so you have to choose the one corresponding to your OS.\nFor example, to install the SRA toolkit on macOS you can run:\n ```bash\ncd EnanoFASTQ\n./install_SRA_mac.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/guilledufort/EnanoFASTQ/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/guilledufort/EnanoFASTQ/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "guilledufort/EnanoFASTQ"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ENANO FASTQ"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/install_SRA_centos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/install_SRA_mac.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/install_SRA_ubuntu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/joi/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/bra/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/sor/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/lun/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/npd/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/vir/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/hs1/download_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/datasets/hs2/download_script.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install with Conda",
        "parent_header": [
          "ENANO FASTQ"
        ],
        "type": "Text_excerpt",
        "value": "To install directly from source, follow the instructions in the next section.\n\nEnano is available on conda via the bioconda channel. See [this](https://bioconda.github.io/user/install.html) page for installation instructions for conda. Once conda is installed, do the following to install enano.\n```bash\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda install enano\n```\nNote that if enano is installed this way, it should be invoked with the command `enano` rather than `./enano`. The bioconda [help page](https://bioconda.github.io/user/install.html) shows the commands if you wish to install enano in an environment.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "ENANO FASTQ",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "The following instructions will create the enano executable in the directory *enano*.\nTo compile enano you need to have the g++ compiler and the OpenMP library for multithreading. \n\nOn Linux (Ubuntu or CentOS) g++ usually comes installed by default, but if not run the following:\n```bash\nsudo apt update\nsudo apt-get install g++\n```\n\nOn macOS, install GCC compiler since Clang has issues with OpenMP library:\n- Install HomeBrew (https://brew.sh/)\n- Install GCC (this step will be faster if Xcode command line tools are already installed using ```xcode-select --install```):\n```bash\nbrew update\nbrew install gcc@9\n```\n\nThe g++ installer also installs the OpenMP library, so no further steps are needed.\nTo check if the g++ compiler is properly installed in your system run:\n\nOn Linux\n```bash\ng++ --version\n```\nOn MacOS:\n```bash\ng++-9 --version\n```\nThe output should be the description of the installed software.\n\nTo compile enano run:\n```bash\ncd EnanoFASTQ/enano\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/guilledufort/EnanoFASTQ/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, data-compression, information-theory, nanopore-fastq-files"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Guillermo Dufort y \u00c1lvarez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EnanoFASTQ"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "guilledufort"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 80614,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 39046,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 2700,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 311,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilledufort",
          "type": "User"
        },
        "date_created": "2020-04-17T18:50:32Z",
        "date_published": "2020-04-17T18:53:45Z",
        "description": "This is a first release for Enano FASTQ file compressor.",
        "html_url": "https://github.com/guilledufort/EnanoFASTQ/releases/tag/v1.0",
        "name": "First release",
        "release_id": 25624557,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/guilledufort/EnanoFASTQ/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/guilledufort/EnanoFASTQ/releases/25624557",
        "value": "https://api.github.com/repos/guilledufort/EnanoFASTQ/releases/25624557",
        "zipball_url": "https://api.github.com/repos/guilledufort/EnanoFASTQ/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "ENANO FASTQ",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "0. g++ ( >= 4.8.1)\n1. OpenMP library\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:17:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "USAGE",
        "type": "Text_excerpt",
        "value": "Run the enano executable ```/PATH/TO/enano``` (or just ```enano``` if installed with conda) with the options below:\n```console \nTo compress:\n  enano [options] [input_file [output_file]]\n\n    -c             To use MAX COMPRESION MODE. Default is FAST MODE.\n\n    -k <length>    Basecall sequence context length. Default is 7 (max 13).\n\n    -l <lenght>    Length of the DNA neighborhood sequence used in the quality score context. Default is 6.\n\n    -t <num>       Maximum number of threads allowed to use by the compressor. Default is 8.\n\nTo decompress:\n   enano -d [options] foo.enano foo.fastq\n    -t <num>       Maximum number of threads allowed to use by the decompressor. Default is 8.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Datasets information",
        "parent_header": [
          "USAGE"
        ],
        "type": "Text_excerpt",
        "value": "To test our compressor we ran experiments on the following datasets. The full information of the datasets is on our publication.\n\n| Dataset | Num. of files | size (GB) | Description | Link |\n|------|------|------|------|------|\n *sor\\** | 4 | 124.071 | Sorghum bicolor Tx430 | https://www.nature.com/articles/s41467-018-07271-1#data-availability |\n *bra\\** | 18 | 43.014 | Doubled haploid canola (Brassica napus L.) | https://www.nature.com/articles/s41598-019-45131-0#data-availability |\n *lun* | 13 | 15.239 | Human lung bacterial  metagenomic | https://www.nature.com/articles/s41587-019-0156-5#data-availability |\n *joi* | 9 | 4.672 | Infected orthopaedic devices metagenomic | https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-5094-y |\n *vir\\** | 10 | 4.375 | Direct RNA sequencing (HSV-1) | https://www.nature.com/articles/s41467-019-08734-9#data-availability |\n *hs1* | 1 | 249.791 | Human GM12878 Utah/Ceph cell line | https://github.com/nanopore-wgs-consortium/NA12878 |\n *hs2^* | 50 | 193.920 | Human GM12878 Utah/Ceph cell line | https://www.nature.com/articles/s41467-019-09637-5#data-availability|\n *npd\\** | 336 | 113.440 | Multiple organisms | https://github.com/guidufort/DualFqz |\n\n\\*Datasets that require the SRA toolkit to be downloaded. \n\n^We only used the first 50 files of the dataset.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "USAGE"
        ],
        "type": "Text_excerpt",
        "value": "If installed using conda, use the command `enano` instead of `enano/enano`.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compress using ENANO",
        "parent_header": [
          "USAGE",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "To run the compressor with 4 threads on the example file:\n```bash\ncd EnanoFASTQ\nenano/enano -k 8 -l 5 -t 4 example/SAMPLE.fastq example/SAMPLE.enano\n```"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Decompress using ENANO",
        "parent_header": [
          "USAGE",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "To decompress with 8 threads the example compressed file:\n```bash\ncd EnanoFASTQ\nenano/enano -d -t 8 example/SAMPLE.enano example/SAMPLE_dec.fastq\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Check if decoding is successful",
        "parent_header": [
          "USAGE",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The output has to be empty.\n```bash\ncmp example/SAMPLE.fastq example/SAMPLE_dec.fastq\n```"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EnanoFASTQ/master/README.md",
      "technique": "header_analysis"
    }
  ]
}