{
  "application_domain": [
    {
      "confidence": 46.62,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Trieu, Hai-Long and Tran, Thy Thy and Duong, Khoa N A and Nguyen, Anh and Miwa, Makoto and Ananiadou, Sophia",
        "doi": "10.1093/bioinformatics/btaa540",
        "format": "bibtex",
        "title": "{DeepEventMine: End-to-end Neural Nested Event Extraction from Biomedical Texts}",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093/bioinformatics/btaa540",
        "value": "@article{10.1093/bioinformatics/btaa540,\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/doi/10.1093/bioinformatics/btaa540/33399046/btaa540.pdf},\n    note = {btaa540},\n    url = {https://doi.org/10.1093/bioinformatics/btaa540},\n    doi = {10.1093/bioinformatics/btaa540},\n    issn = {1367-4803},\n    month = {06},\n    year = {2020},\n    journal = {Bioinformatics},\n    title = {{DeepEventMine: End-to-end Neural Nested Event Extraction from Biomedical Texts}},\n    author = {Trieu, Hai-Long and Tran, Thy Thy and Duong, Khoa N A and Nguyen, Anh and Miwa, Makoto and Ananiadou, Sophia},\n}"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aistairc/DeepEventMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-26T09:16:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T07:52:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepEventMine: End-to-end Neural Nested Event Extraction from Biomedical Texts"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8605176825109658,
      "result": {
        "original_header": "1. DeepEventMine",
        "type": "Text_excerpt",
        "value": "A deep leanring model to predict named entities, triggers, and nested events from biomedical texts. \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9513868883411549,
      "result": {
        "original_header": "1.1. Features",
        "type": "Text_excerpt",
        "value": "- Based on [pre-trained BERT](https://github.com/allenai/scibert)\n- Predict nested entities and nested events\n- Provide our trained models on the seven biomedical tasks\n- Reproduce the results reported in our [Bioinformatics](https://doi.org/10.1093/bioinformatics/btaa540) paper\n- Predict for new data given raw text input or PubMed ID\n- Visualize the predicted entities and events on the [brat](http://brat.nlplab.org)\n \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9364282179225102,
      "result": {
        "original_header": "4.1. Input: a single PMID or PMCID",
        "type": "Text_excerpt",
        "value": "## 4.2. Input: a list of PMIDs \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare a list of PMID and PMCID in the path\n```bash\ndata/my-pubmed/pmid.txt\n```\n```bash\nsh pubmed.sh e2e pmids my-pubmed cg 0\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your raw text files in the path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n```bash\nsh pubmed.sh e2e rawtext my-pubmed cg 0\n```\n \n# 5. Predict for new data (step-by-step) \n- Input: your own raw text or PubMed ID\n- Output: predicted entities and events in brat format \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your own raw text in the following path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n \n1. PubMed ID list\n- In order to get full text given PMC ID, the text should be available in ePub (for our current version).\n- Prepare your list of PubMed ID and PMC ID in the path\n```bash\ndata/my-pubmed/pmid.txt\n```\n \n## 6.1. Prepare data \n- The data to visualize is located in\n```bash\nbrat/brat-v1.3_Crunchy_Frog/data/my-pubmed-brat\nbrat/brat-v1.3_Crunchy_Frog/data/[task]-brat\n```\n \n# 7. Acknowledgements\nThis work is based on results obtained from a project commissioned by the New Energy and Industrial Technology Development Organization (NEDO).\nThis work is also supported by PRISM (Public/Private R&D Investment Strategic Expansion PrograM). \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aistairc/DeepEventMine/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aistairc/DeepEventMine/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aistairc/DeepEventMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1. DeepEventMine"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/preprocess.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/pubmed.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/img/PMID-1370299.png"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2.2. BERT",
        "parent_header": [
          "2. Preparation"
        ],
        "type": "Text_excerpt",
        "value": "- Download SciBERT BERT model from PyTorch AllenNLP\n\n```bash\nsh download.sh bert\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.3. DeepEventMine",
        "parent_header": [
          "2. Preparation"
        ],
        "type": "Text_excerpt",
        "value": "- Download  pre-trained DeepEventMine model on a given task\n- [task] = cg (or pc, ge11, epi, etc)\n\n```bash\nsh download.sh deepeventmine [task]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2.4 Brat",
        "parent_header": [
          "2. Preparation"
        ],
        "type": "Text_excerpt",
        "value": "- To visualize the output using the [brat](http://brat.nlplab.org)\n- Download [brat v1.3](http://brat.nlplab.org)\n\n```bash\nsh download.sh brat\n```\n\n- Install brat based on the [brat instructions](http://brat.nlplab.org/installation.html)\n```bash\ncd brat/brat-v1.3_Crunchy_Frog/\n./install.sh -u\npython2 standalone.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3.1. Prepare data",
        "parent_header": [
          "3. Predict (BioNLP tasks)"
        ],
        "type": "Text_excerpt",
        "value": "1. Download corpora\n- To download the original data sets from BioNLP shared tasks.\n- [task] = cg, pc, ge11, etc\n\n```bash\nsh download.sh bionlp [task]\n```\n\n2. Preprocess data\n- Tokenize texts and prepare data for prediction\n```bash\nsh preprocess.sh bionlp\n```\n\n3. Generate configs\n- If using GPU: [gpu] = 0, otherwise: [gpu] = -1\n- [task] = cg, pc, etc\n```bash\nsh run.sh config [task] [gpu]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9960733704938076,
      "result": {
        "original_header": "3.2. Predict",
        "type": "Text_excerpt",
        "value": "1. For development and test sets (given gold entities)\n- CG task: [task] = cg\n- PC task: [task] = pc\n- Similarly for: ge11, ge13, epi, id, mlee\n```bash\nsh run.sh predict [task] gold dev\nsh run.sh predict [task] gold test\n```\n- Check the output in the path\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9954527830791773,
      "result": {
        "original_header": "3.3. Evaluate",
        "type": "Text_excerpt",
        "value": "1. Retrieve the original offsets and create zip format\n```bash\nsh run.sh offset [task] gold dev\nsh run.sh offset [task] gold test\n``` \n- Evaluate event prediction for PC and CG tasks on the development sets using the shared task scripts.\n- Evaluation options: s (softboundary), p(partialrecursive)\n```bash\nsh run.sh eval [task] gold dev sp\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9752648338288633,
      "result": {
        "original_header": "4.1. Input: a single PMID or PMCID",
        "type": "Text_excerpt",
        "value": "- Abstract\n```bash\nsh pubmed.sh e2e pmid 1370299 cg 0\n``` \n- Full text\n```bash\nsh pubmed.sh e2e pmcid PMC4353630 cg 0\n``` \n<p align=\"center\">\n    <br>\n    <img src=\"https://raw.githubusercontent.com/aistairc/DeepEventMine/master/img/PMID-1370299.png\" width=\"900\"/>\n    <br>\n<p> \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare a list of PMID and PMCID in the path\n```bash\ndata/my-pubmed/pmid.txt\n```\n```bash\nsh pubmed.sh e2e pmids my-pubmed cg 0\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your raw text files in the path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n```bash\nsh pubmed.sh e2e rawtext my-pubmed cg 0\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your own raw text in the following path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n \n- Or, you can automatically get raw text given PubMed ID or PMC ID \n### Get raw text \n1. PubMed ID list\n- In order to get full text given PMC ID, the text should be available in ePub (for our current version).\n- Prepare your list of PubMed ID and PMC ID in the path\n```bash\ndata/my-pubmed/pmid.txt\n```\n \n- Get text from the PubMed ID\n```bash\nsh pubmed.sh pmids my-pubmed\n``` \n2. PubMed ID\n- You can also get text by directly input a PubMed or PMC ID\n```bash\nsh pubmed.sh pmid 1370299\nsh pubmed.sh pmcid PMC4353630\n``` \n### Preprocess\n```bash\nsh pubmed.sh preprocess my-pubmed\n```\n \n1. Generate config\n- Generate config for prediction\n- The data name to predict: my-pubmed\n- The trained model used for predict: cg (or pc, ge11, etc)\n- If you use gpu [gpu]=0, otherwise [gpu]=-1\n```bash\nsh pubmed.sh config my-pubmed cg 0\n```\n2. Predict\n```bash\nsh pubmed.sh predict my-pubmed\n```\n3. Retrieve the original offsets\n```bash\nsh pubmed.sh offset my-pubmed\n```\n \n- Copy the predicted data into the brat folder to visualize\n- For the raw text prediction:\n```bash\nsh pubmed.sh brat my-pubmed cg\n``` \n- Or for the shared task\n```bash\nsh run.sh brat [task] gold dev\nsh run.sh brat [task] gold test\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8696672565313947,
      "result": {
        "original_header": "3.3. Evaluate",
        "type": "Text_excerpt",
        "value": "1. Retrieve the original offsets and create zip format\n```bash\nsh run.sh offset [task] gold dev\nsh run.sh offset [task] gold test\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8378339877546147,
      "result": {
        "original_header": "4.1. Input: a single PMID or PMCID",
        "type": "Text_excerpt",
        "value": "- Abstract\n```bash\nsh pubmed.sh e2e pmid 1370299 cg 0\n``` \n- Full text\n```bash\nsh pubmed.sh e2e pmcid PMC4353630 cg 0\n``` \n- Input: [PMID: 1370299](https://pubmed.ncbi.nlm.nih.gov/1370299/),  [PMCID: PMC4353630](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4353630/) (a single PubMed ID to get raw text)\n- Model to predict: DeepEventMine trained on [cg (Cancer Genetics 2013)](http://2013.bionlp-st.org/tasks/cancer-genetics), (other options: pc, ge11, etc)\n- GPU: 0 (if CPU: -1)\n- Output: in brat format and [brat visualization](http://brat.nlplab.org)\n```bash\nT24\tOrganism 1248 1254\tbovine\nT25\tGene_or_gene_product 1255 1259\tu-PA\nT55\tPositive_regulation 1107 1116\tincreased\nT57\tLocalization 1170 1179\tmigration\nT58\tNegative_regulation 1260 1267\tblocked\n...\n\nT23\tGene_or_gene_product 1184 1188\tu-PA\nT56\tPositive_regulation 1157 1166\tincreases\nE9\tPositive_regulation:T56 Theme:T23\n\nT26\tGene_or_gene_product 1320 1325\tc-src\nT62\tGene_expression 1326 1336\texpression\nE10\tGene_expression:T62 Theme:T26\n\nT61\tPositive_regulation 1310 1319\tincreased\nE24\tPositive_regulation:T61 Theme:E10\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare a list of PMID and PMCID in the path\n```bash\ndata/my-pubmed/pmid.txt\n```\n```bash\nsh pubmed.sh e2e pmids my-pubmed cg 0\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your raw text files in the path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n```bash\nsh pubmed.sh e2e rawtext my-pubmed cg 0\n```\n \n- Given an arbitrary name for your raw text data, for example \"my-pubmed\"\n- Prepare your own raw text in the following path\n```bash\ndata/my-pubmed/text/PMID-*.txt\ndata/my-pubmed/text/PMC-*.txt\n```\n \n1. Generate config\n- Generate config for prediction\n- The data name to predict: my-pubmed\n- The trained model used for predict: cg (or pc, ge11, etc)\n- If you use gpu [gpu]=0, otherwise [gpu]=-1\n```bash\nsh pubmed.sh config my-pubmed cg 0\n```\n2. Predict\n```bash\nsh pubmed.sh predict my-pubmed\n```\n3. Retrieve the original offsets\n```bash\nsh pubmed.sh offset my-pubmed\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aistairc/DeepEventMine/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 National Institute of Advanced Industrial Science and Technology (AIST)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepEventMine"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "aistairc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 562545,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 15486,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2.1. Requirements",
        "parent_header": [
          "2. Preparation"
        ],
        "type": "Text_excerpt",
        "value": "- Python 3.6.5\n- PyTorch (torch==1.1.0 torchvision==0.3.0, cuda92)\n\n```bash\nvirtualenv -p python3 pytorch-env\nsource pytorch-env/bin/activate\nexport CUDA_VISIBLE_DEVICES=0\nCUDA_PATH=/usr/local/cuda pip install torch==1.1.0 torchvision==0.3.0\n```\n\n- Install Python packages\n\n```bash\nsh install.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aistairc/DeepEventMine/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:20:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 95
      },
      "technique": "GitHub_API"
    }
  ]
}