{
  "application_domain": [
    {
      "confidence": 18.14,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/clemgoub/TypeTE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-18T15:30:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-10T23:32:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Genotyping of segregating mobile elements insertions"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9024290005364853,
      "result": {
        "original_header": "TypeTE v1.1",
        "type": "Text_excerpt",
        "value": "***changelog v1.0 --> v1.1***\n- Output vcf:\n   - Cleanup output vcfs from irrelevant info fields in header\n   - Reference genotypes are now printed in the traditionnal (REF/ALT) format, with REF = TE present = 0, and ALT = TE absent (deletion) = 1. \n- Hard code python2.7 in assembly script to match Spades requirements\n- Improve Non-Reference allele reconstruction script at TSD\n- Clean bugs and silence non-threatening error messages\n- Change parameterfile_NoRef.ini to parameterfile_NRef.ini to match regular script naming\n- Create tutorial section (upcoming manuscript) \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9821417748240693,
      "result": {
        "original_header": "Purpose",
        "type": "Text_excerpt",
        "value": "TypeTE is a pipeline dedicated to genotype segregating Mobile Element Insertion (MEI) previously scored with a MEI detection tool such as MELT (Mobile Element Locator Tool, Gardner et al., 2017). TypeTE extracts reads from each detected polymorphic MEI and reconstruct acurately both presence and absence alleles. Eventually, remapping of the reads at the infividual level allow to score the genotype of the MEI using a modified version of Li's et al. genotype likelihood. This method drammatically improves the quality of the genotypes of reported MEI and can be directly used after a MELT run on both non-reference and reference insertions. \nTypeTE is divided in two modules: \"Non-reference\" to genotype insertions absent from the reference genome and \"Reference\" to genotype TE copies present in the reference genomes. \nCurrently TypeTE is working only with Alu insertions in the human genome but will be soon available for L1, SVA as well as virtualy any retrotransposon in any organism with a reference genome. \nThis pipeline is developped by Jainy Thomas (University of Utah) and Clement Goubert (Cornell University).\nElaborated with the collaboration of Jeffrey M. Kidd (University of Michigan) \nPlease adress all you questions and comments using the \"issue\" tab of the repository. This allows the community to search and find directly answers to their issues.\nIf help is not comming, you can email your questions at goubert.clement[at]gmail.com\n \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9603845833519856,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "TypeTE outputs a vcf.gz file containing all individual genotypes with genotypes likelihoods. \nThe vcf convention reports genotypes relative to the allele present in the reference genome, thus TypeTE reports Reference insertions as 0/0 (homozygous) or (0/1), with 1/1 genotypes being homozygous for the absence of TE. This pattern is the opposite for the Non-Reference insertions. \n \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install",
        "parent_header": [
          "TypeTE v1.1",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone from git repository:\n\n```sh\ngit clone --recurse-submodules https://github.com/clemgoub/TypeTE.git\ncd TypeTE\n```\n\n2. Complete the fields associated to the path of each dependent program in the files ```\"parameterfile_Ref.init\"``` and ```\"parameterfile_NRef.init\"```\n\n3. And that's it!\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/clemgoub/TypeTE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/clemgoub/TypeTE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "clemgoub/TypeTE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TypeTE v1.1"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/run_TypeTE_NRef.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/run_TypeTE_Ref.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/input_from_melt_Del.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/de_novo_create_input_v3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/deletion_create_input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/identify_mei_from_RM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/Extract_TE_sequences.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/input_from_melt.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/reGenotypeTE/master/Artboard%201.png"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install",
        "parent_header": [
          "TypeTE v1.1",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Clone from git repository:\n\n```sh\ngit clone --recurse-submodules https://github.com/clemgoub/TypeTE.git\ncd TypeTE\n```\n\n2. Complete the fields associated to the path of each dependent program in the files ```\"parameterfile_Ref.init\"``` and ```\"parameterfile_NRef.init\"```\n\n3. And that's it!\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Files preparation",
        "parent_header": [
          "TypeTE v1.1"
        ],
        "type": "Text_excerpt",
        "value": "You will need:\n\n1. __A vcf/vcf.gz file (VCF)__ such as generated by the MELT discovery workflow. Examples are available in the folder \"test_data\". The vcf file must contain on Reference or Non-reference loci according to the module chosen. Loci/individuals must be sampled from the original vcf/vcf.gz using the following flag `--recode-INFO-all` in vcftools so the subsetted vcf will be compatible with TypeTE. If a new vcf is created specially for TypeTE, the following tags must be present in the \"INFO\" field (column) **for non-reference loci only**:\n* MEINFO= with predicted subfamily (Repbase name) and orientation of the TE (ex: MEINFO=AluYa5,.,.,+ | if the subfamily is unknown: MEINFO=AluUndef;.,.,+)\n* TSD= to indicate the predicted TSD (ex: TSD=AATAGAATTAGCAATTTTG | if no TSD detected TSD=null)\n\nexample:\n```\n##fileformat=VCFv4.1\n##<HEADER OF THE VCF FILE>\n#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA07056\tNA11830\tNA12144\n1\t72639020\tALU_umary_ALU_244\tC\t<INS:ME:ALU>\t.\t.\tMEINFO=AluUndef,4,281,-;TSD=AGCAATCTTATTTTC\tGT\t0|1\t0|0\t0|1\n10 69994906 ALU_umary_ALU_8067 G <INS:ME:ALU> . . MEINFO=AluUndef,8,280,+;TSD=AATAGAATTAGCAATTTTG GT 0|0 0|1 0|1\n```\n> The \"TSD=\" and \"MEINFO=\" might be in different orders in the column \"INFO\" (8) of the vcf without issue. These fields are not required for the Reference module where these will be extracted from the reference genome\n\n2. __bam files__ for each individual found in the vcf file\n\n3. a two column __tab separated table with the sample name and corresponding bam name (BAMFILE)__:\n\n```\nsample1 sample1-xxx-file.bam\nsample2 sample2-yyy-file.bam\nsample3 sample3-zzz-file.bam\n```\n\n4. __Reference genome (GENOME)__ in fasta format (to date tested with hg19 and hg38). In another reference genome is used, you will need to update the RepeatMasker track corresponding to your reference as well as the repeat you want to genotype.\n\n5. __RepeatMasker Track__ a .bed files reporting each reference MEI insertion masked by RepeatMasker for the reference sequence provided. The family names must match the names of the consensus given in the RM_FASTA field. _(provided by default for Alu on hg19 and hg38)_ \n\n6. __RepeatMasker Consensus (RM_FASTA)__ a .fasta file with the consensus sequences of the repeats analysed _(provided by default for Alu)_ \n\n7. __Edit the file \"parameterfile_NoRef.init\" or \"parameterfile_Ref.init\"__ following the indications within:\n\n```sh\n### MAIN PARAMETERS\n\n# user data\nVCF=\"/workdir/cg629/bin/TypeTE/test_data/test_data_nonref.vcf\" #Path to MELT vcf (.vcf or .vcf.gz) must contain INFO field with TSD and MEI type\nBAMPATH=\"/workdir/cg629/Projects/TypeTE_tutorial/test_data/\" # Path to the bams folder\nBAMFILE=\"/workdir/cg629/bin/TypeTE/test_data/input_table.txt\" # <indiv_name> <bam_name> (2 fields tab separated table)\n\n# genome data\nRM_TRACK=\"/workdir/cg629/bin/TypeTE/Ressources/RepeatMasker_Alu_hg19.bed\" # set by default for hg19\nRM_FASTA=\"/workdir/cg629/bin/TypeTE/Ressources/refinelib\" # set by default to be compatible with the Repeat Masker track included in the package\nGENOME=\"/workdir/cg629/Projects/testTypeTE/hs37d5.fa\" # Path the the reference genome sequence\n\n# output\nOUTDIR=\"/workdir/cg629/Projects/TypeTE_tutorial\" # Path to place the output directory (will be named after PROJECT); OUTDIR must exist\nPROJECT=\"OUTPUTS_NRef_testdata\" # Name of the project (name of the folder)\n\n# multi-threading\nindividual_nb=\"1\" # number of individual per job (try to minimize that number)\nCPU=\"3\" # number of CPU (try to maximize that number) # CPU x individual_nb >= total # of individuals\n\n## non-mendatory parameters\nMAP=\"NO\" #OR NO (experimental)\n\n### DEPENDENCIES PATH\n# /!\\ PERL MUST BE IN PATH /!\\\nPARALLEL=\"/programs/parallel/bin/parallel\" #Path to the GNU Parallel program\nPICARD=\"/programs/picard-tools-2.9.0\" #Path to Picard Tools\nBEDTOOLS=\"/programs/bedtools-2.27.1/bin/bedtools\" #Path to bedtools executable\nSEQTK=\"/programs/seqtk\" #Path to seqtk executable\nBAMUTILS=\"/programs/bamUtil\" #Path to bamUtil\nSPADES=\"/programs/spades-3.5.0/bin\" #Path to spades bin directory (to locate spades.py and dispades.py)\nMINIA=\"/workdir/cg629/bin/minia/build/bin\" #Path to minia bin directory\nCAP3=\"/workdir/cg629/bin/CAP3\" #Path to CAP3 directory\nBLAST=\"/programs/ncbi-blast-2.7.1+/bin\" #Path to blast bin directory\nBWA=\"/programs/bwa-0.5.9/bwa\" #Path to bwa executable\nBGZIP=\"bgzip\" #Path to bgzip executable\nTABIX=\"tabix\" #Path to tabix executable\n```\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999912667936924,
      "result": {
        "original_header": "TypeTE v1.1",
        "type": "Text_excerpt",
        "value": "***changelog v1.0 --> v1.1***\n- Output vcf:\n   - Cleanup output vcfs from irrelevant info fields in header\n   - Reference genotypes are now printed in the traditionnal (REF/ALT) format, with REF = TE present = 0, and ALT = TE absent (deletion) = 1. \n- Hard code python2.7 in assembly script to match Spades requirements\n- Improve Non-Reference allele reconstruction script at TSD\n- Clean bugs and silence non-threatening error messages\n- Change parameterfile_NoRef.ini to parameterfile_NRef.ini to match regular script naming\n- Create tutorial section (upcoming manuscript) \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.976311438749657,
      "result": {
        "original_header": "Reference-insertions",
        "type": "Text_excerpt",
        "value": "1. Copy the parameterfile_Ref.init present in <yourpath>/TypeTE/test_data to the main folder\n  \n```sh\ncp test_data/parameterfile_Ref.init .\n``` \n3. Run TypeTE\n```sh\nnohup ./run_TypeTE_Ref.sh &> TypeTE_TESTRUN_ref.log &\n```\n4. Expected results\n \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8285945388277293,
      "result": {
        "original_header": "Reference-insertions",
        "type": "Text_excerpt",
        "value": "3. Run TypeTE\n```sh\nnohup ./run_TypeTE_Ref.sh &> TypeTE_TESTRUN_ref.log &\n```\n4. Expected results\n \n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/clemgoub/TypeTE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "alu, bioinformatics, genotype-likelihoods, genotyping, short-reads, transposable-elements, transposons, vcf"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TypeTE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "clemgoub"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 141185,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 100999,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 49226,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clemgoub",
          "type": "User"
        },
        "date_created": "2020-03-27T13:45:33Z",
        "date_published": "2021-07-12T20:01:25Z",
        "description": "This release is a freeze of the master branch of TypeTE before major update.",
        "html_url": "https://github.com/clemgoub/TypeTE/releases/tag/legacy",
        "name": "TypeTE 1.0 (Legacy)",
        "release_id": 46079914,
        "tag": "legacy",
        "tarball_url": "https://api.github.com/repos/clemgoub/TypeTE/tarball/legacy",
        "type": "Release",
        "url": "https://api.github.com/repos/clemgoub/TypeTE/releases/46079914",
        "value": "https://api.github.com/repos/clemgoub/TypeTE/releases/46079914",
        "zipball_url": "https://api.github.com/repos/clemgoub/TypeTE/zipball/legacy"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "TypeTE v1.1",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "> A docker container is coming for TypeTE! Stay tuned to get the latest version as soon as it comes out!\n\nTypeTE rely on popular softwares often already in the toolbox of computational biologists! The following programs need to be installed and their path reported in the file ```\"parameterfile_[No]Ref.init\"```\nPerl executable must be in the user path\n\n* PERL https://www.perl.org/\n    * BioPerl https://bioperl.org/INSTALL.html\n* PYTHON 2.7 https://www.python.org/download/releases/2.7/ (Not compatible with Python 3)\n    * pysam https://github.com/pysam-developers/pysam\n* PARALLEL https://www.gnu.org/software/parallel/\n* PICARD https://broadinstitute.github.io/picard/\n* BEDTOOLS http://bedtools.readthedocs.io/en/latest/\n* SEQTK https://github.com/lh3/seqtk\n* BAMUTILS https://genome.sph.umich.edu/wiki/BamUtil\n* SPADES http://cab.spbu.ru/software/spades/\n* MINIA http://minia.genouest.org/\n* CAP3 http://seq.cs.iastate.edu/cap3.html\n* BLAST ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\n* BWA http://bio-bwa.sourceforge.net/bwa.shtml\n* BGZIP http://www.htslib.org/doc/bgzip.html\n* TABIX http://www.htslib.org/doc/tabix.html\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running TypeTE",
        "parent_header": [
          "TypeTE v1.1"
        ],
        "type": "Text_excerpt",
        "value": "1. Fill the appropriated ```parameterfile_[N]Ref.init``` according to your local paths and files\n2. Run the following command in the TypeTE folder:\n\n```sh\nnohup ./run_TypeTE_[N]Ref.sh &> TypeTE.log &\n```\n\nUse ```./run_TypeTE_Ref.sh``` for reference insertions and ```./run_TypeTE_NRef.sh``` for non-reference insertions.\n\n- - - -\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Non-reference insertions",
        "parent_header": [
          "TypeTE v1.1",
          "Test runs"
        ],
        "type": "Text_excerpt",
        "value": "We have prepared a small tutorial/test-run to check if all the components of TypeTE works perfectly.\n\nWe are going to run the pipeline on 2 loci of 3 individuals from the 1000 Genome Project.\n\n1. Download the bam and bam.bai files\n\nWithin the TypeTE folder, type:\n```sh\ncd test_data\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA07056/alignment/NA07056.mapped.ILLUMINA.bwa.CEU.low_coverage.20130415.bam\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA07056/alignment/NA07056.mapped.ILLUMINA.bwa.CEU.low_coverage.20130415.bam.bai\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA11830/alignment/NA11830.mapped.ILLUMINA.bwa.CEU.low_coverage.20120522.bam\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA11830/alignment/NA11830.mapped.ILLUMINA.bwa.CEU.low_coverage.20120522.bam.bai\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA12144/alignment/NA12144.mapped.ILLUMINA.bwa.CEU.low_coverage.20130415.bam\nwget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/NA12144/alignment/NA12144.mapped.ILLUMINA.bwa.CEU.low_coverage.20130415.bam.bai\n```\nThe corresponding bam/bam.bai files will be downladed into <yourpath>/TypeTE/test_data\n  \n2. Copy the parameterfile_NoRef.init template present in <yourpath>/TypeTE/test_data to the main folder\n  \n```sh\ncp parameterfile_NRef.init ../\ncd ../\n```\n\n3. Edit the parameterfile_NRef.init according to your dependancies and local path.\n\n4. Run TypeTE\n\n```sh\nnohup ./run_TypeTE_NR.sh &> TypeTE_TESTRUN.log &\n```\n\n5. Expected results\n\nThe genotypes from the original vcf (<>/TypeTE/test_data/test_data_nonref.vcf) are the following\n\n|         | NA07056 | NA11830 |NA12144|\n|---------|---------|---------|---------|\n| 1_72639020 | 0/1 | 0/0 | 0/1 |\n| 10_69994906| 0/0 | 0/1 |0/1|\n\n\n\nThe new genotypes should be \n\n|         | NA07056 | NA11830 |NA12144|\n|---------|---------|---------|---------|\n| 1_72639020 | **1/1** | **0/1** | 0/1 |\n| 10_69994906| 0/0 | **1/1** |0/1|\n\n"
      },
      "source": "https://raw.githubusercontent.com/clemgoub/TypeTE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:22:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ]
}