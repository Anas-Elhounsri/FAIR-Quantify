{
  "application_domain": [
    {
      "confidence": 0.9167477441825778,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Global-Biofoundries-Alliance/SynBioPython"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to the Project\n\nPlease review the following guidelines in order to make the contribution process effective and easy for everyone. \n\n\n## Governance\n\nSynBioPython will be governed using a three-tiered system of contributors:\n1. Five Editors, who have to be member of the GBA, will oversee the direction of the development of SynBiopython. The Editors will be elected by the current Editors and members of the Core Team (see point 2) and they will have to self-nominate. Editors serve 2 year-long terms.\n2. The Core Team members, who are approved by the Editors. Interested contributors who like to be in the Core Team will submit an Expression of Interest to the Editors. The Core Team stays in regular contact (email group/calls) to discuss and actively contribute to the development of SynBioPython.\n3. Ad-hoc contributors who contribute through posting issues in Github or submitting ideas/changes via email/any other communication route. There is no regular contact between ad-hoc contributors and Editors/Core Team.\n\nSynBioPython is released on GitHub under the MIT licence. The project is committed to remain free and open source under a licence approved by the [FSF](https://www.fsf.org) and the [OSI](https://opensource.org).\n\n## Feature requests\n\nFeature requests are welcome. Please do so before submitting:\n* Check if the feature has already been requested.\n* Ensure your idea fits with the scope and aims of the project.\n* Please provide details (i.e. explaining the use case (merits of the feature))\n\n\n## Issue tracker\n\nThe issue tracker is the preferred channel for bug reports, and feature requests, but please respect the following restrictions:\n* Never use the issue tracker for personal support requests (use [Stack Overflow](https://stackoverflow.com) or [Bioinformatics SE](https://bioinformatics.stackexchange.com)).\n* Keep the discussion on topic and respect the opinions of others.\n\n\n## Contributions\n\nWe welcome commits from contributors. We will consider code that is relevant to synthetic biology and meets the following criteria:\n* you have the legal right to contribute the code under the project's licence\n* the contribution follows the coding style outlined below\n* docstrings are included in the code, if applicable\n* tests are written for new code & all tests pass\n\nFor bigger contributions, such as modules or addition of dependencies, please contact the core team for a discussion and approval. Contributions should be submitted as GitHub pull requests. New feature or bug fix pull requests are reviewed and merged by a core team member. Large contributions, such as modules, are reviewed by at least two core team members.\n\n\n## Coding conventions\n\nSynBioPython conforms to Black and Flake8 requirements, which are enforced using pre-commit hooks.\n\nTests are included for each function, with total code coverage >90%.\n\n[Travis CI](https://travis-ci.org/github/Global-Biofoundries-Alliance/SynBioPython) is used for continuous integration.\n\nThe project follows the [semantic versioning](https://semver.org) scheme. Major versions are prepared into [GitHub releases](https://github.com/Global-Biofoundries-Alliance/SynBioPython/releases) and also uploaded to [PyPI](https://pypi.org/project/synbiopython/) (Python Package Index).\n\n**Documentation** is generated into `docs/build/html` using [Sphinx](https://www.sphinx-doc.org/en/master/), and is available at https://synbiopython.org or at https://synbiopython.readthedocs.io. To update the html files after modifying the docstrings, run this from the docs folder:\n\n```bash\nmake clean   # to clean all the files\nmake html    # to generate the new html files\n```\n\n\n## Get started!\n0. Set up your development environment, then install pre-commit:\n```\npip install pre-commit\n```\n\n1. Press the \"fork\" button in GitHub to create a copy of the repository in your own GitHub account.\n\n2. Now you need to clone locally using a terminal:\n```\ngit clone git@github.com:yourname/SynBioPython.git\n```\n3. Change into the new local directory and install the package and the git hooks:\n```\ncd SynBioPython\npip install --user -e .\npre-commit install\n```\n4. Set up a new remote that points to the original project repository:\n```\ngit remote add upstream git@github.com:Global-Biofoundries-Alliance/SynBioPython.git\n```\n5. Set up Travis CI to watch your fork.\n\n6. Develop on your fork's master branch or a feature branch, then commit:\n```\ngit push origin master\n```\nEnsure that your changes pass both Black and Flake8 before committing your staged files. Black is the uncompromising Python Code Formatter. It will reformat your entire file in place according to the Black code style. Flake8 is a powerful tool that checks the code's compliance with PEP8.\n\n7. Create a Pull Request (PR) with the \"Compare & pull request\" button. Describe your changes then \"Create pull request\" button at the bottom, and wait for review by the maintainers. Please pull again the latest GBA master into your fork and ensure that the Travis CI build of your fork passes before making a PR.\n\n---\n\nThe project includes the configuration files for pre-commit hooks to automate the code formatting and checking process: _[.pre-commit-config.yaml](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/.pre-commit-config.yaml)_, _[.flake8](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/.flake8)_, and _[.toml](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/.toml)_ for configuring Black.\n\nRefer to [this page](https://ljvmiranda921.github.io/notebook/2018/06/21/precommits-using-black-and-flake8/) for a complete guideline on how to use pre-commit hook to include Black and Flake8.\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribute!",
        "parent_header": [
          "SynBioPython"
        ],
        "type": "Text_excerpt",
        "value": "SynBiopython is developed collectively by members of the Global Biofoundry Alliance and released on Github under the MIT license. Contributions are welcome!\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-06T01:29:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-01T02:16:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "General low-level API"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8403064805105422,
      "result": {
        "original_header": "SynBioPython",
        "type": "Text_excerpt",
        "value": "\nSynBiopython provides generic tools for Synthetic Biology. For more details, please see the publication: \nSynBiopython: an open-source software library for Synthetic Biology, *Jing Wui Yeoh, Neil Swainston, Peter Vegh, Valentin Zulkower, Pablo Carbonell, Maciej B Holowko, Gopal Peddinti, Chueh Loo Poh.* [Synthetic Biology](https://doi.org/10.1093/synbio/ysab001) (2021) ysab001 \n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Global-Biofoundries-Alliance/SynBioPython/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Global-Biofoundries-Alliance/SynBioPython/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/genbabel.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/genbabel.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/codon.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/codon.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/index.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/index.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/lab_automation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/examples/lab_automation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://mybinder.org/v2/gh/Global-Biofoundries-Alliance/SynBioPython/master?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252FGlobal-Biofoundries-Alliance%252FSynBioPython%252Ftree%252Fmaster%252Fexamples%26urlpath%3Dtree%252Fexamples%252Findex.ipynb%26branch%3Dmaster"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Global-Biofoundries-Alliance/SynBioPython"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SynBioPython"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SynBioPython"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npip install synbiopython\n```\n\nTo install the latest version from Github:\n```\npip install git+https://github.com/Global-Biofoundries-Alliance/SynBioPython\n```\nCurrently Python 3.6, 3.7 and 3.8 are supported.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Global BioFoundry Alliance\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SynBioPython"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Global-Biofoundries-Alliance"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 130286,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "veghp",
          "type": "User"
        },
        "date_created": "2021-03-16T13:54:29Z",
        "date_published": "2021-03-16T13:59:15Z",
        "html_url": "https://github.com/Global-Biofoundries-Alliance/SynBioPython/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "release_id": 39880563,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/releases/39880563",
        "value": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/releases/39880563",
        "zipball_url": "https://api.github.com/repos/Global-Biofoundries-Alliance/SynBioPython/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:38:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 47
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "SynBioPython"
        ],
        "type": "Text_excerpt",
        "value": "You should now be able to run this in Python:\n\n```python\nimport synbiopython\nprint(synbiopython.__version__)\n```\n\nCurrently, there are three modules implemented:\n- The genbabel module provides standard file parsers and for working with multiple fileformats.\n- The codon module provides support for codon optimisation.\n- The lab automation module enables working with plates and generation of picklists (transfers) for liquid handlers.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "SynBioPython",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Example Jupyter notebooks are provided for each module: [codon](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/examples/codon.ipynb), [genbabel](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/examples/genbabel.ipynb) and [lab automation](https://github.com/Global-Biofoundries-Alliance/SynBioPython/blob/master/examples/lab_automation.ipynb). In order to open these notebooks, download and install [JupyterLab](https://jupyterlab.readthedocs.io).\n\n"
      },
      "source": "https://raw.githubusercontent.com/Global-Biofoundries-Alliance/SynBioPython/master/README.md",
      "technique": "header_analysis"
    }
  ]
}