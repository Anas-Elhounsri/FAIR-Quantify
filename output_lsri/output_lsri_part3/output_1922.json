{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributions",
        "parent_header": [
          "iPick",
          "Acknowledgments"
        ],
        "type": "Text_excerpt",
        "value": "- The ipick.py script was written by Dr. Woonghee Lee (University of Colorado, Denver)\n- The iPick Module was written by Dr. Mehdi Rahimi (University of Colorado, Denver)\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Funding sources",
        "parent_header": [
          "iPick",
          "Acknowledgments"
        ],
        "type": "Text_excerpt",
        "value": "National Science Foundation:\n\n* DBI 1902076 (Lee, W)\n* DBI 2051595 (Lee, W)\n\nUniversity of Colorado Denver\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 14.2,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "iPick",
          "Acknowledgments"
        ],
        "type": "Text_excerpt",
        "value": "Rahimi, Mehdi, Yeongjoon Lee, John L. Markley, and Woonghee Lee. \"iPick: Multiprocessing software for integrated NMR signal detection and validation.\" Journal of Magnetic Resonance 328 (2021): 106995.\nhttps://doi.org/10.1016/j.jmr.2021.106995\n\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pokynmr/iPick"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-15T20:13:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-09T08:54:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Multiprocessing Peak Picking Software for UCSF NMR Spectra"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "iPick"
        ],
        "type": "Text_excerpt",
        "value": "The iPick program is available as a module for the POKY and NMRFAM-SPARKY. It is highly recommended that you use the module instead of the command line tool. The main reasons are the ease of work and the extended capabilities provided in the module. For example, using the module, you can easily select the experiment you are interested in and click a button to perform the peak picking task.\nThere are also many capabilities built into the module. One example is the newly proposed *Reliability Score* feature that can help a researcher to determine the noise peaks easily.\n\n\n_______________________________________________________\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8867169988362331,
      "result": {
        "original_header": "Capabilities",
        "type": "Text_excerpt",
        "value": "A researcher may use the _Basic Mode_ of iPick to quickly pick signals in spectra.\nWith the _Advanced Mode_ of iPick, one can customize the peak picking options: positive/negative peak selection, base level selection, automatic peak import, and auto-integration by a selected integration mode. Two automated integration modes are available: Individual Fit and Group Fit. The former mode fits each pick individually without considering neighboring peaks, while the latter integrates all peaks considered to be neighbors. Integration Settings (two-letter-code it) specifies different integration protocols, including Gaussian, Lorentzian, Pseudo-Voigt, and viable linewidth ranges. \nThe Peak List window generated by iPick lists the position, volume, height, S/N, linewidth and Reliability Score (calculated from a linear combination of the volume, S/N, and linewidth) for each detected peak. By clicking the Setup button, the user can add or remove columns from the Peak List Settings window. The weighting factors used calculating the Reliability Score can be manually adjusted from the Manual Coefficients tab. Since the Reliability Score reflects the probability of a peak to be a true signal, the researcher can easily remove false signals (noise and artifact peaks) by specifying a threshold and clicking the Remove button. \nThe Cross-Validation module provides an alternative way to qualify picked peaks. Noise peaks with the decent reliability score \u2013 due to a large SNR or volume because of experimental defects or integration errors \u2013 are likely to show up only in a certain spectrum and their resonances will not appear in the other spectra. On the other hand, the resonances of true signals may appear frequently in interrelated spectra. This fact has been used to cross-validate peaks between all spectra. \nThe frequency of the resonances for each peak will be visualized in the Peak Histogram (Figure below) by clicking the Peak Histogram button of the cross-validation window. Less frequently occurring resonances help the user to identify false-positives. It is also possible for the user to view associated histogram bars on the histogram by selecting one or more peaks from the spectral views and clicking the Show the selected peaks button. \n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8978461217247127,
      "result": {
        "original_header": "Windows Users",
        "type": "Text_excerpt",
        "value": "The iPick program runs natively on Mac, Linux and Windows. However, multiprocessing of Python is limited in Windows due to its kernel architecture. To overcome this issue, a user can use WSL2 (Windows Subsystem for Linux): \nAlternatively, NMRbox.org can be considered. NMRbox provides cloud-based virtual machines for NMR software. \n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading and Running the Code",
        "parent_header": [
          "iPick"
        ],
        "type": "Text_excerpt",
        "value": "If you want to use the code from this repository, you can run the module by following these steps:\n\nOpen a Terminal and download the code:\n\n\n\tgit clone https://github.com/pokynmr/iPick.git\n\n\nPlease note the directory you downloaded the code in. To find that, you can navigate to the iPick folder:\n\n\n    cd iPick\n\n\nand then use the *pwd* command to see the full address:\n\n\n    pwd\n\n\n<img src=\"figures/terminal.png\" width=\"577\" border=\"1\">\n\nIn this case, the full address is */home/samic/iPick*\n\n\nThen, inside the POKY or NMRFAM-SPARKY window, open the Python module by typing the two-letter-code **py**\n\n\n<img src=\"figures/python-module.png\" width=\"600\" border=\"1\">\n\n\nfrom here, click the *Load Module...* button and navigate to the before-mentioned directory and select the *ipick_gui_sparky.py* file.\n\n\n<img src=\"figures/select-file.png\" width=\"416\" border=\"1\">\n\n\nAlternatively, you can copy-paste these two commands:\n\n\n    sys.path.append('/home/samic/iPick')\n    import ipick_gui_sparky\n\n\n(make sure to replace the address inside the single-quotations with the address of the iPick directory on your computer)\n\n\n\nFinally, run the module by running this command in the Python module window:\n\n\n    ipick_gui_sparky.show_ipick_dialog(s)\n\n\nThis will open the iPick window and let you use the module.\n\n<img src=\"figures/run.png\" width=\"600\" border=\"1\">\n\n\n_______________________________________________________\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pokynmr/ipick/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pokynmr/iPick/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pokynmr/iPick"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iPick"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/terminal.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/python-module.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/select-file.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/run.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/peaklist_sup_cv.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/xcheck.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/cross-peaklist.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/histogram.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999452841354979,
      "result": {
        "original_header": "Windows Users",
        "type": "Text_excerpt",
        "value": "The iPick program runs natively on Mac, Linux and Windows. However, multiprocessing of Python is limited in Windows due to its kernel architecture. To overcome this issue, a user can use WSL2 (Windows Subsystem for Linux): \nhttps://www.windowscentral.com/how-install-wsl2-windows-10 \n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8074169765158009,
      "result": {
        "original_header": "Capabilities",
        "type": "Text_excerpt",
        "value": "<img src=\"figures/ipick_basic_advanced.png\" width=\"800\" border=\"1\"> \n<img src=\"figures/peaklist_sup_cv.png\" width=\"700\" border=\"1\"> \n<img src=\"figures/xcheck.png\" width=\"300\" border=\"1\"> \n<img src=\"figures/cross-peaklist.png\" width=\"650\" border=\"1\"> \n<img src=\"figures/histogram.png\" width=\"900\" border=\"1\"> \n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pokynmr/iPick/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nmr, nmrfam-sparky, noise-peaks, peaks, reliability-score, spectra"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 2-Clause License\n\nCopyright (c) 2020, LeeGroup\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/figures/ipick_basic_advanced.png"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iPick"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pokynmr"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 269224,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the iPick module",
        "parent_header": [
          "iPick"
        ],
        "type": "Text_excerpt",
        "value": "The module is integrated into the latest version of POKY and NMRFAM-SPARKY programs which makes starting the program much easier. To get the latest version use these links:\n\nTo get POKY:  https://poky.clas.ucdenver.edu\n\nTo get NMRFAM-SPARKY:  https://nmrfam.wisc.edu/nmrfam-sparky-distribution/\n\nIf you are using POKY, you can open the iPick module by using the _two-letter-code_ **iP**.\n\nIf you are using NMRFAM-SPARKY, you can open the iPick module by using the _two-letter-code_ **iP**.\nAlternatively, you can use the top menu and open \"Extensions\", from there, navigate to \"Peak\" menu and find \"iPick Peak Picker\".\n\n\n_______________________________________________________\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading and Running the Code",
        "parent_header": [
          "iPick"
        ],
        "type": "Text_excerpt",
        "value": "If you want to use the code from this repository, you can run the module by following these steps:\n\nOpen a Terminal and download the code:\n\n\n\tgit clone https://github.com/pokynmr/iPick.git\n\n\nPlease note the directory you downloaded the code in. To find that, you can navigate to the iPick folder:\n\n\n    cd iPick\n\n\nand then use the *pwd* command to see the full address:\n\n\n    pwd\n\n\n<img src=\"figures/terminal.png\" width=\"577\" border=\"1\">\n\nIn this case, the full address is */home/samic/iPick*\n\n\nThen, inside the POKY or NMRFAM-SPARKY window, open the Python module by typing the two-letter-code **py**\n\n\n<img src=\"figures/python-module.png\" width=\"600\" border=\"1\">\n\n\nfrom here, click the *Load Module...* button and navigate to the before-mentioned directory and select the *ipick_gui_sparky.py* file.\n\n\n<img src=\"figures/select-file.png\" width=\"416\" border=\"1\">\n\n\nAlternatively, you can copy-paste these two commands:\n\n\n    sys.path.append('/home/samic/iPick')\n    import ipick_gui_sparky\n\n\n(make sure to replace the address inside the single-quotations with the address of the iPick directory on your computer)\n\n\n\nFinally, run the module by running this command in the Python module window:\n\n\n    ipick_gui_sparky.show_ipick_dialog(s)\n\n\nThis will open the iPick window and let you use the module.\n\n<img src=\"figures/run.png\" width=\"600\" border=\"1\">\n\n\n_______________________________________________________\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:51:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Standalone usage",
        "parent_header": [
          "iPick"
        ],
        "type": "Text_excerpt",
        "value": "The iPick program can also be run from the command line.\n\nHere's a simple running example:\n\npython iPick.py --input spectra.ucsf --output peaks.list\n\nThere are more options that you can use with the command line script. To see a full list of these options, run the script without any options:\n\n    python iPick.py\n\nPlease note that it is highly recommended that you use the POKY or NMRFAM-SPARKY module instead of the command line tool.\n\nHere is an example of running iPick script:\n\n\tpython iPick.py -i ~/Ubiquitin_NMRFAM/Spectra/CHSQC.ucsf -o peaks.list -r 1 --threshold 50325.0 --overwrite -c 1\n\nIn this example, the input file is a CHSQC experiment and the output file (the list of the found peaks) will be named \"peaks.list\" in the current directory. Also, a threshold of 50325.0 has been defined. The last part of the command, \"-c 1\", indicates that we want to use only one CPU process. This number can be increased as needed.\n\n\n_______________________________________________________\n"
      },
      "source": "https://raw.githubusercontent.com/pokynmr/ipick/master/README.md",
      "technique": "header_analysis"
    }
  ]
}