{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/861934367/MSIFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-01T08:24:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-01T08:28:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MSI detect"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9476780386236653,
      "result": {
        "original_header": "#####MSIFinder",
        "type": "Text_excerpt",
        "value": "requested other softwares as follow:\r\nbedtools(v2.28.0)\r\nmsisensor(v0.6)\r\nfastahack\r\nrequested python packages as follow:\r\npandas(0.23.4)\r\npysam(0.15.1)\r\nBams file:\r\nQuality control and preprocessing of FASTQ files was done by fastp (version 0.19.3), to obtain clean reads. Next, clean reads mapping against the human reference genome (hg19/GRCh37) and alignment processing were performed using BWA (version 0.7.12-r1039) and SAMtools (version 0.1.19-96b5f2294a). Subsequently, sample-level, fully local indel realignment was performed using GATK (version 4.1.0.0) and duplicate reads removed using Picard (version 1.72). Quality score recalibration was then performed using GATK to generate the final realignment and recalibration BAM, which was used for subsequent analyses.\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/861934367/MSIFinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/861934367/MSIFinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "861934367/MSIFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9135800521474146,
      "result": {
        "original_header": "First",
        "type": "Text_excerpt",
        "value": "such as \"python scan_msiloc.py -msisensor /yourpath/msisensor -ref hg19 -bed yourpanel -o all_msi_loc.txt\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9135800521474146,
      "result": {
        "original_header": "Third",
        "type": "Text_excerpt",
        "value": "such as \"python create_baseline_v2.py -d control_normal_bams_outdir/*_MSIscore.xls -o MSI_average_depth.txt\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999840256051086,
      "result": {
        "original_header": "Fourth",
        "type": "Text_excerpt",
        "value": "such as \"python train1.py -fastahack /youpath/fastahack -qc MSI_average_depth.txt -rf hg19 -bam bamfile -bed all_msi_loc.txt -o positive_dir -p patientid\" for your MSI-positive sample's bam files\r\nsuch as \"python train1.py -fastahack /youpath/fastahack -qc MSI_average_depth.txt -rf hg19 -bam bamfile -bed all_msi_loc.txt -o negative_dir -p patientid\" for your MSI-negative sample's bam files\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9135800521474146,
      "result": {
        "original_header": "Fifth",
        "type": "Text_excerpt",
        "value": "such as \"python train2.py -qc MSI_average_depth.txt -positive_dir positive_dir -negative_dir negative_dir\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9950363614798369,
      "result": {
        "original_header": "Sixth",
        "type": "Text_excerpt",
        "value": "such \"python MSIdetect_v3.py -fastahack /youpath/fastahack -rf hg19 -bam new_bamfile -bed bed.txt -ctr peaks.txt -o outdir -p patientid\" \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.860814416046304,
      "result": {
        "original_header": "First",
        "type": "Text_excerpt",
        "value": "such as \"python scan_msiloc.py -msisensor /yourpath/msisensor -ref hg19 -bed yourpanel -o all_msi_loc.txt\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8212813265434353,
      "result": {
        "original_header": "Second",
        "type": "Text_excerpt",
        "value": "such as \"python MSIdetect_v3.py -mkc True -fastahack /youpath/fastahack -rf hg19 -bam bamfile -bed all_msi_loc.txt -o control_normal_bams_outdir -p patientid\" for all your control normal bam files\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.860814416046304,
      "result": {
        "original_header": "Third",
        "type": "Text_excerpt",
        "value": "such as \"python create_baseline_v2.py -d control_normal_bams_outdir/*_MSIscore.xls -o MSI_average_depth.txt\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8709004825832103,
      "result": {
        "original_header": "Fourth",
        "type": "Text_excerpt",
        "value": "such as \"python train1.py -fastahack /youpath/fastahack -qc MSI_average_depth.txt -rf hg19 -bam bamfile -bed all_msi_loc.txt -o positive_dir -p patientid\" for your MSI-positive sample's bam files\r\nsuch as \"python train1.py -fastahack /youpath/fastahack -qc MSI_average_depth.txt -rf hg19 -bam bamfile -bed all_msi_loc.txt -o negative_dir -p patientid\" for your MSI-negative sample's bam files\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.860814416046304,
      "result": {
        "original_header": "Fifth",
        "type": "Text_excerpt",
        "value": "such as \"python train2.py -qc MSI_average_depth.txt -positive_dir positive_dir -negative_dir negative_dir\"\r \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8747544278458221,
      "result": {
        "original_header": "Sixth",
        "type": "Text_excerpt",
        "value": "such \"python MSIdetect_v3.py -fastahack /youpath/fastahack -rf hg19 -bam new_bamfile -bed bed.txt -ctr peaks.txt -o outdir -p patientid\" \n"
      },
      "source": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/861934367/MSIFinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MSIFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "861934367"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25750,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/861934367/MSIFinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:26:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}