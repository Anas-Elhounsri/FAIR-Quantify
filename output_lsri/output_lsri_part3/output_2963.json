{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "exfi"
        ],
        "type": "Text_excerpt",
        "value": "exfi was published on Ecology and Evolution\n\n> Langa J, Estonba A, Conklin D. EXFI: Exon and splice graph prediction without a reference genome.\n> Ecol Evol. 2020;00:1\u201314. https://doi.org/10.1002/ece3.6587\n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jlanga/exfi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-15T13:56:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-14T20:51:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Get exons from a transcriptome and raw genomic reads using abyss-bloom and bedtools"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9277548261215154,
      "result": {
        "original_header": "exfi",
        "type": "Text_excerpt",
        "value": "Get exons from a transcriptome and raw genomic reads using abyss-bloom and bedtools\n \n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.927382104622148,
      "result": {
        "original_header": "Required data",
        "type": "Text_excerpt",
        "value": "- A transcriptome in fasta format (take it from Ensembl for example, or the result of a _de novo_ transcriptome assembler like trinity, trans-abyss or oases) \n- A set of genomic reads in fastq format, paired end or not. `.gz` files are allowed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jlanga/exfi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jlanga/exfi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jlanga/exfi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "exfi"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/scripts/pipeline_chr25.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/scripts/pipeline_chr25_big.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/scripts/pipeline_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/.travis/travis_before_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/.travis/travis_install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install",
        "parent_header": [
          "exfi"
        ],
        "type": "Text_excerpt",
        "value": "To install other dependencies, follow the instructions from the travis files:\n\n1. Install packages with `apt`:\n\n```sh\nsudo apt install \\\n    autoconf build-essential bzip2 cmake curl gcc git libboost-dev libsdsl3 \\\n    libz-dev zlib1g\n```\n\n2. Install conda, then configure channels and install\n\n```sh\nconda config --add channels conda-forge\nconda config --add channels defaults\nconda config --add channels r\nconda config --add channels bioconda\nconda install --yes abyss=2.0.1 bedtools biopython pandas pip\n```\n\n3. Install `biobloomtools`\n\nYou may need to use `sudo` in the last command:\n\n```sh\n# Install biobloomtools\ngit clone --recursive https://github.com/bcgsc/biobloom.git && \\\ncd biobloom/ && \\\ngit submodule update --init && \\\ngit checkout 0a42916922d42611a087d4df871e424a8907896e && \\\n./autogen.sh && \\\n./configure --prefix=/usr/local/ && \\\nmake -j 4 && \\\nmake install\n```\n\n4. Copy this repo and install it with `pip`:\n\n```sh\npip install https://github.com/jlanga/exfi/archive/v1.5.6.zip\n```\n\nIf you have access to Docker, you can create a Debian container with the following command:\n\n```sh\ndocker build --rm --tag exfi:v1.5.6 github.com/jlanga/exfi-docker\n```\n\n[More info](https://github.com/jlanga/exfi-docker)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jlanga/exfi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abyss, abyss-bloom, assembly, bedtools, biobloomtools, bioconda, biopython, bloom-filter, conda, exon, kmer, network, pandas, python3, rna-seq, splice-graphs, transcriptome, transcriptomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Jorge Langa\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "exfi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jlanga"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 174721,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8988,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-07-18T13:10:54Z",
        "date_published": "2019-07-22T12:53:48Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/zenodo-1.5.6",
        "release_id": 18772886,
        "tag": "zenodo-1.5.6",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/zenodo-1.5.6",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/18772886",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/18772886",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/zenodo-1.5.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-05-27T10:29:57Z",
        "date_published": "2019-05-27T10:30:13Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.6",
        "release_id": 17604156,
        "tag": "v1.5.6",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.6",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/17604156",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/17604156",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-05-24T07:53:13Z",
        "date_published": "2019-05-24T07:54:10Z",
        "description": "gff3_to_bed can read NCBI gff3 files",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.5",
        "release_id": 17563656,
        "tag": "v1.5.5",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/17563656",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/17563656",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-04-12T13:01:09Z",
        "date_published": "2019-04-12T13:01:26Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.4",
        "release_id": 16726325,
        "tag": "v1.5.4",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/16726325",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/16726325",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-04-11T09:39:28Z",
        "date_published": "2019-04-11T09:39:48Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.3",
        "release_id": 16695949,
        "tag": "v1.5.3",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/16695949",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/16695949",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-02-20T13:55:19Z",
        "date_published": "2019-02-20T13:55:48Z",
        "description": "Collapse",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.2",
        "release_id": 15668069,
        "tag": "v1.5.2",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/15668069",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/15668069",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-02-06T09:24:02Z",
        "date_published": "2019-02-06T09:27:33Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.1",
        "release_id": 15392414,
        "tag": "v1.5.1",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/15392414",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/15392414",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-02-05T13:11:48Z",
        "date_published": "2019-02-05T13:12:14Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.5.0",
        "release_id": 15372563,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/15372563",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/15372563",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2019-01-28T15:26:07Z",
        "date_published": "2019-01-28T15:27:54Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.13",
        "name": "DataFrames",
        "release_id": 15218323,
        "tag": "v1.4.13",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.13",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/15218323",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/15218323",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-05-28T16:30:48Z",
        "date_published": "2018-05-28T16:31:08Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.12",
        "release_id": 11207268,
        "tag": "v1.4.12",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.12",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/11207268",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/11207268",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-03-10T15:21:24Z",
        "date_published": "2018-03-10T15:21:55Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.11",
        "name": "Bugfix",
        "release_id": 10028931,
        "tag": "v1.4.11",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.11",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/10028931",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/10028931",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-03-02T17:23:22Z",
        "date_published": "2018-03-02T17:25:43Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.9",
        "name": "Threading",
        "release_id": 9915571,
        "tag": "v1.4.9",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.9",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9915571",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9915571",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-03-01T09:59:18Z",
        "date_published": "2018-03-01T09:59:42Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.8",
        "name": "Bugfix",
        "release_id": 9890130,
        "tag": "v1.4.8",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.8",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9890130",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9890130",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-02-28T16:19:41Z",
        "date_published": "2018-02-28T16:20:07Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.7",
        "name": "Bugfix!",
        "release_id": 9877281,
        "tag": "v1.4.7",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.7",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9877281",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9877281",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-02-28T13:10:56Z",
        "date_published": "2018-02-28T13:13:05Z",
        "description": "Slim dicts",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.6",
        "release_id": 9873582,
        "tag": "v1.4.6",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.6",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9873582",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9873582",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-02-27T16:38:44Z",
        "date_published": "2018-02-28T11:19:53Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.5",
        "release_id": 9871893,
        "tag": "v1.4.5",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.5",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9871893",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9871893",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-02-21T16:24:28Z",
        "date_published": "2018-02-22T10:41:46Z",
        "description": "- Added a bunch of classes for sanity\r\n- Added mypy annotations (not all).\r\n- Started documenting in rst (for sphinx in the future).",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.4",
        "name": "Classes",
        "release_id": 9785792,
        "tag": "v1.4.4",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.4",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9785792",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9785792",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2018-01-16T13:53:59Z",
        "date_published": "2018-01-16T13:57:25Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.2",
        "name": "correct_splice_graph",
        "release_id": 9253068,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/9253068",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/9253068",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2017-11-14T16:49:52Z",
        "date_published": "2017-11-14T16:55:19Z",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.4.1",
        "release_id": 8512596,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/8512596",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/8512596",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2017-05-05T21:30:47Z",
        "date_published": "2017-05-29T21:27:16Z",
        "description": "Added a script to create a baited bloom:\r\n- Create a Bloom filter of the transcriptome with biobloommaker\r\n- Categorize your genomic reads with biobloomcategorizer (throw away all that is not related to the transcriptome)\r\n- Build a cascading Bloom filter with abyss-bloom",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.1.0",
        "name": "baited_bloom",
        "release_id": 6537893,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/6537893",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/6537893",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jlanga",
          "type": "User"
        },
        "date_created": "2017-04-26T09:30:33Z",
        "date_published": "2017-04-26T09:34:38Z",
        "description": "First functional version.\r\n\r\nContains 4 mains scripts:\r\n1. `find_exons` to find a set of putative exons based on a Bloom filter and a transcriptome\r\n2. `filter_exons_by_length` to trim bases to the right and the left, and then filter exons by length\r\n3. `filter_exons_by_extensibility` to delete bases that seem to be false positives\r\n4. `reduce_exons` to remove redundant exons in a dataset",
        "html_url": "https://github.com/jlanga/exfi/releases/tag/v1.0.0",
        "release_id": 6192468,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/jlanga/exfi/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jlanga/exfi/releases/6192468",
        "value": "https://api.github.com/repos/jlanga/exfi/releases/6192468",
        "zipball_url": "https://api.github.com/repos/jlanga/exfi/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "exfi"
        ],
        "type": "Text_excerpt",
        "value": "Docker or different apt and conda packages (see installation guide).\n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the pipeline",
        "parent_header": [
          "exfi"
        ],
        "type": "Text_excerpt",
        "value": "1. Make a baited Bloom filter of the genomic reads with `build_baited_bloom_filter`:\n- `genome.fa.gz` is the set of genomic reads and\n- `genome_k25_m100M_l1.bf` is the resulting Bloom filter, made of kmers of length 25, a size of 100 MB and the number of times of a kmer must be in the reads is 1 (levels).\n\n```sh\n# Assuming that you are in the exfi folder:\nbuild_baited_bloom_filter \\\n    --input-fasta data/transcript.fa \\\n    --kmer 25 \\\n    --bloom-size 100M \\\n    --levels 1 \\\n    --threads 4 \\\n    --output-bloom genome_k25_m100M_l1.bf \\\n    data/genome.fa.gz\n```\n\n2. Run `build_splice_graph` to get putative exons in the transcriptome.\n- `data/transcript.fa` is the input transcriptome,\n- `genome_k25_m500M_l1.bf` is the Bloom filter generated above\n- kmer length has to be the same\n- `test.gfa` is the resulting splice graph in [GFA1 format](https://github.com/GFA-spec/GFA-spec/blob/master/GFA1.md).\n\n```sh\nbuild_splicegraph \\\n    --input-fasta data/transcript.fa \\\n    --input-bloom genome_k25_m100M_l1.bloom \\\n    --kmer 25 \\\n    --max-fp-bases 5 \\\n    --output-gfa test.gfa\n```\n\nThis splice graph can be visualized with [Bandage](https://rrwick.github.io/Bandage/)\n\nExample:\n\n```\nH\tVN:Z:1.0\nS\tENSDART00000033574.5:0-216\tGTAAGCCGCGGCGGTGTGTGTGTGTGTGTGTGTTCTCCGTCATCTGTGTTCTGCTGAATGATGAGGACAGACGTGTTTCTCCAGCGGAGGAAGCGTAGAGATGTTCTGCTCTCCATCATCGCTCTTCTTCTGCTCATCTTCGCCATCGTTCATCTCGTCTTCTGCGCTGGACTGAGTTTCCAGGGTTCGAGTTCTGCTCGCGTCCGCCGAGACCTC\nS\tENSDART00000033574.5:216-398\tGAGAATGCGAGTGAGTGTGTGCAGCCACAGTCGTCTGAGTTTCCTGAAGGATTCTTCACGGTGCAGGAGAGGAAAGATGGAGGAATCCTGATTTACTTCATGATCATCTTCTACATGCTGCTGTCCGTCTCCATCGTGTGTGATGAATATTTTCTGCCATCTCTGGAGGTCATCAGCGAGCG\nS\tENSDART00000033574.5:397-482\tGTCTTGGTCTCTCGCAGGATGTTGCTGGAGCCACGTTTATGGCTGCGGGGAGTTCGGCTCCAGAGCTCGTCACTGCATTTCTGGG\nS\tENSDART00000033574.5:480-586\tGGTGTGTTTGTGACGAAGGGCGACATCGGCGTCAGCACCATCATGGGTTCTGCTGTCTATAACCTGCTGTGCATCTGTGCAGCGTGCGGCCTGCTGTCCTCTGCAG\nS\tENSDART00000033574.5:585-687\tGTTGGTCGTCTGAGCTGCTGGCCGTTGTTCAGAGATTGTGTTGCGTACTCCATCAGTGTCGCCGCCGTCATCGCCATCATCTCAGATAACAGAGTTTACTGG\nS\tENSDART00000033574.5:685-969\tGGTATGATGGCGCGTGTCTCCTGCTGGTGTACGGTGTGTATGTAGCTGTACTGTGTTTCGATCTGAAGATCAGCGAGTACGTGATGCAGCGCTTCAGTCCATGCTGCTGGTGTCTGAAACCTCGCGATCGTGACTCAGGCGAGCAGCAGCCTCTAGTGGGCTGGAGTGACGACAGCAGCCTGCGGGTCCAGCGCCGTTCCAGAAATGACAGCGGAATATTCCAGGATGATTCTGGATATTCACATCTATCGCTCAGCCTGCACGGACTCAACGAAATCAGCGAC\nS\tENSDART00000033574.5:969-1177\tGAGCACAAGAGTGTGTTCTCCATGCCGGATCACGATCTGAAGCGAATCCTGTGGGTTTTGTCTCTTCCGGTCAGCACTCTGCTGTTTGTGAGCGTTCCCGACTGCAGGAGACCCTTCTGGAAGAACTTCTACATGCTGACCTTCCTGATGTCCGCCGTCTGGATTTCTGCATTCACTTATGTGCTGGTCTGGATGGTCACAATCGTGG\nS\tENSDART00000033574.5:1176-1283\tGGGGAGACTCTGGGAATCCCGGACACAGTGATGGGAATGACTCTTCTGGCTGCAGGAACCAGTATCCCCGACACCGTGGCCAGTGTGATGGTGGCACGAGAAGGTAA\nS\tENSDART00000033574.5:1277-2002\tAGGTAAATCTGATATGGCCATGTCCAACATCGTGGGCTCTAACGTGTTCGATATGCTGTGTCTGGGCCTGCCGTGGTTCATCCAGACGGTGTTTGTTGACGTGGGCTCCCCGGTGGATGTCAACAGCTCGGGGCTGGTCTTCATGTCCTGCACGCTGCTGCTCTCCATCATCTTCCTCTTCCTCGCCGTGCACATCAACGGCTGGAAGCTGGACTGGAAGCTGGGTCTGGTGTGTTTGGCGTGTTACATTCTGTTCGCAACACTCTCCATCCTGTACGAGCTCGGCATCATCGGGAACAATCCCATACGCTCCTGCAGCGACTGAACACTGCTCTACAGCGCCCCCTTATGGACAACACAAGGACGTGACTCTTTATAACCCTCTAAAGTGCACAGGTTCATTACTGAATACAAGAAAATAGAACTGCGAGACGTCAACTCAAAATACAAGAGAAGTCAAAGTGCGAGATGTAAAAAATATATGCACATAAATGAGGATAAACTTTTTATTTAATAAGACAAAACTGCATAAAGTCTGATGTGAACACTGCTCAACAGCGCCCTCTCATGGACAACACATGGATCTGACTCTTATTAACCCTCCAGAGTGCAAATACACTAACACAACGTAATATAACCAAGTTAAAATGGCAAGATGTGAACTCAAAATACAAGAAAGCAGTCAAGATGCCCGACATAACAAATGTGCATTAAAATGTAAGCCC\nL\tENSDART00000033574.5:0-216\t+\tENSDART00000033574.5:216-398\t+\t0M\nL\tENSDART00000033574.5:216-398\t+\tENSDART00000033574.5:397-482\t+\t1M\nL\tENSDART00000033574.5:397-482\t+\tENSDART00000033574.5:480-586\t+\t2M\nL\tENSDART00000033574.5:480-586\t+\tENSDART00000033574.5:585-687\t+\t1M\nL\tENSDART00000033574.5:585-687\t+\tENSDART00000033574.5:685-969\t+\t2M\nL\tENSDART00000033574.5:685-969\t+\tENSDART00000033574.5:969-1177\t+\t0M\nL\tENSDART00000033574.5:969-1177\t+\tENSDART00000033574.5:1176-1283\t+\t1M\nL\tENSDART00000033574.5:1176-1283\t+\tENSDART00000033574.5:1277-2002\t+\t6M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:0-216\t+\t0\t216M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:216-398\t+\t216\t182M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:397-482\t+\t397\t85M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:480-586\t+\t480\t106M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:585-687\t+\t585\t102M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:685-969\t+\t685\t284M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:969-1177\t+\t969\t208M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:1176-1283\t+\t1176\t107M\nC\tENSDART00000033574.5\t+\tENSDART00000033574.5:1277-2002\t+\t1277\t725M\nP\tENSDART00000033574.5\tENSDART00000033574.5:0-216+,ENSDART00000033574.5:216-398+,ENSDART00000033574.5:397-482+,ENSDART00000033574.5:480-586+,ENSDART00000033574.5:585-687+,ENSDART00000033574.5:685-969+,ENSDART00000033574.5:969-1177+,ENSDART00000033574.5:1176-1283+,ENSDART00000033574.5:1277-2002+\t*\n```\n\n3.  Get exonic sequences\n\nTo extract meaningful information from the GFA file, we provide two scripts:\n\n- `gfa_to_exons`: which returns the predicted exons in FASTA format. For each record, each sequence comes with a unique identifier (`EXON[0-9]+`), a description indicating the coordinates of this exon with respect to the different transcripts (`TR1:0-200 TR2:105-305`), and the sequence of nucleotides. It is possible to hard and soft mask nucleotides that may not be correct. Example (soft masked):\n\n```\n>EXON00000000003 ENSDART00000033574.5:397-482\ngTCTTGGTCTCTCGCAGGATGTTGCTGGAGCCACGTTTATGGCTGCGGGGAGTTCGGCTC\nCAGAGCTCGTCACTGCATTTCTGgg\n>EXON00000000004 ENSDART00000033574.5:480-586\nggTGTGTTTGTGACGAAGGGCGACATCGGCGTCAGCACCATCATGGGTTCTGCTGTCTAT\nAACCTGCTGTGCATCTGTGCAGCGTGCGGCCTGCTGTCCTCTGCAg\n```\n\n- `gfa_to_gapped_transcript`: which returns the transcript with interleaved `N`s where it is predicted to be an intron. Example (hard masked):\n```\n>ENSDART00000033574.5 EXON00000000001,EXON00000000002,EXON00000000003,EXON00000000004,EXON00000000005,EXON00000000006,EXON00000000007,EXON00000000008,EXON00000000009\nGTAAGCCGCGGCGGTGTGTGTGTGTGTGTGTGTTCTCCGTCATCTGTGTTCTGCTGAATG\nATGAGGACAGACGTGTTTCTCCAGCGGAGGAAGCGTAGAGATGTTCTGCTCTCCATCATC\nGCTCTTCTTCTGCTCATCTTCGCCATCGTTCATCTCGTCTTCTGCGCTGGACTGAGTTTC\nCAGGGTTCGAGTTCTGCTCGCGTCCGCCGAGACCTCNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNGAGAATGCGAGTGAGTGTGTGCAGCCACAGTCGTCTGAGTTTCC\nTGAAGGATTCTTCACGGTGCAGGAGAGGAAAGATGGAGGAATCCTGATTTACTTCATGAT\nCATCTTCTACATGCTGCTGTCCGTCTCCATCGTGTGTGATGAATATTTTCTGCCATCTCT\nGGAGGTCATCAGCGAGCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNT\nCTTGGTCTCTCGCAGGATGTTGCTGGAGCCACGTTTATGGCTGCGGGGAGTTCGGCTCCA\nGAGCTCGTCACTGCATTTCTGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNTGTGTTTGTGACGAAGGGCGACATCGGCGTCAGCACCATCATGGGTTCTGCTGTC\nTATAACCTGCTGTGCATCTGTGCAGCGTGCGGCCTGCTGTCCTCTGCANNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTGGTCGTCTGAGCTGCTGGCCGTTGTTCA\nGAGATTGTGTTGCGTACTCCATCAGTGTCGCCGCCGTCATCGCCATCATCTCAGATAACA\nGAGTTTACTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTATGATG\nGCGCGTGTCTCCTGCTGGTGTACGGTGTGTATGTAGCTGTACTGTGTTTCGATCTGAAGA\nTCAGCGAGTACGTGATGCAGCGCTTCAGTCCATGCTGCTGGTGTCTGAAACCTCGCGATC\nGTGACTCAGGCGAGCAGCAGCCTCTAGTGGGCTGGAGTGACGACAGCAGCCTGCGGGTCC\nAGCGCCGTTCCAGAAATGACAGCGGAATATTCCAGGATGATTCTGGATATTCACATCTAT\nCGCTCAGCCTGCACGGACTCAACGAAATCAGCGACNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNGAGCACAAGAGTGTGTTCTCCATGCCGGATCACGATCTGAAGCGA\nATCCTGTGGGTTTTGTCTCTTCCGGTCAGCACTCTGCTGTTTGTGAGCGTTCCCGACTGC\nAGGAGACCCTTCTGGAAGAACTTCTACATGCTGACCTTCCTGATGTCCGCCGTCTGGATT\nTCTGCATTCACTTATGTGCTGGTCTGGATGGTCACAATCGTGNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNGGGAGACTCTGGGAATCCCGGACACAGTGATGGGAA\nTGACTCTTCTGGCTGCAGGAACCAGTATCCCCGACACCGTGGCCAGTGTGATGGTGGCAC\nGAGANNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNATCT\nGATATGGCCATGTCCAACATCGTGGGCTCTAACGTGTTCGATATGCTGTGTCTGGGCCTG\nCCGTGGTTCATCCAGACGGTGTTTGTTGACGTGGGCTCCCCGGTGGATGTCAACAGCTCG\nGGGCTGGTCTTCATGTCCTGCACGCTGCTGCTCTCCATCATCTTCCTCTTCCTCGCCGTG\nCACATCAACGGCTGGAAGCTGGACTGGAAGCTGGGTCTGGTGTGTTTGGCGTGTTACATT\nCTGTTCGCAACACTCTCCATCCTGTACGAGCTCGGCATCATCGGGAACAATCCCATACGC\nTCCTGCAGCGACTGAACACTGCTCTACAGCGCCCCCTTATGGACAACACAAGGACGTGAC\nTCTTTATAACCCTCTAAAGTGCACAGGTTCATTACTGAATACAAGAAAATAGAACTGCGA\nGACGTCAACTCAAAATACAAGAGAAGTCAAAGTGCGAGATGTAAAAAATATATGCACATA\nAATGAGGATAAACTTTTTATTTAATAAGACAAAACTGCATAAAGTCTGATGTGAACACTG\nCTCAACAGCGCCCTCTCATGGACAACACATGGATCTGACTCTTATTAACCCTCCAGAGTG\nCAAATACACTAACACAACGTAATATAACCAAGTTAAAATGGCAAGATGTGAACTCAAAAT\nACAAGAAAGCAGTCAAGATGCCCGACATAACAAATGTGCATTAAAATGTAAGCCC\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/jlanga/exfi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:02:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}