{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "parent_header": [
          "BOVIDS"
        ],
        "type": "Text_excerpt",
        "value": "The yolov4 implementation of BOVIDS is based on the implementation by [taipingeric](https://github.com/taipingeric/yolo-v4-tf.keras). We added features like image augmentation and dealing with UTF-8 characters. Clearly, the whole bibliography *global/yolo-v4-tf.keras-master/* stays avaiable under the MIT License. \n\nParts of the prediction pipeline themselves can already be found in one of [our prior repositories](https://github.com/Klimroth/Video-Action-Classifier-for-African-Ungulates-in-Zoos).\n\nWe gained great support during data collection from the directors, curators and keepers of the participating zoos: K\u00f6niglicher Burgers Zoo Arnheim, Tierpark Berlin, Zoo Berlin, Zoo Vivarium Darmstadt, Zoo Dortmund, Zoo Duisburg, Zoo Frankfurt, Zoom Erlebniswelt Gelsenkirchen, Erlebnis-Zoo Hannover, Zoo Heidelberg, K\u00f6lner Zoo, Zoo Krefeld, Opel-Zoo Kronberg, Zoo Landau, Zoo Leipzig, Allwetterzoo M\u00fcnster, Zoo Neuwied, Zoo Osnabr\u00fcck, Zoo Schwerin, Der Gr\u00fcne Zoo Wuppertal. \n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 24.84,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License and citation",
        "parent_header": [
          "BOVIDS"
        ],
        "type": "Text_excerpt",
        "value": "Re-use, distribution and modification as well as extending contributions under the GPL-3.0 License are highly welcome. The whole bibliography *global/yolo-v4-tf.keras-master/*, based on the implementation by [taipingeric](https://github.com/taipingeric/yolo-v4-tf.keras) is avaiable under the MIT License. \n\nIf you use BOVIDS or parts of it, please consider citing the following publications:\n\nBOVIDS software package and an application:\n> G\u00fcbert, J., Hahn-Klimroth, M., & Dierkes, P. W. (2022). BOVIDS: A deep learning-based software package for pose estimation to evaluate nightly behavior and > its application to common elands (Tragelaphus oryx) in zoos. Ecology and Evolution, 12, e8701. https://doi.org/10.1002/ece3.8701 \n\nTechnical analysis of the deep learning prediction pipeline:\n>  Hahn\u2010Klimroth, M, Kapetanopoulos, T, G\u00fcbert, J, Dierkes, PW. Deep learning\u2010based pose estimation for African ungulates in zoos. \n>  Ecol Evol. 2021; 11: 6015\u2013 6032. https://doi.org/10.1002/ece3.7367\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Klimroth/BOVIDS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-14T07:13:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-13T19:09:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BOVIDS is an end-to-end deep learning based tool for posture estimation of ungulates in videos."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9907688840647577,
      "result": {
        "original_header": "BOVIDS",
        "type": "Text_excerpt",
        "value": "BOVIDS is an end-to-end deep learning based tool for posture estimation of ungulates in videos. It is the software presented and discussed in\n> G\u00fcbert, J., Hahn-Klimroth, M., & Dierkes, P. W. (2022). BOVIDS: A deep learning-based software package for pose estimation to evaluate nightly behavior and > its application to common elands (Tragelaphus oryx) in zoos. Ecology and Evolution, 12, e8701. https://doi.org/10.1002/ece3.8701  \nInside this contribution we explain the structure of BOVIDS and we highly recommend to read the methods section prior to the short instructions presented here as we assume that a potential user knows how the parts of BOVIDS interact with each other.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9815202086525728,
      "result": {
        "original_header": "Repair video files",
        "type": "Text_excerpt",
        "value": "It might happen that due to short drops in voltage a night consists of various parts or there are short sequences missing during a night. In order to make a realistic pose estimation over the whole observation time we need to make sure that all videos start and end at a known daytime and have a bitrate of 1fps. BOVIDS provides with *data_collection/video_processing.py* a collection of functions to concatenate multiple parts, to reduce the bitrate to 1fps and to fill in sequences of black frames into a video if some short sequences are missing. This program needs to be run in the video environment.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.860551504684811,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "In the end, the training script of the object detector *object_detection/training/training_yolov4.py* BOVIDS requires all images that should be part of the training and validation set in one folder and a .txt-file containing the annotations. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8527816248188868,
      "result": {
        "original_header": "Training of an initial object detector",
        "type": "Text_excerpt",
        "value": "The same script is then used to train an object detector. Take care of the model weights, if no valid weights are presented, it will transfer learn on imagenet weights. Transfer-learning from previously trained models is only possible if the number of classes (thus, the number of individuals that need to be distinguished) coincides. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9067706359307173,
      "result": {
        "original_header": "Training of the action classifiers",
        "type": "Text_excerpt",
        "value": "Use *action_classification/training/training_efficientnet.py* in order to train the four necessary action classifiers. It is possible to either finetune existing networks (input a compatible .h5 file as model weights) or to train on imagenet weights (choose 'imagenet' as model weights). Of course, the batch size and the number of epochs can be adjusted. BOVIDS does not support multiple gpu models, therefore, if multiple gpus are present, select which gpu shall be used. It is possible to train different networks on different gpus in parallel. \n\n### Offline hard example mining\nOnce first versions of the action classifiers are trained, those can be used to generate a uniformly distributed training set for the final classifiers. Therefore, multiple nights should be predicted (see below) and the outcome can be used to evaluate the action classifiers. Furthermore, it can be used to generate automatically an almost balanced training set over the whole observation time without too much manual work load.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9286654872144116,
      "result": {
        "original_header": "Data prediction and evaluation",
        "type": "Text_excerpt",
        "value": "The prediction pipeline is controlled by three scripts, namely *global/global_configuration.py*, *prediction/predict_csv.py*, *prediction/configuration.py*. The content of the global configuration is explained below, basically, it gives the possibility to store global information like the path to an object detector used for a specific enclosurecode and similar information. The local file *prediction/configuration.py* is used to configure the storage of the videos and the storage of the files that are created by BOVIDS per night. \nBefore explaining the prediction itself, we explain a few of the hidden features of BOVIDS that are necessary in order to use the prediction pipeline. As already described, BOVIDS can take multiple video streams per enclosure and puts them automatically together. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8721045274052158,
      "result": {
        "original_header": "Ordering video frames",
        "type": "Text_excerpt",
        "value": "Depending on the number of video streams and their resolution, the different input streams are put together differently (see figure). The counting of the streams is always from left to right, then from top to bot. If 3 or 5 streams are present, the 4th or 6th region will be a black frame.\n![Imagesize](images/imagesize.png)\nThe global_configuration.py contains the dictionary VIDEO_ORDER_PLACEMENT in which the keys are the enclosure_video_code or the enclosure_code and the values are a list of the video numbers of the corresponding streams ordering them by the desired occurrence. (example: 'oryx_fantasyzoo_2': [3, 1] would place videostream 3 first and videostream 1 second for this enclosure).\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8886351738281622,
      "result": {
        "original_header": "Adding black regions",
        "type": "Text_excerpt",
        "value": "In this context, it is possible to add \"black regions\" onto the produced outcome, thus regions that are recorded by multiple streams or regions that partly record different enclosures. Adding those black regions carefully improves the quality of the prediction significantly as the object detector is more likely to identify the correct individuals, those regions are somehow *disabled* for BOVIDS. To this end, the global configuration file contains the dictionary VIDEO_BLACK_REGIONS whose keys are again the enclosure_video_code or the enclosure_code. The values are lists of numpy-arrays containing the coordinates of the polygons that will be drawn black.\n![Image_Regions](images/blackregions.png) \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9898383857902116,
      "result": {
        "original_header": "Truncation",
        "type": "Text_excerpt",
        "value": "As the classification of images suffering from severe truncation effects is fairly difficult, BOVIDS provides a \"truncation\" parameter that allows to withdraw bounding boxes very close to the image border. To this end, for each night that should be predicted by BOVIDS, the user can define four boundaries (pixel from top and from left) such that bounding boxes being completely inside those regions are treated differently: one can choose in the global configuration file (see below) which behaviour class will be given to those images (standard: out of view) if the truncation phase is short, medium or long. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9806490348660297,
      "result": {
        "original_header": "Post-Processing rules",
        "type": "Text_excerpt",
        "value": "One very important feature of BOVIDS is the post-processing (see a detailed discussion in the publications). To put it short: depending on the species it might be very unrealistic to observe very short phases of a certain behaviour - in this case, it is well possible that such short phases are due to short misclassifications that can be corrected. The correct choice of the post-processing rules is highly delicate and will be discussed later in detail (--> paragraph *evaluation*). The global configuration contains a dictionary POST_PROCESSING_RULES (keys: name, values: dictionaries) defining the set of rules (multiple such sets can be stored and the desired one can be chosen during prediction). The rolling average entries define the order of the rolling averages, the other entries dismiss phases with length (time-intervals) up to the number given by the rules (for instance, AAALAA will be converted to AAAAAA if 'ALA' > 0.). We denote 'A = standing (active)', 'L = lying-head up (lying)' and 'S = lying - head down (rem sleep position)', 'O = out of view'. Finally, the truncation parameters can be found here as well. Finally, since version 1.1, the global configuration contains a dictionary PP_RULE_DICT in which the total processing rules and the binary processing rules per individual or species need to be written down.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9680706759511066,
      "result": {
        "original_header": "Storage and modification of the neural networks",
        "type": "Text_excerpt",
        "value": "It is supposed that there are two different folders for the object detection networks and the action classification networks. Suppose, the paths are P(OD) and P(AC) respectively. The user might want to create a subfolder \"binary\" inside of P(AC) in order to distinguish between the total and the binary classification task. P(OD) and P(AC) need to be put into *prediction/configuration.py*, lines 84 and 83. Furthermore, line 82 contains DATA_STORAGE (the path to the video structure as discussed above).\nFinally, *global/global_configuration.py* contains four dictionaries (BEHAVIOR_NETWORK_SINGLE_FRAME_GLOBAL_BINARY, BEHAVIOR_NETWORK_JOINT_GLOBAL_BINARY, BEHAVIOR_NETWORK_SINGLE_FRAME_GLOBAL, BEHAVIOR_NETWORK_JOINT_GLOBAL) containing the relative path to the action classification networks (starting from P(AC)). The keys of the dictionaries need to be an individual_code. The function *get_behaviornetwork()* can be modified if few standard networks shall be used for a broad class of different individuals. Similarily, BASE_OD_NETWORK_GLOBAL and OD_NETWORK_LABELS_GLOBAL contain the relative path starting from P(OD) to the object detection network and, respectively, the corresponding label file (.txt). Those values are indexed by either a species, a species_zoo-code, an enclosure_code or an enclosure_individual_code. *get_object_detection_network()* might be modified if required. In the context of choosing an object detection network, MIN_DETECTION_SCORE and IOU_THRESHOLD are indexed by an enclosure_code and contain the iou_threshold / minimum detection score during object detection. If an enclosure is missing in this dictionary, the standard values of iou = 0.5 and score = 0.95 are applied. We suggest to decrease iou and score if multiple individuals are present in one enclosure.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952813831582149,
      "result": {
        "original_header": "Additional global parameters",
        "type": "Text_excerpt",
        "value": "*global/global_configuration.py* allows to modify the global starting time and ending time of a video. If, for instance, this is set to 17 and 07 (5 p.m. and 7 a.m.), then shorter videos (like 6 p.m. to 5 a.m.) are evaluated in such a way that the first hour and the last two hours are set to \"out of view\". \n \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9277620860656121,
      "result": {
        "original_header": "Prediction",
        "type": "Text_excerpt",
        "value": "To finally predict new nights, we require *prediction/predict_csv.py*, *prediction/configuration.py* and a prediction-csv file containing the information which nights should be predicted. Let us start with the latter. It is similar to the csv files discussed before but contains additional columns for the starting time and ending time, and the borders of truncated regions (as discussed earlier). If no truncation should be applied, top and left need to be set to zero and right as well as bottom to a large number (e.g. 2000). An example can be found here.\n![Image_prediction](images/prediction_csv.png) \nIn *prediction/predict_csv.py*, variable INPUT_CSV_FILE contains the full path to the created prediction-csv file. Furthermore, five variables containing different paths need to be adjusted. Recall at this point that BOVIDS first cuts out single frames from the video files, then applies object detection and finally uses the action classifier. TMP_STORAGE_IMAGES is thought to be a temporary data storage in which the images can be stored while TMP_STORAGE_CUTOUT contains the images after the object detection phase. **Make sure, that the temporary storage is large enough for the images of all your video files conducted in the prediction step!** As the object detection part is the most time-consuming part, BOVIDS provides the functionality to store the temporary cut-out images (FINAL_STORAGE_CUTOUT) such that they can, in principle, be used again. Further, those images can be used to check whether object detection (and later, action classification) work well. Finally, in \nFINAL_STORAGE_PREDICTION_FILES, stores .xslx files, images and .csv files that contain the actual prediction per night, those files are presented later on. Last but not least, BOVIDS creates a logfile containing all written outputs of the console and saves it in the folder LOGGING_FILES. Here, and everywhere, make sure that your folder-path variables end with a \"/\", otherwise, BOVIDS will behave unexpected. \nFurthermore, a user can configure which steps of the prediction process should be skipped. If, for instance, the cut-out images already exist and a new action classifier should be applied, then TMP_STORAGE_CUTOUT need to be set to the actual location of the present images and image creation and object detection can be skipped. Analogously, it might be tempting to try different post-processing rules, in that case only the post-processing step can be applied. Attention: the boolean variable False here means that a step is conducted, so that the standard configuration is: everything False. \nPlease realise that the following requirements need to be satisfied:\n* If action classification is conducted, TMP_STORAGE_CUTOUT needs to contain the corresponding images.\n* if post-processing is applied, FINAL_STORAGE_PREDICTION_FILES needs the output generated by the action classification step (folder raw_csv), furthermore, FINAL_STORAGE_CUTOUT needs to contain the .txt documents containing the position of each bounding box created during object detection. \nIf the configuration is complete, save the document and open *prediction/predict_csv.py*. First, adjust the following variables.\n* AI_LIBRARY_LOCAL: path to the folder prediction of this repository (e.g. '/home/user/bovids/prediction/')\n* AI_LIBRARY_GLOBAL: path to the folder global of this repository (e.g. '/home/mnt/fancy_nas/bovids/global/')\n* YOLO_LIBRARY: path to the yolov4 library of this repository (e.g. '/home/mnt/fancy_nas/bovids/global/yolo-v4-tf.keras-master/')  \nIf multiple GPUs are present, decide which GPU is used for prediction (multiple processes on different GPUs can be conducted in parallel) by setting GPU_TO_USE accordingly. If only one GPU is present, choose '0'. Save the document and run it (e.g. in the spyder console or via the terminal). \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9883564138884822,
      "result": {
        "original_header": "Evaluation",
        "type": "Text_excerpt",
        "value": "As discussed in detail in the corresponding contributions, there are various possibilities to ensure accurate predictions and validate the current system. The first one corresponds to the object detector.\n* od density\n  * In FINAL_STORAGE_PREDICTION_FILES/species/zoo/individual/ we find an .xlsx sheet showing the percentage of detections per 30 minutes of a video. If this percentage is low, one needs to check if the animal is really out of view or if the object detector fails.  \nFurthermore, one can compare the prediction of BOVIDS on the manually annotated videos. It is also fairly important to check whether misclassifications stem from poor choices of the neural networks or from a suboptimal choice of post-processing rules.\n* post-processing check and accuracy\n  * *evaluation/accuracy_pp_rules/main.py* is a small script that can be used to analyse the performance of the post-processing rules. It comes with *evaluation/accuracy_pp_rules/configuration.py* which contains similar variables as the global configuration (post-processing rules) and need to be modified in advance. The script allows to compare post-processed real data with not post-processed real data (COMPARE_REAL_WITH_REALPP = True) such that it is easy to measure the error occuring by dismissing short phases if a human labels the video (this is some kind of a sytematical error). \n  * Furthermore, it compares the prediction of BOVIDS with the real data and the post-processed real data (COMPARE_REAL_WITH_AI = True, COMPARE_REALPP_WITH_AI = True). For this, it requires the prediction of BOVIDS (FINAL_STORAGE_PREDICTION_FILES) as well as the manually annotated videos as a boris-csv file (as described above, *action classification storage*). It outputs an xlsx-file per individual containing the accuracy, f-score as well as the deviation of the number of phases per night. Furthermore, it shows a confusion matrix per night as well as phases which are misclassified and last at least 4 time-intervals (the number 4 can be easily adjusted by setting ERROR_TOLERANCE_INTERVALS to a different value). \n\nA further possibility to first evaluate the performance of BOVIDS and second to get a first impression of the activity budget per night, is a graphical representation of the corresponding night.\n* Those images will be automatically produced by BOVIDS during post-processing and can be found in FINAL_STORAGE_PREDICTION_FILES/species/zoo/individual/total/final/. It can be used to see whether the animal is out of view for long periods of time and if there is an unexpected flattering between activities. If so, and the user is not sure that the neural networks already perform very decently, such data might be suspicious and needs to be checked.\n  ![images/example_activity_budget.png](images/example_activity_budget.png)  \nFinally, BOVIDS produces an xlsx-file per night (stored in FINAL_STORAGE_PREDICTION_FILES/species/zoo/individual/total/final/) with the final prediction as well as statistical key quantities (like the percentages found in the activity budget). This file contains also a sheet in which each phase (a subsequent series of time-intervals of the same activity) is listed. \n* The cut-out images stored in FINAL_STORAGE_CUTOUT/individual_code/yyyy-mm-dd/multiple_frame/ are named after the time-interval they are correspondent to (up to a shift of 1). One can easily scroll through such a folder and detect manually the moment an activity event ends and a new event starts. This can be compared with the phase list of the corresponding xlsx-file and one can check manually very fast how many errors appear on unseen data. Of course, this step is only conducted while figuring out if the neural networks (action classifiers) need more training data or if they are already decent and can be seen as a *randomized sampling check.*\n![images/example_xlsx_night.png](images/example_xlsx_night.png)  \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9336744067859737,
      "result": {
        "original_header": "Presentation",
        "type": "Text_excerpt",
        "value": "There are two additional tools contained in BOVIDS that allow to present the data for one specific individual (*presentation/get_individual_overview.py*) and for multiple individuals of one species (*presentation/get_species_overview.py*) respectively. Both scripts require the structure provided by FINAL_STORAGE_PREDICTION_FILES as an input, furthermore, one can choose the individuals which will be contained in the merged data. While merging the data, the script allows to add certain columns of information (like an anonymised individual code or the kind of stabling) in order to make data analysis with standard statistic tools like R more accessible. Therefore, one needs to create an **individual_info.csv**-file first, an example can be found in *examples/*. \nThe individual info file has the columns Cod_long,\tCod_short,\tCod_ssn,\tspecies,\tage,\tsex,\tzoo,\tstabling,\tstable with the following meaning.\n* Cod_long: individual code\n* Cod_short: a probably used shorter (unique) version of the individual code\n* Cod_ssn: individual code in scientific notation, i.e. this might be used to anonymise data\n* species, age, sex, zoo: self-explaining\n* stabling: how many individuals are in the corresponding enclosure?\n* stable: are there different species in the same (larger) area that might effect the nightly behaviour? \nCod_long and Cod_ssn are necessary for the script to work, the other parameters are variable and can be adjusted just by creating a different csv-file providing the user a high degree of freedom. \nGiven this file and the predicted data by BOVIDS stored in FINAL_STORAGE_PREDICTION_FILES, both scripts represent the data as a graphic as follows: \n\nThey furthermore provide an xlsx-sheet containing the most important statistical key quantitites and some sheets that might be useful to work with in R / scikit-learn or SPSS. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Klimroth/BOVIDS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/Inference.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/Inference.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/Inference-colab.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/Inference-colab.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/train.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/global/yolo-v4-tf.keras-master/notebook/train.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Klimroth/BOVIDS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Klimroth/BOVIDS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BOVIDS"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_od_evaluate.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_ac_evaluate.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/imagesize.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/blackregions.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_video_merge.jpg"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/prediction_csv.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_activity_budget.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_xlsx_night.png"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/images/example_timeline_over_night.jpg"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BOVIDS"
        ],
        "type": "Text_excerpt",
        "value": "We suggest installing the necessary packages using anaconda as it will control the versions for you. \n>conda activate\n>\n>conda update conda anaconda\n>\n>conda create -n \"bovids\" python==3.8\n>\n>conda activate bovids\n>\n>conda install tensorflow-gpu==2.2 spyder keras openpyxl matplotlib tqdm pandas\n>\n>conda install -c conda-forge opencv efficientnet scikit-learn imgaug\n\nIf you are on linux, make sure to have the following packages installed.\n> libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6\n\nSome parts of BOVIDS (i.e. if you want to use the tools for editing video files) require moviepy. As it is fairly likely to create a version clash between opencv, ffmpeg and moviepy, we suggest to create a different environment in that case. If not stated explicitely, the scripts provided by BOVIDS shall be run inside the bovids-environment.\n\n>conda create -n \"video\" python==3.7\n>\n>conda activate video\n>\n>conda install spyder openpyxl matplotlib tqdm pandas\n>\n>conda install -c conda-forge moviepy opencv ffmpeg\n\nFinally, the third party software (MIT license) [labelImg by tzutalin](https://github.com/tzutalin/labelImg) might be installed in a third environment. Detailed instructions can be found at the corresponding github repository.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Identifiers and organisation",
        "parent_header": [
          "BOVIDS",
          "Data preparation and organisation"
        ],
        "type": "Text_excerpt",
        "value": "BOVIDS requires a very specific data organisation to work flawless and comfortably. To this end, we suppose that we observe individuals of a specific **species** in multiple **zoos** in different **enclosures**. Each enclosure might be filmed by 1...n **video-streams** and, given a specific **date**, there are 1...m **individuals** in the enclosure. We suppose a date to have format YYYY-MM-DD and all names are not allowed to contain underscores. Then we define the following identifiers:\n\n>*enclosurecode*: SPECIESNAME_ZOONAME_ENCLOSURENUMBER\n>\n>*individualcode*: SPECIESNAME_ZOONAME_INDIVIDUALNUMBER\n\nIf those identifiers are not unique over the all observation time, for instance, if video streams break or if individuals get stalled differently from time to time, the following identifiers are unique per night. A **night** is a collection of videos recording the same enclosure at a specific date with a starting time (standard 5 p.m.) and an ending time (standard 7 a.m.), these values are variable.\n\n>*enclosureindividualcode*: SPECIESNAME_ZOONAME_ENCLOSURENUMBER_INDIVIDUALNUMBER1+INDIVIDUALNUMBER2+...+INDIVIDUALNUMBERM\n>\n>*enclosurevideocode*: SPECIESNAME_ZOONAME_ENCLOSURENUMBER\\*VIDEONUMBER1+VIDEONUMBER2+...+VIDEONUMBERN\n\nWhile this seems highly specific on the first glance, the system might be tricked to be used for free-range obervations as well. A species could then for instance be a localisation identifier, there is only one (virtual) enclosure and one videostream. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "video storage",
        "parent_header": [
          "BOVIDS",
          "Data preparation and organisation",
          "Identifiers and organisation"
        ],
        "type": "Text_excerpt",
        "value": "Furthermore, BOVIDS requires the videos (.avi format, 1fps) to be stored according to the following scheme in which the path including DATA_STORAGE is variable:\nDATA_STORAGE/SPECIESNAME/ZOONAME/Videos/SPECIES_VIDEONUMBER/YYYY-MM-DD_SPECIESNAME_ZOONAME_VIDEONUMBER.avi\n\nNotice that the bitrate of 1fps is necessary in order to make BOVIDS work in the current version. The program code would need to be modified at just a few places to make BOVIDS work on videos with higher framerate.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "annotation storage",
        "parent_header": [
          "BOVIDS",
          "Data preparation and organisation",
          "Identifiers and organisation"
        ],
        "type": "Text_excerpt",
        "value": "There are two types of annotations. It will be explained in a later section how the necessary files can be created by BOVIDS.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "action classification storage",
        "parent_header": [
          "BOVIDS",
          "Data preparation and organisation",
          "Identifiers and organisation",
          "annotation storage"
        ],
        "type": "Text_excerpt",
        "value": "First, there are annotations of the nights (video annotations) which are assumed to be created with [BORIS](http://www.boris.unito.it/), Version 7.7.3 in which the *observation list* is exported as an xlsx-file called **boris-file**. Those boris-files need to be stored as follows where again, DATA_STORAGE is variable. (*Auswertung and Boris-Dateien are german expressions for evaluation and boris-datafile, this can be easily adjusted inside the code or just be used as dummy expressions*)\n\nDATA_STORAGE/Auswertung/SPECIESNAME/ZOONAME/Auswertung/BORIS_KI/Boris-Dateien/YYYY-MM-DD_ENCLOSURECODE.xlsx\n\nBOVIDS contains a script *action_classification/preparation/boris_to_csv.py* to convert those xlsx-files into machine readable .csv files (called **boris-csv-files**) per individual per night. Those boris-csv-files need to be stored in \n\nDATA_STORAGE/Auswertung/SPECIESNAME/ZOONAME/Auswertung/BORIS_KI/csv-Dateien/YYYY-MM-DD_ENCLOSURECODE_SUM-7s_pred.csv \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "object detection storage",
        "parent_header": [
          "BOVIDS",
          "Data preparation and organisation",
          "Identifiers and organisation",
          "annotation storage"
        ],
        "type": "Text_excerpt",
        "value": "The second type of annotations stems from the annotation of single images for training the object detector. These are single images and corresponding label files created by labelImg in the following structure in which again ANNOTATION_STORAGE is variable (*Bilder is the german word for pictures/images and can be easily adapted in the code*).\n\nImages: ANNOTATION_STORAGE/Bilder/SPECIESNAME/ZOONAME/ENCLOSURENUMBER/imagename.jpg\n\nCorresponding Labels: ANNOTATION_STORAGE/Label/SPECIESNAME/ZOONAME/ENCLOSURENUMBER/imagename.xml\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generating the training set",
        "parent_header": [
          "BOVIDS",
          "Object detection",
          "Training"
        ],
        "type": "Text_excerpt",
        "value": "BOVIDS provides *object_detection/training/prepare_data_od.py* which contains functions to create such a folder out of the previously described structure. It can be used to merge the data of various enclosures (for instance, if an object detector for many enclosures that only contain one individual each needs to be trained). Further, it is possible to rename the labels that were previously given. Once all images and, respectively, labels, are stored inside the required structure, *object_detection/training/training_yolov4.py* is be used to create the required label-text file. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare a training-csv file",
        "parent_header": [
          "BOVIDS",
          "Object detection",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "A so-called **training-csv-file** is a comma-separated text-csv with headers \"date\", \"species\", \"enclosure number\", \"video numbers\", \"individual numbers\", each line contains one night of a specific enclosure to which a boris-csv-file as an annotation exists and whose data should be part of the training set. Recall that date has the form YYYY-MM-DD, the enclosure number is one integer and videonumbers and individualnumbers are either an integer or a concatenation like 1;3;4 (meaning that video with number 1, with number 3 and with number 4 will be cut next to each other and used as one stream to the enclosure). Those .csv-files can be conveniently created with OpenOffice/LibreOffice. An example can be found in *examples/training_file.csv*. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Annotate the video files with BORIS",
        "parent_header": [
          "BOVIDS",
          "Action classification",
          "Preparation"
        ],
        "type": "Text_excerpt",
        "value": "In order to generate an initial training set, some nights need to be manually labelled and we propose to use BORIS (see action classification storage). It might be helpful to merge various video streams side to side in one video stream if many nights / enclosures / individuals shall be annotated at once. To this end, BOVIDS provides *action_classification/preparation/merge_video_files.py* which needs to be run in the video environment. Recall that the **boris-files** (.xlsx) need to be converted into **boris-csv-files** as described above. \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Create a balanced training set",
        "parent_header": [
          "BOVIDS",
          "Action classification",
          "Training of an initial network"
        ],
        "type": "Text_excerpt",
        "value": "Based on the previously created csv-trainings-file, *action_classification/training/generate_training_images.py* contains the functionality to produce balanced training images for both action classification streams (single frame and four-frame encoded). Recall that, before running the script,  well-trained object detectors are necessary. The output are folders containing images of classes 0 (standing), 1 (lying - head up) and 2 (lying - head down). Of course, BOVIDS can be used for estimating any three poses independently of the name. The code is furthermore straight forward to generalise to a different number of classes, but some programming is necessary.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preparation and validation split",
        "parent_header": [
          "BOVIDS",
          "Action classification",
          "Training of an initial network"
        ],
        "type": "Text_excerpt",
        "value": "BOVIDS provides some functions for preparing the necessary datasets for the total and the binary classification task in *action_classification/training/prepare_data_ac.py*. More precisely, images from different training sets (thus, folders containing 0/, 1/, 2/) can be merged, single classes can be randomly upsampled if the data is not sufficiently balanced and different classes can be merged. Furthermore, it provides the functionality to randomly select a subset of images as a validation set. At this point, a user should have 8 folders in total:\n**multiple_frame_total:** train, validation\n**multiple_frame_binary:** train, validation\n**single_frame_total:** train, validation\n**single_frame_binary:** train, validation\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9991393666165875,
      "result": {
        "original_header": "Prediction",
        "type": "Text_excerpt",
        "value": "If the configuration is complete, save the document and open *prediction/predict_csv.py*. First, adjust the following variables.\n* AI_LIBRARY_LOCAL: path to the folder prediction of this repository (e.g. '/home/user/bovids/prediction/')\n* AI_LIBRARY_GLOBAL: path to the folder global of this repository (e.g. '/home/mnt/fancy_nas/bovids/global/')\n* YOLO_LIBRARY: path to the yolov4 library of this repository (e.g. '/home/mnt/fancy_nas/bovids/global/yolo-v4-tf.keras-master/')  \nIf multiple GPUs are present, decide which GPU is used for prediction (multiple processes on different GPUs can be conducted in parallel) by setting GPU_TO_USE accordingly. If only one GPU is present, choose '0'. Save the document and run it (e.g. in the spyder console or via the terminal). \n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Klimroth/BOVIDS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License and citation",
        "parent_header": [
          "BOVIDS"
        ],
        "type": "Text_excerpt",
        "value": "Re-use, distribution and modification as well as extending contributions under the GPL-3.0 License are highly welcome. The whole bibliography *global/yolo-v4-tf.keras-master/*, based on the implementation by [taipingeric](https://github.com/taipingeric/yolo-v4-tf.keras) is avaiable under the MIT License. \n\nIf you use BOVIDS or parts of it, please consider citing the following publications:\n\nBOVIDS software package and an application:\n> G\u00fcbert, J., Hahn-Klimroth, M., & Dierkes, P. W. (2022). BOVIDS: A deep learning-based software package for pose estimation to evaluate nightly behavior and > its application to common elands (Tragelaphus oryx) in zoos. Ecology and Evolution, 12, e8701. https://doi.org/10.1002/ece3.8701 \n\nTechnical analysis of the deep learning prediction pipeline:\n>  Hahn\u2010Klimroth, M, Kapetanopoulos, T, G\u00fcbert, J, Dierkes, PW. Deep learning\u2010based pose estimation for African ungulates in zoos. \n>  Ecol Evol. 2021; 11: 6015\u2013 6032. https://doi.org/10.1002/ece3.7367\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BOVIDS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Klimroth"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 913555,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 586765,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Klimroth",
          "type": "User"
        },
        "date_created": "2022-02-13T19:14:29Z",
        "date_published": "2022-02-18T17:00:04Z",
        "description": "**Full Changelog**: https://github.com/Klimroth/BOVIDS/commits/v0.1\r\n\r\n\r\n\r\n[![DOI](https://zenodo.org/badge/367280557.svg)](https://zenodo.org/badge/latestdoi/367280557)\r\n\r\n",
        "html_url": "https://github.com/Klimroth/BOVIDS/releases/tag/v0.1",
        "name": "BOVIDSv0.1",
        "release_id": 59925567,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/Klimroth/BOVIDS/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Klimroth/BOVIDS/releases/59925567",
        "value": "https://api.github.com/repos/Klimroth/BOVIDS/releases/59925567",
        "zipball_url": "https://api.github.com/repos/Klimroth/BOVIDS/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:18:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Generation of automatically generated labels",
        "parent_header": [
          "BOVIDS",
          "Object detection",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "Once a designated object detector is trained, this object detector needs to be evaluated and, if necessary, finetuned. To this end, *object_detection/ohem/generate_annotation_files.py* can be used to extract images from a given set of nights and to apply the designated object detectors to create automatically generated label files. As an input, the script requires the same kind of .csv-files as described earlier (the so-called *training-csv-files*). We suggest to sample images from multiple videos, equally distributed over the observation period in order to make sure that varying light conditions or camera angles become negligible.\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Evaluation of those labels",
        "parent_header": [
          "BOVIDS",
          "Object detection",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "Similarily as in the action classification case, those labels can now be evaluated by *object_detection/ohem/evaluate_bounding_boxes.py*. This time, the user evaluates the bounding boxes drawn by the object detector as *good*, *medium*, *bad* and - if individuals need to be distinguished - *swapped*. Good images are those that could potentially be used for training a fine-tuned network. Medium are those images that are actually quite good but not optimal (like, a hoof is truncated or a part of an ear). If the quality is good enough (say, less then 5% of the bounding boxes are bad and at least 50% are good), then the network can be already used (those numbers clearly depend on the actual data and should not be taken as granted). The same python script is now used to store the good and bad images and their corresponding labels such that the bad images can now be manually annotated again (see above).\n\n![evaluate_od](images/example_od_evaluate.png)\n(From left to right: Good bounding boxes in which individuals were detected correctly and the bounding boxes are drawn smoothely (green), mediocre bounding boxen in which individuals were detected correctly but the boxes are not optimal but almost (yellow), bad bounding boxes if one individual is, for instance, not found or only small parts of an individual are detected (bad) and finally, swapped bounding boxes in which individuals are misclassified.)\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Re-training the network",
        "parent_header": [
          "BOVIDS",
          "Object detection",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "After manual re-annotation, *object_detection/training/prepare_data_od.py* is used to create a new dataset out of the old labels, the good labels and the freshly annotated labels and images. Now, the network is trained again as described above. In principle, the whole procedure can be iterated until the quality is sufficiently high.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Evaluate the prediction",
        "parent_header": [
          "BOVIDS",
          "Action classification",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "*action_classification/ohem/hard_example_mining_efficientnet.py* selects based on the prediction a uniformly at random chosen subset of images (single frame and multiple frame) with their corresponding labels (of the current action classifier). It is possible to choose whether uniformly at random sampled images should be drawn or if explicitely **hard examples** should be minded. Hard examples are images refering to time-intervals in which the predictions of the single frame and multiple frame action classifiers are not coherent. \n\nNow, *action_classification/ohem/efficientnet_evaluate_examples.py* can be used to display the single-frame and multiple-frame images next to each other and show the prediction given through the prediction system as a color code. A user can now give his own label. \n\n![evaluate_ac](images/example_ac_evaluate.png)\n(Color codes exist for each activity class, on the l.h.s. the label by the single frame classifier can be found and on the r.h.s. the one by the multiple frame classifier. The inner color bars are the label given by the user.)\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Retrain the action classifiers",
        "parent_header": [
          "BOVIDS",
          "Action classification",
          "Offline hard example mining"
        ],
        "type": "Text_excerpt",
        "value": "In the end, the script can be used to extract statistical values like the accuracy and, more importantly, to move the images to their real classes. Therefore, we are left with a (not necessarily strictly balanced) set of images stemming from the whole observation time - an almost perfect training set. This training set is now used to fine-tune the previous action classifiers (like in the training step described above).\n\n"
      },
      "source": "https://raw.githubusercontent.com/Klimroth/BOVIDS/main/README.md",
      "technique": "header_analysis"
    }
  ]
}