{
  "application_domain": [
    {
      "confidence": 11.0,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlesdavid/JEDi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-29T02:29:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-08T17:56:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JEDi: Java Essential Dynamics Inspector"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.998931883762684,
      "result": {
        "original_header": "Now in release 1.0",
        "type": "Text_excerpt",
        "value": "* JEDi is a powerful tool for inspecting the dynamics of proteins from trajectories derived from MD or Geometric simulations, or NMA.\n* All JEDi features are controlled via an input file containing a list of KEY=VALUE pairs\n* There are 5 Levels of Coarse-Graining:\n\t* All-Atom by residue\n\t* Heavy-Atom by residue\n\t* Back-Bone by residue\n\t* Alpha-Carbon by residue\n\t* Atom List\n* There are 4 Types of PCA:\n\t* Hierarchical Cartesian\n\t* Direct Cartesian\n\t* Distance-Pair\n\t* Residue Pair Interaction\n* There are 3 PCA Models:\n\t* Covariance\n\t* Correlation\n\t* Partial-Correlation\n* There is the option to perform Outlier Processing:\n\t* Outliers Removal is perfomed at a specified cutoff\n\t* Outliers Selection is perfomed at a specified cutoff\n\t* The results of outlier removal and selection are compared\n* There is the option to perform Sparsification of the Correlation and Partial Correlation Matrices:\n\t* Separate cutoffs are provided for each matrix\n\t* When both Correlation and Partial Correlation models are selected, an adjacency matrix is provided to help identify activator and suppressor variables\n\t* The results of sparse and non-sparse analyses are compared\n* All JEDi output is provided as high quality PNG images for immediate inspection:\n\t* PCs and DVPs\n\t* Square Modes\n\t* Scree Plots\n\t* Variable statistics\n\t* MSA scores\n\t* Eigenvector Collectivity\n\t* Iterated RMSIPs with comparison to random and with Z-scores for significance\n* Kernel PCA post-processing of the reduced data is available, using an assortment of kernels including:\n     * Mutual Information\n     * Neural-Net (Tanh)\n     * Gaussian\n     * Log\n     * Circular\n     * Mahalanobis\n     * Euclidean\n     * Polynomial Degrees 2, 3, 4, and cross XY\n     * Linear\n* JEDi uses subspace analysis to assess the similarity of essential vector spaces defined by each dynamical method:\n     * Inter-Model within each type of PCA\n     * Inter-Type when subsets yield subspaces with matching dimensions\n* JEDi computes the Free Energy of a trajectory from two PCs (normed projections) so that a FE surface can be constructed.\n* JEDi produces PDB frames that capture the PCA modes and script files for viewing those frames in PyMol(TM) as movies:\n     * Individual modes\n     * The superposition of the Top Essential Modes\n* For each JEDi run, a comprehensive log file is generated with time stamp recoding the parameters and key results of each analysis\n \n"
      },
      "source": "https://raw.githubusercontent.com/charlesdavid/JEDi/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.919868706615726,
      "result": {
        "original_header": "https://github.com/charlesdavid/JEDi",
        "type": "Text_excerpt",
        "value": "* Please report bugs by submitting a new issue tagged with BUG:  \n     * Be sure to provide enough data to reproduce the error  \n     * Include JED/JEDi input files, JED/JEDi errors, and associated Java stack traces   \n* Please suggest new features by submitting a new issue tagged with NEW FEATURE or ENHANCEMENT \n* Please contact me if you wish to become a collaborator on this software: \n* Check out this link for a demonstration video for using JEDi: \n"
      },
      "source": "https://raw.githubusercontent.com/charlesdavid/JEDi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlesdavid/JEDi/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlesdavid/JEDi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/charlesdavid/JEDi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "charlesdavid/JEDi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/charlesdavid/JEDi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9993797093916,
      "result": {
        "original_header": "https://github.com/charlesdavid/JEDi",
        "type": "Text_excerpt",
        "value": "  * https://www.youtube.com/watch?v=3I08oGQShwg \n"
      },
      "source": "https://raw.githubusercontent.com/charlesdavid/JEDi/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/charlesdavid/JEDi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "essential-dynamics, free-energy-surface, pca, pca-mode-visualization, principal-angles, rmsip, subspace-analysis"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JEDi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "charlesdavid"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 1313319,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlesdavid/JEDi/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:47:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}