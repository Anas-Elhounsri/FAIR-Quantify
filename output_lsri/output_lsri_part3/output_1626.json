{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TGatter/LazyB"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-23T14:32:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-13T23:58:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Economic Genome Assembly from Low Coverage Illumina and Nanopore Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Lazy B"
        ],
        "type": "Text_excerpt",
        "value": "This is a preliminary version of the tool under rapid development.\n\nGatter, Thomas, et al. \"Economic genome assembly from low coverage Illumina and Nanopore data.\" 20th International Workshop on Algorithms in Bioinformatics (WABI 2020). Schloss Dagstuhl-Leibniz-Zentrum f\u00fcr Informatik, 2020.\n\nPlease contact us with any issues and suggestions.\n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.934695971696853,
      "result": {
        "original_header": "MuCHSALSA",
        "type": "Text_excerpt",
        "value": "For an efficient implementation of this prototype please visit: https://github.com/0x002A/MuCHSALSA/\n \n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8963603116642721,
      "result": {
        "original_header": "Lazy B",
        "type": "Text_excerpt",
        "value": "The Bradypus is a lazy but very effective animal. \n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TGatter/LazyB/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TGatter/LazyB/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TGatter/LazyB"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MuCHSALSA"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TGatter/LazyB/master/lazyB_pipeline.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TGatter/LazyB/raw/master/lazy_sloth.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9913137417663882,
      "result": {
        "original_header": "Lazy B",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/TGatter/LazyB/raw/master/lazy_sloth.png?raw=true\" width=\"350\" height=\"350\" title=\"A cute sloth.\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TGatter/LazyB/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LazyB"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TGatter"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 119597,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3240,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Lazy B"
        ],
        "type": "Text_excerpt",
        "value": "Following tools must be installed:\n\n- jellyfish 2\n- bbduk\n- Abyss 2 (using 'abyss-pe')\n- minimap2\n- modified version of racon (racon_mod in this project, compiled for generic linux)\n\n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:40:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Lazy B"
        ],
        "type": "Text_excerpt",
        "value": "call the script lazyB_pipeline.sh as follows:\n\n```\n/path/lazyB\\_pipeline.sh \\[k-mer-size-filter\\] \\[k-mer-size-assembly\\] \\[name\\] \\[illumina-inputfile-1\\] \\[illumina-inputfile-2\\]] \\[nanopore-inputfile\\] \\[output-folder\\]\n\n```\n\nexample:\n\n```\n/path/lazyB\\_pipeline.sh 50 90 Scerevisiae illumina\\_paired\\_end\\_1.fa illumina\\_paired\\_end\\_2.fa nanopore\\_data.fastq output-folder\n```\n\nNote:\nParts of the pipeline run on 8 cores. To change the number of available cores, set the value manually in lazyB\\_pipeline.sh.\n\n\\[k-mer-size-filter\\] specifies the k-mer size for k-mer counting in raw illumina data. Reads with highly abundant k-mers are removed from the data. Starting at k=50 is recommended.\n\n\\[k-mer-size-assembly\\] specifies the k-mer size during illumina assembly (here using Abyss). Starting at k=90 is recommended.\n\nComment out the following line in lazyB\\_pipeline.sh to disable the experimental polishing step.\n\n```\n$SCRIPTPATH/racon_prokrast -u -t $CORES $TMP/temp_1.query.fa $TMP/temp_1.align.paf $TMP/temp_1.target.fa > $OUT/03.assembly.fa\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/TGatter/LazyB/master/README.md",
      "technique": "header_analysis"
    }
  ]
}