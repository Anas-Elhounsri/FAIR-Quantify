{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wgohome/plants-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-02T16:36:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-14T18:57:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This project is an automated pipeline to generate annotated gene expression atlases for kingdoms of life"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9934296596360207,
      "result": {
        "original_header": "LSTrAP-Kingdom: an automated pipeline to generate annotated gene expression atlases for kingdoms of life",
        "type": "Text_excerpt",
        "value": "This repository is found in [this Github Repository](https://github.com/wirriamm/plants-pipeline), with an accompanying paper found [here](http://dx.doi.org/10.1093/bioinformatics/btab168) and [preprint version here](https://www.biorxiv.org/content/10.1101/2021.01.23.427930v1.full). Do create pull requests for issues/bugs and feature requests. [Contact me](mailto:will0046@e.ntu.edu.sg) for feedback or reporting bugs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wirriamm/plants-pipeline/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wirriamm/plants-pipeline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/LSTrAP_Kingdom_benchmark.ipynb"
      },
      "source": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/LSTrAP_Kingdom_benchmark.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wgohome/plants-pipeline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wgohome/plants-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LSTrAP-Kingdom: an automated pipeline to generate annotated gene expression atlases for kingdoms of life"
      },
      "source": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/config/setup_lin.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/config/setup_mac.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/download/bash_download_template.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/download/min_bash_download_template.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Guides",
        "type": "Text_excerpt",
        "value": "[**A. First local setup of the pipeline**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/setup.md)\n\n- This segment only needs to be implemented at the first setup of this repository on your local machine/server.\n\n[**B. Initialization for each session**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/initialize.md)\n\n- These commands need to be run everytime the pipeline is accessed from a new terminal session. They will load the python environment with the installed packages, and add ascp and kallisto commands to the global environment $PATH. If kallisto or ascp(Aspera CLI) is not downloaded, they will also be downloaded.\n\n[**C & D. Download guide**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/download.md)\n\n- **C. Bulk Download**\n\n  - The steps to run a download job for multiple species are outlined here.\n\n- **D. Small download job**\n\n  - The steps to run a download job for a single species are outlined here.\n\n[**E. Directory structure**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/dir_structure.md)\n\n- This segment provides an overview of the structure of the directories in the main scripts `plants-pipeline` directory and the data directory `pipeline-data`.\n\n[**F. Postprocessing**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/postprocess.md)\n\n- After the download job is completed, these are the steps needed to generate the TPM matrices and perform quality control, which includes:\n  - Generating TPM matrices\n  - Quality control\n  - Performing coexpression to count number of ribosomal gene neighbours for every gene\n- The F1 scores for the benchmark in the paper are generated using the scripts here.\n\n[**G. Annotation Benchmark**](https://github.com/wirriamm/plants-pipeline/blob/master/docs/annotation_benchmark.md)\n\n- Describes how the annotation accuracy and coverage were derived for the publication.\n\nThe figures in the publication were prepared with the code given in this [iPython notebook](https://github.com/wirriamm/plants-pipeline/blob/master/LSTrAP_Kingdom_benchmark.ipynb).\n"
      },
      "source": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8379547588237221,
      "result": {
        "original_header": "LSTrAP-Kingdom: an automated pipeline to generate annotated gene expression atlases for kingdoms of life",
        "type": "Text_excerpt",
        "value": "This repository is found in [this Github Repository](https://github.com/wirriamm/plants-pipeline), with an accompanying paper found [here](http://dx.doi.org/10.1093/bioinformatics/btab168) and [preprint version here](https://www.biorxiv.org/content/10.1101/2021.01.23.427930v1.full). Do create pull requests for issues/bugs and feature requests. [Contact me](mailto:will0046@e.ntu.edu.sg) for feedback or reporting bugs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wgohome/plants-pipeline/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "coexpression, rna-seq, transciptomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "plants-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "wgohome"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 5703192,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 123469,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5030,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wirriamm/plants-pipeline/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:35:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}