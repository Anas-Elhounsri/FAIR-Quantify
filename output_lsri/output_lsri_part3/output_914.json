{
  "application_domain": [
    {
      "confidence": 37.41,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RoccoDAnt/napari-zelda"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "napari-zelda"
        ],
        "type": "Text_excerpt",
        "value": "Contributions are welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nUsers can add new protocol steps to their local installation using [magicgui](https://github.com/napari/magicgui) widgets.\nCode can be added at the end of napari_zelda.py file:\n\n>###Add here new functionalities for ZELDA ###\n>\n>###@magicgui(layout=\"vertical\")\n>\n>###def new_functionality_widget(viewer: 'napari.Viewer'):\n>\n>###...\n>\n>###\n>\n>###End###\n\n\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-zelda\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n\n[file an issue]: https://github.com/RoccoDAnt/napari-zelda/issues\n\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "End",
        "parent_header": [
          "napari-zelda",
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "# napari-zelda\n\n[![License](https://img.shields.io/pypi/l/napari-zelda.svg?color=green)](https://github.com/RoccoDAnt/napari-zelda/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-zelda.svg?color=green)](https://pypi.org/project/napari-zelda)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-zelda.svg?color=green)](https://python.org)\n[![tests](https://github.com/RoccoDAnt/napari-zelda/workflows/tests/badge.svg)](https://github.com/RoccoDAnt/napari-zelda/actions)\n[![codecov](https://codecov.io/gh/RoccoDAnt/napari-zelda/branch/master/graph/badge.svg)](https://codecov.io/gh/RoccoDAnt/napari-zelda)\n\n## ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\n#### Authors: Rocco D'Antuono, Giuseppina Pisignano\n\n###### Article: Front. Comput. Sci., 04 January 2022 | https://doi.org/10.3389/fcomp.2021.796117\n\n###### Examples of 2D and 3D data sets: [https://doi.org/10.5281/zenodo.5651284](https://zenodo.org/record/5651284#.YYgn_WDP2Ch)\n----------------------------------\n\n## What you can do with ZELDA plugin for napari\nThe plugin can be used to analyze 2D/3D image data sets.  \nMultidimensional images (each channel corresponding to a napari layer) can be used to:\n\n1. Segment objects such as cells and organelles in 2D/3D.\n\n2. Segment two populations in 2D/3D (e.g. cells and organelles, nuclei and nuclear spots, tissue structures and cells) establishing the \"Parent-Child\" relation: count how many mitochondria are contained in each cell, how many spots localize in every nucleus, how many cells are within a tissue compartment.\n\n  Example: cell cytoplasms (parent objects) and mitochondria (child objects)\n  ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488.png) <br> **Actin** | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT.png) <br> **Mitochondria**| ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488_MT.png) <br> **Merge**\n  ------ | ------| -----\n  ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488_parents.png) <br> **Parent cell cytoplasms** | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT_children.png) <br> **Children mitochondria**| ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT_childrenbyParent.png) <br> **Children labelled by Parents**\n\nThe images shown above are available in the [**docs**](https://github.com/RoccoDAnt/napari-zelda/tree/main/docs) folder of this repository and were segmented using ZELDA with the following parameters:\n\n\n   | **Parent objects** | **GB: sigma=2.0-> Th_parents=60.0-> DistMap-> Maxima: min_dist=10** |\n   | -----|  ----|\n   | **Children objects** | **GB: sigma=0.3-> Th_children=450.0 -> DistMap-> Maxima: min_dist=2**|\n\nFor small monitors it may be convenient to float the protocol panel\n\n  |![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin-set_panel_to_float.png) <br> **Float a panel in napari** |\n  ------ |\n\n3. Plot results within napari interface.\n\n    ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Plot_hist_Area.png) <br> **Histogram** | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Plot_scatter_Area-EqDiam.png) <br> **Scatterplot**|\n    ------ | ------|\n\n4. Customize an image analysis workflow in graphical mode (no scripting knowledge required).\n\n    | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/CustomProtocol.png) <br> **Custom image analysis workflow** |\n    ------ |\n\n5. Import and Export Protocols (image analysis workflows) in graphical mode (share with the community!).\n\n    | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_Import_and_Export_Protocols.png) <br> **Import and Export of ZELDA Protocols** |\n    ------ |\n\n## Installation\n\n**Option A.** The easiest option is to use the napari interface to install ZELDA (make sure napari!=0.4.11):\n1. Plugins / Install/Uninstall Package(s)\n\n  ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_in_napari.png)\n\n2. Choose ZELDA\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_ZELDA_in_napari_Arrow.png)\n\n3. ZELDA is installed\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_installed_ZELDA_in_napari_Arrow.png)\n\n4. Launch ZELDA\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Launch_ZELDA.png)\n\n\n**Option B.** You can install `napari-zelda` also via [pip]. For the best experience, create a conda environment and use napari!=0.4.11, using the following instructions:\n\n    conda create -y -n napari-env python=3.8  \n    conda activate napari-env\n    conda install napari pyqt  \n    pip install napari-zelda  \n\n\n**Option C.** Alternatively, clone the repository and install locally via [pip]:\n\n    pip install -e .\n\n**Option D.** Get the latest code with [git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) and [pip]:\n\n    conda create -y -n napari-env python=3.8 git\n    conda activate napari-env\n    conda install napari pyqt\n    pip install git+https://github.com/RoccoDAnt/napari-zelda.git\n\n\n## Specifications\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\nThe GUI has been developed using [magicgui](https://github.com/napari/magicgui) widgets, while the image analysis and processing include functions from [scikit-image](https://scikit-image.org/), [SciPy](https://scipy.org/), and [NumPy](https://numpy.org/). Results are handled with [pandas](https://pandas.pydata.org/) and [datatable](https://datatable.readthedocs.io/en/latest/). Plots are obtained with [matplotlib](https://matplotlib.org/).  \n\n\n\n## Contributing\n\nContributions are welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nUsers can add new protocol steps to their local installation using [magicgui](https://github.com/napari/magicgui) widgets.\nCode can be added at the end of napari_zelda.py file:\n\n>###Add here new functionalities for ZELDA ###\n>\n>###@magicgui(layout=\"vertical\")\n>\n>###def new_functionality_widget(viewer: 'napari.Viewer'):\n>\n>###...\n>\n>###\n>\n>###End###\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-10T13:36:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-14T16:53:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ZELDA: a 3D Image Segmentation and Parent to Child relation plugin for microscopy image analysis in napari"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9108105866160441,
      "result": {
        "original_header": "What you can do with ZELDA plugin for napari",
        "type": "Text_excerpt",
        "value": "The plugin can be used to analyze 2D/3D image data sets.  \nMultidimensional images (each channel corresponding to a napari layer) can be used to: \n1. Segment objects such as cells and organelles in 2D/3D. \n2. Segment two populations in 2D/3D (e.g. cells and organelles, nuclei and nuclear spots, tissue structures and cells) establishing the \"Parent-Child\" relation: count how many mitochondria are contained in each cell, how many spots localize in every nucleus, how many cells are within a tissue compartment. \nThe images shown above are available in the [**docs**](https://github.com/RoccoDAnt/napari-zelda/tree/main/docs) folder of this repository and were segmented using ZELDA with the following parameters: \n  |![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin-set_panel_to_float.png) <br> **Float a panel in napari** |\n  ------ | \n    | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/CustomProtocol.png) <br> **Custom image analysis workflow** |\n    ------ | \n5. Import and Export Protocols (image analysis workflows) in graphical mode (share with the community!). \n    | ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_Import_and_Export_Protocols.png) <br> **Import and Export of ZELDA Protocols** |\n    ------ |\n \n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8920818166128442,
      "result": {
        "original_header": "Specifications",
        "type": "Text_excerpt",
        "value": "This [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template. \nThe GUI has been developed using [magicgui](https://github.com/napari/magicgui) widgets, while the image analysis and processing include functions from [scikit-image](https://scikit-image.org/), [SciPy](https://scipy.org/), and [NumPy](https://numpy.org/). Results are handled with [pandas](https://pandas.pydata.org/) and [datatable](https://datatable.readthedocs.io/en/latest/). Plots are obtained with [matplotlib](https://matplotlib.org/).   \n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RoccoDAnt/napari-zelda/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RoccoDAnt/napari-zelda/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RoccoDAnt/napari-zelda"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "napari-zelda"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488_MT.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-AF488_parents.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT_children.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/2D-MT_childrenbyParent.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin-set_panel_to_float.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Plot_hist_Area.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Plot_scatter_Area-EqDiam.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/CustomProtocol.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_Import_and_Export_Protocols.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_in_napari.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_ZELDA_in_napari_Arrow.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_installed_ZELDA_in_napari_Arrow.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Launch_ZELDA.png"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "napari-zelda"
        ],
        "type": "Text_excerpt",
        "value": "**Option A.** The easiest option is to use the napari interface to install ZELDA (make sure napari!=0.4.11):\n1. Plugins / Install/Uninstall Package(s)\n\n  ![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_in_napari.png)\n\n2. Choose ZELDA\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_install_ZELDA_in_napari_Arrow.png)\n\n3. ZELDA is installed\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Plugin_installed_ZELDA_in_napari_Arrow.png)\n\n4. Launch ZELDA\n![](https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/docs/Clipboard_ZELDA_Launch_ZELDA.png)\n\n\n**Option B.** You can install `napari-zelda` also via [pip]. For the best experience, create a conda environment and use napari!=0.4.11, using the following instructions:\n\n    conda create -y -n napari-env python=3.8  \n    conda activate napari-env\n    conda install napari pyqt  \n    pip install napari-zelda  \n\n\n**Option C.** Alternatively, clone the repository and install locally via [pip]:\n\n    pip install -e .\n\n**Option D.** Get the latest code with [git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) and [pip]:\n\n    conda create -y -n napari-env python=3.8 git\n    conda activate napari-env\n    conda install napari pyqt\n    pip install git+https://github.com/RoccoDAnt/napari-zelda.git\n\n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9805528298706231,
      "result": {
        "original_header": "Specifications",
        "type": "Text_excerpt",
        "value": "This [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template. \n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9991348725702841,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin \n[file an issue]: https://github.com/RoccoDAnt/napari-zelda/issues \n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n \n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.809614796931595,
      "result": {
        "original_header": "What you can do with ZELDA plugin for napari",
        "type": "Text_excerpt",
        "value": "3. Plot results within napari interface. \n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nCopyright (c) 2021, Rocco D'Antuono\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of napari-zelda nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "napari-zelda"
        ],
        "type": "Text_excerpt",
        "value": "Distributed under the terms of the [BSD-3] license,\n\"napari-zelda\" is free and open source software\n"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "napari-zelda"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "RoccoDAnt"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/napari-zelda/"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 148070,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 53489,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://datatable.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://tox.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/RoccoDAnt/napari-zelda/main/README.html",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2023-08-10T21:45:02Z",
        "date_published": "2023-08-10T21:47:11Z",
        "description": "ZELDA v0.1.12\r\n\r\n# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\nArticle: Front. Comput. Sci., 04 January 2022 | https://doi.org/10.3389/fcomp.2021.796117\r\nExamples of 2D and 3D data sets: https://doi.org/10.5281/zenodo.5651284\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n## MEASUREMENTS\r\n- in <b>2D</b>: 'parent label', 'label' , 'area', 'intensity_mean', 'intensity_min', 'intensity_max', 'equivalent_diameter', 'axis_major_length', 'axis_minor_length', 'centroid', 'centroid_weighted', 'extent', 'solidity', 'orientation', 'perimeter'\r\n- in <b>3D</b>: 'parent label', 'label' , 'area', 'volume', 'intensity_mean', 'intensity_min', 'intensity_max', 'equivalent_diameter', 'axis_major_length', 'axis_minor_length', 'centroid', 'centroid_weighted', 'extent', 'solidity'\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- added the measurements of _centroid_, _weighted centroid_, _extent_, and _solidity_ for 2D and 3D.\r\n- added the measurements of _orientation_ and _perimeter_ for 2D.\r\n- added FilterByArea_widget (with v0.1.11)\r\n- added object labels to result tables (with v0.1.11)\r\n- removed the use of _datatable_; _pandas_ is used instead for saving and importing .csv files\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fixes:\r\n- now compatible with scikit-image 0.21.0 (from v0.1.11)\r\n- improved the identification of local maxima in 3D with the option _exclude_border=False_ in _skimage.feature.peak_local_max_\r\n- excluded from the data plot invalid values such as np.inf, np.NINF, and the use of drop.na\r\n\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.12",
        "name": "ZELDA v0.1.12",
        "release_id": 115994182,
        "tag": "v0.1.12",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.12",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/115994182",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/115994182",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2023-08-07T10:59:24Z",
        "date_published": "2023-08-07T11:32:38Z",
        "description": "# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\nArticle: Front. Comput. Sci., 04 January 2022 | https://doi.org/10.3389/fcomp.2021.796117\r\nExamples of 2D and 3D data sets: https://doi.org/10.5281/zenodo.5651284\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- added FilterByArea_widget\r\n- added object labels to result tables\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fix:\r\n- now compatible with scikit-image 0.21.0\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.11",
        "name": "ZELDA v0.1.11",
        "release_id": 115448319,
        "tag": "v0.1.11",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/115448319",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/115448319",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2022-01-26T13:16:00Z",
        "date_published": "2022-01-26T16:22:22Z",
        "description": "# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\nArticle: Front. Comput. Sci., 04 January 2022 | https://doi.org/10.3389/fcomp.2021.796117\r\nExamples of 2D and 3D data sets: https://doi.org/10.5281/zenodo.5651284\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- can measure different images using the same labels and save multiple times the results\r\n- implemented Volume calculation\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fix:\r\n- image calibration\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.10",
        "name": "ZELDA v0.1.10",
        "release_id": 58025574,
        "tag": "v0.1.10",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/58025574",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/58025574",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2022-01-25T21:50:39Z",
        "date_published": "2022-01-25T22:56:29Z",
        "description": "# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\nArticle: Front. Comput. Sci., 04 January 2022 | https://doi.org/10.3389/fcomp.2021.796117\r\nExamples of 2D and 3D data sets: https://doi.org/10.5281/zenodo.5651284\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- can measure different images using the same labels and save multiple times the results\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fix:\r\n- scikit-image<=0.18.3\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.9",
        "name": "ZELDA v0.1.9",
        "release_id": 57969110,
        "tag": "v0.1.9",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/57969110",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/57969110",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2021-11-07T19:16:20Z",
        "date_published": "2021-11-07T19:27:41Z",
        "description": "# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\npreprint: https://www.biorxiv.org/content/10.1101/2021.10.24.465596v1\r\nexample data sets: https://zenodo.org/record/5651284#.YYgn_WDP2Ch\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- introduced \"Import and Export Protocols\" that allows sharing custom-developed protocols with the bioimage community, in a few clicks.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fix:\r\n- parent label handling with \"datatable\" instead of pandas\r\n\r\n----------------------------------------------------------------------------------------\r\n## Acknowledgements:\r\n- Ana Stojiljkovic [StojiljkovicVetAna](https://github.com/StojiljkovicVetAna) and Ewelina Bartoszek [ewelinabartoszek](https://github.com/ewelinabartoszek)\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.7",
        "name": "ZELDA v0.1.7",
        "release_id": 52876018,
        "tag": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52876018",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52876018",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2021-11-05T23:00:55Z",
        "date_published": "2021-11-05T23:52:03Z",
        "description": "# \"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\n### Authors: Rocco D'Antuono, Giuseppina Pisignano\r\nhttps://www.biorxiv.org/content/10.1101/2021.10.24.465596v1\r\n\r\n\r\n## PROTOCOLS:\r\n\r\n### \"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n### \"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n### \"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n###  \"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\n## Improvements: \r\n- introduced Otsu threshold option.\r\n- introduced image calibration step to set voxel size (pixel and z interval).\r\n- added new measurements. Available in the current release: 'area', 'mean_intensity', 'min_intensity', 'max_intensity', 'equivalent_diameter', 'major_axis_length', 'minor_axis_length',' feret_diameter_max', Parent label\r\n\r\n----------------------------------------------------------------------------------------\r\n## Fix:\r\n- use \"datatable\" instead of \"pandas\" to handle results\r\n\r\n----------------------------------------------------------------------------------------\r\n## Acknowledgements:\r\n- Ana Stojiljkovic [StojiljkovicVetAna](https://github.com/StojiljkovicVetAna) and Ewelina Bartoszek [ewelinabartoszek](https://github.com/ewelinabartoszek)\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.5",
        "name": "ZELDA v0.1.5",
        "release_id": 52822429,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52822429",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52822429",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2021-10-27T22:28:03Z",
        "date_published": "2021-10-27T22:34:53Z",
        "description": "\"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"\r\nAuthors: Rocco D'Antuono, Giuseppina Pisignano\r\n\r\nPROTOCOLS:\r\n\r\n\"Segment a single object population\"\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n\"Segment two object populations and relate Parent to Child\"\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n\"Data Plotter\"\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n\"Design a New Protocol\"\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.\r\n\r\n----------------------------------------------------------------------------------------\r\nImprovement: layers opened before launching the plugin are listed in the widgets\r\n\r\n----------------------------------------------------------------------------------------\r\nFix: protocol management os-agnostic (win, mac)\r\n\r\n----------------------------------------------------------------------------------------\r\nAcknowledgements:\r\nPeter Carlton [pmcarlton](https://github.com/pmcarlton)\r\n",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.4",
        "name": "ZELDA v0.1.4",
        "release_id": 52185480,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52185480",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/52185480",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RoccoDAnt",
          "type": "User"
        },
        "date_created": "2021-10-23T16:08:31Z",
        "date_published": "2021-10-23T16:18:27Z",
        "description": "**\"ZELDA: a 3D Image Segmentation and Parent-Child relation plugin for microscopy image analysis in napari\"**\r\nAuthors: Rocco D'Antuono, Giuseppina Pisignano\r\n\r\n**PROTOCOLS:**\r\n\r\n- **\"Segment a single object population\"**\r\nThe protocol allows to segment a single object type such as cell nuclei or vesicles.\r\n\r\n- **\"Segment two object populations and relate Parent to Child\"**\r\nThe protocol allows to segment in parallel two populations.\r\nThe larger objects, called Parents, may contain the smallest ones called \"Children\".\r\nFor example, cytoplasmic organelles can be segmented, labelled, and measured according to the parent cell.\r\n\r\n- **\"Data Plotter\"**\r\nThe protocol can be used to plot and save histograms and scatterplots of previously obtained result tables.\r\n\r\n- **\"Design a New Protocol\"**\r\nA custom-made image analysis protocol can be assembled using the available functions, such as Threshold, GaussianBlur, etc.",
        "html_url": "https://github.com/RoccoDAnt/napari-zelda/releases/tag/v0.1.3",
        "name": "ZELDA v0.1.3",
        "release_id": 51913589,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/51913589",
        "value": "https://api.github.com/repos/RoccoDAnt/napari-zelda/releases/51913589",
        "zipball_url": "https://api.github.com/repos/RoccoDAnt/napari-zelda/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:48:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ]
}