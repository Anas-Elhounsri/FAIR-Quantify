{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KChen-lab/MEDALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-07T19:58:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-15T02:48:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Inference of Minimal Event Distance Aneuploidy Lineage Tree based on single cell copy number profile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "This package performs lineage tracing using copy number profile from single cell sequencing technology. It will infer:\n* An rooted directed minimal spanning tree (RDMST) to represent aneuploidy evolution of tumor cells.\n* The focal and broad copy number alterations associated with lineage expansion.\n\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9477571112585624,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "\tTwo kinds of input files are allowed in MEDALT: \n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9676189080510683,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "\t(1) CNV.tree.txt which is an rooted directed tree including three columns: parent node, child node and distance \n\tregion: genomic loci which have CNA are associated with lineage expansion;\n\tScore: average cumulative fold level (CFL) in the lineage;\n\tpvalue: emprival p value of LSA;\n\tadjustp: corrected p value after FDR corrected;\n\tcell: the cell node that corresponding associated lineage rooted at;\n\tdepth: the depth of cell in MEDALT tree\n\tsubtreesize: the size of corresponding lineage\n\tCNA: direction of copy number alteration, amplification (AMP) or deletion (DEL) \n\t(1) singlecell.tree.pdf which is a visualization of MEDALT by igraph. You also can input CNV.tree.txt into Cytoscape to generate preferred visualization. \n\t(2) LSA.tree.pdf which is a visualization of identified CNAs by igraph. \n> In LSA figure, we only show top 3 events for each lineage. You can check more details in segmental or gene level LSA file. \n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KChen-lab/MEDALT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KChen-lab/MEDALT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KChen-lab/MEDALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Description"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/example/run.example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Please download and copy the distribution to your specific location. If you are cloning from github, ensure that you have git-lfs installed.\n\nFor example, if the downloaded distribuition is MEDALT.tar.gz.\n\tType 'tar zxvf MEDALT.tar.gz'\n\nThen, run scTree.py in the resulting folder.\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9388783455315397,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "\t(2) segmental.LSA.txt which includes broad CNAs significantly associated with lineage expansion \n\t(3) gene.LSA.txt which includes focal (gene) CNAs significantly associated with lineage expansion \n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KChen-lab/MEDALT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 KChen-lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MEDALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KChen-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 114997,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 47894,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 357,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pickw",
          "type": "User"
        },
        "date_created": "2021-01-26T13:27:15Z",
        "date_published": "2021-01-26T14:16:17Z",
        "description": "Release for Genome Biology final revision 1/26/2021",
        "html_url": "https://github.com/KChen-lab/MEDALT/releases/tag/1.0",
        "name": "Genome Biology final revision",
        "release_id": 36916077,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/KChen-lab/MEDALT/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/KChen-lab/MEDALT/releases/36916077",
        "value": "https://api.github.com/repos/KChen-lab/MEDALT/releases/36916077",
        "zipball_url": "https://api.github.com/repos/KChen-lab/MEDALT/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements and dependency",
        "type": "Text_excerpt",
        "value": "This package runs on Python 2.7.\n\nIt also requires R/3.5\nto run and has dependency on the R packages:\n\n\tigraph and HelloRanges.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run MEDALT package",
        "type": "Text_excerpt",
        "value": "    Python scTree.py [-O <output path>] [-W <smoothing window size>] [-R <permutation tree reconstruction>] \u2013P <MEDALT package path> \u2013I <input file> -D <input file type> -G <genome version>\n    [...] contains optional parameters.\n    The mandatory arguments are -P, -I, -D and -G.\n    The input file type (-D) is either \"D\" (DNA) or \"R\" (RNA).\n    The genome version (-G) is either \"hg19\" or \"hg38\".\n>By default, we estimate background using by-chromosome permuted single cell copy number matrix rather than reconstructing a tree from permuted matrix due to time cost. You can change the setting by -R T. The default value of smoothing window size (-W) is 30, which defines the smoothing window as 30 adjacent genes for scRNA-seq data.  \n\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:06:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```\nOptions:\n  --version             show program's version number and exit\n  -h, --help            Show this help message and exit.\n  -P PATH, --path=PATH\n                        the path of MEDALT package\n  -I INPUT, --input=INPUT\n                        the input file is single cell copy number matrix estimated from scDNA-seq or scRNA-seq\n  -D DATATYPE, --datatype=DATATYPE     \n                        the input file type either D (scDNA-seq) or R (scRNA-seq)\n  -G GENOME, --genome=GENOME\n                        Genome version \"hg19\" or \"hg38\"\n  -O OUTPATH, --outpath=OUTPATH\n                        the output path.\n  -W WINDOWS, --windows=WINDOWS\n                        The size of smoothing windows if your inputfile is from scRNA-seq.\n                        The value is the number of genes which will be merge. Default value is 30.\n  -R PERMUTATION, --permutation=PERMUTATION\n                        Performing tree reconstruction based on permutation data (T) or not (F) to estimate background distribution.\n                        If T, both permuted copy number matrix and reconstructed tree using permuted data will be used. Otherwise (F), only permuted copy number matrix will be used.\n                        Default value is F due to time cost.\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Try MEDALT in the package directory on the different example datasets\n\n**Example 1: Input integer copy number profile from scDNA-seq data**\n\n\tpython scTree.py -P ./ -I ./example/scDNA.CNV.txt -D D -G hg19 -O ./example/outputDNA\n\n**Example 2: Input inferred relative copy number profile from scRNA-seq data**\n\n\tpython scTree.py -P ./ -I ./example/scRNA.CNV.txt -D R -G hg19 -O ./example/outputRNA\n\n>In order to save time, we don't reconstruct trees based on permutation data. You can set -R T\nto reconstruct permuted tree.\n"
      },
      "source": "https://raw.githubusercontent.com/KChen-lab/MEDALT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}