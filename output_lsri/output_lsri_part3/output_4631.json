{
  "application_domain": [
    {
      "confidence": 43.06,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite",
        "type": "Text_excerpt",
        "value": "If you use this code, or base new experiments on it, please make sure to cite\nthe corresponding article:\n\n```\n@article{waniek2019tss,\n  author = {Waniek, Nicolai},\n  title = {Transition scale-spaces: A computational theory for the discretized entorhinal cortex},\n  publisher = {MIT Press},\n  doi = {10.1162/neco\\_a\\_01255},\n  note ={PMID: 31835003},\n  journal = {Neural Computation},\n  volume = {32},\n  number = {2}\n  year = {2020},\n  pages = {330-394},\n  url = {https://doi.org/10.1162/neco_a_01255 },\n  eprint = {https://doi.org/10.1162/neco_a_01255}\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/nwaniek/transitionscalespace"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-01T10:41:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-30T19:42:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code accompanying the Transition-Scale Spaces paper"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9797314357177862,
      "result": {
        "original_header": "transitionscalespace",
        "type": "Text_excerpt",
        "value": "The repository contains code that was used to generate data and figures for\nWaniek, Transition scale-spaces: A computational theory for the discretized\nentorhinal cortex, 2019. \nPlease see below how to create raw data and figures that are presented in the\nExperiments section of the paper. See the code in folder ```paper_figures``` for\ncode that was used to generate some of the other figures in the paper, such as\nthe entropy of binary search with overlapping receptive fields. If you want to\ncreate particles on a hemisphere similar to the ones illustrated in the Appendix\nof the paper, then have a look at README_hemisphere.md for some working\nparameters. You can use those in combination with the BASH2*\nscripts. \n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rochus/transitionscalespace/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nwaniek/transitionscalespace/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nwaniek/transitionscalespace"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "transitionscalespace"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9337628083743296,
      "result": {
        "original_header": "transitionscalespace",
        "type": "Text_excerpt",
        "value": "If you have any questions regarding the code, please don't hesitate from\ncontacting me.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/nwaniek/transitionscalespace/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2016-2019 Nicolai Waniek <rochus@rochus.net>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "All code in this repository is under MIT License. See LICENSE file for details.\n\n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "transitionscalespace"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "nwaniek"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 147372,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:08:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples for TSS / Code used to generate data and figures in main body of the paper",
        "type": "Text_excerpt",
        "value": "Brief descriptions of the algorithms can be found in the paper. Of course you\ncan also just have a look at the file. Most of the code is support-code to\nrecord activity of nodes in the graph. Have a look at the comments in the file\nto discern what is algorithm and what is support-code.\n\n```\n./demo_01_linear_track.py\n./demo_02_wavepropagation.py --N 250 --startX 0.2 --startY 0.2 --targetX 0.8 --targetY 0.8 --W 1.0 --H 1.0 --period 0.2 --M 300 --pointgen rand --save-figures\n./demo_03_scalespace_refinement_descending.py --N 250 --startX 0.4 --startY 0.1 --targetX 1.8 --targetY 4.8 --W 2.0 --H 5.0 --M 200 --max-i 2 --nscales 5 --save-figures\n./demo_04_scalespace_refinement_ascending.py --N 250 --startX 0.4 --startY 0.1 --targetX 1.8 --targetY 4.8 --W 2.0 --H 5.0 --M 200 --max-i 2 --nscales 5 --save-figures\n./demo_05_watermaze.py trajectory_data/005.hdf5 --M 100 --save-figures\n```\n\nCode to generate figures from paper can be found in subfolder\n```paper_figures```\n\n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hemisphere Examples / Code used to generate the geodesic figure in the appendix",
        "type": "Text_excerpt",
        "value": "To recreate the example of geodesic computation given in the appendix of the\npaper, you first need to generate data for the field distribution on the\nhemisphere, then compute samples from start to target, and finally visualize.\nOr, after checking out this repository, directly jump to the third and final\nstep of visualization. In detail, the steps are as follows.\n\nFirst, run the file ```hemisphere_walker.py```, which will spawn a virtual agent\non a hemisphere and keep it walking according to some statistics similar to a\nrodent. While walking around, grid fields will be placed and self-organized\naccording to particle dynamics that were described in [1].  Specifically, the\nclosest particle to the agent will be moved closed to the agent (but slower than\nthe agent's movement). All other particles in the vicinity of the agent will be\nrepelled. After finishing the execution for some time (see line 58 of the file),\nthe particle locations will be stored to a .json file.\n\nSecond, run the file ```hemisphere_tss.py```. Despite the name, this file will\nnot create the TSS but only perform trajectory sampling using Dijkstra and\nbacktracking. After finishing, this file will write its results to a file. To\nchange the file name, adapt line 61 of the file.\n\nThird, and finally, visualize everything using ```hemisphere_visualizer.py```.\nIf you changed the filenames in the other scripts, make sure to also adapt this\nfile at lines 47 -- 48.\n\n\n[1] Waniek Hexagonal Grid Fields Optimally Encode Transitions in Spatiotemporal\nSequences, 2018, Neural Comput. 2018 Oct;30(10):2691-2725. doi:\n10.1162/neco_a_01122, https://www.mitpressjournals.org/doi/abs/10.1162/neco_a_01122\n"
      },
      "source": "https://raw.githubusercontent.com/rochus/transitionscalespace/master/README.md",
      "technique": "header_analysis"
    }
  ]
}