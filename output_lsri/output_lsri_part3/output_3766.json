{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "LCQS"
        ],
        "type": "Text_excerpt",
        "value": "\r\nThis software implements the LCQS algorithm described in: Fu J , Ke B , Dong S . \u201cLCQS: an efficient lossless compression tool of quality scores with random access functionality\u201d [J]. BMC Bioinformatics, 2020, 21(1).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCUT-CCNL/LCQS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-06T13:36:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-24T20:06:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Robust and Efficient Lossless Compression of Quality Scores in FASTQ Files with Random Access Decompression Functionality"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9990005263532858,
      "result": {
        "original_header": "LIBZPAQ",
        "type": "Text_excerpt",
        "value": "\r\nLIBZPAQ is a public domain API of Matt Mahoney's ZPAQ project. The library used in this project is a optimized version based on LIBZPAQ of zpaq 7.15. For detailed descriptions of LIBZPAQ, refer to [ZPAQ](http://mattmahoney.net/dc/zpaq.html).\r\n\r\nLIBZPAQ is optimized with vector instruction sets. The context model computations are time-consuming when predicting bits and updating parameters, so we rewrite several parts of them with vector instructions.\r\n\r\nTo use the optimized version, you need to replace the file _libzpaq.cpp_ with the one of this project. Note that for JIT version, you can compile it with the same instructions. But for NOJIT version, you should replace the option \"-msse2\" with \"-msse4\".\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCUT-CCNL/LCQS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCUT-CCNL/LCQS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCUT-CCNL/LCQS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LCQS"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999683329995377,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "\r\nLCQS is compiled on 64 bit Linux with g++ and C++11 standard. To build it, run the following command in the main directory:\r\n\r\n    make\r\n\r\nIf building successfully, the executable file _lcqs_ will be generated in the same directory of the source code.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCUT-CCNL/LCQS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LCQS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SCUT-CCNL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 369940,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 495,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:59:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Compress",
        "parent_header": [
          "LCQS",
          "Usage of LCQS"
        ],
        "type": "Text_excerpt",
        "value": "\r\n    lcqs c <input-file> <output-file>\r\n\r\nIn compression mode, LCQS takes a file consists of quality scores of FASTQ format as input.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Decompress",
        "parent_header": [
          "LCQS",
          "Usage of LCQS"
        ],
        "type": "Text_excerpt",
        "value": "\r\n    lcqs d <input-file> <output-file>\r\n\r\nIn decompression mode, LCQS takes a compressed LCQS file as input.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Random access",
        "parent_header": [
          "LCQS",
          "Usage of LCQS"
        ],
        "type": "Text_excerpt",
        "value": "\r\n    lcqs r <input-file> <output-file> <first-line> <last-line>\r\n\r\nIn random-access mode, LCQS takes a compressed LCQS file as input, and retrieves uncompressed contents as output, from the first line (inclusive) to the last line (inclusive) specified in the parameters.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "LCQS"
        ],
        "type": "Text_excerpt",
        "value": "\r\nAn Example is presented with a sample file _sample.in_.\r\n\r\n    lcqs c sample.in sample.lcqs\r\n\r\nCompress the file _sample.in_ and output to the file _sample.lcqs_.\r\n\r\n    lcqs d sample.lcqs sample.in\r\n\r\nDecompress the file _sample.lcqs_ and output to the file _sample.in_.\r\n\r\n    lcqs r sample.lcqs sample.part 10 100\r\n\r\nFetch the original content from 10th line to 100th line.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/LCQS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}