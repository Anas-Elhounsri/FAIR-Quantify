{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite SURFMAP",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\nIf SURFMAP has been useful to your research, please cite us as well as the original MSMS paper:\n\n> Hugo Schweke, Marie-H\u00e9l\u00e8ne Mucchielli, Nicolas Chevrollier, Simon Gosset, Anne Lopes. SURFMAP: a software for mapping in two dimensions protein surface features. J. Chem. Inf. Model. 2022. [Link](https://pubs.acs.org/doi/10.1021/acs.jcim.1c01269)\n\n> Sanner, M. F., Olson A.J. & Spehner, J.-C. (1996). Reduced Surface: An Efficient Way to Compute Molecular Surfaces. Biopolymers 38:305-320. [Link](https://doi.org/10.1002/(sici)1097-0282(199603)38:3%3c305::aid-bip4%3e3.0.co;2-y)\n<br>\n\nMoreover, if you use APBS in your research, please cite one or more of the following papers listed in the [Supporting APBS](https://apbs.readthedocs.io/en/latest/supporting.html) documentation page.\n<br>\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\n<a id=\"ref-1\"></a>\n\n> (1) Michel Sanner, Arthur J. Olson, Jean Claude Spehner (1996). Reduced Surface: an Efficient Way to Compute Molecular Surfaces. Biopolymers, Vol 38, (3), 305-320.\n\n\n<a id=\"ref-2\"></a>\n\n> (2) Jurrus E, Engel D, Star K, Monson K, Brandi J, Felberg LE, Brookes DH, Wilson L, Chen J, Liles K, Chun M, Li P, Gohara DW, Dolinsky T, Konecny R, Koes DR, Nielsen JE, Head-Gordon T, Geng W, Krasny R, Wei GW, Holst MJ, McCammon JA, Baker NA. Improvements to the APBS biomolecular solvation software suite. Protein Science, 27, 112-128, 2018.\n\n\n<a id=\"ref-3\"></a>\n\n> (3) Kyte, J.; Doolittle, R. F. A Simple Method for Displaying the Hydropathic Character of a Protein. J. Mol. Biol. 1982, 157 (1), 105\u2212132.\n\n\n<a id=\"ref-4\"></a>\n\n> (4) Wimley, W. C.; White, S. H. Experimentally Determined Hydrophobicity Scale for Proteins at Membrane Interfaces. Nat. Struct. Biol. 1996, 3 (10), 842\u2212848.\n\n\n<a id=\"ref-5\"></a>\n\n> (5) Levy, E. D. A Simple Definition of Structural Regions in Proteins and Its Use in Analyzing Interface Evolution. J. Mol. Biol. 2010, 403 (4), 660\u2212670.\n\n\n<a id=\"ref-6\"></a>\n\n> (6) Mezei, M. A New Method for Mapping Macromolecular Topography. J. Mol. Graph. Model 2003, 21 (5), 463\u2212472.\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/i2bc/SURFMAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\nIf you have any question regarding SURFMAP, you can contact us:\n- [@anne.lopes@i2bc.paris-saclay.fr](mailto:anne.lopes@i2bc.paris-saclay.fr) (project leader)\n- [@hugo.schweke@weizmann.ac.il](mailto:hugo.schweke@weizmann.ac.il) (original code author)\n- [@nicolas.chevrollier@laposte.net](mailto:nicolas.chevrollier@laposte.net) (project maintainer)\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-25T11:26:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-01T14:35:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9914233475597627,
      "result": {
        "original_header": "Aims",
        "type": "Text_excerpt",
        "value": "SURFMAP is a free standalone and easy-to-use command-line interface (CLI) software that enables the fast and automated 2D projection of either predefined features of protein surface (electrostatic potential, Kyte-Doolittle hydrophobicity, Wimley-White hydrophobicity, stickiness and surface relief) or any descriptor encoded in the temperature factor column of a PDB file. The 2D maps computed by SURFMAP can be used to analyze and/or compare protein surface properties.\n</div> \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9545661471184935,
      "result": {
        "original_header": "SURFMAP workflow: inputs/outputs",
        "type": "Text_excerpt",
        "value": "[Using a PDB file as input](#from-a-pdb-structure) is the most classic usage of SURFMAP. In this case, two outputs are generated: \n- the 2D map projection in a PDF format (PNG is also available)\n- a matrix text file written in a SURFMAP-specific format \nThe matrix text file contains all information about each projected surface residue and their associated feature value. As the above figure shows, this text file is the direct input for the last step of the SURFMAP workflow as it is read to generate the 2D map projection.\n<br>\n<br> \n[Using a text file in a SURFMAP-specific matrix format as input](#from-a-surfmap-matrix-file) represents a special case that could be useful if the user wants to generate a 2D map from an internally pre-processed matrix, such as to normalize or average with other matrices. \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8877666184010854,
      "result": {
        "original_header": "Calling SURFMAP with Docker or not",
        "type": "Text_excerpt",
        "value": "Whether you want to use SURFMAP through a Docker or not, the commands are almost exactly the same. Indeed, in order to use the Docker image of SURFMAP, you will just have to add the CLI option **`--docker`**. If you want to use SURFMAP from an installation on your local OS, then simply remove this option. For example: \nIf the Docker image of SURFMAP is missing from your system, it will be automatically downloaded the first time you will execute a SURFMAP command. \n> :bell: The version of the SURFMAP Docker image used is the same as the version of SURFMAP you will have installed. You can check your current version with the command `surfmap -v`. Yet if you want to use [another version of the SURFMAP Docker image](https://hub.docker.com/r/lopesi2bc/surfmap/tags), you will have to set a `SURFMAP_DOCKER_VERSION` environment variable with a value corresponding to an available tag version (e.g. `export SURFMAP_DOCKER_VERSION=2.1.0`). \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/i2bc/SURFMAP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "i2bc/SURFMAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/surfmap/scripts/compute_shell.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/./doc/images/TOC_Schweke_manuscript_revisions_forGitHub.png"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/./doc/images/surfmap_workflow.png"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/./doc/custom/project_binding_site.svg"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Recommendation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "We strongly recommend that you install the SURFMAP package and its python dependencies in an isolated environment. Click in the section below for a short illustration on why and how to use an isolated environment.\n\n<details style=\"margin-left: 32px\">\n<summary>How to use an isolated environment (recommended)</summary>\n<br>\n<p>\nBy using an isolated environment you will avoid potential version conflicts between python libraries when working on different projects. Some of the most popular tools to work with isolated python environments are [virtualenv](https://pypi.org/project/virtualenv/), [pyenv](https://pypi.org/project/pyenv/), [pipenv](https://pypi.org/project/pipenv/). \n</p>\n\nBelow is an example on how to use [virtualenv](https://pypi.org/project/virtualenv/).\n\n#### 1. Install virtualenv\n```bash\n# upgrade pip to its latest version\npython3 -m pip install --upgrade pip\n\n# install virtualenv\npython3 -m pip install virtualenv\n```\n\n#### 2. Create and activate an isolated environment\n```bash\n# create an isolated environment named 'myenv' (to adapt)\nvirtualenv myenv\n\n# activate your isolated environment\nsource myenv/bin/activate\n```\n\nOnce activated, any python library you'll install using pip will be installed in this isolated environment, and python will only have access to these packages.\n\nOnce you're done working on your project, simply type `deactivate` to exit the environment.\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to install SURFMAP",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\nFirst, make sure you meet the [system requirements](#requirements) outlined earlier and consider the [recommendation](#recommendation). Then, follow instructions described in option 1 or 2 if you're not interested in accessing/modifying the source code, otherwise prefer option 3. \n\n<a id=\"install_option1\"></a>\n<details open>\n<summary><h4>Option 1: from the archive (git not required)</h4></summary>\n\nFirst download an archive of our latest release <a href=\"https://github.com/i2bc/SURFMAP/releases/latest\" target=\"_blank\">here</a>.\n\n```bash\n# upgrade pip to its latest version\npython3 -m pip install --upgrade pip\n\n# install SURFMAP vx.x.x\npython3 -m pip install SURFMAP-x.x.x.zip # (or .tar.gz) \n```\n</details>\n\n\n<details>\n<summary><h4>Option 2: from the version control systems</h4></summary>\n\n```bash\n# upgrade pip to its latest version\npython3 -m pip install --upgrade pip\n\n# install SURFMAP vx.x.x\npython -m pip install -e git+https://github.com/i2bc/SURFMAP.git@v2.1.0#egg=surfmap\n```\n</details>\n\n<details>\n<summary><h4>Option 3: from this project repository</h4></summary>\n\n```bash\n# clone SURFMAP on your machine\ngit clone https://github.com/i2bc/SURFMAP.git\n\n# go in the SURFMAP/ directory\ncd SURFMAP\n\n# upgrade pip to its latest version\npython3 -m pip install --upgrade pip\n\n# install SURFMAP\npython3 -m pip install -e .\n```\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9992836742707547,
      "result": {
        "original_header": "Calling SURFMAP with Docker or not",
        "type": "Text_excerpt",
        "value": "Whether you want to use SURFMAP through a Docker or not, the commands are almost exactly the same. Indeed, in order to use the Docker image of SURFMAP, you will just have to add the CLI option **`--docker`**. If you want to use SURFMAP from an installation on your local OS, then simply remove this option. For example: \n```bash\n# a command that will run on a Docker container\nsurfmap -pdb foo.pdb -tomap stickiness --docker\n\n# the same command that will run on your local OS\nsurfmap -pdb foo.pdb -tomap stickiness\n``` \nIf the Docker image of SURFMAP is missing from your system, it will be automatically downloaded the first time you will execute a SURFMAP command. \n> :bell: The version of the SURFMAP Docker image used is the same as the version of SURFMAP you will have installed. You can check your current version with the command `surfmap -v`. Yet if you want to use [another version of the SURFMAP Docker image](https://hub.docker.com/r/lopesi2bc/surfmap/tags), you will have to set a `SURFMAP_DOCKER_VERSION` environment variable with a value corresponding to an available tag version (e.g. `export SURFMAP_DOCKER_VERSION=2.1.0`). \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8111211080532881,
      "result": {
        "original_header": "SURFMAP",
        "type": "Text_excerpt",
        "value": "<div align=\"center\">\n  <img src=\"./doc/images/toc_Schweke_SURFMAP_cmyk.png\" width=\"80%\"/>  \n</div>\n \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8381924809737519,
      "result": {
        "original_header": "Aims",
        "type": "Text_excerpt",
        "value": "<div>\n<img src=\"./doc/images/TOC_Schweke_manuscript_revisions_forGitHub.png\" width=\"60%\" align=\"right\"/> \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8381834085868591,
      "result": {
        "original_header": "SURFMAP workflow: inputs/outputs",
        "type": "Text_excerpt",
        "value": "<div align=\"center\">\n  <img src=\"./doc/images/surfmap_workflow.png\" width=\"70%\"/> \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nSURFMAP: Projection of protein surface features on 2D map\nCopyright (C) 2021  H. Schweke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licence",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\nThis project is under the MIT License terms. Please have a look at the LICENSE file for more details.\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/./doc/images/toc_Schweke_SURFMAP_cmyk.png"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SURFMAP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "i2bc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 198035,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 131403,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41928,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 13992,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13378,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 12870,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 8813,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1366,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pdb2pqr.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://apbs.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nchenche",
          "type": "User"
        },
        "date_created": "2024-05-14T19:53:45Z",
        "date_published": "2024-05-14T19:56:09Z",
        "description": "## [2.2.0] - 2024-05-14\r\n\r\nMINOR release of SURFMAP - minor breaking changes\r\n\r\n### Added\r\n- command line option to set min/max values for the bfactor color scale (`--bfactor-min-value`, `--bfactor-max-value`)\r\n\r\n### Changed\r\n- change command line option to set max absolute value for electrostatics color scale [BREAKING CHANGE]\r\n  - from `--color-max-val` to  `--elec-max-value`",
        "html_url": "https://github.com/i2bc/SURFMAP/releases/tag/v2.2.0",
        "name": "Version 2.2.0",
        "release_id": 155763769,
        "tag": "v2.2.0",
        "tarball_url": "https://api.github.com/repos/i2bc/SURFMAP/tarball/v2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/i2bc/SURFMAP/releases/155763769",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/releases/155763769",
        "zipball_url": "https://api.github.com/repos/i2bc/SURFMAP/zipball/v2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nchenche",
          "type": "User"
        },
        "date_created": "2023-12-27T14:23:29Z",
        "date_published": "2023-12-27T14:45:14Z",
        "description": "## [2.1.0] - 2023-12-27\r\n\r\nMINOR release of SURFMAP - no breaking changes\r\n\r\n### Added\r\n- command line option to set min/max values for the electrostatics color scale\r\n\r\n### Patched\r\n- change the Proline value in the Kyte and Doolittle scale (from 1.6 to -1.6)\r\n",
        "html_url": "https://github.com/i2bc/SURFMAP/releases/tag/v2.1.0",
        "name": "Version 2.1.0",
        "release_id": 135192308,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/i2bc/SURFMAP/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/i2bc/SURFMAP/releases/135192308",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/releases/135192308",
        "zipball_url": "https://api.github.com/repos/i2bc/SURFMAP/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nchenche",
          "type": "User"
        },
        "date_created": "2023-02-28T10:06:17Z",
        "date_published": "2023-02-28T10:08:34Z",
        "description": "## [2.0.0] - 2023-02-28\r\n\r\nMAJOR release where SURFMAP has been completely restructured as a python package.\r\n\r\n### Added\r\n- added a new docker CLI handler\r\n- added surfmap options `-pqr` and `-ff`\r\n- added `surfmap` executable command\r\n- added `extract_interface` utility script\r\n- added `write_pdb_bs` utility script\r\n- added MANIFEST.in\r\n- added examples for new utility scripts\r\n- added setup.py\r\n- added Dockerfile\r\n- added check for surfmap requirements (apbs, r)\r\n- added optional environment variable for surfmap image version\r\n- added logging with 3 verbose levels\r\n- added surfmap.log file as output\r\n- added multival_csv2pdb as binary\r\n\r\n### Changed\r\n- changed README\r\n- changed LICENCE from GPL to MIT\r\n- changed install process\r\n- changed docker repository name\r\n- changed pdb_to_xyzr from awk to python3\r\n- changed copyright notices\r\n- changed path-related instructions in R scripts\r\n- changed `compute_shell.sh` from bash to a python function\r\n- changed electrostatics computation as a python function\r\n- changed version format\r\n\r\n### Removed\r\n- removed use of `surfmap.py`\r\n- removed use of `run_surfmap.py`\r\n- removed electrostatics computation from shell computation\r\n- removed awk/nawk dependency\r\n- removed unused JS scripts/packages\r\n\r\n### Deprecated\r\n- everything included in lower versions is now deprecated",
        "html_url": "https://github.com/i2bc/SURFMAP/releases/tag/v2.0.0",
        "name": "Major release version 2.0.0 - 2023-02-28",
        "release_id": 93908069,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/i2bc/SURFMAP/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/i2bc/SURFMAP/releases/93908069",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/releases/93908069",
        "zipball_url": "https://api.github.com/repos/i2bc/SURFMAP/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nchenche",
          "type": "User"
        },
        "date_created": "2022-04-22T20:48:16Z",
        "date_published": "2022-04-22T20:50:13Z",
        "description": "CHANGE\r\n------------\r\n- fix a bug occurring for pdb files with more than 999 residues (appeared only for circular variance property mapping)",
        "html_url": "https://github.com/i2bc/SURFMAP/releases/tag/v1.5",
        "name": "Version 1.5",
        "release_id": 65119606,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/i2bc/SURFMAP/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/i2bc/SURFMAP/releases/65119606",
        "value": "https://api.github.com/repos/i2bc/SURFMAP/releases/65119606",
        "zipball_url": "https://api.github.com/repos/i2bc/SURFMAP/zipball/v1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "SURFMAP is a CLI tool that requires a UNIX-based OS system. It is written in python (version 3.7), R (version 3.6). It relies on the already included MSMS software ([1](#ref-1)) and may optionally require APBS ([2](#ref-2)) if the user wants to perform electrostatics calculations.\n\nAll those requirements (including APBS) are met in a [predefined Docker image](https://hub.docker.com/r/lopesi2bc/surfmap/tags) that we recommend the user to use. \n\n<details open>\n<summary><b>For a usage of the docker image</b></summary>\n\n- an UNIX-based OS system (any linux distribution, a MacOS system or [WSL2](https://learn.microsoft.com/fr-fr/windows/wsl/install) on windows)\n- [Python >= 3.7](https://www.python.org/downloads)\n- [Docker](https://docs.docker.com/get-docker/)\n\n</details>\n\n<details>\n<summary><b>For a usage on your local OS</b></summary>\n\n- an UNIX-based OS system (any linux distribution, a MacOS system or [WSL2](https://learn.microsoft.com/fr-fr/windows/wsl/install) on windows)\n- [Python >= 3.7](https://www.python.org/downloads)\n- [R >= 3.6](https://cran.r-project.org/)\n- [APBS](https://github.com/Electrostatics/apbs/releases) (optional - only if you want to compute electrostatic potential)\n \n</details>\n<br>\n\n> :bell: Please note that **whether you want to use the Docker image of SURFMAP or not, you will still need to [install the SURFMAP package](#How-to-install-SURFMAP)**. Indeed the package contains internal features that make the use of the Docker image totally transparent for the user who will not have to enter 'complex' commands for the connection of useful mounting points. In fact, the SURFMAP commands are almost exactly the same between the use of the docker image or not (see [here](#cmd_docker_or_not)).\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:41:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Supporting the project",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\n- If you find a bug or have a suggestion for a new feature, please report it via an [issue](https://github.com/i2bc/SURFMAP/issues)\n- If you find SURFMAP useful, consider starring the repository\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of SURFMAP",
        "type": "Text_excerpt",
        "value": "[Go to the top](#Table-of-contents)\n\nOnce you have [installed the SURFMAP package](#how-to-install-surfmap), you should be ready to use SURFMAP. \n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The example directory",
        "parent_header": [
          "Usage of SURFMAP"
        ],
        "type": "Text_excerpt",
        "value": "To guide the user in the usage of SURFMAP, we will make use of files that you can find in the `example/` directory of SURFMAP. You can see where this directory is located on your machine with the following command:\n\n```bash\npython3 -c \"import surfmap; print(surfmap.PATH_TO_EXAMPLES)\"\n```\n\nPlease note that for all command examples illustrated below, we will make [use of the Docker image of SURFMAP](#use-surfmap-with-docker-or-not).\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SURFMAP options",
        "parent_header": [
          "Usage of SURFMAP"
        ],
        "type": "Text_excerpt",
        "value": "<details>\n<summary>List of all SURFMAP options</summary>\n\n<pre>usage: surfmap [-h] (-pdb PDB | -mat MAT | -v) -tomap TOMAP [-proj PROJ] [-res RES] [-rad RAD] [-d D] [-s S] [--nosmooth] [--png] [--keep]\n               [--docker] [--pqr PQR] [-ff FF] [-verbose VERBOSE]\n\noptions:\n  -h, --help        show this help message and exit\n  -pdb PDB          Path to a PDB file\n  -mat MAT          Input matrix. If the user gives an imput matrix, SURFMAP will directly compute a map from it.\n  -v, --version     Print the current version of SURFMAP.\n  -tomap TOMAP      Specific key of the feature to map. One of the following: stickiness, kyte_doolittle, wimley_white, electrostatics,\n                    circular_variance, bfactor, binding_sites, all.\n  -proj PROJ        Choice of the projection. Argument must be one of the following: flamsteed, mollweide, lambert. Defaults to flamsteed.\n  -res RES          File containing a list of residues to map on the projection. Expected format has the following space/tab separated column\n                    values: chainid resid resname\n  -rad RAD          Radius in Angstrom added to usual atomic radius (used for calculation solvent excluded surface). The higher the radius the\n                    smoother the surface. Defaults to 3.0\n  -d D              Output directory where all files will be written. Defaults to &apos;./output_SURFMAP_$pdb_$tomap&apos; with $pdb and $tomap based on\n                    -pdb and -tomap given values\n  -s S              Value defining the size of a grid cell. The value must be a multiple of 180. Defaults to 5.0.\n  --elec-max-value ELEC_MAX_VALUE\n                        Maximum value to be used for the electrostatics color scale. The value will be converted as an absolute value to make the scale symetric around 0. For\n                        instance, a value of 5.63 will scale the electrosctatics color values from -5.63 to 5.63.\n  --bfactor-min-value BFACTOR_MIN_VALUE\n                        Minimum value to be used for the bfactor color scale.\n  --bfactor-max-value BFACTOR_MAX_VALUE\n                        Maximum value to be used for the bfactor color scale.\n  --nosmooth        If chosen, the resulted maps are not smoothed (careful: this option should be used only for discrete values!)\n  --png             If chosen, a map in png format is computed (default: only pdf format is generated)\n  --keep            If chosen, all intermediary files are kept in the output (default: only final text matrix and pdf map are kept)\n  --docker          If chosen, SURFMAP will be run on a docker container (requires docker installed).\n  --pqr PQR         Path to a PQR file used for electrostatics calculation. Option only available if &apos;-tomap electrosatics&apos; is requested.\n                    Defaults to None.\n  -ff FF            Force-field used by pdb2pqr for electrostatics calculation. One of the following: AMBER, CHARMM, PARSE, TYL06, PEOEPB,\n                    SWANSON. Defaults to CHARMM.\n  -verbose VERBOSE  Verbose level of the console log. 0 for silence, 1 for info level, 2 for debug level. Defaults to 1.\n</pre>\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Projection of a protein surface feature on a 2D map",
        "parent_header": [
          "Usage of SURFMAP"
        ],
        "type": "Text_excerpt",
        "value": "In order to generate a 2D map projection of a protein surface feature, two inputs are required:\n- either a PDB file (`-pdb` option) OR a matrix text file written in a SURFMAP-specific format (`-mat` option)\n- a valid key referring to a feature to map (listed in the table below)\n\n| Valid feature key | Feature details |\n| --- | --- |\n`kyte_doolittle` | Residue hydrophobicity directly derived from the Kyte-Doolittle scale ([3](#ref-3))\n`wimley_white` | Residue hydrophobicity directly derived from the Wimley-White scale ([4](#ref-4))\n`stickiness` | Propensity of each amino acid to be involved in protein\u2212protein interfaces ([5](#ref-5))\n`circular_variance` | Descriptor of the local (residue scale) geometry of a surface region: low values re\ufb02ects protruding residues, while high values indicates residues located in cavities ([6](#ref-6))\n`circular_variance_atom` | Descriptor of the local geometry (atomic scale) of a surface region: low values re\ufb02ects protruding atoms, while high values indicates atoms located in cavities. ([6](#ref-6))\n`electrostatics` | Electrostatic potential of the protein surface (atomic scale) - Requires the APBS software ([2](#ref-2))\n`bfactor` | Any feature stored in the temperature factor of the input PDB \ufb01le\n`all` | Compute sequentially the following features: `kyte_doolittle`, `wimley_white`, `stickiness` and `circular_variance`\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From a PDB structure",
        "parent_header": [
          "Usage of SURFMAP",
          "Projection of a protein surface feature on a 2D map"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# example - command to map the stickiness values for residues at the surface of the chain A of 1g3n.pdb\nsurfmap -pdb 1g3n_A.pdb -tomap stickiness --docker\n```\n\nThe output has the following structure and content:\n<pre><font color=\"#12488B\"><b>output_SURFMAP_1g3n_A_stickiness/</b></font>\n\u251c\u2500\u2500 <font color=\"#12488B\"><b>maps</b></font>\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 1g3n_A_stickiness_map.pdf\n\u251c\u2500\u2500 parameters.log\n\u251c\u2500\u2500 surfmap.log\n\u2514\u2500\u2500 <font color=\"#12488B\"><b>smoothed_matrices</b></font>\n    \u2514\u2500\u2500 1g3n_A_stickiness_smoothed_matrix.txt\n</pre>\n\nwith:\n- `parameters.log`: a summary of the parameters used to compute the map\n- `surfmap.log`: a log file of each of the step of the SURFMAP workflow\n- `1g3n_A_stickiness_map.pdf`: the generated 2D map in PDF format\n- `1g3n_A_stickiness_smoothed_matrix.txt`: a computed smoothed matrix file (txt file) used to generate the 2D map. This matrix has the expected format of a matrix file that can be used as a direct input of SURFMAP through the used of the `-mat` argument.\n\n\n<details>\n<summary><h5>Note on electrostatics calculations</h5></summary>\n\nThe electrostatics potential is calculated through the use of APBS and is initially based on the generation of a PQR file which will contain the charge and radius of each atom in the input PDB file. In SURFMAP, this PQR file is generated through the use of [pdb2pqr](https://pdb2pqr.readthedocs.io/en/latest/) which reads atomic parameters from a force field accessible from its package itself. While the CHARMM force field is used by default in SURFMAP, all force fields accessible in [pdb2pqr](https://pdb2pqr.readthedocs.io/en/latest/) (AMBER, CHARMM, PARSE, TYL06, PEOEPB, SWANSON) can be used in SURFMAP with the `-ff` option. For example:\n\n```bash\n# will use the CHARMM force-field (default)\nsurfmap -pdb 1g3n_A.pdb -tomap electrostatics --docker\n\n# will use the AMBER force-field\nsurfmap -pdb 1g3n_A.pdb -tomap electrostatics -ff AMBER --docker\n```\n\nFor the particular case where a user would like to compute electrostatics potential with any other force-field (e.g. for a coarse-grained PDB file), SURFMAP can be used with the additional option `-pqr` that must be followed with a PQR file generated by the user himself. For example:\n\n```bash\n# will read atomic parameters from the PQR given as input\nsurfmap -pdb structure.pdb -tomap electrostatics -pqr structure.pqr --docker\n```\n\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From a SURFMAP matrix file",
        "parent_header": [
          "Usage of SURFMAP",
          "Projection of a protein surface feature on a 2D map"
        ],
        "type": "Text_excerpt",
        "value": "A matrix written in a SURFMAP-specific format can also be used as an input to generate a 2D map. The feature to map has to be the same as the one used to generate the matrix file. As a fancy usage example, the command below will reproduce the 2D map generated from the command above:\n\n```bash\n# example - command to create a map from a SURFMAP matrix file generated with stickiness values\nsurfmap -mat output_SURFMAP_1g3n_A_stickiness/smoothed_matrices/1g3n_A_stickiness_smoothed_matrix.txt -tomap stickiness --docker\n```\n\nA more realistic usage of this option would be to compute maps from your internally pre-processed matrices. For example you may have generated 2D maps of a same protein in different conformational states and then may want to compute an averaged matrix file (please note that we don't provide such script utilities).\n\n<details>\n<summary>Example of a SURFMAP-specific matrix format (.txt)</summary>\n\n<pre>absc    ord     svalue  residues\n5       5       Inf     NA\n5       10      Inf     NA\n5       15      Inf     NA\n...\n5       80      Inf     GLU_120_A\n5       85      Inf     GLU_120_A, GLN_301_A\n5       90      Inf     GLN_301_A\n5       95      Inf     GLN_301_A\n5       100     Inf     GLN_301_A\n5       105     Inf     GLN_301_A\n...\n360\t175\tInf\tNA\n360\t180\tInf\tNA\n</pre>\n</details>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Projection of interface residues on a 2D map",
        "parent_header": [
          "Usage of SURFMAP"
        ],
        "type": "Text_excerpt",
        "value": "<p><img src=\"./doc/custom/project_binding_site.svg\"></p>\n\nInstead of projecting a protein surface feature on a 2D map, you may be interested in the projection of interface residues. This is possible with the option `-tomap binding_sites` of SURFMAP. \n\nWith the `-tomap binding_sites` option, a discrete color scale is used to associate one color to each different value found in the b-factor column. So in order to use this option, your input PDB file must contain discrete values in the b-factor column for each atoms, the value depending on whether the atoms belong to an interface or not. For example:\n- `0` for atoms that are not part of any binding sites\n- `1` for atoms being part of one known binding site\n- `2` for atoms being part of a second binding site (if there is)\n- `...`\n\n\nWe provide two utility scripts to help users generating a PDB file that can be used with the `-tomap binding_sites` option of SURFMAP:\n- `extract_interface`\n- `write_pdb_bs`\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of extract_interface",
        "parent_header": [
          "Usage of SURFMAP",
          "Projection of interface residues on a 2D map"
        ],
        "type": "Text_excerpt",
        "value": "From multi-chain PDB file, the command `extract_interface` will find the interface residues between a given chain (or set of chains) and all the other chains of the input PDB structure. It will then output a new PDB file of the given chain(s) with the expected format for the `-tomap binding_sites` option.\n\nThe command below illustrates the usage of `extract_interface` with the PDB file `1g3n_ABC.pdb` in the example directory. \n\n```bash\n# generate a PDB file of the chain A in which the b-factor column will contain a discrete value for each different interface residues that will be found between chains A and B, and chains A and C\nextract_interface -pdb 1g3n_ABC.pdb -chains A\n```\n\nIt will generate two output files:\n- `1g3n_ABC_chain-A_bs.pdb`: a PDB file ready for use by the command `surfmap` with the option `-tomap binding_sites`.\n- `1g3n_ABC_chain-A_interface.txt`: a text file containing information about identified interface residues. This file can be edited and used as input for the command `write_pdb_bs` described below.\n\n\nSo now, we can map interface residues of the chain A of 1G3N:\n```bash\n# Use the PDB file generated with the command above to project labelled residues on a 2D map \nsurfmap -pdb 1g3n_ABC_chain-A_bs.pdb -tomap binding_sites --docker\n```\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage of write_pdb_bs",
        "parent_header": [
          "Usage of SURFMAP",
          "Projection of interface residues on a 2D map"
        ],
        "type": "Text_excerpt",
        "value": "The command `write_pdb_bs` is made to avoid the manual editing of the b-factor column of a PDB file that you would like to use with the `-tomap binding_sites` option. The command takes as inputs:\n- a PDB file of interest\n- a text file listing interface residues of interest\n\nThe text file listing interface residues must be formatted as follows:\n- 1st column: interface residue chain name\n- 2nd column: residue ID\n- 3rd column: residue name\n- 4th column: discrete value (one value per different binding site; one color will be assigned to each different value)\n\n<details>\n<summary>Example of a text file listing interface residues</summary>\n\n<pre>A\t14\tGLU\t1\nA\t15\tCYS\t1\nA\t16\tVAL\t1\n...\nA\t155\tSER\t1\nA\t156\tSER\t1\nA\t47\tVAL\t2\nA\t49\tTHR\t2\nA\t50\tGLY\t2\n...\nA\t139\tHIS\t2\nA\t140\tARG\t2\nA\t292\tTYR\t2\n\n</pre>\n</details>\n\n\nAs a fancy example, the command below will reproduce the PDB file `1g3n_ABC_chain-A_bs.pdb` ready for use by `surfmap` with the option `-tomap binding_sites`:\n```bash\nwrite_pdb_bs -pdb 1g3n_ABC_chain-A_bs.pdb -res 1g3n_ABC_chain-A_interface.txt\n```\n\nThe output file will have the basename of the PDB file given as input with the suffix `_bs.pdb`\n\n"
      },
      "source": "https://raw.githubusercontent.com/i2bc/SURFMAP/master/README.md",
      "technique": "header_analysis"
    }
  ]
}