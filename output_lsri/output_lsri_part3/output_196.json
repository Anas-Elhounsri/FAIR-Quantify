{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "BiTSC2"
        ],
        "type": "Text_excerpt",
        "value": "Please cite the BiTSC2 in your publications if it helps your research.\n```\n@article{chen2022bitsc,\n  title={BiTSC 2: Bayesian inference of Tumor clonal Tree by joint analysis of Single-Cell SNV and CNA data},\n  author={Chen, Ziwei and Gong, Fuzhou and Wan, Lin and Ma, Liang},\n  journal={Briefings in Bioinformatics},\n  volume={23},\n  number={3},\n  pages={bbac092},\n  year={2022},\n  publisher={Oxford University Press}\n}\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Chen, Ziwei and Gong, Fuzhou and Wan, Lin and Ma, Liang",
        "format": "bibtex",
        "title": "BiTSC 2: Bayesian inference of Tumor clonal Tree by joint analysis of Single-Cell SNV and CNA data",
        "type": "Text_excerpt",
        "value": "@article{chen2022bitsc,\n    publisher = {Oxford University Press},\n    year = {2022},\n    pages = {bbac092},\n    number = {3},\n    volume = {23},\n    journal = {Briefings in Bioinformatics},\n    author = {Chen, Ziwei and Gong, Fuzhou and Wan, Lin and Ma, Liang},\n    title = {BiTSC 2: Bayesian inference of Tumor clonal Tree by joint analysis of Single-Cell SNV and CNA data},\n}"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ucasdp/BiTSC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-09T12:24:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-02T08:24:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bayesian inference of Tumor clonal Tree by joint analysis of Single-Cell SNV and CNA data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9965974265587091,
      "result": {
        "original_header": "BiTSC2",
        "type": "Text_excerpt",
        "value": "Bayesian inference of Tumor clonal Tree by joint analysis of Single-Cell SNV and CNA data\n \n"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ucasdp/BiTSC2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ucasdp/BiTSC2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ucasdp/BiTSC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BiTSC2"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ucasdp/BiTSC2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 BiTSC2\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BiTSC2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ucasdp"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 38681,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 28970,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Software dependencies",
        "parent_header": [
          "BiTSC2"
        ],
        "type": "Text_excerpt",
        "value": "BiTSC2 is written with `R` and `C++`. Before implementing our software, please install the following packages in `R`:\n\n `tidyr`, `reshape`, `dplyr`, `coda`, `Rcpp`, `RcppArmadillo`, `ggplot2`, `igraph`, `mclust`, `gtools`, `vegan`\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:06:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "BiTSC2"
        ],
        "type": "Text_excerpt",
        "value": "To use BiTSC2, please set `R` working directory to `BiTSC2-master` after downloading this repository. Please make sure you have installed all the dependencies correctly, and then open source code `BiTSC2_app.R` to execute the commands line by line as following.\n\n* In *Model Input* section, first set random seed `myseed`, and then specify the folder `foldername` to save output files (a new folder will be created if it does not exist). For example: \n  ```\n  #################################################################\n  ###################### MODEL INPUT ##############################\n  #################################################################\n\n  myseed <-  1               # set random seed\n  foldername <-  \"temp_out\"          # set output foldername\n  dir.create(foldername)  # folder where outputs are saved\n  ```\n\n  Then input the total reads matrix and the mutant reads matrix `D` and `X` and squencing depth `psi` and segment information. For the given example data:\n  \n  ```\n  scdata <- readRDS('example_data.RDS')\n  D <- scdata$obs.reads$D_drop # total reads, M * N matrix, where row represents locus, column represents cell\n  X <- scdata$obs.reads$X_drop # variant reads, M * N matrix. where row represents locus, column represents cell\n  #segments <- NULL\n  segments <- scdata$segment\n  psi <- rep(3,dim(D)[2]) # squencing depth of each cell\n  ```\n  If there is genome segment information, it can be used as input information to improve the accuracy of the estimation. If not, assign variable `segment` as\n  `NULL`, that is, use locus specific segments (each gene/ SNV locus as a segment) to update the CNA genotype matrix `L`;\n   \n\n* Next, assign Bayesian sampling parameters in `specify_pars.R`. For most of the parameters, BiTSC2 works just fine with default values. Some of the parameters you can change are:\n  ```\n  #### maximum number of copy\n  Params$max_CN <- 4\n\n  #### maximum number of mutant copies\n  Params$max_mut <- 1\n\n  MCMC_par$burnin <- 500  # burnin sample size\n  MCMC_par$Nsamp <- 500   # number of samples for inference\n  MCMC_par$Ntune <- 500  # number of samples used for adaptive parameter tuning\n\n  Nclone <- c(3:10)  # candidate subclone numbers K\n  ```\n\n* Then execute the remaining sections step by step:\n\n   + `sampler.R` to perform MCMC sampling, then the samples used for inference are stored in the `.Rdata` files;\n   \n   + `Model_select.R` to make model selection. The corresponding `K` and calculated BIC values are stored in the `BIC_model_selection.Rdata`, and the\n      visual graphics of `K` and BIC are displayed in `selection.pdf`;\n   \n   + `Visualization.R` to visualize model sampling results: under different `K`, visualize the estimated subclonal evolutionary tree `T`, CNA genotype matrix `L` and SNV genotype matrix `Z`, and the results are shown in `_fit.pdf` files;\n   \n   + `point_estimate.R` to get the final estimated results from a given posterior sample `.Rdata` file, which are stored in the variable `point_est`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ucasdp/BiTSC2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}