{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jvolkening/minion_bacterial"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-27T23:49:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-10T12:03:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Workflow and supporting files for Taylor et al: \"Rapid, multiplexed, whole genome and plasmid sequencing of foodborne pathogens using long-read nanopore technology\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8603989143646038,
      "result": {
        "original_header": "Companion materials for the manuscript \"Taylor et al: *Rapid, multiplexed, whole genome and plasmid sequencing of foodborne pathogens using long-read nanopore technology*\"",
        "type": "Text_excerpt",
        "value": "This repository contains the primary Nextflow workflow (`minion_bacterial.nf`)\nfor bacterial nanopore assembly described in the manuscript and accessory\nscripts for reproducing the results therein. Workflows for the phylogenetic\nanalysis can be run separately from the `phylogenetics` directory. The time\nseries analysis can be reproduced using the following steps: \n1. Download the raw data, extract and trim the FASTQ reads, and create the\ntime series subsampling directories for use in benchmarking different MinION\nrun times:\n```\n./init.sh\n```\n2. Run the run-time benchmarking on the *Salmonella* and *E. coli* datasets\n```\nbin/bm_Sent.pl --in ts/Sent --out <path_to_output_dir> --meta meta --threads <num_threads>\nbin/bm_Ecoli.pl --in ts/Ecoli --out <path_to_output_dir> --meta meta --threads <num_threads>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9445358533120539,
      "result": {
        "original_header": "Computing resources",
        "type": "Text_excerpt",
        "value": "The analyses for the manuscript were run on a server with 64 cores and 512 GB\nmemory. Certain steps (`nanopolish` in particular) are quite slow even with 64\ncores available (see manuscript for run times and other benchmarking details).\nBe aware of this if attempting to replicate the analysis on low-end hardware.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9861220041070325,
      "result": {
        "original_header": "Read trimming",
        "type": "Text_excerpt",
        "value": "Please note that the version of Porechop (0.2.2) used in the manuscript to\ndemultiplex and trim the reads is older than the earliest version available in\nBioconda (0.2.3). It is possible that this may result in slight differences in\nthe output metrics when reproducing the manuscript analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9756462803005761,
      "result": {
        "original_header": "Unicycler versions",
        "type": "Text_excerpt",
        "value": "If you generate assemblies with significantly poorer QC metrics than those\ndescribed in the manuscript, please check the Unicycler logs in your Nextflow\nresults directory. All of the conda software packages in the workflow are\nversioned identically to those used in the manuscript. However, we experienced\nissues with Unicycler when the associated `racon` dependency was silently\nupgraded from v1.3.1 to v1.3.3 -- specifically, the same version of\nUnicycler would now silently fail to perform Racon polishing and would output\nthe unpolished assembly. You can see this in the Unicycler log, as no rounds\nof Racon polishing will be reported in that section. Pinning the conda Racon\nversion to 1.3.1 (the version used for the manuscript) in the Nextflow script\nseems to have fixed this issue, but it is something to keep an eye on if you\nattempt to use the workflow and experience poor results.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9348906909371195,
      "result": {
        "original_header": "Nanopolish and FAST5 file paths",
        "type": "Text_excerpt",
        "value": "Some tools produce FASTQ files with the path to the FAST5 files from which\neach read was derived embedded in the read descriptor. The version of\nNanopolish used in this manuscript appears to use that information in\npreference to the summary table provided on the command line. If those FAST5\nfiles cannot be found at the same path (absolute or relative) found in the\nFASTQ headers, Nanopolish will give a series of warnings but will not die.\nRather, it will output a \"polished\" assembly identical to the input. Since\nNanopolish is being run within a Nextflow workflow, those warnings are easily\nmissed. \nIn the `init.sh` script used here, the absolute path to the FAST5 directory is\nprovided to `poretools` to ensure that the same absolute path is encoded in\nthe FASTQ headers. If you are using this workflow on your own data, please\ndouble-check that these paths are correctly encoded for Nanopolish to find\nthem. We have found this to be tricky to troubleshoot, but the most obvious\nsign that something is wrong is that the Nanopolish input and output\nassemblies will be identical.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9435734348084638,
      "result": {
        "original_header": "SRA FAST5 data",
        "type": "Text_excerpt",
        "value": "The SRA accessions for this project are SRR9603470 (Salmonella) and SRR9603471 (E. coli). The FAST5 data can be downloaded via the SRA web portal under the 'Download' tab. However, be aware that, despite the file naming SRA used, these files are tarballs only and not gzipped, so set your `tar` extraction flags appropriately. You can find example commands for fetching the data in the `init.sh` script in this repo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jvolkening/minion_bacterial/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jvolkening/minion_bacterial/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jvolkening/minion_bacterial"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Companion materials for the manuscript \"Taylor et al: Rapid, multiplexed, whole genome and plasmid sequencing of foodborne pathogens using long-read nanopore technology\""
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/init.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999992383222663,
      "result": {
        "original_header": "Companion materials for the manuscript \"Taylor et al: *Rapid, multiplexed, whole genome and plasmid sequencing of foodborne pathogens using long-read nanopore technology*\"",
        "type": "Text_excerpt",
        "value": "**NOTE: The following steps require `conda` to be installed in your `$PATH`** \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999604514157648,
      "result": {
        "original_header": "SRA FAST5 data",
        "type": "Text_excerpt",
        "value": "The SRA accessions for this project are SRR9603470 (Salmonella) and SRR9603471 (E. coli). The FAST5 data can be downloaded via the SRA web portal under the 'Download' tab. However, be aware that, despite the file naming SRA used, these files are tarballs only and not gzipped, so set your `tar` extraction flags appropriately. You can find example commands for fetching the data in the `init.sh` script in this repo.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jvolkening/minion_bacterial/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "minion_bacterial"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jvolkening"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 42878,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 19669,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3282,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 467,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jvolkening/minion_bacterial/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:43:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}