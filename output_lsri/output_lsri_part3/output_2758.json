{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "OPUS-Rota3"
        ],
        "type": "Text_excerpt",
        "value": "```bibtex\n@article{xu2020opus4,\n  title={OPUS-Rota3: Improving Protein Side-Chain Modeling by Deep Neural Networks and Ensemble Methods},\n  author={Xu, Gang and Wang, Qinghua and Ma, Jianpeng},\n  journal={Journal of Chemical Information and Modeling},\n  year={2020},\n  publisher={ACS Publications}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Xu, Gang and Wang, Qinghua and Ma, Jianpeng",
        "format": "bibtex",
        "title": "OPUS-Rota3: Improving Protein Side-Chain Modeling by Deep Neural Networks and Ensemble Methods",
        "type": "Text_excerpt",
        "value": "@article{xu2020opus4,\n    publisher = {ACS Publications},\n    year = {2020},\n    journal = {Journal of Chemical Information and Modeling},\n    author = {Xu, Gang and Wang, Qinghua and Ma, Jianpeng},\n    title = {OPUS-Rota3: Improving Protein Side-Chain Modeling by Deep Neural Networks and Ensemble Methods},\n}"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thuxugang/opus_rota3"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-28T04:03:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-10T08:00:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OPUS-Rota3: Improving Protein Side-Chain Modeling by Deep Neural Networks and Ensemble Methods"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9807545384359837,
      "result": {
        "original_header": "OPUS-Rota3",
        "type": "Text_excerpt",
        "value": "Side-chain modeling is critical for protein structure prediction since the uniqueness of the protein structure is largely determined by its side-chain packing conformation. In this paper, differing from most approaches which reply on rotamer library sampling, we first propose a novel side-chain rotamer prediction method based on deep neural networks, named OPUS-RotaNN. Then, on the basis of our previous work OPUS-Rota2, we propose an open-source side-chain modeling framework, OPUS-Rota3, which integrates the results of different methods into its rotamer library as the sampling candidates. By including OPUS-RotaNN into OPUS-Rota3, we conduct our experiments on three native backbone test sets and one non-native backbone test set. On the native backbone test set CAMEO-Hard61 for example, OPUS-Rota3 successfully predicts 51.14% of all side-chain dihedral angles with a tolerance criterion of 20\u00b0, outperforms OSCAR-star (50.87%), SCWRL4 (50.40%) and FASPR (49.85%). On the non-native backbone test set DB379-ITASSER, the accuracy of OPUS-Rota3 is 52.49%, better than OSCAR-star (48.95%), FASPR (48.69%) and SCWRL4 (48.29%).\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9126100449383712,
      "result": {
        "original_header": "Train &amp; Val:",
        "type": "Text_excerpt",
        "value": "The training and validation sets for OPUS-RotaNN are the same as that for OPUS-TASS, which are hosted on [Baidu Drive](https://pan.baidu.com/s/1L6w_qBIKvleO2uFr1Ekevw) with password `zmc1`. Also, they can be downloaded directly from [Here](http://ma-lab.rice.edu/MaLab/dist/opus_tass_datasets.zip). More details can be found in [OPUS-TASS](https://github.com/thuxugang/opus_tass) repo. \nThe CSF120 features for the training and validation sets are hosted on [Baidu Drive](https://pan.baidu.com/s/15pfFzL4kaYdaV8A37BwqPw) with password `7bmi`. Also, they can be downloaded directly from [Here](http://ma-lab.rice.edu/MaLab/dist/rota3_csf120.zip).\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8791334467590021,
      "result": {
        "original_header": "Test2016 &amp; CASP-FM &amp; CAMEO-Hard61",
        "type": "Text_excerpt",
        "value": "The pdb files of these three sets are hosted on [Baidu Drive](https://pan.baidu.com/s/1mwsG6OeuOwzmHsWkN1EAJQ) with password `em4s`. Also, they can be downloaded directly from [Here](http://ma-lab.rice.edu/MaLab/dist/rota3_testsets.zip).\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8486850777120605,
      "result": {
        "original_header": "FASPR",
        "type": "Text_excerpt",
        "value": "The source code we downloaded from [FASPR](https://github.com/tommyhuangthu/FASPR) can be found in *OPUS-Rota3/FASPR* folder. For higher speed, we modified the source code. You can recompile it following their instruction.\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/thuxugang/opus_rota3/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thuxugang/opus_rota3/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "thuxugang/opus_rota3"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OPUS-Rota3"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Performance of different predictors on DB379-ITASSER (***Non-Native Backbone Test Set***)",
        "parent_header": [
          "OPUS-Rota3",
          "Performance"
        ],
        "type": "Text_excerpt",
        "value": "|Predictors |MAE (\u03c71)\t|MAE (\u03c72)\t|MAE (\u03c73)\t|MAE (\u03c74)\t|ACC|\n|:----:|:----:|:----:|:----:|:----:|:----:|\n|RotamerLib |43.10 |\t47.64 |\t56.94 |\t53.27 \t|40.61%|\n|SCWRL4 |33.29 \t|42.74 |\t56.17 |\t55.52 \t|48.29%|\n|FASPR |32.59 \t|42.05 \t|57.05 |\t55.69 \t|48.69%|\n|OSCAR-star |30.78 \t|42.45 \t|56.07 \t|55.74 \t|48.95%|\n|OPUS-Rota3v\t|28.33 \t|38.84 |\t53.64 \t|54.49 \t|51.88%|\n|OPUS-Rota3\t|27.05 \t|39.08 |\t53.41 \t|54.30 |\t52.28%|\n\n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9884124948486971,
      "result": {
        "original_header": "OSCAR-star",
        "type": "Text_excerpt",
        "value": "The executable oscar-star file we downloaded from [OSCAR-star website](https://sysimm.ifrec.osaka-u.ac.jp/OSCAR/) can be found in *OPUS-Rota3/oscar* folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9960558109528562,
      "result": {
        "original_header": "FASPR",
        "type": "Text_excerpt",
        "value": "The source code we downloaded from [FASPR](https://github.com/tommyhuangthu/FASPR) can be found in *OPUS-Rota3/FASPR* folder. For higher speed, we modified the source code. You can recompile it following their instruction.\n \n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/thuxugang/opus_rota3/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "opus-rota3, opus-rotann, protein-side-chain-modeling"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Xiaoqiang Huang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/OPUS-Rota3/FASPR/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "opus_rota3"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "thuxugang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 297899,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 66607,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 5051,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "OPUS-Rota3",
          "OPUS-Rota3v and OPUS-Rota3"
        ],
        "type": "Text_excerpt",
        "value": "```\nPython 3.7\nTensorFlow v2.0\nxssp-3.0.10\n```\n\nThe training & inference codes of OPUS-RotaNN can be found [Here](https://github.com/thuxugang/opus_rota3/tree/master/OPUS-RotaNN).\n\nThe standalone version of OPUS-RotaNN (including pre-trained models, the tmp_files and the results for CASP-FM) is hosted on [Baidu Drive](https://pan.baidu.com/s/11UO508bMR9rOfUYLBA_2fA) with password `3l8k`. Also, it can be downloaded directly from [Here](http://ma-lab.rice.edu/MaLab/dist/OPUS-RotaNN.zip).\n\nNote that for higher speed, we simplify the calculation in xssp. The pipeline for recompiling the xssp is as following:\n\n```\ncd mkdssp\ntar zxvf xssp-3.0.10.tar.gz\ncp dssp.cpp xssp-3.0.10/src/\ncd xssp-3.0.10/\n./autogen.sh\n./configure\nmake mkdssp\n```\n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:12:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "OPUS-Rota3",
          "OPUS-Rota3v and OPUS-Rota3"
        ],
        "type": "Text_excerpt",
        "value": "1. Database preparation.\n\n   1. Install Redis.\n\n      ```\n      cd redis-3.2.12\n      make\n      cd src\n      sudo make install\n      ```\n\n   2. Download OPUS-DASF lookup tables and rotamer library data, which are hosted on [Baidu Drive](https://pan.baidu.com/s/1XxYz3HpYdpv_DPcZBsMgQA) with password `9dqu`. Also, they can be downloaded directly from [Here](http://ma-lab.rice.edu/dist/rota2_db.zip). Unzip *dump.zip* and put it into *redis-3.2.12*.\n\n\n2. Install eigen3\n\n   ```\n   sudo apt install libeigen3-dev\n   cd /usr/include/eigen3\n   sudo cp Eigen/ .. -R\n   ```\n3. Install hiredis\n\n   ```\n   cd hiredis\n   make\n   sudo make install\n   sudo ldconfig /usr/local/lib\n   ```\n\n4. Build OPUS-Rota3 ***(gcc/g++ 4.8 is necessary to reproduce our results)***\n\n   ```\n   cd src\n   mkdir build\n   cd build\n   cmake ..\n   make\n   cp rota3 ../../\n   ```\n \n5. Run Redis. \n   ```\n   cd /home/redis-3.2.12\n   redis-server redis.conf\n   ```   \n\n   This will take approximately 1min until *\"The server is now ready to accept connections on port 6379\"* appeared in the console. \n \n4. Run OPUS-Rota3.\n\n   Set the parameters in *rota3.ini*. The examples for OPUS-Rota3v and OPUS-Rota3 are *rota3v_example.ini* and *rota3_example.ini*, you can replace *rota3.ini* with what you need. Note that ***absolute path*** is required.\n   \n   1. `optimized`.\n   \n   `optimized=0` means the sampling process will not be performed. If you want to use OPUS-Rota3v, please set `optimized=0`. For OPUS-Rota3, please set `optimized=1`.\n   \n   2. `use_faspr`\n   \n   If you want to use the results from FASPR, please set `use_faspr=1`. For both OPUS-Rota3v and OPUS-Rota3, `use_faspr` is 1.\n   \n   3. `use_oscar`\n\n   If you want to use the results from OCAR-star, please set `use_oscar=1`. \n\n   4. `use_others`\n   \n   Note that OCAR-star will provide stochastic results. Therefore, we provide another option that will not run OCAR-star on-the-fly, but introduce their existing predicted results. In this case, please set `use_oscar=0` and `use_others=1`. The `others_list.txt` in `tmp_dir` should be maintained for establishing the relations between backbone files and OCAR-star predicted results. Instead of introducing the results from OCAR-star, the results from other side-chain modeling programs can also be included in this way. \n  `.dihedrals`: real resid in backbone file, resname, chi1, chi2, chi3, chi4 (181: Missing atoms for calculation 182: chi doesn't exist).\n  \n   5. `use_rotann`\n   \n   If you want to use the results from OPUS-RotaNN, please set `use_rotann=1` and maintain the `rotann_list.txt` in `tmp_dir` as `use_others`. Note that the different between `use_others` and `use_rotann` is `.dihedrals` uses real resid in backbone file and `use_rotann` uses the resid starting from 1.\n   `.rota`: resid starting from 1, resname, chi1, chi2, chi3, chi4 (181: Missing atoms for calculation 182: chi doesn't exist).\n"
      },
      "source": "https://raw.githubusercontent.com/thuxugang/opus_rota3/master/README.md",
      "technique": "header_analysis"
    }
  ]
}