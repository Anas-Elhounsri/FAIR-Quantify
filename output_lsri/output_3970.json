{
  "application_domain": [
    {
      "confidence": 25.35,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "@article{he2020cabnet,<br/>\r\n  title={CABNet: Category attention block for imbalanced diabetic retinopathy grading},<br/>\r\n  author={He, Along and Li, Tao and Li, Ning and Wang, Kai and Fu, Huazhu},<br/>\r\n  journal={IEEE Transactions on Medical Imaging},<br/>\r\n  volume={40},<br/>\r\n  number={1},<br/>\r\n  pages={143--153},<br/>\r\n  year={2020},<br/>\r\n  publisher={IEEE}<br/>\r\n}\r\n"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NKUhealong/CABnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-31T00:04:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-22T08:01:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9927716341834495,
      "result": {
        "original_header": "CABNet",
        "type": "Text_excerpt",
        "value": "\r\nThis repository contains the Keras implementation using Tensorflow as backend of our paper \"CABNet: Category Attention Block for Imbalanced Diabetic Retinopathy Grading\"\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/he2016012996/CABnet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NKUhealong/CABnet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NKUhealong/CABnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9746691612451092,
      "result": {
        "original_header": "Trained models",
        "type": "Text_excerpt",
        "value": "\r\nThe trained model \uff1a Baidu Yun : https://pan.baidu.com/s/1G2tKYNvqP7jmCl-svC1cfA  password: kjga <br>\r\nGoogle Drive\uff1ahttps://drive.google.com/drive/folders/1GNn3tj7WTLPjdOJUZqItui58DDQtYrsS?usp=sharing\r\n\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NKUhealong/CABnet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 he2016012996\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LICENSE",
        "type": "Text_excerpt",
        "value": " Code can only be used for ACADEMIC PURPOSES. NO COMERCIAL USE is allowed.\r\n Copyright \u00a9 College of Computer Science, Nankai University. All rights reserved.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CABnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "NKUhealong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9523,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "\r\npython 3.6\r\n\r\nnumpy 1.16.4\r\n\r\nkeras 2.3.1\r\n\r\ntensorflow 1.13.1\r\n\r\npillow 7.0.0\r\n\r\nopencv-python 4.1.0\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:44:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "\r\n1. Clone the repository, and download the trained model, put them into 'weights' folder, you can run test.py to test the model directly. \r\n   The details of the trained model are listed in details of trained models.txt file.\r\n\r\n2. If you want to train the model, download the dataset and put them into`data` folder.\r\n\r\n3.  And then run the code\uff1apython train.py\r\n    Note that the parameters and paths should be set beforehand\r\n\r\n4. Once the training is complete, you can run the test.py to test your model.\r\n   Run the code : python test.py.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/he2016012996/CABnet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}