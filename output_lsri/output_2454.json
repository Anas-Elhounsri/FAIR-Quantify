{
  "application_domain": [
    {
      "confidence": 0.9773415928839995,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abu-compbio/BetweenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-18T21:10:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-30T12:06:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8816003073653977,
      "result": {
        "original_header": "**Input**",
        "type": "Text_excerpt",
        "value": "The file is located at data/IntAct_network\n```\ngene1 gene2 confidence value\nMDM2  TP53  0.99\nAPP APP 0.99\nMYC MAX 0.98\n...\n```\n2. Patients Dataset (Normal and Tumor):\n \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9782715034927125,
      "result": {
        "original_header": "**Random Walk**",
        "type": "Text_excerpt",
        "value": "**Note:** For the random walk process, we used the random walk python code for both breast and lung datasets, and the iterative version (described in our paper) for pan-cancer dataset for three iterations.\n### **Input** \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abu-compbio/BetweenNET/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abu-compbio/BetweenNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abu-compbio/BetweenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BetweenNET: Ranking Cancer Drivers via Betweenness-based Outlier Detection and Random Walks"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/execute_all.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999993575059,
      "result": {
        "original_header": "This is the original repository for the BetweenNet paper",
        "type": "Text_excerpt",
        "value": "\n**Installing the Dependencies**\n```\npip install -r requirements.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999829588646729,
      "result": {
        "original_header": "**Betweenness Calculation**",
        "type": "Text_excerpt",
        "value": "```\ncd src\n[1st] Compile betweenness.cpp using the following command line:\ng++-5 -std=c++0x -I$LEDAROOT/incl -L$LEDAROOT betweenness.cpp -lGeoW -lD3 -lW -lP -lG -lL -lX11 -lm -O1 -no-pie -o betweenness\n\n[2nd] Run the following command to compute betweenness values for samples in the selected [cacner]\n./betweenness\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9667034206433818,
      "result": {
        "original_header": "** **",
        "type": "Text_excerpt",
        "value": "To construct the bipartite graph, run \"construct_bipartite_graph.py\" script, as follows:\n```\npython construct_bipartite_graph.py [cancer] -v-[t/f]\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9449738790811282,
      "result": {
        "original_header": "**Random Walk**",
        "type": "Text_excerpt",
        "value": "To apply random walk process on the constructed bipartite graph, run random_walk.py script, as follows:\n```\npython random_walk.py [cancer] -v-[t/f]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8009344753770733,
      "result": {
        "original_header": "**Selection of Outlier Genes**",
        "type": "Text_excerpt",
        "value": "To generate the outliers matrix, run  \"generate_outliers.py\" script, as follows:\n```\npython generate_outliers.py [cancer] -v-[t/f]\n```\n### **Output**\nFiles will be located in out/ <br/>\n1-out/  [ cancer ] /graph_nodes.txt <br/>\n2-out/ [ cancer ] /graph_edges.txt <br/>\n3-out/ [ cancer ] /graph_mut_freq.txt <br/>\n4-out/ [ cancer ] /bipartite_graph.gml<br/> \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8858906555234612,
      "result": {
        "original_header": "** **",
        "type": "Text_excerpt",
        "value": "To construct the bipartite graph, run \"construct_bipartite_graph.py\" script, as follows:\n```\npython construct_bipartite_graph.py [cancer] -v-[t/f]\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8648368136938134,
      "result": {
        "original_header": "**Random Walk**",
        "type": "Text_excerpt",
        "value": "To apply random walk process on the constructed bipartite graph, run random_walk.py script, as follows:\n```\npython random_walk.py [cancer] -v-[t/f]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abu-compbio/BetweenNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BetweenNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "abu-compbio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 22460,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 12410,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2175,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abu-compbio/BetweenNET/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 08:55:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}