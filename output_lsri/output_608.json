{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Original article: [FLIRT: A Feature Generation Toolkit for Wearable Data](https://doi.org/10.1016/j.cmpb.2021.106461)\n\n```\n@article{flirt2021,\n  title={{{FLIRT}}: A {{Feature Generation Toolkit}} for {{Wearable Data}}},\n  author={F\u00f6ll, Simon and Maritsch, Martin and Spinola, Federica and Mishra, Varun and Barata, Filipe and Kowatsch, Tobias and Fleisch, Elgar and Wortmann, Felix},\n  year={2021},\n  journal={Computer Methods and Programs in Biomedicine},\n  doi={10.1016/j.cmpb.2021.106461},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "F\u00f6ll, Simon and Maritsch, Martin and Spinola, Federica and Mishra, Varun and Barata, Filipe and Kowatsch, Tobias and Fleisch, Elgar and Wortmann, Felix",
        "doi": "10.1016/j.cmpb.2021.106461",
        "format": "bibtex",
        "title": "{{FLIRT}}: A {{Feature Generation Toolkit}} for {{Wearable Data}}",
        "type": "Text_excerpt",
        "value": "@article{flirt2021,\n    doi = {10.1016/j.cmpb.2021.106461},\n    journal = {Computer Methods and Programs in Biomedicine},\n    year = {2021},\n    author = {F\u00f6ll, Simon and Maritsch, Martin and Spinola, Federica and Mishra, Varun and Barata, Filipe and Kowatsch, Tobias and Fleisch, Elgar and Wortmann, Felix},\n    title = {{{FLIRT}}: A {{Feature Generation Toolkit}} for {{Wearable Data}}},\n}"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/im-ethz/flirt"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-16T10:15:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-28T14:22:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Are you ready to FLIRT with your wearable data?"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9904172672877639,
      "result": {
        "original_header": "FLIRT",
        "type": "Text_excerpt",
        "value": "**FLIRT** is a **F**eature generation too**L**k**I**t for wea**R**able da**T**a such as that from your smartwatch or smart ring. With FLIRT you can\neasily transform wearable data into meaningful features which can then be used for example in machine learning or AI models. \nIn contrast to other existing toolkits, FLIRT (1) focuses on physiological data recorded with\n(consumer) **wearables** and (2) calculates features based on a **sliding-window approach**.\nFLIRT is an easy-to-use, robust and efficient feature generation toolkit for your wearable device! \n\u27a1\ufe0f **Are you ready to FLIRT with your wearable data?**\n \n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9890225766114372,
      "result": {
        "original_header": "Main Features",
        "type": "Text_excerpt",
        "value": "A few things that FLIRT can do:\n  - Loading data from common wearable device formats such as from the Empatica E4 or Holter ECGs\n  - Overlapping sliding-window approach for feature calculation\n  - Calculating [HRV](https://flirt.readthedocs.io/en/latest/api.html#module-flirt.hrv) (heart-rate variability) features from NN intervals (aka inter-beat intervals)\n  - Deriving features for [EDA](https://flirt.readthedocs.io/en/latest/api.html#module-flirt.eda) (electrodermal activity)\n  - Computing features for [ACC](https://flirt.readthedocs.io/en/latest/api.html#module-flirt.acc) (accelerometer)\n  - Provide and prepare features in one comprehensive DataFrame, so that they can directly be used for further steps\n    (e.g. training machine learning models) \n\ud83d\ude0e FLIRT provides **high-level** implementations for fast and easy utilization of feature generators\n(see [flirt.simple](https://flirt.readthedocs.io/en/latest/api.html#module-flirt.simple)). \n\ud83e\udd13 For advanced users, who wish to adapt algorithms and parameters do their needs, FLIRT also provides **low-level**\nimplementations.\nThey allow for extensive configuration possibilities in feature generation and the specification of which algorithms to\nuse for generating features. \n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.996134725891656,
      "result": {
        "original_header": "Roadmap",
        "type": "Text_excerpt",
        "value": "Things FLIRT will be able to do in the future:\n  - [ ] Use FLIRT with Oura's smart ring and other consumer-grade wearable devices\n  - [ ] Use FLIRT with Apple Health to derive meaningful features from long-term data recordings\n  - [ ] Feature generation for additional sensor modalities such as: blood oxygen saturation, blood volume changes, respiration rate, and step counts\n \n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8873596887418144,
      "result": {
        "original_header": "People",
        "type": "Text_excerpt",
        "value": "In collaboration with the [Digital Biomarker Discovery Pipeline](https://dbdp.org).  \n[<img src=\"https://dbdp.org/assets/dbdp/DBDP_logo_2.jpg\" width=150>](https://dbdp.org) \n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://flirt.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/im-ethz/flirt/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/im-ethz/flirt/master/notebooks/empatica-processing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/notebooks/empatica-processing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://mybinder.org/v2/gh/im-ethz/flirt/master"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQs",
        "type": "Text_excerpt",
        "value": "- **How does FLIRT distinguish from other physiological data processing packages such as neurokit?**  \\\n    While FLIRT works with physiological data like other packages, it places special emphasis on the inherent challenges\n    of data processing obtained from (consumer) wearable devices such as smartwaches instead of professional,\n    medical-grade recording devices such as ECGs or EEGs. As an example, when processing data from smartwatches, one\n    could be confronted with inaccurate data, which needs artifact removal, or measurement gaps, which need to be\n    dealt with.\n    "
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/im-ethz/flirt/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "im-ethz/flirt"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FLIRT"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.1016/j.cmpb.2021.106461"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/im-ethz/flirt/raw/master/docs/img/flirt-workflow.png"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "FLIRT"
        ],
        "type": "Text_excerpt",
        "value": "FLIRT is available from [PyPI](https://pypi.org/project/flirt/) and can be installed via pip:\n```\npip install flirt\n```\n\nAlternatively, you can checkout the source code from the [GitHub repository](https://github.com/im-ethz/flirt):\n```\ngit clone https://github.com/im-ethz/flirt\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8603780198194749,
      "result": {
        "original_header": "FLIRT",
        "type": "Text_excerpt",
        "value": "\u27a1\ufe0f **Are you ready to FLIRT with your wearable data?**\n \n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/im-ethz/flirt/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "acc, ai, biosignals, digital-biomarker, digital-signal-processing, eda, empatica, empatica-e4, flirt, health, hrv, machine-learning, mhealth, ubiquitous-computing, wearables"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2020 ETH Zurich \u2013 Chair of Information Management\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nOf note, the cvxEDA algorithm \"\"cvxEDA: a Convex Optimization Approach to \nElectrodermal Activity Processing\" IEEE Transactions on Biomedical Engineering, \n2015 DOI: 10.1109/TBME.2015.2474131\" is published under GPL-3.0 license. If you use \nthe package including the cvxEDA algorithm the GPL-3.0 license applies.\n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://dbdp.org/assets/dbdp/DBDP_logo_2.jpg"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "flirt"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "im-ethz"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/flirt/"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 472970,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 89854,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:42:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 62
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick example",
        "type": "Text_excerpt",
        "value": "Generate a comprehensive set of features for an Empatica E4 data archive with a single line of code \ud83d\ude80\n```\nimport flirt\nfeatures = flirt.with_.empatica('./1234567890_A12345.zip')\n```\n\nCheck out the [documentation](https://flirt.readthedocs.io/) and exemplary [Jupyter notebooks](https://github.com/im-ethz/flirt/tree/master/notebooks/).\n"
      },
      "source": "https://raw.githubusercontent.com/im-ethz/flirt/master/README.md",
      "technique": "header_analysis"
    }
  ]
}