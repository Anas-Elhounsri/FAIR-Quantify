{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "The software is an implementation of the method MESSI, jointly developed by Dongshunyi \"Dora\" Li, [Jun Ding](https://github.com/phoenixding) and Ziv Bar-Joseph from [System Biology Group @ Carnegie Mellon University](http://sb.cs.cmu.edu/).  \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/doraadong/MESSI"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "type": "Text_excerpt",
        "value": "* dongshul at andrew.cmu.edu \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-23T04:25:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-05T04:22:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A predictive framework to identify signaling genes active in cell-cell interaction "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "MESSI (**M**ixture of **E**xperts for **S**patial **S**ignaling genes **I**dentification) is a predictive framework to identify signaling genes active in cell-cell interaction. It jointly models gene interactions within and between cells, using the recently developed spatial single cell expression data. MESSI combines the ability to subdivide cell types with multi-task learning to accurately infer the expression of a set of response genes based on signaling genes and to provide useful biological insights about key signaling genes and cell subtypes. \n\n![flowchart](./method_diagram.png)\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Table of Contents",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "- [Get started](#Get&nbsp;started)\n- [Command-line tools](#Command-line)\n- [Tutorials](#Tutorials)\n- [Updates-log](#Updates-log)\n- [Learn more](#Learn-more)\n- [Credits](#Credits)\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9819968996469327,
      "result": {
        "original_header": "Train (and test) MESSI model",
        "type": "Text_excerpt",
        "value": "```shell\nusage: messi [-h] -i INPUT [-ilr INPUT_LR] -o OUTPUT -d\n             {merfish,merfish_cell_line,starmap} -g GENDER -b BEHAVIOR -c\n             CELLTYPE -m MODE [-c1 NUMLEVEL1] [-c2 NUMLEVEL2] [-e EPOCHS]\n             [-gs GRID_SEARCH] [-ns N_SETS] [-r NUMREPLICATES] [-p PREPROCESS]\n             [-tr TOPKRESPONSES] [-ts TOPKSIGNALS]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        string, path to the input folder with the expression\n                        data, default 'input/'\n  -ilr INPUT_LR, --input_lr INPUT_LR\n                        string, optional, path to the input folder with the\n                        ligands and receptors list, default 'input/'\n  -o OUTPUT, --output OUTPUT\n                        string, path to the output folder, default 'output/'\n  -d {merfish,merfish_cell_line,starmap}, --dataType {merfish,merfish_cell_line,starmap}\n                        string, type of expression data, 'merfish' for MERFISH\n                        hypothalamus data, 'merfish_cell_line' for MERFISH U-2\n                        OS cells, 'starmap' for 'STARmap mPFC cells';default\n                        'merfish'\n  -g GENDER, --gender GENDER\n                        string, gender of input animal sample, default\n                        'Female', put 'na' if not available\n  -b BEHAVIOR, --behavior BEHAVIOR\n                        string, behavior of input animal sample, default\n                        'Naive', put 'na' if not available\n  -c CELLTYPE, --cellType CELLTYPE\n                        string, cell type that will be built a model for, use\n                        \\ for white-space, e.g. 'OD\\ Mature\\ 2', default\n                        'Excitatory'\n  -m MODE, --mode MODE  string, any of 'train', 'CV'; if 'train', then all\n                        data will be used for training and output a pickle\n                        file for learned parameters; if 'CV', then cross-\n                        validation will be conducted each time with an\n                        animal/sample left out and each CV run output a pickle\n                        file and prediction result, default 'train'\n  -c1 NUMLEVEL1, --numLevel1 NUMLEVEL1\n                        integer, optional, number of classes at level 1,\n                        number of experts = number of classes at level 1 x\n                        number of classes at level 2, default 1\n  -c2 NUMLEVEL2, --numLevel2 NUMLEVEL2\n                        integer, optional, number of classes at level 2,\n                        default 5\n  -e EPOCHS, --epochs EPOCHS\n                        integer, optional, number of epochs to train MESSI,\n                        default 20\n  -gs GRID_SEARCH, --grid_search GRID_SEARCH\n                        boolean, optional, if conduct grid search for hyper-\n                        parameters, default False\n  -ns N_SETS, --n_sets N_SETS\n                        integer, optional, number of CV sets for grid search,\n                        default 3\n  -r NUMREPLICATES, --numReplicates NUMREPLICATES\n                        integer, optional, number of times to run with same\n                        set of parameters, default 1\n  -p PREPROCESS, --preprocess PREPROCESS\n                        string, optional, the way to include neighborhood\n                        information; neighbor_cat: include by concatenating\n                        them to the cell own features; neighbor_sum: include\n                        by addinding to the cell own features; anything\n                        without 'neighbor': no neighborhood information will\n                        be used as features; 'baseline': only baseline\n                        features; default 'neighbor_cat'\n  -tr TOPKRESPONSES, --topKResponses TOPKRESPONSES\n                        integer, optional, number of top dispersed responses\n                        genes to model,default None (to include all response\n                        genes)\n  -ts TOPKSIGNALS, --topKSignals TOPKSIGNALS\n                        integer, optional, number of top dispersed signalling\n                        genes to use as features, default None (to include all\n                        signalling genes)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.854881680014052,
      "result": {
        "original_header": "Learn-more",
        "type": "Text_excerpt",
        "value": "Check our [paper published in *Bioinformatics*](https://doi.org/10.1093/bioinformatics/btaa769) for more information. The pre-print version is available at [*biorxiv*](https://www.biorxiv.org/content/10.1101/2020.07.27.221465v2).\n \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download helper data &amp; expression data and convert them to required formats",
        "parent_header": [
          "Command-line"
        ],
        "type": "Text_excerpt",
        "value": "In terminal, type (arguments are taken for example): \n\n```shell\nreadyData.py -i ../input/ -d merfish\n```\nThe usage of this script is listed as follows:  \n\n```shell\nusage: readyData.py [-h] -i INPUT -d DATATYPE\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        string, path to the folder to save the expression\n                        data, default 'input/'\n  -d DATATYPE, --dataType DATATYPE\n                        string, type of expression data, default 'merfish'\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/doraadong/MESSI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/doraadong/MESSI/master/tutorials/tutorial_v2_MERFISH_hypothalamus_with_grid_search.ipynb"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/tutorials/tutorial_v2_MERFISH_hypothalamus_with_grid_search.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/doraadong/MESSI/master/tutorials/results_reproduction_MERFISH_hypothalamus.ipynb"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/tutorials/results_reproduction_MERFISH_hypothalamus.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/doraadong/MESSI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "doraadong/MESSI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/doraadong/MESSI/master/./method_diagram.png"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install within a virtual environment",
        "parent_header": [
          "Get started",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "It is recommended to use a virtural environment/pacakges manager such as [Anaconda](https://www.anaconda.com/). After successfully installing Anaconda/Miniconda, create an environment by following: \n\n```shell\nconda create -n myenv python=3.6\n```\n\nYou can then install and run the package in the virtual environment. Activate the virtural environment by: \n\n```shell\nconda activate myenv\n```\n\nMake sure you have **pip** installed in your environment. You may check by \n\n```shell\nconda list\n```\n\nIf not installed, then: \n\n```shell\nconda install pip\n```\n\nThen install MESSI, together with all its dependencies by: \n\n```shell\npip install --upgrade  https://github.com/doraadong/MESSI/tarball/master\n```\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Not using virtural environment",
        "parent_header": [
          "Get started",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you prefer not to use a virtual envrionment, then you may install MESSI and its dependencies by (may need to use **sudo**): \n\n```shell\npip3 install --upgrade  https://github.com/doraadong/MESSI/tarball/master\n```\n\nYou may find where the package is installed by:\n \n```shell\npip show messi\n```\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8384687798875592,
      "result": {
        "original_header": "Train (and test) MESSI model",
        "type": "Text_excerpt",
        "value": "Run MESSI by (arguments are taken for example): \n```shell\nmessi -i ../input/ -o ../output/ -d merfish -g Female -b Parenting -c Excitatory -m train -c1 1 -c2 8 -e 5\n```\nThe usage of this file is listed as follows:  \n \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/doraadong/MESSI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "expression, mixture-model, multi-task, signaling, spatial, subtype"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 doraadong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\n\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MESSI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "doraadong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 357923,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 170998,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Get started"
        ],
        "type": "Text_excerpt",
        "value": "* Python >= 3.6\n* Python side-packages:  \n-- scikit-learn >= 0.22.1  \n-- scipy >= 1.3.0  \n-- numpy >= 1.16.3  \n-- pandas >= 0.25.3  \n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:52:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Not using virtural environment",
        "parent_header": [
          "Get started",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you prefer not to use a virtual envrionment, then you may install MESSI and its dependencies by (may need to use **sudo**): \n\n```shell\npip3 install --upgrade  https://github.com/doraadong/MESSI/tarball/master\n```\n\nYou may find where the package is installed by:\n \n```shell\npip show messi\n```\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "type": "Text_excerpt",
        "value": "See [tutorials/MESSI for MERFISH hypothalamus](tutorials/tutorial_v2_MERFISH_hypothalamus_with_grid_search.ipynb), for a detailed intro on how to \n  * Train and test a MESSI model\n  * Analyze the model parameters to infer cell subtypes differ in signaling genes\n  * Train and test the data with other model configurations \n\nWe also prepared [tutorials/results reprudction](tutorials/results_reproduction_MERFISH_hypothalamus.ipynb) to reproduce MESSI's results shown in our manuscript.\n"
      },
      "source": "https://raw.githubusercontent.com/doraadong/MESSI/master/README.md",
      "technique": "header_analysis"
    }
  ]
}