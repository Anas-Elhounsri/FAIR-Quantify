{
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@atomscience.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ATOMScience-org/AMPL"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Table of Contents\n\n<!-- toc -->\n- [Contributing to AMPL](#contributing-to-ampl)\n  - [Getting Started](#getting-started)\n  - [Pull Request Process](#pull-request-process)\n  - [Coding Conventions](#coding-conventions)\n  - [Documentation Conventions](#document-conventions)\n- [The Agreement](#the-agreement)\n- [AMPL Technical Steering Committee](#ampl-technical-steering-committee)\n<!-- tocstop -->\n\n## Contributing to AMPL\n\nWe actively encourage community contributions to AMPL. The first\nplace to start getting involved is\n[the tutorials](https://github.com/ATOMScience-org/AMPL/tree/master/atomsci/ddm/examples).\n\nAfterwards, we encourage contributors to give a shot to improving our documentation.\nWhile we take effort to provide good docs, there's plenty of room\nfor improvement. All docs are hosted on [Github](https://github.com/ATOMScience-org/AMPL) in `README.md` files and on [ReadtheDocs](https://ampl.readthedocs.io/en/latest/).\n\nOnce you've got a sense of how AMPL works, we encourage the use\nof Github issues to discuss more complex changes, raise requests for\nnew features or propose changes to the global architecture of AMPL.\nOnce consensus is reached on the issue, please submit a PR with proposed\nmodifications. All contributed code to AMPL will be reviewed by a member\nof the AMPL team, so please make sure your code style and documentation\nstyle match our guidelines!\n\n### Getting Started\n\nTo develop AMPL on your machine, we recommend using pip for managing\npackages. If you want to manage multiple builds of AMPL, you can make use of\n[python virtual environments](https://docs.python.org/3/library/venv.html)\nto maintain separate Python package environments, each of which can be tied\nto a specific build of AMPL. Here are some tips to get started:\n\n1. Fork the [AMPL](https://github.com/ATOMScience-org/AMPL) repository\nand clone the forked repository\n\n```bash\ngit clone https://github.com/YOUR-USERNAME/AMPL.git\ncd AMPL\n```\n\n&nbsp;&nbsp;&nbsp;&nbsp; 1.1. If you already have AMPL from source, update it by running\n```bash\ngit fetch upstream\ngit rebase upstream/master\n```\n\n2. Set up a new environment for AMPL by following these [instructions](https://github.com/ATOMScience-org/AMPL#install).\n\nKeep in mind, every contribution must pass the unit tests.\n\n### Pull Request Process\n\nEvery contribution must be a pull request and must have adequate time for\nreview by other committers.\n\nA member of the AMPL team will review the pull request.\nThe default path of every contribution should be to merge to the current dev branch, usually named as upcoming version tag, such as branch 1.6.0. The discussion,\nreview, and merge process should be designed as corrections or improvements that move the\ncontribution into the path to merge. Once there are no more corrections,\n(dissent) changes should merge without further process. \n\n### Sign your work\n\nPlease use the sign-off line at the end of the patch. Your signature certifies that you wrote the patch or otherwise have the right to pass it on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n\n*Thank you [OpenFL](https://github.com/securefederatedai/openfl/blob/develop/CONTRIBUTING.md) for this section*\n\n### Coding Conventions\n\nAMPL uses these tools for keeping our codes healthy.\n\n- [pytest](https://docs.pytest.org/en/6.2.x/index.html) (unit and integrative testing)\n\nBefore making a PR, please check your codes using them and include tests, both unit and integrative, \nfor testing your contribution. PRs will not be accepted unless they \ncome with tests.\n\n### Document Conventions\n\nAMPL uses [Sphinx](https://www.sphinx-doc.org/en/master/) to build\n[the documentation](https://ampl.readthedocs.io/en/latest/).\nThe document is automatically built by\n[Numpy style docstrings](https://numpydoc.readthedocs.io/en/latest/format.html#numpydoc-docstring-guide)\nin source codes.\nFor any changes or modification to source code in a PR, please don't forget to add or modify Numpy style docstrings.\n\n## The Agreement\nAMPL is licensed under the terms in MIT License. By contributing to the project, \nyou agree to the license and copyright terms therein and release your contribution under these terms.\n\n## AMPL Technical Steering Committee\n\nThe Technical Steering Committee oversees all top-level administration of AMPL.\n\nThe TSC exercises autonomy in setting up and maintaining procedures, policies,\nand management and administrative structures as it deems appropriate for the\nmaintenance and operation of these projects and resources.\n\nIncluded in the responsibilities of the TSC are:\n\n* Managing code and documentation creation and changes for the listed projects and resources\n* Performing code reviews on incoming pull requests and merging suitable code changes\n* Setting and maintaining standards covering contributions of code, documentation and other materials\n* Managing code and binary releases: types, schedules, frequency, delivery mechanisms\n* Making decisions regarding dependencies of AMPL, including what those\ndependencies are and how they are bundled with source code and releases\n* Creating new repositories and projects under the @ATOMscience GitHub organization as required\n* Setting overall technical direction for the AMPL project, including \nhigh-level goals and low-level specifics regarding features and functionality\n* Setting and maintaining appropriate standards for community discourse via the various\nmediums under TSC control \n\nMembers of the TSC will meet regularly (over phone or video conferencing)\nto coordinate efforts.\nThe current members of the TSC are (alphabetically)\n* Jonathan Allen\n* Sean Black \n* Stewart He\n* Jessica Mauvais\n* Kevin McLoughlin\n* Amanda Paulson\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Project information"
        ],
        "type": "Text_excerpt",
        "value": "Thank you for contributing to AMPL!\n\n- Contributions must be submitted through pull requests.\n- All new contributions must adhere to the MIT license.  \n&nbsp;  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Project information"
        ],
        "type": "Text_excerpt",
        "value": "- [Amanda Paulson](https://github.com/paulsonak) <sub>(5)</sub>\n- Stewart He <sub>(1)</sub>\n- Da Shi <sub>(6)</sub>\n- Ravichandran Sarangan <sub>(7)</sub>\n- Jessica Mauvais <sub>(1)</sub>\n\n<sub>1. [Lawrence Livermore National Laboratory](https://www.llnl.gov/)</sub>\\\n<sub>2. [GlaxoSmithKline Inc.](https://www.gsk.com/en-gb)</sub>\\\n<sub>3. [Frederick National Laboratory for Cancer Research](https://frederick.cancer.gov)</sub>\\\n<sub>4. Computable</sub>\\\n<sub>5. [University of California, San Francisco](https://www.ucsf.edu/)</sub>\\\n<sub>6. [Schrodinger](https://www.schrodinger.com/)</sub>\\\n<sub>7. [Leidos](https://www.leidos.com)</sub>\n&nbsp;  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-07T22:17:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T16:20:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The ATOM Modeling PipeLine (AMPL) is an open-source, modular, extensible software pipeline for building and sharing models to advance in silico drug discovery."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9567141487002583,
      "result": {
        "original_header": "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
        "type": "Text_excerpt",
        "value": "An open-source, end-to-end software pipeline for data curation, model building, and molecular property prediction to advance in silico drug discovery. \n\nThe ATOM Modeling PipeLine (AMPL) extends the functionality of DeepChem and supports an array of machine learning and molecular featurization tools to predict key potency, safety and pharmacokinetic-relevant parameters. AMPL has been benchmarked on a large collection of pharmaceutical datasets covering a wide range of parameters. This is a living software project with active development. Check back for continued updates. Feedback is welcomed and appreciated, and the project is open to contributions! An [article describing the AMPL project](https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b01053) was published in JCIM. The AMPL pipeline documentation is available [here](https://ampl.readthedocs.io/en/latest/pipeline.html). \nCheck out our new tutorial series that walks through AMPL's end-to-end modeling pipeline to build a machine learning model! View them in our [docs](https://ampl.readthedocs.io/en/latest/) or as Jupyter notebooks in our [repo](https://github.com/ATOMScience-org/AMPL/tree/master/atomsci/ddm/examples/tutorials). \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924566154620452,
      "result": {
        "original_header": "AMPL Features",
        "type": "Text_excerpt",
        "value": "<details><summary>AMPL enables tasks for modeling and prediction from data ingestion to data analysis and can be broken down into the following stages:</summary> \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953933975654444,
      "result": {
        "original_header": "Install AMPL",
        "type": "Text_excerpt",
        "value": "### 1. Data curation\n- Generation of RDKit molecular SMILES structures\n- Processing of qualified or censored data processing\n- Curation of activity and property values \n### 5. Visualization and analysis\n- Visualization and analysis tools  \n</details>\nDetails of running specific features are within the [parameter (options) documentation](#Pipeline-parameters). More detailed documentation is in the [library documentation](#Library-documentation).   \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9620358291867371,
      "result": {
        "original_header": "Tests",
        "type": "Text_excerpt",
        "value": "AMPL includes a suite of software tests. This section explains how to run a very simple test that is fast to run. The Python test fits a random forest model using Mordred descriptors on a set of compounds from Delaney, *et al* with solubility data. A molecular scaffold-based split is used to create the training and test sets. In addition, an external holdout set is used to demonstrate how to make predictions on new compounds. \n- `test_delany_RF.py`: This script loads and curates the dataset, generates a model pipeline object, and fits a model. The model is reloaded from the filesystem and then used to predict solubilities for a new dataset.\n- `config_delaney_fit_RF.json`: Basic parameter file for fitting\n- `config_delaney_predict_RF.json`: Basic parameter file for predicting\n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8755102369021668,
      "result": {
        "original_header": "Install AMPL",
        "type": "Text_excerpt",
        "value": "The policy is  \n1. Create a branch based off a development (\"1.6.0 \"for example) or \"master\" branch\n2. Create a pull request. Assign a reviewer to approve the code changes  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9787504380778195,
      "result": {
        "original_header": "Code Push Policy",
        "type": "Text_excerpt",
        "value": "> ***Note***:\n> Step 2 is required for pushing directly to \"master\". For a development branch, this step is recommended but not required.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9665392835094276,
      "result": {
        "original_header": "Docstring format",
        "type": "Text_excerpt",
        "value": "The [\"Google docstring\"](https://github.com/google/styleguide/blob/gh-pages/pyguide.md#38-comments-and-docstrings) format is used in the AMPL code. When writing new code, please use the same Docstring style. Refer [here](https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google) and [here](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html) for examples.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9844595525959,
      "result": {
        "original_header": "Built with",
        "type": "Text_excerpt",
        "value": "- [DeepChem](https://github.com/deepchem/deepchem): A rich repository of chemistry-specific model types and utilities\n- [RDKit](https://github.com/rdkit/rdkit): Molecular informatics library\n- [Mordred](https://github.com/mordred-descriptor/mordred): Chemical descriptors\n- Other Python package dependencies \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.95872484734976,
      "result": {
        "original_header": "Release",
        "type": "Text_excerpt",
        "value": "AMPL is distributed under the terms of the MIT license. All new contributions must be made under this license. \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9034829288903196,
      "result": {
        "original_header": "Install AMPL",
        "type": "Text_excerpt",
        "value": "See [MIT license](LICENSE) and [NOTICE](NOTICE) for more details. \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ATOMconsortium/AMPL/tree/master/atomsci/ddm/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Library documentation",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Running AMPL"
        ],
        "type": "Text_excerpt",
        "value": "AMPL includes detailed docstrings and comments to explain the modules. Full HTML documentation of the Python library is available with the package at [https://ampl.readthedocs.io/en/latest/](https://ampl.readthedocs.io/en/latest/).\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ampl.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ATOMconsortium/AMPL/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/Delaney_Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/Delaney_Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/14_BSEP_modeling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/14_BSEP_modeling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/12_AMPL_HPO_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/12_AMPL_HPO_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/02_Explore_Data_ExcapeDB_curation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/02_Explore_Data_ExcapeDB_curation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/06a_UnionDSet.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/06a_UnionDSet.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Workshop_06052021.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Workshop_06052021.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/03_Explore_Data_DTC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/03_Explore_Data_DTC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/06_Combine_Datasets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/06_Combine_Datasets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/10_Delaney_Solubility_Prediction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/10_Delaney_Solubility_Prediction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/11_CHEMBL26_SCN5A_IC50_prediction.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/11_CHEMBL26_SCN5A_IC50_prediction.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_3.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/AMPL_FNL_Wrshp2_3.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/09_AMPL_EDA_Part2_Classification.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/09_AMPL_EDA_Part2_Classification.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/05_EDA_Curate_Merge_Visualize.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/05_EDA_Curate_Merge_Visualize.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/04_Explore_Data_DTC_Curate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/04_Explore_Data_DTC_Curate.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/00_BasicCOLAB_Tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/00_BasicCOLAB_Tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/08_AMPL_EDA_Part2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/08_AMPL_EDA_Part2.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/01_Exploring_Target_Activity_ExcapeDB.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/01_Exploring_Target_Activity_ExcapeDB.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/07_EDA_With_Harmonization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/07_EDA_With_Harmonization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/GCP_AMPL_FNL_Workshop_06052021.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/GCP_AMPL_FNL_Workshop_06052021.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/02_perform_a_split.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/02_perform_a_split.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/01_data_curation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/01_data_curation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/08_visualization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/08_visualization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/07_train_production_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/07_train_production_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/05_hyperopt.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/05_hyperopt.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/03_train_regression_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/03_train_regression_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/04_application_trained_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/04_application_trained_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/06_compare_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/tutorials/06_compare_models.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 67
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ATOMScience-org/AMPL"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ATOM Modeling PipeLine (AMPL) for Drug Discovery"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/install_dev.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/data_curation/MultiplesourceCurn/sourceCuration/runme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/examples/archive/tutorials2021/config/install_AMPL_GPU_test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/atomsci/ddm/docs/ATOM_cymatics_black_wordmark.jpg"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery"
        ],
        "type": "Text_excerpt",
        "value": "AMPL 1.6 supports Python 3.9 CPU or CUDA-enabled machines using CUDA 11.8 on Linux. All other systems are experimental. For a quick install summary, see [here](#install-summary). We do not support other CUDA versions because there are multiple ML package dependency conflicts that can occur. For more information you can look at [DeepChem](https://deepchem.readthedocs.io/en/latest/get_started/installation.html), [TensorFlow](https://www.tensorflow.org/install/pip), [PyTorch](https://pytorch.org/get-started/locally/), [DGL](https://www.dgl.ai/pages/start.html).\n\nFor installation on Apple Silicon M Chips, please see the Docker container instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Create a virtual env with Python 3.9",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "Make sure to create your virtual env in a convenient directory that has at least 12Gb space.\n\nGo to the directory where the new environment directory be installed in. Define an environment variable - \"ENVROOT\".\n\n```bash\nexport ENVROOT=~/workspace # for LLNL LC users, use your workspace\nor\nexport ENVROOT=~ # or the directory as your environment root\n```\n\n> *We use \"workspace\" and \"atomsci-env\" as an example here.*\n\n```bash\n# LLNL only: \n# module load python/3.9.12\ncd $ENVROOT\npython3.9 -m venv atomsci-env\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Activate the environment",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nsource $ENVROOT/atomsci-env/bin/activate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Update pip",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npip install pip --upgrade\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Clone AMPL repository",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/ATOMScience-org/AMPL.git \n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Install pip requirements",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "Depending on system performance, creating the environment can take some time.\n> ***Note:*** *Based on which environment (CPU or CUDA) to run on, only run one of the following:*\n\n- CPU-only installation:\n```bash\ncd AMPL/pip\npip install -r cpu_requirements.txt\n```\n\n- CUDA installation:\n\nFirst load the CUDA module. Then run cuda specific package install.\n\n```bash\ncd AMPL/pip\n# LLNL only: \n# module load cuda/11.8\npip install -r cuda_requirements.txt\n```\nIf you get `out of memory` errors, try setting these environment variables:\n```\nexport LD_LIBRARY_PATH=<your_env>/lib:$LD_LIBRARY_PATH\nexport PYTHONUSERBASE=<your_env>\nexport OPENBLAS_NUM_THREADS=1\nexport OMP_NUM_THREADS=48\nexport PYTORCH_HIP_ALLOC_CONF=gargage_collection_threshold:0.9,max_split_size_mb:128\nexport TF_FORCE_GPU_ALLOW_GROWTH=true\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. *(Optional) LLNL LC only*: if you use <a href=\"https://ampl.readthedocs.io/en/latest/pipeline.html#module-pipeline.model_tracker\">model_tracker</a>, install atomsci.clients",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# LLNL only: required for ATOM model_tracker\npip install -r clients_requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install AMPL",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "Run the following to build the \"atomsci\" modules. This is required.\n\n```bash\n# return to AMPL parent directory\ncd ..\n./build.sh\npip install -e .\n```\n---\n## Installation Quick Summary\n```bash\nexport ENVROOT=~/workspace           # set ENVROOT example\n# LLNL only:\n# module load python/3.9.12\n\npython3.9 -m venv atomsci-env        # create environment with Python 3.9\nsource $ENVROOT/atomsci-env/bin/activate \npip install pip --upgrade               \n\ngit clone https://github.com/ATOMScience-org/AMPL.git # clone AMPL\ncd AMPL/pip    \n# LLNL only:\n# If use CUDA: \n# module load cuda/11.8                         \npip install -r cpu_requirements.txt    # install cpu_requirements.txt OR cuda_requirements.txt  \n\n# LLNL only: required for ATOM model_tracker\n# pip install -r clients_requirements.txt\n\ncd ..                                   \n./build.sh                            \npip install -e .                        \n```\n---\n## Create jupyter notebook kernel (optional)\nTo run AMPL from Jupyter Notebook. To setup a new kernel, first activate your environment and then run the following command:\n\n```\npython -m ipykernel install --user --name atomsci-env\n```\n\n---\n## Install with Docker\n- Download and install Docker Desktop.\n  - https://www.docker.com/get-started\n- Create a workspace folder to mount with Docker environment and transfer files. \n- Get the Docker image and run it. Since 1.6.3, there are some changes with the AMPL Docker.\n\nTo retrieve, run version 1.6.2 or earlier, please specify the desired version tag:\n  ```\n  docker pull atomsci/atomsci-ampl:v1.6.2\n  docker run -it -p 8888:8888 -v </local_workspace_folder>:</directory_in_docker> atomsci/atomsci-ampl:v1.6.2\n  ```\n\nFor AMPL versions 1.6.3 and later, we offer downloadable images for various platforms (CPU, GPU or Linux/ARM64). To run a Docker container, be sure to append `bash` at the end of the command to open a bash session. \n\n  ```\n  docker pull atomsci/atomsci-ampl:latest-<platform> # can be cpu, gpu, or arm (for arm64 chip)\n  docker run -it -p 8888:8888 -v </local_workspace_folder>:</directory_in_docker> atomsci/atomsci-ampl:latest-<platform> bash\n  #inside docker environment\n  jupyter-notebook --ip=0.0.0.0 --allow-root --port=8888 &\n  # -OR-\n  jupyter-lab --ip=0.0.0.0 --allow-root --port=8888 &\n  ```\n- Visit the provided URL in your browser, ie\n  - http://d33b0faf6bc9:8888/?token=656b8597498b18db2213b1ec9a00e9d738dfe112bbe7566d\n  - Replace the \"d33b0faf6bc9\" with \"localhost\"\n  - If this doesn't work, exit the container and change port from 8888 to some other number such as 7777 or 8899 (in all 3 places it's written), then rerun both commands\n- From the notebook, you may need to set the kernel that atomsci is installed (\"atomsci-venv\") in order to acccess the `atomsci` package.\n\nFor additional options related to building, running, and other Docker development tasks, please refer to [Makefile.md](Makefile.md).\n\n---\n\n## Uninstall\nTo remove AMPL from a pip environment use:\n```bash\npip uninstall atomsci-ampl\n```\n\nTo remove an entire virtual environment named \"atomsci-env\":\n```bash\nrm -rf $ENVROOT/atomsci-env\n```\n\nTo remove cached packages and clear space:\n```bash\npip cache purge\n```\n\n---\n## AMPL Features\n<details><summary>AMPL enables tasks for modeling and prediction from data ingestion to data analysis and can be broken down into the following stages:</summary>\n\n### 1. Data curation\n- Generation of RDKit molecular SMILES structures\n- Processing of qualified or censored data processing\n- Curation of activity and property values\n\n### 2. Featurization\n- Extended connectivity fingerprints (ECFP)\n- Graph convolution latent vectors from DeepChem\n- Chemical descriptors from Mordred package\n- Descriptors generated by MOE (requires MOE license)  \n\n### 3. Model training and tuning\n- Test set selection\n- Cross-validation\n- Uncertainty quantification\n- Hyperparameter optimization  \n\n### 4. Supported models\n- scikit-learn random forest models\n- XGBoost models\n- Fully connected neural networks\n- Graph convolution models  \n\n### 5. Visualization and analysis\n- Visualization and analysis tools  \n</details>\nDetails of running specific features are within the [parameter (options) documentation](#Pipeline-parameters). More detailed documentation is in the [library documentation](#Library-documentation).  \n\n---\n## Running AMPL\nAMPL can be run from the command line or by importing into Python scripts and Jupyter notebooks.  \n\n### Python scripts and Jupyter notebooks\nAMPL can be used to fit and predict molecular activities and properties by importing the appropriate modules. See the [examples](atomsci/ddm/examples/) for more descriptions on how to fit and make predictions using AMPL.\n\n### Pipeline parameters\nAMPL includes many parameters to run various model fitting and prediction tasks.\n- Pipeline options (parameters) can be set within JSON files containing a parameter list.\n- The parameter list with detailed explanations of each option can be found at [atomsci/ddm/docs/PARAMETERS.md](atomsci/ddm/docs/PARAMETERS.md).\n- Example pipeline JSON files can be found in the tests directory and the example directory.  \n\n### Library documentation\nAMPL includes detailed docstrings and comments to explain the modules. Full HTML documentation of the Python library is available with the package at [https://ampl.readthedocs.io/en/latest/](https://ampl.readthedocs.io/en/latest/).\n\n### More information on AMPL usage\n- More information on AMPL usage can be found in [Advanced AMPL usage](#advanced-ampl-usage)   \n\n---\n## Tests\nAMPL includes a suite of software tests. This section explains how to run a very simple test that is fast to run. The Python test fits a random forest model using Mordred descriptors on a set of compounds from Delaney, *et al* with solubility data. A molecular scaffold-based split is used to create the training and test sets. In addition, an external holdout set is used to demonstrate how to make predictions on new compounds.\n\nTo run the Delaney Python script that curates a dataset, fits a model, and makes predictions, run the following commands:\n```\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment.\ncd atomsci/ddm/test/integrative/delaney_RF\npytest\n```\n> ***Note***: *This test generally takes a few minutes on a modern system*  \n\nThe important files for this test are listed below:\n\n- `test_delany_RF.py`: This script loads and curates the dataset, generates a model pipeline object, and fits a model. The model is reloaded from the filesystem and then used to predict solubilities for a new dataset.\n- `config_delaney_fit_RF.json`: Basic parameter file for fitting\n- `config_delaney_predict_RF.json`: Basic parameter file for predicting\n\n### More example and test information\n- More details on examples and tests can be found in [Advanced testing](#advanced-testing).\n\n---\n## Advanced AMPL usage\n\n### Command line\nAMPL can **fit** models from the command line with:\n```bash\npython model_pipeline.py --config_file filename.json # [filename].json is the name of the config file\n```  \n\nTo get more info on an AMPL config file, please refer to:\n\n  - [AMPL Features](https://github.com/ATOMScience-org/AMPL#ampl-features)\n  - [Running AMPL](https://github.com/ATOMScience-org/AMPL#running-ampl)\n  - [AMPL Tutorials](atomsci/ddm/examples/tutorials)\n\n### Hyperparameter optimization\n<details><summary>Hyperparameter optimization for AMPL model fitting is available to run on SLURM clusters or with [HyperOpt](https://hyperopt.github.io/hyperopt/) (Bayesian Optimization). To run Bayesian Optimization, the following steps can be followed.</summary>\n\n1. (Optional) Install HyperOpt with \"pip install hyperopt\"\n2. Pre-split your dataset with computed_descriptors if you want to use Mordred/MOE/RDKit descriptors.\n3. In the config JSON file, set the following parameters.\n   \n   - \"hyperparam\": \"True\"\n   - \"search_type\": \"hyperopt\"\n   - \"descriptor_type\": \"mordred_filtered,rdkit_raw\" (use comma to separate multiple values)\n   - \"model_type\": \"RF|20\" (the number after | is the number of evaluations of Bayesian Optimization)\n   - \"featurizer\": \"ecfp,computed_descriptors\" (use comma if you want to try multiple featurizers, note the RF and graphconv are not compatible)\n   - \"result_dir\": \"/path/to/save/the/final/results,/temp/path/to/save/models/during/optimization\" (Two paths separated by a comma)\n  \n   RF model specific parameters:\n   - \"rfe\": \"uniformint|8,512\", (RF number of estimators)\n   - \"rfd\": \"uniformint|8,512\", (RF max depth of the decision tree)\n   - \"rff\": \"uniformint|8,200\", (RF max number of features)\n  \n    Use the following schemes to define the searching domains\n    \n    method|parameter1,parameter2...\n    \n    method: supported searching schemes in HyperOpt include: choice, uniform, loguniform, uniformint, see https://github.com/hyperopt/hyperopt/wiki/FMin for details.\n    \n    parameters:\n      - choice: all values to search from, separated by comma, e.g. choice|0.0001,0.0005,0.0002,0.001\n      - uniform: low and high bound of the interval to serach, e.g. uniform|0.00001,0.001\n      - loguniform: low and high bound (in natural log) of the interval to serach, e.g. uniform|-13.8,-6.9\n      - uniformint: low and high bound of the interval as integers, e.g. uniforming|8,256\n  \n    NN model specific parameters:\n     - \"lr\": \"loguniform|-13.8,-6.9\", (learning rate)\n     - \"ls\": \"uniformint|3|8,512\", (layer_sizes)\n        - The number between two bars (|) is the number of layers, namely 3 layers, each one with 8~512 nodes\n        - Note that the number of layers (number between two |) can not be changed during optimization, if you want to try different number of layers, just run several optimizations. \n     - \"dp\": \"uniform|3|0,0.4\", (dropouts)\n        - 3 layers, each one has a dropout range from 0 to 0.4\n        - Note that the number of layers (number between two |) can not be changed during optimization, if you want to try different number of layers, just run several optimizations. \n    \n    XGBoost model specific parameters:\n     - \"xgbg\": \"uniform|0,0.4\", (xgb_gamma, Minimum loss reduction required to make a further partition on a leaf node of the tree)\n     - \"xgbl\": \"loguniform|-6.9,-2.3\", (xgb_learning_rate, Boosting learning rate (xgboost's \"eta\"))\n\n4. Run hyperparameter search in batch mode or submit a slurm job.\n\n    ```\n    python hyperparam_search_wrapper.py --config_file filename.json\n    ```\n    \n5. Save a checkpoint to continue it later.\n    \n    To save a checkpoint file of the hyperparameter search job, you want to set the following two parameters.\n    - \"hp_checkpoint_save\": \"/path/to/the/checkpoint/file.pkl\"\n    - \"hp_checkpoint_load\": \"/path/to/the/checkpoint/file.pkl\"\n    \n    If the \"hp_checkpoint_load\" is provided, the hyperparameter search will continue from the checkpoint. \n</details>\n\n---\n\n## Advanced testing\n### Running all tests\nTo run the full set of tests, use Pytest from the test directory:\n```bash\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment. \"atomsci\" is an example here.\ncd atomsci/ddm/test\npytest\n```\n\n### Running SLURM tests\n<details><summary>Several of the tests take some time to fit. These tests can be submitted to a SLURM cluster as a batch job.</summary> Example general SLURM submit scripts are included as `pytest_slurm.sh`.\n\n```bash\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment. \"atomsci-env\" is an example here.\ncd atomsci/ddm/test/integrative/delaney_NN\nsbatch pytest_slurm.sh\ncd ../../../..\ncd atomsci/ddm/test/integrative/wenzel_NN\nsbatch pytest_slurm.sh\n```\n</details>\n\n### Running tests without internet access\n<details><summary>AMPL works without internet access. Curation, fitting, and prediction do not require internet access.</summary>\n\nHowever, the public datasets used in tests and examples are not included in the repo due to licensing concerns. These are automatically downloaded when the tests are run. \n\nIf a system does not have internet access, the datasets will need to be downloaded before running the tests and examples. From a system with internet access, run the following shell script to download the public datasets. Then, copy the AMPL directory to the offline system.\n\n```\ncd atomsci/ddm/test\nbash download_datset.sh\ncd ../../..\n# Copy AMPL directory to offline system\n```\n</details>\n\n---\n## AMPL tutorials\nPlease follow link, [\"atomsci/ddm/examples/tutorials\"](https://github.com/ATOMScience-org/AMPL/tree/master/atomsci/ddm/examples/tutorials), to access a collection of AMPL tutorial notebooks. The tutorial notebooks give an exhaustive coverage of AMPL features. The AMPL team has prepared the tutorials to help beginners understand the basics to advanced AMPL features, and a reference for advanced AMPL users. \n\n---\n## Development\n### Installing the AMPL for development\nUsing \"pip install -e .\" will create a namespace package in your environment directory that points back to your git working directory, so every time you reimport a module you'll be in sync with your working code. Since site-packages is already in your sys.path, you won't have to fuss with PYTHONPATH or setting sys.path in your notebooks.  \n\n### Code Push Policy\nIt's recommended to use a development branch to do the work. After each release, there will be a branch opened for development.\n\nThe policy is \n\n1. Create a branch based off a development (\"1.6.0 \"for example) or \"master\" branch\n2. Create a pull request. Assign a reviewer to approve the code changes \n\n> ***Note***:\n> Step 2 is required for pushing directly to \"master\". For a development branch, this step is recommended but not required.\n\n### Docstring format\nThe [\"Google docstring\"](https://github.com/google/styleguide/blob/gh-pages/pyguide.md#38-comments-and-docstrings) format is used in the AMPL code. When writing new code, please use the same Docstring style. Refer [here](https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html#example-google) and [here](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html) for examples.\n\n### Versioning\nVersions are managed through GitHub tags on this repository.  \n\n### Built with\n- [DeepChem](https://github.com/deepchem/deepchem): A rich repository of chemistry-specific model types and utilities\n- [RDKit](https://github.com/rdkit/rdkit): Molecular informatics library\n- [Mordred](https://github.com/mordred-descriptor/mordred): Chemical descriptors\n- Other Python package dependencies\n\n---\n## Project information\n### Authors\n**[The Accelerating Therapeutics for Opportunities in Medicine (ATOM) Consortium](https://atomscience.org)**\n\n- Amanda J. Minnich <sub>(1)</sub>\n- Kevin McLoughlin <sub>(1)</sub>\n- Margaret Tse <sub>(2)</sub>\n- Jason Deng <sub>(2)</sub>\n- Andrew Weber <sub>(2)</sub>\n- Neha Murad <sub>(2)</sub>\n- Benjamin D. Madej <sub>(3)</sub>\n- Bharath Ramsundar <sub>(4)</sub>\n- Tom Rush <sub>(2)</sub>\n- Stacie Calad-Thomson <sub>(2)</sub>\n- Jim Brase <sub>(1)</sub>\n- Jonathan E. Allen <sub>(1)</sub>\n&nbsp;  \n\n### Contributors\n- [Amanda Paulson](https://github.com/paulsonak) <sub>(5)</sub>\n- Stewart He <sub>(1)</sub>\n- Da Shi <sub>(6)</sub>\n- Ravichandran Sarangan <sub>(7)</sub>\n- Jessica Mauvais <sub>(1)</sub>\n\n<sub>1. [Lawrence Livermore National Laboratory](https://www.llnl.gov/)</sub>\\\n<sub>2. [GlaxoSmithKline Inc.](https://www.gsk.com/en-gb)</sub>\\\n<sub>3. [Frederick National Laboratory for Cancer Research](https://frederick.cancer.gov)</sub>\\\n<sub>4. Computable</sub>\\\n<sub>5. [University of California, San Francisco](https://www.ucsf.edu/)</sub>\\\n<sub>6. [Schrodinger](https://www.schrodinger.com/)</sub>\\\n<sub>7. [Leidos](https://www.leidos.com)</sub>\n&nbsp;  \n\n### Support, Suggestions or Report Issues\n- If you have suggestions or like to report issues, please click [here](https://github.com/ATOMScience-org/AMPL/issues).\n&nbsp;\n\n### Contributing\nThank you for contributing to AMPL!\n\n- Contributions must be submitted through pull requests.\n- All new contributions must adhere to the MIT license.  \n&nbsp;  \n\n### Release\nAMPL is distributed under the terms of the MIT license. All new contributions must be made under this license.\n\nSee [MIT license](LICENSE) and [NOTICE](NOTICE) for more details.\n\n- LLNL-CODE-795635\n- CRADA TC02264\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install with Docker",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery"
        ],
        "type": "Text_excerpt",
        "value": "- Download and install Docker Desktop.\n  - https://www.docker.com/get-started\n- Create a workspace folder to mount with Docker environment and transfer files. \n- Get the Docker image and run it. Since 1.6.3, there are some changes with the AMPL Docker.\n\nTo retrieve, run version 1.6.2 or earlier, please specify the desired version tag:\n  ```\n  docker pull atomsci/atomsci-ampl:v1.6.2\n  docker run -it -p 8888:8888 -v </local_workspace_folder>:</directory_in_docker> atomsci/atomsci-ampl:v1.6.2\n  ```\n\nFor AMPL versions 1.6.3 and later, we offer downloadable images for various platforms (CPU, GPU or Linux/ARM64). To run a Docker container, be sure to append `bash` at the end of the command to open a bash session. \n\n  ```\n  docker pull atomsci/atomsci-ampl:latest-<platform> # can be cpu, gpu, or arm (for arm64 chip)\n  docker run -it -p 8888:8888 -v </local_workspace_folder>:</directory_in_docker> atomsci/atomsci-ampl:latest-<platform> bash\n  #inside docker environment\n  jupyter-notebook --ip=0.0.0.0 --allow-root --port=8888 &\n  # -OR-\n  jupyter-lab --ip=0.0.0.0 --allow-root --port=8888 &\n  ```\n- Visit the provided URL in your browser, ie\n  - http://d33b0faf6bc9:8888/?token=656b8597498b18db2213b1ec9a00e9d738dfe112bbe7566d\n  - Replace the \"d33b0faf6bc9\" with \"localhost\"\n  - If this doesn't work, exit the container and change port from 8888 to some other number such as 7777 or 8899 (in all 3 places it's written), then rerun both commands\n- From the notebook, you may need to set the kernel that atomsci is installed (\"atomsci-venv\") in order to acccess the `atomsci` package.\n\nFor additional options related to building, running, and other Docker development tasks, please refer to [Makefile.md](Makefile.md).\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing the AMPL for development",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Development"
        ],
        "type": "Text_excerpt",
        "value": "Using \"pip install -e .\" will create a namespace package in your environment directory that points back to your git working directory, so every time you reimport a module you'll be in sync with your working code. Since site-packages is already in your sys.path, you won't have to fuss with PYTHONPATH or setting sys.path in your notebooks.  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999999967599,
      "result": {
        "original_header": "Create jupyter notebook kernel (optional)",
        "type": "Text_excerpt",
        "value": "To run AMPL from Jupyter Notebook. To setup a new kernel, first activate your environment and then run the following command:\n```\npython -m ipykernel install --user --name atomsci-env\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999993571099429,
      "result": {
        "original_header": "Uninstall",
        "type": "Text_excerpt",
        "value": "To remove AMPL from a pip environment use:\n```bash\npip uninstall atomsci-ampl\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9914034491760508,
      "result": {
        "original_header": "Install AMPL",
        "type": "Text_excerpt",
        "value": "To remove an entire virtual environment named \"atomsci-env\":\n```bash\nrm -rf $ENVROOT/atomsci-env\n``` \nTo remove cached packages and clear space:\n```bash\npip cache purge\n``` \nTo run the Delaney Python script that curates a dataset, fits a model, and makes predictions, run the following commands:\n```\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment.\ncd atomsci/ddm/test/integrative/delaney_RF\npytest\n```\n> ***Note***: *This test generally takes a few minutes on a modern system*   \nThe important files for this test are listed below: \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985124529871656,
      "result": {
        "original_header": "Code Push Policy",
        "type": "Text_excerpt",
        "value": "> ***Note***:\n> Step 2 is required for pushing directly to \"master\". For a development branch, this step is recommended but not required.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8650836151161373,
      "result": {
        "original_header": "Versioning",
        "type": "Text_excerpt",
        "value": "Versions are managed through GitHub tags on this repository.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cheminformatics, chemistry, chemistry-discovery, machine-learning, math-physics, nci-doe-collaboration-capability, neural-network, python"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Lawrence Livermore National Security, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AMPL"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ATOMScience-org"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 26794882,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1808657,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7780,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5735,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 951,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 749,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 51,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://deepchem.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://sphinxcontrib-napoleon.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2024-09-06T19:46:52Z",
        "date_published": "2024-09-06T19:53:49Z",
        "description": "# Highlights\r\n* Automated GitHub CI Actions:\r\n   * Integrated Ruff Linter to identify potential low-risk errors and code defects.\r\n   * Configured Pytest to automatically run AMPL unit and integration tests with every commit or pull request to ensure code validation\r\n   * Automated the Docker build and push to DockerHub upon the publication of a release.\r\n\r\n# Enhancements:\r\n* Defined separate Dockerfiles for CPU and GPU configurations.\r\n* Introduced a Makefile to streamline the management of Docker builds, pulls, and Jupyter session execution.\r\n* Pip requirements:\r\n   * Introduced a new dev_requirements.txt for development and testing.\r\n   * Updated rdkit to version 2024.3.5, which resolves the PandasTools patching error in rdkit_easy and the descriptor calculation issue reported in [rdkit/rdkit#7364](https://github.com/rdkit/rdkit/issues/7364).\r\n   * Use tensorflow-cpu in cpu_requirements.txt to install the appropriate platform package.\r\n* Ruff Linter findings:\r\n   * Updated and fixed code based on Ruff reports, addressing common issues such as:\r\n       * F401 [unused-import](https://docs.astral.sh/ruff/rules/unused-import/)\r\n       * F405 [undefined-local-with-import-star-usage](https://docs.astral.sh/ruff/rules/undefined-local-with-import-star-usage/)\r\n       * F841 [unused-variable](https://docs.astral.sh/ruff/rules/unused-variable/)\r\n       * F601 [multi-value-repeated-key-literal](https://docs.astral.sh/ruff/rules/multi-value-repeated-key-literal/)\r\n       * E721 [type-comparison](https://docs.astral.sh/ruff/rules/type-comparison/)\r\n       * E402 [module-import-not-at-top-of-file](https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/)\r\n       \r\n![ruff_linter_ampl](https://github.com/user-attachments/assets/416d4013-59be-4411-8e08-2335fa61644e)\r\n\r\n# Bug Fixes:\r\n* Updated code according to Linter reports (commits: [bc34dcf](https://github.com/ATOMScience-org/AMPL/commit/bc34dcf1d44a0f608affe83f68468b139a571d9a), [86f826e](https://github.com/ATOMScience-org/AMPL/commit/86f826e8e087e46f368eff43a3b475beb1a4e5d2), [32d8b9d](https://github.com/ATOMScience-org/AMPL/commit/32d8b9dbbdedd84b69fce145d3a08bf07524f2ea))\r\n* Handled cases where the split subset is empty (commit: [a001100](https://github.com/ATOMScience-org/AMPL/commit/a001100decbfb50cf09de49aacb514d06a4471ce))",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.6.3",
        "name": "1.6.3 Release",
        "release_id": 173918364,
        "tag": "1.6.3",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/173918364",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/173918364",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2024-08-01T22:16:12Z",
        "date_published": "2024-08-01T22:19:33Z",
        "description": "# Bug fixes/Misc changes\r\n\r\n- [Issue 332](https://github.com/ATOMScience-org/AMPL/issues/332)  plot_pred_vs_actual not working for multitask models\r\n- Updates to plotting predictions for visualizing uncertainty\r\n- Pinned rdkit 2023.3.3 in pip install to work with [rdkit/rdkit#7364](https://github.com/rdkit/rdkit/issues/7364) till 2024.3.5 is released on pypi\r\n- Updated pip  README to include 'mchip_requirements.txt'",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.6.2",
        "name": "AMPL 1.6.2 release",
        "release_id": 168346000,
        "tag": "1.6.2",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/168346000",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/168346000",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2024-06-28T00:12:40Z",
        "date_published": "2024-06-28T00:25:16Z",
        "description": "# Highlights\r\n\r\n- Created a core tutorial series that represents the end-to-end modeling pipeline to build a machine learning model\r\n- Numerous improvements to visualizations in perf_plots module:\r\n   - Modified all plots to use color vision deficiency (CVD) friendly colors\r\n   - Added functions to visualize confusion matrices and model performance metrics\r\n   - Improved layout of plots produced by plot_perf_vs_epoch and plot_pred_vs_actual and added parameter to control plot size\r\n   - Reimplemented plot_prec_recall_curve to produce smoother curves.\r\n- Enhancements to multitask scaffold splitter: faster performance and optimization for response value distribution matching\r\n- Redesigned the AMPL readthedocs for easier end-user navigation. \r\n\r\n# Enhancements\r\n\r\n- Added ability to optimize multitask scaffold split for similarity of response value distributions across split subsets, using Wasserstein distance as dissimilarity metric; controlled by new parameter mtss_response_distr_weight. Improved performance of MTSS code to be much faster.\r\n- Added perf_plots functions plot_confusion_matrices, plot_model_metrics, get_metrics_from_model_pipeline and get_metrics_from_model_file to visualize and provide access to model performance metrics.\r\n- Modified plot_pred_vs_actual_from_file to make the output more consistent with plot_pred_from_actual; changed plot_pred_from_actual so that it accepts either a ModelPipeline or a model file path as its argument.\r\n- Reimplemented plot_prec_recall_curve with sklearn PrecisionRecallDisplay, with better handling of multitask models.\r\n\r\n# Bug Fixes\r\n\r\n- Fixed bug when number of scaffolds < number of superscaffolds requested\r\n- Fixed plot_pred_vs_actual_from_file so that it works on models trained with k-fold CV.\r\n- Fixed to exclude NaNs from % active calculation.",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.6.1",
        "name": "1.6.1 Release",
        "release_id": 162891693,
        "tag": "1.6.1",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/162891693",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/162891693",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2024-02-23T16:11:07Z",
        "date_published": "2024-02-23T16:13:03Z",
        "description": "## Highlights\r\n* Minimal pip install requirements\r\n  * Provide separate installations for different CPU/GPU runtimes (cpu, cuda, ROCm)\r\n\r\n## Python compatibility\r\nPython 3.9.x\r\n\r\n## Documentation\r\n* Improved the AMPL README with better logic flow and topic grouping.\r\n* Enhanced the API documentation. \r\n  * Removed private modules from the API list\r\n  * Updated all Python code to PEP 257 / Google docstring convention for consistent formatting\r\n    and so that all public modules and functions are included in API documentation.\r\n\r\n## Enhancements:\r\n* Provided Dockerfile for a local AMPL Docker image build.\r\n* Added a parameter to train a model in production mode, where all data are used to train model.\r\n* Added full support for all XGBoost model parameters, including in hyperopt searches.\r\n* Added split_strategy output column to compare_models.get_filesystem_perf_results.\r\n* Added script for patching model tarballs to point to local copy of training data (needed for AD computation).\r\n* Save the class_number parameter for multiclass classification models.\r\n* Added option to map SMILES strings to canonical tautomers in standardization functions rdkit_smiles_from_smiles and base_smiles_from_smiles.\r\n* Added model_file_reader module to simplify extraction of saved model metadata.\r\n* Added function to plot predicted vs actual responses with saved regression models.\r\n* Added module to plot nearest neighbor Tanimoto distance distributions between training and validation/test sets.\r\n* Added module to plot response value distributions for split subsets.\r\n* Updated diversity_plots to allow a user-specified color palette and increase the resolution  of the figure\r\n\r\n## Bug Fixes:\r\n* Made get_featurized_data() check if all the smiles in a dataset are represented in the prefeaturized data\r\n* Fixed bug in setting response column weights to make it consistent across featurizers.\r\n* Fixed error handling in rdkit_easy.mol_to_html to return empty string rather than None.\r\n* Fixed the Tanimoto distance plot to reflect the nearest neighbor distance instead of all distances.\r\n* Fixed freq_table's handling of nans in selected columns\r\n* Fixed bug in setting response column weights to make it consistent across featurizers.\r\n* Fixed error handling in rdkit_easy.mol_to_html to return empty string rather than None.\r\n* Fixed bug in EmbeddingFeaturization where descriptors were not transformed before input to embedding model.\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.6.0",
        "release_id": 143380002,
        "tag": "1.6.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/143380002",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/143380002",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2023-03-01T17:32:57Z",
        "date_published": "2023-03-01T17:36:37Z",
        "description": "Fixed the readthedocs build issue.",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.5.1",
        "name": "AMPL 1.5.1 release",
        "release_id": 94121590,
        "tag": "1.5.1",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/94121590",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/94121590",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2023-03-01T00:35:23Z",
        "date_published": "2023-03-01T00:43:00Z",
        "description": "*\tUpdated AMPL to deepchem 2.7.1 and the related libraries\r\n --\tPython 3.8.x\r\n --\tnumpy 1.21.6\r\n --\trdkit 2022.9.3\r\n --\trdkit-pypi 2022.3.5\r\n\r\n*\tChanged the environment setup from a mixture of conda and pip packages to pip exclusively\r\n --\tUpdated the related document to reflect the change\r\n --\tRemoved unused packages from the requirements list\r\n\r\n*\tFeature enhancements/code clean-up\r\n --\tAdded ability to highlight substructures and SMARTS pattern matches in molecules rendered with rdkit_easy functions mol_to_svg, mol_to_html, etc.\r\n --\tUpdated hyper_perf_plots.py to work with minimal examples\r\n --\tChanged splitting code to allow many-to-one mapping from compound IDs to SMILES strings\r\n --\tChange to support AD index computation for graphconv models using embeddings as features\r\n --\tAdded max_dataset_rows parameter to limit number of training set records used for AD index computation, so that AD computation is feasible for models trained on large datasets.\r\n --\tReplaced all uses of deepchem.data.DiskDataset with NumpyDataset to boost performance and reduce creation of temporary files\r\n --\tAdded workaround for DeepChem issue #1821, which was causing predictions to fail on single-compound batches.\r\n --\tImplemented tar archive safe extract to fix vulnerability CVE-2007-4559 \r\n --\tTurned off uncertainty for multi_class_config_delaney_fit_NN_graphconv.json\r\n --\tRefined AMPL version/model version compatibility checking to define groups of compatible versions according to whether the associated DeepChem versions have the same format of model checkpoint files. The current compatibility groups are:\r\n   --\tGroup1: '1.2', '1.3' \r\n   --\tGroup2: '1.4'\r\n   --\tGroup3: '1.5'\r\n\r\n*\tBug fixes\r\n\r\n\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.5.0",
        "name": "AMPL 1.5.0 release",
        "release_id": 94017957,
        "tag": "1.5.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/94017957",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/94017957",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2022-08-22T22:44:58Z",
        "date_published": "2022-08-22T22:50:53Z",
        "description": "- Added the EmbeddingFeaturization class to support transfer learning from NN models.\r\n- Added multitaskscaffold to the list of splitters that require SMILES strings as (temporary) IDs.\r\n- Added basic hyper param plotting functions\r\n- Bug fixes (fixed Multi-task models bug, etc)\r\n- Setup GitHub CI workflow to automate test jobs on push\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.4.2",
        "name": "AMPL 1.4.2 release",
        "release_id": 75038410,
        "tag": "1.4.2",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/75038410",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/75038410",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2022-06-16T20:56:48Z",
        "date_published": "2022-06-16T21:00:28Z",
        "description": "- Reverted ipython version from 7.16.3 to 7.16.1 to work with  jedi.\r\n- Updated the README.md with two install options for AMPL.",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.4.1",
        "name": "AMPL 1.4.1 release",
        "release_id": 69664095,
        "tag": "1.4.1",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/69664095",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/69664095",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2022-06-15T22:13:34Z",
        "date_published": "2022-06-15T22:18:33Z",
        "description": "-\tUpdated AMPL with deepchem 2.6.1 and the related libraries\r\no\tNumpy to 1.21.0\r\no\tIpython to 7.16.3\r\no\tPyYAML to 5.4\r\no\tTensorflow to 2.8.0\r\no\tSwitched to Pytorch implementation of full connected neural networks\r\n-\tAdded multitaskscaffold split to the pipeline\r\n-\tUpdated plot_tani_dist_distr() and hyperparameter shortlist splitting code to include fingerprint splitter.\r\n-\tAdds function curate_data.remove_outlier_replicates as part of the standard curation pipeline. Miscellaneous other improvements to data curation functions.\r\n-\tRemoved hard-coded random seed from the code\r\n-\tBugs fixes.\r\n-\tUpdated test code\r\n\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.4.0",
        "name": "AMPL 1.4.0 release",
        "release_id": 69566913,
        "tag": "1.4.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/69566913",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/69566913",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2022-01-20T23:38:01Z",
        "date_published": "2022-01-20T23:41:35Z",
        "description": "-\tModel retrain on datastore\r\n- \tAdded MultitaskScaffoldSplitter for splitting multi task datasets. Not integrated with the pipeline\r\n-\tAdded new models\r\n\u2022\tRefactoring plans for ModelWrapper and additional features for ParameterParser\r\n\u2022\tSummarize desired features for new ParameterParser\r\n-\tMoved the ATOM GitHub to `https://github.com/ATOMScience-org` and updated all references to the new github link\r\n-\tBug fixes\r\n-\tUpdated the documentation\r\n-\tFixed, updated all tests under 'unit', 'interactive' directories to work with the libraries used\r\n-\tAdded MD5 dataset hash to model_metadata.json. Use to compare if the models are the same\r\n-\tNew feature for dealing with unbalanced classification datasets \r\n-\tNew module for calculating importance for features or clusters of features in trained models.\r\n-\tupdate BSEP example to work with ADI\r\n-\tAdded support for transformers that act on dataset weights only. Added interface to DeepChem BalancingTransformer to deal with imbalanced classification datasets \r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.3.0",
        "name": "AMPL 1.3.0 release",
        "release_id": 57623399,
        "tag": "1.3.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/57623399",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/57623399",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2021-09-30T19:52:29Z",
        "date_published": "2021-09-30T19:58:53Z",
        "description": "- Fixed multi task models\r\n- Updated some tests\r\n- Added more packages used in notebooks",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.2.2",
        "name": "AMPL 1.2.2 release",
        "release_id": 50579511,
        "tag": "1.2.2",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/50579511",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/50579511",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2021-09-17T00:15:41Z",
        "date_published": "2021-09-17T00:22:11Z",
        "description": "- \tUpdated tutorials and models\r\n- \tUpdated tests scripts and test data\r\n- \tBug fixes:\r\n o     AD will not be calculated if the original training dataset cannot be located.\r\n o     Xgboost has uncertainty set to False by default.\r\n o     The prediction column returned by predict_on_dataframe in the single task case is renamed to \u2018pred\u2019.\r\n o     Seaborn package included in requirements will fix import errors.\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.2.1",
        "name": "AMPL 1.2.1 release",
        "release_id": 49715560,
        "tag": "1.2.1",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/49715560",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/49715560",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2021-09-02T23:49:25Z",
        "date_published": "2021-09-02T23:52:19Z",
        "description": "- Update to latest DeepChem release! (2.5) and Python 3.7\r\n- Integrates a new custom \u201chybrid\u201d modeling tool (used in Neurocrine pilot)\r\n- Various bug-fixes from user feedback\r\n- Updated docker image moving forward\r\n",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.2.0",
        "name": "AMPL 1.2.0 release",
        "release_id": 48930538,
        "tag": "1.2.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/48930538",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/48930538",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2021-05-17T21:54:41Z",
        "date_published": "2021-05-17T22:04:44Z",
        "description": "* Upgraded AMPL development environment to work with DeepChem 2.3\r\n* Implemented the checkpoint option for Bayesian Optimization, thus the optimization trial can be saved and resumed later.\r\n* Implemented the applicability domain index calculation together with the model inference.\r\n* AMPL version added to model_metadata.json\r\n* Added add balanced accuracy, xgboost and classification model handling to various compare models functions",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.1.0",
        "name": "AMPL 1.1.0 release",
        "release_id": 43089383,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/43089383",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/43089383",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mauvais2",
          "type": "User"
        },
        "date_created": "2021-04-13T21:49:52Z",
        "date_published": "2021-04-22T22:44:41Z",
        "description": "\u2022\tReimplemented early stopping for neural net training, so that the saved model is always the one used to generate the saved metrics.\r\n\u2022\tAdded RDKit descriptors as a supported descriptor type.\r\n\u2022\tImplemented Bayesian Optimization for hyperparameter search based on the HyperOpt library.\r\n\u2022\tExpanded functionality of hyperparameter search wrapper to include iterating over multiple descriptor types\r\n\u2022\tExpanded shortlist functionality to allow for variable response columns & (LC-specific) collections\r\n\u2022\tFixed indexing problem to allow for integer compound ids (best practice is still to use string IDs)",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.0.1",
        "name": "1.0.1 last features released for deepchem 2.1",
        "release_id": 41870551,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/41870551",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/41870551",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ATOMconsortium",
          "type": "User"
        },
        "date_created": "2020-07-17T20:40:32Z",
        "date_published": "2020-07-28T23:21:36Z",
        "description": "Release created for administration purposes.",
        "html_url": "https://github.com/ATOMScience-org/AMPL/releases/tag/1.0.0",
        "name": "1.0.0",
        "release_id": 29050803,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/29050803",
        "value": "https://api.github.com/repos/ATOMScience-org/AMPL/releases/29050803",
        "zipball_url": "https://api.github.com/repos/ATOMScience-org/AMPL/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Install pip requirements",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "Depending on system performance, creating the environment can take some time.\n> ***Note:*** *Based on which environment (CPU or CUDA) to run on, only run one of the following:*\n\n- CPU-only installation:\n```bash\ncd AMPL/pip\npip install -r cpu_requirements.txt\n```\n\n- CUDA installation:\n\nFirst load the CUDA module. Then run cuda specific package install.\n\n```bash\ncd AMPL/pip\n# LLNL only: \n# module load cuda/11.8\npip install -r cuda_requirements.txt\n```\nIf you get `out of memory` errors, try setting these environment variables:\n```\nexport LD_LIBRARY_PATH=<your_env>/lib:$LD_LIBRARY_PATH\nexport PYTHONUSERBASE=<your_env>\nexport OPENBLAS_NUM_THREADS=1\nexport OMP_NUM_THREADS=48\nexport PYTORCH_HIP_ALLOC_CONF=gargage_collection_threshold:0.9,max_split_size_mb:128\nexport TF_FORCE_GPU_ALLOW_GROWTH=true\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running AMPL",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery"
        ],
        "type": "Text_excerpt",
        "value": "AMPL can be run from the command line or by importing into Python scripts and Jupyter notebooks.  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python scripts and Jupyter notebooks",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Running AMPL"
        ],
        "type": "Text_excerpt",
        "value": "AMPL can be used to fit and predict molecular activities and properties by importing the appropriate modules. See the [examples](atomsci/ddm/examples/) for more descriptions on how to fit and make predictions using AMPL.\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pipeline parameters",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Running AMPL"
        ],
        "type": "Text_excerpt",
        "value": "AMPL includes many parameters to run various model fitting and prediction tasks.\n- Pipeline options (parameters) can be set within JSON files containing a parameter list.\n- The parameter list with detailed explanations of each option can be found at [atomsci/ddm/docs/PARAMETERS.md](atomsci/ddm/docs/PARAMETERS.md).\n- Example pipeline JSON files can be found in the tests directory and the example directory.  \n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running all tests",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Advanced testing"
        ],
        "type": "Text_excerpt",
        "value": "To run the full set of tests, use Pytest from the test directory:\n```bash\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment. \"atomsci\" is an example here.\ncd atomsci/ddm/test\npytest\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running SLURM tests",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Advanced testing"
        ],
        "type": "Text_excerpt",
        "value": "<details><summary>Several of the tests take some time to fit. These tests can be submitted to a SLURM cluster as a batch job.</summary> Example general SLURM submit scripts are included as `pytest_slurm.sh`.\n\n```bash\nsource $ENVROOT/atomsci-env/bin/activate # activate your pip environment. \"atomsci-env\" is an example here.\ncd atomsci/ddm/test/integrative/delaney_NN\nsbatch pytest_slurm.sh\ncd ../../../..\ncd atomsci/ddm/test/integrative/wenzel_NN\nsbatch pytest_slurm.sh\n```\n</details>\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running tests without internet access",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Advanced testing"
        ],
        "type": "Text_excerpt",
        "value": "<details><summary>AMPL works without internet access. Curation, fitting, and prediction do not require internet access.</summary>\n\nHowever, the public datasets used in tests and examples are not included in the repo due to licensing concerns. These are automatically downloaded when the tests are run. \n\nIf a system does not have internet access, the datasets will need to be downloaded before running the tests and examples. From a system with internet access, run the following shell script to download the public datasets. Then, copy the AMPL directory to the offline system.\n\n```\ncd atomsci/ddm/test\nbash download_datset.sh\ncd ../../..\n# Copy AMPL directory to offline system\n```\n</details>\n\n---"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:31:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 136
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support, Suggestions or Report Issues",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Project information"
        ],
        "type": "Text_excerpt",
        "value": "- If you have suggestions or like to report issues, please click [here](https://github.com/ATOMScience-org/AMPL/issues).\n&nbsp;\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "6. *(Optional) LLNL LC only*: if you use <a href=\"https://ampl.readthedocs.io/en/latest/pipeline.html#module-pipeline.model_tracker\">model_tracker</a>, install atomsci.clients",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Install",
          "Create pip environment"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n# LLNL only: required for ATOM model_tracker\npip install -r clients_requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More information on AMPL usage",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Running AMPL"
        ],
        "type": "Text_excerpt",
        "value": "- More information on AMPL usage can be found in [Advanced AMPL usage](#advanced-ampl-usage)   \n\n---"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More example and test information",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Tests"
        ],
        "type": "Text_excerpt",
        "value": "- More details on examples and tests can be found in [Advanced testing](#advanced-testing).\n\n---"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Advanced AMPL usage"
        ],
        "type": "Text_excerpt",
        "value": "AMPL can **fit** models from the command line with:\n```bash\npython model_pipeline.py --config_file filename.json # [filename].json is the name of the config file\n```  \n\nTo get more info on an AMPL config file, please refer to:\n\n  - [AMPL Features](https://github.com/ATOMScience-org/AMPL#ampl-features)\n  - [Running AMPL](https://github.com/ATOMScience-org/AMPL#running-ampl)\n  - [AMPL Tutorials](atomsci/ddm/examples/tutorials)\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hyperparameter optimization",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery",
          "Advanced AMPL usage"
        ],
        "type": "Text_excerpt",
        "value": "<details><summary>Hyperparameter optimization for AMPL model fitting is available to run on SLURM clusters or with [HyperOpt](https://hyperopt.github.io/hyperopt/) (Bayesian Optimization). To run Bayesian Optimization, the following steps can be followed.</summary>\n\n1. (Optional) Install HyperOpt with \"pip install hyperopt\"\n2. Pre-split your dataset with computed_descriptors if you want to use Mordred/MOE/RDKit descriptors.\n3. In the config JSON file, set the following parameters.\n   \n   - \"hyperparam\": \"True\"\n   - \"search_type\": \"hyperopt\"\n   - \"descriptor_type\": \"mordred_filtered,rdkit_raw\" (use comma to separate multiple values)\n   - \"model_type\": \"RF|20\" (the number after | is the number of evaluations of Bayesian Optimization)\n   - \"featurizer\": \"ecfp,computed_descriptors\" (use comma if you want to try multiple featurizers, note the RF and graphconv are not compatible)\n   - \"result_dir\": \"/path/to/save/the/final/results,/temp/path/to/save/models/during/optimization\" (Two paths separated by a comma)\n  \n   RF model specific parameters:\n   - \"rfe\": \"uniformint|8,512\", (RF number of estimators)\n   - \"rfd\": \"uniformint|8,512\", (RF max depth of the decision tree)\n   - \"rff\": \"uniformint|8,200\", (RF max number of features)\n  \n    Use the following schemes to define the searching domains\n    \n    method|parameter1,parameter2...\n    \n    method: supported searching schemes in HyperOpt include: choice, uniform, loguniform, uniformint, see https://github.com/hyperopt/hyperopt/wiki/FMin for details.\n    \n    parameters:\n      - choice: all values to search from, separated by comma, e.g. choice|0.0001,0.0005,0.0002,0.001\n      - uniform: low and high bound of the interval to serach, e.g. uniform|0.00001,0.001\n      - loguniform: low and high bound (in natural log) of the interval to serach, e.g. uniform|-13.8,-6.9\n      - uniformint: low and high bound of the interval as integers, e.g. uniforming|8,256\n  \n    NN model specific parameters:\n     - \"lr\": \"loguniform|-13.8,-6.9\", (learning rate)\n     - \"ls\": \"uniformint|3|8,512\", (layer_sizes)\n        - The number between two bars (|) is the number of layers, namely 3 layers, each one with 8~512 nodes\n        - Note that the number of layers (number between two |) can not be changed during optimization, if you want to try different number of layers, just run several optimizations. \n     - \"dp\": \"uniform|3|0,0.4\", (dropouts)\n        - 3 layers, each one has a dropout range from 0 to 0.4\n        - Note that the number of layers (number between two |) can not be changed during optimization, if you want to try different number of layers, just run several optimizations. \n    \n    XGBoost model specific parameters:\n     - \"xgbg\": \"uniform|0,0.4\", (xgb_gamma, Minimum loss reduction required to make a further partition on a leaf node of the tree)\n     - \"xgbl\": \"loguniform|-6.9,-2.3\", (xgb_learning_rate, Boosting learning rate (xgboost's \"eta\"))\n\n4. Run hyperparameter search in batch mode or submit a slurm job.\n\n    ```\n    python hyperparam_search_wrapper.py --config_file filename.json\n    ```\n    \n5. Save a checkpoint to continue it later.\n    \n    To save a checkpoint file of the hyperparameter search job, you want to set the following two parameters.\n    - \"hp_checkpoint_save\": \"/path/to/the/checkpoint/file.pkl\"\n    - \"hp_checkpoint_load\": \"/path/to/the/checkpoint/file.pkl\"\n    \n    If the \"hp_checkpoint_load\" is provided, the hyperparameter search will continue from the checkpoint. \n</details>\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "AMPL tutorials",
        "parent_header": [
          "ATOM Modeling PipeLine (AMPL) for Drug Discovery"
        ],
        "type": "Text_excerpt",
        "value": "Please follow link, [\"atomsci/ddm/examples/tutorials\"](https://github.com/ATOMScience-org/AMPL/tree/master/atomsci/ddm/examples/tutorials), to access a collection of AMPL tutorial notebooks. The tutorial notebooks give an exhaustive coverage of AMPL features. The AMPL team has prepared the tutorials to help beginners understand the basics to advanced AMPL features, and a reference for advanced AMPL users. \n\n---"
      },
      "source": "https://raw.githubusercontent.com/ATOMconsortium/AMPL/master/README.md",
      "technique": "header_analysis"
    }
  ]
}