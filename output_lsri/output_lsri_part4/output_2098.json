{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "PconsFold"
        ],
        "type": "Text_excerpt",
        "value": "[M Michel, S Hayat, MJ Skwark, C Sander, DS Marks and A Elofsson. __PconsFold: Improved contact predictions improve protein models.__ Bioinformatics (2014). 30(17): i482-i488](http://bioinformatics.oxfordjournals.org/content/30/17/i482)\n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ElofssonLab/pcons-fold"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-10-28T13:31:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-18T14:31:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pipeline for protein folding using PconsC and Rosetta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.934792930324889,
      "result": {
        "original_header": "PconsFold",
        "type": "Text_excerpt",
        "value": "A pipeline for protein folding using predicted contacts from PconsC and a  Rosetta folding protocol.  \nYou find __supplementary data__, such as protein IDs, sequences, native and predicted structures, predicted contacts at the bottom of the [release page](https://github.com/ElofssonLab/pcons-fold/releases/tag/v1.0). \n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9801147693753524,
      "result": {
        "original_header": "Pipeline overview:",
        "type": "Text_excerpt",
        "value": "1. __Input:__ fasta file containing one protein sequence\n2. Prepare input for PconsC\n3. Contact prediction with PconsC\n4. Prepare input for Rosetta folding\n5. Rosetta folding\n6. Extract and relax structures with lowest Rosetta energy\n7. __Output:__ the predicted contact map (also as a plot) and the top-ranked structural model(s) relaxed and non-relaxed \n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ElofssonLab/pcons-fold/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ElofssonLab/pcons-fold/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ElofssonLab/pcons-fold"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PconsFold"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/pipeline_horiz.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ElofssonLab/pcons-fold/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014 Mirco Michel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pcons-fold"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ElofssonLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 401420,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 94870,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 28408,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Csound Score",
        "size": 22800,
        "type": "Programming_language",
        "value": "Csound Score"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MMichel",
          "type": "User"
        },
        "date_created": "2014-08-21T11:29:52Z",
        "date_published": "2014-10-20T14:35:18Z",
        "description": "# PconsFold\n\n![PconsFold pipeline](https://github.com/MMichel/pcons-fold/blob/master/pipeline_horiz.png?raw=true)\n\nA pipeline for protein folding using predicted contacts from PconsC and a  Rosetta folding protocol.\n\n## Pipeline overview:\n1. **Input:** fasta file containing one protein sequence\n2. Prepare input for PconsC\n3. Contact prediction with PconsC\n4. Prepare input for Rosetta folding\n5. Rosetta folding\n6. Extract and relax structures with lowest Rosetta energy\n7. **Output:** the predicted contact map (also as a plot) and the top-ranked structural model(s) relaxed and non-relaxed\n\n## Dependencies:\n- [Rosetta v3.5 or weekly built](https://www.rosettacommons.org/software)\n- [Jackhmmer from HMMER v3.0 or higher](http://hmmer.janelia.org/)\n- [HHblits from HHsuite v2.0.16](http://toolkit.tuebingen.mpg.de/hhblits)\n- [PSICOV v1.11](http://bioinfadmin.cs.ucl.ac.uk/downloads/PSICOV/)\n- [plmDCA asymmetric](http://plmdca.csc.kth.se/)\n- either MATLAB v8.1 or higher\n- or [MATLAB Compiler Runtime (MCR) v8.1](http://www.mathworks.se/products/compiler/mcr/)\n\nMATLAB is needed to run plmDCA. However, if MATLAB is not available you can also use a compiled version of plmDCA. For the compiled version to run you need to provide a path to MCR.\n\n## How to run it:\n\n**Make sure** all dependencies are working correctly and adjust the paths in `localconfig.py`.\n\nTo run the full pipeline use:\n\n```\n./pcons_fold.py [-c n_cores] [-n n_decoys] [-m n_models]\n                [-f factor] [--norelax] [--nohoms] \n                hhblits_database jackhmmer_database sequence_file\n```\n- Required:\n  - `hhblits_database` and `jackhmmer_database` are paths to the databases used by HHblits and Jackhmmer\n  - `sequence_file` is the path to the input protein sequence in FASTA format (only single sequences). \n- Optional:\n  - `n_cores` specifies the number of cores to use during computation (default: number of available cores). \n  - `n_decoys` specifies  the number of decoy structures generated by Rosetta (default: 2000, see publication). \n  - `n_models` is the number of top-ranked models being extracted and eventually relaxed in the end (default: 10).\n  - `factor` determines the number of constraints used to fold the protein, which is: `factor` \\* length_of_the_input_sequence (default: 1.0). \n  - `norelax` is a flag that supresses relaxation of the final models. This can be used to quickly extract structures in the end. \n  - `nohoms` is a flag that ensures that homologous structures are excluded from fragment picking. This is only useful in test cases if the model quality needs to be evaluated with a known structure.\n\n---\n\nYou can also **run PconsC contact prediction** independently with this command:\n\n```\n./pconsc/predict_all.py [-c cores] hhblits_database jackhmmer_database sequence_file\n```\n\nAnd then **fold the protein** according to given predicted contacts with the following commands:\n\n```\n./folding/rosetta/prepare_input.py [-f factor] [--nohoms] sequence_file contact_map \n\n./folding/rosetta/fold.py [-c n_cores] [-n n_decoys] sequence_file rosetta_constraintfile\n\n./folding/rosetta/extract.py [-c n_cores] [-m n_models] [--norelax] number_of_extracted_structures\n```\n\nThe first script generates the file `(pconsc_output)-(factor).constraints` which is then used by Rosetta in the next step with `rosetta_constraintfile`.\n",
        "html_url": "https://github.com/ElofssonLab/pcons-fold/releases/tag/v1.0",
        "name": "PconsFold v1.0",
        "release_id": 474207,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/ElofssonLab/pcons-fold/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ElofssonLab/pcons-fold/releases/474207",
        "value": "https://api.github.com/repos/ElofssonLab/pcons-fold/releases/474207",
        "zipball_url": "https://api.github.com/repos/ElofssonLab/pcons-fold/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies:",
        "parent_header": [
          "PconsFold"
        ],
        "type": "Text_excerpt",
        "value": "- [Rosetta v3.5 or weekly built](https://www.rosettacommons.org/software)\n- [Jackhmmer from HMMER v3.0 or higher](http://hmmer.janelia.org/)\n- [HHblits from HHsuite v2.0.16](http://toolkit.tuebingen.mpg.de/hhblits)\n- [PSICOV v1.11](http://bioinfadmin.cs.ucl.ac.uk/downloads/PSICOV/)\n- [plmDCA asymmetric](http://plmdca.csc.kth.se/)\n- either MATLAB v8.1 or higher\n- or [MATLAB Compiler Runtime (MCR) v8.1](http://www.mathworks.se/products/compiler/mcr/)\n\nMATLAB is needed to run plmDCA. However, if MATLAB is not available you can also use a compiled version of plmDCA. For the compiled version to run you need to provide a path to MCR.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run it:",
        "parent_header": [
          "PconsFold"
        ],
        "type": "Text_excerpt",
        "value": "__Make sure__ all dependencies are working correctly and adjust the paths in `localconfig.py`.\n\nTo run the full pipeline use:\n```\n./pcons_fold.py [-c n_cores] [-n n_decoys] [-m n_models]\n                [-f factor] [--norelax] [--nohoms] \n                hhblits_database jackhmmer_database sequence_file\n```\n- Required:\n  - `hhblits_database` and `jackhmmer_database` are paths to the databases used by HHblits and Jackhmmer\n  - `sequence_file` is the path to the input protein sequence in FASTA format (only single sequences). \n- Optional:\n  - `n_cores` specifies the number of cores to use during computation (default: number of available cores). \n  - `n_decoys` specifies  the number of decoy structures generated by Rosetta (default: 2000, see publication). \n  - `n_models` is the number of top-ranked models being extracted and eventually relaxed in the end (default: 10).\n  - `factor` determines the number of constraints used to fold the protein, which is: `factor` * length_of_the_input_sequence (default: 1.0). \n  - `norelax` is a flag that supresses relaxation of the final models. This can be used to quickly extract structures in the end. \n  - `nohoms` is a flag that ensures that homologous structures are excluded from fragment picking. This is only useful in test cases if the model quality needs to be evaluated with a known structure.\n\n\n---\n\n\nYou can also __run PconsC contact prediction__ independently with this command:\n```\n./pconsc/predict_all.py [-c cores] hhblits_database jackhmmer_database sequence_file\n```\n\n\nAnd then __fold the protein__ according to given predicted contacts with the following commands:\n``` \n./folding/rosetta/prepare_input.py [-f factor] [--nohoms] sequence_file contact_map \n\n./folding/rosetta/fold.py [-c n_cores] [-n n_decoys] sequence_file rosetta_constraintfile\n\n./folding/rosetta/extract.py [-c n_cores] [-m n_models] [--norelax] number_of_extracted_structures\n```\n\nThe first script generates the file `(pconsc_output)-(factor).constraints` which is then used by Rosetta in the next step with `rosetta_constraintfile`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/ElofssonLab/pcons-fold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:20:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ]
}