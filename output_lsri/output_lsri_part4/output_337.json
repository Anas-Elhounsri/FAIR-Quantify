{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sage-Bionetworks/JHU-biobank"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-25T01:02:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-13T15:52:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Data and code required to analyze JHU Biobank Data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9803792149978707,
      "result": {
        "original_header": "JHU Biobank Code Repository",
        "type": "Text_excerpt",
        "value": "This repository contains the information about the RNA-seq processing and figure generation for the Scientific Data Biobank Manuscript.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.967248756491759,
      "result": {
        "original_header": "Samples available",
        "type": "Text_excerpt",
        "value": "We are constantly updating the data available. To find an up-to-date list please log into the Synapse site and click [this link](https://www.synapse.org/#!Synapse:syn13363852/tables/query/eyJzcWwiOiJTRUxFQ1QgZGlzdGluY3QgaW5kaXZpZHVhbElELHNwZWNpbWVuSUQsYXNzYXkgRlJPTSBzeW4xMzM2Mzg1MiB3aGVyZSBhY2Nlc3NUeXBlIDw+ICdQUklWQVRFJyIsICJpbmNsdWRlRW50aXR5RXRhZyI6dHJ1ZSwgImlzQ29uc2lzdGVudCI6dHJ1ZSwgIm9mZnNldCI6MCwgImxpbWl0IjoyNX0=) \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9817571701105539,
      "result": {
        "original_header": "RNA-Seq and Exome-seq processing",
        "type": "Text_excerpt",
        "value": "The RNA-seq and Exome-Seq data is available in tabular form on the [JHU Biobank Synapse Site](http://synapse.org/jhubiobank)\n* [RNA-Seq Counts](https://www.synapse.org/#!Synapse:syn20812185/tables/)\n* [Germline variant calls](https://www.synapse.org/#!Synapse:syn20812188/tables/) \nSpecifically the YAML file input for the RNA-Seq data is as follows:\n```\nsynapse_config:\n  class: File\n  path: \"/home/sgosline/.synapseConfig\"\nindexid: syn18134565\nindex-type: gencode\nindex-dir: gencode_v29\nidquery: SELECT specimenID,id,readPair FROM syn13363852 WHERE ( ( \"assay\" = 'rnaSeq' ) AND ( \"fileFormat\" = 'fastq' ) AND ( \"sciDataRelease\" = 'true' ) ) order by specimenID\nsample_query: SELECT distinct specimenID,individualID,assay,dataType,sex,consortium,study,diagnosis,tumorType,species,fundingAgency,resourceType,nf1Genotype,nf2Genotype,studyName FROM syn13363852 WHERE ( ( \"assay\" = 'rnaSeq' ) AND ( \"fileFormat\" = 'fastq' ) AND ( \"sciDataRelease\" = 'true' ) )\nparentid: syn17077846\ngroup_by: specimenID\ntableparentid: \n        - syn4939902\ntablename: \n        - Biobank RNASeq Data\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8625220485344358,
      "result": {
        "original_header": "CNV Figures",
        "type": "Text_excerpt",
        "value": "We've also created a docker container to reproduce the copy number variant analysis and figures. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8932408767492975,
      "result": {
        "original_header": "CNV Analysis Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "The somatic copy number variation (CNV) analysis was done on WES files using a series of shell scripts generating plots of CNV as output. The series of shell scripts with the relevant reference files have been dockerized for reproducibility of the plots. The analysis can be reproduced by following the steps outlined below. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 3, do `mkdir data_bam` to create an input/output directory locally and store all the relevant .bam and .bam.bai files in there. Then run the command in step 3 with a `-v` flag e.g. `docker run -ti -v $PWD/data_bam:/root/data_bam/ nfosi/jhu_cnv_analysis:latest`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9955453887683134,
      "result": {
        "original_header": "Demonstration notebook containers",
        "type": "Text_excerpt",
        "value": "We've prepared Docker containers that contain all of the necessary dependencies to retrieve data from Synapse and perform some basic analyses of these data. The goal of this is to help you orient yourself to the data prior to the event in September.\nWe've created containers for both R and Python users. You can find instructions on running these containers and following the data demos below.\nIf you like, you can also use these containers as a basis for creating your own Docker containers during the hackathon so that others can reproduce your analyses. \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8897871513527849,
      "result": {
        "original_header": "RStudio Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "1. Open a command line interface, such as Terminal.\n2. Do `docker pull nfosi/jhu-biobank-r` to get the Docker image.\n3. Do `docker run -e PASSWORD=<mypassword> -e ROOT=true --rm -p 8787:8787 nfosi/jhu-biobank-r` to start the container. Make sure to replace `<mypassword>` with a unique password. It cannot be \"rstudio\"!\n4. Open your preferred browser and navigate to `localhost:8787`. Login using the username \"rstudio\" and the password that you set in step 3.\n5. In the Files pane, click on \"0-setup.Rmd\" to get started, and to learn how to make your Synapse credentials available to `synapser`. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 4, do `mkdir output` to create an output directory locally. Then run the command in step 4 with a `-v` flag e.g. `docker run -e PASSWORD=pwd --rm -p 8787:8787 -v $PWD/output:/home/rstudio/output nfosi/jhu-biobank-r` Alternatively, or in addition, you can save all of your results to Synapse using `synapser`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8433709308158697,
      "result": {
        "original_header": "jupyter Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "1. Open a command line interface, such as Terminal.\n2. Do `docker pull nfosi/jhu-biobank-py` to get the Docker image.\n3. Do `docker run -p 8888:8888 nfosi/nfosi/jhu-biobank-py` to start the container.\n4. Open your preferred browser and navigate to the one of the links provided in your Terminal window after running the previous command. It should look something like: `http://127.0.0.1:8888/?token=abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234`.\n5. In the Files pane, click on \"Work\" and then \"0-setup.ipynb\" to get started, and to learn how to make your Synapse credentials available to the Python `synapseclient`. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 4, do `mkdir output` to create an output directory locally. Then run the command in step 4 with a `-v` flag e.g. `docker run -p 8888:8888 -v $PWD/output:/home/jovyan/work/output nfosi/jhu-biobank-py\n` Alternatively, or in addition, you can save all of your results to Synapse using `synapseclient`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sage-Bionetworks/JHU-biobank/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/0-setup.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/0-setup.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/1-rnaseq-intro.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/1-rnaseq-intro.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/2-exomeseq-intro.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/2-exomeseq-intro.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sage-Bionetworks/JHU-biobank"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JHU Biobank Code Repository"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/py_demos/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/R_demos/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/R_demos/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/5_denoise_read_counts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/7_collect_allelic_counts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/10_plot_modeled_copyratio.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/9_callcopyratio.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/3_collect_reads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/8_modelsegments.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/1_bed_to_interval_list.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/2_preprocess_intervals.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/figs/docker_cnv/bin/CNV_scripts/6_plotdenoised_CR.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9977451308308298,
      "result": {
        "original_header": "CNV Analysis Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "1. Open a command line interface, such as Terminal.\n2. Do `docker pull nfosi/jhu_cnv_analysis:latest` to get the Docker image.\n3. Do `docker run -ti nfosi/jhu_cnv_analysis:latest bash` to start the container. \n4. Follow the README.txt in the data_bam folder in the docker container to carry out the relevant analysis.\n5. Do `synapse -u \"<username>\" -p \"<password>\" get -r synid123` (as noted in the README.txt in the docker container to download the relevant reference files. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 3, do `mkdir data_bam` to create an input/output directory locally and store all the relevant .bam and .bam.bai files in there. Then run the command in step 3 with a `-v` flag e.g. `docker run -ti -v $PWD/data_bam:/root/data_bam/ nfosi/jhu_cnv_analysis:latest`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999968061094624,
      "result": {
        "original_header": "RStudio Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "1. Open a command line interface, such as Terminal.\n2. Do `docker pull nfosi/jhu-biobank-r` to get the Docker image.\n3. Do `docker run -e PASSWORD=<mypassword> -e ROOT=true --rm -p 8787:8787 nfosi/jhu-biobank-r` to start the container. Make sure to replace `<mypassword>` with a unique password. It cannot be \"rstudio\"!\n4. Open your preferred browser and navigate to `localhost:8787`. Login using the username \"rstudio\" and the password that you set in step 3.\n5. In the Files pane, click on \"0-setup.Rmd\" to get started, and to learn how to make your Synapse credentials available to `synapser`. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 4, do `mkdir output` to create an output directory locally. Then run the command in step 4 with a `-v` flag e.g. `docker run -e PASSWORD=pwd --rm -p 8787:8787 -v $PWD/output:/home/rstudio/output nfosi/jhu-biobank-r` Alternatively, or in addition, you can save all of your results to Synapse using `synapser`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999992220916252,
      "result": {
        "original_header": "jupyter Docker Image (Local)",
        "type": "Text_excerpt",
        "value": "1. Open a command line interface, such as Terminal.\n2. Do `docker pull nfosi/jhu-biobank-py` to get the Docker image.\n3. Do `docker run -p 8888:8888 nfosi/nfosi/jhu-biobank-py` to start the container.\n4. Open your preferred browser and navigate to the one of the links provided in your Terminal window after running the previous command. It should look something like: `http://127.0.0.1:8888/?token=abcd1234abcd1234abcd1234abcd1234abcd1234abcd1234`.\n5. In the Files pane, click on \"Work\" and then \"0-setup.ipynb\" to get started, and to learn how to make your Synapse credentials available to the Python `synapseclient`. \n*IMPORTANT NOTE* To save any results created during your Docker session, you'll need to mount a local directory to the Docker container when you run it. This will copy anything saved to the working directory to your local machine. Before step 4, do `mkdir output` to create an output directory locally. Then run the command in step 4 with a `-v` flag e.g. `docker run -p 8888:8888 -v $PWD/output:/home/jovyan/work/output nfosi/jhu-biobank-py\n` Alternatively, or in addition, you can save all of your results to Synapse using `synapseclient`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JHU-biobank"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Sage-Bionetworks"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 11695730,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 2102606,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9704,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8173,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4022,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3917,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jaybee84",
          "type": "User"
        },
        "date_created": "2020-03-17T23:31:17Z",
        "date_published": "2020-03-25T00:25:21Z",
        "description": "This repository contains information about the RNA-seq processing and figure generation for the Scientific Data Biobank Manuscript.\r\n\r\n",
        "html_url": "https://github.com/Sage-Bionetworks/JHU-biobank/releases/tag/v1.0.0",
        "name": "JHU Biobank Code Repository",
        "release_id": 24832765,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/releases/24832765",
        "value": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/releases/24832765",
        "zipball_url": "https://api.github.com/repos/Sage-Bionetworks/JHU-biobank/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "JHU Biobank Code Repository"
        ],
        "type": "Text_excerpt",
        "value": "These instructions assume that you:\n* have registered for a [Synapse account](https://www.synapse.org/#!RegisterAccount:0)\n* have followed the [Getting Samples and Data](https://www.synapse.org/#!Synapse:syn4939902/wiki/593715) instructions on Synapse.\n* have [installed Docker Community Edition](https://docs.docker.com/v17.12/install/) and that the docker service is running on your machine\n* are running a Unix-based OS, such as Ubuntu or Mac. These instructions have not been tested on Windows-based platforms. If you are using Google Cloud Platform, please see the [Google Cloud Docker instructions](#google-cloud).\n"
      },
      "source": "https://raw.githubusercontent.com/Sage-Bionetworks/JHU-biobank/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:57:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}