{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vtphan/HeteroplasmyWorkflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-10-30T19:57:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-26T01:43:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9981378209144789,
      "result": {
        "original_header": "Heteroplasmy Visualization",
        "type": "Text_excerpt",
        "value": "Presently, visualization of heteroplasmies is available for [*Daucus carota*](https://github.com/vtphan/HeteroplasmyWorkflow/tree/master/Daucus_carota).\n \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997334308593291,
      "result": {
        "original_header": "Heteroplasmy Workflow",
        "type": "Text_excerpt",
        "value": "icHet is a workflow for visualizing and detecting heteroplasmies across multiple genomic samples. It is designed to take advantage of high-performance clusters. \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9528316007748436,
      "result": {
        "original_header": "config.txt:",
        "type": "Text_excerpt",
        "value": "It is not neccessary to use single or double quote for these paths. The workflow will generate the OUTPUT_DIR if it doesn't exists. \n\n2. Optional inputs:\n- DIST: name of distance function used to compute conservation scores of heteroplasmic sites (hellinger or consine). Default = hellinger distance.\n- alignment_quality: quality threshold for SAMtools to filter alignments. Default = 20.\n- score_threshold: threshold for conservation scores of heteroplasmic sites to be shown in visualization. Default = 10.\n- percentage_threshold: threshold for base percentage of heteroplasmic sites to be shown in visualization. Default = 0.05 \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9352414009931942,
      "result": {
        "original_header": "Readids.txt:",
        "type": "Text_excerpt",
        "value": "Text file contains all input reads ID you want to run. Each line is reserved for only one ID. The output plots the samples by the ordering of read names in this file. \nReads should be paired-end reads, and only the SampleID needs to be specified in the readids.txt file. For example, if you have sample SRR2146923 with a pair of reads named SRR2146923_1.fastq and SRR2146923_2.fastq, you only have to specify SRR2146923 in the readids.txt file. \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9561012631967709,
      "result": {
        "original_header": "VISUALIZATION:",
        "type": "Text_excerpt",
        "value": "The program will output both visualization for mitochondria and chloroplast if users gives paths to chloroplast and mitochondrial genomes, annotation files, as well as sequence IDs. \nOutputs for mitochondria and chloroplast will be separated into OUTPUT_DIR/mitochondria and OUTPUT_DIR/chloroplast directories. \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vtphan/HeteroplasmyWorkflow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vtphan/HeteroplasmyWorkflow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vtphan/HeteroplasmyWorkflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "icHET: Interactive Visualization of Cytoplasmic Heteroplasmy"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/install_packages.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/HeteroplasmyWorkflow1.png"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALL REQUIRED PACKAGES VIA ANACONDA:",
        "parent_header": [
          "icHET: Interactive Visualization of Cytoplasmic Heteroplasmy",
          "Heteroplasmy Workflow"
        ],
        "type": "Text_excerpt",
        "value": "You can use Anaconda distribution for easier installation.\n\n1. Install Anaconda:\n\n\t- Download the appropriate .sh file from https://www.anaconda.com/download/\n\t- In the directory with the .sh file, run the .sh file using the following commands:\n\t\t- Make executable if needed:  ```chmod 755 SampleFileName.sh```\n\t\t- Run installer script: ```./SAMPLEFILENAME.sh```\n\n2. Install required packages:\n\t\n\t- On Linux/Max: run ```sh install_packages.sh```\n\t- On Windows: run these commands\n\t```\n\tconda install -y -c anaconda biopython\n\tconda install -y -c bokeh bokeh\n\tconda install -y -c conda-forge flexx\n\tconda config --add channels defaults\n\tconda config --add channels conda-forge\n\tconda config --add channels bioconda\n\tconda install -y bwa\n\tconda install -y samtools\n\tconda install -y bzip2\n\t```\n\t\t\n\n**Note**\n\nAfter installing SAMtools via anaconda, you may have this error:\n\n```\nsamtools: error while loading shared libraries: libcrypto.so.1.0.0: cannot open shared object file: No such file or directory\n```\n\nHere is the suggested easiest way to fix this error: \n\n\t- Go to *anaconda3 library* directory: (assume that your anaconda is installed in $HOME/anaconda)\n\t\n\t```cd $HOME/anaconda3/lib``` \n\t\n\t- Make a copy of *libcrypto.so.1.1.1* and rename it to *libcrypto.so.1.0.0*\n\t\nThere are many other ways to fix this error, for example ([SAMtools dependency in wrong version](https://github.com/bioconda/bioconda-recipes/issues/12100)), please try them to fix the error.\n\n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.99998496114406,
      "result": {
        "original_header": "CONFIGURATION:",
        "type": "Text_excerpt",
        "value": "You need to specify paths to your data in a configuration file. See config.txt for example.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999907184006686,
      "result": {
        "original_header": "config.txt:",
        "type": "Text_excerpt",
        "value": "- READS_DIR: path to reads directory containing FASTQ/FQ file(s). Reads must be paired-end reads and each pair must have suffix (\\_1.fastq and \\_2.fastq) or (\\_1.fq or \\_2.fq).\n- REF: path to reference genomes. This is the concatenated of all genomes (nuclear DNA, mitochondrial genome, chloroplast genome).\n- LOG_FILE: path to log file.\n- OUTPUT_DIR: path to output directory.\n- cp_ref : path to chloroplast genome.\n- cp_annotation : path to chloroplast annotation file.\n- mt_ref: path to mitochondria genome.\n- mt_annotation: path to mitochondri annotation file.\n- mitochondria: mitochondria sequence IDs. This can be a list, separated by commas.\n- chloroplast: chloroplast sequence IDs. This can be a list, separated by commas. \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8013371570019835,
      "result": {
        "original_header": "Heteroplasmy Workflow",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n<img src=\"HeteroplasmyWorkflow1.png\" width=\"400px\" />\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8001966127163991,
      "result": {
        "original_header": "Readids.txt:",
        "type": "Text_excerpt",
        "value": "Text file contains all input reads ID you want to run. Each line is reserved for only one ID. The output plots the samples by the ordering of read names in this file. \nSee [example_read_ids.txt](https://github.com/vtphan/HeteroplasmyWorkflow/blob/master/examples/example_read_ids.txt) for example of read IDs file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vtphan/HeteroplasmyWorkflow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Vinhthuy Phan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HeteroplasmyWorkflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "vtphan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 4297946,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 107408,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 459,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "REQUIREMENTS:",
        "parent_header": [
          "icHET: Interactive Visualization of Cytoplasmic Heteroplasmy",
          "Heteroplasmy Workflow"
        ],
        "type": "Text_excerpt",
        "value": "1. Python 3 packages:\n\t- Biopython\n\t- Bokeh\n\t- Flexx\n\n2. Other tools:\n\t- Bwa (http://bio-bwa.sourceforge.net/)\n\t- SAMtools (http://samtools.sourceforge.net/)\n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "HOW TO RUN:",
        "parent_header": [
          "icHET: Interactive Visualization of Cytoplasmic Heteroplasmy",
          "Heteroplasmy Workflow"
        ],
        "type": "Text_excerpt",
        "value": "```python run_hpc.py config.txt readids.txt```\n\n- config.txt: configuration file\n- readids.txt: read IDs file.\n"
      },
      "source": "https://raw.githubusercontent.com/vtphan/HeteroplasmyWorkflow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:15:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}