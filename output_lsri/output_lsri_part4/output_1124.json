{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mccoymd/snp2sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-19T12:19:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-11T14:06:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Molecular Simulation of Somatic Variation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8338972671042177,
      "result": {
        "original_header": "General:",
        "type": "Text_excerpt",
        "value": "--protein \"string\"\n  user specified name for simulation\n  used in naming output directories and file\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9144735428510727,
      "result": {
        "original_header": "Optional:",
        "type": "Text_excerpt",
        "value": "--varAA \"character\"\n  Single letter code for one of 20 canonical amino acids to mutate varResID \n--cgcRun\n  If flag is set, output files will be copied to\n  working directory (for output on CGC platform app)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8761248499008152,
      "result": {
        "original_header": "varMDsim:",
        "type": "Text_excerpt",
        "value": "    --simLength \"real number\"\n      length of the NAMD simulation in nanoseconds \n    --simID \"string\" (optional - default to random numeric ID)\n      Unique identier for the simulation run for generating\n      multiple independent trajectories for input to varScaffold \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9496518232038219,
      "result": {
        "original_header": "varScaffold:",
        "type": "Text_excerpt",
        "value": "  Module Options\n  \n    --scaffID \"string\"\n      Specifies naming of scaffolding output logfile containing\n      cluster assignements for alignment and clustering parameters \n    --clustPDBtraj (optional)\n      if PDB clusters generated from varMDsim --singleRun are used as input\n      this flag must be set and trajectory files specified with --loadPDBtraj \n#### Config template\n```\n# varScaffold\n#############\n\n #unique identifier for run\nscaffID:\n\n #Use PDB trajectories (possibly from singleCGC runs)\nclustPDBtraj:\n\n #pdb trajectory files to import, list one after another\nloadPDBtraj:\n\n#Cluster Parameters - follow VMD atomselection format\n #Residues to superimpose trajectory \nalignmentResidues:\n #Residues to consider when clustering trajectory\nclusterResidues:\n\n #use a table of structural features to perform clustering, otherwise use a pairwise distance matrix\nfeatureTableMethod: \n #if mds method used, path to pairwise RMSD table, otherwise automatically generated\nPairwiseRMSD: \n\n #create a script that colors the cluster residues in VMD by cluster\ncolorTrajectory: \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9366622023763811,
      "result": {
        "original_header": "drugSearch:",
        "type": "Text_excerpt",
        "value": "  Usage Notes:\n  This module can use a manually defined search space provided to --newBindingConfig\n  defined in reference to a template structure (original input PDB)\n  Values can be determined using methods specified in the AutoDock Tutorial \n  \"size_x = \"\"dimension of x\"\" \n  \"size_y = \"\"dimension of y\"\" \n  \"size_z = \"\"dimension of z\"\" \n  This search space can also be automatically determined given a list of residues to include in the search space.\n   \n  Additionally, the flexable residues can be supplied to --flexBinding as\n  a sting of integers corresponding to the numeric residue ID of\n  binding residues \n    --drugLibrary \"string\"\n      Name of drug library in snp2sim/drugLibraries or identifier for\n      ligands input through the command line \n    --vinaExh \"integer\" (optional - default 50)\n      used to specifiy exhaustiveness of AutoDock Vina search\n  \n#### Config template\n```\n #path to PDB file used to create search space to align scaffold\nbindingTemplate:\n\n #exhaustiveness parameter of autodock vina\nvinaExh:\n\n #path to new binding config file\nnewBindingConfig:\n\n #Automatically determine the search box based on the \nautoSearchSpace: \n\n #list of residues that comprise the search space if autoSearchSpace is true, e.i 22 21 19 103 113 125\nsearchResidues:\n\n #list of residue numbers in flexible binding pocket, e.i 22 21 19 103 113 125\nflexBinding:\n\n #name of snp2sim drug library\ndrugLibrary:\n\n #path to single drug PDBQT\nsingleDrug:\n\n #pdb scaffold files to import, list one after another\ninputScaff:\n\n #only bind single variant scaffolds\nbindSingleVar:\n\n #path to dir with ligand PDBs, which will be converted to drug library\nligandPDB:\n\n #number of times to run the docking simulation, to get an uncertainty measurement of the binding energy\nnumTrials:\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.971116602461276,
      "result": {
        "original_header": "varAnalysis:",
        "type": "Text_excerpt",
        "value": "  Usage Notes: The input to the analysis module is a list of variants to analyze, as well as optionally specific drugs or drug libraries to include.\n  \n#### Config template\n```\n# varAnalysis\n############\n\n #Variants to be used in variants (must have a results/variant/drugBinding directory with .pdbqt results)\n #Format ###AA (### = residue number and AA = variant amino acid) or wt\n #must include wt\nanalysisVariants: \n  - list\n  - of\n  - variants\n\n #Analyze results from specific drug libraries\nanalysisDrugLibrary: \n\n #Analyze results from a specific ligand\nanalysisDrug:\n\n #Enable if using scaffolding results from old versions of SNP2SIM\nlegacyScaff:\n\n #Enable if using drugBinding results from custom PDB proteins, and not varScaffold results\ncustomScaff: \n\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mccoymd/SNP2SIM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mccoymd/snp2sim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mccoymd/snp2sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNP2SIM"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/snp2sim_analysis/vinaAnalysis/collectResults_mulTrials.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/snp2sim_analysis/vinaAnalysis/collectResults.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/snp2sim_analysis/vinaAnalysis/interactive_visualize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/snp2sim_analysis/scaffoldAnalysis/legacy_scaffold.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Instructions",
        "parent_header": [
          "SNP2SIM"
        ],
        "type": "Text_excerpt",
        "value": "The SNP2SIM workflow is a Python script which controls the \nexecution of molecular simulations to generate\nvariant specific structural scaffolding for small molecule \ndocking. The script runs on a linux operating system and \ncontrols the execution of third party software detailed below.\n  "
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Nanoscale Molecular Dynamics (NAMD)",
        "parent_header": [
          "SNP2SIM",
          "Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "NAMD is used to execute the molecular dynamics simulations,\nand can be downloaded from \nhttps://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=NAMD\nThe binaries should be added to the users PATH environment variable as \"namd2\".\n\nAlternatively, the user can specify the location of the executable \nusing the `--NAMDpath \"path to NAMD binary\"` command line option.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Visual Molecular Dynamics (VMD)",
        "parent_header": [
          "SNP2SIM",
          "Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "VMD is used to maniputulate and analyze protein structure files \nand can be downloaded from \nhttps://www.ks.uiuc.edu/Development/Download/download.cgi?PackageName=VMD\nThe binaries should be added to the users PATH environment variable as \"vmd\".\n\nAlternatively, the user can specify the location of the executable \nusing the `--VMDpath \"path to VMD binary\"` command line option.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "AutoDock Vina and AutoDockTools",
        "parent_header": [
          "SNP2SIM",
          "Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "AutoDock Vina is used for the small molecule binding simulations\nand can be downloaded from \nhttp://vina.scripps.edu/download.html\nThe AutoDock Vina executable should be added to the users PATH environment variable \nas \"vina\".\n\nAlternatively, the user can specify the location of the executable \nusing the `--VINApath \"path to AutoDock Vina binary\"` command line option.\n\nFrom the included AutoDock Tools, the python wrapper script \"pythonsh\" \nshould be added to to the users PATH environment \n\nAutoDockTools scripts prepare_receptor4.py and prepare_flexreceptor4.py \nshould be installed to directory path \n`/opt/mgltools_x86_64Linux2_1.5.6/MGLToolsPckgs/AutoDockTools/Utilities24/`\n\nAlternatively, the user can specify the location of the pythonsh executable  \ncan be specified using the `--PYTHONSHpath \"path to pythonsh\"` command line option\nand the lovation of the Ulititys24 folder included with the AutoDock Tools distribution\ncan be specified with the `--ADTpath \"path to Utilities24 directory` command line option.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.911048350905573,
      "result": {
        "original_header": "Optional:",
        "type": "Text_excerpt",
        "value": "--NAMDpath \"string\"\n  path to NAMD executatble \n--VMDpath \"string\"\n  path to VMD executable \n--VINApath \"string\"\n  path to AutoDock Vina execuatable \n--PYTHONSHpath \"string\"\n  path to AutoDockTools script PYTHONSH \n--ATDpath \"string\"\n  path th AutoDockTools Utilitys directory \n--cgcRun\n  If flag is set, output files will be copied to\n  working directory (for output on CGC platform app)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999883471,
      "result": {
        "original_header": "Config template",
        "type": "Text_excerpt",
        "value": "```\n# General options\n#################\n # varMDsim, varScaffold, drugSearch, or varAnalysis\nmode: \n\n #Name of protein system\nprotein:\n\n #Variant as \"wt\" or \"x###x\" - (OPTIONAL for varAnalysis)\nvariant:\n\n#varResID + varAA override variant field. If one is filled, the other must be filled, or variant field used\n #variant residue ID from PDB template\nvarResID: \n\n #amino acid to change\nvarAA: \n\n #if Run is on CGC platform, move pdb and log to snp2sim root for processing\ncgcRun:\n\nrunDIR: \n\n#Overwrite previous run with same protein name.\nclean: \n\n\n#Paths to executables. Ignore if using Docker.\n\n #path to VMD executable\nVMDpath: \n\n #path to AutoDock Vina executable\nVINApath:\n\n #path to NAMD executable\nNAMDpath:\n\n #path to autodock tools python executable\nPYTHONSHpath:\n\n #path to autodock utilities directory\nADTpath:\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8930306727200207,
      "result": {
        "original_header": "varScaffold:",
        "type": "Text_excerpt",
        "value": "    --clustPDBtraj (optional)\n      if PDB clusters generated from varMDsim --singleRun are used as input\n      this flag must be set and trajectory files specified with --loadPDBtraj \n    --loadPDBtraj \"file path(s)\" (optional)\n      paths to PDB trajectory files, separated by single space \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9496834222004343,
      "result": {
        "original_header": "drugSearch:",
        "type": "Text_excerpt",
        "value": "  Binding Config: \n  Module Options:\n    --bindingTemplate \"file path\"\n      path to PDB file used to specify AutoDock Vina search space \n    --newBindingConfig \"file path\"\n      path to config file defining search space for AutoDock Vina \n    --singleDrug \"file path\"\n      Path to PDBQT formated ligand file \n    --inputScaff \"file path(s)\" (optional)\n      path to PDB files of variant specific scaffolds \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8260937291365176,
      "result": {
        "original_header": "Optional:",
        "type": "Text_excerpt",
        "value": "--ATDpath \"string\"\n  path th AutoDockTools Utilitys directory \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8722402484782853,
      "result": {
        "original_header": "varMDsim:",
        "type": "Text_excerpt",
        "value": "  Module Options\n    --newStruct \"file path\"\n      PDB file containing only the protein structure \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.815850439048396,
      "result": {
        "original_header": "drugSearch:",
        "type": "Text_excerpt",
        "value": "    --singleDrug \"file path\"\n      Path to PDBQT formated ligand file \n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mccoymd/snp2sim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "snp2sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mccoymd"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 114764,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rich Text Format",
        "size": 110403,
        "type": "Programming_language",
        "value": "Rich Text Format"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 54737,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2154,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Tcl",
        "size": 1592,
        "type": "Programming_language",
        "value": "Tcl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "R dependencies",
        "parent_header": [
          "SNP2SIM",
          "Installation Instructions"
        ],
        "type": "Text_excerpt",
        "value": "The varScaffold module and varAnalysis modules use R scripts to generate visualizations and cluster MD trajectories.\nAlong with the base installation of R, the following packages are necessary dependencies for the modules:\n\nvarScaffold dependencies: data.table, ggplot2, plotly, htmlwidgets, fpc\n\nvarAnalysis dependencies: shiny, ggplot2, highcharter, viridis, plotly, webshot\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:05:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "SNP2SIM"
        ],
        "type": "Text_excerpt",
        "value": "Usage:python snp2sim.py \"\"options\"\"\n\nThe workflow is configured to store intermediate files and\nresults in a predefined directory structure. If the required\ntrajectory/scaffold files are not present in the snp2sim directory,\nthey must be specified through the command line.\n  \nThe files used to run a case study using PD-L1 are provided\nin the \"example\" directory.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example File Structure",
        "parent_header": [
          "SNP2SIM",
          "Example Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\n.\n\u2514\u2500\u2500 variantSimulations\n    \u251c\u2500\u2500 Protein1\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Variant1\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 scripts.tcl\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 config\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 config.yaml\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 data.csv\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 results\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 drugBinding\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Protein1.Variant1.scaffoldNumber.library.drug.trial.log\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Protein1.Variant1.scaffoldNumber.library.drug.trial.pdbqt\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scaffold\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Protein1.Variant1.scaffoldID.log\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Protein1.Variant1.scaffoldID_cl1.scaffold.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Protein1.Variant1.scaffoldID_cl2.scaffold.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Protein1.Variant1.scaffoldID_cl3.scaffold.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cluster_by_frame.csv\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cluster_figures\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 cluster_pca.jpg\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 cluster_pca_centroids.jpg\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 clustering_3d.html\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 trajectory\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.coor\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.dcd\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.log\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.coor\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.coor.old\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.vel\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.vel.old\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.xsc\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.restart.xsc.old\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.vel\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.0.xsc\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 Protein1.Variant1.0.xst\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 structures\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.UNSOLVATED.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.UNSOLVATED.psf\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.psf\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.wb.log\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.wb.pdb\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 Protein1.Variant1.wb.psf\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 Protein1.template.pdb\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Variant2\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Variant3\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 analysis\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 DrugLibrary_Variant1_Variant2\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 Variant1_Variant2_Variant3\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 binding_structures\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 figures\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 drugLibrary\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0     \u251c\u2500\u2500 default_figures.png\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0     \u251c\u2500\u2500 heatmap.html\n    \u2502\u00a0\u00a0         \u2502\u00a0\u00a0     \u2514\u2500\u2500 heatmap.png\n    \u2502\u00a0\u00a0         \u251c\u2500\u2500 interactive_visualize.sh\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 vinaSummary_Protein1.txt\n    \u251c\u2500\u2500 Protein2\n    \u2514\u2500\u2500 Protein3\n```"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input Files",
        "parent_header": [
          "SNP2SIM",
          "Example Usage",
          "Analyzing the results of the workflow"
        ],
        "type": "Text_excerpt",
        "value": "The input file is a single chain of a PDB structure.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line options",
        "parent_header": [
          "SNP2SIM",
          "Example Usage",
          "Generating Small Molecule Docking Results using drugSearch"
        ],
        "type": "Text_excerpt",
        "value": "WT simulation\nnote: If the name used as the --protein already exists in the output directory, \nthe --newStruct option is not necessary and the workflow will utilize the\nconfigureation files that have been previously generated. \n\n`python snp2sim.py --mode varMDsim --protein PDL1 --varResID 115 --varAA T  --newStruct example/PDL1.Vtype.pdb --simLength 0.1`\n\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Config file options",
        "parent_header": [
          "SNP2SIM",
          "Example Usage",
          "Analyzing the results of the workflow"
        ],
        "type": "Text_excerpt",
        "value": "General options:\n\n```\n# General options\n#################\n # varMDsim, varScaffold, drugSearch, or varAnalysis\nmode: varMDsim\n\n #Name of protein system\nprotein: PDL1\n\n #Variant as \"wt\" or \"x###x\" - (OPTIONAL for varAnalysis)\nvariant: \n\n#varResID + varAA override variant field. If one is filled, the other must be filled, or variant field used\n #variant residue ID from PDB template\nvarResID: 115\n\n #amino acid to change\nvarAA: T\n\n #if Run is on CGC platform, move pdb and log to snp2sim root for processing\ncgcRun:\n\nrunDIR: /Path/To/SNP2SIM/Working/Dir/\n\n#Overwrite previous run with same protein name.\nclean: \n\n\n```\n\nvarMDsim specific options:\n\n```\n# Mode specific options\n\n# varMDsim options\n##################\n\n #path to cleaned PDB file (protein structure w/ cannonical aa)\nnewStruct: example/PDL1.Vtype.pdb\n\n #varTraj simulation length in ns\nsimLength: 0.1\n\n #amino acid to change\nsimID:\n\n #number of processors to run simulation\nsimProc:\n\n #output summary PDB trajectory only\nsingleRun:\n\n #Only generate initial structures, without MD simulation\ngenStructures:\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files",
        "parent_header": [
          "SNP2SIM",
          "Example Usage",
          "Analyzing the results of the workflow"
        ],
        "type": "Text_excerpt",
        "value": "PROTEIN refers to the value of the --protein command line option.\nThe module will output tcl scripts for the generation of the solvated \nprotein structure in the \"variantSimulations/PROTEIN/bin/\" directory. \n\nNAMD configs are output to the \"variantSimulations/PROTEIN/config/\" directory.\n\nNAMD input structure files (solvated psf and pdb files)\nare output to the \"variantSimulations/PROTEIN/structures/\" directory.\n\nVARIANT refers to the concatenated values of --varResID and --varAA\n\nNAMD trajectory results are found in the \n\"variantSimulations/PROTEIN/VARIANT/trajectory\" directory.\n"
      },
      "source": "https://raw.githubusercontent.com/mccoymd/SNP2SIM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}