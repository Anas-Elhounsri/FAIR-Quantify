{
  "application_domain": [
    {
      "confidence": 24.19,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CoAxLab/CBGT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-28T21:05:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-08T22:05:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Spiking Neural Network of CBGT pathways"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9923110450933114,
      "result": {
        "original_header": "CBGT",
        "type": "Text_excerpt",
        "value": "This repository contains code for implementing the spiking cortico-basal ganglia-thalamus (CBGT) network and drift-diffusion model (DDM) fits described in the manuscript [**Reward-driven changes in striatal pathway competition shape evidence evaluation in decision-making**](https://www.biorxiv.org/content/10.1101/418756v2.abstract).  \n"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CoAxLab/CBGT/tree/master/cbgt/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CoAxLab/CBGT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/demos/CBGT_PLOSCompBio2019_Demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/demos/CBGT_PLOSCompBio2019_Demo.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CoAxLab/CBGT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CoAxLab/CBGT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CBGT"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation Instructions",
        "parent_header": [
          "CBGT"
        ],
        "type": "Text_excerpt",
        "value": "```sh\n# create a new conda environment with python 3.6\n# and hit 'y' to verify the install \nconda create -n cbgt_env python=3.6 anaconda ipykernel\n\n# activate 'cbgt_env' environment\nsource activate cbgt_env\n\n# use conda (not pip) to install pymc\nconda install pymc=2.3.6 --no-deps\n\n# install hddm and kabuki\npip install --upgrade kabuki hddm\n\n# finally install numpy version 1.11.3\n# (avoids hddm incompatibility with later numpy)\npip install numpy==1.11.3\n\n# install cbgt package\npip install -U cbgt --no-cache-dir\n```\n\n* After installing everything, run `jupyter notebook` in your terminal to start Jupyter in your browser \n* Drag/drop the demo notebook (`CBGT_PLOSCompBio2019_Demo.ipynb`) into the Jupyter browser window\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999984665067,
      "result": {
        "original_header": "CBGT",
        "type": "Text_excerpt",
        "value": "The code requires several dependencies to be installed (see below for instructions). After completing the installation procedure below, the demo notebook can be downloaded and opened inside Jupyter. \n"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750746362737209,
      "result": {
        "original_header": "Miscellaneous:",
        "type": "Text_excerpt",
        "value": "* HDDM resources: ([**methods paper**](https://www.frontiersin.org/articles/10.3389/fninf.2013.00014/full), [**demo**](http://ski.clps.brown.edu/hddm_docs/tutorial_python.html), [**how-to**](http://ski.clps.brown.edu/hddm_docs/howto.html))\n* Jupyter Notebook [**tutorial**](https://medium.com/codingthesmartway-com-blog/getting-started-with-jupyter-notebook-for-python-4e7082bd5d46)  \n"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CoAxLab/CBGT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CBGT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CoAxLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 152314,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 95629,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 35119,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 3128,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "CBGT"
        ],
        "type": "Text_excerpt",
        "value": "- OSX or Linux\n- Anaconda with Python 3.* (for [**OSX**](https://www.anaconda.com/download/#macos), [**Linux**](https://www.anaconda.com/download/#linux))\n\n- `gcc` (if Linux) or `gcc-8` (if OSX, see [**here**](https://solarianprogrammer.com/2017/05/21/compiling-gcc-macos/))\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/CoAxLab/CBGT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:02:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}