{
  "application_domain": [
    {
      "confidence": 0.938697427678763,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Reference files",
        "type": "Text_excerpt",
        "value": "* Note that there are about 20gb in reference files\n```\nmkdir ~/sequencing_reference_files\nwget -c -r --no-parent --reject \"index.html*\" \\\n\"http://glom.sph.umich.edu/TargetedSequencingPipelineReferences/\" -nH --cut-dirs=1\n```\n* Note you should reindex the tabix files just incase the tbi file was copied before the vcf. This is recommended because GATK can throw error messages when the tbi file is out of date.\n```\ncd ~/sequencing_reference_files\ntabix -f -pvcf Mills_and_1000G_gold_standard.indels.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf 1000G_phase1.indels.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf 1000G_omni2.5.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf ALL.phase3.combined.sites.unfiltered.vcf.gz\ntabix -f -pvcf dbsnp_138.hg19.relabel.vcf.gz\ntabix -f -pvcf ExAC.r0.3.sites.vep.vcf.gz\ntabix -f -pvcf hapmap_3.3.hg19.sites.relabel.vcf.gz\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/christopher-gillies/TargetSpecificGATKSequencingPipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-09-14T16:23:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-21T20:05:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This package takes FASTQ files from microfluidic PCR paired with next-generation sequencing and produces a filtered VCF file"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How do I get a summary of the refined variants?",
        "type": "Text_excerpt",
        "value": "```\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport DATA_DIR=~/FluidigmTestData/\nexport OUT_DIR=$DATA_DIR/svm_filter/\nexport VCF=\"$OUT_DIR\"/svm.filtered.refined.vcf\nexport CONF=~/sequencing_programs/ubuntu.application.properties\njava -Xmx2048m -jar $PIPELINE --command variantQc --output \"$OUT_DIR\" --vcf \"$VCF\" --runVariantLevelQC --conf $CONF\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9980991371645166,
      "result": {
        "original_header": "TargetSpecificGATKSequencingPipeline",
        "type": "Text_excerpt",
        "value": "* Please visit Sampson lab at http://kidneyomics.org\n* This package takes FASTQ files and produces a filtered VCF file\n* This package implements GATK's best practices for GATK version 3.4 with the exection of marking duplicates and variant filtering\n* This package uses a custom Support Vector Machine for filtering variants using Exac and 1000G for determining positive and negative training examples \n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/wiki"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download Reference files",
        "type": "Text_excerpt",
        "value": "* Note that there are about 20gb in reference files\n```\nmkdir ~/sequencing_reference_files\nwget -c -r --no-parent --reject \"index.html*\" \\\n\"http://glom.sph.umich.edu/TargetedSequencingPipelineReferences/\" -nH --cut-dirs=1\n```\n* Note you should reindex the tabix files just incase the tbi file was copied before the vcf. This is recommended because GATK can throw error messages when the tbi file is out of date.\n```\ncd ~/sequencing_reference_files\ntabix -f -pvcf Mills_and_1000G_gold_standard.indels.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf 1000G_phase1.indels.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf 1000G_omni2.5.hg19.sites.relabel.vcf.gz\ntabix -f -pvcf ALL.phase3.combined.sites.unfiltered.vcf.gz\ntabix -f -pvcf dbsnp_138.hg19.relabel.vcf.gz\ntabix -f -pvcf ExAC.r0.3.sites.vep.vcf.gz\ntabix -f -pvcf hapmap_3.3.hg19.sites.relabel.vcf.gz\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download test data about 2GB",
        "type": "Text_excerpt",
        "value": "```\ncd ~/\ngit clone https://github.com/christopher-gillies/FluidigmTestData.git\ncd FluidigmTestData\nls *.gz | perl -F\"_\" -lane 'use Cwd; my $dir = Cwd::getcwd(); print \"$F[0]\\t$dir/$_\"' > fastq.list.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/christopher-gillies/TargetSpecificGATKSequencingPipeline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "christopher-gillies/TargetSpecificGATKSequencingPipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TargetSpecificGATKSequencingPipeline"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "type": "Text_excerpt",
        "value": "* This has been tested on Ubuntu 14.04.3\n* You will need at least 8gb of ram to run this\n* Since this is a pipeline that utilizes many other programs there are many dependencies. \n* I have tried to outline the steps to installing all the necessary dependencies from a fresh default Ubuntu 14.04.04 installation.\n* This pipeline should work on most Linux distributions and Mac provided that you install the dependencies\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "git",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```\nsudo apt-get install git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "java",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* GATK does not support openjdk so you should install java from oracle\n* http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\n* \n```\ncd ~/Downloads/\ntar -xvf jdk-7u79-linux-x64.tar.gz\nsudo mkdir -p /usr/lib/jvm\nsudo mv ./jdk1.7.0_79 /usr/lib/jvm/\nsudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk1.7.0_79/bin/java\" 2000\nsudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk1.7.0_79/bin/javac\" 2000\nsudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk1.7.0_79/bin/javaws\" 2000\n\njava -version\n# Result\n# java version \"1.7.0_79\"\n# Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n# Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "maven if you want to build source",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```\nsudo apt-get install maven\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you are interested in read trimming",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* cutadapt https://cutadapt.readthedocs.org/en/stable/installation.html\n* install pip and cutadapt\n \n ```\nsudo apt-get install build-essential\nsudo apt-get install python-dev\nsudo apt-get install python-dev\nsudo apt-get install python-pip\npip install --user --upgrade cutadapt\nor\nsudo pip install --upgrade cutadapt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you are interested in aligning and variant calling",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* GATK \n* https://www.broadinstitute.org/gatk/download/\n* You will need an account to download it\n```\n# the name sequencing_programs does not matter\nmkdir ~/sequencing_programs\ncd ~/sequencing_programs\ncp ~/Downloads/GenomeAnalysisTK-3.4-46.tar.bz2 .\ntar -xvf GenomeAnalysisTK-3.4-46.tar.bz2\n```\n\n* htslib and samtools\n```\nsudo apt-get install libncurses5-dev\nsudo apt-get install zlib1g-dev\ncd ~/sequencing_programs\ngit clone https://github.com/samtools/htslib.git\ncd htslib\nmake\ncd ~/sequencing_programs\ngit clone git://github.com/samtools/samtools.git  \ncd samtools\n```\n\n* Install tabix\n```\nsudo apt-get install tabix\n```\n\n* bwa\n```\ncd ~/sequencing_programs\ngit clone https://github.com/lh3/bwa.git\nmake\n```\n\n* picard tools\n```\ncd ~/sequencing_programs\nwget https://github.com/broadinstitute/picard/releases/download/1.139/picard-tools-1.139.zip\nunzip picard-tools-1.139.zip\n```\n\n* qplot\n```\ncd ~/sequencing_programs\ngit clone https://github.com/statgen/libStatGen\ncd libStatGen\nmake\ncd ~/sequencing_programs\nwget http://www.sph.umich.edu/csg/zhanxw/software/qplot/qplot-source.20130627.tar.gz\ntar -xvf qplot-source.20130627.tar.gz\ncd qplot\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999919675003092,
      "result": {
        "original_header": "How do I perform variant calling?",
        "type": "Text_excerpt",
        "value": "```\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport OUT=~/FluidigmTestData/calls/\nexport BAMS_IN=~/FluidigmTestData/align/bam.list.txt\nexport REGIONS=~/FluidigmTestData/align/genes.intervals\nexport CONF=~/sequencing_programs/ubuntu.application.properties\nmkdir $OUT\njava -jar $PIPELINE --command call --output $OUT --bamFiles $BAMS_IN --primerLocations $REGIONS --unifiedGenotyper --numGatkThreads 1 --xmx 4g --conf $CONF\ncd $OUT\nmake -j2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999754913634,
      "result": {
        "original_header": "How do I perform variant quality filtering?",
        "type": "Text_excerpt",
        "value": "```\nexport DATA_DIR=~/FluidigmTestData/\nexport OUT_DIR=$DATA_DIR/svm_filter/\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport VCF=$DATA_DIR/calls/merged.vcf\nexport CONF=~/sequencing_programs/ubuntu.application.properties\nmkdir \"$OUT_DIR\"\njava -Xmx2048m -jar $PIPELINE --command svmFilter --output \"$OUT_DIR\" --vcf $VCF --conf $CONF --snpsOnly\ncd $OUT_DIR\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/christopher-gillies/TargetSpecificGATKSequencingPipeline/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 christopher-gillies\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TargetSpecificGATKSequencingPipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "christopher-gillies"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 253447,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 39310,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Smalltalk",
        "size": 1438,
        "type": "Programming_language",
        "value": "Smalltalk"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "git",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```\nsudo apt-get install git\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "java",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* GATK does not support openjdk so you should install java from oracle\n* http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\n* \n```\ncd ~/Downloads/\ntar -xvf jdk-7u79-linux-x64.tar.gz\nsudo mkdir -p /usr/lib/jvm\nsudo mv ./jdk1.7.0_79 /usr/lib/jvm/\nsudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk1.7.0_79/bin/java\" 2000\nsudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk1.7.0_79/bin/javac\" 2000\nsudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk1.7.0_79/bin/javaws\" 2000\n\njava -version\n# Result\n# java version \"1.7.0_79\"\n# Java(TM) SE Runtime Environment (build 1.7.0_79-b15)\n# Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "maven if you want to build source",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "```\nsudo apt-get install maven\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you are interested in read trimming",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* cutadapt https://cutadapt.readthedocs.org/en/stable/installation.html\n* install pip and cutadapt\n \n ```\nsudo apt-get install build-essential\nsudo apt-get install python-dev\nsudo apt-get install python-dev\nsudo apt-get install python-pip\npip install --user --upgrade cutadapt\nor\nsudo pip install --upgrade cutadapt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you are interested in aligning and variant calling",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "* GATK \n* https://www.broadinstitute.org/gatk/download/\n* You will need an account to download it\n```\n# the name sequencing_programs does not matter\nmkdir ~/sequencing_programs\ncd ~/sequencing_programs\ncp ~/Downloads/GenomeAnalysisTK-3.4-46.tar.bz2 .\ntar -xvf GenomeAnalysisTK-3.4-46.tar.bz2\n```\n\n* htslib and samtools\n```\nsudo apt-get install libncurses5-dev\nsudo apt-get install zlib1g-dev\ncd ~/sequencing_programs\ngit clone https://github.com/samtools/htslib.git\ncd htslib\nmake\ncd ~/sequencing_programs\ngit clone git://github.com/samtools/samtools.git  \ncd samtools\n```\n\n* Install tabix\n```\nsudo apt-get install tabix\n```\n\n* bwa\n```\ncd ~/sequencing_programs\ngit clone https://github.com/lh3/bwa.git\nmake\n```\n\n* picard tools\n```\ncd ~/sequencing_programs\nwget https://github.com/broadinstitute/picard/releases/download/1.139/picard-tools-1.139.zip\nunzip picard-tools-1.139.zip\n```\n\n* qplot\n```\ncd ~/sequencing_programs\ngit clone https://github.com/statgen/libStatGen\ncd libStatGen\nmake\ncd ~/sequencing_programs\nwget http://www.sph.umich.edu/csg/zhanxw/software/qplot/qplot-source.20130627.tar.gz\ntar -xvf qplot-source.20130627.tar.gz\ncd qplot\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:46:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If you want to use the svm filter",
        "parent_header": [
          "Install dependencies"
        ],
        "type": "Text_excerpt",
        "value": "You will need to install R. Unfortunately, Ubuntu 14.04 has an old version of R so we have to install it a non-standard way\n```\ncd ~/\nsudo apt-get install liblapack3\nsudo apt-get install libgfortran3\nsudo apt-get install libblas3\nsudo apt-get install gfortran\nwget http://cran.es.r-project.org/bin/linux/ubuntu/trusty/r-base-core_3.2.2-1trusty0_amd64.deb\nsudo dpkg -i r-base-core_3.2.2-1trusty0_amd64.deb\nsudp Rscript -e 'install.packages(\"ggplot2\",repos=\"http://cran.wustl.edu/\")' \nsudo Rscript -e 'install.packages(\"gridExtra\",repos=\"http://cran.wustl.edu/\")' \nsudo Rscript -e 'install.packages(\"e1071\",repos=\"http://cran.wustl.edu/\")' \nsudo Rscript -e 'source(\"https://bioconductor.org/biocLite.R\"); biocLite(\"impute\")' \n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you want to use Release version of TargetSpecificGATKSequencingPipeline then follow the steps below",
        "type": "Text_excerpt",
        "value": "```\ncd ~/sequencing_programs\nwget https://github.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/raw/master/release/TargetSpecificGATKSequencingPipeline-0.1.jar\nwget https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/example.ubuntu.application.properties\n```\n\n* Change the username from cgillies to YOUR_USERNAME in the example.ubuntu.application.properties file\n\n```\ncat ~/sequencing_programs/example.ubuntu.application.properties | \\\nperl -lane '$_ =~ s/cgillies/YOUR_USERNAME/; print $_' > \\\n~/sequencing_programs/ubuntu.application.properties\n```\n\n* Make sure the paths are still valid for the files in the ubuntu.application.properties. They should be hopefully be if you have followed this tutorial exactly.\n\n* Test that the pipeline runs\n```\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport CONF=~/sequencing_programs/ubuntu.application.properties\njava -jar $PIPELINE --conf $CONF --help\n```\n* The program successfully started up if the help menu is displayed\n\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you want to use source version of TargetSpecificGATKSequencingPipeline then follow the steps below",
        "type": "Text_excerpt",
        "value": "* Clone repository\n```\nexport JAVA_HOME=/usr/lib/jvm/jdk1.7.0_79/\ncd ~/sequencing_programs/\ngit clone https://github.com/christopher-gillies/TargetSpecificGATKSequencingPipeline.git\n```\n* Install maven dependencies in lib folder\n```\nmvn install:install-file -Dfile=./lib/picard-1.107.jar -DgroupId=net.sf.picard -DartifactId=picard -Dversion=1.107 -Dpackaging=jar\n\nmvn install:install-file -Dfile=./lib/sam-1.107.jar -DgroupId=net.sf.samtools -DartifactId=sam -Dversion=1.107 -Dpackaging=jar\n\nmvn install:install-file -Dfile=./lib/tribble-1.107.jar -DgroupId=org.broad.tribble \\\n    -DartifactId=tribble -Dversion=1.107 -Dpackaging=jar\n\nmvn install:install-file -Dfile=./lib/VCFAnalysisTools-1.03.jar -DgroupId=org.kidneyomics \\\n    -DartifactId=VCFAnalysisTools -Dversion=1.03 -Dpackaging=jar\n```\n* Build the package\n```\ncd ~/sequencing_programs/TargetSpecificGATKSequencingPipeline/\nmvn package\n```\n* Setup configuration\n```\ncat ~/sequencing_programs/TargetSpecificGATKSequencingPipeline/example.ubuntu.application.properties | \\\nperl -lane '$_ =~ s/cgillies/YOUR_USERNAME/; print $_' > \\\n~/sequencing_programs/TargetSpecificGATKSequencingPipeline/ubuntu.application.properties\n```\n\n* Test that the pipeline runs\n```\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline/target/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport CONF=~/sequencing_programs/TargetSpecificGATKSequencingPipeline/ubuntu.application.properties\njava -jar $PIPELINE --conf $CONF --help\n```\n* The program successfully started up if the help menu is displayed\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How do I use the adapter trimming pipeline?",
        "type": "Text_excerpt",
        "value": "```\nexport OUT_DIR=~/FluidigmTestData/trim\nexport FASTQ_FILE_LIST=~/FluidigmTestData/fastq.list.txt\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport CONF=~/sequencing_programs/ubuntu.application.properties\nmkdir $OUT_DIR\njava -jar $PIPELINE --conf $CONF --command trim --tspl 20 --minAdapterOverlap 7 \\\n--adapter1 AGACCAAGTCTCTGCTACCGTA --adapter2 TGTAGAACCATGTCGTCAGTGT --maxErr 0.05 \\\n--output $OUT_DIR --fastqFiles $FASTQ_FILE_LIST\ncd $OUT_DIR\n# 2 is the number of jobs to run\nmake -j 2\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Create gene list",
        "parent_header": [
          "How do I use alignment pipeline?"
        ],
        "type": "Text_excerpt",
        "value": "```\nexport OUT_DIR=~/FluidigmTestData/align\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport CONF=~/sequencing_programs/ubuntu.application.properties\nmkdir $OUT_DIR\nexport GENES=\"INF2\nNPHS2\nNPHS1\nWT1\n\"\nexport GENES_STR=$(echo $GENES | perl -lane 'print join(\",\",@F)')\njava -jar $PIPELINE --command makeLocations --conf $CONF \\\n--output $OUT_DIR/genes.intervals \\\n--genes \"$GENES_STR\"\n```\n* This may take a couple minutes because it is going to scan through all elements in genecode\n\n```\nexport OUT_DIR=~/FluidigmTestData/align\nexport FASTQ_FILE_LIST=~/FluidigmTestData/trim/fastq.list.txt\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport CONF=~/sequencing_programs/ubuntu.application.properties\njava -jar $PIPELINE --command align --output $OUT_DIR --fastqFiles $FASTQ_FILE_LIST --primerLocations $OUT_DIR/genes.intervals --conf $CONF\ncd $OUT_DIR\n# 1 is the number of jobs to run\nmake -j 1\n```"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How do I get a summary of the refined variants?",
        "type": "Text_excerpt",
        "value": "```\nexport PIPELINE=~/sequencing_programs/TargetSpecificGATKSequencingPipeline-0.1.jar\nexport DATA_DIR=~/FluidigmTestData/\nexport OUT_DIR=$DATA_DIR/svm_filter/\nexport VCF=\"$OUT_DIR\"/svm.filtered.refined.vcf\nexport CONF=~/sequencing_programs/ubuntu.application.properties\njava -Xmx2048m -jar $PIPELINE --command variantQc --output \"$OUT_DIR\" --vcf \"$VCF\" --runVariantLevelQC --conf $CONF\n```\n"
      },
      "source": "https://raw.githubusercontent.com/christopher-gillies/TargetSpecificGATKSequencingPipeline/master/README.md",
      "technique": "header_analysis"
    }
  ]
}