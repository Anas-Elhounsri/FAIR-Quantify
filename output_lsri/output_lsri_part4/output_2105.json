{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ajmazurie/xstats.enrichment"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2010-05-07T17:10:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-10-09T06:45:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "enrichment (subset of the xstats package) is a Python library providing two methods to perform enrichment analysis, such as gene set enrichment analysis in bioinformatics"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9918522341183653,
      "result": {
        "original_header": "xstats.enrichment",
        "type": "Text_excerpt",
        "value": "``enrichment`` is a Python_ library, part of the ``xstats`` toolkit, which you can use to perform to type of enrichment analysis: \n- you can compare how enriched a subset of objects is in some annotation when compared with a general population. E.g., how significant it is to find 12 women in a group of 20 people knowing that help of the world's population is female? The significance is evaluated using a `Fisher's exact test <http://en.wikipedia.org/wiki/Fisher's_exact_test>`_. \n- you can evaluate how enriched the top of a ranked list of objects is in some annotation. There is no need to apply a cut-off to decide what is the top of the list; the significance of this enrichment is evaluated using methods from [Eden2007a]_ and [Eden2007b]_ \nA typical use of such library is in bioinformatics, to perform gene set enrichment analysis. Given a set of genes for which a property (such as the expression level) is measured, ``enrichment`` can evaluate how enriched is the subset of all genes with expression level above a threshold in some functional annotations. It can also evaluate how enriched the top of a list of genes, ranked by decreasing expression level, is in some functional annotations. \n.. [Eden2007a] Eden E, Lipson D, Yogev S and Yakhini Z. Motif discovery in ranked lists of DNA sequences. PLoS Computational Biology, 2007 Mar 23;3(3):e39\n.. [Eden2007b] Eden E. Discovering motifs in ranked lists of DNA sequences. Research thesis, 2007 Jan \n"
      },
      "source": "https://raw.githubusercontent.com/ajmazurie/xstats.enrichment/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ajmazurie/xstats.enrichment/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ajmazurie/xstats.enrichment/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ajmazurie/xstats.enrichment"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xstats.enrichment"
      },
      "source": "https://raw.githubusercontent.com/ajmazurie/xstats.enrichment/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ajmazurie/xstats.enrichment/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xstats.enrichment"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ajmazurie"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8554,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 7104,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ajmazurie/xstats.enrichment/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:21:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "parent_header": [
          "xstats.enrichment"
        ],
        "type": "Text_excerpt",
        "value": "- Download the latest version of the library from http://github/ajmazurie/xstats.enrichment/downloads\n- Unzip the downloaded file, and ``cd`` in the resulting directory\n- Run ``python setup.py install``. Alternatively, you can package the library by typing ``python setup.py bdist``, which will result in the creation of a file dist/xstats.enrichment-xxx.tar.gz, with 'xxx' being the version number and the name of your platform. Installing the library is then as simple as ``easy_install dist/Enrichment-xxx.tar.gz`` (see the setuptools `documentation <http://pypi.python.org/pypi/setuptools>`_)\n\nFrom then you only have to import ``enrichment`` to use the library::\n\n\timport xstats.enrichment\n\t\n\t# Analysis 1: how significant is it to have 10 objects out of 500\n\t# that share a given annotation, knowing that 120 out of the 1800\n\t# objects in the general population have this annotation?\n\tl, r, t = xstats.enrichment.evaluate_subset(10, 500, 120, 1800)\n\t\n\t# the left-tailed probability is the probability of having less\n\t# than 10 objects out of 500 with this annotation:\n\tprint \"left-tailed:\", l # 5.25e-8\n\t\n\t# the right-tailed probability is the probability of having more\n\t# than 10 objects out of 500 with this annotation:\n\tprint \"right-tailed:\", r # 0.99\n\t\n\t# the two-tailed probability is the probability of observing 10\n\t# objects out of 500 with this annotation, plus the probabilities\n\t# of observing even less likely proportions:\n\tprint \"two-tailed:\", t # 7.78e-8\n\t\n\t# as a result, we demonstrate that finding 10 objects with this\n\t# annotation is unexpected, as shown by the two-tailed p-value\n\t# (significant at an error rate of 5%). To know exactly in which\n\t# way the finding is unexpected, just look at the left- and right-\n\t# tailed p-values. In this example the left-tailed p-value is very\n\t# low, while the right-tailed p-value is almost 1. It means that\n\t# finding 10 objects is unexpectedly low in regard of the general\n\t# population.\n\t\n\t# conversely, finding 100 objects in the selection of 500 with\n\t# this property is unexpectedly high:\n\tl, r, t = xstats.enrichment.evaluate_subset(100, 500, 120, 1800)\n\t\n\t# the right-tailed p-value is very low, while the left-tailed is 1\n\tprint \"left- and right-tailed:\", l, r # 1, 1.32e-39\n\t\n\t\n\t# Analysis 2: in a ranked list of 1000 objects, of which half of\n\t# them share a given annotation, how significant is it to find 20\n\t# objects with this annotation at the top of the list?\n\t\n\t# we build an occurrence vector which, for each object in the list,\n\t# contains either True or False to represent if this object have\n\t# the annotation considered.\n\t\n\t# we start with an homogeneous distribution:\n\toccurrences = [True, False] * 500\n\t\n\t# as expected, there is no significant enrichment at the top of the list:\n\tprint xstats.enrichment.evaluate_list(occurrences) # 0.99\n\t\n\t# we now build a second occurrence vector, in which the first 20 objects\n\t# all have the annotations:\n\toccurrences = [True] * 20 + [False] * 20 + [True, False] * 480\n\t\n\t# this time we found a significant enrichment at the top of the list,\n\t# which in this case is determined as the 20 first entries:\n\tp_value, pivot = xstats.enrichment.evaluate_list(occurrences, with_pivot = True)\n\t\n\tprint \"p-value:\", p_value # 3.67e-5\n\tprint \"pivot:\", pivot # 20\n\n.. _Python: http://www.python.org/\n"
      },
      "source": "https://raw.githubusercontent.com/ajmazurie/xstats.enrichment/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}