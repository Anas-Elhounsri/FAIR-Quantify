{
  "application_domain": [
    {
      "confidence": 14.36,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yongzhuang/TrioCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "<yzhuangliu@gmail.com>\n"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-09-15T14:59:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-28T13:54:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "TrioCNV is a tool designed to jointly detecting CNVs from WGS data in parent-offspring trios. It models read depth signal with the negative binomial regression to accommodate over-dispersion and considered GC content and mappability bias. It leverages parent-offspring relationship to apply Mendelian inheritance constraint while allowing for the rare incidence of de novo events. It uses a hidden Markov model (HMM) by combining the two aforementioned models to jointly perform CNV segmentation for the trio."
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/yongzhuang/TrioCNV/wiki"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yongzhuang/TrioCNV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yongzhuang/TrioCNV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yongzhuang/TrioCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TrioCNV"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "If you want to run TrioCNV, you'll need:\n\n1. Java 1.7+\n\n2. Apache Maven (if you want to build the source)\n\n3. R (Rscript exectuable must be set in the PATH environment variable)\n\n4. Runiversal package(http://cran.rproject.org/web/packages/Runiversal/index.html) in R environment\n\n5. The easiest way to get TrioCNV is to download the binary distribution from the TrioCNV github release page. Alternatively, you can build TrioCNV from source with Maven. \n\n\tgit clone --recursive https://github.com/yongzhuang/TrioCNV.git\n\t\n\tcd TrioCNV/\n\t\n\tmvn clean install -Dmaven.compiler.source=1.7 -Dmaven.compiler.target=1.7\n"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.854585767355443,
      "result": {
        "original_header": "File Instruction",
        "type": "Text_excerpt",
        "value": "\t\t/path/Sample1.bam \n\t\t/path/Sample2.bam \n\t\t/path/Sample3.bam\n\t\t... \n\tSee (http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml) \n"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8622271574930502,
      "result": {
        "original_header": "File Instruction",
        "type": "Text_excerpt",
        "value": "\tExample:  \n2. pedigree file \n"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yongzhuang/TrioCNV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TrioCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yongzhuang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 99297,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yongzhuang",
          "type": "User"
        },
        "date_created": "2015-09-17T05:42:38Z",
        "date_published": "2015-09-18T06:23:46Z",
        "html_url": "https://github.com/yongzhuang/TrioCNV/releases/tag/0.1.2",
        "release_id": 1832477,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/yongzhuang/TrioCNV/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/yongzhuang/TrioCNV/releases/1832477",
        "value": "https://api.github.com/repos/yongzhuang/TrioCNV/releases/1832477",
        "zipball_url": "https://api.github.com/repos/yongzhuang/TrioCNV/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yongzhuang",
          "type": "User"
        },
        "date_created": "2015-09-17T05:42:38Z",
        "date_published": "2015-09-18T06:27:30Z",
        "html_url": "https://github.com/yongzhuang/TrioCNV/releases/tag/0.1.1",
        "release_id": 1832500,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/yongzhuang/TrioCNV/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/yongzhuang/TrioCNV/releases/1832500",
        "value": "https://api.github.com/repos/yongzhuang/TrioCNV/releases/1832500",
        "zipball_url": "https://api.github.com/repos/yongzhuang/TrioCNV/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "type": "Text_excerpt",
        "value": "usage: java -jar TrioCNV.jar <COMMAND> [OPTIONS] \n\n1. preprocess \n\n\tThis command is to extract the information from the BAM file. \n\n\t\tusage: java -jar TrioCNV.jar preprocess [OPTIONS] \n\n\t\t-R,--reference  <FILE>  reference genome file (required)\n\n\t\t-B,--bams       <FILE>  bam list file (required)\n\n\t\t-P,--pedigree   <FILE>  pedigree file (required)\n\n\t\t-M,--mappability        <FILE>  mappability file (required)\n\n\t\t-O,--output     <FILE>  perfix of output file (required)\n\n\t\t   --window     <INT>   window size (optional, default 200)\n\t\t   \n\t\t   --min_mapping_quality        <INT>   minumum mapping quality (optional,default 0)\n\n2. call \n\n\tThis command is to jointly call CNVs from a parent-offspring trio.\n\n\t\tusage: java -jar TrioCNV.jar call [OPTIONS] \n\n\t\t-I,--input      <FILE>  read count file got by the preprocess step (required)\n\n\t\t-P,--pedigree   <FILE>  pedigree file (required)\n\n\t\t-M,--mappability        <FILE>  mappability file (required)\n\n\t\t-O,--output     <FILE>  output structural variation file (required)\n\n\t\t   --min_mappability    <FLOAT> minumum mappability(optional, default 0)\n\t\t   \n\t\t   --mutation_rate      <FLOAT> de novo mutation rate (optional, default 0.0001)\n\t\t   \n\t\t   --transition_prob    <FLOAT> probability of transition between two different copy number states(optional, default 0.00001)\n\t\t   \n\t\t   --outlier\t<FLOAT>\tthe predefined percentage of outliers (optional, default 0.025)\n\t\t   \n\t\t   --min_distance       <INT>   minumum distance to merge two adjacent CNVs (optional, default 10K)\n\t\t   \n\t\t   --nt <INT>   number of threads (optional, default 1)\n\t\t   \n\t\t   --gc_bin_size\t<INT>\tsize of gc bin by percent (optional, default 1)\n"
      },
      "source": "https://raw.githubusercontent.com/yongzhuang/TrioCNV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:44:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ]
}