{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanglu295/LRTK-SIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-09T20:36:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-05T20:15:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A program to simulate linked reads sequencing from 10X Chromium System"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9280079663623539,
      "result": {
        "original_header": "Auxiliary program",
        "type": "Text_excerpt",
        "value": "`gen_fasta.py` can generate two haploid fasta files with variants from vcf and reference genome sequence. \n`-p --prefix, prefix of new reference sequence` \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9389168488966566,
      "result": {
        "original_header": "Important parameters in config file",
        "type": "Text_excerpt",
        "value": "`line2` and `line3`: `Path_Fastahap1` and `Path_Fastahap2`, the two haploid reference serquences. LRTK-SIM allows one or two fasta files to perform haploid and diploid simulation. The diploid reference sequences can be generated by `gen_fasta.py` that inserting variants to the reference genome (only SNVs for this version). You can remove `Path_Fastahap2=XXX` in `line3` and set `Hap=1` in `line33` for haploid simulation. \n`line7`: `CF`, coverage of long DNA fragments \n`line9`: `CR`, covergae of short reads for each fragment \n`line11`: `N_FP`, average number of fragments for each droplet \n`line13`: `Mu_F`, average length for long DNA fragment (Kb) \n`line27`: `Mu_IS`, the average of insert size for short reads (bp) \n`line29`: `Std_IS`, standard deviation of insert size for short reads (bp) \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9666141849341588,
      "result": {
        "original_header": "Simulation for metagenomics",
        "type": "Text_excerpt",
        "value": "Different from dipoid assemblies, the species abundances in metagenomics sequencing may be significantly different. `LRTK-SIM` can make use of the species abundances in simulation that should be provided by a flat file with two columns: 1. sequence name (muct be identical with the name of reference sequence) 2. abundance (sum to 1 for all the species). One example is given in `meta_config` folder\n \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9893739876506576,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "`LRTK-SIM` generates one folder for each library named after lib_X (X is the name of configuration file) in the same path of config files. Two gzipped fastq files are generated and started by X_S1_L001_R1_001.fastq.gz and X_S1_L001_R2_001.fastq.gz to represent forward and reverse reads. The simulated data have been tested and accepted by 10X official pipelines [Long Ranger](https://support.10xgenomics.com/genome-exome/software/pipelines/latest/what-is-long-ranger) and [Supernova](https://support.10xgenomics.com/de-novo-assembly/software/overview/welcome). \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zhanglu295/LRTK-SIM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanglu295/LRTK-SIM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zhanglu295/LRTK-SIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LRTK-SIM: Linked read simulator for 10X Chromium System."
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8795817978156423,
      "result": {
        "original_header": "Auxiliary program",
        "type": "Text_excerpt",
        "value": "`-p --prefix, prefix of new reference sequence` \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9877191740100921,
      "result": {
        "original_header": "Important parameters in config file",
        "type": "Text_excerpt",
        "value": "Two examples of config file (config1.txt and config2.txt) are prepared in the `diploid_config` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.879272793803819,
      "result": {
        "original_header": "Auxiliary program",
        "type": "Text_excerpt",
        "value": "`usage: python gen_fasta.py -v sample.vcf -r ref.fasta -p newref -o ./work` \n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zhanglu295/LRTK-SIM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Eric Zhang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LRTK-SIM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zhanglu295"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 29553,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:53:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic usage",
        "parent_header": [
          "LRTK-SIM: Linked read simulator for 10X Chromium System."
        ],
        "type": "Text_excerpt",
        "value": "`python LRTK-SIM.py <path to configuration files>`\n\nMultiple libraries are allowed to simulated simutaneously and the parameters should be written in the correspinding configuration files. \n\nE.g. `python LRTK-SIM.py ./diploid_config`\n\nThe `diploid_config` folder includes two config files for two libraries with different parameters:\n\nconfig1.txt (for library 1) and config2.txt (for library 2)\n\nThe simulated fastq files are written to the folder named with `lib_config1` and `lib_config2`, respectively.\n"
      },
      "source": "https://raw.githubusercontent.com/zhanglu295/LRTK-SIM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}