{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jengelmann/FastqPuri"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "Paula P\u00e9rez Rubio,\nClaudio Lottaz,\nJulia Engelmann \n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-12T14:51:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-03-28T19:40:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fastq quality assessment and filtering tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9860536193046239,
      "result": {
        "original_header": "FastqPuri, an fq quality control and filter tool",
        "type": "Text_excerpt",
        "value": "Software and source code of `FastqPuri`. It creates quality reports of\n`fastq` files and filters them removing low quality reads, reads\ncontaining too many N's or contamination reads (unwanted rRNA reads,\nimpurities coming from another organism, ...). \n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9282710729208965,
      "result": {
        "original_header": "Executables",
        "type": "Text_excerpt",
        "value": "* `Qreport`: creates a quality report in html format (see `README_Qreport.md`),\n* `Sreport`: creates a summary report in html format on a set of samples, \n   regarding either the original files or the filtering process\n   (see `README_Sreport.md`),\n* `makeBloom`: creates a  bloom filter from a fasta file of a certain size,\n   and stores it in a file (see `README_makeBloom.md`)\n* `makeTree`: creates a tree of a certain depth from a fasta file and stores\n   it in a file (see `README_makeTree.md`),\n* `trimFilter`: performs the filtering process for single-end data \n   (see `README_trimFilter.md`).\n* `trimFilterPE`: performs the filtering process for double stranded data \n   (see `README_trimFilterPE.md`). \n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation of the code",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "A Doxygen documentation of the code is available:\n\n- `html` version under the folder `html` (open `index.html` with a browser).\n- `pdf` version: `latex/refman.pdf`\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jengelmann/FastqPuri/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jengelmann/FastqPuri/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jengelmann/FastqPuri"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastqPuri, an fq quality control and filter tool"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/pics/adapters/palindromes_new.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/pics/adapters/palindromes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/run_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilter_Sreport/create_fq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilter_Sreport/run_example_BLOOM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilter_Sreport/run_example_TREE.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilter_Sreport/adapters/run_examples.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/bloomROC/bf_performance.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/create_fq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/run_example_BLOOM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/run_example_TREE.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/adapters/run_examples.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/adapters/create_fq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/examples/trimFilterPE_Sreport/adapters/fq_gen.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "Clone the repository, or download the source. Make sure that \nyour system supplies the following dependencies for FastqPuri.\n\n- OS: Linux (clang, gcc), Mac OS (clang, gcc), OpenBSD (clang)\n- `cmake` (at least version 2.8), \n- a `C` compiler supporting the `c11` standard \n  (change the compiler flags otherwise),\n- pandoc (optional, see documentation in `PANDOC.md`),\n- `Rscript` (optional),\n- Following `R` packages installed (optional):\n   * `pheatmap`\n   * `knitr`\n   * `rmarkdown`\n\n**NOTE:**  FastqPuri will work without the optional dependencies \nbut will skip creating html reports if they are not available.\n\n```\n$ cmake -H. -Bbuild/ [-DRSCRIPT=/path/to/my/R/bin/Rscript] [-DCMAKE_INSTALL_PREFIX=/path/to/my/root] ... \n$ cd build \n$ make \n$ sudo make install  \n```\n\nWhen running `cmake`, there are some variables you can set \nusing the option -D followed by the variable name. These variables are:\n\n- `CMAKE_C_COMPILER`: `C` compiler (default `gcc`)\n- `CMAKE_C_FLAGS`: compiler flags (default `-Wall -O3 -march=native -std=c11`).\n- `CMAKE_INSTALL_PREFIX`: root path for `make install`, e.g. to\n  redirect to a directory with user access (default /usr/local),\n- `PANDOC`: `pandoc` executable (default `pandoc`),\n- `RSCRIPT`: `Rscript` executable (default `Rscript`),\n- `READ_MAXLEN`: Maximum Illumina read length\n- (default 400),\n\nThe executables will be created in the folder `bin` and installed in `/usr/local/bin`. \n`R` scripts will be installed in `/usr/local/share/FastqPuri/R`. \n\n**WARNING:** do not move the executables that depend on `R` scripts, \nanywhere else, unless you also move the corresponding `R` scripts respecting\nthe local folder structure. \n\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via bioconda **-under construction**.",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "*We are currently working on a bioconda environment for FastqPuri. \nIf you follow the instructions below, it is quite likely that \nFastqPuri will not yet properly run from the bioconda environment.\nSorry about that and please stay tuned!*\n\nBioconda is a channel for the conda package manager specializing in\nbioinformatics software. Have a look at the reference:\n\n* Bjoern Gruening, Ryan Dale, Andreas Sjoedin, Brad A. Chapman, Jillian\n  Rowe, Christopher H. Tomkins-Tinch, Renan Valieris, the Bioconda\n  Team, and Johannes Koester. 2018. Bioconda: Sustainable and\n  Comprehensive Software Distribution for the Life Sciences. Nature\n  Methods, 2018.\n\nTo find out how to use bioconda, see [https://bioconda.github.io](https://bioconda.github.io).\nFor installing FastqPuri in a bioconda environment, you have to install\neither `miniconda` or `anaconda` and register channels as follows:\n\n```\n$ conda config --add channels defaults\n$ conda config --add channels bioconda\n$ conda config --add channels conda-forge\n```\n\nThen you can install `fastqpuri`:\n\n```\n$ conda install fastqpuri\n```\n\nActually, you may also want to use a specific environment for the\nsequencing quality control:\n\n```\n$ conda create -n qc fastqpuri\n```\n\nThis call installs `FastqPuri` directly in a separate environment.\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jengelmann/FastqPuri/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "GPL v3 (see LICENSE.txt)\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FastqPuri"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jengelmann"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 402702,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 130104,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 70328,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 19944,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12920,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 4460,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 771,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 598,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Singularity",
        "size": 46,
        "type": "Programming_language",
        "value": "Singularity"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jengelmann",
          "type": "User"
        },
        "date_created": "2019-03-21T09:53:31Z",
        "date_published": "2019-03-22T15:45:23Z",
        "description": "This version will be attached to the manuscript submitted to BMC Bioinformatics.",
        "html_url": "https://github.com/jengelmann/FastqPuri/releases/tag/v1.0.6",
        "name": "Version to be attached to manuscript",
        "release_id": 16288074,
        "tag": "v1.0.6",
        "tarball_url": "https://api.github.com/repos/jengelmann/FastqPuri/tarball/v1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/jengelmann/FastqPuri/releases/16288074",
        "value": "https://api.github.com/repos/jengelmann/FastqPuri/releases/16288074",
        "zipball_url": "https://api.github.com/repos/jengelmann/FastqPuri/zipball/v1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jengelmann",
          "type": "User"
        },
        "date_created": "2019-01-28T01:00:16Z",
        "date_published": "2019-01-28T08:11:30Z",
        "description": "worked on container implementations and documentation.",
        "html_url": "https://github.com/jengelmann/FastqPuri/releases/tag/v1.0.4",
        "name": "Installation issues fixed",
        "release_id": 15209411,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/jengelmann/FastqPuri/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/jengelmann/FastqPuri/releases/15209411",
        "value": "https://api.github.com/repos/jengelmann/FastqPuri/releases/15209411",
        "zipball_url": "https://api.github.com/repos/jengelmann/FastqPuri/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jengelmann",
          "type": "User"
        },
        "date_created": "2019-01-18T15:43:40Z",
        "date_published": "2019-01-18T16:52:01Z",
        "description": "We added a singularity container and expanded some of the README files.",
        "html_url": "https://github.com/jengelmann/FastqPuri/releases/tag/v1.0.1",
        "name": "Some updates to v1.0",
        "release_id": 15058930,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/jengelmann/FastqPuri/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jengelmann/FastqPuri/releases/15058930",
        "value": "https://api.github.com/repos/jengelmann/FastqPuri/releases/15058930",
        "zipball_url": "https://api.github.com/repos/jengelmann/FastqPuri/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use a docker container to run FastqPuri",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "The file 'Dockerfile' documents the exact linux installation we used\nfor testing. If you have a docker installation ready on your machine,\nyou may want to use a docker container for easy installation and\ncapsulated usage of FastqPuri. After cloning this project from github\nand change to its main directory, you may install a docker container\nas follows:\n\n```\n$ docker build -t fastqpuri .\n```\n\nThis will create a container based on the debian linux distribution\ncovering all dependencies including R and pandoc.  As soon as such a\ncontainer is installed, you can use it either interactively:\n\n```\n$ docker run -v $PWD:/tmp -it fastqpuri\n```\n\nor by running a pipeline implemented in an executable bash script:\n\n```\n$ docker run -v $PWD:/tmp fastqpuri ./pipeline.sh\n```\n\nNote that this call generates results in the docker container\ndirectory `/tmp` but also keeps them after closing the docker container\nlocally where the container was started.\n\nInstead of generating the docker container yourself with 'docker\nbuild', you can also pull a pre-built image from the docker hub as\nfollows:\n\n```\n$ docker pull clottaz/fastqpuri\n```\n\nYou can run such a pre-built image with 'docker run' by indicating the\nimages as 'clottaz/fastqpuri'.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use a singularity container to run FastqPuri",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "Alternativly, if you have singularity installed on your machine, you\ncan call our docker container for FastqPuri as follows:\n\n```\n$ singularity shell --bind .:/tmp docker://clottaz/fastqpuri\n```\n\nThis call opens a shell within the container.\nWith `--bind` we  mount the current directory also in the container.\nThe syntax is as follows: --bind src:dest; src is the source path on\nthe host and dest is the destination path in the container, i.e. where\nyou would like to make the source path available in your container.\nNote that this destination path in your container should be an existing\ndirectory, the operation will fail if you do not create the directory first.\nHence, when we call `singularity shell` like this, the working directory\nin the container is `/tmp`.\n\nAlternatively, in order to execute a script from the current\ndirectory, call singularity as follows:\n\n```\n$ singularity run --bind .:/tmp docker://clottaz/fastqpuri /tmp/pipeline.sh\n```\n\nNote that `/tmp/pipeline.sh` relates to the call within the\ncontainer. Thus, `pipeline.sh` is located in the directory where singularity\nrun is executed, but will be made available to the container via the `--bind`\nparameter.\n\nIf you want to invoke a function of FastqPuri, you can use the 'exec'\ncommand like so:\n\n```\nsingularity exec docker://clottaz/fastqpuri Qreport -h\n```\n\nor invoke a script located in your home directory (assuming that\nrun_ex_TREE.sh is located in your home directory):\n\n```\n$ singularity exec docker://clottaz/fastqpuri $HOME/run_ex_TREE.sh\n```\n\nSingularity documentation can be found here: [https://www.sylabs.io/docs/](https://www.sylabs.io/docs/)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:44:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use a docker container to run FastqPuri",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "The file 'Dockerfile' documents the exact linux installation we used\nfor testing. If you have a docker installation ready on your machine,\nyou may want to use a docker container for easy installation and\ncapsulated usage of FastqPuri. After cloning this project from github\nand change to its main directory, you may install a docker container\nas follows:\n\n```\n$ docker build -t fastqpuri .\n```\n\nThis will create a container based on the debian linux distribution\ncovering all dependencies including R and pandoc.  As soon as such a\ncontainer is installed, you can use it either interactively:\n\n```\n$ docker run -v $PWD:/tmp -it fastqpuri\n```\n\nor by running a pipeline implemented in an executable bash script:\n\n```\n$ docker run -v $PWD:/tmp fastqpuri ./pipeline.sh\n```\n\nNote that this call generates results in the docker container\ndirectory `/tmp` but also keeps them after closing the docker container\nlocally where the container was started.\n\nInstead of generating the docker container yourself with 'docker\nbuild', you can also pull a pre-built image from the docker hub as\nfollows:\n\n```\n$ docker pull clottaz/fastqpuri\n```\n\nYou can run such a pre-built image with 'docker run' by indicating the\nimages as 'clottaz/fastqpuri'.\n\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use a singularity container to run FastqPuri",
        "parent_header": [
          "FastqPuri, an fq quality control and filter tool"
        ],
        "type": "Text_excerpt",
        "value": "Alternativly, if you have singularity installed on your machine, you\ncan call our docker container for FastqPuri as follows:\n\n```\n$ singularity shell --bind .:/tmp docker://clottaz/fastqpuri\n```\n\nThis call opens a shell within the container.\nWith `--bind` we  mount the current directory also in the container.\nThe syntax is as follows: --bind src:dest; src is the source path on\nthe host and dest is the destination path in the container, i.e. where\nyou would like to make the source path available in your container.\nNote that this destination path in your container should be an existing\ndirectory, the operation will fail if you do not create the directory first.\nHence, when we call `singularity shell` like this, the working directory\nin the container is `/tmp`.\n\nAlternatively, in order to execute a script from the current\ndirectory, call singularity as follows:\n\n```\n$ singularity run --bind .:/tmp docker://clottaz/fastqpuri /tmp/pipeline.sh\n```\n\nNote that `/tmp/pipeline.sh` relates to the call within the\ncontainer. Thus, `pipeline.sh` is located in the directory where singularity\nrun is executed, but will be made available to the container via the `--bind`\nparameter.\n\nIf you want to invoke a function of FastqPuri, you can use the 'exec'\ncommand like so:\n\n```\nsingularity exec docker://clottaz/fastqpuri Qreport -h\n```\n\nor invoke a script located in your home directory (assuming that\nrun_ex_TREE.sh is located in your home directory):\n\n```\n$ singularity exec docker://clottaz/fastqpuri $HOME/run_ex_TREE.sh\n```\n\nSingularity documentation can be found here: [https://www.sylabs.io/docs/](https://www.sylabs.io/docs/)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jengelmann/FastqPuri/master/README.md",
      "technique": "header_analysis"
    }
  ]
}