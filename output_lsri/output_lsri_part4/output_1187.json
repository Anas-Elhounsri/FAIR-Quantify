{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/khuranalab/CompositeDriver"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contacts",
        "parent_header": [
          "CompositeDriver"
        ],
        "type": "Text_excerpt",
        "value": "For any questions, comments and suggestions, please email\n\n* ekk2003 [at] med.cornell.edu \n* mil2041 [at] med.cornell.edu\n\nCopyright \u00a9 2016-2017 Ekta Khurana Lab, WCMC\n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-08-15T18:29:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-13T15:15:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Combined mutation recurrence and functional impact to identify coding and non-coding cancer drivers"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9133913882693865,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "CompositeDriver combined mutation recurrence and functional impact to identify coding and non-coding cancer drivers\n \n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.916341269077358,
      "result": {
        "original_header": "Version notes",
        "type": "Text_excerpt",
        "value": "\n* CompositeDriver (version 0.2) supports SNV coding and non-coding drivers  \n* CompositeDriver (version 0.1) supports SNV coding drivers    \n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/khuranalab/CompositeDriver/wiki"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/khuranalab/CompositeDriver/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/khuranalab/CompositeDriver/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "khuranalab/CompositeDriver"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://licensebuttons.net/l/by-nc/4.0/80x15.png"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "CompositeDriver"
        ],
        "type": "Text_excerpt",
        "value": "User will need to install devtools in R for running CompositeDriver package\n\n```sh\ninstall.packages(\"devtools\")\nlibrary(\"devtools\")\ndevtools::install_github(\"khuranalab/CompositeDriver\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9974573765783767,
      "result": {
        "original_header": "Version notes",
        "type": "Text_excerpt",
        "value": "\n* CompositeDriver (version 0.2) supports SNV coding and non-coding drivers  \n* CompositeDriver (version 0.1) supports SNV coding drivers    \n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/khuranalab/CompositeDriver/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "CompositeDriver"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under the CC BY-NC 4.0 \n[![License: CC BY-NC 4.0](https://licensebuttons.net/l/by-nc/4.0/80x15.png)](http://creativecommons.org/licenses/by-nc/4.0/)\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CompositeDriver"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "khuranalab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 48358,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:18:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "CompositeDriver"
        ],
        "type": "Text_excerpt",
        "value": "User will need to \n\n* (1) download [drm.gene.bed](http://khuranalab.med.cornell.edu/FunSeq_data/FunSeq2_DC2/data/drm.gene.bed) file and put it in the \"/path/to/dataContext\" folder\n* (2) assign \"/path/to/Output.vcf\" path for FunSeq2 annotated vcf file\n* (3) assign \"/path/to/output\" path for saving CompositeDriver results\n* (4) tumorType: name of tumor type\n* (5) seedNum: random number seed number (default is 42)\n* (6) functionalImpactScoreCDS: name of functional impact scoring scheme for CDS (current supports \"FunSeq2\" or \"MCAP\")\n* (7) functionalImpactScoreNonCoding: name of functional impact scoring scheme for non-coding (current supports \"FunSeq2\" )\n* (8) reSampleIter: sampling iterations (default value is 100000 iterations)\n* (9) useCores: number of cores for parellel computation \n\n```sh\n\nlibrary(CompositeDriver)\n\n#####\n# global parameters setup\n#####\n\n  dataContextDir<-\"/path/to/dataContext\"\n  annotatedInput<-\"/path/to/Output.vcf\"\n  outputDir<-\"/path/to/output\"\n  tumorType<-\"GBM\"\n  seedNum<-42\n  functionalImpactScoreCDS<-\"FunSeq2\"\n  functionalImpactScoreNonCoding<-\"FunSeq2\"\n  reSampleIter<-1000\n  useCores<-6\n  debugMode<-FALSE\n\n#####\n  \n  preProcessVCF(annotatedInput,functionalImpactScoreCDS,functionalImpactScoreNonCoding,outputDir,tumorType,useCores)\n\n#####\n\n  mutationType<-\"CDS\"\n  cdsOutputDf<-getCDSpvalue(outputDir,tumorType,mutationType,\n                            reSampleIter=reSampleIter,\n                            seedNum=seedNum,debugMode=debugMode)\n\n#####\n\n\n```"
      },
      "source": "https://raw.githubusercontent.com/khuranalab/CompositeDriver/master/README.md",
      "technique": "header_analysis"
    }
  ]
}