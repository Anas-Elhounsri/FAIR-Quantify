{
  "application_domain": [
    {
      "confidence": 16.29,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "parent_header": [
          "mspire"
        ],
        "type": "Text_excerpt",
        "value": "Prince JT, Marcotte EM. <b>mspire: mass spectrometry proteomics in Ruby.</b> *Bioinformatics.* 2008 Dec 1;24(23):2796-7. ([pubmed](http://www.ncbi.nlm.nih.gov/pubmed/18930952))\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/princelab/mspire"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2008-08-21T21:38:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-01-12T15:38:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mass  spectrometry proteomics in ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9991698932357506,
      "result": {
        "original_header": "mspire",
        "type": "Text_excerpt",
        "value": "Mspire is a full featured library for working with mass spectrometry data,\nparticularly proteomic, metabolomic and lipidomic data sets.  It aims to be\nfast, robust, and beautiful.\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.835015980968913,
      "result": {
        "original_header": "imzml",
        "type": "Text_excerpt",
        "value": "Mspire is the *only* commandline converter from mzml into imzml (also see [imzMLConverter](http://www.cs.bham.ac.uk/~ibs/imzMLConverter/))  \n* handles both processed and continuous modes\n* gracefully handles SIM data\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9720501809677882,
      "result": {
        "original_header": "Other Feature Highlights",
        "type": "Text_excerpt",
        "value": "* isotope distribution prediction: uses fastest method known (FFT convolution)\n* protein digestion: Support for 32 enzymes/variants by name\n* pepxml: full object model and complete write support\n* fasta files: complete programmatic access to description lines (via bio-ruby)\n* peak lists: merging/summing and splitting algorithms\n* obo: ontology hash access\n* molecular formulas: can do arithmetic with formulas\n* calculates q-values\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.969107575651847,
      "result": {
        "original_header": "TODO",
        "type": "Text_excerpt",
        "value": "* write the mzml index onto a file (along with correct SHA-1)\n* implement spectrum unpack into an nmatrix or narray\n* do a proper copy over of meta-data from mzml into imzml\n* consider implementing params as a hash and formalizing more complete implementation agnostic params api\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9023390103676742,
      "result": {
        "original_header": "Acronym",
        "type": "Text_excerpt",
        "value": "<i>M</i>ass <i>SP</i>ectrometry <i>I</i>n <i>R</i>uby.  Mspire originally stood for <i>M</i>ass <i>S</i>pectrometry <i>P</i>roteomics <i>I</i>n <i>R</i>uby but the library has since proven useful for all kinds of mass spectrometry projects, hence the more inclusive form.  The <i>e</i> was originally included for aesthetic reasons, but it also provides the user/developer the ability to attach whatever <i>E</i>xclamation or <i>E</i>pithet they choose to the acronym (the best ones will begin with <i>e</i> of course).\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/princelab/mspire/wiki"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/princelab/mspire/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/princelab/mspire/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "princelab/mspire"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mspire"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://codeclimate.com/github/princelab/mspire.png"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999989091873099,
      "result": {
        "original_header": "mspire",
        "type": "Text_excerpt",
        "value": "[![Gem Version][GV img]][Gem Version]\n[![Build Status][BS img]][Build Status]\n[![Dependency Status][DS img]][Dependency Status]\n[![Code Climate][CC img]][Code Climate] \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999722037111,
      "result": {
        "original_header": "Copyright",
        "type": "Text_excerpt",
        "value": "[Gem Version]: https://rubygems.org/gems/mspire\n[Build Status]: https://travis-ci.org/princelab/mspire\n[travis pull requests]: https://travis-ci.org/princelab/mspire/pull_requests\n[Dependency Status]: https://gemnasium.com/princelab/mspire\n[Code Climate]: https://codeclimate.com/github/princelab/mspire \n[GV img]: https://badge.fury.io/rb/mspire.png\n[BS img]: https://travis-ci.org/princelab/mspire.png\n[DS img]: https://gemnasium.com/princelab/mspire.png\n[CC img]: https://codeclimate.com/github/princelab/mspire.png\n \n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/princelab/mspire/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "(The MIT License)\n\nCopyright (c) 2011 Brigham Young University\nauthored by John T. Prince\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n========================================================================\nThe following files are under the following license:\nms/spectrum.rb\n========================================================================\n\n(The MIT License)\n\nCopyright (c) 2006-2010 University of Texas at Austin, Howard Hughes Medical\nInstitute, Reagents of the University of Colorado, and Brigham Young\nUniversity\n\nAuthored by John T. Prince and Simon Chiang.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gemnasium.com/princelab/mspire.png"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mspire"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "princelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 387668,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/princelab/mspire/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:53:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "mzml",
        "parent_header": [
          "mspire",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "* Reading *and* writing\n* True random access to spectra or chromatograms\n* Complete object model with implicit object link resolution (even with random access)\n* Simplified creation of and full support for CV params and referenceable param groups\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "mspire"
        ],
        "type": "Text_excerpt",
        "value": "```ruby\nmzml_file = \"yourfile.mzML\"\n```\n\n### mzml\n\nSee Mspire::Mzml, Mspire::CV::Paramable, Mspire::Mzml::Spectrum and other\nobjects associated with Mzml files.\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "reading",
        "parent_header": [
          "mspire",
          "Examples",
          "mzml"
        ],
        "type": "Text_excerpt",
        "value": "```ruby\nrequire 'mspire/mzml'\n\n# get the intensity of the highest peak from each spectrum\nintensities = Mspire::Mzml.foreach(mzml_file).map do |spectrum|\n  spectrum.intensities.max\nend\n\n# open the file for other operations\nMspire::Mzml.open(mzml_file) do |mzml|\n  # read each spectra\n  mzml.each do |spectrum|\n    # do something with each spectrum ...\n  end\n\n  # or random access by index or id (even if file wasn't indexed)\n  spectrum = mzml[0]\n  spectrum = mzml[\"controllerType=0 controllerNumber=1 scan=2\"]\n\n  # some things to do with a spectrum\n  spectrum.mzs\n  spectrum.intensities\n\n  # first 5 peaks\n  spectrum.peaks[0,5].each do |mz, intensity|\n    puts \"#{mz} #{intensity}\"\n  end\n\n  # true if key exists and no value, the value if present, or false\n  if spectrum.fetch_by_acc('MS:1000128')\n    puts \"this is a profile spectrum!\"\n  end\n\n  if spectrum.ms_level == 2\n    low_mz = spectrum.scan_list.first.scan_windows.first.fetch_by_acc(\"MS:1000501\").to_i\n    puts \"begin scan at #{low_mz} m/z\"\n  end\nend\n```\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "normalize spectra and write new mzML",
        "parent_header": [
          "mspire",
          "Examples",
          "mzml"
        ],
        "type": "Text_excerpt",
        "value": "See Mspire::Mzml for complete example building all objects from scratch.\n\n```ruby\nrequire 'mspire/mzml'\n\nMspire::Mzml.open(mzml_file) do |mzml|\n\n  # MS:1000584 -> an mzML file\n  mzml.file_description.source_files << Mspire::Mzml::SourceFile[mzml_file].describe!('MS:1000584')\n  mspire = Mspire::Mzml::Software.new\n  mzml.software_list.push(mspire).uniq_by(&:id)\n  normalize_processing = Mspire::Mzml::DataProcessing.new(\"ms1_normalization\") do |dp|\n    # 'MS:1001484' -> intensity normalization \n    dp.processing_methods << Mspire::Mzml::ProcessingMethod.new(mspire).describe!('MS:1001484')\n  end\n\n  mzml.data_processing_list << normalize_processing\n\n  spectra = mzml.map do |spectrum|\n    normalizer = 100.0 / spectrum.intensities.max\n    spectrum.intensities.map! {|i| i * normalizer }\n    spectrum\n  end\n  mzml.run.spectrum_list = Mspire::Mzml::SpectrumList.new(normalize_processing, spectra)\n  mzml.write(outfile)\nend\n```"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Masses",
        "parent_header": [
          "mspire",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "```ruby\n# very high precision NIST masses\naa_to_mass = Mspire::Mass::AA::MONO # a hash with residue masses\naa_to_mass['A'] # or access by symbol - Alanine\n\n# elements\nMspire::Mass::Element::MONO[:C] # carbon\nMspire::Mass::Subatomic::MONO[:electron]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Isotopes and molecular formulas",
        "parent_header": [
          "mspire",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Uses Richard Neese biological isotope ratios by default.  All other isotope information culled from NIST.\n\n```ruby\nrequire 'mspire/isotope'\nisotopes = Mspire::Isotope::ISOTOPES  # 288 isotopes\n# same as Mspire::Isotope::Neese::ISOTOPES ; compare to Mspire::Isotope::NIST::ISOTOPES\nhydrogen_isotopes = isotopes.select {|iso| iso.element == :H }\n\nc12 = Mspire::Isotope::BY_ELEMENT[:C].first\nc12.atomic_number # also: mass_number atomic_mass relative_abundance average_mass\nc12.mono   # => true (this is the monoisotopic isotope)\n\nrequire 'mspire/molecular_formula'  # requires fftw gem\npropane = Mspire::MolecularFormula['C3H8']\nbutane = propane + Mspire::MolecularFormula['CH2']\nputs butane  # => C4H10\n\nrequire 'mspire/isotope/distribution'  # requires fftw gem\nputs butane.isotope_distribution  # :total, :max, :first as arg to normalize\n```\n"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Digestion",
        "parent_header": [
          "mspire",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "```ruby\nrequire 'mspire/digester'\ntrypsin = Mspire::Digester[:trypsin].\ntrypsin.digest(\"AACCKDDEERFFKPGG\") # => [\"AACCK\", \"DDEER\", \"FFKPGG\"]\n```"
      },
      "source": "https://raw.githubusercontent.com/princelab/mspire/master/README.md",
      "technique": "header_analysis"
    }
  ]
}