{
  "application_domain": [
    {
      "confidence": 7.34,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bhi-kimlab/StressGenePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-06T02:49:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-12T00:57:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Stress predicting framework with microarray data based on CMCL and logical correlation model"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9879479378034606,
      "result": {
        "original_header": "Learning",
        "type": "Text_excerpt",
        "value": "* <code>--reduce_updown</code> Use this parameter if dataset is separated into up and down column.\n* <code>--save</code> Directory to save model data\n* <code>--save_csv</code> Directory to save model data (in csv form)\n* <code>--epoch_count</code> epoch to learn\n* <code>--batch_size</code> learning batch size\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.871948229343263,
      "result": {
        "original_header": "Testing prediction /w learnt parameter",
        "type": "Text_excerpt",
        "value": "* <code>--load</code> Directory of learn.py output\n* <code>--save</code> Directory to save test result\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8944171237716203,
      "result": {
        "original_header": "How to generate dataset?",
        "type": "Text_excerpt",
        "value": "Then DEG infomation will be stored at `dataset_test.csv` matrix.\nYou can use `--filter` to select TSData with specific condition (with column name and value).\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bhi-kimlab/StressGenePred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bhi-kimlab/StressGenePred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bhi-kimlab/StressGenePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Stress Predictor based on Machine Learning"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "GSEA (Gene set enrichment test) Testing",
        "parent_header": [
          "Stress Predictor based on Machine Learning"
        ],
        "type": "Text_excerpt",
        "value": "```\npython GOenrichment.py $1/output/params_generator.csv --trait2genes GOBPname2gene.arabidopsis.txt --column_name \"heat,salt,drought,cold\" --count_cut 500 -o $1/output/GSEA_learn_top500.csv --descending --max_trait_cut 1\n```\n\n* <code>--trait2genes</code> Path to trait-to-gene file.\n* <code>--column_name</code> Column names including p-value.\n* <code>--count_cut</code> How many gene set to be shown?\n* <code>-o</code> Path to output\n* <code>--descending</code> Result data in descending p-value order\n* <code>--max-trait-cut</code> Remove genes with too little traits.\n\n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.998651382543916,
      "result": {
        "original_header": "Testing prediction /w learnt parameter",
        "type": "Text_excerpt",
        "value": "```\npython test.py dataset/dataset_learn_v2_005.limma.csv dataset/dataset_learn_v2_005.label.csv --load output/model_v2 --save output/model_v2_test\npython test.py dataset/dataset_test_005.limma.csv dataset/dataset_test_005.label.csv --load output/model_v2 --save output/model_v2_test\n``` \n* <code>--load</code> Directory of learn.py output\n* <code>--save</code> Directory to save test result\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9949973041999759,
      "result": {
        "original_header": "How to generate dataset?",
        "type": "Text_excerpt",
        "value": "Just prepare your expression matrix (CEL file processed) and metadata (may write TSD header or generate from CSV). then use these commands:\n```\n# split total dataset file into time-series-data formatted file\npython ../dataset.py tsd -f cold.csv\npython ../dataset.py tsd -f heat.csv\n# read directory just for test\npython ../dataset.py read -d ./\n\n# without any processing, just output raw p-value\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005\n# processing p-value /w threshold .05, (signed)\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005 --pvalue 0.05\n# processing p-value /w threshold .05, with reindexing & separating up/down signal (unsigned)\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005 --pvalue 0.05 --updown --reindex_df ../dataprocess/ttest_pval.csv\n\n# generate gene list order for comparison with other result (optional)\npython dataset.py gen_genelist -f data/GSE3326_1.tsd -t dataset/index\n# create dataset with pvalue 0.05\npython dataset.py compile -d data_test/ --tool limma -t dataset/dataset_test_005 --pvalue 0.05 --reindex_file dataset/index.txt --updown --label_index \"heat,salt,drought,cold\"\n# create dataset with additional filter\npython dataset.py compile -d data/ --tool limma -t dataset/dataset_learn_v2_005 --pvalue 0.05 --reindex_file dataset/index.txt  --updown --label_index \"heat,salt,drought,cold\" --filters \"Species:Arabidopsis Thaliana,MinRepCnt:2\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9302610605633794,
      "result": {
        "original_header": "Learning",
        "type": "Text_excerpt",
        "value": "With prepared dataset,\n```\npython learn.py dataset/dataset_learn_v2_005.limma.csv dataset/dataset_learn_v2_005.label.csv --reduce_updown --save output/model_v2 --save_csv output/model_v2 --epoch_count 1000 --batch_size 0\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9039768480114491,
      "result": {
        "original_header": "Testing prediction /w learnt parameter",
        "type": "Text_excerpt",
        "value": "```\npython test.py dataset/dataset_learn_v2_005.limma.csv dataset/dataset_learn_v2_005.label.csv --load output/model_v2 --save output/model_v2_test\npython test.py dataset/dataset_test_005.limma.csv dataset/dataset_test_005.label.csv --load output/model_v2 --save output/model_v2_test\n``` \n* <code>--load</code> Directory of learn.py output\n* <code>--save</code> Directory to save test result\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9462271760375571,
      "result": {
        "original_header": "How to generate dataset?",
        "type": "Text_excerpt",
        "value": "Just prepare your expression matrix (CEL file processed) and metadata (may write TSD header or generate from CSV). then use these commands:\n```\n# split total dataset file into time-series-data formatted file\npython ../dataset.py tsd -f cold.csv\npython ../dataset.py tsd -f heat.csv\n# read directory just for test\npython ../dataset.py read -d ./\n\n# without any processing, just output raw p-value\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005\n# processing p-value /w threshold .05, (signed)\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005 --pvalue 0.05\n# processing p-value /w threshold .05, with reindexing & separating up/down signal (unsigned)\npython ../dataset.py compile -d ./ --tool limma -t dataset_test_005 --pvalue 0.05 --updown --reindex_df ../dataprocess/ttest_pval.csv\n\n# generate gene list order for comparison with other result (optional)\npython dataset.py gen_genelist -f data/GSE3326_1.tsd -t dataset/index\n# create dataset with pvalue 0.05\npython dataset.py compile -d data_test/ --tool limma -t dataset/dataset_test_005 --pvalue 0.05 --reindex_file dataset/index.txt --updown --label_index \"heat,salt,drought,cold\"\n# create dataset with additional filter\npython dataset.py compile -d data/ --tool limma -t dataset/dataset_learn_v2_005 --pvalue 0.05 --reindex_file dataset/index.txt  --updown --label_index \"heat,salt,drought,cold\" --filters \"Species:Arabidopsis Thaliana,MinRepCnt:2\"\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bhi-kimlab/StressGenePred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "StressGenePred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bhi-kimlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 35193,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1898,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bhi-kimlab/StressGenePred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:28:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}