{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "INTRODUCTION"
        ],
        "type": "Text_excerpt",
        "value": "Singh et. al. PLncPRO for prediction of long non-coding RNAs (lncRNAs) in plants and its application for discovery of abiotic stress-responsive lncRNAs in rice and chickpea. Nucleic Acids Res. 2017 Dec 15;45(22):e183. doi: 10.1093/nar/gkx866.\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/urmi-21/PLncPRO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-21T19:11:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-07T04:11:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A machine learning model for the prediction of lncRNAs (Singh et. al NAR 2017)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "INTRODUCTION",
        "type": "Text_excerpt",
        "value": "PlncPRO (Plant Long Non-Coding rna Prediction by Random fOrests) is a program to classify coding (mRNAs) and long non-coding transcripts (lncRNAs).\nOur method is based on random forest method and uses protein homology search, sequence based and 3-mer frequency based features. \nWe have developed predictive models for several plant species to predict lncRNAs. \nWe comprehensively tested our method on plants and vertebrates and found that our model works better as compared to the existing tools.\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download data used in paper",
        "type": "Text_excerpt",
        "value": "Data is hosted on google drive. [Direct link](https://drive.google.com/file/d/108S-9Bt4CLCHTaCn6-HKTqQZDo0nssZe/view)\n\nDirectly download using wget.\n```\nwget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=108S-9Bt4CLCHTaCn6-HKTqQZDo0nssZe' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=108S-9Bt4CLCHTaCn6-HKTqQZDo0nssZe\" -O plncpro_data.zip && rm -rf /tmp/cookies.txt\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/urmi-21/PLncPRO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/examples/Build%20and%20test%20monocot%20model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/examples/Build%20and%20test%20monocot%20model.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/urmi-21/PLncPRO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "urmi-21/PLncPRO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "INTRODUCTION"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/build_models.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/plncpro/scripts/plncpro_format_ff.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install through bioconda",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "```\nconda install -c bioconda plncpro \n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using PIP",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "```\npip install plncpro\n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From source",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/urmi-21/PLncPRO.git\npip install PlncPro\n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9983098384534476,
      "result": {
        "original_header": "COPYING",
        "type": "Text_excerpt",
        "value": "GNU Public License version 3 (GPLv3)\nDetails on http://www.gnu.org/copyleft/gpl.html \n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999959718921174,
      "result": {
        "type": "Text_excerpt",
        "value": "_____  _            _____  _____   ____  \n                         |  __ \\| |          |  __ \\|  __ \\ / __ \\ \n                         | |__) | |_ __   ___| |__) | |__) | |  | |\n                         |  ___/| | '_ \\ / __|  ___/|  _  /| |  | |\n                         | |    | | | | | (__| |    | | \\ \\| |__| |\n                         |_|    |_|_| |_|\\___|_|    |_|  \\_\\\\____/ \n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/urmi-21/PLncPRO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, lncrna, prediction, random-forest"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "LICENSE\n\nThis file is part of PLNCPRO.\n\n    PLNCPRO is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    PLNCPRO is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with PLNCPRO.  If not, see <http://www.gnu.org/licenses/>.\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PLncPRO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "urmi-21"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 65875,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3562,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "urmi-21",
          "type": "User"
        },
        "date_created": "2020-01-21T00:50:13Z",
        "date_published": "2020-01-21T00:39:15Z",
        "description": "# Release notes\r\n* Moved to python3. python2 version is still available at http://ccbb.jnu.ac.in/plncpro/\r\n* PlncPRO is now available as a python package at PyPI\r\n* User need not put blast and another binaries in a specific folder\r\n* Major refactor",
        "html_url": "https://github.com/urmi-21/PLncPRO/releases/tag/1.2.2",
        "name": "version 1.2.2",
        "release_id": 22990822,
        "tag": "1.2.2",
        "tarball_url": "https://api.github.com/repos/urmi-21/PLncPRO/tarball/1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/urmi-21/PLncPRO/releases/22990822",
        "value": "https://api.github.com/repos/urmi-21/PLncPRO/releases/22990822",
        "zipball_url": "https://api.github.com/repos/urmi-21/PLncPRO/zipball/1.2.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-requisite:",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "1. OS: Linux, macOS\n2. Python 3.6 or later versions (http://www.python.org/)\n3. NCBI BLAST (https://blast.ncbi.nlm.nih.gov/Blast.cgi)\n4. GNU C Library (glibc >= 2.14)\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "python dependencies",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "1. NumPy (http://www.numpy.org/) \n2. SciPy (https://www.scipy.org/)\n3. Scikit-learn (http://scikit-learn.org/) \n4. Biopython (http://biopython.org/)\n5. regex\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run tests",
        "parent_header": [
          "INSTALLATION"
        ],
        "type": "Text_excerpt",
        "value": "```\nbash tests/local_test.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:25:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Usage",
        "type": "Text_excerpt",
        "value": "See [examples](https://github.com/urmi-21/PLncPRO/tree/master/examples) for detailed usage examples.\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`plncpro predict`",
        "parent_header": [
          "Basic Usage"
        ],
        "type": "Text_excerpt",
        "value": "Label lncRNAs and mRNAs. This file reads an input\nfile containing sequences and then classifies the sequences as coding or\nnon-coding. It uses a model generated by build.py to make classifications.\nIt outputs a file containing class label and class probabilities for each\nsequence.\n \n```\nplncpro predict -i <input fasta> -o <output_dir> -p <output_file_name> -t 2 -d <blast_db> -m <model_file>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PARAMETERS",
        "parent_header": [
          "Basic Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\t\n-p,--prediction_out\toutput file name\n-i,--infile\t\tfile containing input sequences\n-m,--model\t\tmodel file\n-o,--outdir\t\toutput directory name\n-d,--db\t\t\tpath to blast database\n\t\tOPTIONAL\n-t,--threads\t\tnumber of threads [default: 4]\n-l,--labels\t\tpath to the files containg labels(it outputs classification accuracy)\n-r,--remove_temp\tclean up intermediate files\n-v,--verbose\t\tshow more messages\n--min_len\t\tspecifiy min_length to filter input files\n--noblast\t\tDon't use blast features\n-no_ff\t\t\tDon't use framefinder features\n--qcov_hsp\t\tspecify query coverage parameter for blast[default:30]\n--blastres*\t\tpath to blast output for input file\n*blast result should be in following format: -outfmt '6 qseqid sseqid pident evalue qcovs qcovhsp score bitscore qframe sframe'\n```\n\n     \n\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`plncpro build`",
        "parent_header": [
          "Basic Usage"
        ],
        "type": "Text_excerpt",
        "value": "Build model using the given training data\n(mRNA/lncRNA transcripts). This file reads two labelled datasets\ncontaining coding and non-coding transcripts. Then it makes a random\nforest based classification model and saves the model, which can be used\nto predict unknown sequences.\n\n \n```\nplncpro build -p <mrna fasta> -n <lncrna fasta> -o <out_dir> -m <model_name> -d <blast db> -t <threads>\n```\n\t\t\n### PARAMETERS   \n```\n-p,--pos\t\tfile containing mRNA sequences\n-n,--neg\t\tfile containing lncRNA sequences\n-m,--model\t\toutput model name\n-o,--outdir\t\toutput directory name\n-d\t\t\tpath to blast database\n\t\tOPTIONAL\n-t,--threads\t\tnumber of threads [default: 4]\n-k,--num_trees\t\tnumber of trees[default: 1000]\n-r,--remove_temp\tclean up intermediate files\n-v,--verbose\t\tshow more messages\t\n--min_len\t\tspecifiy min_length to filter input files\n--noblast\t\tDon't use blast features\n--no_ff\t\t\tDon't use framefinder features\n--qcov_hsp\t\tspecify query cov parameter for blast[default:30]\n--pos_blastres*\t\tpath to blast result for mRNA input file\n--neg_blastres*\t\tpath to blast result for lncRNA input file\n\n*blast result should be in following format: -outfmt '6 qseqid sseqid pident evalue qcovs qcovhsp score bitscore qframe sframe' \n```   \n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "plncpro predtoseq",
        "parent_header": [
          "Basic Usage"
        ],
        "type": "Text_excerpt",
        "value": "Extract mRNA or lncRNA sequences from\nPLNCPRO output file. This file reads a prediction output file and\nextracts sequences from a given class. User can specify class and\nprobability cut-off and extract desired transcript sequences.\n\n\n```\nplncpro predtoseq -f <fasta_file> -o <outputfile> -p <PLNCPRO_prediction_file> -l <required_label>\n```\n  \t\t\n### PARAMETERS\n```\n-f\t\t\tinput fasta file name\n-o\t\t\toutput fasta file name\t\n-p\t\t\tpath to file containg predictions by PLNCPRO\n\t\tOPTIONAL\n-l\t\t\tlabel of the required sequences (0 for lncRNA;1 for mRNA) [default:0]\n-s\t\t\tclass probability cutoff (extract sequences with probability greater than or equal to s\n--min\t\t\tspecifiy min_length of sequences[default:0]\n--max\t\t\tspecifiy min_length of sequences[default:Inf]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using Diamond instead of blastx",
        "parent_header": [
          "Basic Usage"
        ],
        "type": "Text_excerpt",
        "value": "Diamond is several folds faster than blastx and could be used instead of blastx. To use diamond with plncpro, first run diamond using following output parameters:\n\n```\ndiamond blastx -d <diamondDB> -q <query.fasta> -o <diamond_out> --outfmt 6 qseqid sseqid pident evalue nident qcovhsp score bitscore qframe qstrand\n```\nThen pass the diamond output using the `--blastres` parameter to plncpro, e.g.:\n\n```\nplncpro predict -i <input.fasta> -o <outfile> -p <preds> --blastres <diamond_out> -m <model> \n```\n"
      },
      "source": "https://raw.githubusercontent.com/urmi-21/PLncPRO/master/README.md",
      "technique": "header_analysis"
    }
  ]
}