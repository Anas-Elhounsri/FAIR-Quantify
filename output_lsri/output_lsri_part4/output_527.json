{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "GWAS_Flow"
        ],
        "type": "Text_excerpt",
        "value": "`GWAS-Flow` was written and published in the hope that you might find it useful. If you do and use it for your research please cite the paper published alongside the software, which is currently publicly accessible on the BiorXiv preprint server. https://www.biorxiv.org/content/10.1101/783100v1  doi: 10.1101/783100 \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Joyvalley/GWAS_Flow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-18T14:24:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-30T06:00:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GPU accelerated GWAS framework based on TensorFlow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "GWAS_Flow"
        ],
        "type": "Text_excerpt",
        "value": "`GWAS_Flow` is an open source python based software provding a GPU-accelerated framework for performing genome-wide association studies (GWAS), published under the MIT-License. \nGWAS is a set  of  major algorithms in quantitative genetics to find associations between phenotypes and their respective genotypes.\nWith a broad range of applications ranging from plant breeding to medicine. \nIn recent years the data sets used for those studies increased rapidly in size, and accordingly the time necessary to perform these on conventional CPU-powered machines increased exponentially.\nHere we use TensorFlow a framework that is commonly used for machine learning applications to utilize graphical processing units (GPU) for GWAS. \n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9926304921277085,
      "result": {
        "original_header": "Performance Benchmarking and Recommendations",
        "type": "Text_excerpt",
        "value": "The image displays the average time of 10 runs with 10000 markers each and varying number of phenotypes for `GWAS_Flow` on GPU and CPUs and a standard [R-Script](https://github.com/arthurkorte/GWAS \"GWAS\") for GWAS.\nThe computational time growths exponentially with increasing number of phenotypes.\nWith lower numbers of phenotypes (< 800), the CPU version is faster than the GPU Version.\nThis gets more and more lopsided the more phenotypes are included. \nAll calculations have been performed on 16 i9 vCPUS and a NVIDIA Tesla P100 graphic card. \n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9552287246947502,
      "result": {
        "original_header": "Unit tests",
        "type": "Text_excerpt",
        "value": "All the necassary test data is stored in test_data\n \n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9589808790108774,
      "result": {
        "original_header": "v1.2.0",
        "type": "Text_excerpt",
        "value": "- providing a kinship matrix via `-k` is now required ([#27](https://github.com/Joyvalley/GWAS_Flow/issues/27))\n- fix degrees of freedom ([#29](https://github.com/Joyvalley/GWAS_Flow/issues/29))\n- drop co-factor support (`--cof` no longer works, see [#30](https://github.com/Joyvalley/GWAS_Flow/issues/30))\n- standard error is no longer reported in the output files ([#28](https://github.com/Joyvalley/GWAS_Flow/issues/28))\n- create plots in png and pdf format (related to [#16](https://github.com/Joyvalley/GWAS_Flow/issues/16))\n- fix bug with permutation output when a path was given with `--out` (rather than a filename, related to [#16](https://github.com/Joyvalley/GWAS_Flow/issues/16)) \n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Joyvalley/GWAS_Flow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Joyvalley/GWAS_Flow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GWAS_Flow"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/26280192/71103427-6a57e400-21ba-11ea-8eab-aa40abcc46ec.png"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/26280192/71102215-61661300-21b8-11ea-90cc-7d4690e645be.png"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "git and anaconda",
        "parent_header": [
          "GWAS_Flow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This has been tested on multiple linux systems with anconda versions > 4.7 \n\nclone the repository directly with git \n\n```shell\ngit clone https://github.com/Joyvalley/GWAS_Flow\n``` \n\ncreate an anaconda environment and install the necessary packages using the gwas_flow_env.yaml configuration file\n\n```shell\n###  optional: \nconda create -n gwas_flow\nconda activate gwas_flow\n### set up environment with pip \npip install -r requirements.txt\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "docker",
        "parent_header": [
          "GWAS_Flow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "For the installation with docker the only required software is docker itself.\n\n```shell \ngit clone https://github.com/Joyvalley/GWAS_Flow.git \ncd GWAS_Flow\ndocker build  -t gwas_flow .\n```\n\nThen you can run GWAS_Flow using your user id and files in your current working directory like this:\n```\ndocker run -u $UID:$GID -v $PWD:/data --rm gwas_flow -x gwas_sample_data/G_sample.csv -y gwas_sample_data/Y_sample.csv -k gwas_sample_data/K_sample.csv -o docker_out.csv\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "singularity",
        "parent_header": [
          "GWAS_Flow",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```shell \ngit clone https://github.com/Joyvalley/GWAS_Flow.git \n\ndocker build  -t gwas_flow .\n\n!! make sure to change /PATH/TO/FOLDER\ndocker run -v /var/run/docker.sock:/var/run/docker.sock -v /PATH/TO/FOLDER:/output --privileged -t singularityware/docker2singularity:1.11 gwas_flow:latest\nchange the name of e.g. gwas_flow_latest-2019-08-19-8c98f492dd54.img to gwas_flow_sing.img\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input data",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation"
        ],
        "type": "Text_excerpt",
        "value": "GWAS_Flow is designed to work with several different input data formats. For all of them there is are sample data avaialble in the folder gwas_sample_data/\nThe minimal requirement is to provide a genotype, phenotype and a kinship file.\n\u26a0\ufe0f In previous versions of GWAS_Flow (<= 1.1.2) a kinship matrix according to van Raden was caluculated from the provided marker information. There might have been an error in the implementation (see [[#27](https://github.com/Joyvalley/GWAS_Flow/issues/27)). Therefore, the recommendation to provide a kinship matrix was changed to a requirement.\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "hdf5 input",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "Input data"
        ],
        "type": "Text_excerpt",
        "value": "```shell\npython gwas.py -x gwas_sample_data/AT_geno.hdf5 -y gwas_sample_data/phenotype.csv -k gwas_sample_data/kinship_ibs_binary_mac5.h5py\n\n```"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "csv input",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "Input data"
        ],
        "type": "Text_excerpt",
        "value": "```shell\npython gwas.py -x gwas_sample_data/G_sample.csv -y gwas_sample_data/Y_sample.csv -k gwas_sample_data/K_sample.csv\n\n```"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "plink input",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "Input data"
        ],
        "type": "Text_excerpt",
        "value": "To use PLINK data format add a bed bim and fam file with the same prefix to the folder. You can tell GWAS-Flow to use those files by using prefix.plink as the option for the genotype file\n\n```shell\npython gwas.py -x gwas_sample_data/my_plink.plink -y gwas_sample_data/pheno2.csv -k gwas_sample_data/kinship_ibs_binary_mac5.h5py\n```\n\n\nFlgas and options are \t\n```shell\n-x , --genotype : file containing marker information in csv or hdf5 format of size\n-y , --phenotype : file container phenotype information in csv format\n-k , --kinship : file containing kinship matrix of size k X k in csv or hdf5 format\n-m : name of column to be used in phenotype file. Default m='phenotype_value' \n-a , --mac_min : integer specifying the minimum minor allele count necessary for a marker to be included. Default a = 1\n-bs, --batch-size : integer specifying the number of markers processed at once. Default -bs 500000\n-p , --perm : perform n permutations\n--out_perm : output individual resulst of the permuation. Default False, enable with arbitary string (e.g. --out_perm yo)\n--plot : create manhattanplot \n-o , --out : name of output file. Default -o results.csv  \n-h , --help : prints help and command line options\n```\n\nuse `python gwas.py -h` to see the command line options\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Execution with docker and singularity",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation"
        ],
        "type": "Text_excerpt",
        "value": "Execute the docker container with the sample data\n```shell\ndocker run --rm -u $UID:$GID -v $PWD:/data gwas_flow:latest  -x gwas_sample_data/AT_geno.hdf5 -y gwas_sample_data/phenotype.csv -k gwas_sample_data/kinship_ibs_binary_mac5.h5py\n```\n\nOn Windows you can use something like this after activating the file sharing for the drive the repo is stored on:\n\n```cmd\ncd c:\\PATH\\TO\\REPO\\GWAS_Flow\ndocker run -v c:/PATH/TO/REPO/GWAS_Flow:/data gwas_flow:latest -x gwas_sample_data/AT_geno.hdf5 -y gwas_sample_data/phenotype.csv -k gwas_sample_data/kinship_ibs_binary_mac5.h5py\n```\n\n!! The GPU versions of docker and singularity are still under development and might or might not work properly with your setup.\nTo run the GWAS-Flow on GPUs as of now we recommand the usage of anaconda environments\n\nExecute the singularity image with the sample data\n```shell\nsingularity run  gwas_flow_sing.img -x gwas_sample_data/AT_geno.hdf5 -y gwas_sample_data/phenotype.csv -k gwas_sample_data/kinship_ibs_binary_mac5.h5py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Co-factor",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "further options"
        ],
        "type": "Text_excerpt",
        "value": "Previous versions of GWAS_Flow (<= 1.1.2) had experimental support for one Co-Factor. This functionality was dropped in v1.2.0 (see [#30](https://github.com/Joyvalley/GWAS_Flow/issues/30)).\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Permutation",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "further options"
        ],
        "type": "Text_excerpt",
        "value": "add the flag `--perm 100` to calculate a significance threshold based on 100 permutations. Change 100 to any integer larger 2 to perform n permutations\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manhattan plot",
        "parent_header": [
          "GWAS_Flow",
          "Execution with anaconda installation",
          "further options"
        ],
        "type": "Text_excerpt",
        "value": "By default there is no plot generated if you add `--plot True` a manhattan plot is generated\n\n![manhattan](https://user-images.githubusercontent.com/26280192/71103427-6a57e400-21ba-11ea-8eab-aa40abcc46ec.png)\n\nThe dash-dotted line is the bonferroni threshold of significance and the dashed line the permutation based threshold\nThe latter is only calculated if the flag `--perm n` was used with n > 2.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9287258112539963,
      "result": {
        "original_header": "Unit tests",
        "type": "Text_excerpt",
        "value": "The unit tests can be run one the console with:\n```shell \npython -m unittest tests/test.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Jan Freudenthal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GWAS_Flow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Joyvalley"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24244,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1492,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "iimog",
          "type": "User"
        },
        "date_created": "2021-12-17T16:57:53Z",
        "date_published": "2021-12-17T16:59:52Z",
        "description": "Changes:\r\n- providing a kinship matrix via -k is now required (#27)\r\n- fix degrees of freedom (#29)\r\n- drop co-factor support (--cof no longer works, see #30)\r\n- standard error is no longer reported in the output files (#28)\r\n- create plots in png and pdf format (related to #16)\r\n- fix bug with permutation output when a path was given with --out (rather than a filename, related to #16)\r\n",
        "html_url": "https://github.com/Joyvalley/GWAS_Flow/releases/tag/v1.2.0",
        "name": "Version 1.2.0",
        "release_id": 55560364,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/55560364",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/55560364",
        "zipball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Joyvalley",
          "type": "User"
        },
        "date_created": "2021-08-24T09:09:35Z",
        "date_published": "2021-08-24T09:12:39Z",
        "description": "Fix unittests (seq fault) \r\nUpdate dependencies \r\nReorganize folder structure \r\nIntegrate unittests in github actions ",
        "html_url": "https://github.com/Joyvalley/GWAS_Flow/releases/tag/1.1.2",
        "release_id": 48338458,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/48338458",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/48338458",
        "zipball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Joyvalley",
          "type": "User"
        },
        "date_created": "2020-10-28T11:25:15Z",
        "date_published": "2020-10-28T16:36:37Z",
        "description": "Minor improvements in the standarderror calculation \r\nIncluding more tests",
        "html_url": "https://github.com/Joyvalley/GWAS_Flow/releases/tag/1.1.1",
        "release_id": 33175142,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/33175142",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/33175142",
        "zipball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Joyvalley",
          "type": "User"
        },
        "date_created": "2019-12-19T12:27:56Z",
        "date_published": "2020-10-21T11:13:49Z",
        "description": "Additions to v1.0:\r\nCo-factors\r\nHDF5 Files \r\nPlink Files \r\n",
        "html_url": "https://github.com/Joyvalley/GWAS_Flow/releases/tag/1.1",
        "release_id": 32859047,
        "tag": "1.1",
        "tarball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/tarball/1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/32859047",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/32859047",
        "zipball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/zipball/1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Joyvalley",
          "type": "User"
        },
        "date_created": "2019-08-19T09:06:24Z",
        "date_published": "2019-08-19T09:09:55Z",
        "html_url": "https://github.com/Joyvalley/GWAS_Flow/releases/tag/v1.0",
        "name": "First stable version of GWAS_Flow",
        "release_id": 19371987,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/19371987",
        "value": "https://api.github.com/repos/Joyvalley/GWAS_Flow/releases/19371987",
        "zipball_url": "https://api.github.com/repos/Joyvalley/GWAS_Flow/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Software",
        "parent_header": [
          "GWAS_Flow",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- [python](https://www.python.org/ \"Python programming language\") (v.3.7.3)\n- [anaconda](https://www.anaconda.com/ \"Anaconda virtual environments\")\n- [git](https://git-scm.com/)\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required python packages",
        "parent_header": [
          "GWAS_Flow",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- [tensorflow](https://www.tensorflow.org/ \"tensorflow\") (v.1.14.0)\n- [numpy](https://numpy.org/ \"numerical python\") (v.1.16.4)\n- [pandas](https://pandas.pydata.org/ \"import and manipulate data frames\")(v.24.2)\n- [scipy](https://www.scipy.org/ \"scientific python\") (v.1.3.0)\n- [h5py](https://www.h5py.org/ \"import and manipulated hdf files\") (v.2.9.0)\n- [matplotlib](https://matplotlib.org/ \"plot library for python\")\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker and Singularity",
        "parent_header": [
          "GWAS_Flow",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": "- [Docker](https://www.docker.com/) (v.19.03.1)\n- [Singularity](https://singularity.lbl.gov/) (v.2.5.2)\n"
      },
      "source": "https://raw.githubusercontent.com/Joyvalley/GWAS_Flow/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:46:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}