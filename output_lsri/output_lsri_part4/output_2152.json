{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hcorrada/methylFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-03-10T16:48:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-27T13:16:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cell-specific methylation pattern reconstruction"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9841098480537926,
      "result": {
        "original_header": "methylFlow",
        "type": "Text_excerpt",
        "value": "\nCell-specific methylation pattern reconstruction. Currently uses an LP\nformulation and solver. The lemon graph library\nhttp://lemon.cs.elte.hu/trac/lemon\nand the glpk LP solver\nhttp://www.gnu.org/software/glpk/\nare included in this repository. The `ezOptionParser.hpp` is also\nincluded\nhttp://ezoptionparser.sourceforge.net/ \nThe algorithm is described and tested in this publication: [http://bioinformatics.oxfordjournals.org/content/32/11/1618.abstract](http://bioinformatics.oxfordjournals.org/content/32/11/1618.abstract)\n \n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9748636059808047,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Center for Bioinformatics and Computational Biology  \nUniversity of Maryland  \nhttp://www.cbcb.umd.edu/~hcorrada\n \n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/hcorrada/methylFlow/wiki"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hcorrada/methylFlow/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hcorrada/methylFlow/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hcorrada/methylFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "methylFlow"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/deps/glpk/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/deps/glpk/examples/sql/mysql_setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "methylFlow"
        ],
        "type": "Text_excerpt",
        "value": "\nThis project uses `cmake` for building and requires at least\nversion 2.6. It also uses `c++11` so use a compiler that supports\nthis (e.g., g++ >= 4.7 or clang >= 3.4)\n\n```shell\n$ git clone https://github.com/hcorrada/methylFlow.git\n$ cd methylFlow\n$ git submodule init\n$ git submodule update\n$ mkdir build && cd build\n$ cmake ..\n$ make\n$ make install\n```\n\nTo compile with DEBUG flags use\n\n```shell\n...\n$ mkdir build_devel && cd build_devel\n$ cmake -DCMAKE_BUILD_TYPE=Debug ..\n$ make\n...\n```"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9063603109188699,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Hector Corrada Bravo <hcorrada@gmail.com>  \nFaezeh Dorri   \n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hcorrada/methylFlow/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "LEMON code without an explicit copyright notice is covered by the following\ncopyright/license.\n\nCopyright (C) 2003-2009 Egervary Jeno Kombinatorikus Optimalizalasi\nKutatocsoport (Egervary Combinatorial Optimization Research Group,\nEGRES).\n\n===========================================================================\nBoost Software License, Version 1.0\n===========================================================================\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "methylFlow"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hcorrada"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 196935,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 44813,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 10513,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 241,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 85,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "faezeh-dorri",
          "type": "User"
        },
        "date_created": "2016-07-28T19:27:42Z",
        "date_published": "2016-09-11T07:07:34Z",
        "description": "This release provides a Linux binary for methylFlow.\n",
        "html_url": "https://github.com/hcorrada/methylFlow/releases/tag/v0.1.0-Pre",
        "release_id": 4098633,
        "tag": "v0.1.0-Pre",
        "tarball_url": "https://api.github.com/repos/hcorrada/methylFlow/tarball/v0.1.0-Pre",
        "type": "Release",
        "url": "https://api.github.com/repos/hcorrada/methylFlow/releases/4098633",
        "value": "https://api.github.com/repos/hcorrada/methylFlow/releases/4098633",
        "zipball_url": "https://api.github.com/repos/hcorrada/methylFlow/zipball/v0.1.0-Pre"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:31:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "methylFlow"
        ],
        "type": "Text_excerpt",
        "value": "<pre>\nMethylFlow: methylation pattern reconstruction\n\nUSAGE: methylFlow -sam -i reads.sam -o mfoutput [OPTIONS]\n\nOPTIONS:\n\n-chr, -Chr ARG                    chr name for tsv files, not required for sam\n                                  input file\n\n-cpgloss, -p, -P, --cpgloss       Use cpg-loss instead of region-loss.\n\n-e, -eps, -E, --eps ARG           Regularization parameter search threshold.\n\n-end, -End, --end ARG             Only process reads aligning before given\n                                  location.\n\n-h, -help, --help, --usage        Display usage instructions.\n\n-i, -in, --in, --input ARG        Read input file. Default:Tab-separated format:\n                                  start length strand\n                                  methyl<string>(offset<int>[M|U]\n                                  substitutions<string>(ignored))\n\n-l, -lam, -lambda, --lambda ARG   Regularization parameter value.\n\n-o, -out, --out, --output ARG     Output directory. Directory must exist before\n                                  running. Files written: cpgs.tsv, components.tsv,\n                                  patterns.tsv, regions.tsv\n\n-s, -scale, -S, --scale ARG       Scale parameter value.\n\n-sam, -SAM, --sam                 Input file is in SAM format instead of default\n                                  tab-separated format.\n\n-start, -Start, --start ARG       Only process reads aligning after given\n                                  location.\n\n-v, -verbose, -V, --verbose       Verbose option.\n\nEXAMPLES:\n\nmethylFlow -sam -i reads.sam -o mfoutput -l 10.0 -s 30.0 -e 0.1\n</pre>\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "methylFlow",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Upon running, the output directory (`mfoutput` in the example above) will contain three files with the following format:\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`cpgs.txt`",
        "parent_header": [
          "methylFlow",
          "Usage",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "Tab-separated file of coverage and methylation calls per cpg. Columns\n - `chr`: chromosome name\n - `pos`: cpg position\n - `Cov`: number of reads overlapping CpG\n - `Meth`: number of reads indicating CpG is methylated\n\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`components.tsv`",
        "parent_header": [
          "methylFlow",
          "Usage",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "Tab-separated file of components found by algorithm. A component is a connected region graph based on overlapping reads. Genomic regions are covered by a single component, thus, cell-specific patterns estimated in a given genomic region are obtained from (one or morei non-overlapping) components that overlap that region. \n\nColumns:\n\n- `chr`: chromosome name of genomic region covered by connected component\n- `start`: starting position of genomic region covered by connected component\n- `end`: ending position of genomic region covered by connected component\n- `cid`: component id, identifier given to component, used to connect to regions and patterns in other output files\n- `npatterns`: number of cell-specific methylation patterns estimated from this connected component.  \n- `total_coverage`: total number of reads overlapping this component's genomic region\n- `total_flow`: the sum of all estimated abundances (flows) for patterns in this region\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`patterns.tsv`",
        "parent_header": [
          "methylFlow",
          "Usage",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "Tab-separated file of cell-specific methylation patterns estimated by `methylFlow`. \n\nColumns:\n\n- `chr`: chromosome name \n- `start`: start position of pattern\n- `end`: end position of pattern\n- `cid`: component id, corresponds to id of a component in file `components.tsv`\n- `pid`: pattern id, identifier given to pattern (unique across patterns within the same component)\n- `abundance`: abundance estimated for this pattern\n- `methylpat`: comma-separated list of methylation status entries  of cpgs within pattern. Entries are `pos:[M|U]` where position is the location of the CpG from the start of the pattern and `M|U` indicates if the CpG is methylated or unmethylated respectively\n- `regions`: comma-separated list of regions included in pattern (see file `regions.tsv`)\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`regions.tsv`",
        "parent_header": [
          "methylFlow",
          "Usage",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "Tab-separated file of regions that make up the region graph used in the estimation algorithm. Reads are assigned to a region\nif they have no disagreement on their methylation pattern. That is, regions contain the longest stretches of overlapping reads with unambiguous methylation patterns.\n\n\n\nColumns:\n\n- `chr`: chromosome name\n- `start`: start position of region\n- `end`: end position of region\n- `cid`: component id, corresponds to identified of component in file `components.tsv`\n- `rid`: region id, identifier given to region (unique across regions within the same component)\n- `raw_coverage`: number of reads assigned to the region\n- `norm_coverage`: normalized region coverage\n- `exp_coverage`: the sum of abundances of all patterns that include this region\n- `methylpat`: methylation pattern of region, given in same format as `patterns.tsv`\n"
      },
      "source": "https://raw.githubusercontent.com/hcorrada/methylFlow/master/README.md",
      "technique": "header_analysis"
    }
  ]
}