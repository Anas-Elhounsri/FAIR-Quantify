{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "PyFolding"
        ],
        "type": "Text_excerpt",
        "value": "**PyFolding: An open-source software package for graphing, analysis and simulation  \nof thermodynamic and kinetic models of protein folding**  \nLowe AR, Perez-Riba A, Itzhaki L, Main E (2018) Biophys J.  \nhttp://dx.doi.org/10.1016/j.bpj.2017.11.3779\n\n```\n@article{Lowe27112017,\n  author = {Lowe, Alan R. and Perez-Riba, Albert and Itzhaki, Laura S. and Main, Ewan R.G.},\n  title = {PyFolding: Open-Source Graphing, Simulation, and Analysis of the\n    Biophysical Properties of Proteins},\n  volume = {114},\n  number = {3},\n  pages = {511-521},\n  year = {2018},\n  doi = {10.1016/j.bpj.2017.11.3779},\n  URL = {http://dx.doi.org/10.1016/j.bpj.2017.11.3779},\n  eprint = {http://www.cell.com/biophysj/fulltext/S0006-3495(17)35041-5},\n  journal = {Biophysical Journal}\n}\n```\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Lowe, Alan R. and Perez-Riba, Albert and Itzhaki, Laura S. and Main, Ewan R.G.",
        "doi": "10.1016/j.bpj.2017.11.3779",
        "format": "bibtex",
        "title": "PyFolding: Open-Source Graphing, Simulation, and Analysis of the\nBiophysical Properties of Proteins",
        "type": "Text_excerpt",
        "url": "http://dx.doi.org/10.1016/j.bpj.2017.11.3779",
        "value": "@article{Lowe27112017,\n    journal = {Biophysical Journal},\n    eprint = {http://www.cell.com/biophysj/fulltext/S0006-3495(17)35041-5},\n    url = {http://dx.doi.org/10.1016/j.bpj.2017.11.3779},\n    doi = {10.1016/j.bpj.2017.11.3779},\n    year = {2018},\n    pages = {511-521},\n    number = {3},\n    volume = {114},\n    title = {PyFolding: Open-Source Graphing, Simulation, and Analysis of the\nBiophysical Properties of Proteins},\n    author = {Lowe, Alan R. and Perez-Riba, Albert and Itzhaki, Laura S. and Main, Ewan R.G.},\n}"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/quantumjot/PyFolding"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\n:construction: Work in Progress :construction:\n## Setting up your fork\n\nFirst fork the repo on github.  When you have created your fork, clone it so that you have a local copy:\n\n```sh\ngit clone https://github.com/your-github-username/pyfolding.git\ncd pyfolding\n```\n\nNext, you need to link it to the main repo:\n```sh\ngit remote add upstream https://github.com/quantumjot/pyfolding.git\n```\n**This is important**, because it enables you to keep your fork up-to-date with everyone's changes.\n\n## Making a new branch\n\nIf your want to contribute your new feature, make sure to make a new branch:\n```sh\ngit checkout master -b your-branch-name\n```\n\nUse the following to determine which branch you're on:\n```sh\ngit status\n```\n\n## Keeping your fork up to date\nThe following commands will update the main branch of your fork:\n```sh\ngit checkout master\ngit pull upstream master\n```\n\nYou can then update any branches by:\n```sh\ngit checkout your-branch-name\ngit merge master\n```\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-09-10T16:04:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-27T23:56:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python framework for multi-parameter optimization and evaluation of protein folding models"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9979808501893483,
      "result": {
        "original_header": "PyFolding",
        "type": "Text_excerpt",
        "value": "\nPyFolding is a simple Python based framework for fitting kinetic and\nthermodynamic models to protein folding data.  It includes several basic models\nand is extensible to enable fitting of more interesting models. \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9096419221868534,
      "result": {
        "original_header": "Update for Python 3",
        "type": "Text_excerpt",
        "value": "PyFolding is not currently maintained. We have provided an updated version for Python 3, but it has not been thoroughly tested, so we cannot guarantee the results obtained. The original legacy version (for Python 2) can be found in the `py2-legacy` branch. \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9719817821110526,
      "result": {
        "original_header": "Current models supported",
        "type": "Text_excerpt",
        "value": "A 'TemplateModel' is provided for adding additional models. We encourage users\nto generate their own models and contribute. \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9913093236362688,
      "result": {
        "original_header": "Data format",
        "type": "Text_excerpt",
        "value": "Raw data for PyFolding should be provided in .csv files. Sample data for all of the notebooks is provided in the /examples folder.\n```sh\nGuHCL    CTPR2A MOPS\n0        0.016262019\n0.1068  -0.004045731\n0.2136   0.005769455\n0.3204   0.000484273\n0.4272   0.001788867\n0.534   -0.001676449\n0.6408   0.005704187\n0.7476   0.013683238\n0.8544   0.018731417\n0.9612   0.052727921\n1.068    0.078283591\n...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/quantumjot/PyFolding/wiki"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/quantumjot/PyFolding/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/quantumjot/PyFolding/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "quantumjot/PyFolding"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyFolding"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "PyFolding"
        ],
        "type": "Text_excerpt",
        "value": "You can install PyFolding by cloning the repo and running the setup script:\n```sh\n$ git clone https://github.com/quantumjot/PyFolding.git\n$ cd PyFolding\n$ python setup.py install\n```\n\n+ For more detailed installation for setup on a Mac or PC please read the accompanying SETUP.md.\n+ Watch the YouTube video demonstrating how to install and run PyFolding.\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing the installation",
        "parent_header": [
          "PyFolding"
        ],
        "type": "Text_excerpt",
        "value": "Once installed, a simple script will execute the test function. This tests\nwhether the package has installed correctly.  The following script is found in /notebooks.\n\n```python\n# import the pyfolding package\nimport pyfolding\n# run a self test to check everything is installed\npyfolding.test()\n```\n\nUpon executing the script, the following output should be generated:\n\n```sh\n================================================================================\nFitting results\n================================================================================\nID: Simulated protein\nModel: TwoStateEquilibrium\nOptimiser: pyfolding.GlobalFit and scipy.optimize.curve_fit\nTemperature: 25.00\u00b0C\n\n(f) m        1.51913 \u00b1 0.01683      \t 95% CI[     1.51488,      1.52339]\n(f) d50      5.00126 \u00b1 0.00491      \t 95% CI[     5.00002,      5.00250]\n--------------------------------------------------------------------------------\nR^2: \t0.99953\nDOF: \t98\nSS: \t9.98e-03\n================================================================================\n\n\n================================================================================\nFitting results\n================================================================================\nID: Simulated protein\nModel: TwoStateChevron\nOptimiser: pyfolding.GlobalFit and scipy.optimize.curve_fit\nTemperature: 25.00\u00b0C\n\n(f) kf    100.04461 \u00b1 0.03297      \t 95% CI[   100.03628,    100.05295]\n(f) mf      1.00005 \u00b1 0.00013      \t 95% CI[     1.00002,      1.00009]\n(f) ku      0.00501 \u00b1 0.00001      \t 95% CI[     0.00500,      0.00501]\n(f) mu      0.99988 \u00b1 0.00013      \t 95% CI[     0.99984,      0.99991]\n--------------------------------------------------------------------------------\nR^2: \t1.00000\nDOF: \t96\nSS: \t1.20e-04\n================================================================================\n\nSUCCESS - Test completed!\n```\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9998809753186408,
      "result": {
        "original_header": "PyFolding",
        "type": "Text_excerpt",
        "value": "**We have now included video tutorials in the wiki to demonstrate installation\nand usage of PyFolding**:\nhttps://github.com/quantumjot/PyFolding/wiki \n**Please note, we have moved the examples and Jupyter notebooks to a separate\nrepository**:\nhttps://github.com/quantumjot/PyFolding-Notebooks \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8414911490172955,
      "result": {
        "original_header": "Data format",
        "type": "Text_excerpt",
        "value": "Raw data for PyFolding should be provided in .csv files. Sample data for all of the notebooks is provided in the /examples folder.\n```sh\nGuHCL    CTPR2A MOPS\n0        0.016262019\n0.1068  -0.004045731\n0.2136   0.005769455\n0.3204   0.000484273\n0.4272   0.001788867\n0.534   -0.001676449\n0.6408   0.005704187\n0.7476   0.013683238\n0.8544   0.018731417\n0.9612   0.052727921\n1.068    0.078283591\n...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.823151541936312,
      "result": {
        "original_header": "Data format",
        "type": "Text_excerpt",
        "value": "Raw data for PyFolding should be provided in .csv files. Sample data for all of the notebooks is provided in the /examples folder.\n```sh\nGuHCL    CTPR2A MOPS\n0        0.016262019\n0.1068  -0.004045731\n0.2136   0.005769455\n0.3204   0.000484273\n0.4272   0.001788867\n0.534   -0.001676449\n0.6408   0.005704187\n0.7476   0.013683238\n0.8544   0.018731417\n0.9612   0.052727921\n1.068    0.078283591\n...\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/quantumjot/PyFolding/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "model-fitting, optimization, simulation, statistical-mechanics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2017 quantumjot\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyFolding"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "quantumjot"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 130276,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "PyFolding"
        ],
        "type": "Text_excerpt",
        "value": "Pyfolding requires the following additional packages:\n+ Numpy\n+ Scipy\n+ Matplotlib\n+ (Optional) Jupyter\n\nThe easiest way to get these packages on a Mac or PC is to install Anaconda:\nhttps://www.anaconda.com/download/\n\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:51:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example scripts, data and Jupyter notebooks",
        "parent_header": [
          "PyFolding"
        ],
        "type": "Text_excerpt",
        "value": "PyFolding can be used within IPython Notebooks (Jupyter). Several example\nnotebooks are provided in the notebooks folder of the PyFolding-Notebooks repo. To install Jupyter notebooks\nplease read the accompanying file \"SETUP.md\".\n\nExample data can be found in the /examples folder.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/quantumjot/PyFolding/master/README.md",
      "technique": "header_analysis"
    }
  ]
}