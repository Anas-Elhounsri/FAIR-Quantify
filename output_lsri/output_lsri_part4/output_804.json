{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aspuru-guzik-group/qtorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-06T17:53:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-27T10:52:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qTorch (Quantum Tensor Contraction Handler) https://arxiv.org/abs/1709.03636 -> for quantum simulation using tensor networks"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9107437358559676,
      "result": {
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at \nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\n        limitations under the License. \nThere are three options to install the library: global \ninstallation, local installation, and docker. Here, we provide\na tutorial for each. gcc/g++ is the compiler used to compile and run the\nlibrary. The version of gcc/g++ must be recent enough support the C++14 \nstandard library. Otherwise, errors like: \"g++: error: unrecognized \ncommand line option '-std=c++14'\" may appear. In this case, we suggest\nthe user upgrade their gcc/g++ compiler to a more recent version. \n--THESE WILL SET THE PATH FOR THIS AND ALL FUTURE SHELL SESSIONS:-- \n--SET LIBRARY PATH FOR THIS AND ALL FUTURE SHELL SESSIONS:-- \n---------- LINKING THE LIBRARY -------------------------------------------------\nFor users with a customized shell startup script, we ask that you add \n/usr/local/bin and $HOME/usr/local/bin to your PATH environment variable. \nAdditionally, add /usr/local/lib and $HOME/usr/local/lib to your LIBRARY_PATH\nenvironment variable. \n---------------- INCLUDING THE LIBRARY ----------------------------\nMake sure to include the line: \"#include \"tncontr.hpp\" at the top of \nany files that use the library, and link with the above linker flags.\n-------------------------------------------------------------------------------- \n\n---------------- INCLUDING THE LIBRARY ----------------------------\nMake sure to include the line: \"#include \"tncontr.hpp\" at the top of any files \nthat use the library, and link with the above linker flags.\n-------------------------------------------------------------------------------- \n\n::::::::::::::::::::::::::::::::: Docker Installation :::::::::::::::::::::::::::\nAn alternative way of running qTorch is to run it inside a Docker container. \nThis allows the user to use qTorch regardless of the local environment \n(operating system, package dependencies etc) of her machine. We provide the\nfollowing Docker image on DockerHub: therealcaoyudong/qtorch, which contains\nthe qTorch source code as well as the necessary libraries needed for \nbuilding qTorch. \nHere, we provide a step-by-step instruction on how to use the Docker image, \nassuming no prior experience with Docker. \n4. Now everything is set up, run the image using: \nNote that in addition to a hash string, each container is also labels \nwith a nickname (such as happy_einstein). \n\nThe library is then ready for use! See software guide in Appendix C of the qTorch \npaper for more details \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aspuru-guzik-group/qtorch/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aspuru-guzik-group/qtorch/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aspuru-guzik-group/qtorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/README.txt",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/nlopt-2.4.2/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/nlopt-2.4.2/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/Examples/stochastic_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/Examples/quickbb_treewidth_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/Examples/maxcut_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/Examples/fourier_transform8qubit_example.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/Examples/linegraph_example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9773136432781836,
      "result": {
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at \n        http://www.apache.org/licenses/LICENSE-2.0 \nThere are three options to install the library: global \ninstallation, local installation, and docker. Here, we provide\na tutorial for each. gcc/g++ is the compiler used to compile and run the\nlibrary. The version of gcc/g++ must be recent enough support the C++14 \nstandard library. Otherwise, errors like: \"g++: error: unrecognized \ncommand line option '-std=c++14'\" may appear. In this case, we suggest\nthe user upgrade their gcc/g++ compiler to a more recent version. \n::::::: Global Installation (Admin Permissions Required) ::::::::::: \n\n------- INSTALLING THE LIBRARY (REQUIRED FOR ANY TYPE OF USE) -------\nPlease type the command: \"sudo make install\" in a Unix command line to\ninstall globally for all users. \nThis next step is optional, but it will make it easier to write and link\ncustom .cpp files that extend the library. If the user doesn't want to \nchange any environment variables, they can simply run \"make all\", \n\"make cut\", or \"make qtorch\", then run the generated executables using \n./bin/qtorch or ./bin/maxcutQAOA \nOptional: The user should add the directories: /usr/local/bin and \n$HOME/usr/local/bin to the PATH environment variable. For bash shell users,\nthis means modifying the $HOME/.bash_rc, $HOME/.bash_profile, or the \n$HOME/.profile file, so that every time the user logs in and opens a shell \nscript, the PATH environment variable will change. Additionally, we recommend\nsetting the LIBRARY_PATH environment variable as well to reference the \ndirectories that we install the library in. \nSimple commands for bash user (default shell) - please copy and paste into shell: \n--THESE WILL SET THE PATH FOR THIS AND ALL FUTURE SHELL SESSIONS:-- \necho 'export PATH=$PATH:/usr/local/bin:$HOME/usr/local/bin' >> $HOME/.bash_profile\nsource $HOME/.bash_profile \nexport PATH=$PATH:/usr/local/bin:$HOME/usr/local/bin \n--SET LIBRARY_PATH VARIABLE ONLY FOR CURRENT SHELL SESSION:-- \nexport LIBRARY_PATH=$LIBRARY_PATH:/usr/local/lib:$HOME/usr/local/lib \necho 'export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/lib:$HOME/usr/local/lib' >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n-------------------------------------------------------------------------------- \n---------- LINKING THE LIBRARY -------------------------------------------------\nFor users with a customized shell startup script, we ask that you add \n/usr/local/bin and $HOME/usr/local/bin to your PATH environment variable. \nAdditionally, add /usr/local/lib and $HOME/usr/local/lib to your LIBRARY_PATH\nenvironment variable. \nIf you set the LIBRARY_PATH variable, you can link the library with\nthe compiler flag: -ltncontr, else link using -L/usr/local/lib -ltncontr\n-------------------------------------------------------------------------------- \n::::::::::: Local Installation (Admin Permissions NOT NEEDED) :::::::::::::::::: \n\n ----------- INSTALLING THE LIBRARY (REQUIRED FOR ANY TYPE OF USE) -------------\n Please type the command: \"make installlocal\" in a Unix command line to install \n globally for all users. \n This next step is optional, but it will make it easier to write and link custom \n .cpp files that extend the library. If the user doesn't want to change any \n environment variables, they can simply run \"make all\", \"make cut\", or \"make qtorch\",\n then run the generated executables using ./bin/qtorch or \n ./bin/maxcutQAOA \n Optional: The user should add the directory: $HOME/usr/local/bin to the PATH \n environment variable. For bash shell users, this means modifying the $HOME/.bash_rc,\n $HOME/.bash_profile, or the $HOME/.profile file, so that every time the user logs in\n and opens a shell script, the PATH environment variable will change. Additionally, \n we recommend setting the LIBRARY_PATH environment variable as well to reference \n the directories that we install the library in. \necho 'export PATH=$PATH:$HOME/usr/local/bin' >> $HOME/.bash_profile\nsource $HOME/.bash_profile \nexport PATH=$PATH:$HOME/usr/local/bin \nexport LIBRARY_PATH=$LIBRARY_PATH:$HOME/usr/local/lib \necho 'export LIBRARY_PATH=$LIBRARY_PATH:$HOME/usr/local/lib' >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n-------------------------------------------------------------------------------- \nFor users with a customized shell startup script, we ask that you add \n$HOME/usr/local/bin to your PATH environment variable. Additionally, add \n$HOME/usr/local/lib to your LIBRARY_PATH environment variable. \nLink using: -L$(HOME)/usr/local/lib -I$(HOME)/usr/local/include \n\n::::::::::::::::::::::::::::::::: Docker Installation :::::::::::::::::::::::::::\nAn alternative way of running qTorch is to run it inside a Docker container. \nThis allows the user to use qTorch regardless of the local environment \n(operating system, package dependencies etc) of her machine. We provide the\nfollowing Docker image on DockerHub: therealcaoyudong/qtorch, which contains\nthe qTorch source code as well as the necessary libraries needed for \nbuilding qTorch. \n1. Install Docker on your computer. Also VirtualBox is needed; \n2. In a command terminal, run:  \nwhich returns a list of virtual machines. If the list is empty, \ncreate a virtual machine called default by running:  \n3. Configure the shell to the virtual machine by running:  \nRun the command suggested by the returned message. \n5. The Docker container is effectively an Ubuntu environment with qTorch \ninstalled and executable from any directory. The source code for qTorch \ncan be located at \"/root/qtorch\". The user is free to re-build qTorch \nusing \"sudo make install\", then \"make all\", \"make qtorch\", \"make test\", \nor \"make cut\". To see if qTorch is correctly installed, run: \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aspuru-guzik-group/qtorch/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "linegraph, maxcut, networks, qaoa, qtorch, quantum, quickbb, simulation, tensor"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "qtorch"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "aspuru-guzik-group"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1114510,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1099524,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 472840,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 340880,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 28020,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 25435,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 16526,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 16096,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Fortran",
        "size": 3864,
        "type": "Programming_language",
        "value": "Fortran"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/qtorch/master/README.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "schuylerfried",
          "type": "User"
        },
        "date_created": "2018-06-06T03:06:42Z",
        "date_published": "2018-06-06T03:09:45Z",
        "description": "- Fix Y gate signs\r\n- Accept unentangled input circuits (i.e. H 0, H 1, measure 0 1)\r\n- Small comment updates and removal of unused functions",
        "html_url": "https://github.com/aspuru-guzik-group/qtorch/releases/tag/v1.1",
        "name": "Bug fixes and acceptance of unentangled input circuits",
        "release_id": 11341552,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/releases/11341552",
        "value": "https://api.github.com/repos/aspuru-guzik-group/qtorch/releases/11341552",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "schuylerfried",
          "type": "User"
        },
        "date_created": "2017-09-13T00:25:23Z",
        "date_published": "2017-09-13T00:25:52Z",
        "html_url": "https://github.com/aspuru-guzik-group/qtorch/releases/tag/v1.0",
        "name": "First Release on arXiv",
        "release_id": 7731144,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/releases/7731144",
        "value": "https://api.github.com/repos/aspuru-guzik-group/qtorch/releases/7731144",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/qtorch/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:54:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 48
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}