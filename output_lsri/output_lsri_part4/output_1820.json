{
  "application_domain": [
    {
      "confidence": 13.2,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hsinnan75/Dart"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-24T04:20:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-26T07:30:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DART \u2013 a fast and accurate RNA-seq mapper with a divide-and-conquer strategy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "DART adopts a divide-and-conquer strategy to handle RNA-Seq transcript alignments. Unlike most of read aligners that try to ex-tend a seed in both directions with a dynamic programming step, DART divides a read sequence into one or more segments to re-place the seed extension step. The experiment results on synthetic datasets and real datasets show that DART is a highly efficient aligner that yields the highest sensitivity and accuracy and spends the least amount of time among the selected aligners.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9578275806510966,
      "result": {
        "original_header": "DART: a fast and accurate RNA-seq mapper with a divide and conquer strategy",
        "type": "Text_excerpt",
        "value": "Developers: Dr. Hsin-Nan Lin and Dr. Wen-Lian Hsu Institute of Information Science, Academia Sinica, Taiwan.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8930514691866814,
      "result": {
        "original_header": "File formats",
        "type": "Text_excerpt",
        "value": "    All reference genome files should be in FASTA format. \n    All reads files should be in FASTA or FASTQ format. FASTQ files can be compressed with gzip format. We do not support FASTA files with gzip compression.\n    Read sequences should be capital letters. The quality scores in FASTQ are not considered in the alignments. The alignment result will not be different in either format. \n    If paired-end reads are separated into two files, use -f and -f2 to indicate the two filenames. The i-th reads in the two files are paired. If paired-end reads are in the same file, use -p. The first and second reads are paired, the third and fourth reads are paired, and so on. For the latter case, use -p to indicate the input file contains paired-end reads. \n    Output is in standard SAM/BAM format. For reads aligned with reverse strand of reference genome, they are converted into obverse strand. More detailed information about SAM/BAM format, please refer to the SAMtools documents. \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9875722425956001,
      "result": {
        "original_header": "Changes",
        "type": "Text_excerpt",
        "value": "- 1.3.9: Fix a bug when the input data contains unexpected characters.\n- 1.3.8: Integrate bwt_index into dart.\n- 1.3.7: Fix a bug when running with multi-threads on Mac PCs.\n- 1.3.6: Discard the thread limit.\n- 1.3.5: Add BAM format output.\n- 1.3.4: Fix a bug on single-end mapping.\n- 1.3.3: Fix a bug on paired-end mapping.\n- 1.3.2: Replaced 0 exit codes with 1 and the corresponding 'Warning' with 'Error' for cases where program termination is not the expected result (revised by Rad Suchecki).\n- 1.3.1: Add a \"-v\" option to show version of DART.\n- 1.3.0: Fix a bug on reading input.\n- 1.2.9: Fix a bug in SAM output.\n- 1.2.8: Fix the alignment of segment pairs with poor sequence identity.\n- 1.2.7: Add an update command.\n- 1.2.6: Fix the alignment of segment pairs with multiple mismatches.\n- 1.2.5: Fix the alignment when DNA sequences are shown in lower case.\n- 1.2.4: Allow multiple read files as the input.\n- 1.2.3: fix the bug when read number exceeds 2^23.\n- 1.2.0: Add ksw2 and edlib alignment method to replace the Needleman-Wunsch algorithm.\n- 1.2.2: fix a bug in the alignment report. \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "Download"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ conda install dart\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Github",
        "parent_header": [
          "Download"
        ],
        "type": "Text_excerpt",
        "value": "  $ git clone https://github.com/hsinnan75/Dart.git\n  ```\nto download the package of DART.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hsinnan75/DART/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hsinnan75/Dart/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hsinnan75/Dart"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DART: a fast and accurate RNA-seq mapper with a divide and conquer strategy"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "We provide the executable file, please type \n\n  ```\n  $ ./dart [options]\n  ```\nto run the program. Or you can type 'make' to build the executable file.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameter setting",
        "type": "Text_excerpt",
        "value": " ```\n\n-t INT number of threads [16]\n\n-i STR index prefix [BWT based (BWA), required]\n\n-f STR read filename [required, fasta or fastq]\n\n-f2 STR read filename2 [optional, fasta or fastq], f and f2 are files with paired reads\n\n-p the input read file consists of interleaved paired-end sequences\n\n-mis INT      maximal number of mismatches in an alignment\n\n-max_dup INT  maximal number of repetitive fragments (between 100-10000) [100]\n\n-o STR alignment output [SAM]\n\n-bo STR alignment output [BAM]\n\n-j STR predicted splice junction filename [junctions.tab]\n\n-all_sj detect all possible splice junctions regardless of mapq score [false]\n\n-m output multiple alignments [false]\n\n-intron INT the maximal intron size [500000]\n\n-unique output unique alignments\n\n  ```"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.949727435438773,
      "result": {
        "original_header": "Compiling",
        "type": "Text_excerpt",
        "value": "To compile dart and the index tool, please change to dart's folder and just type 'make' to compile dart and bwt_index. If the compilation or the program fails, please contact me (arith@iis.sinica.edu.tw).\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9982818091354263,
      "result": {
        "original_header": "File formats",
        "type": "Text_excerpt",
        "value": "    We also output the predicted splice junctions (default: junctions.tab, or you may specify a filename with -j argument).\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hsinnan75/Dart/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2. \n\nHowever the patent algorithm implemented is not covered by the GNU General Public License version 2. \n\nFor Commercial Use of the Related Patent, please contact Dr. Wen-Lian Hsu: hsu@iis.sinica.edu.tw\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dart"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hsinnan75"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1816713,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 170085,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 36585,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 29516,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 20217,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 13569,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7255,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scilab",
        "size": 2872,
        "type": "Programming_language",
        "value": "Scilab"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hsinnan75",
          "type": "User"
        },
        "date_created": "2019-04-25T09:36:58Z",
        "date_published": "2019-05-07T07:39:38Z",
        "html_url": "https://github.com/hsinnan75/Dart/releases/tag/v1.3.6",
        "release_id": 17187889,
        "tag": "v1.3.6",
        "tarball_url": "https://api.github.com/repos/hsinnan75/Dart/tarball/v1.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/hsinnan75/Dart/releases/17187889",
        "value": "https://api.github.com/repos/hsinnan75/Dart/releases/17187889",
        "zipball_url": "https://api.github.com/repos/hsinnan75/Dart/zipball/v1.3.6"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "To compile Dart, it requires libboost-all-dev, libbz2-dev, and liblzma-dev installed in your system.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:23:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get updates",
        "type": "Text_excerpt",
        "value": "We update DART from time to time, please check if new version is available by using the following commands.\n\nwith Kart version 1.2.7 up\n  ```\n  $ ./dart update \n  ```\nor\n  ```\n  $ git fetch\n  $ git merge origin/master master\n  $ make\n  ```"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "To index a reference genome, DART requires the target genome file (in fasta format) and the prefix of the index files (including the directory path).\n\n  ```\n  $ ./bwt_index ref_file[ex.ecoli.fa] index_prefix[ex. Ecoli]\n  ```\nor\n  ```\n  $ ./dart index ref_file[ex.ecoli.fa] index_prefix[ex. Ecoli]\n  ```\nThe above command is to index the genome file Ecoli.fa and store the index files begining with ecoli.\n\nPlease note that if you find bwt_index does not work in your computer system, you may also use bwa (http://bio-bwa.sourceforge.net/) to build the index files.\n  ```\n  $ bwa index -p index_prefix ref.fa\n  ```\n\nTo map short reads, DART requires the the index files of the reference genome and at least one read file (two read files for the separated paired-end reads). Users should use -i to specify the prefix of the index files (including the directory path).\n\n case 1: standard sam output\n  ```\n $ ./dart -i ecoli -f ReadFile1.fa -f2 ReadFile2.fa -o out.sam\n  ```\n\n case 2: multiple input \n  ```\n $ ./dart -i ecoli -f ReadFileA_1.fq ReadFileB_1.fq ReadFileC_1.fq -f2 ReadFileA_2.fq ReadFileB_2.fq ReadFileC_2.fq -o out.sam\n  ```\n\n case 3: bam output\n  ```\n $ ./dart -i ecoli -f ReadFile1.fa -f2 ReadFile2.fa -bo out.bam\n  ```\n\nThe above commands are to run DART to align the paired-end reads in ReadFile1.fq and ReadFile2.fq with index files of ecoli.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/DART/master/README.md",
      "technique": "header_analysis"
    }
  ]
}