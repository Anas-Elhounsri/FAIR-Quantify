{
  "application_domain": [
    {
      "confidence": 0.9915251289532079,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9694995028755022,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing GCSA2",
        "parent_header": [
          "GCSA2"
        ],
        "type": "Text_excerpt",
        "value": "Jouni Sir\u00e9n: **Indexing Variation Graphs**.\nProc. ALENEX 2017, SIAM, pp. 13-27, Barcelona, Spain, January 17-18, 2017.\n[DOI: 10.1137/1.9781611974768.2](https://doi.org/10.1137/1.9781611974768.2)\n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Other references",
        "parent_header": [
          "GCSA2"
        ],
        "type": "Text_excerpt",
        "value": "Jouni Sir\u00e9n, Niko V\u00e4lim\u00e4ki, and Veli M\u00e4kinen: **Indexing Graphs for Path Queries with Applications in Genome Research**.\nIEEE/ACM Transactions on Computational Biology and Bioinformatics 11(2):375-388, 2014.\n[DOI: 10.1109/TCBB.2013.2297101](https://doi.org/10.1109/TCBB.2013.2297101)\n\nAlexander Bowe, Taku Onodera, Kunihiko Sadakane, and Tetsuo Shibuya: **Succinct de Bruijn Graphs**.\nProc. WABI 2012, Springer LNCS 7534, pp. 225-235, Ljubljana, Slovenia, September 10-12, 2012.\n[DOI: 10.1007/978-3-642-33122-0_18](https://doi.org/10.1007/978-3-642-33122-0_18)\n\nJouni Sir\u00e9n, Erik Garrison, Adam M. Novak, Benedict Paten, and Richard Durbin: **Haplotype-aware graph indexes**.\nBioinformatics 36(2):400-407, 2020.\nDOI: [10.1093/bioinformatics/btz575](https://doi.org/10.1093/bioinformatics/btz575)\n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jltsiren/gcsa2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-12T16:20:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-01T05:47:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BWT-based index for graphs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9922591473662873,
      "result": {
        "original_header": "GCSA2",
        "type": "Text_excerpt",
        "value": "This is a reimplementation of the Generalized Compressed Suffix Array (GCSA), a BWT-based index for directed graphs. \n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9667084641104529,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "[The old implementation](https://jltsiren.kapsi.fi/gcsa) indexed all paths in a directed acyclic graph, which had to be determinized before index construction. GCSA2 approximates the graph with a de Bruijn graph (with *k = 256* or less), allowing it to index more complex graphs as well as graphs containing cycles. The order of the de Bruijn graph limits the length of the queries the index is able to answer correctly. Longer queries may result in false positives (but no false negatives). \nThe input to index construction is a set of paths of length *k* in the input graph. The prefix-doubling algorithm transforms the input into an order-*8k* (order-*2k*, order-*4k*, order-*16k*) pruned de Bruijn graph for paths in the input graph. A pruned de Bruijn graph differs from a de Bruijn graph in that its nodes may have shorter labels than the order of the graph, if the shorter labels uniquely determine the start nodes of the corresponding paths in the input graph. As such, pruned de Bruijn graphs are usually smaller than proper de Bruijn graphs. \nGCSA2 is being developed as a part of [vg](https://github.com/vgteam/vg). The only implemented construction option is based on extracting *k*-mers from vg.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9132524447500582,
      "result": {
        "original_header": "Compiling GCSA2",
        "type": "Text_excerpt",
        "value": "The implementation is based on the [vgteam fork](https://github.com/vgteam/sdsl-lite) of the Succinct Data Structures Library 2.0 (SDSL). As the implementation uses C++14, OpenMP, and libstdc++ parallel mode, g++ 6.1 or newer is required. On Apple systems, GCSA2 can also be built with Apple Clang, but libomp must be installed via Macports or Homebrew, and the lack of libstdc++'s parallel mode extensions will result in slower index construction. \nGCSA2 is frequently tested in the following environments: \n* Intel Linux (Ubuntu) with GCC.\n* Intel macOS with GCC and Apple Clang.\n* ARM macOS with Apple Clang. \n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/jltsiren/gcsa2/wiki"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jltsiren/gcsa2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jltsiren/gcsa2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GCSA2"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.8100714080779333,
      "result": {
        "original_header": "GCSA2",
        "type": "Text_excerpt",
        "value": "See [the wiki](https://github.com/jltsiren/gcsa2/wiki) for further documentation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9931121561513064,
      "result": {
        "original_header": "Compiling GCSA2",
        "type": "Text_excerpt",
        "value": "GCSA2 is frequently tested in the following environments: \n* Intel Linux (Ubuntu) with GCC.\n* Intel macOS with GCC and Apple Clang.\n* ARM macOS with Apple Clang. \nTo compile, set `SDSL_DIR` in the Makefile to point to your SDSL directory (the default is `../sdsl-lite`). GCSA2 will take its compiler options from SDSL. Use `make` to compile the library or `install.sh` to compile it and install the headers and the library to your home directory. Another installation directory can be specified as `install.sh prefix`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2018, 2019, 2021 Jouni Siren\nCopyright (c) 2015, 2016, 2017 Genome Research Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gcsa2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jltsiren"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 290687,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 119768,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5938,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1753,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jltsiren/gcsa2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2021-01-23T03:50:12Z",
        "date_published": "2021-01-23T03:52:57Z",
        "description": "* Uses C++14 and the vgteam fork of SDSL.\r\n* Support for Clang.\r\n* Deterministic shuffle in `locate(range, max_positions, results)` to avoid platform-specific behavior.\r\n* Construction, serialization, and statistics fixes for empty indexes.\r\n* Installation script.\r\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v1.3",
        "name": "GCSA2 v1.3",
        "release_id": 36797862,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/36797862",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/36797862",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2018-05-11T03:50:47Z",
        "date_published": "2018-05-11T03:59:05Z",
        "description": "Various improvements to index construction. Deals with some bottlenecks when the temporary files are on a fast SSD.\r\n\r\n* New functionality: `locate(range, max_positions, results)` returns a random subset of the matching positions in the query range.\r\n* Read and write data in smaller blocks to avoid the issue with >2 GB reads in GCC on macOS.\r\n* Delete temporary files when `std::exit()` is called.\r\n* Size limit is now the total for all temporary files. The default was increased to 2048 GB.\r\n* Faster index construction: faster preprocessing, better scheduling in `PathGraph::extend()`.",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v1.2",
        "name": "GCSA2 v1.2",
        "release_id": 10952122,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/10952122",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/10952122",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2018-02-23T22:37:04Z",
        "date_published": "2018-02-23T22:46:01Z",
        "description": "Support for haplotype-aware indexing and higher-order indexes in VG.\r\n\r\n* Node mappings for using separate sets of node identifiers for graph transformations and `locate()` queries.\r\n  * Intended for graphs pruned with `vg prune --unfold-paths`, which replaces complex subgraphs with subgraphs that only contain specific paths.\r\n  * Build a path graph for the unfolded graph but create an index that maps to the original graph.\r\n* Support for 4 doubling steps (paths of length up to 256).\r\n* Optionally specify a sample period instead of always sampling the initial offsets of the original nodes.\r\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v1.1",
        "name": "GCSA2 v1.1",
        "release_id": 9814504,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/9814504",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/9814504",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2017-05-17T09:48:11Z",
        "date_published": "2017-05-22T13:49:05Z",
        "description": "This version contains bug fixes and other minor improvements. As there have been no major changes since September 2016, it seems appropriate to call this version 1.0.\r\n\r\n* The prefix of temporary files is now `gcsa_` instead of `.gcsa_`. No more large hidden files that may remain if the construction fails.\r\n* Construction is aborted if reading/writing temporary files fails.\r\n* Tools now display the version of GCSA2.\r\n* Fixed a buffer overflow in LCP construction.\r\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v1.0",
        "name": "GCSA2 v1.0",
        "release_id": 6463265,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/6463265",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/6463265",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2016-09-30T20:43:56Z",
        "date_published": "2016-10-01T18:46:25Z",
        "description": "This is a performance update.\n- New encoding for the FM-index that makes it as fast as the FM-index in BWA.\n- Kmer comparison: report the size of the symmetric difference between two indexes, and optionally output the kmers specific to one of the indexes.\n- The LCP array file has now a proper header.\n- Due to changes in file formats, old indexes must be rebuilt.\n- Headers are now located under `include/gcsa`.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.8",
        "name": "GCSA2 v0.8",
        "release_id": 4281014,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/4281014",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/4281014",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2016-08-15T10:15:49Z",
        "date_published": "2016-08-16T13:40:42Z",
        "description": "This is a major construction update.\n- Faster index construction due to simplified disk I/O.\n- The index is now based on maximally pruned de Bruijn graphs, which are more intuitive and slightly smaller than the non-maximally pruned graphs in the earlier versions.\n- Overlapping subgraphs (e.g. a pruned variation graph and the reference path) can be indexed in separate files without excessive memory usage.\n- The `Alphabet` object is now a property of `InputGraph`, not a `GCSA` construction parameter.\n- Verbosity level can be changed runtime with `Verbosity::set()`.\n- GCSA2 now compiles with an OpenMP-enabled Clang compiler. Index construction is slower than with g++ due to the lack of multi-threaded sorting.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.7",
        "name": "GCSA2 v0.7",
        "release_id": 3897331,
        "tag": "v0.7",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/3897331",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/3897331",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2016-03-16T13:36:26Z",
        "date_published": "2016-03-16T13:40:34Z",
        "description": "This is a quick bug fix.\n- `STNode::lcp()` now returns the string depth of the node itself, not of its parent.\n- String depths can also be determined by using `LCPArray::depth()`.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.6.1",
        "name": "GCSA2 v0.6.1",
        "release_id": 2823370,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/2823370",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/2823370",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2016-03-14T14:49:47Z",
        "date_published": "2016-03-14T15:02:53Z",
        "description": "This is a major functionality update. It adds support for the following operations:\n- Counting queries determining the number of distinct start nodes in a lexicographic range of path nodes. The solution is based on a generalization of Sadakane's document counting structure.\n- Parent queries in the suffix tree in order to find maximal exact matches quickly. The solution is based on a range minimum tree over the LCP array, which can also be used to add support for other suffix tree operations. (The lack of inverse suffix array functionality in GCSA prevents us from making the index fully equivalent to a suffix tree.)\n- Counting the number of distinct kmers in the index. This is primarily useful for determining how much space is saved by pruning the de Bruijn graph. The same approach can be used for e.g. comparing two indexes based on the kmers they contain.\n\nOther things to consider:\n- Index construction uses somewhat more time and memory due to the new structures.\n- Index size has increased by 10-15% (without the LCP array) or by about 50% (with the LCP array).\n- Index file format has changed. Old indexes cannot be used anymore, as a conversion tool would not be that much more efficient than rebuilding the indexes.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.6",
        "name": "GCSA2 v0.6",
        "release_id": 2807204,
        "tag": "v0.6",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/2807204",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/2807204",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2015-12-14T10:27:37Z",
        "date_published": "2015-12-14T10:55:24Z",
        "description": "This is the first actual release of GCSA2. The indexes are smaller than in the earlier releases, and the interfaces have been frozen and documented.\n- The final index is typically 25% to 30% smaller than before. This is caused by more aggressive pruning of the de Bruijn graph.\n- Index construction is slightly faster than before due to asynchronous reading of temporary files and a faster de Bruijn graph implementation.\n- The construction interface, the high-level query interface, and the low-level query interface have been frozen and documented.\n- The index file format has changed. Old indexes can be converted to the new format by using the `convert_gcsa` tool.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.5",
        "name": "GCSA2 v0.5",
        "release_id": 2282514,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/2282514",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/2282514",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2015-11-22T14:29:57Z",
        "date_published": "2015-11-22T14:36:45Z",
        "description": "This is the fourth pre-release of GCSA2. The memory usage of index construction is now significantly lower, at the price of 2x longer construction time.\n- The construction algorithm is now disk-based. It keeps the graphs on disk and loads at most one chromosome at a time into memory.\n- Graph order is no longer a hard limit for query length. Longer queries may still result in false positives, however.\n- Headers have been reorganized into public headers (gcsa.h, files.h, support.h, and utils.h) and internal headers (path_graph.h, dbg.h, internal.h).\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.4",
        "name": "GCSA2 v0.4",
        "release_id": 2167141,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/2167141",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/2167141",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2015-08-20T13:11:35Z",
        "date_published": "2015-08-20T13:23:18Z",
        "description": "This pre-release improves index construction speed significantly.\n- Most parts of the construction are now multithreaded.\n- There is a faster separate GCSA implementation for de Bruijn graphs. This made edge generation in `GCSA::build()` much faster.\n- The default input format is now the native binary format. While the old text format had to be parsed (at roughly 0.25 million paths/second), the binary format can be read directly to the input vector.\n- Index can be built from multiple input files (e.g. one file for each chromosome), as long as the files are disjoint (no overlapping node identifiers, except the source and the sink) and have the same kmer length.\n- The graph format changed a bit to encode node orientation (in the original graph) in node identifiers (of the input graph).\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.3",
        "name": "GCSA2 v0.3",
        "release_id": 1699165,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/1699165",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/1699165",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2015-07-16T08:12:36Z",
        "date_published": "2015-07-16T08:23:37Z",
        "description": "This second pre-release includes various optimizations and bug fixes.\n- While indexing the entire human genome has not been tried yet, it should be possible with 320 gigabytes (path length 64) or 512 gigabytes (path length 128) of memory.\n- Due to some rare edge generation issues (see issue #3), index construction now builds a prefix-sorted graph instead of a prefix-range-sorted graph. This increased memory usage and the size of the final index.\n- The implementation should now be able to handle all kinds of cyclic graphs.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.2",
        "name": "GCSA2 v0.2",
        "release_id": 1544685,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/1544685",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/1544685",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jltsiren",
          "type": "User"
        },
        "date_created": "2015-05-27T16:54:33Z",
        "date_published": "2015-05-27T17:03:05Z",
        "description": "This initial release supports index construction from paths extracted from [vg](https://github.com/ekg/vg), as well as `find()` and `locate()` queries.\n",
        "html_url": "https://github.com/jltsiren/gcsa2/releases/tag/v0.1",
        "name": "GCSA2 v0.1",
        "release_id": 1343890,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/jltsiren/gcsa2/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jltsiren/gcsa2/releases/1343890",
        "value": "https://api.github.com/repos/jltsiren/gcsa2/releases/1343890",
        "zipball_url": "https://api.github.com/repos/jltsiren/gcsa2/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:07:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 71
      },
      "technique": "GitHub_API"
    }
  ]
}