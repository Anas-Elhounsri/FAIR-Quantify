{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "- Marco Galardini cleaned my code and made many nifty improvements.\n- Anders Goncalves da Silva made Scoary installable by pip\n- The QuadTree and UPGMA implementation was heavily based on code by Christian Storm Pedersen.\n- In\u00eas Mendes pointed out a number of bugs related adjusted p-values and isolate restriction.\n- Eric Deveaud added versioning.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use Scoary, please consider citing:\n**Brynildsrud O, Bohlin J, Scheffer L, Eldholm V.** Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. _Genome Biol_. 2016;17:238\n\nThe article is Open Access, and can be found using DOI: 10.1186/s13059-016-1108-8\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AdmiralenOla/Scoary"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "Ola Brynildsrud (ola.brynildsrud@fhi.no)\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-02-03T13:05:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-30T19:37:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pan-genome wide association studies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8761039176240398,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Scoary requires two input files: The gene_presence_absence.csv file from [Roary](https://sanger-pathogens.github.io/Roary/) and a list of traits to test associations to. Traits can be anything as long as you can classify it into binary categories. (e.g. antibiotic resistance, group membership (yes/no), MIC value higher/lower than 16) \nMake sure you know the delimiter in the file. (By default this is ','). Scoary needs to know. \nThe **traits.csv** file needs to be formatted in a specific way. \n- It must use the same delimiter as the gene_presence_absence.csv file\n- The names of your isolates need to be identical in the two files\n- The rows should correspond to your isolates, the columns to the different traits\n- Traits needs to be dichotomized. Use \"0\" to indicate absence and \"1\" to indicate presence of the trait\n- All isolates and traits should be uniquely named and not contain any weird characters (e.g. %;,/&[]@? etc)\n- The top left cell should be left blank \nYou can see an example of how the input files could look in the exampledata folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9661684382960881,
      "result": {
        "original_header": "Missing data",
        "type": "Text_excerpt",
        "value": "Don't worry if you have not measured the phenotype for all your traits. From v1.6.9 on, Scoary can handle missing data. The missing values need to be specified as \"NA\", \".\" or \"-\". Note that Scoary does not actually specify any kind of uncertainty model for these missing values, it simply excludes them from further analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9133787213611377,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Scory outputs a single csv file per trait in the traits file. It uses comma \",\" as a delimiter. The results consists of genes that were found to be associated with the trait, sorted according to significance. (By default, Scoary reports all genes with a naive p-value < 0.05, but the user can change the cut-off value and use adjusted p-values instead) \n| Column name | Explanation |\n| ----------- | ----------- |\n| Gene | The gene name |\n| Non-unique gene name | The non-unique gene name |\n| Annotation | Annotation |\n| Number_pos_present_in | The number of trait-positive isolates this gene was found in |\n| Number_neg_present_in | The number of trait-negative isolates this gene was found in |\n| Number_pos_not_present_in | The number of trait-positive isolates this gene was not found in |\n| Number_neg_not_present_in | The number of trait-negative isolates this gene was not found in |\n| Sensitivity | The sensitivity if using the presence of this gene as a diagnostic test to determine trait-positivity |\n| Specificity | The specificity if using the non-presence of this gene as a diagnostic test to determine trait-negativity |\n| Odds_ratio | [Odds ratio] (https://en.wikipedia.org/wiki/Odds_ratio) |\n| p_value | The na\u00efve p-value for the null hypothesis that the presence/absence of this gene is unrelated to the trait status |\n| Bonferroni_p | A p-value adjusted with Bonferroni's method for multiple comparisons correction (An [FWER] (https://en.wikipedia.org/wiki/Familywise_error_rate) type correction) |\n| Benjamini_H_p | A p-value adjusted with Benjamini-Hochberg's method for multiple comparisons correction (An [FDR] (https://en.wikipedia.org/wiki/False_discovery_rate) type correction) |\n| Max_pairwise_comparisons | The maximum number of pairs that contrast in both gene and trait characters that can be drawn on the phylogenetic tree without intersecting lines (Read & Nee, 1995; Maddison, 2000) |\n| Max_supporting_pairs | The maximum number of these pairs (Max_pairwise_comparisons) that support A->B or A->b, depending on the odds ratio. |\n| Max_opposing_pairs | The maximum number of these pairs (Max_pairwise_comparisons) that oppose A->B or A->b, depending on the odds ratio. |\n| Best_pairwise_comp_p | The p-value corresponding to the highest possible number of supporting pairs and the lowest possible number of opposing pairs, e.g. the lowest p-value you could end up with when picking a set of maximum number of pairs. |\n| Worst_pairwise_comp_p | The p-value corresponding to the lowest possible number of supporting pairs and the highest possible number of opposing pairs, e.g. the highest p-value you could end up with when picking a set of maximum number of pairs. |\n| Empirical_p | Empirical p-value after permutations and ranking of all test estimators. The test estimator used is number of successes (ie. AB-ab supporting pairs) divided by the number of trials (ie. the maximum number of contrasting pairs). This test estimator seem to approach a normal distribution. Empirical p is calculated by (r+1)/(n+1) where r is the number of estimators that exceed the unpermuted estimator in value and n is the total number of permutations. | \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.986368391041767,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "Scoary can take a number of optional arguments to tweak the output and make sure it performs as intended:\n```\nusage: scoary.py [-h] [-t TRAITS] [-g GENES] [-o OUTDIR]\n                 [-p P_VALUE_CUTOFF [P_VALUE_CUTOFF ...]]\n                 [-c [{I,B,BH,PW,EPW,P} [{I,B,BH,PW,EPW,P} ...]]] [-e PERMUTE]\n                 [-m MAX_HITS] [-r RESTRICT_TO] [-w] [-s START_COL] [-u]\n                 [-n NEWICKTREE] [--delimiter DELIMITER] [--collapse]\n                 [--threads THREADS] [--no-time] [--test] [--citation]\n                 [--version]\n\nScoary version 1.6.10 - Screen pan-genome for trait-associated genes\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TRAITS, --traits TRAITS\n                        Input trait table (comma-separated-values). Trait\n                        presence is indicated by 1, trait absence by 0.\n                        Assumes strain names in the first column and trait\n                        names in the first row\n  -g GENES, --genes GENES\n                        Input gene presence/absence table (comma-separated-\n                        values) from ROARY. Strain names must be equal to\n                        those in the trait table\n  -o OUTDIR, --outdir OUTDIR\n                        Directory to place output files. Default = .\n  -p P_VALUE_CUTOFF [P_VALUE_CUTOFF ...], --p_value_cutoff P_VALUE_CUTOFF [P_VALUE_CUTOFF ...]\n                        P-value cut-off / alpha level. For Fishers,\n                        Bonferronis, and Benjamini-Hochbergs tests, SCOARY\n                        will not report genes with higher p-values than this.\n                        For empirical p-values, this is treated as an alpha\n                        level instead. I.e. 0.02 will filter all genes except\n                        the lower and upper percentile from this test. Run\n                        with \"-p 1.0\" to report all genes. Accepts standard\n                        form (e.g. 1E-8). Provide a single value (applied to\n                        all) or exactly as many values as correction criteria\n                        and in corresponding order. (See example under\n                        correction). Default = 0.05\n  -c [{I,B,BH,PW,EPW,P} [{I,B,BH,PW,EPW,P} ...]], --correction [{I,B,BH,PW,EPW,P} [{I,B,BH,PW,EPW,P} ...]]\n                        Apply the indicated filtration measure. I=Individual\n                        (naive) p-value. B=Bonferroni adjusted p-value. BH\n                        =Benjamini-Hochberg adjusted p. PW=Best (lowest)\n                        pairwise comparison. EPW=Entire range of pairwise\n                        comparison p-values. P=Empirical p-value from\n                        permutations. You can enter as many correction\n                        criteria as you would like. These will be associated\n                        with the p_value_cutoffs you enter. For example \"-c I\n                        EPW -p 0.1 0.05\" will apply the following cutoffs:\n                        Naive p-value must be lower than 0.1 AND the entire\n                        range of pairwise comparison values are below 0.05 for\n                        this gene. Note that the empirical p-values should be\n                        interpreted at both tails. Therefore, running \"-c P -p\n                        0.05\" will apply an alpha of 0.05 to the empirical\n                        (permuted) p-values, i.e. it will filter everything\n                        except the upper and lower 2.5 percent of the\n                        distribution. Default = Individual p-value. (I)\n  -e PERMUTE, --permute PERMUTE\n                        Perform N number of permutations of the significant\n                        results post-analysis. Each permutation will do a\n                        label switching of the phenotype and a new p-value is\n                        calculated according to this new dataset. After all N\n                        permutations are completed, the results are ordered in\n                        ascending order, and the percentile of the original\n                        result in the permuted p-value distribution is\n                        reported.\n  -m MAX_HITS, --max_hits MAX_HITS\n                        Maximum number of hits to report. SCOARY will only\n                        report the top max_hits results per trait\n  -r RESTRICT_TO, --restrict_to RESTRICT_TO\n                        Use if you only want to analyze a subset of your\n                        strains. Scoary will read the provided comma-separated\n                        table of strains and restrict analyzes to these.\n  -w, --write_reduced   Use with -r if you want Scoary to create a new gene\n                        presence absence file from your reduced set of\n                        isolates. Note: Columns 1-14 (No. sequences, Avg group\n                        size nuc etc) in this file do not reflect the reduced\n                        dataset. These are taken from the full dataset.\n  -s START_COL, --start_col START_COL\n                        On which column in the gene presence/absence file do\n                        individual strain info start. Default=15. (1-based\n                        indexing)\n  -u, --upgma_tree      This flag will cause Scoary to write the calculated\n                        UPGMA tree to a newick file\n  -n NEWICKTREE, --newicktree NEWICKTREE\n                        Supply a custom tree (Newick format) for phylogenetic\n                        analyses instead instead of calculating it internally.\n  --delimiter DELIMITER\n                        The delimiter between cells in the gene\n                        presence/absence and trait files, as well as the\n                        output file.\n  --collapse            Add this to collapse correlated genes (genes that have\n                        identical distribution patterns in the sample) into\n                        merged units.\n  --threads THREADS     Number of threads to use. Default = 1\n  --no-time             Output file in the form TRAIT.results.csv, instead of\n                        TRAIT_TIMESTAMP.csv. When used with the -w argument\n                        will output a reduced gene matrix in the form\n                        gene_presence_absence_reduced.csv rather than\n                        gene_presence_absence_reduced_TIMESTAMP.csv\n  --test                Run Scoary on the test set in exampledata, overriding\n                        all other parameters.\n  --citation            Show citation information, and exit.\n  --version             Display Scoary version, and exit.\n\nby Ola Brynildsrud (olbb@fhi.no)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9478294828491064,
      "result": {
        "original_header": "The -r parameter",
        "type": "Text_excerpt",
        "value": "The **-r** parameter is particularly useful, as you can use it to restrict your analysis to a subset of your isolates without altering the gene_presence_absence or trait files. Simply provide a single-line csv file (delimited by \",\") with the names of the isolates you would like to include in the current analysis. \nThis can be useful for example if you have multiple clades in your dataset but would like to restrict analysis to just one clade. Maybe the trait determinant is not the same in the two clades? Or perhaps you have missing data for some isolates? \nThis will restrict the current analysis to isolates 1,2,4 and 9, and will omit all others.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972371135642989,
      "result": {
        "original_header": "The -s parameter",
        "type": "Text_excerpt",
        "value": "The **-s** parameter is used to indicate to Scoary which column in the gene_presence_absence.csv file is the _first_ column representing an isolate. By default it is set to 15 (1-based indexing).\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9490533567196024,
      "result": {
        "original_header": "The -p, -m and -c parameters",
        "type": "Text_excerpt",
        "value": "These parameters control your output. **-m** sets a hard cut-off on the number of hits reported. With **-p** you can set that no gene with a higher p-value will be reported. (Tip: Set this to 1.0 to report every single gene). You can mix these parameters with **-c**. If you only wanted genes with a Bonferroni-adjusted p-value < 1E-10 you could use _-p 1E-10 -c B_.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9338045937603998,
      "result": {
        "original_header": "Combining filtering options",
        "type": "Text_excerpt",
        "value": "From version 1.4.0, you can also mix different restrictions together. For example, you may want to specify that the entire range of pairwise comparisons p-values be < 1E-5, but you still doubt some of your results. You could try to filter your results more strictly by also requiring an Individual (naive) p-value of less than 0.01. You would then use _-c EPW I -p 1E-5 0.01_. You need to enter the -c options and the -p options in the corresponding order.  \nAlternatively, you can specify a single (one) p-value, and this will be taken as the filter for all the specified -c options. For example _-c EPW BH -p 0.05_ will filter the results to only include genes where the entire range of pairwise comparison as well as the Benjamini-Hochberg p-values are > 0.05\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9547971071126337,
      "result": {
        "original_header": "The -u flag",
        "type": "Text_excerpt",
        "value": "Calling Scoary with the **-u** flag will cause it to write a newick file of the UPGMA tree that is calculated internally. The tree is based on pairwise Hamming distances in the gene_presence_absence matrix. Taxa have to be named the same as they are in the gene presence/absence and trait files.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9158462296898767,
      "result": {
        "original_header": "The -n parameter",
        "type": "Text_excerpt",
        "value": "Can be used to supply a custom phylogenetic tree (in newick format) to Scoary. This tree will be used for calculating contrasting pairs rather than Scoary using the gene presence absence file for UPGMA calculation. \nNote: The input sample tree topology is a fixed parameter in Scoary. It is assumed to be without error. By default, Scoary calculates a UPGMA tree topology internally from the presence/absence status in the gene presence/absence matrix, which is probably not the most robust data for phylogenetic inference. Since pairwise comparisons rely on the branching order in the tree, a best practices approach would be to supply tree(s) that you have calculated using a more robust approach (e.g. a ML tree based on your sequence data).\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9834715217541868,
      "result": {
        "original_header": "Post-analysis label-switching permutations",
        "type": "Text_excerpt",
        "value": "Use **-e X** to permute the dataset X times, rank the test estimators (number of successes (AB-ab pairs) / total number of contrasting pairs (ie. AB-ab and Ab-aB)) and report the unpermuted test estimator's empirical p-value. Calculated as (r+1)/(n+1) where r is the number of estimators that exceed the unpermuted estimator in value and n is the total number of permutations (North, Curtis and Sham, 2002). Empirical p-values are great for deciding if your result looks significant just by coincidence or by a true association. The permutation procedure destroys the relationship between the variant and the phenotype, making the null hypothesis true. Each permutation test estimator is sampled under the null hypothesis. If these data look like your real data, you're in trouble. So if your empirical p-value is not low, chances are you seeing a false positive results even if your other p-values (Bonferroni, pairwise comparisons etc) indicate significance of the variant. You can use empirical p-values as a results filter by using **-c P**.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9705390394278807,
      "result": {
        "original_header": "The --collapse flag",
        "type": "Text_excerpt",
        "value": "Adding this flag to the command line will collapse genes that are identically distributed in your sample. For example, plasmid genes are often inherited together and as such will not add any information individually. From a statistical point of view, this is more correct, as in the opposite case the program will test (and correct for) multiple identical null hypotheses, thus unfairly penalizing your results by multiple comparisons correction.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9640695219991353,
      "result": {
        "original_header": "Population structure",
        "type": "Text_excerpt",
        "value": "Scoary implements the pairwise comparisons algorithm (Read & Nee, 1995; Maddison, 2000) to identify the maximum number of non-intersecting pairs of isolates that contrast in the state of both gene and trait. It does this by creating an UPGMA tree from the information contained in the gene_presence_absence matrix, annotating tips with gene and trait status, and recursively traversing the tree for each gene that were significant in the initial analysis. (i.e. those with p<0.05 if settings are left at default.) \nThis tells you something about the **number of times** the gene and trait co-emerged in the evolutionary history of your sample. Consider the two following trees. In both scenarios, the gene perfectly predict the trait status, with 10 positive and 11 negative isolates, corresponding to a na\u00efve p-value of 2.8E-6. However, in the first tree, there is a maximum of two non-intersecting contrasting pairs, which must be considered relatively weak evidence for a causal link between this gene and the trait. There can be many other evolutionary events at the stars that explain the observed distribution equally well as this gene. In the second tree, however, there is a maximum of seven possible non-intersecting contrasting pairs, which implies that this gene and the trait co-emerged seven times. This would be considered far stronger evidence for a causal link between the gene and the trait. \nOne must also consider that there might be multiple ways of picking the maximum number of contrasting pairs, and of all these possible sets of pairings, some might provide more support for A->B than others. Consider the following tree: \nThe above tree has a maximum of 6 contrasting pairs, and in this tree the pairs have been chosen so that all pairs support A->B. (The presence of the gene caused the presence of the phenotype). However, in this particular tree we could also have picked 6 contrasting pairs where not all pairs supports this. See for example this pairing: \nThe above tree has the same topology and terminal states, and the same number of contrasting pairs, but now we have chosen pairs so that 5 pairs support A->B while 1 pair oppose it (It suggests that A->b / a->B). This is a worst possible pairing which maintains the maximum number of contrasting pairs. \nScoary reports the best (lowest) and worst (highest) p-values, corresponding to the first and the second scenario, respectively. The p-value corresponds to a binomial test using the number of supporting pairs as successes and p=0.5 for each state. A p<0.05 would thus typically be considered as a rejection of the null hypothesis that the expressed phenotype is not associated with the gene.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9881105299510131,
      "result": {
        "original_header": "Etymology",
        "type": "Text_excerpt",
        "value": "Scoary is an anagram of \"scoring\" and \"Roary\", the pan-genome pipeline. It was named as an homage to Roary.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8500142753610953,
      "result": {
        "original_header": "Coming soon",
        "type": "Text_excerpt",
        "value": "- Multiprocessing also when using the GUI. (The GUI currently only uses a single thread. See Issues).\n- Support for non-binary traits\n- Please feel free to suggest improvements, point out bugs or methods that could be better optimized.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9476625550988531,
      "result": {
        "original_header": "Feedback",
        "type": "Text_excerpt",
        "value": "I greatly appreciate any feedback, even negative. If you like (or dislike) Scoary, please feel free to tell your friends and colleagues about it. If you don't have friends or colleagues, please feel free to rant about it on your blog or social media profile.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.974557743064556,
      "result": {
        "type": "Text_excerpt",
        "value": "Scoary is designed to take the gene_presence_absence.csv file from  as well as a traits file created by the user and calculate the assocations between all genes in the accessory genome and the traits. It reports a list of genes sorted by strength of association per trait. \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AdmiralenOla/Scoary/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AdmiralenOla/Scoary/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "type": "Text_excerpt",
        "value": "- **How can you justify p=0.5 in your pairwise comparisons method? Is this species-specific?**\n\nThe reasoning is as follows: Scoary first finds the maximum number of independent contrasting pairs in a phylogenetic tree, irrespective of gene-trait status. Thus, AB-ab pairs should be equally likely as Ab-aB pairs if your null hypothesis is true. Your null hypothesis in this case, is that there is no detectable association between A/a and B/b. If AB-ab pairs are much more common than Ab-aB pairs then you can be confident that the true p was not 0.5. And if this is the case then then there seems to be an association between your A/a (your gene) and your B/b (your phenotype). A justification for this way of testing can be found in Read and Nee, 1995.\n- **Why is my \"Best_pairwise_comp_p\" higher than my \"Worst_pairwise_comp_p\"? (No longer relevant in version 1.6.x)**\n\nThe \"best\" and \"worst\" labels are attached to the odds ratio of the gene in the non-population structure-corrected analysis. For example, you may find an odds ratio of 2.0 for a particular gene, meaning presence of the gene was tied to presence of the phenotype. But when you inspect your pairwise comparisons p-values you see that the \"best\" p-value was 0.2 and the \"worst\" was 1.0E-5. This means that in your phylogenetic tree, an enrichment of Ab-aB pairs was more common. In other words, the presence of this gene actually seems associated to a _silencing_ of the phenotype, in spite of your original odds ratio. Note that the odds ratio can be inflated for example by sampling of very closely related isolates.\n- **Can I use this for SNPs/kmers?**\n\nIn theory yes, but it requires some tinkering. Obviously you couldn't take the input file directly from Roary. You'd have to create the input file yourself. In theory, this shouldn't be too hard. Just have each row be a single SNP/kmer rather than a gene. Note that each variant has to be binary, so if you have SNPs with three (or more) alleles this complicates interpretations, particularly if they have differential effect on the outcome.\n- **A lot of my empirical p-values are identical. Bug?**\n\nNot really. In order to save time, Scoary calculates the empirical p-values as it goes through permutations. If it sees early on that a particular variant is not interesting (e.g. empirical p-value above 0.1) it does not waste any more resources on this variant. As a result, note that higher empirical p-values are less accurate (because they have been calculated from fewer permutations).\n- **Do I need to convert my gene_presence_absence.csv file into 1s and 0s rather than gene/locus_tag names?**\n\nNo. Scoary treats \"0\", \"-\" and \"\" as gene absence, anything else as presence. You should be able to feed the file directly from Roary. \n- **Can I use this for archea?**\n\nHonestly, I don't know enough about archea to say for sure.\n- **Can I use this for human/mouse/plant/fungus?**\n\nMost certainly not.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 35
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AdmiralenOla/Scoary"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/51000172"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/15772489/b026105a-2971-11e6-9d1e-da4035502869.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/19184086/c0488388-8c7b-11e6-99e0-7bca0a7ab6ed.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://sanger-pathogens.github.io/Roary/images/gene_presence_and_absence.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/15569716/8c66322a-2332-11e6-8500-5d27828417c7.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/15569715/8c61f962-2332-11e6-90e7-5c37976071c8.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/15708517/271bd3b2-27ff-11e6-9190-8c655622bbfd.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://cloud.githubusercontent.com/assets/14874487/15708516/271bf496-27ff-11e6-81d4-7309f2c274cc.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The easiest way to install Scoary is with the pip package manager:\n\n    pip install scoary\n        \nOR, if you need a local (user) installation:\n\n    pip install --user scoary\n    \nOR, to specify a local directory in your user installation:\n\n    pip install --user --install-option=\"--install-scripts=$HOME/bin\" scoary\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Legacy installation (Deprecated)",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Scoary is a standalone python script and does not require any installation. Simply download and extract the zip archive or clone the git repository:\n\n    git clone https://github.com/AdmiralenOla/Scoary\n\nand you're ready to use Scoary.\nIf you want to add it to your $PATH variable:\n\n    export PATH=\"/Path/to/Scoary:$PATH\"\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9968421379277024,
      "result": {
        "original_header": "What's new?",
        "type": "Text_excerpt",
        "value": "**LATEST VERSION - 1.6.16**\n- Bug fixes to vcf2scoary \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9543971386129229,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "_Source: http://sanger-pathogens.github.io/Roary/_ \nMake sure you know the delimiter in the file. (By default this is ','). Scoary needs to know. \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750504130906351,
      "result": {
        "original_header": "Missing data",
        "type": "Text_excerpt",
        "value": "Don't worry if you have not measured the phenotype for all your traits. From v1.6.9 on, Scoary can handle missing data. The missing values need to be specified as \"NA\", \".\" or \"-\". Note that Scoary does not actually specify any kind of uncertainty model for these missing values, it simply excludes them from further analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8296821122305116,
      "result": {
        "original_header": "Bugs",
        "type": "Text_excerpt",
        "value": "- Please report bugs here (Issues) or to me directly at olbb@fhi.no\n \n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bacteria, gene-presence-absence, genomics, gwas, pan-genome"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "Scoary is freely available under a GPLv3 license.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://omictools.com/img/logo-blue.png"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scoary"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "AdmiralenOla"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 158435,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AdmiralenOla",
          "type": "User"
        },
        "date_created": "2017-10-04T12:24:28Z",
        "date_published": "2016-11-28T09:29:24Z",
        "description": "v1.6.16 (Aug 2017)\r\n- Bug fixes to vcf2scoary\r\n\r\nv1.6.15 (Jul 2017)\r\n- Deleted a function that would prevent scoary from being installed through pip for some users\r\n\r\nv1.6.13 (Jul 2017)\r\n- Fixed a bug where Scoary would not handle converted VCF files due to different headers\r\n- Changed the parameters of --test\r\n- Fixed the GUI that was broken since 1.6.12 due to introduction of --include_input_columns\r\n- Include_input_columns now correctly handles the ALL keyword\r\n- Added the ExampleVCFTrait.csv file to test VCF functionality\r\n\r\nv1.6.12 (Jun 2017)\r\n- Convert VCF files to Roary/Scoary format, allowing analysis on a wide range of variants (SNPs, indels, structural variations etc)\r\n- Grab columns from the Roary input and put in the output (To get strain-specific protein names, for example)\r\n- Scoary now comes with a manual, located under docs/tex/scoary_manual.pdf\r\n- The log now includes the original command line\r\n\r\nv1.6.11 (Apr 2017)\r\n- Blank values in trait files will now correctly be read as missing. Fixes (#54)\r\n- Added --no_pairwise option for simple set differences / categorical enrichment analysis without causal hypothesis (As requested among others in (#53)\r\n- Modified GUI with no_pairwise and slightly modified look.\r\n- Added ExampleTree.nwk to exampledata\r\n- Added support for travis. (CI tests will be further developed)\r\n- Added example cases in README.md\r\n- Fixed broken links in README.md\r\n\r\nv1.6.10 (Jan 2017)\r\n- Scoary now creates a log file (both in terminal and GUI mode)\r\n- Fixed a bug where empirical p-values would exceed 1.0\r\n- Fixed a bug where Scoary would crash when pruning many isolates from the internally calculated phylogenetic tree\r\n\r\nv1.6.9 (Dec 2016)\r\n- Scoary now handles missing data specified in the traits file as \"NA\", \"-\" or \".\".\r\n- Now also handles missing isolates (rows) in the traits file.\r\n- Stylistic changes, including line lengths formats to conform with PEP8.\r\n\r\nv1.6.8 (29th Nov 2016)\r\n- Bugfix: Addition of numpy.float64 and long were causing problems on some systems. Now converted to float beforehand. (Fixes #43)\r\n\r\nv1.6.7 (28th Nov 2016)\r\n- Scoary article is now out! Updated Readme and citation.\r\n",
        "html_url": "https://github.com/AdmiralenOla/Scoary/releases/tag/v1.6.16",
        "name": "The holy handgrenade",
        "release_id": 4770683,
        "tag": "v1.6.16",
        "tarball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/tarball/v1.6.16",
        "type": "Release",
        "url": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4770683",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4770683",
        "zipball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/zipball/v1.6.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AdmiralenOla",
          "type": "User"
        },
        "date_created": "2016-11-09T14:56:43Z",
        "date_published": "2016-11-10T08:47:51Z",
        "description": "#CHANGELOG\nv1.6.6 (9th Nov 2016)\n- Changed citation.\n- Scoary is now available through Zenodo.\n\nv1.6.5 (25th Oct 2016)\n- Added the README_pypi.md file so that setup.py can be used to build/install locally if pip not installed.\n\nv1.6.4 (18th Oct 2016)\n- Made the permutations algorithm faster by implementing a dynamic cutoff\n\nv1.6.3 (14th Oct 2016)\n- Removed OR calculation from PhyloTree class\n- Now prints collapse option to stdout\n- Cleaned up threading method\n\nv1.6.2 (13th Oct 2016)\n- Collapsing correlated genes is now optional, controlled with the --collapse flag\n- Fixed a bug where the collapsing duplicated some genes\n- Collapsing is default to False in GUI mode\n\nv1.6.1 (7th Oct 2016)\n- Added a GUI, callable as scoary_GUI\n- Added post-analysis label-switching permutations, and the option to filter on empirical p-values\n- Added multiprocessing to speed up permutations\n- Added a second column in the phenotype exampledata\n- Adds an outdir option\n- Now available through PyPi\n\nv1.5.1 (22nd Sep 2016)\n- Users can now provide a custom tree that will be used for analysis instead of the internally calculated one.\n- Changed the way trees are written to file. Leaf nodes will no longer have \"double\" distance. The tree files are now also rooted, which allows them to be read by other software\n- Fixed some typos and added a lot of exception throwing for when the user is trying strange things, such as pointing to files that don't exist.\n",
        "html_url": "https://github.com/AdmiralenOla/Scoary/releases/tag/v1.6.6",
        "name": "Blind unicorn",
        "release_id": 4622082,
        "tag": "v1.6.6",
        "tarball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/tarball/v1.6.6",
        "type": "Release",
        "url": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4622082",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4622082",
        "zipball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/zipball/v1.6.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AdmiralenOla",
          "type": "User"
        },
        "date_created": "2016-09-14T10:18:55Z",
        "date_published": "2016-09-14T10:28:52Z",
        "description": "\"Slow loris\" is the latest Scoary release.\n\nv1.5.0 (13th Sep 2016)\n- Scoary is now installable via pip! (Thanks go to Anders Goncalves da Silva). The scoary.py script will now be deprecated, but is still available for legacy use. See [Installation](#installation)\n- The program now also prints out the filtration options being used for the current analysis.\n- Changes will now be in a dedicated changelog rather than in the readme.\n",
        "html_url": "https://github.com/AdmiralenOla/Scoary/releases/tag/v1.5.0",
        "name": "Slow loris",
        "release_id": 4128184,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4128184",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4128184",
        "zipball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AdmiralenOla",
          "type": "User"
        },
        "date_created": "2016-09-13T07:15:46Z",
        "date_published": "2016-09-08T08:33:12Z",
        "description": "v1.4.2 (13th Sep 2016)\n\n```\nFixed a bug that would cause Scoary to crash if ran without any -c options.\n```\n\nv1.4.1 (8th Sep 2016)\n\n```\nFixed a bug where results in the output file did not have quotes around them. This could interfere with annotations that have delimiters (like commas) in them.\n```\n\nv1.4.0 (7th Sep 2016)\n\n```\n-The correction options are now a lot more sophisticated, and allow multiple restrictions with individual p-values to be set.\n-Fixed a bug that would sometimes result in a too strict Bonferroni p-value in the results.\n-No-time now also applies to the reduced gene presence/absence file.\n-The results sorting now works a little differently. When using only pairwise comparisons filtering, results will be sorted by these p-values. When other filters (Individual, Bonferroni, Benjamini-Hochberg) are used, results will be sorted by these instead.\n-Fixed a bug where the program would crash if you specified a very large max_hits.\n-The citation option has been added, and includes a nifty ASCII logo.\n-Some optimization when using pairwise comparison to filter results.\n```\n\nv1.3.7 (2nd Sep 2016)\n\n```\n-The no-time argument can now be used to avoid output files (results and tree file) to come with a timestamp in the name. Should make it easier to implement Scoary in automated pipelines. (Credits: Marco Galardini)\n-Comma is now the default delimiter in input and output files. The user can specify another input/output delimiter with the delimiter argument. (Note that the two input files and the output files will all have the same delimiter)\n-Bug fixes that caused python3 problems in 1.3.6 (Credits: Marco Galardini)\n```\n\nv1.3.6 (28th Jul 2016)\n\n```\n-Simulated example data is included in the exampledata folder. This is primarily intended as a guide to how input files can look, as well as giving users a quick view at what the program can do. Running Scoary with the --test flag will overrun all other options (except --version) and automatically run the exampledata with default options.\n```\n",
        "html_url": "https://github.com/AdmiralenOla/Scoary/releases/tag/v1.4.2",
        "name": "Version 1.4.2 - Home laboratory",
        "release_id": 4078192,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4078192",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/4078192",
        "zipball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AdmiralenOla",
          "type": "User"
        },
        "date_created": "2016-07-05T12:25:25Z",
        "date_published": "2016-07-05T12:30:05Z",
        "description": "This is the pre-release version of Scoary.\n",
        "html_url": "https://github.com/AdmiralenOla/Scoary/releases/tag/v1.3.5",
        "name": "Morning glory",
        "release_id": 3588471,
        "tag": "v1.3.5",
        "tarball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/tarball/v1.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/3588471",
        "value": "https://api.github.com/repos/AdmiralenOla/Scoary/releases/3588471",
        "zipball_url": "https://api.github.com/repos/AdmiralenOla/Scoary/zipball/v1.3.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "- Python (Tested with versions 2.7, 3.4, 3.5, 3.6 and 3.6-dev)\n- [SciPy](http://www.scipy.org/install.html) (Tested with versions 0.16, 0.17, 0.18)\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "If you supply custom trees (Optional)",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- ete3\n- six\n\nNote that ete3 and six are not automatically installed. You can do `pip install ete3 six` to get them\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using the GUI (Optional)",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- Tkinter/ttk\n\nTkinter/ttk is already part of most python distributions. If you lack it consider getting Homebrew/Linuxbrew and running `brew install python --with-tcl-tk`\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contributors",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:32:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 149
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "    scoary -g <gene_presence_absence.csv> -t <traits.csv>\n    "
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using the GUI",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Those allergic to command line usage might want to use\n\n    scoary_GUI\n\nto bring up a graphical interface. It is fairly intuitive, has a progress bar and can show you an example. Note that if you use the GUI Scoary will be much slower than usual (especially of you are doing lots of permutations), so it is not recommended for users that are proficient in command line usage.\n\n![Scoary GUI](https://cloud.githubusercontent.com/assets/14874487/19184086/c0488388-8c7b-11e6-99e0-7bca0a7ab6ed.png)\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Legacy usage (Deprecated)",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "    scoary.py -g <gene_presence_absence.csv> -t <traits.csv>\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Converting VCF files to use as Scoary input",
        "parent_header": [
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "From version 1.6.12, Scoary has a function for converting VCF files to the Roary/Scoary format. This allows you to use a wide range of variants (e.g SNPs, indels, structural variants etc) in your input. The script can be run using the following command:\n  \n    vcf2scoary myvariants.vcf\n\nThe current vcf2scoary script is a beta version, and may not correctly handle every VCF file. (Please report bugs!)\n\nYou can extract specific variant types (e.g. snps, indels, complex etc) using the --types argument. (This requires that TYPE=XX is defined in the INFO column of the vcf file.) The following command line would for example extract all snp, mnp and complex types.\n\n    vcf2scoary --types snp,mnp,complex myvariants.vcf\n\nNote that Scoary simplifies analysis for variants with more than 2 alleles. Rather than comparing all possible contrasts, it compares each non-reference with the reference. Say for example that 4 different alleles exist at a known SNP site. Let's call them A, C, G, and T, and let A be the reference allele. (The reference category is always inferred from the VCF file). This allele can be encoded in a single line in a VCF file, but in the Scoary format it needs to be spread over 3 different lines. (One for each contrast to the reference, i.e. A vs C, A vs G, and A vs T). Thus, not every possible contrast is tested in the association analysis! It is for example possible that there is a real difference in phenotype between G and T, but this contrast is not tested.\n\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example data",
        "type": "Text_excerpt",
        "value": "In the exampledata folder you can see an example of how the input files would typically look. This simulated and completely fictitious data set consists of 100 isolates with around 3000 core genes and a total pan-genome of around 9000 genes. \n\nHere I have used tetracycline resistance as the phenotype for which we would like to know the genetic basis. In this example, only a single gene controls the expression of tetracycline resistance, although the penetrance of the gene is not 100% (i.e. isolates can have the gene and still be susceptible towards tetracycline), and other, unmeasured factors (for example point mutations) can also induce resistance.\n\nFor demonstration purposes I have also included a second phenotype, called Bogus, which has been generated completely at random, and so doesn't have any association to any of the genes in the gene presence/absence file.\n\nThis particular example very clearly identifies the causal gene (looking at the pairwise comparison p-values), whereas in real experiments the results are sometimes a lot messier.\n\nRunning Scoary with the --test flag is equivalent to the following command:\n```\npython ./scoary.py -t ./exampledata/Tetracycline_resistance.csv -g ./exampledata/Gene_presence_absence.csv -u -c I EPW\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Below are presented some popular use cases with examples of how to run and interpret results.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Resistance towards an antibiotic compund in Mycobacterium abscessus",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "A user wanted to screen for possible genetic causes of resistance towards a new antibiotic in Mycobacterium abscessus. One hypothesis was that the resistance could be related to a truncated form of a gene. In this experiment, the user had classified the resistance pattern as (S)usceptible, (I)ntermediate and (R)esistant. This information was coded into the traits file as dummy variables, e.g. the first trait was SI_vs_R and the second was S_vs_IR.\n\nMycobacterium abscessus contains numerous subspecies, and the user wanted to test only M. abscessus ss abscessus. The Roary output additionally contained other subspecies, such as M. abscessus ss masiliense. To avoid altering the Roary file, a csv was made containing the names of all isolates that were M. abscessus ss abscessus. To write a separate gene presence/absence file from only these isolates (and to speed up analysis), the -w parameter was used.\n\nA high number of isolates was used in the experiment, and it was therefore decided to set the significance threshold high (i.e. require low p-values). The experiment was interested in causal mutations, so pairwise comparisons had to be used. (Population structure could be a major confounder). It was decided to require that the entire range of pairwise comparison values should be < 1E-4. Additionally, after 10.000 permutations the input configuration should be in the top 0.1 percentile. (Among 10.000 randomly permuted datasets, no more than 9 were allowed to have a even higher number of contrasting pairs for a gene to be included in results).\n\nA ML phylogeny was built with a dedicated tree program and provided as a custom tree.\n\nFinally, since it was possible that the resistance determinant was inherited as a set of genes (such as a plasmid), the --collapse flag was used to collapse genes with identical distribution patterns.\n\nThe analysis was run with the following command:\n```\nscoary -t Resistancefile -g Gene_presence_absence.csv -p 1E-4 1E-3 -c EPW P -e 10000 -w -r OnlyAbscessusIsolates.csv --collapse -n raxmltree.nwk\n```\nResults showed that the top two hits were different alleles of the same gene, one positively and one negatively associated with the trait. (The two alleles were different enough to not be clustered as the same by Roary). The interpretation was that this gene was likely to play a role in the resistance pattern.\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Enrichment of genes in select host groups",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Another user had a high number of E. coli isolated from different hosts, and wanted to know which genes were enriched in which host groups. In this case, Scoary was not used to infer causal association, but simply to discover trends in different sets. The input trait file consisted of dummy variable memberships to different host groups, reminiscent of the below table:\n\n|   | Cattle | Human | Sheep | Food |\n| - | ------ | ----- | ----- | ---- |\n| Ecoli1 | 1 | 0 | 0 | 0 |\n| Ecoli2 | 0 | 1 | 0 | 0 |\n| Ecoli3 | 0 | 1 | 0 | 0 |\n\nHere, the user is not trying to infer which genes \"cause\" membership in a group, just which genes are overrepresented. Therefore, the --no_pairwise flag was used. The Benjamini-Hochberg adjusted p-value was used to only show the genes most overrepresented in a specific host group\n\nThe analysis was run with the following command:\n```\nscoary -g gene_presence_absence.csv -t Hostgroup_membership.csv -p 1E-5 -c BH --no_pairwise\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. SNPs linked to penicillin resistance in Neisseria meningitidis",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "For population structure-aware association analysis to work, it is imperative to work on trees that best represent the genealogy of the input sample. Due to the high frequency of recombination in Neisseria meningitidis, the internal tree builder in Scoary is likely to perform poorly. In this case (actually, in almost any case) it would be advisable to use a dedicated tree program and provide this to Scoary instead. There are now many programs that can produce phylogenetic trees where only the clonally evolved patterns are retained (i.e. \"free\" from the obfuscating effects of recombination). Some examples are [Gubbins](https://sanger-pathogens.github.io/gubbins), [ClonalFrameML](https://github.com/xavierdidelot/ClonalFrameML) and [BRATNextGen](http://www.helsinki.fi/bsg/software/BRAT-NextGen).\n```\nscoary -g gene_presence_absence.csv -t penicillinres.csv -n clonaltree.nwk\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AdmiralenOla/Scoary/master/README.md",
      "technique": "header_analysis"
    }
  ]
}