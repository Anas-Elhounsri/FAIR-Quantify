{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jyyu/ScreenBEAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-07-13T13:42:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-23T10:10:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene-level meta-analysis of high-throughput functional genomics (RNAi or CRISPR) screens."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9983921357204492,
      "result": {
        "original_header": "ScreenBEAM",
        "type": "Text_excerpt",
        "value": "[ScreenBEAM](https://github.com/jyyu/ScreenBEAM) is an [R](http://www.r-project.org) package to do gene-level meta-anlaysis of high-throughput functional genomics RNAi or CRISPR screening data. Both microarray and NGS data are supported. f you find this package useful, please cite the following paper: \n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/jyyu/ScreenBEAM/wiki"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jyyu/ScreenBEAM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jyyu/ScreenBEAM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jyyu/ScreenBEAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ScreenBEAM"
        ],
        "type": "Text_excerpt",
        "value": "Install ScreenBEAM from its\n[GitHub repository](https://github.com/jyyu/ScreenBEAM). You first need to install [devtools](https://github.com/hadley/devtools) package.\n\n```r\ninstall.packages(c(\"devtools\"))\n```\n\nInstall required Biobase package from Bioconductor.\n```r\nsource(\"http://bioconductor.org/biocLite.R\")\nbiocLite(\"Biobase\")\n```\n\nThen install R/ScreenBEAM using the `install_github` function in the\n[devtools](https://github.com/hadley/devtools) package.\n\n```r\nlibrary(devtools)\ninstall_github(\"jyyu/ScreenBEAM\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999805793866062,
      "result": {
        "original_header": "Input file format",
        "type": "Text_excerpt",
        "value": "- [NGS count data] (https://github.com/jyyu/ScreenBEAM/blob/master/inst/extdata/NGS.example.tsv)\n- [Microarray log2-transformed data] (https://github.com/jyyu/ScreenBEAM/blob/master/inst/extdata/microarray.example.tsv) \n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9750362741817413,
      "result": {
        "original_header": "Google discussion group",
        "type": "Text_excerpt",
        "value": "https://groups.google.com/d/forum/screenbeam \n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8096845015296884,
      "result": {
        "original_header": "Input file format",
        "type": "Text_excerpt",
        "value": "Input file format for ScreenBEAM is tab-separated text file with \"sh/sgRNA_Id\", \"gene id or symbol\" as the first two columns, followed by the samples. Examples are below: \n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jyyu/ScreenBEAM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License\n\nCopyright (c) 2012-2015. Jiyang Yu.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/LICENCE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licenses",
        "parent_header": [
          "ScreenBEAM"
        ],
        "type": "Text_excerpt",
        "value": "Licensed under the [MIT license](LICENCE). ([More information here](http://en.wikipedia.org/wiki/MIT_License).)\n\n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ScreenBEAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jyyu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 44825,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:04:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example use",
        "parent_header": [
          "ScreenBEAM"
        ],
        "type": "Text_excerpt",
        "value": "Try the following example to apply ScreenBEAM on NGS or microarry data. A data.frame with all statistical results is returned.\n\n```r\nlibrary(ScreenBEAM)\n\n###NGS data\nr<-ScreenBEAM(\n\n  ###input format\n  input.file=system.file(\"extdata\", \"NGS.example.tsv\", package = \"ScreenBEAM\")#tab-separted file\n  ,\n  control.samples=c('T0_A','T0_B','T0_C')#column names of control samples\n  ,\n  case.samples=c('T16_A','T16_B','T16_C')#column names of case/treated samples\n  ,\n  control.groupname='T0'#name your control group\n  ,\n  case.groupname='T16'#name your case group\n  ,\n\n  ###data pre-processing\n  data.type='NGS'#data type\n  ,\n  do.normalization=TRUE\n  ,\n  filterLowCount=TRUE\n  ,\n  filterBy = 'control'\n  ,\n  count.cutoff=4\n  ,\n\n  ###Bayesian computing\n  nitt=1500,#number of MCMC iterations, use small number here for testing, please use larger number in real data, 15000 is default\n  burnin=500#number of burnin in MCMC sampling, 5000 is default\n\n  )\n\n\n###microarray data\nr<-ScreenBEAM(\n\n  ###input format\n  input.file=system.file(\"extdata\", \"microarray.example.tsv\", package = \"ScreenBEAM\")#tab-separted file\n  ,\n  control.samples=c('T0_A','T0_B','T0_C')#column names of control samples\n  ,\n  case.samples=c('T16_A','T16_B','T16_C')#column names of case/treated samples\n  ,\n  control.groupname='T0'#name your control group\n  ,\n  case.groupname='T16'#name your case group\n  ,\n\n  ###data pre-processing\n  data.type='microarray'#data type\n  ,\n  do.normalization=FALSE#assuming the microarry data is normalized\n  ,\n\n  ###Bayesian computing\n  nitt=1500,#number of MCMC iterations, use small number here for testing, please use larger number in real data, 15000 is default\n  burnin=500#number of burnin in MCMC sampling, 5000 is default\n\n)\n\nhead(r)\n\n###save your results\nwrite.csv(r,file=file.path('results.ScreenBEAM.csv'),row.names=FALSE,na='')\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jyyu/ScreenBEAM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}