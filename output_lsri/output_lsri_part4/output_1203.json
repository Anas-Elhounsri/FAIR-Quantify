{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mzdb/pwiz-mzdb"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Project contributors",
        "parent_header": [
          "pwiz-mzdb"
        ],
        "type": "Text_excerpt",
        "value": "<div>\n<a href=\"http://www.profiproteomics.fr\" target=\"_blank\" ><img src=\"http://www.profiproteomics.fr/wp-content/uploads/2017/05/logo-profi.png\" alt=\"ProFI\" width=\"200\" />\n</a>\n<br/>\n</div>\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-03-04T14:04:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-07T03:21:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An extension of the ProteoWizard framework enabling the support of the mzDB format"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9371282376388925,
      "result": {
        "original_header": "pwiz-mzdb",
        "type": "Text_excerpt",
        "value": "Raw2MzDB is an extension of the ProteoWizard framework enabling the support of the mzDB format.\nThe current stable version is 0.9.10. \nFor details about mzDB concepts (scanSlice, runSlice...) and specifications, have a look to the [related repository](http://github.com/mzdb/mzdb-specs).\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9800183541061384,
      "result": {
        "original_header": "Supported file formats",
        "type": "Text_excerpt",
        "value": "Raw2MzDB currently supports the following formats:\n* Thermo Raw files\n* AB Sciex Wiff files\n* Bruker Baf files (warning: conversion of profile spectra into fitted mode does not work well, please avoid it for the moment)\n* mzML files (warning: conversion of profile spectra into fitted mode does not work well, please avoid it for the moment)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9514147091808445,
      "result": {
        "original_header": "Roadmap v1.0",
        "type": "Text_excerpt",
        "value": "New features:\n- [x] Add an option to filter spectra upon retention time (RT range) (#41)\n- [ ] Restore the mzDB2mzML.exe (#42) \nImprovements\n- [ ] Add acquisition method parameters for AB Sciex and Bruker data (#43)\n- [ ] Add FK constraints (set \"PRAGMA foreign_keys = ON\" after sqlite3_open) + see \"DEFERRABLE INITIALLY DEFERRED\" change below (#44)\n- [ ] Evaluate the performance benefits of \"PRAGMA optimize;\" (https://sqlite.org/pragma.html#pragma_optimize)\n- [ ] Better support of mzML files  (#63)\n- [x] Update ProteoWizard libraries (#45)\n- [x] Update SQLite library (#46) \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.944304693631091,
      "result": {
        "original_header": "Roadmap Other",
        "type": "Text_excerpt",
        "value": "- [ ] Linux build for \"mzML -> mzDB\" and \"Thermo RAW file -> mzDB\" (#56)\n- [ ] ~~add missing CvTerms~~ (not present in Pwiz Msdata object, neither in converted mzML files) compare a mzML from mzDB and mzML from raw file (#58)\n- [ ] Implement an mzDB validator using mzDB-access (#59)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9836722189627524,
      "result": {
        "original_header": "Roadmap v0.9.10",
        "type": "Text_excerpt",
        "value": "Bug fixes:\n- [x] Issue #24 sample name is empty for AB Sciex analyses (also check for Bruker)\n- [x] Issue #26 is for AB Sciex DIA acquisition (and accession 1001954)\n- [x] Issue #38: Find and fix memory leak for AB Sciex data\n- [x] Issue #39: The field mzdb.param_tree can be corrupted for some Thermo raw files\n- [x] Issue #57: Check MS3 analyses\n- [x] Issue #60: Missing spectra in some mzDB files\n- [x] Issue #61: Problem with DIA analyses \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9790730202651229,
      "result": {
        "original_header": "Release 0.9.9",
        "type": "Text_excerpt",
        "value": "New features:\n- [x] FITTED mode is fully functional for Thermo, AB Sciex and Bruker analysis\n- [x] Safe mode added : fall back to centroid if requested mode is not possible (ie. centroid -> profile)\n- [x] --cycles option in the command line to convert a subset of the input file\n- [x] Build number is added\n- [x] add an \"--log\" option to write logs to a file and/or to the console\n- [x] add an option to display version information (-v or --version) \nImprovements\n- [x] Using QTofPeakpicker algorithm for AB Sciex data\n- [x] Added a summary at the end of the conversion\n- [x] --dia option has been replaced by -a or --acquisition option, user can tell if the analysis is DDA, DIA or let the converter determine it\n- [x] Better input and output file verification (convert AB Sciex data by calling .wiff or .wiff.scan files, convert Bruker data by calling .d directory)\n- [x] Added some dlls to avoid Visual C++ pre-requisites \nBug fixes:\n- [x] Wrong data peak count\n- [x] Algorithm to check DDA/DIA is now working on Thermo, AB Sciex and Bruker analysis\n- [x] mzML file support is improved\n- [x] fixed encoding issue with low resolution spectra\n- [x] fixed encoding issue with NO_LOSS option\n- [x] remove some temporary files after compiling\n- see issues for more informations\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.915398157481706,
      "result": {
        "original_header": "Release 0.9.8",
        "type": "Text_excerpt",
        "value": "Improvements\n- [x] reduced time of spectrum table loading (table records stored at the end of the file)\n- [x] improvements in exception catching\n- [x] new columns 'mz_precision' ansd 'intensity_precision' in data-encoding table (instead of param-tree)\n- [x] insert only used data-encoding\n- [x] update proteowizard to the latest \nBug fixes:\n- [x] Wrong encoding for HCD spectra (32 instead of 64 bits)\n- See fixed [issues](https://github.com/mzdb/pwiz-mzdb/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed) for more information\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9269936639306118,
      "result": {
        "original_header": "Build from command line",
        "type": "Text_excerpt",
        "value": "In order to build with *bjam*:\n* Unzip pwiz-mzdb-lib.zip file (containing project dependencies as static compiled libraries) located in <code>project_root/pwiz_mzdb/mzdb/lib</code> directory.\n* Then run the script *raw2mzDB_quickbuild.bat* from the project root\n* Or else, run the following command from the project root: <br/>\n<code>quickbuild -j8 toolset=msvc-12.0 address-model=64 pwiz_mzdb --i-agree-to-the-vendor-licenses --incremental</code>\n* *--incremental* is not mandatory but it speeds up the compilation process \n**raw2mzdb.exe** file is generated in :\n<code>project_root/pwiz_mzdb/target</code>\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9302554979482665,
      "result": {
        "original_header": "Debug raw2mzDB",
        "type": "Text_excerpt",
        "value": "To debug raw2mzDB, you first need to compile it with debug symbols. To do so, open the raw2mzDB_quickbuild.bat script and set *debug-symbols=on*\nOr just run quickbuild.bat with this argument correctly set. This should create a raw2mzDB.pdb file in the target directory.\nUsing this raw2mzDB.pdb file, you can use a debugging tool such as MTuner.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8909311832642501,
      "result": {
        "original_header": "Iterate through spectra",
        "type": "Text_excerpt",
        "value": "To iterate over all spectra, simply do the following:\n```C++\n//build a mzdbfile\nMzDBFile mzdb(filename);\n\nmzDBReader reader(mzdb); //build a mzdbreader object\nMSData msdata; // build empty Pwiz msdata object\n\n// the following will build a custom SpectrumList, ready for iteration\nreader.readMzDB(msdata);\n\nSpectrumListPtr sl = msdata.run.spectrumListPtr; // fetch spectrumList\nfor (size_t i=0; i < sl.size(); ++i) {\n\t// fetch spectrum, second argument is for getting or not (i.e. fetch only metadata) \n\t// spectrum data points, it has no effect on the actual implementation, always \n\t// return a spectrum with mz/intensity arrays\n\tSpectrumPtr s = sl.spectrum(i, true);\n\t\n\t//...do something else\n}\n```\n \nWarning: this is not suitable for accessing only one random spectrum. User may use the 'getSpectrum' function instead.\n\t \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/mzdb/pwiz-mzdb/wiki"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and setup",
        "parent_header": [
          "pwiz-mzdb",
          "Users",
          "Convert vendor raw files into mzDB files"
        ],
        "type": "Text_excerpt",
        "value": "* Download the <a href=\"https://github.com/mzdb/pwiz-mzdb/releases/download/0.9.10/raw2mzDB_0.9.10_build20170802.zip\">zip archive</a>\n* Raw2mzDB should work on any modern 64 bits Windows environment. If you encounter missing dlls issues, you may try to install Microsoft's .NET Framework 3.5 SP1 and 4.0. Also consider Visual C++ Redistributable for Visual Studio 2008, 2012 and 2013.\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mzdb/pwiz-mzdb/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mzdb/pwiz-mzdb"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pwiz-mzdb"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/quickbuild.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz_mzdb/mzdb/lib/snappy/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz_mzdb/mzdb/lib/snappy/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz/analysis/eharmony/scripts/eharmonyAnalyser.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz/analysis/eharmony/scripts/make_rocs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz/analysis/eharmony/scripts/make_input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz/analysis/eharmony/scripts/mergePepXML.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/boost-build/src/engine/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/freetype-2.4.7/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/freetype-2.4.7/builds/atari/gen-purec-patch.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/freetype-2.4.7/builds/unix/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/test-pngvalid-full.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/test-pngtest.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/test-pngvalid-simple.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/contrib/pngminus/pnm2png.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/contrib/pngminus/pngminus.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/libpng-1.5.6/contrib/pngminus/png2pnm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/expat-2.0.1/conftools/get-version.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/libraries/expat-2.0.1/conftools/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/pwiz_aux/sfcap/old/rtapprox/batch-tabs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and setup",
        "parent_header": [
          "pwiz-mzdb",
          "Users",
          "Convert vendor raw files into mzDB files"
        ],
        "type": "Text_excerpt",
        "value": "* Download the <a href=\"https://github.com/mzdb/pwiz-mzdb/releases/download/0.9.10/raw2mzDB_0.9.10_build20170802.zip\">zip archive</a>\n* Raw2mzDB should work on any modern 64 bits Windows environment. If you encounter missing dlls issues, you may try to install Microsoft's .NET Framework 3.5 SP1 and 4.0. Also consider Visual C++ Redistributable for Visual Studio 2008, 2012 and 2013.\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IDE setup",
        "parent_header": [
          "pwiz-mzdb",
          "Developers"
        ],
        "type": "Text_excerpt",
        "value": "* Visual Studio: not very well tested.\n* QtCreator: importing project with existing sources (from the menu), will provide decent code completion.\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8828530290390184,
      "result": {
        "original_header": "Roadmap Other",
        "type": "Text_excerpt",
        "value": "- [ ] Linux build for \"mzML -> mzDB\" and \"Thermo RAW file -> mzDB\" (#56)\n- [ ] ~~add missing CvTerms~~ (not present in Pwiz Msdata object, neither in converted mzML files) compare a mzML from mzDB and mzML from raw file (#58)\n- [ ] Implement an mzDB validator using mzDB-access (#59)\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999974575191031,
      "result": {
        "original_header": "Build from command line",
        "type": "Text_excerpt",
        "value": "The current project uses the MSVC compiler provided in the \"Visual Studio Express 2013 for Windows desktop\".\nCompilation on Linux may require some code corrections for the moment. We plan to be cross-platform some day. \nAfter installing Visual Studio, check following points : \n- Visual Studio path is added to system environment path : *C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin* \n- If you are using 64-bit operating system : allow the cross compilation : \n\t- open commandline : Win+R, type *cmd*\n\t- go to *Microsoft Visual Studio 12.0\\VC* : <code>cd C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC</code>\n\t- execute <code>vcvarsall.bat x86_amd64</code> , you should have <code>Setting environment for using Microsoft Visual Studio 2013 x64 cross tools.</code> message.  \nIn order to build with *bjam*:\n* Unzip pwiz-mzdb-lib.zip file (containing project dependencies as static compiled libraries) located in <code>project_root/pwiz_mzdb/mzdb/lib</code> directory.\n* Then run the script *raw2mzDB_quickbuild.bat* from the project root\n* Or else, run the following command from the project root: <br/>\n<code>quickbuild -j8 toolset=msvc-12.0 address-model=64 pwiz_mzdb --i-agree-to-the-vendor-licenses --incremental</code>\n* *--incremental* is not mandatory but it speeds up the compilation process \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999712039893297,
      "result": {
        "original_header": "Debug raw2mzDB",
        "type": "Text_excerpt",
        "value": "To debug raw2mzDB, you first need to compile it with debug symbols. To do so, open the raw2mzDB_quickbuild.bat script and set *debug-symbols=on*\nOr just run quickbuild.bat with this argument correctly set. This should create a raw2mzDB.pdb file in the target directory.\nUsing this raw2mzDB.pdb file, you can use a debugging tool such as MTuner.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.872102032357885,
      "result": {
        "original_header": "Iterate through spectra",
        "type": "Text_excerpt",
        "value": "To iterate over all spectra, simply do the following:\n```C++\n//build a mzdbfile\nMzDBFile mzdb(filename);\n\nmzDBReader reader(mzdb); //build a mzdbreader object\nMSData msdata; // build empty Pwiz msdata object\n\n// the following will build a custom SpectrumList, ready for iteration\nreader.readMzDB(msdata);\n\nSpectrumListPtr sl = msdata.run.spectrumListPtr; // fetch spectrumList\nfor (size_t i=0; i < sl.size(); ++i) {\n\t// fetch spectrum, second argument is for getting or not (i.e. fetch only metadata) \n\t// spectrum data points, it has no effect on the actual implementation, always \n\t// return a spectrum with mz/intensity arrays\n\tSpectrumPtr s = sl.spectrum(i, true);\n\t\n\t//...do something else\n}\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://www.profiproteomics.fr/wp-content/uploads/2017/05/logo-profi.png"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pwiz-mzdb"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "mzdb"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 127085118,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 29845871,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1422620,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1157914,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1030866,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 355092,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 251021,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 136695,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "DIGITAL Command Language",
        "size": 51672,
        "type": "Programming_language",
        "value": "DIGITAL Command Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 42353,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 42146,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Awk",
        "size": 34738,
        "type": "Programming_language",
        "value": "Awk"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 29714,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Yacc",
        "size": 19623,
        "type": "Programming_language",
        "value": "Yacc"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 12785,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Gherkin",
        "size": 10551,
        "type": "Programming_language",
        "value": "Gherkin"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "size": 5653,
        "type": "Programming_language",
        "value": "C#"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Gnuplot",
        "size": 4565,
        "type": "Programming_language",
        "value": "Gnuplot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 4312,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Module Management System",
        "size": 4155,
        "type": "Programming_language",
        "value": "Module Management System"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1340,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "XSLT",
        "size": 759,
        "type": "Programming_language",
        "value": "XSLT"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sed",
        "size": 236,
        "type": "Programming_language",
        "value": "sed"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Assembly",
        "size": 172,
        "type": "Programming_language",
        "value": "Assembly"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C++",
        "size": 31,
        "type": "Programming_language",
        "value": "Objective-C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "IDL",
        "size": 15,
        "type": "Programming_language",
        "value": "IDL"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexandreBurel",
          "type": "User"
        },
        "date_created": "2017-08-02T10:09:49Z",
        "date_published": "2017-04-24T15:05:50Z",
        "description": "This release mostly contains bug fixes since last version\r\nIt should also be the last 0.9.x version",
        "html_url": "https://github.com/mzdb/pwiz-mzdb/releases/tag/0.9.10",
        "name": "v0.9.10",
        "release_id": 6169792,
        "tag": "0.9.10",
        "tarball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/tarball/0.9.10",
        "type": "Release",
        "url": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/6169792",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/6169792",
        "zipball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/zipball/0.9.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AlexandreBurel",
          "type": "User"
        },
        "date_created": "2016-11-29T12:43:36Z",
        "date_published": "2016-07-29T09:08:58Z",
        "description": "See the <a href=\"https://github.com/mzdb/pwiz-mzdb/blob/master/README.md\">Readme</a> to see what is new in this release and what is planned in the roadmap.\r\nThe main improvement is the support of Thermo, AB Sciex and Bruker analyses in all three modes (PROFILE, CENTROID and FITTED)\r\n",
        "html_url": "https://github.com/mzdb/pwiz-mzdb/releases/tag/v0.9.9",
        "name": "v0.9.9",
        "release_id": 3768284,
        "tag": "v0.9.9",
        "tarball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/tarball/v0.9.9",
        "type": "Release",
        "url": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/3768284",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/3768284",
        "zipball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/zipball/v0.9.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jerkos",
          "type": "User"
        },
        "date_created": "2015-05-21T11:26:34Z",
        "date_published": "2015-06-08T13:11:53Z",
        "description": "See the corresponding [Readme](https://github.com/mzdb/pwiz-mzdb/blob/master/README.md) to see what is new in this release and what is planned in the roadmap.\n\n**The first archive (pwiz-mzdb-0.9.8.zip) contains raw2mzDB.exe 0.9.8 release**.\n\nThis release contains a zip file containing pwiz mzDB static libs dependancies (essentially math libraries). They are useful only for compiling pwiz-mzdb. You only have to unzip this file in the <code>project_root/pwiz_mzdb/mzdb/lib</code>.Then run the following command:\n\n<code>quickbuild -j8 address-model=64 pwiz_mzdb --i-agree-to-the-vendor-licenses</code>.\n",
        "html_url": "https://github.com/mzdb/pwiz-mzdb/releases/tag/v0.9.8",
        "name": "v0.9.8",
        "release_id": 1322157,
        "tag": "v0.9.8",
        "tarball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/tarball/v0.9.8",
        "type": "Release",
        "url": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/1322157",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/1322157",
        "zipball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/zipball/v0.9.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mzdb",
          "type": "Organization"
        },
        "date_created": "2014-03-13T08:46:50Z",
        "date_published": "2014-03-13T08:57:38Z",
        "description": "pwiz_mzdb_0.9.7-beta.1 binaries compiled for windows x86_64.\nZip file contains the main exectuable (raw2mzDB.exe) to convert Thermo rawfiles and ABI rawfiles to mzDB.\n",
        "html_url": "https://github.com/mzdb/pwiz-mzdb/releases/tag/v0.9.7-beta.1",
        "name": "v0.9.7-beta.1",
        "release_id": 221881,
        "tag": "v0.9.7-beta.1",
        "tarball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/tarball/v0.9.7-beta.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/221881",
        "value": "https://api.github.com/repos/mzdb/pwiz-mzdb/releases/221881",
        "zipball_url": "https://api.github.com/repos/mzdb/pwiz-mzdb/zipball/v0.9.7-beta.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Iterate through run slices",
        "parent_header": [
          "pwiz-mzdb",
          "Developers",
          "HOW TO ?"
        ],
        "type": "Text_excerpt",
        "value": "Not yet implemented. You can only extract one runSlice at a time for the moment:\n\n```C++\nMzDBFile mzdb(filename);\n\nmzDBReader reader(mzdb); //build a mzdbreader object\nMSData msdata; // build empty Pwiz msdata object\n\nreader.readMzDB(msdata);\nvector<mzScan*> results; // mzScan is a simple object containing vector members 'mz' and 'intensities'\nreader.extractRunSlice(mzmin, mzmax, msLevel, results);\n```\n\nThis feature is already implemented in the java reader mzDBAccess\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contact",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:21:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line usage",
        "parent_header": [
          "pwiz-mzdb",
          "Users",
          "Convert vendor raw files into mzDB files"
        ],
        "type": "Text_excerpt",
        "value": "Open a command line window in the directory containing raw2mzdb.exe then type: \n\n**raw2mzdb.exe -i \\<rawfilename\\> -o \\<outputfilename\\>**\n\nExample:\n**raw2mzdb.exe -i \"D:\\myfile.raw\" -o \"D:\\myfile.mzDB\"**\n\nBy defaut, the raw file will be converted in the \"fitted\" mode for the MS1 (MS2 is often in centroid mode and can not be converted in fitted mode). If the MS2 (or superior) are acquired in high resolution (i.e in profile mode), you could specify that you want to convert specific MS levels in the required mode:\n\n**raw2mzdb.exe -i \\<rawfilename\\> -o \\<outputfilename\\> -f 1-2** will try to convert MS and MS/MS spectra in fitted mode.\n\nThere are two other available conversion modes:\n* \"profile\", the command line is then: **raw2mzdb.exe -i \\<rawfilename\\> -o \\<outputfilename\\> -p 1** (means you want profile mode for MS1, other MS levels will be stored as they were stored in the raw file)\n* \"centroid\" : **raw2mzdb.exe -i \\<rawfilename\\> -o \\<outputfilename\\> -c 1** (means you want centroid mode for MS1, other MS levels will be stored as they were stored in the raw file)\n\n**Complete list of parameters:**\n\n```\nusage: raw2mzDB.exe --input filename <parameters>\n\nOptions:\n\n\t-i, --input : specify the input rawfile path\n\t-o, --output : specify the output filename\n\t-c, --centroid : centroidization, eg: -c 1 (centroidization msLevel 1) or -c 1-5 (centroidization msLevel 1 to msLevel 5) \n\t-p, --profile : idem but for profile mode \n\t-f, --fitted : idem buf for fitted mode \n    -T, --bbTimeWidth : bounding box width for ms1 in seconds, default: 15s for DDA, 60s for DIA\n    -t, --bbTimeWidthMSn : bounding box width for ms > 1 in seconds, default: 0s for DDA, 75s for DIA\n    -M, --bbMzWidth : bounding box height for ms1 in Da, default: 5Da for DDA and DIA\n    -m, --bbMzWidthMSn : bounding box height for msn in Da, default: 10000Da for DDA, 20Da for DIA\n\t-a, --acquisition : dda, dia or auto (converter will try to determine if the analysis is DIA or DDA), default: auto\n    --noLoss : if present, leads to 64 bits conversion of mz and intenstites (larger ouput file)\n \t--cycles : only convert the selected range of cycles, eg: 1-10 (first ten cycles) or 10- (from cycle 10 to the end) ; using this option will disable progress information\n\t-s, --safeMode : use centroid mode if the requested mode is not available\n    --log : console, file or both (log file will be put in the same directory as the output file), default: console\n    -v, --version: display version information\n\t-h --help : show help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mzdb/pwiz-mzdb/master/README.md",
      "technique": "header_analysis"
    }
  ]
}