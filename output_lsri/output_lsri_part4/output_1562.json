{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jaechanglim/CVAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-04T03:40:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-31T01:49:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "github for \"Molecular generative model based on conditional variational autoencoder for de novo molecular design\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8325005690633961,
      "result": {
        "type": "Text_excerpt",
        "value": "github for \"Molecular generative model based on conditional variational autoencoder for de novo molecular design\" \n1. Fisrt, you need to prepare file containing smiles. each line of the file is smiles of a molecule (please see smiles.txt in this repo)\n2. Calculate properties of molecules using following command\n```\npython cal_prop.py --input_filename=smiles.txt --output_filename=smiles_prop.txt\n```\n3. You can train a model using following command\nBASH2*\n4. After trining a model, you can generate molecules with desirable properties. Suppose you want to generate molecules whoe MW=300, LogP=4, and TPSA=100, then the command is following:\nBASH3*\nThe result will be written in result.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jaechanglim/CVAE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jaechanglim/CVAE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jaechanglim/CVAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/figure.png"
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9581069322208046,
      "result": {
        "type": "Text_excerpt",
        "value": "https://jcheminf.biomedcentral.com/articles/10.1186/s13321-018-0286-7 \nhttps://arxiv.org/abs/1806.05805 \n1. Fisrt, you need to prepare file containing smiles. each line of the file is smiles of a molecule (please see smiles.txt in this repo)\n2. Calculate properties of molecules using following command\n```\npython cal_prop.py --input_filename=smiles.txt --output_filename=smiles_prop.txt\n```\n3. You can train a model using following command\nBASH2*\n4. After trining a model, you can generate molecules with desirable properties. Suppose you want to generate molecules whoe MW=300, LogP=4, and TPSA=100, then the command is following:\nBASH3*\nThe result will be written in result.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8774854946030882,
      "result": {
        "type": "Text_excerpt",
        "value": "1. Fisrt, you need to prepare file containing smiles. each line of the file is smiles of a molecule (please see smiles.txt in this repo)\n2. Calculate properties of molecules using following command\n```\npython cal_prop.py --input_filename=smiles.txt --output_filename=smiles_prop.txt\n```\n3. You can train a model using following command\nBASH2*\n4. After trining a model, you can generate molecules with desirable properties. Suppose you want to generate molecules whoe MW=300, LogP=4, and TPSA=100, then the command is following:\nBASH3*\nThe result will be written in result.txt\n \n"
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jaechanglim/CVAE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CVAE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jaechanglim"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 20111,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1806.05805\n\n1. Fisrt, you need to prepare file containing smiles. each line of the file is smiles of a molecule (please see smiles.txt in this repo"
      },
      "source": "https://raw.githubusercontent.com/jaechanglim/CVAE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:32:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 98
      },
      "technique": "GitHub_API"
    }
  ]
}