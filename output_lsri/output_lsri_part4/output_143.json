{
  "application_domain": [
    {
      "confidence": 27.85,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rasmushenningsson/DISSEQT.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "If you have problems running DISSEQT, please open an issue in the Issue Tracker or contact rasmus.henningsson@med.lu.se. A docker file will be published soon.\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-20T07:30:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-01T16:44:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DISSEQT \u2013 DIStribution based modeling of SEQuence Space Time dynamics"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.968330393554079,
      "result": {
        "original_header": "DISSEQT.jl",
        "type": "Text_excerpt",
        "value": "The DISSEQT.jl package is a Julia implementation of the pipeline described in the paper [DISSEQT \u2013 DIStribution based modeling of SEQuence Space Time dynamics](https://www.biorxiv.org/content/10.1101/327338v1). \n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rasmushenningsson/DISSEQT.jl/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rasmushenningsson/DISSEQT.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DISSEQT.jl"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/doc/images/readcoverage_H03UAAFXX_Stop.png"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/doc/images/talus.png"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/doc/images/pairwise.png"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/doc/images/isomap_landscape.png"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Start Julia (1.1 or later) and enter the Package REPL by pressing ]. Then install DISSEQT.jl by entering:\n```\nregistry add https://github.com/BioJulia/BioJuliaRegistry.git\nadd https://github.com/rasmushenningsson/SynapseClient.jl.git\nadd https://github.com/rasmushenningsson/DISSEQT.jl.git\n```\n(The BioJuliaRegistry is needed for the FASTX.jl package used by DISSEQT to read .fasta files.)\nAlso see installation instructions for [SynapseClient.jl](https://github.com/rasmushenningsson/SynapseClient.jl) if you want to enable the [Synapse](https://www.synapse.org) features in DISSEQT.\n\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017-2019 Rasmus Henningsson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DISSEQT.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rasmushenningsson"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 251789,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rasmushenningsson",
          "type": "User"
        },
        "date_created": "2019-07-20T01:16:52Z",
        "date_published": "2019-07-20T01:24:59Z",
        "description": "Release created in order to archive code and create a DOI. For most users it is recommended to follow the instructions at https://github.com/rasmushenningsson/DISSEQT.jl/ for a simpler installation.",
        "html_url": "https://github.com/rasmushenningsson/DISSEQT.jl/releases/tag/v0.2.0",
        "name": "DISSEQT v0.2.0 release",
        "release_id": 18746061,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/releases/18746061",
        "value": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/releases/18746061",
        "zipball_url": "https://api.github.com/repos/rasmushenningsson/DISSEQT.jl/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:16:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "The complete analysis of deep sequencing data from the [DISSEQT paper](https://www.biorxiv.org/content/10.1101/327338v1) is available at the collaborative science platform Synapse [here](https://www.synapse.org/#!Synapse:syn11639899). In order to view and download files you must create a Synapse account. (The scripts are also available [in the examples folder](https://github.com/rasmushenningsson/DISSEQT.jl/tree/master/examples) for reference, but note that you will need a Synapse account to access the data files.)\n\nThe Provenance system in Synapse makes it possible to trace the steps used to produce every result in Synapse, showing how the analysis was done (which script was called) and listing all input files.\nAll example scripts below upload their results to Synapse. The scripts themselves are also automatically uploaded to ensure that all analyses can be rerun elsewhere. (In order to run the scripts locally, you need to make the Julia Packages used by the script avaiable by running e.g. `add JLD` in the Julia Package REPL.)\nThe steps in the DISSET pipeline are outlined below:\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Alignment",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "If you already have BAM files, you can start the DISSEQT pipeline from the next step. Note however that DISSEQT performs iterative alignment. That is, if the consensus sequence of an aligned mutant swarm is different from the reference sequence used during alignment, it is realigned using the new consensus sequence as the reference. The process is repeated until the reference does not change. Iterative alignment improves inference of codon frequencies close to consensus changes.\n\nTo run alignment locally, you need to have [bwa](https://github.com/lh3/bwa), [samtools](http://www.htslib.org) and [fastq-mcf](https://expressionanalysis.github.io/ea-utils/) installed and available in your path.\n\nExample scripts and other relevant files for running alignment using DISSEQT can be found [here](https://www.synapse.org/#!Synapse:syn18694207). It is recommended to use one [script](https://www.synapse.org/#!Synapse:syn18695094) for each run. The [Reference Genomes](https://www.synapse.org/#!Synapse:syn18694208) and [Adapter](https://www.synapse.org/#!Synapse:syn18694218) files are also needed. The iterative alignment typically took about 1-4 minutes per sample on a modest desktop computer.  Alignment for multiple samples can be run in parallel to cut total runtime.\n\nThe outputs of the Alignment step are [BAM Files](https://www.synapse.org/#!Synapse:syn18694439), the consensus sequence and a detailed alignment log for each sample are also saved in the same folder.\nAn overview log file - [AlignUtils.log](https://www.synapse.org/#!Synapse:syn18695095) - is also created.\n\nAn optional step for quality control is to create [Read Coverage graphs](https://www.synapse.org/#!Synapse:syn18728439) by running another [script](https://www.synapse.org/#!Synapse:syn18728454).\n![Read Coverage](doc/images/readcoverage_H03UAAFXX_Stop.png)\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Codon Frequency Inference",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Codon frequencies are inferred from BAM Files. An example script can be found [here](https://www.synapse.org/#!Synapse:syn18697620).\nThe output is one [Mutant Swarm File](https://www.synapse.org/#!Synapse:syn18697618) per sample and an [overview log file](https://www.synapse.org/#!Synapse:syn18697621). Runtimes for the codon frequency inference were similar to alignment at about 1-4 minutes per sample on a modest desktop computer. Inference for multiple samples can be run in parallel to cut total runtime.\n\nAll the later steps run in a matter of minutes for the whole data set.\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Limit of Detection",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "DISSEQT determines the Limit of Detection for each codon at each site per experiment. To account for differences between runs, a [Metadata table](https://www.synapse.org/#!Synapse:syn11639906) with details about the samples is needed for this step. The Limit of Detection script for the Fitness Landscape data set can be found [here](https://www.synapse.org/#!Synapse:syn18700843).\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dimension Estimation",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "A Talus Plot used for dimension estimation of the Fitness Landscape data set can be created using this [script](https://www.synapse.org/#!Synapse:syn18701723).\n![Talus Plot](doc/images/talus.png)\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sequence Space Representation",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "One of the core features of the DISSEQT pipeline is to produce a low-dimensional representation of the Mutant Swarms in Sequence Space, which is useful for plotting and downstream analysis.\nThe script for the Fitness Landscape data set can be found [here](https://www.synapse.org/#!Synapse:syn18716280).\nFirst, a high-dimensional representation is created using the inferred codon frequencies and estimated per-variant limits of detection. Second, [SubMatrix Selection SVD](https://github.com/rasmushenningsson/SubMatrixSelectionSVD.jl) is used for dimension reduction, based on the number of dimensions determined in the Talus Plot.\n![SubMatrixSelectionSVD plot](doc/images/pairwise.png)\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downstream Analysis",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Based on the low-dimensional representatation, fitness landscapes and sequence space visualizations are created in this [script](https://www.synapse.org/#!Synapse:syn18774440). An evaluation of the ability of different models to predict fitness is performed in this [script](https://www.synapse.org/#!Synapse:syn18774322).\n![Fitness Landscape](doc/images/isomap_landscape.png)\n"
      },
      "source": "https://raw.githubusercontent.com/rasmushenningsson/DISSEQT.jl/master/README.md",
      "technique": "header_analysis"
    }
  ]
}