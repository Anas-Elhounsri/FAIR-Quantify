{
  "application_domain": [
    {
      "confidence": 52.31,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Yizhi Wang$, Nicole V. DelRosso$, Trisha V. Vaidyanathan, Michelle K. Cahill, Michael E. Reitman, Silvia Pittolo, Xuelong Mi, Guoqiang Yu#, Kira E. Poskanzer#, *Accurate quantification of astrocyte and neurotransmitter fluorescence dynamics for single-cell and population-level physiology*, Nature Neuroscience, 2019, https://www.nature.com/articles/s41593-019-0492-2 ($ co-first authors, # co-corresponding authors)\n\nYizhi Wang, Nicole V. DelRosso, Trisha Vaidyanathan, Michael Reitman, Michelle K. Cahill, Xuelong Mi, Guoqiang Yu, Kira E. Poskanzer, *An event-based paradigm for analyzing fluorescent astrocyte activity uncovers novel single-cell and population-level physiology*, BioRxiv 504217; doi: https://doi.org/10.1101/504217. [[Link to BioRxiv]](https://www.biorxiv.org/content/early/2018/12/21/504217)\n\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yu-lab-vt/AQuA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-19T19:42:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-28T12:52:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An event-based tool for analyzing and quantifying calcium or neurotransmitter imaging data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9801727002209482,
      "result": {
        "original_header": "From raw data to events",
        "type": "Text_excerpt",
        "value": "* In vivo and ex vivo\n* GCaMP, GluSnFr \n* And more \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9489027421347391,
      "result": {
        "original_header": "Extract features from events",
        "type": "Text_excerpt",
        "value": "* Size and location\n* Duration, delta F/F, rising/falling time, decay time constant\n* Propagation direction, speed\n* And more \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.936600695701121,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "This update modifies feature names in the output Excel to eliminate the misunderstanding. \nThis update solves one issue not detected before. In some special cases, two connected distinct signals that have a obviously different rising time difference may be considered as one (super) event. This update is to solve it. \nThis update allows AQuA to load data with the format of BIGTIFF. \nThis update makes changes in the reading step. Previous version will report error when the input data is a color image since AQuA can only deal with gray image. This updated version will automatically convert the input color image into gray image to avoid the error. \nThis update makes loading preset step compatible with Matlab 2020b. \nThis update changes the exported table's extension from '.xlsx' to '.csv' to avoid the error when the number of detected events is huge. \nThis update changes the estimated noise in step 1. Previous version estimated the noise before smoothing and used it to detect active regions, which created inconsistency since the detection is based on the smoothed data. \nThis updated version estimates the noise after smoothing. With the accurate estimation, users can feel safe to set the intensity threshold as 2 or 3 instead of adjusting this parameter extensively and empirically. \nAdd 'Save waves' button in favorite list part. Users could export the waves data of selected events as '.csv' files.  \nAdd area under the curve feature for each event. Users could find them in 'fts.curve' structure. \nUpdate **[the step by step user guide](https://drive.google.com/open?id=1a3lhe0dUth-5J1-S2fZlPOCZlPbeuvUr)** and **[details on output files, extracted features, and parameter settings](https://drive.google.com/open?id=1assaXYBP6a0OOHrYGYBWjYO2pgwKR3Iu)**. \nThe update adds the features of favorited events into the '.mat' result. \nAdd new functin for cell regions and landmark reigons. The button \"->\" in the top-left corner of the GUI can let users to drag regions. \nSolve the issue that the detected events are forced to merge in \"aqua_cmd.m\" and \"aqua_cmd_batch.m\". \nThe update fixes one bug. Now each time \"Update features\" in GUI is clicked , the proof reading table will be updated. \nRepair the bug in Fiji version that 'minimum correlation' in merging step cannot be set to float data. \n1) The update avoids the error report when nothing is detected for `aqua_batch.m`.  \n2) Allow `aqua_batch.m` to read a batch of cell boundaries and landmarks. \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9980234072543025,
      "result": {
        "type": "Text_excerpt",
        "value": "AQuA (**A**strocyte **Qu**antification and **A**nalysis) is a tool to detect signalling events from microscopic time-lapse imaging data of astrocytes or other cell types. The algorithm is data-driven and based on machine learning principles, so, potentially, it can be applied across model organisms, fluorescent indicators, experimental modes, cell types, and imaging resolutions and speeds.  \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MATLAB GUI",
        "parent_header": [
          "Download and installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download latest version **[here](https://github.com/yu-lab-vt/AQuA/archive/master.zip)**.\n2. Unzip the downloaded file.\n3. Start MATLAB.\n4. Switch the current folder to AQuA's folder.\n5. Double click `aqua_gui.m`, or type `aqua_gui` in MATLAB command line.\n\nWe tested on MATLAB versions later than 2017a. Earlier versions are not supported.\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fiji plugin",
        "parent_header": [
          "Download and installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download **[here](https://github.com/yu-lab-vt/AQuA-Fiji/releases)**.\n2. Put the downloaded `Aqua.jar` to the plugins folder of Fiji.\n3. Open Fiji.\n4. In the `Plugins` menu, click `Aqua`.\n5. Open movie and choose project path in AQuA GUI.\n\nSome browsers may show a warning when downloading the 'jar' file. Please choose 'keep file'.\n\nNote: \nOur updates are mainly on MATLAB platform, but the latest updates have also been synchronized to the Fiji version. Due to the resolution issue and the implementation (some MATLAB functions cannot be found in Java and implemented by authors), there could be slight differences between the results of Fiji version and MATLAB version. \nThe Fiji version does not save the results in 'res' data structure in 'mat' file. If users want to obtain the results and process them by themselves, the MATLAB version is more recommended.\n\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yu-lab-vt/aqua/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yu-lab-vt/AQuA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yu-lab-vt/AQuA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/img/pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/img/features.png"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/img/gui1.png"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "MATLAB GUI",
        "parent_header": [
          "Download and installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download latest version **[here](https://github.com/yu-lab-vt/AQuA/archive/master.zip)**.\n2. Unzip the downloaded file.\n3. Start MATLAB.\n4. Switch the current folder to AQuA's folder.\n5. Double click `aqua_gui.m`, or type `aqua_gui` in MATLAB command line.\n\nWe tested on MATLAB versions later than 2017a. Earlier versions are not supported.\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fiji plugin",
        "parent_header": [
          "Download and installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Download **[here](https://github.com/yu-lab-vt/AQuA-Fiji/releases)**.\n2. Put the downloaded `Aqua.jar` to the plugins folder of Fiji.\n3. Open Fiji.\n4. In the `Plugins` menu, click `Aqua`.\n5. Open movie and choose project path in AQuA GUI.\n\nSome browsers may show a warning when downloading the 'jar' file. Please choose 'keep file'.\n\nNote: \nOur updates are mainly on MATLAB platform, but the latest updates have also been synchronized to the Fiji version. Due to the resolution issue and the implementation (some MATLAB functions cannot be found in Java and implemented by authors), there could be slight differences between the results of Fiji version and MATLAB version. \nThe Fiji version does not save the results in 'res' data structure in 'mat' file. If users want to obtain the results and process them by themselves, the MATLAB version is more recommended.\n\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.912335996465297,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "**9/28/2023:**  \n**7/04/2023:**  \nThis update makes loading preset step compatible with Matlab 2020b. \nThe update fixes one bug existing in 'fix_events'. \nThe update changes the GUI panel. Now users could select whether to output feature table or not.   \n1) The update avoids the error report when nothing is detected for `aqua_batch.m`.  \n**10/16/2019:**  \nThe update adds the new script `aqua_batch.m` which can let users deal with multiple files. **[MATLAB Without GUI](#matlab-without-gui)** shows how to use it.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9661715334755281,
      "result": {
        "type": "Text_excerpt",
        "value": "If you have any feedback or issue, you are welcome to either post issue in Issues section or send email to yug@vt.edu (Guoqiang Yu at Virginia Tech). \n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yu-lab-vt/AQuA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014 Anton Osokin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/tools/%2BaoBK/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/img/logo1s.png"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AQuA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yu-lab-vt"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 814990,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 79670,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M",
        "size": 957,
        "type": "Programming_language",
        "value": "M"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 657,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 125,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "XuelongMi",
          "type": "User"
        },
        "date_created": "2020-05-08T19:36:11Z",
        "date_published": "2020-05-08T20:01:09Z",
        "description": "New updates have been done. Please see Update section in https://github.com/yu-lab-vt/AQuA.",
        "html_url": "https://github.com/yu-lab-vt/AQuA/releases/tag/v1.1",
        "name": "AQuA 2020",
        "release_id": 26327527,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/26327527",
        "value": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/26327527",
        "zipball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "XuelongMi",
          "type": "User"
        },
        "date_created": "2019-01-18T20:21:53Z",
        "date_published": "2019-01-23T23:03:10Z",
        "description": "[Aqua updates.pdf](https://github.com/yu-lab-vt/AQuA/files/2789524/Aqua.updates.pdf)\r\n",
        "html_url": "https://github.com/yu-lab-vt/AQuA/releases/tag/v1.0.1",
        "name": "Add some new functinos",
        "release_id": 15146712,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/15146712",
        "value": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/15146712",
        "zipball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "yu-lab-vt",
          "type": "User"
        },
        "date_created": "2018-12-20T04:25:23Z",
        "date_published": "2018-12-20T04:34:37Z",
        "html_url": "https://github.com/yu-lab-vt/AQuA/releases/tag/v1.0",
        "name": "AQuA 1.0",
        "release_id": 14630474,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/14630474",
        "value": "https://api.github.com/repos/yu-lab-vt/AQuA/releases/14630474",
        "zipball_url": "https://api.github.com/repos/yu-lab-vt/AQuA/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:41:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 51
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use aqua_cmd.m file",
        "parent_header": [
          "Download and installation",
          "MATLAB Without GUI"
        ],
        "type": "Text_excerpt",
        "value": "1. Double click `aqua_cmd.m` file.\n2. Set the folder path 'p0' and target dataset name 'f0'.\n3. Run the file.\n4. The output files will be saved in a subfolder of 'p0'.\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use aqua_batch.m file",
        "parent_header": [
          "Download and installation",
          "MATLAB Without GUI"
        ],
        "type": "Text_excerpt",
        "value": "1. Double click `aqua_batch.m` file.\n2. Set the folder path 'p0', and for each target dataset, set the parameters in `AQuA/cfg/parameters_for_batch.csv`. Each dataset is corresponding to one parameter setting.\n3. Run the file.\n4. The output files will be saved in subfolders of 'p0'.\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "type": "Text_excerpt",
        "value": "If you are using AQuA for the first time, please read\n**[the step by step user guide](https://drive.google.com/open?id=1a3lhe0dUth-5J1-S2fZlPOCZlPbeuvUr)**.\n\nOr you can check the **[details on output files, extracted features, and parameter settings](https://drive.google.com/file/d/1CckDLbrkw16b7MPlOQdYpZciIz80Snm_/view?usp=sharing)**.\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example datasets",
        "type": "Text_excerpt",
        "value": "You can try these real data sets in AQuA. These data sets are used in the supplemental of the paper.\n\n**[Ex-vivo GCaMP dataset](https://drive.google.com/open?id=13tNSFQ1BFV__42TY0lZbHd1VYTRfNyfD)**\n\n**[In-vivo GCaMP dataset](https://drive.google.com/open?id=1TjfFzlg_6BxsFX_l3-P92M5Rp_5j6wiM)**\n\n**[GluSnFr dataset](https://drive.google.com/open?id=1XFJBE18sQTa6svXXRV1TidgNPSv-ldtY)**\n\nWe also provide some synthetic data sets. These are used in the simulation part of the paper.\n\n**[Synthetic data sets](https://drive.google.com/open?id=1ljh-X7vkT7ryjk0mR7PXli_-nYThqK7h)**\n\n"
      },
      "source": "https://raw.githubusercontent.com/yu-lab-vt/aqua/master/README.md",
      "technique": "header_analysis"
    }
  ]
}