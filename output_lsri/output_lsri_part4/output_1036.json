{
  "application_domain": [
    {
      "confidence": 0.9278934576647357,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biocaddie/Foundry-ES"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-09-09T19:51:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-11T10:55:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Biocaddie Data Processing Pipeline. A data ingestion pipeline that collects and transforms original metadata information to a unified metadata model, called DatA Tag Suite (DATS)."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9827680349077332,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "Here dev profile is used. There are production `prod` and `dev` profiles for differrent configurations for development and production environments. \nFoundry uses several directories to dynamically load enhancer plugins, to cache ingestion data and save its logs which needs to exists and be readable and writable before running the system. You can create them via\n```\nmkdir -p /var/data/foundry-es/foundry_plugins/plugins /var/data/foundry-es/cache /var/data/logs /var/data/foundry-es/cache/data /var/data/foundry-es/cache/data/staging\n```\n \nFor the `consumers` subproject, you need to\ncopy `consumer.properties.example` in  `$HOME/Foundry-ES/consumers//src/main/resources/dev` (for dev profile) or in `$HOME/Foundry-ES/consumers//src/main/resources/prod` (for prod profile) to `consumer.properties` file. Given that the cache directories `/var/data/foundry-es/cache/data` and `/var/data/foundry-es/cache/data/staging` are created as instructed in previous paragraph, you don't need to\nchange `consumer.properties` file for the common operation of the system. \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9274801860502591,
      "result": {
        "original_header": "MongoDB",
        "type": "Text_excerpt",
        "value": "The system uses MongoDB as its backend. Both 2.x and 3.x versions of MongoDB are tested with the system. If you are using MongoDB 3.x, preferred storage engine is wiredTiger.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9400408210637429,
      "result": {
        "original_header": "ActiveMQ",
        "type": "Text_excerpt",
        "value": "* Download and unpack [Apache ActiveMQ 5.10.0 Release](http://activemq.apache.org/activemq-5100-release.html) to a directory of your choosing (`$MQ_HOME`). \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8318159023204466,
      "result": {
        "original_header": "Consumer Head",
        "type": "Text_excerpt",
        "value": "\n```\n./consumer_head.sh -h\nusage: ConsumerCoordinator\n -c <config-file>          config-file e.g. consumers-cfg.xml (default)\n -cm                       run in consumer mode (no ingestors)\n -f                        full data set default is 100 documents\n -h                        print this message\n -n <max number of docs>   Max number of documents to ingest\n -p                        send provenance data to prov server\n -t                        run ingestors in test mode\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8358673725208067,
      "result": {
        "original_header": "Manager",
        "type": "Text_excerpt",
        "value": "```\nFoundry:>> help\nAvailable commands\n\thelp - shows this message.\n\tingest <sourceID>\n\th - show all command history\n\tdelete <url> - [e.g. http://52.32.231.227:9200/geo_20151106]\n\tdd <sourceID>  - delete docs for a sourceID\n\tcdup <sourceID>  - clean duplicate files from GridFS for a sourceID\n\ttrigger <sourceID> <status-2-match> <queue-2-send> [<new-status> [<new-out-status>]] (e.g. trigger nif-0000-00135 new.1 foundry.uuid.1)\n\trun <sourceID> status:<status-2-match> step:<step-name> [on|to_end] (e.g. run nif-0000-00135 status:new.1 step:transform)\n\tindex <sourceID> <status-2-match> <url> (e.g. index biocaddie-0006 transformed.1 http://52.32.231.227:9200/geo_20151106/dataset)\n\tlist - lists all of the existing sources.\n\tstatus [<sourceID>] - show processing status of data source(s)\n\tws - show configured workflow(s)\n\texit - exits the management client.\nFoundry:>> \n\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Further Documentation",
        "parent_header": [
          "Foundry"
        ],
        "type": "Text_excerpt",
        "value": " * [Developer Guide](doc/dev_guide.md)\n * [Document Ingestion](doc/doc_ingestion.md)\n\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biocaddie/Foundry-ES/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biocaddie/Foundry-ES/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biocaddie/Foundry-ES"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Foundry"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/consumers/dependencies/install_bnlp_dependencies_2mvn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/consumers/dependencies/install_bnlp_2mvn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/consumers/dependencies/install_other_dependencies_2mvn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/ingest_src_cli.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/config_gen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/bit_bucket_consumer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/source_desc_gen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/dispatcher.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/xml2json_converter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/transformation_gen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/harvest_desc_cfg.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/sampler.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/manager.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/consumer_head.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/bin/user_man.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/dependencies/install_prov_json__2mvn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/dependencies/install_prov_xml_2mvn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/dependencies/install_prov_model_2mvn.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Initial Setup",
        "parent_header": [
          "Foundry"
        ],
        "type": "Text_excerpt",
        "value": "Before any processing the MongoDB needs to be populated with the (re)source descriptors using\nthe `$HOME/Foundry_ES/bin/ingest_src_cli.sh`. \n\n```\n./ingest_src_cli.sh -h\nusage: SourceIngestorCLI\n -c <config-file>        config-file e.g. ingestor-cfg.xml (default)\n -d                      delete the source given by the source-json-file\n -h                      print this message\n -j <source-json-file>   harvest source description file\n -u                      update the source given by the source-json-file\n```\n\nResource descriptors are generated from source description configuration YAML file \n(See `$HOME/Foundry_ES/bin/source-desc-cfg.yml.example` for an example).\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9797436933954562,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "This project requires Java 1.8 or higher to build.\nBefore you start the build process, you need to install three libraries \nfrom `dependencies` directory to your local maven repository\n    \n    cd $HOME/Foundry_ES/dependencies\n    ./install_prov_xml_2mvn.sh\n    ./install_prov_model_2mvn.sh\n    ./install_prov_json__2mvn.sh \nAfterwards run the following maven command in the `$HOME/Foundry_ES` \n    mvn -Pdev clean install  \nThe configuration files are located under each sub-project. For example, \nthe configuration files for the dispatcher component are located under\n`$HOME/Foundry-ES/dispatcher/src/main/resources`.\n```\n$HOME/Foundry-ES/dispatcher/src/main/resources\n\u251c\u2500\u2500 dev\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 dispatcher-cfg.xml\n\u2514\u2500\u2500 prod\n    \u2514\u2500\u2500 dispatcher-cfg.xml\n```\n \nWhen you use `-Pdev` argument, configuration file from the `dev` directory is \nincluded in the jar file. \nAll subsystem configuration files are generated from a master configuration file in YAML format. \nAn example master configuration file can be found at `$HOME/Foundry-ES/bin/config.yml.example`.\nOnce you create a master config file named say `config.yml` run the following to generate all configuration files for the subsystems (for dev profile)\n```\ncd $HOME/Foundry-ES/bin\n./config_gen.sh -c config.yml  -f $HOME/Foundry-ES -p dev\n\n```\n \n```\n./config_gen.sh -h \nusage: ConfigGenerator\n -c <cfg-spec-file>         Full path to the Foundry-ES config spec YAML\n                            file\n -f <foundry-es-root-dir>\n -h                         print this message\n -p <profile>               Maven profile ([dev]|prod)\n\n```\nAfter each configuration file generation you need to run maven to move the configs to their target locations \n    mvn -Pdev install  \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9368961458323871,
      "result": {
        "original_header": "MongoDB",
        "type": "Text_excerpt",
        "value": "The system uses MongoDB as its backend. Both 2.x and 3.x versions of MongoDB are tested with the system. If you are using MongoDB 3.x, preferred storage engine is wiredTiger.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9966540442734166,
      "result": {
        "original_header": "Resource descriptor JSON file Generation",
        "type": "Text_excerpt",
        "value": "Once the transformation script is finalized for a resource, its resource descriptor \nJSON file needs to be regenerated. Also for new resources a new resource descriptor \nJSON file is needed. A resource descriptor JSON file is generated via the `$HOME/Foundry_ES/bin/source_desc_gen.sh` script.\n```\n./source_desc_gen.sh\nusage: SourceDescFileGeneratorCLI\n -s <source>                       source name (top level element) in the\n                                   source-descriptor-cfg-file [e.g. pdb, dryad]\n -c <source-descriptor-cfg-file>   Full path to the source descriptor\n                                   config params YAML file\n -h                                print this message\n```\n \nwhere the resource descriptor config params are read from a YAML file. There is an example YAML file (`$HOME/Foundry_ES/bin/source-desc-cfg.yml.example`). You can copy \nit to `source-desc-cfg.yml` file and change the paths (for transformation script files) there to match your local system. \n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9678259510213445,
      "result": {
        "original_header": "Dispatcher",
        "type": "Text_excerpt",
        "value": "The script for the dispatcher component `dispatcher.sh` is located in \n`$HOME/Foundry_ES/bin`. By default it uses `dispatcher-cfg.xml` file for the \nprofile specified during the build. This needs to run in its own process. \nTo stop it, use `Ctrl-C`.\n```\n ./dispatcher.sh -h\nusage: Dispatcher\n -c <config-file>   config-file e.g. dispatcher-cfg.xml (default)\n -h                 print this message\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9894653720705158,
      "result": {
        "original_header": "Consumer Head",
        "type": "Text_excerpt",
        "value": "`$HOME/Foundry_ES/bin`. By default it uses `consumers-cfg.xml` file for the \nprofile specified during the build. For production use you need to specify \n `-f` option. This needs to run in its own process. To stop it, use `Ctrl-C`. \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9395186697999438,
      "result": {
        "original_header": "Manager",
        "type": "Text_excerpt",
        "value": "Manager is an interactive command line application for sending ingestion start messages for resources to the consumer head(s). \nIt also have some convenience functions to cleanup MongoDB data for a given resource and delete ElasticSearch indices. \nBy default manager app uses `dispatcher-cfg.xml` file for the profile specified \nduring the build. \n```\n./manager.sh -h\nusage: ManagementService\n -c <config-file>   config-file e.g. dispatcher-cfg.xml (default)\n -h                 print this message\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8503981010784895,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "Foundry uses several directories to dynamically load enhancer plugins, to cache ingestion data and save its logs which needs to exists and be readable and writable before running the system. You can create them via\n```\nmkdir -p /var/data/foundry-es/foundry_plugins/plugins /var/data/foundry-es/cache /var/data/logs /var/data/foundry-es/cache/data /var/data/foundry-es/cache/data/staging\n```\n \nAll subsystem configuration files are generated from a master configuration file in YAML format. \nAn example master configuration file can be found at `$HOME/Foundry-ES/bin/config.yml.example`.\nOnce you create a master config file named say `config.yml` run the following to generate all configuration files for the subsystems (for dev profile)\n```\ncd $HOME/Foundry-ES/bin\n./config_gen.sh -c config.yml  -f $HOME/Foundry-ES -p dev\n\n```\n \n```\n./config_gen.sh -h \nusage: ConfigGenerator\n -c <cfg-spec-file>         Full path to the Foundry-ES config spec YAML\n                            file\n -f <foundry-es-root-dir>\n -h                         print this message\n -p <profile>               Maven profile ([dev]|prod)\n\n```\nAfter each configuration file generation you need to run maven to move the configs to their target locations \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8491056751006824,
      "result": {
        "original_header": "Resource descriptor JSON file Generation",
        "type": "Text_excerpt",
        "value": "where the resource descriptor config params are read from a YAML file. There is an example YAML file (`$HOME/Foundry_ES/bin/source-desc-cfg.yml.example`). You can copy \nit to `source-desc-cfg.yml` file and change the paths (for transformation script files) there to match your local system. \n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8471962944184892,
      "result": {
        "original_header": "Consumer Head",
        "type": "Text_excerpt",
        "value": "\n```\n./consumer_head.sh -h\nusage: ConsumerCoordinator\n -c <config-file>          config-file e.g. consumers-cfg.xml (default)\n -cm                       run in consumer mode (no ingestors)\n -f                        full data set default is 100 documents\n -h                        print this message\n -n <max number of docs>   Max number of documents to ingest\n -p                        send provenance data to prov server\n -t                        run ingestors in test mode\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biocaddie/Foundry-ES/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "activemq, dats, ingestion, java, mongodb, pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "<p>This software is Copyright \u00a9 2015 The Regents of the University of California. All Rights Reserved.</p>\n\n<p>Permission to copy, modify, and distribute this software and its documentation for educational, research and non-profit purposes, without fee, and without a written agreement is hereby granted, provided that the above copyright notice, this paragraph and the following three paragraphs appear in all copies.</p>\n\n<p>Permission to make commercial use of this software may be obtained by contacting:</p>\n\nTechnology Transfer Office <br />\n9500 Gilman Drive, Mail Code 0910 <br />\nUniversity of California <br />\nLa Jolla, CA 92093-0910 <br />\n(858) 534-5815 <br />\ninvent@ucsd.edu <br />\n \n\n<p>This software program and documentation are copyrighted by The Regents of the University of California. The software program and documentation are supplied \u201cas is\u201d, without any accompanying services from The Regents. The Regents does not warrant that the operation of the program will be uninterrupted or error-free. The end-user understands that the program was developed for research purposes and is advised not to rely exclusively on the program for any reason.</p>\n\n<p>IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO\nANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR\nCONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING\nOUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,\nEVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGE. THE UNIVERSITY OF\nCALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\nTHE SOFTWARE PROVIDED HEREUNDER IS ON AN \u201cAS IS\u201d BASIS, \nAND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO\nPROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR\nMODIFICATIONS.</p>\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Foundry-ES"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biocaddie"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 1669954,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 658006,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 175122,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 61910,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4230,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3290,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the system",
        "parent_header": [
          "Foundry"
        ],
        "type": "Text_excerpt",
        "value": "The system consists of a dispatcher, a consumer head and a CLI manager interface. \nThe dispatcher listens to the MongoDB changes and using \nits configured workflow dispatches messages to the message queue for the \nlistening consumer head(s). The consumer head coordinates a set of configured \nconsumers that do a prefined operation of a document indicated by the message \nthey receive from the dispatcher and ingestors. The ingestors are specialized \nconsumers that are responsible for the retrieval of the original data as \nconfigured by harvest descriptor JSON file of the corresponding source. \nThey are triggered by the manager application. \n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:41:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting the code",
        "parent_header": [
          "Foundry"
        ],
        "type": "Text_excerpt",
        "value": "    cd $HOME\n    git clone https://<username>@github.com/SciCrunch/Foundry-ES.git\n    cd $HOME/Foundry-ES\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Foundry",
          "Resource descriptor JSON file Generation"
        ],
        "type": "Text_excerpt",
        "value": "An example resource (VectorBase) with a sample of its raw data and corresponding \ntransformation file is included in `$HOME/Foundry_ES/example` directory. The resource\ndescriptor configuration for the example is in the file `$HOME/Foundry_ES/bin/source-desc-example-cfg.yml`.\nYou need to edit this file to adjust the absolute paths for the fields `ingestURL` and `transformationScript` for your Foundry_ES installation directory. \nAfterwards run the following in the `$HOME/Foundry_ES` directory.\n\n```\n./source_desc_gen.sh -s vectorbase -c source-desc-example-cfg.yml\n```\nThe generated resource descriptor file is written to `/tmp` directory.\n\nTo insert the generated source descriptor document to the `sources` MongoDB collection, use the following\n```\n./ingest_src_cli.sh -j /tmp/vectorbase.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Ingestion Example",
        "parent_header": [
          "Foundry"
        ],
        "type": "Text_excerpt",
        "value": "To ingest the previously registered VectorBase resource, start `manager.sh`, the command line management interface to the Foundry system. You can list, ingest, delete and index resources through this interface.\n```\n./manager.sh\nFoundry:>> list\nvectorbase       - VectorBase\nFoundry:>> ingest vectorbase\nDo you want to ingest records for vectorbase? (y/[n])? y\n...\nFoundry:>> status vectorbase\nvectorbase        in_process total:       99 finished:         0 error:       0 \n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocaddie/Foundry-ES/master/README.md",
      "technique": "header_analysis"
    }
  ]
}