{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Rostlab/SNAP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-05T16:29:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-05T01:56:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNP effect predictor"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Method Description",
        "parent_header": [
          "SNAP2"
        ],
        "type": "Text_excerpt",
        "value": "* Author: Maximilian Hecht\n* Year of public: 2015\n* Description\n  * feature calculation (using predict protein pipeline)\n  * neural network with 650 input, 100 hidden and 2 output nodes\n  * all 10 models from 10-fold cross validation used to calculate the results\n  * 10 results averaged in jury decision\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Publications and other Resources",
        "parent_header": [
          "SNAP2",
          "Method Description"
        ],
        "type": "Text_excerpt",
        "value": "* Hecht, M., Bromberg, Y., & Rost, B. (2015). Better prediction of functional effects for sequence variants. BMC Genomics, 16(Suppl 8), S1 [PubMed](http://www.ncbi.nlm.nih.gov/pubmed/26110438) [Full PDF](http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4480835/pdf/1471-2164-16-S8-S1.pdf)\n* Bromberg Y & Rost B. (2007). SNAP: predict effect of non-synonymous polymorphisms on function. Nucleic Acids Research, Vol. 35, No. 11 3823-3835 [PubMed](http://www.ncbi.nlm.nih.gov/pubmed/17526529) [Full PDF](http://rostlab.org/~hecht/snap.pdf)\n* Hecht, M., Bromberg, Y., & Rost, B. (2013). News from the protein mutability landscape. Journal of molecular biology, 425(21), 3937-3948 [PubMed](http://www.ncbi.nlm.nih.gov/pubmed/23896297) [Full PDF](http://rostlab.org/~snap2web/snap2landscape.pdf)\n* SNAP2 Wiki by Rostlab.org (https://rostlab.org/owiki/index.php/Snap2)\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Training / Test data",
        "parent_header": [
          "SNAP2",
          "Method Description"
        ],
        "type": "Text_excerpt",
        "value": "About 100,000 variants from the Protein Mutant Database (PMD), SwissProt, OMIM and HumVar are used for testing and training of SNAP2. The variants are either classified as 'neutral' or 'effect'.\n\nIf a variant is annotated with 'no change' in PMD, the variant is classified as neutral. If there is any change in its function independent of in- or decrease, it is classified as effect. The function of enzymes that are listed in SwissProt is descibed by the Enzyme Commission (EC) number. If two variants have the same EC number, they are classified as neutral. The databases OMIM and HumVar contain protein variants that are associated with diseases. Therefore, they provide variants with an effect.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Evaluation",
        "parent_header": [
          "SNAP2",
          "Method Description"
        ],
        "type": "Text_excerpt",
        "value": "SNAP2 was compared with the original version SNAP, SIFT, and PolyPhen-2\n\n<img src=\"https://github.com/Rostlab/SNAP2/blob/develop/doc/ROC.png?raw=true\" width=\"400\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9792653616113506,
      "result": {
        "original_header": "SNAP2",
        "type": "Text_excerpt",
        "value": "SNAP2 is a method that predicts the effects of single amino acid substitutions in a protein on the protein's function using neural networks. A webservice is currently provided by the Rostlab (https://rostlab.org/services/snap/ and https://rostlab.org/services/snap2web/).\nThe implementation started in November 2011 by Maximilian Hecht. Perl is the programming language.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Rostlab/SNAP2/wiki/Installation-and-Environments"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Rostlab/SNAP2/wiki/Testing-on-various-platforms-using-VM"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Rostlab/SNAP2/wiki"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Rostlab/SNAP2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO workaround the \"runtime\" error due to probable configuration errors",
        "parent_header": [
          "SNAP2",
          "HOWTO Install"
        ],
        "type": "Text_excerpt",
        "value": "* download a predictprotein virtual machine image (https://rostlab.org/services/ppmi/)\n* download the database set, which is offer as download together with the image\n* get the virtual machine to run\n* make the databases available inside the virtual machine\n* change all paths in `/usr/share/predictprotein/predictproteinrc.default` and `/usr/share/snap2/snap2rc.default` to the databases, you made available to the virtual machine\n\nMake sure to generate the machine on a strong enough hardware, as snap2 uses a lot of memory.\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Rostlab/SNAP2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rostlab/SNAP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNAP2"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/doc/ROC.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO Install",
        "parent_header": [
          "SNAP2"
        ],
        "type": "Text_excerpt",
        "value": "The recommended and tested environment is **Debian Wheezy (7)**. See [the wiki](https://github.com/Rostlab/SNAP2/wiki/Installation-and-Environments) for instructions on other environments and more details about the installation process and dependencies. Furthermore, see [these wiki page](https://github.com/Rostlab/SNAP2/wiki/Testing-on-various-platforms-using-VM) for on instructions on how to set up a virtual machine if needed.\n\nInstall essentials and add rostlab repository:\n\n```shell\ncd ~\nsudo apt-get update\nsudo apt-get install csh vim wget build-essential devscripts debhelper devscripts python-software-properties\nsudo apt-add-repository \"deb http://rostlab.org/debian/ stable main contrib non-free\"\nsudo apt-get update\nsudo apt-get install rostlab-debian-keyring\nsudo apt-get update\n```\n\nInstall blimps the hard way:\n\n```shell\nwget https://launchpad.net/debian/+archive/primary/+files/blimps_3.9-1.dsc\nwget https://launchpad.net/debian/+archive/primary/+files/blimps_3.9.orig.tar.gz\nwget https://launchpad.net/debian/+archive/primary/+files/blimps_3.9-1.debian.tar.gz\ntar xzvf blimps_3.9.orig.tar.gz\ntar xzvf blimps_3.9-1.debian.tar.gz\nmv debian blimps-3.9/\nmv blimps_3.9-1.dsc  blimps-3.9/\ncd blimps-3.9\ndpkg-source --commit\n# -> add a patch name -> ctrl+o -> return -> ctrl+x\ndebuild -us -uc\ncd ..\nsudo dpkg -i \\*blimps\\*.deb\n```\n\nInstall sift the hard way:\n\n```shell\nwget http://rostlab.org/debian/pool/non-free/s/sift/sift_4.0.3b-4.debian.tar.gz\nwget http://rostlab.org/debian/pool/non-free/s/sift/sift_4.0.3b-4.dsc\nwget http://rostlab.org/debian/pool/non-free/s/sift/sift_4.0.3b.orig.tar.gz\ntar xzvf sift_4.0.3b.orig.tar.gz\nmv sift_4.0.3b-4.dsc sift4.0.3b/\ntar xzvf sift_4.0.3b-4.debian.tar.gz\nmv debian sift4.0.3b/\ncd sift4.0.3b/\ndpkg-source --commit\n# -> add a patch name -> ctrl+o -> return -> ctrl+x\ndebuild -us -uc\ncd ..\nsudo dpkg -i sift*.deb\n```\n\nInstall snap2 via aptitude:\n\n```shell\nsudo apt-get install snap2\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO configure the tool",
        "parent_header": [
          "SNAP2",
          "HOWTO Install"
        ],
        "type": "Text_excerpt",
        "value": "There is a config file, containing all necessary data in `/usr/share/snap2/snap2rc.default`. Copy that file to your homefolder and change its contents to adjust the settings.\n\n```shell\ncp /usr/share/snap2/snap2rc.default ~/.snap2rc\nvim ~/.snap2rc\n```\n\nMost default settings are ok, but check the last paragraphs. They should state the locations of the recently downloaded databases. Edit the file to your needs, e.g.\n\n```\n[data]\n# swiss_dat=path - location of UniProt/Swiss-Prot dat file\nswiss_dat=/home/snap_db/uniprot_sprot.dat\n# db_swiss=path - path to ID index of Swiss-Prot dat file (generated by /usr/share/librg-utils-perl/dbSwiss.pl)\ndb_swiss=/home/snap_db/dbswiss\n# PHAT substitution matrix\nphat_matrix=/usr/share/snap2/phat.txt\n\n[blast]\n# big80=path - path to redundancy reduced database (UniProtKB 80 or equivalent)\nbig80=/home/snap_db/big80.fasta\n# swiss=path - path to SwissProt database\nswiss=/home/snap_db/uniprot_sprot.fasta\n```\n\nNote, however, that given the standard configuration of predictprotein at `/usr/share/predictprotein/predictproteinrc.default`, the tool still throws an error. \n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Rostlab/SNAP2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "SNAP2"
        ],
        "type": "Text_excerpt",
        "value": "The software is licensed under an [Academic Software License Agreement](https://rostlab.org/owiki/index.php/Academic_Software_License_Agreement).\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNAP2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Rostlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 664505,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 35889,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:13:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO get and configure databases",
        "parent_header": [
          "SNAP2",
          "HOWTO Install"
        ],
        "type": "Text_excerpt",
        "value": "Complete these steps after installing SNAP2 (on your VM). Ensure that there is enough space on your (virtual) machine. Depending on the type of database you want to use, you will need up to 110 GB disk space. If you initialized a vagrant box with default settings, you might want to use an external hard drive and forward it to the virtual machine. On the tested System (Mac OS X 10.10 and debain/wheezy64 in box), USB port forwarding was disabled and not possible to be used. To use the hard drive as shared folder, configure the virtualmachine in `Vagrantfile` (on your local machine) as follows, whereas `$host_folder_path` and `$guest_folder_path` are the folders on the local and virtual system, respectively:\n\n```\nVagrant.configure(2) do |config|\n\tconfig.vm.synced_folder \"$host_folder_path\", \"$guest_folder_path\"\nend\n```\n\nThen download and unzip the single databases to the folder of your choice on your local machine (`cd $host_folder_path`):\n\nswiss_dat\n```shell\nwget ftp://ftp.uniprot.org/pub/databases/uniprot/knowledgebase/uniprot_sprot.dat.gz\ngunzip uniprot_sprot.dat.gz\n```\n\nuniref100, uniref90, swissprot\n```shell\nwget ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref100/uniref100.fasta.gz\ngunzip uniref100.fasta.gz\nwget ftp://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref90/uniref90.fasta.gz\ngunzip uniref90.fasta.gz\nwget ftp://ftp.uniprot.org/pub/databases/uniprot/knowledgebase/uniprot_sprot.fasta.gz\ngunzip uniprot_sprot.fasta.gz\n```\n\ngenerate db_swiss:\n```shell\n/usr/share/librg-utils-perl/dbSwiss --datadir ./ --infile ./uniprot_sprot.dat --table dbswiss\n```\n\nformat fasta databases for use with blast on the virtual machine if used (`formatdb`was already installed as a dependency of SNAP2)\n```shell\nformatdb -i uniref100.fasta\nformatdb -i uniref90.fasta\nformatdb -i uniprot_sprot.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO Use the Web Service",
        "parent_header": [
          "SNAP2",
          "HOWTO Run"
        ],
        "type": "Text_excerpt",
        "value": "The service can be accessed via https://rostlab.org/services/snap/ and https://rostlab.org/services/snap2web/.\n(Exactly) One protein sequence in the Fasta format can be pasted into the textfield. Upon submission via `Run Prediction`, a popup shows up, presenting an adress, which leads to the result page, once the calculations are done.\n\nThe result page shows a heatmap with the input sequence along the x-axis and all 20 possible amino acid exchanges along the y-axis. Below the heatmap, the color code for the heatmap is presented. Red indicates an effect of the respective amino acid exchange, whereas blue predicts the exchange to be neutral with respect to the proteins function.\n\nA sliding window enables the user to zoom into the heatmap. The zoom area is shown below the interpretation scale. Further down, a table presents all possible amiono acid exchanges at every position with the exact numerical scores and estimated accuracy.\n\nFor detailed information about the method, its results, and interpretations, refer to the method description below.\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "HOWTO Use the CLI Tool",
        "parent_header": [
          "SNAP2",
          "HOWTO Run"
        ],
        "type": "Text_excerpt",
        "value": "* Input: Fasta Protein Sequence\n* Output: Prediction Score between -100 (neutral) and 100 (effect) for every possible SNP at every position\n\n```shell\nsnap2 -i /usr/share/doc/snap2/examples/MT4_HUMAN.fasta -m all -o MT4_HUMAN.snap2\n```\n\n* -i specifies the input file with a sequence in fasta format\n* -m specifies the effects at which positions and mutations at this position are to be predicted. With all, all possible positions and mutations are considered\n* -o textual output of snap2, containing a prediction score between -100 (neutral) and 100(effect) for every defined position and mutation of the input sequence\n"
      },
      "source": "https://raw.githubusercontent.com/Rostlab/SNAP2/develop/README.md",
      "technique": "header_analysis"
    }
  ]
}