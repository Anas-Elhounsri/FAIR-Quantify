{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jomayer/SMuRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-01-25T04:11:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-31T13:34:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The SMuRFS algorithm"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9349136854935622,
      "result": {
        "original_header": " The SMuRFS algorithm ",
        "type": "Text_excerpt",
        "value": "<b> Description: </b> Sequential removal of insignificant features. \n<strong> Formula: </strong> A object of class formula. This formula will give the inherent regression equation. \n<strong> data: </strong> A object of class data frame. Names in the data frame must match the names in the formula. Missing data are removed. \n<strong> ntree: </strong> An integer greater than or equal to 1. The number of trees grown for the SMuRFS algorithm. Default is 500. \n<strong> mtry: </strong> An integer greater than or equal to 1. The number of variables sampled for each tree. \n<strong> alpha: </strong> An number between 0 and 1. The significance level declared for feature removal. \n<strong> prop.test: </strong> A number between 0 and 1. The size of the test set for the secondary test, as a proportion of the data. Default is 0.632. \n<strong> response.position: </strong>  The column of which the responses are located. It could be done automatically with the Formula package, but this breaks down in high dimensions. \n<h2> Details </h2> The following is the function to run the Sequential Multi Response Feature Selection (SMURFS). The function selects a subset of features of size <emph> mtry </emph> and a bootstrap sample of size <emph> n </emph>, grows a tree from those features and that bootstrap sample using the conditional inference framework (Hothornet <i> et al. </i>, 2006), then selects the features that are significant at any node of the tree. Features that are not selected are tested on a test set that is a subset of the data. Features that fail the second test are removed from consideration. After <i> ntree </i> iterations the features that survive are the selected features. \n<h2> Value </h2> A list of survived covariates. \n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jomayer/SMuRF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jomayer/SMuRF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jomayer/SMuRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SMuRFS"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9452406127080779,
      "result": {
        "original_header": " The SMuRFS algorithm ",
        "type": "Text_excerpt",
        "value": "<b> Platform: </b> R Version 3.3.2 \n<b> Required packages: </b>  partykit, Formula, strucchange, matrixStats, coin \n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8565317517320893,
      "result": {
        "original_header": " The SMuRFS algorithm ",
        "type": "Text_excerpt",
        "value": "<h2> Examples </h2>  \n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jomayer/SMuRF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SMuRF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jomayer"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:29:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": " Usage ",
        "parent_header": [
          " The SMuRFS algorithm "
        ],
        "type": "Text_excerpt",
        "value": "# SMuRFS\n<h1> The SMuRFS algorithm </h1>\n\n<b> Date: </b> 1/25/2017\n\n<b> Authors: </b> Joshua Mayer, Raziur Rahman, Souparno Ghosh, Randip Pal\n\n<b> Platform: </b> R Version 3.3.2\n\n<b> Required packages: </b>  partykit, Formula, strucchange, matrixStats, coin\n\n<b> Maintainer: </b> Joshua Mayer <emph> joshua.mayer@ttu.edu </emph> \n\n<b> Description: </b> Sequential removal of insignificant features.\n\n<h2> Usage </h2>\n\n<code>\nSMuRFS(formula, data, ntree = 500, mtry, alpha = 0.05, prop.test = .632, response.position)\n</code>\n\n<b> Inputs </b>\n\n<strong> Formula: </strong> A object of class formula. This formula will give the inherent regression equation.\n\n<strong> data: </strong> A object of class data frame. Names in the data frame must match the names in the formula. Missing data are removed.\n\n<strong> ntree: </strong> An integer greater than or equal to 1. The number of trees grown for the SMuRFS algorithm. Default is 500.\n\n<strong> mtry: </strong> An integer greater than or equal to 1. The number of variables sampled for each tree.\n\n<strong> alpha: </strong> An number between 0 and 1. The significance level declared for feature removal.\n\n<strong> prop.test: </strong> A number between 0 and 1. The size of the test set for the secondary test, as a proportion of the data. Default is 0.632.\n\n<strong> response.position: </strong>  The column of which the responses are located. It could be done automatically with the Formula package, but this breaks down in high dimensions.\n\n<h2> Details </h2> The following is the function to run the Sequential Multi Response Feature Selection (SMURFS). The function selects a subset of features of size <emph> mtry </emph> and a bootstrap sample of size <emph> n </emph>, grows a tree from those features and that bootstrap sample using the conditional inference framework (Hothornet <i> et al. </i>, 2006), then selects the features that are significant at any node of the tree. Features that are not selected are tested on a test set that is a subset of the data. Features that fail the second test are removed from consideration. After <i> ntree </i> iterations the features that survive are the selected features.\n\n<h2> Value </h2> A list of survived covariates.\n\n<h2> Examples </h2> \n\n    library(MASS)\n    library(Matrix)\n    set.seed(100)\n    beta <- c(runif(50,1,3), rep(0,950))  \n    sigma.y <- matrix(c(1,0.7,0.7,0.7,1,0.7,0.7,0.7,1), nrow = 3,  byrow = F)\n    omega <- function(n)\n    {\n    my.mat <- matrix(0.7, n, n)\n    diag(my.mat) <- rep(1,n)\n    return(my.mat)\n    }\n    sigma.x <- bdiag(omega(50), diag(1,950))\n    set.seed(100)    \n    xx <- mvrnorm(200, rep(0,1000), sigma.x)\n    means <- xx %*% beta\n    set.seed(100)\n    yy <- t(sapply(1:200, function(i) mvrnorm(n=1, mu = rep(means[i,],3), Sigma = sigma.y)))\n    dat <- as.data.frame(cbind(xx,yy))\n    set.seed(100)\n    var.select <- SMuRFS(formula = V1001 + V1002 + V1003 ~., data = dat, ntree = 500, mtry = 8,\n    alpha = 0.05, prop.test = .632, response.position = c(1001,1002,1003))\n\n################################################################\n################################################################\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": " Examples ",
        "parent_header": [
          " The SMuRFS algorithm "
        ],
        "type": "Text_excerpt",
        "value": "# SMuRFS\n<h1> The SMuRFS algorithm </h1>\n\n<b> Date: </b> 1/25/2017\n\n<b> Authors: </b> Joshua Mayer, Raziur Rahman, Souparno Ghosh, Randip Pal\n\n<b> Platform: </b> R Version 3.3.2\n\n<b> Required packages: </b>  partykit, Formula, strucchange, matrixStats, coin\n\n<b> Maintainer: </b> Joshua Mayer <emph> joshua.mayer@ttu.edu </emph> \n\n<b> Description: </b> Sequential removal of insignificant features.\n\n<h2> Usage </h2>\n\n<code>\nSMuRFS(formula, data, ntree = 500, mtry, alpha = 0.05, prop.test = .632, response.position)\n</code>\n\n<b> Inputs </b>\n\n<strong> Formula: </strong> A object of class formula. This formula will give the inherent regression equation.\n\n<strong> data: </strong> A object of class data frame. Names in the data frame must match the names in the formula. Missing data are removed.\n\n<strong> ntree: </strong> An integer greater than or equal to 1. The number of trees grown for the SMuRFS algorithm. Default is 500.\n\n<strong> mtry: </strong> An integer greater than or equal to 1. The number of variables sampled for each tree.\n\n<strong> alpha: </strong> An number between 0 and 1. The significance level declared for feature removal.\n\n<strong> prop.test: </strong> A number between 0 and 1. The size of the test set for the secondary test, as a proportion of the data. Default is 0.632.\n\n<strong> response.position: </strong>  The column of which the responses are located. It could be done automatically with the Formula package, but this breaks down in high dimensions.\n\n<h2> Details </h2> The following is the function to run the Sequential Multi Response Feature Selection (SMURFS). The function selects a subset of features of size <emph> mtry </emph> and a bootstrap sample of size <emph> n </emph>, grows a tree from those features and that bootstrap sample using the conditional inference framework (Hothornet <i> et al. </i>, 2006), then selects the features that are significant at any node of the tree. Features that are not selected are tested on a test set that is a subset of the data. Features that fail the second test are removed from consideration. After <i> ntree </i> iterations the features that survive are the selected features.\n\n<h2> Value </h2> A list of survived covariates.\n\n<h2> Examples </h2> \n\n    library(MASS)\n    library(Matrix)\n    set.seed(100)\n    beta <- c(runif(50,1,3), rep(0,950))  \n    sigma.y <- matrix(c(1,0.7,0.7,0.7,1,0.7,0.7,0.7,1), nrow = 3,  byrow = F)\n    omega <- function(n)\n    {\n    my.mat <- matrix(0.7, n, n)\n    diag(my.mat) <- rep(1,n)\n    return(my.mat)\n    }\n    sigma.x <- bdiag(omega(50), diag(1,950))\n    set.seed(100)    \n    xx <- mvrnorm(200, rep(0,1000), sigma.x)\n    means <- xx %*% beta\n    set.seed(100)\n    yy <- t(sapply(1:200, function(i) mvrnorm(n=1, mu = rep(means[i,],3), Sigma = sigma.y)))\n    dat <- as.data.frame(cbind(xx,yy))\n    set.seed(100)\n    var.select <- SMuRFS(formula = V1001 + V1002 + V1003 ~., data = dat, ntree = 500, mtry = 8,\n    alpha = 0.05, prop.test = .632, response.position = c(1001,1002,1003))\n\n################################################################\n################################################################\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "",
        "parent_header": [
          " The SMuRFS algorithm ",
          " Examples "
        ],
        "type": "Text_excerpt",
        "value": "# SMuRFS\n<h1> The SMuRFS algorithm </h1>\n\n<b> Date: </b> 1/25/2017\n\n<b> Authors: </b> Joshua Mayer, Raziur Rahman, Souparno Ghosh, Randip Pal\n\n<b> Platform: </b> R Version 3.3.2\n\n<b> Required packages: </b>  partykit, Formula, strucchange, matrixStats, coin\n\n<b> Maintainer: </b> Joshua Mayer <emph> joshua.mayer@ttu.edu </emph> \n\n<b> Description: </b> Sequential removal of insignificant features.\n\n<h2> Usage </h2>\n\n<code>\nSMuRFS(formula, data, ntree = 500, mtry, alpha = 0.05, prop.test = .632, response.position)\n</code>\n\n<b> Inputs </b>\n\n<strong> Formula: </strong> A object of class formula. This formula will give the inherent regression equation.\n\n<strong> data: </strong> A object of class data frame. Names in the data frame must match the names in the formula. Missing data are removed.\n\n<strong> ntree: </strong> An integer greater than or equal to 1. The number of trees grown for the SMuRFS algorithm. Default is 500.\n\n<strong> mtry: </strong> An integer greater than or equal to 1. The number of variables sampled for each tree.\n\n<strong> alpha: </strong> An number between 0 and 1. The significance level declared for feature removal.\n\n<strong> prop.test: </strong> A number between 0 and 1. The size of the test set for the secondary test, as a proportion of the data. Default is 0.632.\n\n<strong> response.position: </strong>  The column of which the responses are located. It could be done automatically with the Formula package, but this breaks down in high dimensions.\n\n<h2> Details </h2> The following is the function to run the Sequential Multi Response Feature Selection (SMURFS). The function selects a subset of features of size <emph> mtry </emph> and a bootstrap sample of size <emph> n </emph>, grows a tree from those features and that bootstrap sample using the conditional inference framework (Hothornet <i> et al. </i>, 2006), then selects the features that are significant at any node of the tree. Features that are not selected are tested on a test set that is a subset of the data. Features that fail the second test are removed from consideration. After <i> ntree </i> iterations the features that survive are the selected features.\n\n<h2> Value </h2> A list of survived covariates.\n\n<h2> Examples </h2> \n\n    library(MASS)\n    library(Matrix)\n    set.seed(100)\n    beta <- c(runif(50,1,3), rep(0,950))  \n    sigma.y <- matrix(c(1,0.7,0.7,0.7,1,0.7,0.7,0.7,1), nrow = 3,  byrow = F)\n    omega <- function(n)\n    {\n    my.mat <- matrix(0.7, n, n)\n    diag(my.mat) <- rep(1,n)\n    return(my.mat)\n    }\n    sigma.x <- bdiag(omega(50), diag(1,950))\n    set.seed(100)    \n    xx <- mvrnorm(200, rep(0,1000), sigma.x)\n    means <- xx %*% beta\n    set.seed(100)\n    yy <- t(sapply(1:200, function(i) mvrnorm(n=1, mu = rep(means[i,],3), Sigma = sigma.y)))\n    dat <- as.data.frame(cbind(xx,yy))\n    set.seed(100)\n    var.select <- SMuRFS(formula = V1001 + V1002 + V1003 ~., data = dat, ntree = 500, mtry = 8,\n    alpha = 0.05, prop.test = .632, response.position = c(1001,1002,1003))\n\n################################################################\n################################################################\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/jomayer/SMuRF/master/README.md",
      "technique": "header_analysis"
    }
  ]
}