{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/meiji-bioinf/heap"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-07-08T08:13:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-29T13:29:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9994797702097803,
      "result": {
        "original_header": "Heap",
        "type": "Text_excerpt",
        "value": "Recent availability of large scale genomic resources enables us to conduct so called genome-wide association studies (GWAS) and genomic prediction (GP) studies, particularly with next-generation sequencing (NGS) data. The effectiveness of GWAS and GP depends on not only their mathematical models, but the quality and quantity of variants employed in the analysis. In NGS single nucleotide polymorphism (SNP) calling, conventional tools ideally require more reads for higher SNP sensitivity and accuracy. In this study, we aimed to develop a tool, Heap, that enables robustly sensitive and accurate calling of SNPs, particularly with a low coverage NGS data, which must be aligned to the reference genome sequences in advance. To reduce false positive SNPs, Heap determines genotypes and calls SNPs at each site except for sites at the both end of reads or containing a minor allele supported by only one read. Performance comparison with existing tools showed that Heap achieved the highest F-scores with low coverage (7X) restriction-site associated DNA sequencing reads of sorghum and rice individuals. This will facilitate cost-effective GWAS and GP studies in this NGS era. Code and documentation of Heap are freely available from https://github.com/meiji-bioinf/heap and our web site (http://bioinf.mind.meiji.ac.jp/lab/en/tools.html).\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9514255135326208,
      "result": {
        "original_header": "2. Algorithm",
        "type": "Text_excerpt",
        "value": "We designed Heap to identify SNPs from short read sequences of diploid species. In Heap analysis, short read sequences must be aligned to reference genome sequences in advance, and information on aligned reads, which is stored in either Sequence Alignment/MAP (SAM) format files or the binary version of [SAM (BAM) format files](https://samtools.github.io/hts-specs/SAMv1.pdf), must be employed. \nAfter importing information on read alignments from a SAM or BAM file, Heap performs read filtering to obtain high quality reads. By default setting of Heap, reads with a phred scaled mapping quality score (MAPQ) below 20 are removed. Bases with a phred scaled quality score in base calling below 13 are also eliminated from the search scope of valid SNP sites. Heap also trims both ends of each read before mining SNPs, because it is empirically observed that these regions contain many base calling errors. By default setting, both ends with 2bp are not counted for SNP searches. If both ends of reads are trimmed in advance, please set option \u201c-e 0\u201d in Heap analysis to retain bases in both ends of reads. Moreover, flanking regions within 5bp of each INDEL site are also removed in SNP calling. \nNext, Heap genotypes within the determined high quality region in each sample. On each nucleotide site, the allele frequency is calculated from the number of nucleotide bases (A, T, C or G) aligned on it. Heap ignores any nucleotide sites with equal to or more than 3 allele options. To determine the zygosity of each allele, a binomial test with allele frequency is performed (the null hypothesis H<sub>0</sub>: the allele is heterozygous). When the _P_ value of the binomial test is less than 0.05, the null hypothesis will be rejected and it is determined to be homozygous. Conversely, when the _P_ value is equal to or more than 0.05 and the minor allele is supported by equal to or more than 2 short reads, it is determined to be heterozygous. If neither is the case, the genotype will be undetermined. \nHeap then performs SNP calling by comparing the genotypes between the sample (e.g. an inbred line) and the reference genome. The information on all SNPs between the sample and the reference genome is stored in a [Variant Call Format (VCF)](http://www.internationalgenome.org/wiki/Analysis/variant-call-format/) file. Finally, to determine SNPs among all samples, the VCF files for all samples are merged in a single VCF file by [BCFtools](https://github.com/samtools/bcftools/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9958230939930565,
      "result": {
        "original_header": "4. Docker image",
        "type": "Text_excerpt",
        "value": "A Docker image [centos7_heap_v0.8.0_dockerImage.tar.gz](http://bioinf.mind.meiji.ac.jp/lab/en/download/centos7_heap_v0.8.0_dockerImage.tar.gz) (216 MB) of heap on CentOS7 with required tools is available. This docker image enables you to use heap easily without installing requeired tools and heap. In advance, please install Docker on your machine according to [Docker offical web site](https://www.docker.com/). Docker is available not only on Linux OS but also MacOS and Windows10.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9542368512018397,
      "result": {
        "original_header": "i. Load the image to Docker",
        "type": "Text_excerpt",
        "value": "In advance load the image, please uncompress the image file as below.\n```\n$ gunzip centos7_heap_v0.8.0_dockerImage.tar.gz\n```\nThe uncompressed image is able to load to Docker as below.\n```\n$ docker load < centos7_heap_v0.8.0_dockerImage.tar\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8283655890024362,
      "result": {
        "original_header": "ii. Create and login to a container",
        "type": "Text_excerpt",
        "value": "After the login to the container, you are able to call SNPs by using heap as described in follow sections. \nTo login to the already exists container, check the id of the container by `docker ps -a`, start the container by `docker start`, and login to the container by `docker attach` as below.\n```\n$ docker ps -a\nCONTAINER ID        IMAGE                     COMMAND             CREATED             STATUS                     PORTS               NAMES\n00d873155a28        centos7/heap:v0.8.0       \"/bin/sh\"           2 hours ago         Exited (0) 6 seconds ago                       unruffled_rosalind\n$ docker start 00d873155a28\n$ docker attach 00d873155a28\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9856379267752884,
      "result": {
        "original_header": "ii. <a href=\"https://github.com/samtools/htslib/\">HTSlib</a> (version 1.1 or more)",
        "type": "Text_excerpt",
        "value": "Heap use `bgzip` and `tabix` commands of HTSlib to compress and index VCFs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8846085868648492,
      "result": {
        "original_header": "iii. <a href=\"https://github.com/samtools/bcftools/\">BCFtools</a> (version 1.1 or more)",
        "type": "Text_excerpt",
        "value": "Heap use a `merge` command of BCFtools to merge raw VCFs, which are created by Heap with each BAM file. \nHeap also use a `view` command of BCFtools to drop off allele count < 1 and trim alternate alleles not seen in subset.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/meiji-bioinf/heap/wiki"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/meiji-bioinf/heap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/meiji-bioinf/heap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "meiji-bioinf/heap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Heap"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing boost for CentOS and Fedora",
        "parent_header": [
          "Heap",
          "5. Required tools",
          "i. <a href=\"http://www.boost.org/\">Boost C++ Libraries</a>"
        ],
        "type": "Text_excerpt",
        "value": "\t$ sudo yum install -y boost-devel\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing boost for Ubuntu",
        "parent_header": [
          "Heap",
          "5. Required tools",
          "i. <a href=\"http://www.boost.org/\">Boost C++ Libraries</a>"
        ],
        "type": "Text_excerpt",
        "value": "\t$ sudo apt-get install -y libboost-all-dev\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing boost for OS X",
        "parent_header": [
          "Heap",
          "5. Required tools",
          "i. <a href=\"http://www.boost.org/\">Boost C++ Libraries</a>"
        ],
        "type": "Text_excerpt",
        "value": "\t$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\t$ brew install boost\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Install",
        "parent_header": [
          "Heap"
        ],
        "type": "Text_excerpt",
        "value": "Download heap-0.8.0.tar.gz and decompress the tarball.\n\n\t$ tar xzvf heap-0.8.0.tar.gz\n\t$ cd heap-0.8.0\n\nThen, configure by `./configure`.\n\n\t$ ./configure\n\nIf HTSlib had been installed to your specified prefix, execute `./configure` and `make` with `LDFLAGS` and `CPPFLAGS` as follows.\n\n\t$ ./configure \\\n\t  LDFLAGS=\"-Wl,-rpath -Wl,/path/to/htslib-1.3.1/lib/ -L/path/to/htslib-1.3.1/lib/\" \\\n\t  CPPFLAGS=\"-I/path/to/htslib-1.3.1/include/\"\n\t$ make \\\n\t  LDFLAGS=\"-Wl,-rpath -Wl,/path/to/htslib-1.3.1/lib/ -L/path/to/htslib-1.3.1/lib/\" \\\n\t  CPPFLAGS=\"-I/path/to/htslib-1.3.1/include/\"\n\nIf compilation is failed with error massage such as `cannot find -lboost_thread`, please try `make` with `LIBS` as follows.\n\n\t$ make \\\n\t  LDFLAGS=\"-Wl,-rpath -Wl,/path/to/htslib-1.3.1/lib/ -L/path/to/htslib-1.3.1/lib/\" \\\n\t  CPPFLAGS=\"-I/path/to/htslib-1.3.1/include/\" \\\n\t  LIBS=\"-lboost_system -lboost_thread-mt -lboost_program_options -lhts\"\n\nFinally, install heap by `sudo make install`\n\n\t$ sudo make install\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9996637929465858,
      "result": {
        "original_header": "3. OS",
        "type": "Text_excerpt",
        "value": "Heap was tested on CentOS 6.6, Fedora 21, Ubuntu 15.04 and Mac OS X yosemite.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999630950393549,
      "result": {
        "original_header": "4. Docker image",
        "type": "Text_excerpt",
        "value": "A Docker image [centos7_heap_v0.8.0_dockerImage.tar.gz](http://bioinf.mind.meiji.ac.jp/lab/en/download/centos7_heap_v0.8.0_dockerImage.tar.gz) (216 MB) of heap on CentOS7 with required tools is available. This docker image enables you to use heap easily without installing requeired tools and heap. In advance, please install Docker on your machine according to [Docker offical web site](https://www.docker.com/). Docker is available not only on Linux OS but also MacOS and Windows10.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9907074885370586,
      "result": {
        "original_header": "i. Load the image to Docker",
        "type": "Text_excerpt",
        "value": "In advance load the image, please uncompress the image file as below.\n```\n$ gunzip centos7_heap_v0.8.0_dockerImage.tar.gz\n```\nThe uncompressed image is able to load to Docker as below.\n```\n$ docker load < centos7_heap_v0.8.0_dockerImage.tar\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9983256509502778,
      "result": {
        "original_header": "ii. Create and login to a container",
        "type": "Text_excerpt",
        "value": "To create a container from the image and login to the container, please execute `docker run` as below.\n```\n$ docker run -it centos7/heap:v0.8.0 /bin/sh\n```\nTo refere a directory on your host machine including your data from a directory on the container, execute `docker run` with `-v` option as below.\n```\n$ docker run -v /Users/mkobayashi/Desktop/heap-0.8.0/testData:/testData -it centos7/heap:v0.8.0 /bin/sh\n```\n \nBy the command, a directory `/Users/mkobayashi/Desktop/heap-0.8.0/testData` on the host machine will be mounted to `/testData` on the container. \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999966671299465,
      "result": {
        "original_header": "i. <a href=\"http://www.boost.org/\">Boost C++ Libraries</a>",
        "type": "Text_excerpt",
        "value": "If boost libraries are not installed in your machine, please install boost libraries as below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/meiji-bioinf/heap/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "heap"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "meiji-bioinf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 44559,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 43697,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 25845,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 20756,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 1189,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:04:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "7. Usage",
        "parent_header": [
          "Heap"
        ],
        "type": "Text_excerpt",
        "value": "If HTSlib and/or BCFtools had been installed to your specified prefix, add path of HTSlib and/or BCFtools previously execute Heap as follows.\n\n\t$ export PATH=/path/to/bcftools/bin/:$PATH\n\t$ export PATH=/path/to/htslib/bin/:$PATH\n\nPlease execute Heap with -h for an operation check.\n\n```\n\n$ ./heap -h\n/usr/bin/bgzip\n/usr/bin/tabix\n/usr/bin/bcftools\nbcftools version 1.3.1\nHeap version 0.8.0 options. Default values are presented in '()'.:\n  -v [ --version ]                      Show version\n  -h [ --help ]                         show help\n  -r [ --ref ] arg                      Reference sequences used for the\n                                        mapping in FASTA format\n  -i [ --in_files ] arg                 Aligned reads in BAM or SAM format\n                                        which must be sorted\n  -o [ --out_file ] arg                 Prefix of output VCF file\n  -m [ --min_mapq ] arg (=20)           Minimum MAPQ value\n  -b [ --min_base_qual ] arg (=13)      Minimum phred scaled base quality score\n  -d [ --min_depth ] arg (=3)           Minimum read depth\n  -e [ --del_end_length ] arg (=2)      Deletion length at the both ends of\n                                        reads (for RAD-Seq, 2 is recommended)\n  -l [ --ignore_indel_length ] arg (=5) Length of INDEL flanking regions to\n                                        ignore\n  -t [ --thread_num ] arg (=1)          Number of threads\n  -p [ --p_val ] arg (=0.0500000007)    P-value for binomial test in genotyping\n\n```\n\nIn this version of Heap, BAM or SAM created by [Burrows-Wheeler Aligner(BWA)](http://bio-bwa.sourceforge.net/index.shtml) is only supported.\n\nBAM or SAM must be sorted previously with the tools such as [SAMtools](http://www.htslib.org/) or [Picard Tools](http://broadinstitute.github.io/picard/).\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "i. Test data",
        "parent_header": [
          "Heap",
          "8. Examples"
        ],
        "type": "Text_excerpt",
        "value": "There is a test data in 'testData' directory.\n\n```\nSbicolor_v2.1_255_Chr01_1-1000000.fa    # A genome sequence of chromosome 1 of Sbicolor_v2.1 between position 1 to 1,000,000.\nGULUM_ABIAD.bam                         # Mapped RAD-seq reads obtained from GULUM_ABIAD.\nRTx430.bam                              # Mapped RAD-seq reads obtained from RTx430.\nSOR_1.bam                               # Mapped RAD-seq reads obtained from GULUM_ABIAD SOR_1.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ii. SNP calling with the test data",
        "parent_header": [
          "Heap",
          "8. Examples"
        ],
        "type": "Text_excerpt",
        "value": "To call SNPs with one sample simply with the test data, please execute `heap` as follows.\n\n\t$ heap -r Sbicolor_v2.1_255_Chr01_1-1000000.fa -i GULUM_ABIAD.bam -o snp\n\nThen, Heap will output SNPs in [VCF (Variant Call Format) version 4.1](http://www.1000genomes.org/wiki/analysis/variant%20call%20format/vcf-variant-call-format-version-41) (snp.vcf.gz).\n\nTo call SNPs with multiple samples, please execute `heap` as follows.\n\n\t$ heap -r Sbicolor_v2.1_255_Chr01_1-1000000.fa -i GULUM_ABIAD.bam -i RTx430.bam -i SOR_1.bam -o snp\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "iii. Result files of SNP calling with the test data",
        "parent_header": [
          "Heap",
          "8. Examples"
        ],
        "type": "Text_excerpt",
        "value": "There are result files from SNP call with the test data in 'testResults' directory.\n\n```\nbcftools_version.txt               # Version of BCFtools used.\nGULUM_ABIAD.bam.raw.vcf.log        # A log file of genotyping with GULUM_ABIAD.bam.\nRTx430.bam.raw.vcf.log             # A log file of genotyping with RTx430.bam.\nSOR_1.bam.raw.vcf.log              # A log file of genotyping with SOR_1.bam.\nGULUM_ABIAD.bam.raw.vcf.gz         # A compressed genotype data in each site with GULUM_ABIAD.bam.\nGULUM_ABIAD.bam.raw.vcf.gz.tbi     # An index of GULUM_ABIAD.bam.raw.vcf.gz.\nRTx430.bam.raw.vcf.gz              # A compressed genotype data in each site with RTx430.bam.\nRTx430.bam.raw.vcf.gz.tbi          # An index of RTx430.bam.raw.vcf.gz.\nSOR_1.bam.raw.vcf.gz               # A compressed genotype data in each site with SOR_1.bam.\nSOR_1.bam.raw.vcf.gz.tbi           # An index of SOR_1.bam.raw.vcf.gz.\nsnp.raw.vcf.gz                     # A compressed genotype data in each site with all samples.\nsnp.vcf.gz                         # A compressed SNP data in each site with all samples.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/meiji-bioinf/heap/master/README.md",
      "technique": "header_analysis"
    }
  ]
}