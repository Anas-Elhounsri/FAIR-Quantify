{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pmelsted/KmerStream"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-03-26T10:38:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-12T07:21:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Streaming algorithm for computing kmer statistics for massive genomics datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8495312504003465,
      "result": {
        "original_header": "KmerStream",
        "type": "Text_excerpt",
        "value": "Streaming algorithm for computing kmer statistics for massive genomics datasets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9208452559112965,
      "result": {
        "original_header": "KmerStreamJoin",
        "type": "Text_excerpt",
        "value": "Creates union of many stream estimates \nKmerStreamJoin, when run with the `-o` option takes a list of KmerStream binary output files (created with `--binary` option to KmerStream) and creates a single binary output file that is equivalent to having run a single KmerStream run on all of the files. When the `-o` option is missing it outputs the KmerStream result of the binary input file. \nThis utility is useful when distributing the process of creating the binary files or computed incrementally. \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9500959347745682,
      "result": {
        "original_header": "KmerStreamEstimate.py",
        "type": "Text_excerpt",
        "value": "KmerStreamEstimate is a python script that reads a tsv file as input (generated using `--tsv`) and estimates the genome size (G), error rate (e), and coverage (lambda).\n \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/pmelsted/KmerStream/wiki"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pmelsted/KmerStream/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pmelsted/KmerStream/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pmelsted/KmerStream"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KmerStream"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "KmerStream"
        ],
        "type": "Text_excerpt",
        "value": "To compile just type `make`\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8895375492688113,
      "result": {
        "original_header": "KmerStreamJoin",
        "type": "Text_excerpt",
        "value": "Usage: KmerStreamJoin -o output files ...\n       KmerStreamJoin merged-file \n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pmelsted/KmerStream/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KmerStream"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pmelsted"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 10130973,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Objective-C",
        "size": 421270,
        "type": "Programming_language",
        "value": "Objective-C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 144522,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1255,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1116,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "KmerStream"
        ],
        "type": "Text_excerpt",
        "value": "To see the usage just type `KmerStream`\n\n~~~\nKmerStream 1.1\n\nEstimates occurrences of k-mers in fastq or fasta files and saves results\n\nUsage: KmerStream [options] ... FASTQ files\n\n-k, --kmer-size=INT      Size of k-mers, either a single value or comma separated list\n-q, --quality-cutoff=INT Comma separated list, keep k-mers with bases above quality threshold in PHRED (default 0)\n-o, --output=STRING      Filename for output\n-e, --error-rate=FLOAT   Error rate guaranteed (default value 0.01)\n-t, --threads=INT        Number of threads to use (default value 1)\n-s, --seed=INT           Seed value for the randomness (default value 0, use time based randomness)\n-b, --bam                Input is in BAM format (default false)\n    --binary             Output is written in binary format (default false)\n    --tsv                Output is written in TSV format (default false)\n    --verbose            Print lots of messages during run\n    --online             Prints out estimates every 100K reads\n    --q64                set if PHRED+64 scores are used (@...h) default used PHRED+33\n~~~\n\nOptions:\n\n+ `-k` the k-mer size, this should be an integer or a list of integers e.g. `-k 31` or `-k 31,47,63`, odd values behave better than even values\n+ `-q` optional quality cutoff values, all k-mers with bases under the `q` threshold are discarded\n+ `-o` filename where the output should be written\n+ `-e` guarantee on the error of the estimator used, default value is 1%, lower values increase memory usage\n+ `-t` number of threads to use\n+ `-s` KmerStream uses random hash functions for computing the statistics, to fix the hash value for reproducibility set the seed to a fixed value, e.g. '-s 42'\n+ `-b` Input is in BAM format\n+ `--binary` Write output in binary format, this includes the data necessary for running `KmerStreamJoin`, the output filename is used as a prefix and the file containing the output is `PREFIX` + `_Q_0_k_31`\n+ `--tsv` Write output in TSV (tab separated values) format for easier parsing\n+ `--online` prints estimates every 100K reads, see (https://pmelsted.wordpress.com/2014/07/12/analyzing-data-while-downloading/)[https://pmelsted.wordpress.com/2014/07/12/analyzing-data-while-downloading/] for example usage\n+ `--q64` Quality values are enchoded in PHRED+64 format rather than the default PHRED+33, use this if your quality values are from `@` to `h` rather than `!` to `I`\n\n"
      },
      "source": "https://raw.githubusercontent.com/pmelsted/KmerStream/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:01:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 53
      },
      "technique": "GitHub_API"
    }
  ]
}