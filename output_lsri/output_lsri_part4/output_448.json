{
  "application_domain": [
    {
      "confidence": 0.81227244483785,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AltAnalyze/cellHarmony-Align"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-17T02:48:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-26T18:37:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Single-Cell RNA-Seq community alignment function for matching query to reference cells."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9809480675031215,
      "result": {
        "original_header": "cellHarmony-Align #",
        "type": "Text_excerpt",
        "value": "Python library for community-clustering-based label projection from a reference to query scRNA-Seq dataset (h5, mtx, txt or csv) to find cells in the reference that are most similar to cells in query. Each CellRanger h5 file is read and partitioned by clustering on the k-nearest neighbor graph. The h5 files can be restricted to marker genes (recommended) and annotated with a custom labels file (recommended). The GUI version of the program with additional functionality can be found at: [http://www.altanalyze.org](http://www.altanalyze.org). More information can be found at [http://www.altanalyze.org/cellHarmony/](http://www.altanalyze.org/cellHarmony/). \nNote, if the data is provided as a sparse (MM) .mtx file not contained in an .h5 file, separate feature and barcode name files (genes.tsv and barcodes.tsv or .gz versions of each, formatted as per cellRanger output) must be provided in the same directory as the expression data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AltAnalyze/cellHarmony-Align/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AltAnalyze/cellHarmony-Align/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AltAnalyze/cellHarmony-Align"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cellHarmony-Align #"
      },
      "source": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://altanalyze.org/cellHarmony/Workflow.png"
      },
      "source": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AltAnalyze/cellHarmony-Align/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cellHarmony-Align"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AltAnalyze"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31551,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements ##",
        "parent_header": [
          "cellHarmony-Align #"
        ],
        "type": "Text_excerpt",
        "value": "python 2.7\nscipy\nnumpy\nannoy\npython-louvain\nnetworkx\nh5py\ngzip\n"
      },
      "source": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:19:47",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "cellHarmony-Align #"
        ],
        "type": "Text_excerpt",
        "value": "```typescript\n\npython scr/cellHarmony_align.py  reference/GSM3489185_Donor_02_h5.h5 query/GSM3489183_IPF_01_h5.h5 alignments.txt  --genes genes/markers.txt --labels labels/CustomLabels.txt\n\n```\n```\nusage: cellHarmony_align.py [-h] [-g GENES] [-s GENOME] [-k NUM_NEIGHBORS]\n                            [-t NUM_TREES] [-l LOUVAIN] [-m MIN_CORRELATION]\n                            [-b LABELS]\n                            reference_h5 query_h5 output\n\n\npositional arguments:\n  reference_h5          a CellRanger h5 file\n  query_h5              a CellRanger h5 file\n  output                the result file to write\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GENES, --genes GENES\n                        a tab-delimited text file with genes in the first column. Also compatible with ICGS heatmap results.\n  -s GENOME, --genome GENOME\n                        genome aligned to (optional)\n  -k NUM_NEIGHBORS, --num_neighbors NUM_NEIGHBORS\n                        number of nearest neighbors to use in clustering,\n                        default: 10\n  -t NUM_TREES, --num_trees NUM_TREES\n                        number of trees to use in random forest for\n                        approximating nearest neighbors, default: 100\n  -l LOUVAIN, --louvain LOUVAIN\n                        what level to cut the clustering dendrogram. 0 is the\n                        most granular, -1 the least. Default: 0\n  -m MIN_CORRELATION, --min_correlation MIN_CORRELATION\n                        the lowest correlation permissible between clusters.\n                        Any clusters in query that don't correlate to ref at\n                        least this well will be skipped. Default: -1\n  -b LABELS, --labels LABELS\n                        a tab-delimited text file with two columns (reference\n                        cell barcode and cluster name)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/AltAnalyze/cellHarmony-Align/master/README.md",
      "technique": "header_analysis"
    }
  ]
}