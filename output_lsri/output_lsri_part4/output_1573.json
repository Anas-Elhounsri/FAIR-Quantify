{
  "application_domain": [
    {
      "confidence": 41.25,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lob-epfl/sofitool"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-13T08:58:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T11:44:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SOFI simulation tool: a software package for simulating and testing super-resolution optical fluctuation imaging"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.90601892852925,
      "result": {
        "type": "Text_excerpt",
        "value": "SOFI simulation tool: a software package for simulating and testing super-resolution optical fluctuation imaging \nwith a list of properties. Note the 'ComputeCapibility' of your graphics card. \n\n - To use the '2D SOFI GPU' algorithm: \nStep 1: prior to launching the GUI, note the 'ComputeCapibility' of your graphics card which is for example '2.0' in the case of NVIDIA Geforce GTX 480. \nThe compute capability of a graphics card can also be found here: https://developer.nvidia.com/cuda-gpus\nStep 2: Set the Matlab current folder to \"GUI\\codeSofi\\SOFI\\private\". The tab \"Current folder\" should display 18 files, 4 of which are 'gpu.cu', 'gpu.ptx', 'nvcc.m' and 'nvccbat.bat'.\nStep 3: Execute the following command on the \"Command Window\": \n>> nvcc -arch=sm_20 -ptx gpu.cu\nThis command launches the NVIDIA compiler to recompile gpu.cu. Make sure that the -arch option is set to the compute capability of your CUDA-capable graphics card. \nIn the example displayed above, it is 2.0 (the compute capibility of NVIDIA Geforce GTX 480).\n \n"
      },
      "source": "https://raw.githubusercontent.com/lob-epfl/sofitool/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lob-epfl/sofitool/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lob-epfl/sofitool/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lob-epfl/sofitool"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/lob-epfl/sofitool/master/README.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.960397587593708,
      "result": {
        "type": "Text_excerpt",
        "value": "Step 1: Open Matlab and set the folder \"GUI\" as your current folder. The tab \"Current folder\" on matlab should display the following folders and matlab files:\n+ codeSimulation\n+ codeSofi\n+ codeStorm\n+ codeUtils\n+ Simulator Examples\n+ SOFI_algorithms\n+ SOFI_demoMenu\n+ SOFI_helpMenu\n+ SOFI_startMenu\nalgorithms.fig\nalgorithms.m\nSOFItutorial_demoMenu.fig\nSOFItutorial_demoMenu.m\nSOFItutorial_resultsMenu.fig\nSOFItutorial_resultsMenu.m\nSOFItutorial_startMenu.fig\nSOFItutorial_startMenu.m \nStep 2: Execute the following command on the \"Command Window\":\n>> SOFItutorial_startMenu  \n\n/////////////////////////////////////////////////////////////////\nUsing GPU algorithms \n - Algorithms available for the Simulator are '2D SOFI', 'STORM', 'FALCON STORM GPU' and '2D SOFI GPU'. \nBoth Falcon and SOFI-GPU require that the computer has a CUDA-enabled NVIDIA GPU (http://ch.mathworks.com/discovery/matlab-gpu.html).\nIf you have the Matlab Parallel Processing Toolbox and a NVIDIA graphics card, write the following command on the \"Command Window\": \n\n - To use the '2D SOFI GPU' algorithm: \nStep 1: prior to launching the GUI, note the 'ComputeCapibility' of your graphics card which is for example '2.0' in the case of NVIDIA Geforce GTX 480. \nThe compute capability of a graphics card can also be found here: https://developer.nvidia.com/cuda-gpus\nStep 2: Set the Matlab current folder to \"GUI\\codeSofi\\SOFI\\private\". The tab \"Current folder\" should display 18 files, 4 of which are 'gpu.cu', 'gpu.ptx', 'nvcc.m' and 'nvccbat.bat'.\nStep 3: Execute the following command on the \"Command Window\": \n>> nvcc -arch=sm_20 -ptx gpu.cu\nThis command launches the NVIDIA compiler to recompile gpu.cu. Make sure that the -arch option is set to the compute capability of your CUDA-capable graphics card. \nIn the example displayed above, it is 2.0 (the compute capibility of NVIDIA Geforce GTX 480).\n \n"
      },
      "source": "https://raw.githubusercontent.com/lob-epfl/sofitool/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lob-epfl/sofitool/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sofitool"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lob-epfl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 652895,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 1391,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M",
        "size": 377,
        "type": "Programming_language",
        "value": "M"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 212,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Mercury",
        "size": 99,
        "type": "Programming_language",
        "value": "Mercury"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lob-epfl/sofitool/master/README.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:35:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}