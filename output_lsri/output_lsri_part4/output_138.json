{
  "application_domain": [
    {
      "confidence": 19.44,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite Dmipy",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python"
        ],
        "type": "Text_excerpt",
        "value": "- **Primary Reference**: Rutger Fick, Demian Wassermann and Rachid Deriche, \"The Dmipy Toolbox: Diffusion MRI Multi-Compartment Modeling and Microstructure Recovery Made Easy\", *Frontiers in Neuroinformatics* 13 (2019): 64.\n- **Github Repository**: Rutger Fick, Rachid Deriche, & Demian Wassermann. (2019, October 15). *The Dmipy Toolbox: Diffusion MRI Multi-Compartment Modeling and Microstructure Recovery Made Easy (Version 1.0)*. Zenodo. http://doi.org/10.5281/zenodo.3490325\n\n[Package Acknowledgements](https://github.com/AthenaEPI/dmipy/blob/master/Acknowledgements.md)\n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AthenaEPI/dmipy"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to contribute to Dmipy",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python"
        ],
        "type": "Text_excerpt",
        "value": "Dmipy's design is completely modular and can easily be extended with new models, distributions or optimizers. To contribute, view our [contribution guidelines](https://github.com/AthenaEPI/dmipy/blob/master/contribution_guidelines.rst)."
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-22T06:54:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-20T13:28:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The open source toolbox for reproducible diffusion MRI-based microstructure estimation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9619137822483079,
      "result": {
        "original_header": "Dmipy: Diffusion Microstructure Imaging in Python",
        "type": "Text_excerpt",
        "value": "The Dmipy software package facilitates the **reproducible estimation of diffusion MRI-based microstructure features**. It does this by taking a completely modular approach to Microstructure Imaging. Using Dmipy you can design, fit, and recover the parameters of any multi-compartment microstructure model in usually less than 10 lines of code. Created models can be used to simulate and fit data for any PGSE-based dMRI acquisition, including single shell, multi-shell, multi-diffusion time and multi-TE acquisition schemes. Dmipy's main features include: \n**Complete Freedom in Model Design and Optimization**\n- Any combination of tissue models (e.g. Gaussian, Cylinder, Sphere) and axon bundle representation (e.g. orientation-dispersed/diameter-distributed) can be combined into a multi-compartment model.\n- Any appropriate model can be orientation-dispersed and/or axon diameter-distributed.\n- Any predefined or custom parameter constraints or relations can be imposed.\n- Free choice of global optimizer to fit your model to the data (Brute-Force or Stochastic).\n- Fit the spherical mean of any multi-compartment model to the spherical mean of the data.\n- Generalized multi-compartment constrained spherical deconvolution. \n**Human Connectome Project Data Interface**\nDmipy enables you to directly download any HCP subject data using your own credentials. \n**Numba-Accelerated, Multi-Core processing**\nDmipy takes heavy advantage of Python's *pathos* multi-core processing and *numba* function compilation. \n**Documentation on Tissue and Microstructure Models**\nWe include documentation and illustrations of all tissue models and parameter distributions, as well as example implementations and results on HCP data for Ball and Stick, Ball and Racket, NODDI-Watson/Bingham, AxCaliber, Spherical Mean models and more. \n**Dipy Compatibility**\nDmipy is designed to be complementary for Dipy users. Dipy gradient tables can be directly used in Dmipy models, Dipy models can be used to give initial parameter guesses for Dmipy optimization, and Dmipy models that estimate Fiber Orientation Distributions (FODs) can be visualized and used for tractography in Dipy. \nDmipy allows the user to do Microstructure Imaging research at the highest level, while the package automatically takes care of all the coding architecture that is needed to fit a designed model to a data set. The Dmipy documentation can be found at http://dmipy.readthedocs.io/. If you use Dmipy for your research publications, we kindly request you cite this package at the reference at the bottom of this page.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9244566868832959,
      "result": {
        "original_header": "Dmipy implementations of Microstructure Models in Literature",
        "type": "Text_excerpt",
        "value": "Dmipy uses HCP data to illustrate microstructure model examples. To reproduce these examples, dmipy provides a direct way to download HCP data (using your own AWS credentials) in the [HCP tutorial](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_human_connectome_project_aws.ipynb). \n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9702124341986927,
      "result": {
        "original_header": "Single Bundle Models",
        "type": "Text_excerpt",
        "value": "- [Ball and Stick [Behrens et al. 2003]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_ball_and_stick.ipynb)\n- [Ball and Racket [Sotiropoulos et al. 2012]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_ball_and_racket.ipynb)\n- [NODDI-Watson [Zhang et al. 2012]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_noddi_watson.ipynb)\n- [NODDI-Bingham [Tariq et al. 2016]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_noddi_bingham.ipynb)\n- [Multi-Tissue NODDI [Frigo et al. 2020]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_multi_tissue_noddi.ipynb)\n- [SMT-NODDI [Cabeen et al. 2019]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_smt_noddi.ipynb)\n- [AxCaliber [Assaf et al. 2008]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_axcaliber.ipynb)\n- [AxCaliber with Extra-Axonal Diffusion Time-Dependence [De Santis et al. 2016]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_axcaliber_temporal_zeppeline.ipynb)\n \n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9852449451673567,
      "result": {
        "original_header": "Crossing Bundle Models",
        "type": "Text_excerpt",
        "value": "- [Ball and Sticks [Behrens et al. 2003]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_ball_and_sticks.ipynb)\n- [NODDI in Crossings (NODDIx) [Farooq et al. 2016]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_mix_microstructure_imaging_in_crossings.ipynb)\n \n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://dmipy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/AthenaEPI/dmipy/wiki"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AthenaEPI/dmipy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_tissue_constrained_spherical_deconvolution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_tissue_constrained_spherical_deconvolution.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_single_shell_three_tissue_csd.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_single_shell_three_tissue_csd.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_sphere_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_sphere_models.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_generalized_csd_optimizer.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_generalized_csd_optimizer.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_mix_microstructure_imaging_in_crossings.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_mix_microstructure_imaging_in_crossings.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_parameter_cascading_and_simulating_nd_datasets.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_parameter_cascading_and_simulating_nd_datasets.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_mean_technique.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_mean_technique.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_generalized_multi_tissue_modeling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_generalized_multi_tissue_modeling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_stick.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_stick.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_human_connectome_project_aws.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_human_connectome_project_aws.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_diameter_distributions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_diameter_distributions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_watson_bingham.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_watson_bingham.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_amico_test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_amico_test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_combining_biophysical_models_into_microstructure_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_combining_biophysical_models_into_microstructure_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_stochastic_mix_optimization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_stochastic_mix_optimization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ivim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ivim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_sticks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_sticks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_setting_up_acquisition_scheme.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_setting_up_acquisition_scheme.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_brute_force_optimization.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_brute_force_optimization.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_distributed_model_representations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_distributed_model_representations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_generate_camino_schemefile.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_generate_camino_schemefile.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_smt_noddi.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_smt_noddi.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_gaussian_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_gaussian_models.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_noddi_bingham.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_noddi_bingham.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_mean_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_mean_models.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_axcaliber.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_axcaliber.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_verdict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_verdict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_deconvolution_with_global_constraints.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_spherical_deconvolution_with_global_constraints.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_cylinder_models.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_cylinder_models.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_axcaliber_temporal_zeppeline.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_axcaliber_temporal_zeppeline.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_imposing_parameter_links.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_imposing_parameter_links.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_racket.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_ball_and_racket.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_compartment_spherical_mean_technique.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_compartment_spherical_mean_technique.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_tissue_noddi.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_tissue_noddi.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_simulating_and_fitting_using_a_simple_model.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/tutorial_simulating_and_fitting_using_a_simple_model.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_noddi_watson.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_noddi_watson.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_compartment_constrained_spherical_deconvolution.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/examples/example_multi_compartment_constrained_spherical_deconvolution.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 31
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AthenaEPI/dmipy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AthenaEPI/dmipy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dmipy: Diffusion Microstructure Imaging in Python"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/doc/push.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python"
        ],
        "type": "Text_excerpt",
        "value": "You can install dmipy using pypi by typing in your terminal\n- python3 -m pip install dmipy\n\nor you can manually\n- clone repository\n- python setup.py install\n\nSee solutions to [common issues](https://github.com/AthenaEPI/dmipy/blob/master/common_issues.md)"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AthenaEPI/dmipy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "axcaliber, ball-and-racket, ball-and-stick, constrained-spherical-deconvolution, diffusion-mri, diffusion-time-dependence, microscopic-diffusion-imaging, microstructure-estimation, microstructure-imaging-in-crossings, multi-compartment-modeling, multi-echo-time, multi-shell, multi-tissue-csd, neuroimaging, neuroscience, noddi, noddi-bingham, optimization, reproducible-research, spherical-mean-technique"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2017 Rutger Fick & Demian Wassermann\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dmipy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AthenaEPI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 578733,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 268,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rutgerfick",
          "type": "User"
        },
        "date_created": "2020-02-20T15:55:43Z",
        "date_published": "2020-02-20T16:18:23Z",
        "description": "Includes a bugfix that now correctly allows prediction of other acquisition scheme than the fitted one in MC-SH.\r\nThanks @matteofrigo for spotting this bug.",
        "html_url": "https://github.com/AthenaEPI/dmipy/releases/tag/1.0.1",
        "name": "Bugfix in MultiCompartmentSphericalHarmonicsModel",
        "release_id": 23848181,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/AthenaEPI/dmipy/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/AthenaEPI/dmipy/releases/23848181",
        "value": "https://api.github.com/repos/AthenaEPI/dmipy/releases/23848181",
        "zipball_url": "https://api.github.com/repos/AthenaEPI/dmipy/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rutgerfick",
          "type": "User"
        },
        "date_created": "2019-10-01T19:47:04Z",
        "date_published": "2019-10-15T08:43:51Z",
        "description": "With the official publication of the Dmipy journal paper, we hereby also release the mature version of the Dmipy codebase. The reference is the following:\r\n\r\nFick, Rutger HJ, Demian Wassermann, and Rachid Deriche. \"The Dmipy Toolbox: Diffusion MRI Multi-Compartment Modeling and Microstructure Recovery Made Easy.\" Frontiers in Neuroinformatics 13 (2019): 64.\r\n\r\nDmipy's modular, on-the-fly model generation implementation allows for the implementation and exploration of most imaginable PGSE dMRI-based multi-compartment modeling approaches and variants, that are available in the literature. Moreover, Dmipy goes beyond the state-of-the-art by facilitating the creation of cross-framework or iterative MC-models (that have multiple, separate optimization steps), and generalizing multi-tissue MC-modeling for all MC-model variants. To demonstrate, the examples page explicitly implements tens of MC-models and demonstrates their use.",
        "html_url": "https://github.com/AthenaEPI/dmipy/releases/tag/1.0",
        "name": "Official Stable Release of Dmipy Toolbox v1.0",
        "release_id": 20703107,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/AthenaEPI/dmipy/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/AthenaEPI/dmipy/releases/20703107",
        "value": "https://api.github.com/repos/AthenaEPI/dmipy/releases/20703107",
        "zipball_url": "https://api.github.com/repos/AthenaEPI/dmipy/zipball/1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rutgerfick",
          "type": "User"
        },
        "date_created": "2018-03-03T03:00:41Z",
        "date_published": "2018-03-03T17:58:32Z",
        "description": "First release to create Zenodo reference.",
        "html_url": "https://github.com/AthenaEPI/dmipy/releases/tag/0.1",
        "name": "First Release of Dmipy: An Open-source Framework for Reproducible dMRI-Based Microstructure Research",
        "release_id": 9924805,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/AthenaEPI/dmipy/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/AthenaEPI/dmipy/releases/9924805",
        "value": "https://api.github.com/repos/AthenaEPI/dmipy/releases/9924805",
        "zipball_url": "https://api.github.com/repos/AthenaEPI/dmipy/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python"
        ],
        "type": "Text_excerpt",
        "value": "Recommended to use Anaconda Python distribution.\n- numpy >= 1.13\n- scipy\n- [dipy](http://nipy.org/dipy/)\n- [cvxpy](http://www.cvxpy.org/)\n- boto (optional for HCP-AWS interface)\n- [pathos](https://pypi.python.org/pypi/pathos) (optional for multi-core processing)\n- [numba](https://numba.pydata.org/) (optional for faster functions)\n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:02:32",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 96
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python"
        ],
        "type": "Text_excerpt",
        "value": "To get a feeling for how to use Dmipy, we provide a few tutorial notebooks:\n- [Setting up an acquisition scheme](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_setting_up_acquisition_scheme.ipynb)\n- [Simulating and fitting data using a simple Stick model](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_simulating_and_fitting_using_a_simple_model.ipynb)\n- [Combining biophysical models into a Microstructure model](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_combining_biophysical_models_into_microstructure_model.ipynb)\n- [Creating a dispersed and/or distributed axon bundle representation](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_distributed_model_representations.ipynb)\n- [Imposing parameter links and constraints](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_imposing_parameter_links.ipynb)\n- [Parameter Cascading: Using a simple model to initialize a complex one](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_parameter_cascading_and_simulating_nd_datasets.ipynb)\n- [Generalized Multi-Tissue Modeling](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/tutorial_generalized_multi_tissue_modeling.ipynb)\n"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Biophysical Models and Distributions",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python",
          "Explanations and Illustrations of Dmipy Contents"
        ],
        "type": "Text_excerpt",
        "value": "- [Cylinder Models (Axons, e.g. [Assaf et al. 2004])](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_cylinder_models.ipynb)\n- [Sphere Models (Tumor cells, e.g. [Panagiotaki et al. 2014])](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_sphere_models.ipynb)\n- [Parameter Distribution Models (Axon Diameter Distribution, e.g. [Assaf et al. 2008])](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_diameter_distributions.ipynb)\n- [Gaussian Models (Extra-axonal, e.g. [Behrens et al. 2003])](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_gaussian_models.ipynb)\n- Tissue Response Function Models and Estimation (WM/GM/CSF, e.g. [Jeurissen et al. 2014])\n- [Spherical Distribution Models (Axon Dispersion, e.g. [Kaden et al. 2007])](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_watson_bingham.ipynb)\n- [Spherical Mean of any Compartment Model](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_spherical_mean_models.ipynb)"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Global Multi-Compartment Optimizers",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python",
          "Explanations and Illustrations of Dmipy Contents"
        ],
        "type": "Text_excerpt",
        "value": "- [Brute Force to Gradient Descent (Brute2Fine)](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_brute_force_optimization.ipynb)\n- [Stochastic (MIX) [Farooq et al. 2016]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_stochastic_mix_optimization.ipynb)"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Constrained Spherical Deconvolution Optimizers",
        "parent_header": [
          "Dmipy: Diffusion Microstructure Imaging in Python",
          "Explanations and Illustrations of Dmipy Contents"
        ],
        "type": "Text_excerpt",
        "value": "- [Generalized Multi-Shell Multi-Compartment CSD [Tournier et al. 2007, Jeurissen et al. 2014]](http://nbviewer.jupyter.org/github/AthenaEPI/dmipy/blob/master/examples/example_generalized_csd_optimizer.ipynb)"
      },
      "source": "https://raw.githubusercontent.com/AthenaEPI/dmipy/master/README.md",
      "technique": "header_analysis"
    }
  ]
}