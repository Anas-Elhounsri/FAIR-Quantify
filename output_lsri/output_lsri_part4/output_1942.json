{
  "application_domain": [
    {
      "confidence": 0.9966999219105116,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9199462628547579,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/danmaclean/2kplus2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-05-20T08:01:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-16T06:53:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2kplus2 bubbles detection"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9908314870914976,
      "result": {
        "original_header": "2kplus2",
        "type": "Text_excerpt",
        "value": "2kplus2 is a new algorithm that search graphs produced from the de novo assembler cortex [1]. The 2k+2 algorithm use concepts taken from the graph theory in order to search for possible SNPs. Cortex uses de bruijn graphs to assemble genomes from sequencing reads, and in the process, an interesting phenomenon emerges from these graphs in the shape of \"bubbles\" [1]. These bubbles maybe a formulation of potential SNPs and Indels which, if found in the graph, can be extracted for further analysis [2]. The proposed algorithm construct a simplified undirected graph from the cortex's de bruijn graph then search for specic bubbles that match 2k+2 cycles where K is the k-mer size of the assembled genome.  2K+2 cycles have high prediction rate to be potential SNPs [3]. \n\n2kplus2.cpp is a c++ source code for the detection and the classification of single nucleotide polymorphisms in transformed De Bruijn graphs using Cortex assembler. \n"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8799630744116272,
      "result": {
        "original_header": "Compilation",
        "type": "Text_excerpt",
        "value": "Compilation is straightforward and can be achieved with the following command.\n```\n\tg++ 2kplus2.cpp -o 2kplus2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/danmaclean/2kplus2/wiki"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/danmaclean/2kplus2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/buscador.ipynb"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/buscador.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/danmaclean/2kplus2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "danmaclean/2kplus2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2kplus2"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8095051255450985,
      "result": {
        "original_header": "Compilation",
        "type": "Text_excerpt",
        "value": "Compilation is straightforward and can be achieved with the following command.\n```\n\tg++ 2kplus2.cpp -o 2kplus2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/danmaclean/2kplus2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2kplus2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "danmaclean"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 84781,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 7987,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 4875,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 3147,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "danmaclean",
          "type": "User"
        },
        "date_created": "2014-05-20T08:08:29Z",
        "date_published": "2014-05-20T10:38:01Z",
        "description": "Primary version of Reda's software for review\n",
        "html_url": "https://github.com/danmaclean/2kplus2/releases/tag/0.1",
        "name": "Review Version",
        "release_id": 330089,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/danmaclean/2kplus2/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/danmaclean/2kplus2/releases/330089",
        "value": "https://api.github.com/repos/danmaclean/2kplus2/releases/330089",
        "zipball_url": "https://api.github.com/repos/danmaclean/2kplus2/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "2kplus2"
        ],
        "type": "Text_excerpt",
        "value": "Run the program by providing a coloured Cortex [1] .ctx graph file as an argument\n\n```\n\t2kplus2 graph.ctx\n```\n\n\n* [1] De novo assembly and genotyping of variants using colored de Bruijn graphs. Iqbal Z, Caccamo M, Turner I, Flicek P, McVean G. Nature Genetics. 2012 Feb; 44(2):226-32\n* [2] Identifying and classifying trait linked polymorphisms in non reference species by walking coloured de Bruijn graphs Leggett R, et al, plos one, 2013.\n* [3] Detecting single nucleotide polymorphisms in complex portions of k-mer graphs. Reda Younsi et al, Bioinformatics, 2014 (submitted).\n"
      },
      "source": "https://raw.githubusercontent.com/danmaclean/2kplus2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:48:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}