{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "bibentry(\n  bibtype  = \"Article\",\n  title    = \"clustermq enables efficient parallelisation of genomic analyses\",\n  author   = \"Michael Schubert\",\n  journal  = \"Bioinformatics\",\n  month    = \"May\",\n  year     = \"2019\",\n  language = \"en\",\n  doi      = \"10.1093/bioinformatics/btz284\",\n  url      = \"https://github.com/mschubert/clustermq\",\n  textVersion = paste(\n    \"Schubert, M.\",\n    \"clustermq enables efficient parallelisation of genomic analyses.\",\n    \"Bioinformatics (2019).\",\n    \"doi:10.1093/bioinformatics/btz284\"\n  ),\n  header = \"To cite clustermq in publications use:\"\n)\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "This project is part of my academic work, for which I will be evaluated on\ncitations. If you like me to be able to continue working on research support\ntools like `clustermq`, please cite the article when using it for publications:\n\n> M Schubert. clustermq enables efficient parallelisation of genomic analyses.\n> *Bioinformatics* (2019).\n> [doi:10.1093/bioinformatics/btz284](https://doi.org/10.1093/bioinformatics/btz284)\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mschubert/clustermq"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "Contributions are welcome and they come in many different forms, shapes, and\nsizes. These include, but are not limited to:\n\n* **Questions**: Ask on the [Github\n  Discussions](https://github.com/mschubert/clustermq/discussions) board. If\n  you are an advanced user, please also consider answering questions there.\n* **Bug reports**: [File an issue](https://github.com/mschubert/clustermq/issues)\n  if something does not work as expected. Be sure to\n  include a self-contained [Minimal Reproducible\n  Example](https://stackoverflow.com/help/minimal-reproducible-example) and set\n  `log_worker=TRUE`.\n* **Code contributions**: Have a look at the [`good first\n  issue`](https://github.com/mschubert/clustermq/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)\n  tag. Please discuss anything more complicated before putting a lot of work\n  in, I'm happy to help you get started.\n\n> [!TIP]\n> Check the\n> [User Guide](https://mschubert.github.io/clustermq/articles/userguide.html) and the\n> [FAQ](https://mschubert.github.io/clustermq/articles/faq.html) first, maybe\n> your query is already answered there\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-18T14:48:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-19T09:13:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R package to send function calls as jobs on LSF, SGE, Slurm, PBS/Torque, or each via SSH"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mschubert/clustermq/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "ClusterMQ: send R function calls as cluster jobs",
        "type": "Text_excerpt",
        "value": "[![CRAN version](http://www.r-pkg.org/badges/version/clustermq)](https://cran.r-project.org/package=clustermq)\n[![Build Status](https://github.com/mschubert/clustermq/workflows/R-check/badge.svg?branch=master)](https://github.com/mschubert/clustermq/actions)\n[![CRAN downloads](http://cranlogs.r-pkg.org/badges/clustermq)](https://cran.r-project.org/package=clustermq)\n[![DOI](https://zenodo.org/badge/DOI/10.1093/bioinformatics/btz284.svg)](https://doi.org/10.1093/bioinformatics/btz284)\n\nThis package will allow you to send function calls as jobs on a computing\ncluster with a minimal interface provided by the `Q` function:\n\n```r\n# load the library and create a simple function\nlibrary(clustermq)\nfx = function(x) x * 2\n\n# queue the function call on your scheduler\nQ(fx, x=1:3, n_jobs=1)\n# list(2,4,6)\n```\n\nComputations are done [entirely on the network](https://zeromq.org/)\nand without any temporary files on network-mounted storage, so there is no\nstrain on the file system apart from starting up R once per job. All\ncalculations are load-balanced, i.e. workers that get their jobs done faster\nwill also receive more function calls to work on. This is especially useful if\nnot all calls return after the same time, or one worker has a high load.\n\nBrowse the vignettes here:\n\n* [User Guide](https://mschubert.github.io/clustermq/articles/userguide.html)\n* [Technical Documentation](https://mschubert.github.io/clustermq/articles/technicaldocs.html)\n* [FAQ](https://mschubert.github.io/clustermq/articles/faq.html)\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Schedulers",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "An HPC cluster's scheduler ensures that computing jobs are distributed to\navailable worker nodes. Hence, this is what clustermq interfaces with in order\nto do computations.\n\nWe currently support the [following\nschedulers](https://mschubert.github.io/clustermq/articles/userguide.html#configuration)\n(either locally or via SSH):\n\n* [Multiprocess](https://mschubert.github.io/clustermq/articles/userguide.html#local-parallelization) -\n  *test your calls and parallelize on cores using* `options(clustermq.scheduler=\"multiprocess\")`\n* [SLURM](https://mschubert.github.io/clustermq/articles/userguide.html#slurm) - *should work without setup*\n* [LSF](https://mschubert.github.io/clustermq/articles/userguide.html#lsf) - *should work without setup*\n* [SGE](https://mschubert.github.io/clustermq/articles/userguide.html#sge) - *may require configuration*\n* [PBS](https://mschubert.github.io/clustermq/articles/userguide.html#pbs)/[Torque](https://mschubert.github.io/clustermq/articles/userguide.html#torque) - *needs* `options(clustermq.scheduler=\"PBS\"/\"Torque\")`\n* via [SSH](https://mschubert.github.io/clustermq/articles/userguide.html#ssh-connector) -\n*needs* `options(clustermq.scheduler=\"ssh\", clustermq.ssh.host=<yourhost>)`\n\n> [!TIP]\n> Follow the links above to configure your scheduler in case it is not working\n> out of the box and check the\n> [FAQ](https://mschubert.github.io/clustermq/articles/faq.html) if\n> your job submission errors or gets stuck\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Comparison to other packages",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "There are some packages that provide high-level parallelization of R function calls\non a computing cluster. We compared `clustermq` to `BatchJobs` and `batchtools` for\nprocessing many short-running jobs, and found it to have approximately 1000x less\noverhead cost.\n\n![Overhead comparison](http://image.ibb.co/cRgYNR/plot.png)\n\nIn short, use `clustermq` if you want:\n\n* a one-line solution to run cluster jobs with minimal setup\n* access cluster functions from your local Rstudio via SSH\n* fast processing of many function calls without network storage I/O\n\nUse [`batchtools`](https://github.com/mllg/batchtools) if you:\n\n* want to use a mature and well-tested package\n* don't mind that arguments to every call are written to/read from disc\n* don't mind there's no load-balancing at run-time\n\nUse [Snakemake](https://snakemake.readthedocs.io/en/latest/) or\n[`targets`](https://github.com/ropensci/targets) if:\n\n* you want to design and run a workflow on HPC\n\nDon't use [`batch`](https://cran.r-project.org/package=batch)\n(last updated 2013) or [`BatchJobs`](https://github.com/tudo-r/BatchJobs)\n(issues with SQLite on network-mounted storage).\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mschubert/clustermq/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mschubert/clustermq"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ClusterMQ: send R function calls as cluster jobs"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mschubert/clustermq/master/src/util/patch_libzmq.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.1093/bioinformatics/btz284"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://image.ibb.co/cRgYNR/plot.png"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "Install the `clustermq` package in R from CRAN (including the bundled\n[ZeroMQ](https://github.com/zeromq/libzmq) system library):\n\n```r\ninstall.packages('clustermq')\n```\n\nAlternatively you can use the `remotes` package to install directly from\nGithub. Note that this version needs `autoconf`/`automake` and `CMake` for\ncompilation:\n\n```r\n# install.packages('remotes')\nremotes::install_github('mschubert/clustermq')\n# remotes::install_github('mschubert/clustermq@develop') # dev version\n```\n\n> [!TIP]\n> For installation problems, see the\n> [FAQ](https://mschubert.github.io/clustermq/articles/faq.html)\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mschubert/clustermq/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cluster, high-performance-computing, lsf, r-package, sge, slurm, ssh"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "clustermq"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mschubert"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 79842,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 31911,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1647,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1011,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 177,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2024-08-19T09:13:04Z",
        "date_published": "2024-08-19T09:15:30Z",
        "description": "* Fix a bug where an outdated system `libzmq` led to compilation errors (#327)\r\n* New option `clustermq.ports` specifies eligible port range (#328) @michaelmayer2",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.5",
        "name": "clustermq 0.9.5",
        "release_id": 170828764,
        "tag": "v0.9.5",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/170828764",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/170828764",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2024-03-04T09:19:45Z",
        "date_published": "2024-03-04T15:25:06Z",
        "description": "* Fix a bug where worker stats were shown as `NA` (#325) @luwidmer\r\n* Worker API: `env()` now visibly lists environment if called without arguments",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.4",
        "name": "clustermq 0.9.4",
        "release_id": 144669158,
        "tag": "v0.9.4",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/144669158",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/144669158",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2024-01-09T18:37:58Z",
        "date_published": "2024-01-09T18:39:54Z",
        "description": "* Fix a bug where `BiocParallel` did not export required objects (#302) @bhayete-empress\r\n* Fix a bug where already finished workers were killed (#307) @luwidmer\r\n* Fix a bug where worker results and stats could be garbage collected (#324) @kkman\r\n* There is now an FAQ vignette with answers to frequently asked questions\r\n* Worker API: `send()` now reports a call identifier that `current()` tracks",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.3",
        "name": "clustermq 0.9.3",
        "release_id": 136379013,
        "tag": "v0.9.3",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/136379013",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/136379013",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2023-12-08T00:28:51Z",
        "date_published": "2023-12-08T00:30:11Z",
        "description": "* Fix a bug where SSH proxy would not cache data properly (#320) @wardfont\r\n* Fix a bug where `max_calls_worker` was not respected (#322) @bhayete-empress\r\n* Local parallelism (`multicore`, `multiprocess`) again uses local IP (#321) @wlandau \r\n* Worker API: `info()` now also returns current worker and number of calls",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.2",
        "name": "clustermq 0.9.2",
        "release_id": 133111887,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/133111887",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/133111887",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2023-11-21T15:39:37Z",
        "date_published": "2023-11-21T15:41:23Z",
        "description": "* Disconnect monitor (_libzmq_ with `-DZMQ_BUILD_DRAFT_API=1`) is now optional (#317)\r\n* Fix a bug where worker shutdown notifications can cause a crash (#306, #308, #310)\r\n* Fix a bug where template values were not filled correctly (#309)\r\n* Fix a bug where using `Rf_error` lead to improper cleanup of resources (#311)\r\n* Fix a bug where maximum worker timeout was multiplied and led to undefined behavior\r\n* Fix a bug where ZeroMQ's `-Werror` flag led to compilation issues on M1 Mac\r\n* Fix a bug where SSH tests could error with timeout on high load\r\n* Worker API: `CMQMaster` now needs to know `add_pending_workers(n)`\r\n* Worker API: status report `info()` now displays properly",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.1",
        "name": "clustermq 0.9.1",
        "release_id": 130690725,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/130690725",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/130690725",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2023-09-23T23:18:38Z",
        "date_published": "2023-09-23T23:20:55Z",
        "description": "### Features\r\n\r\n* Reuse of common data is now supported (#154)\r\n* Jobs now error instead of stalling upon unexpected worker disconnect (#150)\r\n* Workers now error if they can not establish a connection within a time limit\r\n* Error if `n_jobs` and `max_calls_worker` provide insufficient call slots (#258)\r\n* Request 1 GB by default in SGE template (#298) @nickholway\r\n* Error and warning summary now orders by index and severity (#304)\r\n* A call can have multiple warnings forwarded, not only last\r\n\r\n### Bugfix\r\n\r\n* Fix bug where max memory reporting by `gc()` may be in different column (#240)\r\n* Fix passing numerical `job_id` to `qdel` in PBS (#265)\r\n* The job port/id pool is now used properly upon binding failure (#270) @luwidmer\r\n* Common data size warning is now only displayed when exceeding limits (#287)\r\n\r\n### Internal\r\n\r\n* Complete rewrite of the worker API\r\n* We no longer depend on the `purrr` package",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.9.0",
        "name": "clustermq 0.9.0",
        "release_id": 122329776,
        "tag": "v0.9.0",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/122329776",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/122329776",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2020-07-01T16:49:40Z",
        "date_published": "2020-07-01T16:51:30Z",
        "description": "* We are now using _ZeroMQ_ via `Rcpp` in preparation for `v0.9` (#151)\r\n* New `multiprocess` backend via `callr` instead of forking (#142, #197)\r\n* Sending data on sockets is now blocking to avoid excess memory usage (#161)\r\n* `multicore`, `multiprocess` schedulers now support logging (#169)\r\n* New option `clustermq.host` can specify host IP or network interface name (#170)\r\n* Template filling will now raise error for missing keys (#174, #198)\r\n* Workers failing with large common data is improved (fixed?) (#146, #179, #191)\r\n* Local connections are now routed via `127.0.0.1` instead of `localhost` (#192)\r\n* Submit messages are different between local, multicore and HPC (#196)\r\n* Functions exported by `foreach` now have their environment stripped (#200)\r\n* Deprecation of `log_worker=T/F` argument is rescinded",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.95",
        "name": "clustermq 0.8.95",
        "release_id": 28124133,
        "tag": "v0.8.95",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.95",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/28124133",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/28124133",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.95"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2020-02-29T19:22:50Z",
        "date_published": "2020-02-29T19:25:54Z",
        "description": "* New option `clustermq.ssh.timeout` for SSH proxy startup (#157) @brendanf\r\n* New option `clustermq.worker.timeout` for delay before worker shutdown (#188)\r\n* Fixed PBS/Torque docs, template and cleanup (#184, #186) @mstr3336\r\n* Warning if common data is very large, set by `clustermq.data.warning` (#189)",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.9",
        "name": "clustermq 0.8.9",
        "release_id": 24101902,
        "tag": "v0.8.9",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.9",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/24101902",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/24101902",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2019-06-06T10:20:41Z",
        "date_published": "2019-06-06T10:22:30Z",
        "description": "* `Q`, `Q_rows` have new arguments `verbose` (#111) and `pkgs` (#144)\r\n* `foreach` backend now uses its dedicated API where possible (#143, #144)\r\n* Number and size of objects common to all calls now work properly\r\n* Templates are filled internally and no longer depend on `infuser` package",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.8",
        "name": "clustermq 0.8.8",
        "release_id": 17821451,
        "tag": "v0.8.8",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.8",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/17821451",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/17821451",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2019-04-15T11:46:50Z",
        "date_published": "2019-04-15T11:48:35Z",
        "description": "* `Q` now has `max_calls_worker` argument to avoid walltime (#110)\r\n* Submission messages now list size of common data ([drake#800](https://github.com/ropensci/drake/issues/800))\r\n* All default templates now have an optional `cores` per job field (#123)\r\n* `foreach` now treats `.export` (#124) and `.combine` (#126) correctly\r\n* New option `clustermq.error.timeout` to not wait for clean shutdown (#134)\r\n* SSH command is now specified via a template file (#122)\r\n* SSH will now forward errors to the local process (#135)\r\n* The Wiki is deprecated, use https://mschubert.github.io/clustermq/ instead",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.7",
        "name": "clustermq 0.8.7",
        "release_id": 16763600,
        "tag": "v0.8.7",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.7",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/16763600",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/16763600",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2019-03-03T15:29:54Z",
        "date_published": "2019-03-03T15:32:41Z",
        "description": "* Progress bar is now shown before any workers start (#107)\r\n* Socket connections are now authenticated using a session password (#125)\r\n* Marked internal functions with `@keywords internal`\r\n* Added vignettes for the _User Guide_ and _Technical Documentation_",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.6",
        "name": "clustermq 0.8.6",
        "release_id": 15882319,
        "tag": "v0.8.6",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.6",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/15882319",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/15882319",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2018-09-29T13:47:06Z",
        "date_published": "2018-09-29T13:49:38Z",
        "description": "* Added experimental support for parallel `foreach` backend (#83)\r\n* Moved templates to package `inst/` directory (#85)\r\n* Added `send_call` to worker to evaluate arbitrary expressions ([drake#501](https://github.com/ropensci/drake/issues/501); #86)\r\n* Option `clustermq.scheduler` is now respected if set after package load (#88)\r\n* System interrupts are now handled correctly ([rzmq#44](https://github.com/ropensci/rzmq/issues/44); #73, #93, #97)\r\n* Number of workers running/total is now shown in progress bar (#98)\r\n* Unqualified (short) host names are now resolved by default (#104)",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.5",
        "name": "clustermq 0.8.5",
        "release_id": 13163875,
        "tag": "v0.8.5",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/13163875",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/13163875",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2018-04-22T17:27:31Z",
        "date_published": "2018-04-22T17:30:46Z",
        "description": "* Fix error for `qsys$reusable` when using `n_jobs=0`/local processing (#75)\r\n* Scheduler-specific templates are deprecated. Use `clustermq.template` instead\r\n* Allow option `clustermq.defaults` to fill default template values (#71)\r\n* Errors in worker processing are now shut down cleanly (#67)\r\n* Progress bar now shows estimated time remaining (#66)\r\n* Progress bar now also shown when processing locally\r\n* Memory summary now adds estimated memory of R session (#69)",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.4",
        "name": "clustermq 0.8.4",
        "release_id": 10663034,
        "tag": "v0.8.4",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/10663034",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/10663034",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2018-01-21T11:23:52Z",
        "date_published": "2018-01-21T11:25:06Z",
        "description": "  * Support `rettype` for function calls where return type is known (#59)\r\n  * Reduce memory requirements by processing results when we receive them\r\n  * Fix a bug where cleanup, `log_worker` flag were not working for SGE/SLURM",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.3",
        "name": "clustermq 0.8.3",
        "release_id": 9320167,
        "tag": "v0.8.3",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/9320167",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/9320167",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2017-11-30T13:14:25Z",
        "date_published": "2017-11-30T19:35:37Z",
        "description": "* Fix a bug where never-started jobs are not cleaned up\r\n* Fix a bug where tests leave processes if port binding fails (#60)\r\n* Multicore no longer prints worker debug messages (#61)",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.2",
        "name": "clustermq 0.8.2",
        "release_id": 8723704,
        "tag": "v0.8.2",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/8723704",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/8723704",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2017-11-27T10:56:27Z",
        "date_published": "2017-11-27T10:58:27Z",
        "description": "* Fix performance issues for a high number of function calls (#56)\r\n* Fix bug where multicore workers were not shut down properly (#58)\r\n* Fix default templates for SGE, LSF and SLURM (misplaced quote)",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.1",
        "name": "clustermq 0.8.1",
        "release_id": 8665091,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/8665091",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/8665091",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2017-11-12T11:31:51Z",
        "date_published": "2017-11-12T11:33:25Z",
        "description": "### Features\r\n\r\n  * Templates changed: `clustermq:::worker` now takes only master as argument\r\n  * Creating `workers` is now separated from `Q`, enabling worker reuse (#45)\r\n  * Added `multicore` qsys using the `parallel` package (#49)\r\n  * New function `Q_rows` using data.frame rows as iterated arguments (#43)\r\n  * Job summary will now report max memory as reported by `gc` (#18)\r\n\r\n### Bugfix\r\n\r\n  * Fix a bug where copies of `common_data` are collected by gc too slowly (#19)\r\n  * Objects in the function environment must now be `export`ed explicitly (#47)\r\n\r\n### Internal\r\n\r\n  * Messages on the master are now processed in threads (#42)\r\n  * Jobs will now be submitted as array if possible",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.8.0",
        "name": "clustermq 0.8.0",
        "release_id": 8481753,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/8481753",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/8481753",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2017-08-24T22:10:42Z",
        "date_published": "2017-08-28T21:55:51Z",
        "description": "Initial release on CRAN\r\n\r\nhttps://cran.r-project.org/web/packages/clustermq/index.html",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.7.0",
        "name": "clustermq 0.7.0",
        "release_id": 7549497,
        "tag": "v0.7.0",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/7549497",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/7549497",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mschubert",
          "type": "User"
        },
        "date_created": "2017-08-24T22:10:21Z",
        "date_published": "2017-11-12T11:34:58Z",
        "description": "Provides the `Q` function to seamlessly evaluate function calls in an HPC scheduling environment",
        "html_url": "https://github.com/mschubert/clustermq/releases/tag/v0.6.2",
        "name": "clustermq 0.6.2",
        "release_id": 8481760,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/mschubert/clustermq/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mschubert/clustermq/releases/8481760",
        "value": "https://api.github.com/repos/mschubert/clustermq/releases/8481760",
        "zipball_url": "https://api.github.com/repos/mschubert/clustermq/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:05:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 146
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "ClusterMQ: send R function calls as cluster jobs"
        ],
        "type": "Text_excerpt",
        "value": "The most common arguments for `Q` are:\n\n * `fun` - The function to call. This needs to be self-sufficient (because it\n        will not have access to the `master` environment)\n * `...` - All iterated arguments passed to the function. If there is more than\n        one, all of them need to be named\n * `const` - A named list of non-iterated arguments passed to `fun`\n * `export` - A named list of objects to export to the worker environment\n\nThe documentation for other arguments can be accessed by typing `?Q`. Examples\nof using `const` and `export` would be:\n\n```r\n# adding a constant argument\nfx = function(x, y) x * 2 + y\nQ(fx, x=1:3, const=list(y=10), n_jobs=1)\n```\n\n```r\n# exporting an object to workers\nfx = function(x) x * 2 + y\nQ(fx, x=1:3, export=list(y=10), n_jobs=1)\n```\n\n`clustermq` can also be used as a parallel backend for\n[`foreach`](https://cran.r-project.org/package=foreach). As this is also\nused by [`BiocParallel`](https://bioconductor.org/packages/release/bioc/html/BiocParallel.html),\nwe can run those packages on the cluster as well:\n\n```r\nlibrary(foreach)\nregister_dopar_cmq(n_jobs=2, memory=1024) # see `?workers` for arguments\nforeach(i=1:3) %dopar% sqrt(i) # this will be executed as jobs\n```\n\n```r\nlibrary(BiocParallel)\nregister(DoparParam()) # after register_dopar_cmq(...)\nbplapply(1:3, sqrt)\n```\n\nMore examples are available in [the\nUser Guide](https://mschubert.github.io/clustermq/articles/userguide.html).\n"
      },
      "source": "https://raw.githubusercontent.com/mschubert/clustermq/master/README.md",
      "technique": "header_analysis"
    }
  ]
}