{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LBBSoft/FeatureSelect"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-03T12:49:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-20T18:03:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FeatureSelect"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9992557012299005,
      "result": {
        "type": "Text_excerpt",
        "value": "**Tutorial for FEATURESELECT**\r\n\r\n**Yosef Masoudi-Sobhanzadeh, Habib Motieghader, Ali Masoudi-Nejad,\\***\r\n\r\nLaboratory of system Biology and Bioinformatics, Institute of Biochemistry and\r\nBiophysics, university of Tehran, Tehran, iran.\r\n\r\n*FEATURESELECT*, an application for feature selection based on machine learning\r\nmethods, has been developed in laboratory of system biology and bioinformatics\r\n(LBB). FEATURESELECT can be applied on problems needing to select subset of\r\nfeatures from given feature set. In continue, we describe some aspects of\r\n*FEATURESELECT*.\r\n\r\n**Versions**\r\n\r\nFour versions of FeatureSelect, which are based on MATLAB run time, are available:\r\n\r\n1- MATLAB version which can be opend by MATLAB\r\n\r\n2- Java package\r\n\r\n   In order to install and run the javapackage follow the bellow steps:\r\n   \r\n   2-1 copy FeatureSelect.jar to mcroot/toolbox/javabuilder/jar  where mcroot is root of MATLAB run time\r\n   \r\n   \r\n   2-2 Write a java program and save it FeatureS.java like the below:\r\n   \r\n         import FeatureSelect.*;\r\n         \r\n         import com.mathworks.toolbox.javabuilder.*;\r\n         \r\n         public class FeatureS\r\n         \r\n         {\r\n         \r\n            public static void main(String[] args)\r\n            \r\n            {\r\n            \r\n               Class1 FS=null;\r\n               \r\n               try\r\n               \r\n               {\r\n               \r\n                  FS= new Class1();\r\n                  \r\n                  FS.Call_FS();\r\n                  \r\n               }\r\n               \r\n               catch (Exception e)\r\n               \r\n               {\r\n               \r\n                  System.out.println(\"Exception: \" + e.toString());\r\n                  \r\n               }\r\n\r\n            }\r\n            \r\n         }\r\n         \r\n   \r\n   2-3 Run cmd as adiministrator\r\n   \r\n   2-4 Execute the following command\r\n   \r\n      javac -classpath \"javabuilder.jar\";.\\FeatureSelect.jar FeatureS.java\r\n      \r\n   2-5 Execute the following command\r\n   \r\n      java -classpath .;\"javabuilder.jar\";.\\FeatureSelect.jar FeatureS\r\n\r\n3- Python package\r\n\r\n   In order to install and run the python package follow the below steps:\r\n   \r\n   a) Execute install command: \r\n         \r\n         python setup.py install\r\n   \r\n   After installation, run FeatureSelect as the below:\r\n   \r\n   \r\n   b) Import the package: \r\n   \r\n         import FeatureSelect\r\n   \r\n   c) Prepare the FeatureSelect: \r\n   \r\n         FS = FeatureSelect.initialize()\r\n   \r\n   d) Run the program: \r\n   \r\n         FS.Selection()\r\n   \r\n\r\n4- Stand-alone version which is an EXE file (64 bits)\r\n\r\n\r\n**Implemented language**\r\n\r\nMATLAB programing language is used for implementing of *FEATURESELECT*. There\r\nare some reasons for using it:\r\n\r\n1.  Because MATLAB is common programing language in different sciences,\r\n    *FEATURESLECT* has been implemented in it. *FEATURESELECT* can be applied on\r\n    various areas such as biological data, image processing, handwrite\r\n    detection, computer science and many other fields.\r\n\r\n2.  MATLAB is supported by various operating systems such as win, linux, mac.\r\n\r\n3.  MATLAB is an open source programing language, so everyone can add some new\r\n    capabilities on *FEATURESELECT*. After investigating new capabilities, we\r\n    will publish new version of *FEATURESELECT* at\r\n    https://github.com/LBBSoft/FeatureSelect.\r\n\r\n**To use in MATLAB**\r\n\r\nIn order to install *FEATURESELECT*, you must provide some requirements:\r\n\r\n1.  Install WINSDK.1 in windws or MinGW in linux\r\nhat include C++ compiler\r\n\r\n2.  Install MATLAB\r\n\r\nAfter installing the requirements, follow these stages:\r\n\r\n1.  Copy all files placed in *FEATURESELECT* folder on the one of the available\r\n    directories.\r\n\r\n2.  Go to \\\\FEATURESELECT\\\\matlab\\\\ in the intended directory.\r\n\r\n3.  Click on the one of the matlab files which is available in the entered\r\n    directory. Notice that the matlab path and the current directory path must\r\n    be the same.\r\n\r\n4.  If your application is not working for SVM, write \"make\" in the matlab's\r\n    command window and press enter. Be sure that the command successfully\r\n    completed. In order to get more information about LIBSM, look at\r\n    https://www.csie.ntu.edu.tw/\\~cjlin/libsvm/.\r\n\r\n**Using from FEATURESELECT**\r\n\r\nAfter installing the software, you can write \"LBBFS\" in the matlab command\r\nwindow and use from *FEATURESELECT*. Consider fig.1 and fig.2.\r\n\r\n![1](https://user-images.githubusercontent.com/42937478/51424353-aa48cc80-1be1-11e9-85d2-6149c81d8b4f.jpg)\r\n\r\n\r\nFig.1: run *FEATURESELECT*\r\n\r\n\r\n![2](https://user-images.githubusercontent.com/42937478/51424379-0e6b9080-1be2-11e9-9373-1a1eee1eb072.jpg)\r\n\r\nFig.2: *FEATURESELECT*\r\n\r\n\r\nFig.2 shows the *FEATURESELECT* software. This application has several sections:\r\n\r\n1.  **LBB**: LBB is the ram of our laboratory. This laboratory has been founded\r\n    by prof ali masoudi-nejad in 2006 at university of Tehran, iran.\r\n\r\n2.  **Input**: Text, xls and matlab files are acceptable formats of input. You\r\n    must convert xls file to txt file or m file if it has *struct* structure.\r\n    TCN is abbreviation for training column number. Your data file and label\r\n    file must be in the same file. Supposed file name is *input.tx* and the\r\n    train column number (label of samples) is 222 in it. You can type your input\r\n    file location in specified box or select it using *select input file\r\n    button*. For some applications, we need to normalize or fuzzifize input\r\n    file. *Data normalization* and *data fuzzification* are designed for this\r\n    purpose. After clicking on the each of the mentioned buttons, a new file\r\n    will be created and its name will be added to the specified box (data.txt).\r\n    When you select an input file, rows of input file arrangement are changed\r\n    randomly. If first row or first column is not part of input file, click *on\r\n    first row is not data* or *first column is not data* respectively.\r\n    *FEATURESELECT* has three main goals: 1- easy using from LIBSVM, ANN and DT,\r\n    2- feature selection for regression problems and 3- feature selection for\r\n    classification problems. The default option is regression. Disable \u201c*this is\r\n    regression problem\u201d* option if your problem is classification.\r\n\r\n3.  **Selecting learner type:** Three types of learners are available in\r\n    *FEATURESELECT*. The first one is SVM. As mentioned before, intended SVM is\r\n    based on parameters of LIBSVM. The second one is ANN which only includes one\r\n    parameter (training iteration). We examined some types of artificial neural\r\n    networks. Finally, the results showed that optimization algorithms can lead\r\n    to better results in training phase of ANN. Meanwhile, the elapsed time of\r\n    training phase is enhancing, so it is advised that this type of learner is\r\n    applied on small datasets. Also, you can select your features by the SVM or\r\n    DT, and then use ANN in order to obtain an efficient model. The third\r\n    learner is decision tree (DT). This learner does not need parameter setting.\r\n\r\n4.  **Selecting parameters of LIBSVM:** If your learner type is SVM, you can set\r\n    parameters in this section. Learning parameter which can be selected by the\r\n    doted button (fig.3) includes LIBSVM's parameters. Training data percentage\r\n    and maximum number of features which is desirable for your application can\r\n    be written in the related boxes. Also, if you want to apply LIBSVM on the\r\n    all of the features (in other words, if you don\u2019t want feature selection),\r\n    click on the *only apply SVM* button**.**\r\n    \r\n\r\n    ![3](https://user-images.githubusercontent.com/42937478/51424395-3b1fa800-1be2-11e9-847b-5d21fda363df.jpg)\r\n\r\n    Fig.3: learning parameters of LIBSVM\r\n    \r\n\r\n5.  **Feature selection method:** Three types of feature selection methods are\r\n    available in *FEATURESELECT*: 1- Wrapper method (optimization algorithm). 2-\r\n    Filter method: this type of feature selection consists of five popular\r\n    methods. The experimental results show that every learner and every method\r\n    have their special view relative to dataset, but wrapper methods can lead to\r\n    better results than filter methods in overall state. 3- Hybrid method: A\r\n    user can exploit two-step feature selection using combination of the filter\r\n    and wrapper methods.\r\n\r\n6.  **Algorithms**: Eleven algorithms have been developed for selecting features\r\n    from feature set in wrapper method section. It is advised that the\r\n    optimization algorithms iterated more than 30 times because of stochastic\r\n    nature of them. You can set number of iterations in the relative box. The\r\n    new from such as fig.4 which is result of clicking on WCC algorithm will\r\n    appear. Then you can set the algorithm parameters.\r\n\r\n    ![4](https://user-images.githubusercontent.com/42937478/51424409-5ab6d080-1be2-11e9-8aca-672c7f253be0.jpg)\r\n\r\n    Fig.4: WCC's parameters\r\n\r\n    The developed algorithms and their reference are:\r\n\r\n7.  WCC (world competitive contest): this algorithm is inspired by human sport\r\n    rules. The default values are determined fairly and based on number of\r\n    LIBSVM calling for all of the algorithms. You can get more information about\r\n    WCC in <http://www.sciencedirect.com/science/article/pii/S2352914816300077>.\r\n\r\n8.  LCA (league championship algorithm): LCA is an algorithm inspired by sport\r\n    championships. Here is a link for download LCA original paper:\r\n    <http://www.sciencedirect.com/science/article/pii/S1568494613004250>.\r\n\r\n9.  GA (genetic algorithm): GA is the first optimization that mimics natural\r\n    evolutionary processes. *Crate* and *mrate* are abbreviation for crossover\r\n    rate and mutation rate in FEATURESELECT. More information about genetic\r\n    algorithms is available in\r\n    <http://www.sciencedirect.com/science/article/pii/S0377042705000774>.\r\n\r\n10. PSO (particle swarm optimization): PSO inspired by social behavior of birds.\r\n    Unlike GA, PSO has not evolutionary operations such as crossover and\r\n    mutation. Groups of birds fly toward destination. Useful information about\r\n    PSO is available in <http://www.swarmintelligence.org/tutorials.php>.\r\n\r\n11. ACO (ant colony optimization): this algorithm proposed by marco dorigo in\r\n    1992 inspired by ants social behavior. Some aspects of ACO can be found in\r\n    <http://www.sciencedirect.com/science/article/pii/S0167739X0000042X>.\r\n\r\n12. ICA (imperialist competitive algorithm): atashpaz gargari proposed ICA which\r\n    is an algorithm inspired by imperialistic competition. You can download\r\n    relative paper from <http://ieeexplore.ieee.org/document/4425083/>.\r\n\r\n13. LA (learning automata): an automata is an abstract concept. Every cellular\r\n    automata selects an action from action set and applies it on environment.\r\n    The selected action will be awarded or penalized. Meybodi published\r\n    application of LA in\r\n    <https://link.springer.com/chapter/10.1007/3-211-27389-1_35>.\r\n\r\n14. HTS (heat transfer optimization algorithm): it is a meta-heuristic algorithm\r\n    which is recently introduced and is based on thermodynamics law. HTS is\r\n    available in\r\n    <http://www.sciencedirect.com/science/article/pii/S0020025515004764>. We\r\n    showed conduction factor as CDF, convection factor as COF and radiation\r\n    factor as ROF in FEATURESELECT.\r\n\r\n15. FOA (forest optimization algorithm): FOA has been proposed by manizheh\r\n    ghaemi and has interesting results. This algorithms begins with some\r\n    randomly created trees as potential solutions. Original research article can\r\n    be accessed in\r\n    <http://www.sciencedirect.com/science/article/pii/S0031320316300954>.\r\n\r\n16. DSOS (discrete symbiotic organisms search): DSOS has been published in 2017.\r\n    It has been showed that DSOS is comparable with the other optimization\r\n    algorithms, so we implemented it in FEATURESELECT. Original paper of DSOS\r\n    can be found in\r\n    <http://www.sciencedirect.com/science/article/pii/S0957417417304141>.\r\n\r\n17. CUK (cuckoo optimization): CUK is proper for continuous nonlinear\r\n    optimization problem. CUK is inspired by the life of bird family.\r\n    <http://www.sciencedirect.com/science/article/pii/S1568494611001670>.\r\n\r\n18. **Notifications**\r\n\r\n>   After running the selected algorithms, the status of program is showed in\r\n>   the notification section.\r\n\r\n>   **Outputs**\r\n\r\n>   The *results* folder is placed in the directory which contains\r\n>   *FEATURESELECT's* files. For the regression problem, 2 files named\r\n>   *description* and *tbls* are created. For the classification problems, 3\r\n>   files named *description*, *evaluation* and *tbls* are created. Date and\r\n>   time are added to the end of created file name. The created files contents\r\n>   also are presented in the matlab command window. *Description* file (for\r\n>   both regression and classification problems) includes some information such\r\n>   as number of features and their indices, etc. *Evaluation* file that is\r\n>   specific for classification problems includes statistical measures which are\r\n>   essential for classification problems. For both classification and\r\n>   regression problems, *Tbls* file includes some other statistical information\r\n>   such as p-value, confidence interval, standard deviation, etc. Fig.5 through\r\n>   fig.7 are output instances which have been acquired by batch running of the\r\n>   all algorithms on supposed input file located in *FEATURESELECT* directory.\r\n\r\n![5](https://user-images.githubusercontent.com/42937478/51424416-7326eb00-1be2-11e9-90a7-0330ba7b3e2c.jpg)\r\n\r\n>   Fig.5: part of *description* file\r\n\r\n\r\n![6](https://user-images.githubusercontent.com/42937478/51424428-8c2f9c00-1be2-11e9-969b-3a869218eb55.jpg)\r\n\r\n>   Fig.6: part of *tbls* file\r\n\r\n\r\n![7](https://user-images.githubusercontent.com/42937478/51424439-b41eff80-1be2-11e9-8154-43d2db0ec063.jpg)\r\n\r\n>   Fig.7: part of *evaluation* file (only for classification)\r\n\r\n\r\n>   Table.1 shows abbreviation used in *FEATURESELECT* and their complete\r\n>   states.\r\n\r\n>   Table.1: abbreviations\r\n\r\n| abbreviation | Complete state            |\r\n|--------------|---------------------------|\r\n| ACC          | Accuracy                  |\r\n| SEN          | Sensitivity               |\r\n| SPC          | Specificity               |\r\n| FPR          | False positive rate       |\r\n| AL_NAME      | Algorithm name            |\r\n| PRE          | Precision                 |\r\n| NOF          | A number of features      |\r\n| ET           | Elapsed time              |\r\n| ER           | Error                     |\r\n| CR           | Correlation               |\r\n| STD          | Standard deviation        |\r\n| CI           | Confidence interval       |\r\n| P            | p-value                   |\r\n| DF           | Degree of freedom         |\r\n| ANN          | Artificial neural network |\r\n| DT           | Decision tree             |\r\n\r\n>   Accuracy convergence, accuracy average convergence (accuracy for all of the\r\n>   population in specific generation), accuracy stability, error convergence,\r\n>   error average convergence (for all potential solutions in specific\r\n>   generation) and error stability are plotted for classification problems\r\n>   (fig.8). Error convergence, error average convergence, error stability,\r\n>   correlation convergence, correlation average convergence and correlation\r\n>   stability are plotted for regression problem (dig.9). ROC plot, a\r\n>   statistical measurement that investigates diagnostic ability of classifier,\r\n>   and ROC space are showed in fig.10. You can modify these plots using\r\n>   *view/property editor* menu.\r\n\r\n\r\n![8](https://user-images.githubusercontent.com/42937478/51424446-d57feb80-1be2-11e9-93e8-de34adc13481.jpg)\r\n>   Fig.8: algorithms output for classification problem\r\n\r\n\r\n![9](https://user-images.githubusercontent.com/42937478/51424450-f2b4ba00-1be2-11e9-9d71-b606865b7146.jpg)\r\n>   Fig.9: algorithms output for regression problem\r\n\r\n![10](https://user-images.githubusercontent.com/42937478/51424452-07914d80-1be3-11e9-9b14-ec08994037c7.jpg)\r\n>   Fig.10: ROC plot and ROC space\r\n\r\n>   In order to exploit hybrid method, a user can follow the bellow steps which\r\n>   are depicted in Figures 11 and 12:\r\n\r\n1.  Selecting ensemble method:\r\n\r\n   ![11](https://user-images.githubusercontent.com/42937478/51424457-360f2880-1be3-11e9-9e4b-d68c2902227c.jpg)\r\n    Fig.11: Selecting feature selection method\r\n\r\n2.  Setting the parameters\r\n\r\n    ![12](https://user-images.githubusercontent.com/42937478/51424460-52ab6080-1be3-11e9-9a3d-e008663e694a.jpg)\r\n    Fig.12: Setting the parameters of the hybrid method\r\n \n"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/LBBSoft/FeatureSelect/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LBBSoft/FeatureSelect/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LBBSoft/FeatureSelect"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424353-aa48cc80-1be1-11e9-85d2-6149c81d8b4f.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424379-0e6b9080-1be2-11e9-9373-1a1eee1eb072.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424395-3b1fa800-1be2-11e9-847b-5d21fda363df.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424409-5ab6d080-1be2-11e9-8aca-672c7f253be0.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424416-7326eb00-1be2-11e9-90a7-0330ba7b3e2c.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424428-8c2f9c00-1be2-11e9-969b-3a869218eb55.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424439-b41eff80-1be2-11e9-8154-43d2db0ec063.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424446-d57feb80-1be2-11e9-93e8-de34adc13481.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424450-f2b4ba00-1be2-11e9-9d71-b606865b7146.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424452-07914d80-1be3-11e9-9b14-ec08994037c7.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424457-360f2880-1be3-11e9-9e4b-d68c2902227c.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/42937478/51424460-52ab6080-1be3-11e9-9a3d-e008663e694a.jpg"
      },
      "source": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/LBBSoft/FeatureSelect/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FeatureSelect"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "LBBSoft"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/LBBSoft/FeatureSelect/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:05:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}