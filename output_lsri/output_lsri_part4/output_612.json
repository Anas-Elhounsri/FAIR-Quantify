{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/neurorestore/Augur"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-20T16:57:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-25T04:30:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cell type prioritization in single-cell data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9982557808327125,
      "result": {
        "original_header": "README",
        "type": "Text_excerpt",
        "value": "Augur is an R package to prioritize cell types involved in the response to an experimental perturbation within high-dimensional single-cell data. \nThe intuition underlying Augur is that cells undergoing a profound response to a given experimental stimulus become more separable, in the space of molecular measurements, than cells that remain unaffected by the stimulus. \nAugur quantifies this separability by asking how readily the experimental sample labels associated with each cell (e.g., treatment vs. control) can be predicted from molecular measurements alone. \nThis is achieved by training a machine-learning model specific to each cell type, to predict the experimental condition from which each individual cell originated.\nThe accuracy of each cell type-specific classifier is evaluated in cross-validation, providing a quantitative basis for cell type prioritization.\nAugur is publised in https://www.nature.com/articles/s41587-020-0605-1.\n \n"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.977683383608603,
      "result": {
        "original_header": "Demonstration",
        "type": "Text_excerpt",
        "value": "To see Augur in action, load the simulated single-cell RNA-seq dataset that is bundled with the Augur package:\n```r\n> data(\"sc_sim\")\n```\n \nThis dataset consists of 600 cells, distributed evenly between three populations (cell types A, B, and C). Each of these cell types has approximately half of its cells in one of two conditions, treatment and control. The cell types also have different numbers of genes differentially expressed in response to the treatment. Cell type A has approximately 5% of genes DE in response to the treatment, while cell type B has 25% of its genes DE and cell type C has 50% of genes DE.  \nThe `sc_sim` object is a Seurat object with columns named `cell_type` and `label` in the `meta.data` slot, meaning we can provide it directly as input to Augur: \n```r\n> head(sc_sim@meta.data)\n\n      label cell_type\n1   control CellTypeA\n2 treatment CellTypeA\n3 treatment CellTypeA\n4   control CellTypeA\n5   control CellTypeA\n6 treatment CellTypeA\n```\nWe run `calculate_auc`, and inspect the cell type prioritizations in the `AUC` item:\n```r\n> library(Augur)\n> augur = calculate_auc(sc_sim)\n> augur$AUC\n\n# A tibble: 3 x 2\n  cell_type   auc\n  <chr>     <dbl>\n1 CellTypeC 0.866\n2 CellTypeB 0.763\n3 CellTypeA 0.594\n```\n \nRunning this example on a MacBook takes about 3-4 minutes. \nHowever, analyzing >20 real single-cell RNA-seq datasets, we found Augur takes a median of ~45 minutes.\nIn general, runtime scales close to linearly with the number of cell _types_.\nBy default, Augur runs on four cores, with each cell type analyzed on a different core.\nTo change the number of cores, use the `n_threads` argument.\nFor example, running Augur on eight threads: \n```r\n> augur = calculate_auc(sc_sim, n_threads = 8)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/neurorestore/Augur/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/neurorestore/Augur/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "neurorestore/Augur"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "README"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "README"
        ],
        "type": "Text_excerpt",
        "value": "To install Augur, first install the devtools package, if it is not already installed: \n\n```r\n> install.packages(\"devtools\") \n```\n\nThen, install the MatrixGenerics and sparseMatrixStats packages from GitHub using devtools:\n\n```r\n> devtools::install_github(\"Bioconductor/MatrixGenerics\")\n> devtools::install_github(\"const-ae/sparseMatrixStats\")\n```\n\nFinally, install Augur from GitHub: \n\n```r\n> devtools::install_github(\"neurorestore/Augur\")\n```\n\nThis should take no more than a few minutes. \n\nAlternatively, a Python implementation of Augur is available through [pertpy](https://pertpy.readthedocs.io/en/latest/tutorials/notebooks/augurpy.html). Please see the pertpy [documentation](https://pertpy.readthedocs.io/en/latest) for installation and usage instructions. Please note that this implementation is not maintained by the maintainers of this repository, and requests for support should be submitted to the pertpy [issues tracker](https://github.com/theislab/pertpy).\n"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/neurorestore/Augur/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Michael Skinnider\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Augur"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "neurorestore"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 61175,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pertpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "parent_header": [
          "README"
        ],
        "type": "Text_excerpt",
        "value": "Augur relies on functions from the following R packages:\n\n```\n\tdplyr (>= 0.8.0),\n\tpurrr (>= 0.3.2),\n\ttibble (>= 2.1.3),\n\tmagrittr (>= 1.5),\n\ttester (>= 0.1.7),\n\tMatrix (>= 1.2-14),\n\tsparseMatrixStats (>= 0.1.0),\n\tparsnip (>= 0.0.2),\n\trecipes (>= 0.1.4),\n\trsample (>= 0.0.4),\n\tyardstick (>= 0.0.3),\n\tpbmcapply (>= 1.5.0),\n\tlmtest (>= 0.9-37),\n\trlang (>= 0.4.0),\n\tglmnet (>= 2.0),\n\trandomForest (>= 4.6-14)\n```\n\nIn addition, the [Seurat](https://satijalab.org/seurat/), [monocle3](https://cole-trapnell-lab.github.io/monocle3/), or [SingleCellExperiment](http://bioconductor.org/packages/release/bioc/html/SingleCellExperiment.html) packages must be installed for Augur to take Seurat/monocle/SingleCellExperiment objects as input, respectively.\n\nAugur has been tested with R version 3.5.0 and higher.\n"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:10:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 101
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "README"
        ],
        "type": "Text_excerpt",
        "value": "The main function of Augur, `calculate_auc`, takes as input a preprocessed features-by-cells (e.g., genes-by-cells for scRNA-seq) matrix, and a data frame containing metadata associated with each cell, minimally including the cell type annotations and sample labels to be predicted.\nThis means that in order to use Augur, you should have pre-processed your data (e.g., by read alignment and cell type assignment for scRNA-seq) across all experimental conditions. \nIf batch effects are present in the data, these should be accounted for, e.g., using [Seurat](https://www.sciencedirect.com/science/article/pii/S0092867419305598) or [Harmony](https://www.nature.com/articles/s41592-019-0619-0), to avoid biasing cell type prioritization by technical differences or batch effects. \n\nTo run Augur with default parameters on a genes-by-cells scRNA-seq matrix `expr`, and an accompanying data frame `meta`, with `cell_type` and `label` columns containing cell types and experimental conditions, respectively, use the `calculate_auc` function:\n\n```r\n> augur = calculate_auc(expr, meta)\n```\n\nIf your columns have different names, you can specify these using the `cell_type_col` and `label_col` arguments:\n\n```r\n> augur = calculate_auc(expr, meta, cell_type_col = \"cell.type\", label_col = \"condition\")\n```\n\nCell type prioritizations are stored in the `AUC` data frame - for example:\n\n```r\n> head(augur$AUC, 5)\n\n# A tibble: 20 x 2\n  cell_type   auc\n  <chr>       <dbl>\n1 cell type 1 0.752\n2 cell type 2 0.729\n3 cell type 3 0.674\n  ...         ...\n```\n\nAugur can also run directly on a Seurat object. For a Seurat object `sc`, with the `sc@meta.data` data frame containing `cell_type` and `label` columns, simply do:\n\n```r\n> augur = calculate_auc(sc)\n```\n\nThe same code can be used if `sc` is a monocle3 or SingleCellExperiment object instead.\n"
      },
      "source": "https://raw.githubusercontent.com/neurorestore/Augur/master/README.md",
      "technique": "header_analysis"
    }
  ]
}