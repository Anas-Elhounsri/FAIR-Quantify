{
  "application_domain": [
    {
      "confidence": 0.9052570345772135,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gemtools/gemtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "GEM-Tools"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions or you run into problems, feel free to join the \ngemtools mailing list at gemtools@googlegroups.com\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2012-10-17T15:47:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-23T21:44:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GEMTools main repository"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9667156081248827,
      "result": {
        "original_header": "GEM-Tools",
        "type": "Text_excerpt",
        "value": "GEM-Tools is a C API and a Python module to support and simplify usage of the\n[GEM Mapper](http://algorithms.cnag.cat/wiki/The_GEM_library). \nThe C API currently supports fast and exhaustive support for parsing GEM .map\nfiles and other mapping formats. \nThe Python *gem* module allows to integrate the GEM Mapper in python scripts\nand simplifies development of mapping pipelines. \nIn addition to the library functionality, GEM-Tools also provides a command\nline tool `gemtools`, that you can use to start the RNASeq pipeline and various\nother tools, like the indexer and the statistics module.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8825505030289262,
      "result": {
        "original_header": "Bugs and feature requests",
        "type": "Text_excerpt",
        "value": "Please feel free to use the Github bug tracker to report issues and feature\nrequests that you find in the GEM-Tools library.  \nIf you run into problems with GEM and the included GEM binaries, please use \nthe [GEM bugtracker](http://algorithms.cnag.cat/mantis). \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9248711062822024,
      "result": {
        "original_header": "Change log",
        "type": "Text_excerpt",
        "value": "    1.7\n    - Fixed issue with junctions of length 0 in gtf extraction\n    - Added filtered output to default rna-pipeline output\n    - An exception is thrown when the initial splitmap file contains a \n      \"!\" in the strata field\n    - Add ability to replace a single executable and use the bundled \n      ones for the rest\n    - Add fail-checks when passing input to functions that expect a ReadIterator\n    - Refactor the RNASeq pipeline construction into a standalone class\n    - The statically compiled gemtools is now compatible with kernel 2.6.18\n    - Fixedgt.filter memory leak\n    - Set XT:U based on uniqueness level, i.e. 1:0:0:1 is level 2\n    - Chimeric reads in GEM and SAM\n    - Include a function to reconstruct the read after a trimmed alignment\n    - Add a annotation mapping filter to the pipeline to reduce multi-maps\n    - Implement a parallel merger for files with different size \n      (subset of reads)\n    - Add distance resort to gt.filter to support rnaseq mappings where \n      splits should not be counted as an event\n    - Fixed gt.filter output FASTQ pairdend reads\n    - Add a split-map only filter to the pipeline/transcriptome mapping step\n    - Add --keep-unique option to the gt.filter to disable filtering \n      for all mappings with exactly one alignment\n    - Speedup for merge operations for reads with lots of mappings\n    - Add JSON support to gt.stats\n    - Add json support to gt.gtfcounts\n    - Add coverage counts to gt.gtfcount \n    1.6.2\n    - Fixed issue with compute-transcriptome\n    - Fixed issue with gem-2-sam where XS flag could not be computed\n    - Added additional flag to avoid XS computation \n    1.6.1\n    - GEMTools SAM conversion doesnow include the header again\n    - Pair detection fixed for reads with space in the id and not casava\n    - Pipeline -o paramter does create the output folder now automatically\n    - samtools sorter max memory is now properly set for the non-threads version\n    - Added option to create sam-compact format in the pipeline \n    1.6\n    - Parallel file conversion for pipeline\n    - Cython C bindings for the parser library\n    - JSON export of the statistics\n    - Index and transcript index support from gemtools\n    - Restartable pipeline options\n    - gem-2-sam now writes the XS field for cufflinks support\n    - Added the new rna seq pipeline\n    - Added stats and report tools to the gemtools cli tool\n    - Added new bundle system and detection for i3 vs core2\n    - Added optional appending NH field to SAM entries\n    - Added *extra* options to mapper/splitmapper/pairalign to enable \n      passing custom command line options to the tools.\n    - Modify C::counters_functions to use zero-based indexes \n    1.5\n    - Fixed issues with gem-rna-mapper output and validation\n    - Moved validation to be a default step after split-mapping\n    - Added stats filter\n    - Fixed issue with gem-2-sam binary \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gemtools/gemtools/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gemtools/gemtools/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gemtools/gemtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GEM-Tools"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gemtools/gemtools/master/dist-utils/create_static_distribution.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gemtools/gemtools/master/dist-utils/create_distribution.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The GEM-Tools library is distributed in three different flavors. You can get a\nstatically compiled binary bundle if you are just interested in teh command\nline tools. If you would like to explore the library functionality, you can\ninstall the latest release from pypi. If you want to get the latest and\ngreatest, you can clone the git repository and install the library from source. \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Static distribution",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The GEM-Tools command line tools are bundled and distributed as a static binary\nbundle that includes all dependencies. You do not have to install any other\nsoftware to use the binary bundle, but you will not be able to write your own\npython scripts. You are restricted to the available command line tools.\n\n*NOTE* that the GEM binaries are compiled with optimizations for i3 processors.\nWe also provide a bundle for older CPU's that lack certain features. If you are\nnot sure which package to download, i3 or core2, run the following command on\nthe machine you want to install GEM-Tools:\n    \n    python -c 'print (\"i3 compatible\" if set([\"popcnt\", \"ssse3\", \"sse4_1\", \"sse4_2\"]).issubset(set([f for sl in map(lambda x:x.split(), filter(lambda x:x.startswith(\"flags\"), open(\"/proc/cpuinfo\").readlines())) for f in sl])) else \"No i3 support detected. Please use the core2 bundle\")'\n\nThis command checks your ``/proc/cpuinfo`` file for the flags *popcnt*, *ssse3*,\n*sse4_1* and *sse4_2* are present. If that is the case, the CPU is supported by the\ni3 bundle. Otherwise use core2.\n\nThe latest release can be downloaded here:\n\n* [GEM-Tools static binary bundle 1.7.1 for i3](http://barnaserver.com/gemtools/releases/GEMTools-static-i3-1.7.1.tar.gz)\n* [GEM-Tools static binary bundle 1.7.1 for core2](http://barnaserver.com/gemtools/releases/GEMTools-static-core2-1.7.1.tar.gz)\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Library distribution",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "In order to install the GEM-Tool library on your system and get access to the\ncommand line tools as well as the library functionality, you need to have a\ncouple of dependencies installed. Unfortunately we can currently not install\nthose dependencies for you. After all dependencies are installed, you have all\nthe options to build and install the library in your local machine. These\ninclude:\n\n* Install a released version from pypi\n* Install form the git repository\n* Build the library bundle\n* Build the static binary distribution\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from pypi",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Gemtools is distributed through pypi and you can install the latest released\nversion using `pip` or `easy_install`. But please make sure you have all the\ndependencies installed first.\n\nAs root:\n\n    pip install gemtools\n\nAs non-root user:\n    \n    pip install gemtools --user\n\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from github",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can install GEM-Tool from the github repository using the distributed \nsetup.py script. \n\nClone the repository\n    \n    git clone https://github.com/gemtools/gemtools\n\nChange into the gemtools folder and install the python library\n\n    cd gemtools\n\nAs root:\n    \n    python setup.py install\n\nAs non-root user:\n    \n    python setup.py install --user \n\nThis will install into a $HOME/.local folder and you might want to add\n$HOME/.local/bin to your path. For example, add\n\n    export PATH=$PATH:$HOME/.local/bin\n\nto your ~/.bashrc to make the change permanent.\n\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the library package",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "From the repository, you can build the python library package. This you can use\nto moved to a dedicated folder and can be managed by your prefered module\nmanager easily. \n\nIn order to build the library package, clone the the repository and call\n\n    make package\n\nThis will create a *dist/* folder that contains two tarballs, one for i3, and\none for core2. In addition you will see the unpacked folders. They are\nstructured as follows:\n\n    bin/ -- all the executables\n    lib/ -- symlink to lib64\n    lib64/ -- contains the gemtools c library as limgemtools.a\n    lib64/python<version>/site-packages -- the python libraries for your python version (i.e. 2.6 or 2.7)\n    include/ -- the C API header files\n\nSay you moved the package to `/opt/gemtools` and you run python2.6. You can\nactivate the package by exporting the following variables to your environment:\n\n    export PATH=$PATH:/opt/gemtools/bin\n    export PYTHONPATH=$PYTHONPATH:/opt/gemtools/lib64/python2.6/site-packages\n\nThis will make all the executables available in your path and put the python\nlibrary into the python search path so you can leverage it from your scripts.\n\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the static binary bundle",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you are not interested in using any python library functions from your \nscript, you can build portable static binary package by calling the `dist` \ntarget in the Makefile.\n\n    make dist\n\nThis will create a *dist/* folder that contains two tarballs, one for i3, and\none for core2. In addition you will see the unpacked folders. They are\nstructured as follows:\n\n    bin/ -- all the executables\n    lib/ -- symlink to lib64\n    lib64/ -- contains the gemtools c library as limgemtools.a\n    include/ -- the C API header files\n\nSay you moved the package to `/opt/gemtools`. You can activate the package by\nexporting the following variables to your environment:\n\n    export PATH=$PATH:/opt/gemtools/bin\n\n    "
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9414784759894435,
      "result": {
        "original_header": "Licensing",
        "type": "Text_excerpt",
        "value": "The Python modules also distributes current GEM binaries that are compatible\nwith the library code. Note that the GEM binaries are distributed under the\n[*GEM Non commercial binary license*](http://algorithms.cnag.cat/wiki/GEM:Non_commercial_binary_license)\nwhile the GEM-Tools is licensed under GPL.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9910325927105448,
      "result": {
        "original_header": "Bugs and feature requests",
        "type": "Text_excerpt",
        "value": "Please feel free to use the Github bug tracker to report issues and feature\nrequests that you find in the GEM-Tools library.  \nIf you run into problems with GEM and the included GEM binaries, please use \nthe [GEM bugtracker](http://algorithms.cnag.cat/mantis). \n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gemtools/gemtools/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gemtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "gemtools"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1622560,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 457088,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 99889,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 30026,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 11261,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 278,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 179,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The C API needs to have gzlib and bzlib installed with header files.  Both\nlibraries are used to transparently open compressed files. On a Debian/Ubuntu\nsystem the packages are libbz2-dev and zlib-dev.\n\nHere is an example of how you can install the necessary dependencies to build\nthe C-library on a Debian/Ubuntu system: \n\n    sudo apt-get install make gcc libbz2-dev\n\nFor the python part, the library will work both with Python 2.6 and Python 2.7.\nIn order to compile the the C binding, you need to have\n[Cython](http://www.cython.org/) installed, as well as the python header files. \n\nHere is an example of how you can install the necessary dependencies to build\nthe Python library on a Debian/Ubuntu system: \n\n    sudo apt-get install make gcc libbz2-dev python-dev\n\n"
      },
      "source": "https://raw.githubusercontent.com/gemtools/gemtools/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:58:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}