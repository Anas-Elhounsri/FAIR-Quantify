{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "DiscoverY"
        ],
        "type": "Text_excerpt",
        "value": "If you use DiscoverY in your research, please cite : \n\nRangavittal, S., Stopa, N., Tomaszkiewicz, M. et al. BMC Genomics (2019) 20: 641. https://doi.org/10.1186/s12864-019-5996-3\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/makovalab-psu/DiscoverY"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-05T21:42:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-13T03:26:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "K-mer based classifier for Y-contig identification from Whole Genome Assemblies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9962943915061672,
      "result": {
        "original_header": "DiscoverY",
        "type": "Text_excerpt",
        "value": "DiscoverY is a tool to shortlist Y-specific contigs from an assembly of male whole genome sequencing data, based on exact _k-mer_ matches with a female. This tool is platform agnostic and has been tested on male assemblies from Illumina, PacBio and 10x Genomics. The female can be a reference assembly or a low coverage raw reads dataset. DiscoverY can be ran in two different modes: female_only or female+male.  In the female_only mode, the proportion shared between each contig with a female reference is computed; female+male mode uses both proportion of k-mers of each contig shared with a reference female and the kmer counts from the male raw reads to estimate each contig's depth-of-coverage.\n \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9962943915061672,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "# DiscoverY\nDiscoverY is a tool to shortlist Y-specific contigs from an assembly of male whole genome sequencing data, based on exact _k-mer_ matches with a female. This tool is platform agnostic and has been tested on male assemblies from Illumina, PacBio and 10x Genomics. The female can be a reference assembly or a low coverage raw reads dataset. DiscoverY can be ran in two different modes: female_only or female+male.  In the female_only mode, the proportion shared between each contig with a female reference is computed; female+male mode uses both proportion of k-mers of each contig shared with a reference female and the kmer counts from the male raw reads to estimate each contig's depth-of-coverage. \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9042646532786903,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Before running DiscoverY, the following input files are required in ./data folder. \nNote that currently the names of the \"data\" folder and of the files are hardcoded into DiscoverY. \n\tmale_contigs.fasta : contigs from WGS assembly, which will be annotated by running DiscoverY\n\tkmers_from_male_reads : kmers from raw male reads used for assembly, used for computing coverage\n\t[optional] female.bloom : Bloom Filter of kmers from female if available\n\t[optional] female_kmers : kmers from female if Bloom Filter has not been constructed\n\t[optional] female.fasta : Female reference in FASTA format if BF and kmer set both unavailable\n\t \nA typical run of DiscoverY looks like this.  \n- --female_bloom: pass in option if an existing bloom filter will be used. If this option is not passed in, a bloom filter will be created by k-merizing the female reference (data/female.fasta). \nThe output of DiscoverY is an annotated file: ```proportion_annotated_contigs.fasta``` in which the fasta headers have information about the proportion shared with female and estimated depth of coverage.  \nAnd in female+male mode: \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9752035706554602,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "This notebook uses labeled data to pick the best threshold of male_coverage and female_proportion to retrieve Y-contigs, by using a Linear SVM classifier. The precision and recall for the best combination is reported in the notebook, and a plot is generated with Y-contigs and the chosen threshold.  \n\nDiscoverY also uses the k-mer counter DSK. The latest DSK binaries (v2.2.0 for Linux 64 bit and v2.2.0 for Mac OSX) are provided in the dependency folder. Thus, if you are using either of these operating systems, DSK need not be installed, and you may use the binaries as provided. For other operating systems, or if alternate versions or functionality of DSK is desired, see https://gatb.inria.fr/software/dsk/. \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8529379162606446,
      "result": {
        "original_header": "Example",
        "type": "Text_excerpt",
        "value": "The /data folder contains example data. \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9064355757895766,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "\n### Generating ```kmers_from_male_reads```\nThe ```kmers_from_male_reads``` is a file which includes a line for every distinct kmer in the male reads dataset, and each line contains the kmer sequence followed by whitespace followed by the number of times it occurs. For example, the first three lines could look like this. \nThe ```kmers_from_male_reads``` file can be generated by the k-mer counter DSK. The ./dependency folder contains DSK binaries for Linux 64 bit and Mac OSX. Usage is as follows (example shown below is for a Linux system) : \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8897981383776581,
      "result": {
        "original_header": "Miscellaneous",
        "type": "Text_excerpt",
        "value": "The following scripts are included with this distribution of DiscoverY, and are automatically run by discovery.py as part of the pipeline. Users may consider them separately for custom needs if required.  \n\t\n**kmers.py** \n\t\n\ta set of general purpose functions to work with kmers \n**classify_ctgs.py**\n\t\n\tinput : all contigs from WGS assembly, male read kmers and female kmers.\n\toutput : annotated contigs with proportions shared with female \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/makovalab-psu/DiscoverY/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/classifier/classifier.ipynb"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/classifier/classifier.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/classifier/.ipynb_checkpoints/classifier-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/classifier/.ipynb_checkpoints/classifier-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/makovalab-psu/DiscoverY/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "makovalab-psu/DiscoverY"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DiscoverY"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/dependency/run_dsk_Linux.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/dependency/run_dsk_OSX.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/dependency/dsk-v2.2.0-bin-Darwin/simple_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/dependency/dsk-v2.2.0-bin-Linux/simple_test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "DiscoverY"
        ],
        "type": "Text_excerpt",
        "value": "To download, \n\n\tgit clone https://github.com/makovalab-psu/DiscoverY\n\t\nDiscoverY is written in Python 3 and requires some dependencies to be installed.\n\nFor the female_only and female+male modes used to annotate the contigs, the following packages can installed as follows:\n\n    pip install numpy\n    pip install biopython\n    pip install cython\n    pip install pybloomfiltermmap3\n\n\nIf the user also choses to run DiscoverY in best mode, the following dependencies should also be installed:\n\n    pip install sklearn\n    pip install matplotlib\n    pip install seaborn\n\n\nDiscoverY also uses the k-mer counter DSK. The latest DSK binaries (v2.2.0 for Linux 64 bit and v2.2.0 for Mac OSX) are provided in the dependency folder. Thus, if you are using either of these operating systems, DSK need not be installed, and you may use the binaries as provided. For other operating systems, or if alternate versions or functionality of DSK is desired, see https://gatb.inria.fr/software/dsk/.\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9336440034355118,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "\tmale_contigs.fasta : contigs from WGS assembly, which will be annotated by running DiscoverY\n\tkmers_from_male_reads : kmers from raw male reads used for assembly, used for computing coverage\n\t[optional] female.bloom : Bloom Filter of kmers from female if available\n\t[optional] female_kmers : kmers from female if Bloom Filter has not been constructed\n\t[optional] female.fasta : Female reference in FASTA format if BF and kmer set both unavailable\n\t \n\tpython discoverY.py [--help]  \n- --female_bloom: pass in option if an existing bloom filter will be used. If this option is not passed in, a bloom filter will be created by k-merizing the female reference (data/female.fasta). \n- --female_kmers_set: pass in option if a bloom filter should be created from the female_kmers file \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9946775222528021,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "\n### DiscoverY in 'best' mode\nIf the user has a labeled dataset, Discover Y can be run in 'best' mode after obtaining the annotated male contigs. The jupyter notebook classifier.ipynb in the classifier folder may be used, as follows: \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.998020462623675,
      "result": {
        "original_header": "DiscoverY in 'best' mode",
        "type": "Text_excerpt",
        "value": "        cd classifier\n        jupyter notebook classifier.ipynb \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9253141517407325,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "## Installation  \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9936301662686979,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "\tgit clone https://github.com/makovalab-psu/DiscoverY\n\t\nDiscoverY is written in Python 3 and requires some dependencies to be installed. \nFor the female_only and female+male modes used to annotate the contigs, the following packages can installed as follows: \n    pip install numpy\n    pip install biopython\n    pip install cython\n    pip install pybloomfiltermmap3 \n\nIf the user also choses to run DiscoverY in best mode, the following dependencies should also be installed: \n    pip install sklearn\n    pip install matplotlib\n    pip install seaborn \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9841437005890431,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "\nDiscoverY also uses the k-mer counter DSK. The latest DSK binaries (v2.2.0 for Linux 64 bit and v2.2.0 for Mac OSX) are provided in the dependency folder. Thus, if you are using either of these operating systems, DSK need not be installed, and you may use the binaries as provided. For other operating systems, or if alternate versions or functionality of DSK is desired, see https://gatb.inria.fr/software/dsk/. \nThe ```kmers_from_male_reads``` file can be generated by the k-mer counter DSK. The ./dependency folder contains DSK binaries for Linux 64 bit and Mac OSX. Usage is as follows (example shown below is for a Linux system) : \n    cd dependency\n    ./run_dsk_Linux.sh <FASTQ_file> <kmer_size> \n\nIf the k-mer counts file for male is not already provided, the user may need to generate k-mer counts manually using DSK. To generate k-mer counts with DSK, the following steps are needed :  \n    cd dependency \n    ln -s ../data/female.fasta  # make sure the correct reads file is provided to DSK\n    ./run_dsk_Linux.sh r1.fastq 25   \n    dependency/dsk_output/kmers_from_female \n    cd ../data\n    ln -s ../dependency/kmers_from_female  \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9996288410861417,
      "result": {
        "original_header": "Miscellaneous",
        "type": "Text_excerpt",
        "value": "The following scripts are included with this distribution of DiscoverY, and are automatically run by discovery.py as part of the pipeline. Users may consider them separately for custom needs if required.  \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8670249749841749,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "\tpython discoverY.py --female_bloom --mode female+male\n \nDiscoverY accepts the following parameters.  \n\tpython discoverY.py [--help]  \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "## Example \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8218289800843529,
      "result": {
        "original_header": "Example",
        "type": "Text_excerpt",
        "value": "The /data folder contains example data. \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.81777401996914,
      "result": {
        "original_header": "Generating BASH2*",
        "type": "Text_excerpt",
        "value": "    cd dependency \n    ln -s ../data/female.fasta  # make sure the correct reads file is provided to DSK\n    ./run_dsk_Linux.sh r1.fastq 25   \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/makovalab-psu/DiscoverY/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Samarth Rangavittal\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "DiscoverY"
        ],
        "type": "Text_excerpt",
        "value": "This program is released under the MIT License. Please see LICENSE.md for details\n\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DiscoverY"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "makovalab-psu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 742774,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 18332,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 10758,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:16:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "DiscoverY"
        ],
        "type": "Text_excerpt",
        "value": "Before running DiscoverY, the following input files are required in ./data folder. \nNote that currently the names of the \"data\" folder and of the files are hardcoded into DiscoverY.\n\n\tmale_contigs.fasta : contigs from WGS assembly, which will be annotated by running DiscoverY\n\tkmers_from_male_reads : kmers from raw male reads used for assembly, used for computing coverage\n\t[optional] female.bloom : Bloom Filter of kmers from female if available\n\t[optional] female_kmers : kmers from female if Bloom Filter has not been constructed\n\t[optional] female.fasta : Female reference in FASTA format if BF and kmer set both unavailable\n\t\n\n[See below for more info on generating these files.](https://github.com/md5sam/DiscoverY/blob/master/README.md#input-files) \n\nA typical run of DiscoverY looks like this. \n\n\tpython discoverY.py --female_bloom --mode female+male\n \nDiscoverY accepts the following parameters. \n\n\tpython discoverY.py [--help] \n\n- --help: print usage information.\n\n- --female_bloom: pass in option if an existing bloom filter will be used. If this option is not passed in, a bloom filter will be created by k-merizing the female reference (data/female.fasta).\n\n- --female_kmers_set: pass in option if a bloom filter should be created from the female_kmers file\n\n- --kmers_size: sets k-mer size\n\n- --mode: set to female_only or female+male\n\nThe output of DiscoverY is an annotated file: ```proportion_annotated_contigs.fasta``` in which the fasta headers have information about the proportion shared with female and estimated depth of coverage. \n\nThe fasta file will be annotated like the following in the female_only mode:\n\n`>record_id length_of_contig proportion_shared_with_female`\n\nAnd in female+male mode:\n\n`>record_id length_of_contig proportion_shared_with_female median_k-mer_abundance`\n\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DiscoverY in 'best' mode",
        "parent_header": [
          "DiscoverY",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "If the user has a labeled dataset, Discover Y can be run in 'best' mode after obtaining the annotated male contigs. The jupyter notebook classifier.ipynb in the classifier folder may be used, as follows:\n\n        cd classifier\n        jupyter notebook classifier.ipynb\n\nThis notebook uses labeled data to pick the best threshold of male_coverage and female_proportion to retrieve Y-contigs, by using a Linear SVM classifier. The precision and recall for the best combination is reported in the notebook, and a plot is generated with Y-contigs and the chosen threshold. \n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "DiscoverY"
        ],
        "type": "Text_excerpt",
        "value": "The /data folder contains example data.\n\n"
      },
      "source": "https://raw.githubusercontent.com/makovalab-psu/DiscoverY/master/README.md",
      "technique": "header_analysis"
    }
  ]
}