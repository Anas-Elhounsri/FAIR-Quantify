{
  "application_domain": [
    {
      "confidence": 19.01,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Mitochondrial genome reference",
        "parent_header": [
          "Table of Content",
          "Prerequisites",
          "Mitochondrial genome information (hg19/rCRS)"
        ],
        "type": "Text_excerpt",
        "value": "**Files:**\n   + hg19.fasta\n   + rCRS.fasta\n\n**Links**\n\n```bash\n#1.1) rCRS assembly (rCRS.fasta)\nhttp://www.ncbi.nlm.nih.gov/nuccore/251831106\n\n#1.2) hg19 assembly (hg19.fasta)\nhttp://www.ncbi.nlm.nih.gov/nuccore/NC_001807.4?report=genbank\n```\n\n<a name=\"mitoanno\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/riverlee/MitoSeek"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2012-12-06T23:42:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-04T20:35:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Seeking information like heteroplasmy, structure variants, etc. on  Mitochondrial genome from next generation sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9938402271519147,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "MitoSeek is an open-source software tool to reliably and easily extract mitochondrial genome information from exome sequencing data. MitoSeek evaluates **mitochondrial genome alignment quality, estimates relative mitochondrial copy numbers, and detects heteroplasmy, somatic mutation, and structural variance of the mitochondrial genome**. \n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/riverlee/MitoSeek/wiki"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Change log &amp; Download",
        "parent_header": [
          "Table of Content"
        ],
        "type": "Text_excerpt",
        "value": "<a name=\"v1.3\">"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release version 1.3 on May 18, 2015",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "\n* **[Download Zip](https://github.com/riverlee/MitoSeek/archive/v1.3.zip)**\n* **[Browse Code ] (https://github.com/riverlee/MitoSeek/tree/v1.3)**\n\n\n<a name=\"v1.2\">"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release version 1.2 on Jan 15, 2014",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "* **[Download Zip](https://github.com/riverlee/MitoSeek/archive/v1.2.zip)**\n* **[Browse Code ] (https://github.com/riverlee/MitoSeek/tree/v1.2)**\n\nChanges are here:\n  * Reading options from a configure instead of reading from commmand line. The new program is called **mitoSeek_new.pl**, an example of configure file is called **'para.txt'**. Meanwhile, the original program which reads options from command line is also kept, called **mitoSeek.pl**.\n\n<a name=\"v1.1\">"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release version 1.1 on Feb 15, 2013",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "* **[Download Zip](https://github.com/riverlee/MitoSeek/archive/v1.1.zip)**\n* **[Browse Code ] (https://github.com/riverlee/MitoSeek/tree/v1.1)**\n\nChanges are here:\n  * Add option **-advance** to improve mitochondrial reads extraction, which is done by 1) Initially extract mitochrodrial reads from a bam file, then 2) remove those could be remapped to non-mitochondrial human genome by bwa. The version **v1.0** only implementes the step 1\n  * Add Statistical framework for heteroplasmy detection, which are [fisher test](#fisher) and [empirical bayesian] (#bayes). \n  * Add option **-samtools** for people who would like to use their specified samtools\n  * Add options **-bwa** and **--bwaindex** which are needed if use **-advance** option\n  * In the heteroplasmy output, it will contain columns of **fisher.pvalue, fisher.adjust.pvalue,fisher.phred.score,empirical.probability,** and **empirical.phred.score**\n  * Thanks to Peter's code for beta calculation in perl at <http://home.online.no/~pjacklam/perl/modules/>\n\n\n<a name=\"v1.0\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Release version 1.0 on Dec 14, 2012",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "* **[Download Zip](https://github.com/riverlee/MitoSeek/archive/964cd2e61735a60283f0280020cadbb53be3617e.zip)**\n* **[Browse Code ] (https://github.com/riverlee/MitoSeek/tree/964cd2e61735a60283f0280020cadbb53be3617e)**\n\n<a name=\"statistics\"/>\nStatistical framework for heteroplasmy detection\n-----------------------------------------------------------------\nWe have implemented statistical framework in addition to the empirical filters. We added a function to perform a one-tail Fisher\u2019s exact test to determine if the rate of heteroplasmy is significantly greater than user defined cutoff (-hp). Moreover, MitoSeek also provides Phred quality scores based on the p-value.\n\n\n<a name=\"fisher\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Fisher's exact test",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "           major   minor    \nobserved    n11     n12 | n1p \nexpected    n21     n22 | n2p   \n           -----------------\n            np1     np2   npp\nwhere n11 and n12 are observed number of major and minor alleles,\nn21 = (n11+n12)*(1-hp/100) in which hp is defined by -hp\nn22 = (n11+n12)*hp/100  in which hp is defined by -hp\n```\n\nThe phred score of heteroplasmy for Fisher's exact test calucated as\n\n```\nphred.score.fisher = - log10 * log10(fisher.pvalue)\n```\n\n<a name=\"bayes\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Empirical Bayesian for Binomial proportion with conjugate Beta prior",
        "parent_header": [
          "Table of Content",
          "Change log &amp; Download"
        ],
        "type": "Text_excerpt",
        "value": "```\n                                      hp          \n                                    _ ---         \n                                   /  100         \nlikelihood.of.heteroplasmy =  1 -  |      f(x) dx \n                                  _/  0           \n\n\n```\n\nwhere\n\n```\n                        1             a  + n12 - 1         b  + n11 - 1  \nf(x) =  -------------------------- * x            * (1 - x)\n        beta(n12 +  a ,n11 +  b )                             \n                                                                     \n\n```\n\n**_a_** and **_b_** are share parameters of Beta prior distribution, which are  estimated from 600 BRCA samples.\n\n\nThe phred score of heteroplasmy for Empirical Bayesian approach is calculated as\n\n```\nphred.score.empirical = - log10 * log10(1 - likelihood.of.heteroplasmy)\n\n\n```\n\n\n\n\n<a name=\"Prerequisites\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/riverlee/MitoSeek/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/riverlee/MitoSeek/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "riverlee/MitoSeek"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Table of Content"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1, Setting your PERL5LIB environment variable",
        "parent_header": [
          "Table of Content",
          "Prerequisites",
          "Configure your perl environment"
        ],
        "type": "Text_excerpt",
        "value": "#If your own perl libary top folder is ~/perllib\n#Then add the following lines in your ~/.bashrc\n#because the subfolders could be different due to different versions of perl\n#and linux, so to save time by adding subfolders in the PERL5LIB, we use 'for'\n#to add all the subfolders. \nPERL5LIB=~/perllib\nif [ -d ~/perllib ]; then\n  for i in `find ~/perllib -type d`\n    do\n      PERL5LIB=$i:$PERL5LIB\n    done\nfi\nexport $PERL5LIB\n```"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Table of Content",
        "type": "Text_excerpt",
        "value": "* [Overview](#overview)\n* [Usage] (#usage)\n* [Change log & Download] (#change)\n   * [Release version 1.3 on May 18, 2015] (#v1.3)\n   * [Release version 1.2 on Jan 15, 2014] (#v1.2)\n   * [Release version 1.1 on Feb 15, 2013] (#v1.1)\n   * [Release version 1.0 on Dec 14, 2012] (#v1.0)\n* [Statistical framework for heteroplasmy detection](#statistics)\n   * [Fisher's exact test](#fisher)\n   * [Empirical Bayesian for Binomial proportion with conjugate Beta prior] (#bayes)\n* [Prerequisites](#Prerequisites)\n  * [Step1: Intall perl packages required by circos] (#step1)\n  * [Step2: Intall perl packages required by MitoSeek] (#step2)\n  * [Step3: Build samtools] (#step3)\n* [Others] (#Others)\n  * [Configure your perl environment] (#perlsetup)\n  * [Mitochondrial genome information (hg19/rCRS)] (#mitogenome)\n     * [Mitochondrial genome reference] (#mitoreference)\n     * [Mitochondrial genome annotation] (#mitoanno)\n     * [Known pathogenic mutations] (#pathogenic)\n  * [Whole genome exon coordinates] (#exon)\n     \n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/riverlee/MitoSeek/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "X11 License\n\nAndrey V. Panov (C) 2005\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, and/or sell copies of the Software, and to permit persons to\nwhom the Software is furnished to do so, provided that the above\ncopyright notice(s) and this permission notice appear in all copies of\nthe Software and that both the above copyright notice(s) and this\npermission notice appear in supporting documentation.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF\nTHIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS\nINCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT\nOR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\nExcept as contained in this notice, the name of a copyright holder shall\nnot be used in advertising or otherwise to promote the sale, use or\nother dealings in this Software without prior written authorization of\nthe copyright holder.\n\nAs a special exception, if you create a document which uses these fonts,\nand embed these fonts or unaltered portions of these fonts into the\ndocument, these fonts does not by itself cause the resulting document to\nbe covered by the X11 License. This exception does not however\ninvalidate any other reasons why the document might be covered by the\nX11 License. If you modify these fonts, you may extend this exception to\nyour version of the fonts, but you are not obligated to do so. If you do\nnot wish to do so, delete this exception statement from your version.\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/Resources/circos-0.56/fonts/modern/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MitoSeek"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "riverlee"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 883589,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 606,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 97,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Table of Content"
        ],
        "type": "Text_excerpt",
        "value": "MitoSeek runs on 32-bit or 64-bit GNU/Linux and request perl packages like **GD::Graph::boxplot**, etc. Here are the steps you need to do to install packages needed for the **MitoSeek** program.\n\n\n<a name=\"step1\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step1: Intall perl packages required by <a href=\"http://circos.ca/\">circos</a>",
        "parent_header": [
          "Table of Content",
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n#1) go to the circos package folder which is included as part of the MitoSeek \ncd Resources/circos-0.56/bin\n\n#2) Check whether all the packages needed by circos plot are intalled on your PC,\n#if this does not work, try 'chmod +x test.modules'\n./test.modules\n```\nIf all the packages are installed on your PC, it will look like this.\n```\nok   Carp\nok   Config::General\nok   Cwd\nok   Data::Dumper\nok   Digest::MD5\nok   File::Basename\nok   File::Spec::Functions\nok   File::Temp\nok   FindBin\nok   GD\nok   GD::Image\nok   GD::Polyline\nok   Getopt::Long\nok   IO::File\nok   List::MoreUtils\nok   List::Util\nok   Math::Bezier\nok   Math::BigFloat\nok   Math::Round\nok   Math::VecStat\nok   Memoize\nok   Params::Validate\nok   Pod::Usage\nok   POSIX\nok   Readonly\nok   Regexp::Common\nok   Set::IntSpan\nok   Storable\nok   Sys::Hostname\nok   Text::Format\nok   Time::HiRes\n```\nOtherwise, it may look like this.\n```\nok   Carp\nfail Config::General is not usable (it or a sub-module is missing)\nok   Cwd\nok   Data::Dumper\nok   Digest::MD5\nok   File::Basename\nok   File::Spec::Functions\nok   File::Temp\nok   FindBin\nfail GD is not usable (it or a sub-module is missing)\nfail GD::Image is not usable (it or a sub-module is missing)\nfail GD::Polyline is not usable (it or a sub-module is missing)\nok   Getopt::Long\nok   IO::File\nfail List::MoreUtils is not usable (it or a sub-module is missing)\nok   List::Util\nfail Math::Bezier is not usable (it or a sub-module is missing)\nok   Math::BigFloat\nfail Math::Round is not usable (it or a sub-module is missing)\nfail Math::VecStat is not usable (it or a sub-module is missing)\nok   Memoize\nok   Params::Validate\nok   Pod::Usage\nok   POSIX\nfail Readonly is not usable (it or a sub-module is missing)\nfail Regexp::Common is not usable (it or a sub-module is missing)\nfail Set::IntSpan is not usable (it or a sub-module is missing)\nok   Storable\nok   Sys::Hostname\nfail Text::Format is not usable (it or a sub-module is missing)\nfail Time::HiRes is not usable (it or a sub-module is missing)\n```\n\nIf this happens, try to install the missing packages by **cpan** (If you you don't have root previlege, please look at [here] (#perlsetup) to set up your own perl environment).\n```bash\n#run in root if the packages will be installed in the system path\n#like /usr/local/lib64/perl5\n./test.modules |grep fail|cut -f2 -d\" \"|xargs -I {} cpan {}\n``` \n<a name=\"step2\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step2: Intall perl packages required by MitoSeek",
        "parent_header": [
          "Table of Content",
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n#go the the folder where your MitoSeek is\n#And test whether all the required modules have been installed.\n./test.modules\n```\nThe successful output would look like this\n```bash\nok   Convert\nok   Cwd\nok   File::Basename\nok   File::Path\nok   FindBin\nok   GD\nok   GD::Graph::bars3d\nok   GD::Graph::boxplot\nok   GD::Graph::lines\nok   GD::Text::Wrap\nok   Getopt::Long\nok   List::Util\nok   Mitoanno\nok   Statistics::KernelEstimation\n```\nOtherwise, it may look like this\n```bash\nok   Convert\nok   Cwd\nok   File::Basename\nok   File::Path\nok   FindBin\nfail GD is not usable (it or a sub-module is missing)\nfail GD::Graph::bars3d is not usable (it or a sub-module is missing)\nfail GD::Graph::boxplot is not usable (it or a sub-module is missing)\nfail GD::Graph::lines is not usable (it or a sub-module is missing)\nfail GD::Text::Wrap is not usable (it or a sub-module is missing)\nok   Getopt::Long\nok   List::Util\nok   Mitoanno\nfail Statistics::KernelEstimation is not usable (it or a sub-module is missing)\n```\nTo install the missing packages is the same way as we did in [step1] (#step1) for those missing packages requried by [circos](http://circos.ca/).\n```bash\n#run in root if the packages will be installed in the system path\n#like /usr/local/lib64/perl5\n./test.modules |grep fail|cut -f2 -d\" \"|xargs -I {} cpan {}\n``` \n<a name=\"step3\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step3: Build samtools",
        "parent_header": [
          "Table of Content",
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n#go the samtools folder\ncd Resources/samtools\ntar jxvf samtools-0.1.18.tar.bz2\ncd samtools-0.1.18\n#build samtools and move the samtools program into its parental folder\nmake\nmv samtools ../\n#remove the samtools source code if you like\ncd ../\nrm -rf samtools-0.1.18\n```\n\nOr you can change the **mitoSeek.pl** script and tell the program where is the samtools on your PC. Here is the line you need to modify.\n```perl\nmy $samtools = \"$FindBin::Bin/Resources/samtools/samtools\";  #Where is the samtools file\n```\n\n\n<a name=\"others\"/>\nOthers\n-----------------------------------\n\n<a name=\"perlsetup\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2, Configure your cpan",
        "parent_header": [
          "Table of Content",
          "Prerequisites",
          "Configure your perl environment"
        ],
        "type": "Text_excerpt",
        "value": "#type cpan into cpan environment\ncpan\n```\nThen\n```bash\n#In cpan environment\no conf makepl_arg PREFIX=\"~/perllib\"\no conf commit\n\n#exit the cpan environment\nexit\n```\n\n<a name=\"mitogenome\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mitochondrial genome information (hg19/rCRS)",
        "parent_header": [
          "Table of Content",
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "* [Mitochondrial genome reference](#mitoreference)\n* [Mitochondrial genome annotation] (#mitoanno)\n* [Known pathogenic mutations] (#pathogenic)\n\n<a name=\"mitoreference\"/>"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mitochondrial genome annotation",
        "parent_header": [
          "Table of Content",
          "Prerequisites",
          "Mitochondrial genome information (hg19/rCRS)"
        ],
        "type": "Text_excerpt",
        "value": "   \n**result folder:** yourmitoseek/Resources/\n\n**Files:**\n   + hg19_annotation.gb\n   + rCRS_annotation.gb\n\n**Links**\n\n```bash\n#1.1) rCRS assembly (download as genbank format)\nhttp://www.ncbi.nlm.nih.gov/nuccore/251831106\n\n#1.2) hg19 assembly (downlaod as genbank format)\nhttp://www.ncbi.nlm.nih.gov/nuccore/NC_001807.4?report=genbank\n```\n\n<a name=\"pathogenic\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Known pathogenic mutations",
        "parent_header": [
          "Table of Content",
          "Prerequisites",
          "Mitochondrial genome information (hg19/rCRS)"
        ],
        "type": "Text_excerpt",
        "value": "**File Name:** yourmitoseek/Resources/OMIMpathogenic.txt\n\n\n<a name=\"exon\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Whole genome exon coordinates",
        "parent_header": [
          "Table of Content",
          "Prerequisites"
        ],
        "type": "Text_excerpt",
        "value": "Here is the scripts we download and prepare the exon bed file\n\n```bash\n#Wkdir: yourmitseek/Resources/genome\n#refGene annotation file (refGene.txt)\n#description of refGene is here at \n#https://cgwb.nci.nih.gov/cgi-bin/hgTables?hgsid=79902&hgta_doSchemaDb=hg18&hgta_doSchemaTable=refGene\nwget http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refGene.txt.gz\ngunzip refGene.txt.gz\n    \n#get exon region on chromosome 1-22, and X,Y (with prefix chr or without)\nperl -lane 'if($F[2]=~/chr\\d+$|chrX|chrY/) {@start=split \",\",$F[9]; @end=split \",\",$F[10];  for($i=0;$i<$F[8];$i++) { print join \"\\t\",$F[2],$start[$i],$end[$i],$F[12].\"|\".$F[1]}}' refGene.txt >refGeneExon_withChr.bed\n   \nperl -lane 'if($F[2]=~/chr\\d+$|chrX|chrY/) {$F[2]=~s/chr//g;@start=split \",\",$F[9]; @end=split \",\",$F[10];  for($i=0;$i<$F[8];$i++) { print join \"\\t\",$F[2],$start[$i],$end[$i],$F[12].\"|\".$F[1]}}' refGene.txt >refGeneExon_withoutChr.bed\n   \n#How to get the total bases from a bed file (getTotalBasesFromBed.R)\n./getTotalBasesFromBed.R genome_withChr.bed\n  \n```\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:19:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Table of Content"
        ],
        "type": "Text_excerpt",
        "value": "```bash\nperl mitoSeek.pl -i Examples/brca_tumor.bam -j Examples/brca_normal.bam -t 4 -sb 0 -hp 1 -d 5 -str 4 -sp 1 -sa 0\n```\n\nThis example report could be accessed at [Here]( http://htmlpreview.github.com/?https://github.com/riverlee/MitoSeek/blob/release/brca_tumor/mitoSeek.html)\n\n\nDetails for each parameters are here\n```bash\nUsage: perl mitoSeek.pl -i inbam \n-i [bam]                Input bam file\n-j [bam]                Input bam file2, if this file is provided, it will conduct somatic mutation mining, and it will be \n                        taken as normal tissue.\n-t [input type]         Type of the bam files, the possible choices are 1=exome, 2=whole genome, 3= RNAseq, 4 = mitochondria only,default = 1\n-d [int]                The minimum recommended depth requirement for detecting heteroplasmy. Lower depth will severely damage the \n                        confidence of heteroplasmy calling, default=50\n-ch                     Produce circos plot input files and circos plot figure for heteroplasmic mutation,\n                        (-noch to turn off and -ch to turn on), default = on\n-hp [int]               Heteroplasmy threshold using [int] percent alternative allele observed, default = 5\n-ha [int]               Heteroplasmy threshold using [int] allele observed, default = 0\n-alpha [float]          Shape1 parameter of Beta prior distribution, default is 3.87 which is estimated from 600 BRCA samples\n-beta  [float]          Shape2 parameter of Beta prior distribution, default is 174.28, which is estimated from 600 BRCA samples\n-A                      If - A is used, the total read count is the total allele count of all allele observed. \n                        Otherwise, the total read count is the sum of major and minor allele counts. Default = off\n-mmq [int]              Minimum map quality, default =20\n-mbq [int]              Minimum base quality, default =20\n-sb [int]               Remove all sites with strand bias score in the top [int] %, default = 10 \n-cn                     Estimate relative copy number of input bam(s), does not work with mitochondria targeted sequencing bam files,\n                        (-noch to turn off and -ch to turn on) default = off.\n-sp [int]               Somatic mutation detection threshold,int = percent of alternative allele observed in tumor, default int=5\n-sa [int]               Somatic mutation detection threshold,int = number of alternative allele observed in tumor, default int=3\n-cs                     Produce circos plot input files and circos plot figure for somatic mutation, \n                        (-nocs to turn off and -cs to turn on), default = off\n-r [ref]                The reference used in the bam file, the possible choices are hg19 and rCRS, default=hg19\n-R [ref]                The reference used in the output files, the possible choices are hg19 and rCRS, default=hg19\n-str [int]              Structure variants cutoff for those discordant mapping mates, \n                        int = number of spanning reads supporting this structure variants, default = 2\n-strf [int]             Structure variants cutoff for those large deletions,\n                        int = template size in bp, default=500\n-QC                     Produce QC result, (--noQC to turn off and -QC to turn on), default=on\n-samtools[samtools]     Tell where is the samtools program, default is your mitoseek directory/Resources/samtools/samtools\n-bwa [bwa]              Tell where is the bwa program, default value is 'bwa' which is in your $PATH\n-bwaindex [bwaindex]    Tell where is the bwa index of non-mitochondrial human genome, no default value\n-advance                Will get mitochondrial reads in an advanced way, generally followed by 1) Initially extract mitochrodrial reads from \n                        a bam file, then 2) remove those could be remapped to non-mitochondrial human genome by bwa. Advanced extraction needs \n                        -bwaindex option. Default extraction without removing step.\n\n```\n\n<a name=\"change\"/>\n"
      },
      "source": "https://raw.githubusercontent.com/riverlee/MitoSeek/v1.3/README.md",
      "technique": "header_analysis"
    }
  ]
}