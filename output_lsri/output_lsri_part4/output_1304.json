{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/najoshi/sabre"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2011-03-08T01:39:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-02T13:33:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9575942475866729,
      "result": {
        "original_header": "About",
        "type": "Text_excerpt",
        "value": "Next-generation sequencing can currently produce hundreds of millions of reads\nper lane of sample and that number increases at a dizzying rate.  Barcoding\nindividual sequences for multiple lines or multiple species is a cost-efficient\nmethod to sequence and analyze a broad range of data. \nSabre is a tool that will demultiplex barcoded reads into separate files. \nIt will work on both single-end and paired-end data in fastq format.\nIt simply compares the provided barcodes with each read and separates\nthe read into its appropriate barcode file, after stripping the barcode from\nthe read (and also stripping the quality values of the barcode bases).  If\na read does not have a recognized barcode, then it is put into the unknown file.  \nSabre also has an option (-m) to allow mismatches of the barcodes. \nSabre also supports gzipped file inputs.  Also, since sabre does not use the \nquality values in any way, it can be used on fasta data that is converted to\nfastq by creating fake quality values. \n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/najoshi/sabre/wiki"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/najoshi/sabre/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/najoshi/sabre/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "najoshi/sabre"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sabre - A barcode demultiplexing and trimming tool for FastQ files"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Building and Installing Sabre",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files"
        ],
        "type": "Text_excerpt",
        "value": "To build Sabre, enter:\n\n    make\n\nThen, copy or move \"sabre\" to a directory in your $PATH.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/najoshi/sabre/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Permission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sabre"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "najoshi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 30618,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files"
        ],
        "type": "Text_excerpt",
        "value": "Sabre requires a C compiler; GCC or clang are recommended.  Sabre\nrelies on Heng Li's kseq.h, which is bundled with the source.\n\nSabre also requires Zlib, which can be obtained at\n<http://www.zlib.net/>.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:42:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 61
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files"
        ],
        "type": "Text_excerpt",
        "value": "Sabre has two modes to work with both paired-end and single-end\nreads: `sabre se` and `sabre pe`.\n\nRunning sabre by itself will print the help:\n\n    sabre\n\nRunning sabre with either the \"se\" or \"pe\" commands will give help\nspecific to those commands:\n\n    sabre se\n    sabre pe\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sabre Single End (`sabre se`)",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`sabre se` takes an input fastq file and an input barcode data file and outputs \nthe reads demultiplexed into separate files using the file names from the data file.\nThe barcodes will be stripped from the reads and the quality values of the barcode\nbases will also be removed.  Any reads with unknown barcodes get put into the \"unknown\" \nfile specified on the command line.  The -m option allows for mismatches in the barcodes.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Barcode data file format for single end",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage",
          "Sabre Single End (`sabre se`)"
        ],
        "type": "Text_excerpt",
        "value": "    barcode1 barcode1_output_file.fastq\n    barcode2 barcode2_output_file.fastq\n    etc...\n\nBe aware that if you do not format the barcode data file correctly, sabre will not work properly.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage",
          "Sabre Single End (`sabre se`)"
        ],
        "type": "Text_excerpt",
        "value": "    sabre se -f input_file.fastq -b barcode_data.txt -u unknown_barcode.fastq\n    sabre se -m 1 -f input_file.fastq -b barcode_data.txt -u unknown_barcode.fastq\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Sabre Paired End (`sabre pe`)",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`sabre pe` takes two paired-end files and a barcode data file as input and outputs\nthe reads demultiplexed into separate paired-end files using the file names from the \ndata file.  The barcodes will be stripped from the reads and the quality values of the barcode \nbases will also be removed.  Any reads with unknown barcodes get put into the \"unknown\" files \nspecified on the command line.  It also has an option (-c) to remove barcodes from both files.  \nUsing this option means that if sabre finds a barcode in the first file, it assumes the paired \nread in the other file has the same barcode and will strip it (along with the quality values).  \nThe -m option allows for mismatches in the barcodes.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Barcode data file format for paired end",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage",
          "Sabre Paired End (`sabre pe`)"
        ],
        "type": "Text_excerpt",
        "value": "    barcode1 barcode1_output_file1.fastq barcode1_output_file2.fastq\n    barcode2 barcode2_output_file1.fastq barcode2_output_file2.fastq\n    etc...\n\nBe aware that if you do not format the barcode data file correctly, sabre will not work properly.\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "sabre - A barcode demultiplexing and trimming tool for FastQ files",
          "Usage",
          "Sabre Paired End (`sabre pe`)"
        ],
        "type": "Text_excerpt",
        "value": "    sabre pe -f input_file1.fastq -r input_file2.fastq -b barcode_data.txt \\\n    -u unknown_barcode1.fastq -w unknown_barcode1.fastq\n\n    sabre pe -c -f input_file1.fastq -r input_file2.fastq -b barcode_data.txt \\\n    -u unknown_barcode1.fastq -w unknown_barcode1.fastq\n\n    sabre pe -m 2 -f input_file1.fastq -r input_file2.fastq -b barcode_data.txt \\\n    -u unknown_barcode1.fastq -w unknown_barcode1.fastq\n"
      },
      "source": "https://raw.githubusercontent.com/najoshi/sabre/master/README.md",
      "technique": "header_analysis"
    }
  ]
}