{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "Liu, B., Liu, Y., Li, J. et al. deSALT: fast and accurate long transcriptomic read alignment with de Bruijn graph-based index. Genome Biol 20, 274 (2019) doi:10.1186/s13059-019-1895-9\n\n[![DOI](https://zenodo.org/badge/159485852.svg)](https://zenodo.org/badge/latestdoi/159485852)\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "[1] Weirather JL et al. Comprehensive comparison of Pacific Biosciences and Oxford Nanopore Technologies and their applications to transcriptome analysis. F1000Res (2017), 6: 100. \n\n[2] Carneiro MO et al. Pacific biosciences sequencing technology for genotyping and variation discovery in human data. BMC Genomics (2012), 13:375. \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ydLiu-HIT/deSALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "For advising, bug reporting and requiring help, please post on GitHub Issue or contact ydliu@hit.edu.cn.\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-28T10:41:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-14T09:45:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deSALT - De Bruijn graph-based Spliced Aligner for Long Transcriptome reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "deSALT(de Bruijn graph-based Spliced Aligner for Long Transcriptome reads) is a novel alignment approach with faster speed and sensitive exon identification. Taking the advantages of its novel two pass alignment strategy based on de Bruijn graph-based index, efficient alignment skeleton generation, sensitive exon identification and specifically designed local alignment, deSALT is a fast and accurate RNA-seq long read alignment approach. It has ability to produce high quality full-length read alignment, which is effective to recover the exons and splicing junctions along the entire reads. The workflow of deSALT can be found in `img` folder.\n\nWe benchmarked deSALT with 60 simulated datasets having various read length, sequencing error rates and sequencing depth (https://github.com/ydLiu-HIT/deSALT/blob/master/simulation/Sim_data_generation.md). We assessed the aligners with three real sequencing datasets. The first two datasets are from a well-studied CEPH sample (NA12878), and respectively produced by ONT cDNA sequencing (containing 15,152,101 reads and 14,134,831,170 bases in total) and ONT direct RNA sequencing (containing 10,302,647 reads and 10,614,186,428 bases in total). The two datasets are available at https://github.com/nanopore-wgs-consortium/NA12878. The third dataset is from a mouse sample produced by the PacBio platform (SRA Accession Number: SRR6238555; containing 2,269,795 reads and 3,213,849,871 bases in total).\n\ndeSALT is open source and free for non-commerical use which is mainly designed by Yadong Liu & Bo Liu and developed by Yadong Liu in Center for Bioinformatics, Harbin Institute of Technology, China.\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8954084730694551,
      "result": {
        "original_header": "deSALT:",
        "type": "Text_excerpt",
        "value": "deSALT - De Bruijn graph-based Spliced Aligner for Long Transcriptome reads \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9487889845756947,
      "result": {
        "original_header": "Commands and options",
        "type": "Text_excerpt",
        "value": "```\nUsage: deSALT aln [options] -f <temporary file> <index_route> <read.fa/fq>\n\n\t-f <temporary file>           The temporary file for storing alignment skeletons in first pass.\n\t\t\t\t      If users run two deSALT program in the same time, -f option is necessary.\n\t<index_route>                 The path of RdBG index.\n\t<read.fq/fa>                  The input reads in fasta or fastq format.\n\nAlgorithm options:\n\n\t-t --thread           [INT]\tNumber of threads. [4]\n\t-k --index-kmer       [INT]\tK-mer length of RdBG-index, the default index kmer-size of deBGA.[21,22]\n\t-l --seeding-lmer     [INT]\tK-mer length of seeding process (no long than RdBG-index). [15]\n\t-a --local-hash-kmer  [INT]\tK-mer length of local hash process. In order to detect spanning exons in 2-pass\n\t\t\t\t\talignment, a local hash query procedure is needed. The hash kmer is recommend no \n\t\t\t\t\tmore than 10 bp. [8]\n\t-s --seed-step        [INT]\tThe interval of seeding. deSALT extracts kmer at every s bp. [5]\n    \t-B --batch-size       [INT]\tThe counts of reads to be processed in one loop. For occupuying less memory, \n\t\t\t\t\tdeSALT take only 655350 reads into the memory every time. [655350]\n\t-n --max-uni-pos      [INT]\tMaximum allowed number of hits per seed. If one seed in unipath has more than 50\n\t\t\t\t\tcopies in reference genome, we will ingore the seed. [50]\n\t-L --max-readlen      [INT]\tMaximum allowed read length. [1000000]\n\t-i --min-frag-dis     [INT]\tMaximum allowed distance of two fragment can be merge. [20]\n\t-I --max-intron-len   [INT]\tMaximum allowed intron length. [200000]\n\t-c --min-chain-score  [INT]\tMinimal skeleton score(match bases minus gap penalty). [30]\n\t-d --strand-diff      [INT]     The minimal difference of dp score by two strand to make sure the transcript strand. [10]\n\t-g --max-read-gap     [INT]\tMaximum allowed gap in read when generating skeleton. [2000]\n\t-p --secondary-ratio  [FLOAT]\tMin secondary-to-primary score ratio. An alignment can be regard as a secondary\n\t\t\t\t\talignment if secondary_score / primary_score > 0.9. [0.9]\n\t-e --e-shift          [INT]\tThe number of downstream (upstream) exons will be processed when left (right) extension. [5]\n\t-T --trans-strand               Find splicing sites in transcript strand.\n    \t-G --gtf              [STR]\tProvided an annotation file for precise intron donor and acceptor sites.\n    \t                           \tConvert GTF file(now support GTF format only) to fixed format of deSALT by Annotation_Load.py\n\t-x --read-type        [STR]\tSpecifiy the type of reads and set multiple paramters unless overriden.\n\t                           \t[null] default parameters. error rate 13% \n\t                           \tccs (PacBio SMRT CCS reads): error rate 1%\n\t                              \tclr (PacBio SMRT CLR reads): error rate 15%\n\t                              \tont1d (Oxford Nanopore 1D reads): error rate > 20%\n\t                               \tont2d (Oxford Nanopore 2D reads): error rate > 12%\n\nScoring options:\n\n\t-O --open-pen         [INT(,INT)]\t\n\t\t\t\t\tGap open penealty. [2, 32]\n\t-E --ext-pen          [INT(,INT)]\t\n\t\t\t\t\tGap extension penalty; a k-long gap costs min{O1+k*E1,O2+k*E2}. [1, 0]\n\t-m --match-score      [INT]    \tMatch score for SW-alginment. [1]\n\t-M --mis-score        [INT]    \tMismatch score for SW-alignment. [2]\n\t-z --zdrop            [INT(,INT)]\n\t\t\t\t\tZ-drop score for splice/non-splice alignment. [400]\n\t-w --band-width       [INT]    \tBandwidth used in chaining and DP-based alignment. [500]\n    \t-R --noncan           [INT]     Penalty score for non-canonical splice junction sites. [9]\n\nOutput options:\n\n\t-N --top-num-aln      [INT]    \tMax allowed number of secondary alignment. [5]\n\t-Q --without-qual              \tDon't output base quality in SAM.\n\t-f --temp-file-perfix [STR]    \tRoute of temporary files after the first-pass alignment. [./skeletons]\n\t\t                        If you run more than one deSALT program in the same time,\n\t\t                        you must point out different routes of temporary files for each program!\n\t\t\t\t\tIf no, every deSALT program will write temporary data to the same file which\n\t\t\t\t\twill cause crash of program in 2-pass alignment due to inconsistent temporary data.\n\t-o --output           [STR]     Output file (SAM format). [./aln.sam]\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.955355177934342,
      "result": {
        "original_header": "1. Three different kmer length in deSALT.",
        "type": "Text_excerpt",
        "value": "`-l seeding-lmer`: a smaller kmer length than index-kmer for the seeding process. Due the high error rate of long reads (except PacBio ROI reads), large kmers are hard to locate reads in reference genomes. Based on experience, a 15-18bp seeding kmer is best which take cares the search space and enough hits for skeletons generation. \n`-a local-hash-kmer`: if one read has a spanning exon due to there are no seed matches between read and spanning exon in the 2-pass alignment, a extreme small kmer is needed to find matches. \nIn general, `index-kmer > seeding-lmer > local_hash_kmer`. Considering that `seeding-lmer` is smaller than `index-kmer`, when we do a binary search for seeding process, the base of seeding-lmer is the perfix of index-kmer. Thus, a seeding-lmer will have at most **4<sup>(|index-kmer| - |seeding-lmer|)</sup>**. If we use a large index-kmer and a small seeding-lmer, the search space for seeding will be increased fast. Take the consider of time consumption, we give a suggestion of the corresponding index-kmer length and seeding-lmer length by the following table. A smaller index-kmer can be faster and the accuracy remain similar.  \n**Additional, a smaller seed step(`-s`) and a smaller chain score(`-c`) will get a better result, but with the cost of more time.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9930896505343486,
      "result": {
        "original_header": "Simulation benchmarking",
        "type": "Text_excerpt",
        "value": "All the benchmarks were implemented on a server with Intel Xeon E4280 CPU at 2.0GHZ and 1 Terabytes RAM, running Linux Ubuntu 16.04. The simulated datasets were generated from the reference of three organisms: Homo sapiens GRCh38 (human), Mus musculus GRCm38 (mouse), and Drosophila melanogaster r6 (fruit fly), with corresponding Ensembl gene annotations. There are in total 60 datasets used for the benchmark, and each of them was generated by a specific combination of sequencing model, simulated transcriptome and coverage. \n6 sequencing models were built according to previous studies, to comprehensively benchmark the aligners on the datasets produced by various long read sequencing platforms. For PacBio platforms, there were two models built with fixed parameters: \u201cPacBio ROI reads\u201d (error rate = 2%, mean read length = 2000 bp) and \u201cPacBio subreads\u201d (error rate = 15%, mean read length = 8000 bp). For ONT platforms, four models were built by which two of them were also with fix parameters: \u201cONT 2D reads\u201d (error rate = 13%, mean read length = 7800 bp) and \u201cONT 1D reads\u201d (error rate = 25%, mean read length = 7800 bp). And the other two models, \u201cPS-ONT reads\u201d and \u201cNS-ONT reads\u201d were automatically built by PBSim and NanoSim based on a real ONT sequencing dataset (SRA Accession Number: SRR2848544), respectively. we used the two parameter-based models, \u201cONT 2D reads\u201d and \u201cONT 1D reads\u201d, as a complement, where the 25% and 12% error rates coincide with typical error rates of ONT 2D (1D2) and 1D reads. The parameters and command lines of PBSim and NanoSim are in Supplementary Notes. \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.947899776382386,
      "result": {
        "original_header": "Evaluation on simulated and real datasets",
        "type": "Text_excerpt",
        "value": "For synthetic dataset, deSALT compares the alignment files (SAM or BAM) to the simulation data generation by PBSIM or NanoSim which have ground truth. In order to reveal the performance of aligners, we take the potential structure of simulation data into consideration and evaluate the results from four aspects. Detailed description of synthetic dataset evaluation can be found at https://github.com/ydLiu-HIT/deSALT/blob/master/evaluation/data_evaluation.md \nAs for the evaluation of real datasets, we compare the alignment files to corresponding annotations. For each alignment, we find the most overlapped transcript in annotations as aligned transcript, then detect the overlapped exons and calculate the boundaries to make a decision whether the alignment is a good alignment. The details also refer to https://github.com/ydLiu-HIT/deSALT/blob/master/evaluation/data_evaluation.md.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ydLiu-HIT/deSALT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Align different kinds of reads with various sequencing error rates.",
        "parent_header": [
          "deSALT:",
          "Important options"
        ],
        "type": "Text_excerpt",
        "value": "`-x read-type:` deSALT can process reads from four main stream platforms,  i.e., ONT 1D reads (error rate: 25%), ONT 2D (1D2) reads (error rate: 12%), PacBio subreads (error rate: 15%) and PacBio ROI reads (error rate: 1%). The total sequencing error rates and the ratios of the sequencing errors (represented as mismatches: insertions: deletions) are configured by referring to previous studies[1-2].\n\n**For error-prone (ONT1D) reads, options `-l 14 -s 2 -x ont1d` are highly recommend to improve the accuracy of exons recovery and full length of transcripts generation.** Of course, it will cost more time than default parameters, but not too much.\n\n**For low error rate (CCS) reads, options `-x ccs -O6,24 -M4` are recommend to give alignments with fewer mismatches/gaps and to open introns more freely.**\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ydLiu-HIT/deSALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deSALT:"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_NS_ONT.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/pipeline_simulation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_ONT1D.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_CCS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_CLR.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_PS_ONT.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/simulation/Example/simulate_ONT2D.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/159485852"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/159485852"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "Current version of deSALT has been tested on 64-bit Linux. The source code is written in C, and can be directly download from: https://github.com/ydLiu-HIT/deSALT. The makefile is attached. Use the make command for generating the executable file.\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9715511836347406,
      "result": {
        "original_header": "deSALT:",
        "type": "Text_excerpt",
        "value": "**The latest version deSALT-v1.5.3 have been published. New version adress bugs pushed by users(e.g. [#19](https://github.com/ydLiu-HIT/deSALT/issues/19), [#17](https://github.com/ydLiu-HIT/deSALT/issues/17), [#16](https://github.com/ydLiu-HIT/deSALT/issues/16), [#20](https://github.com/ydLiu-HIT/deSALT/issues/20), [#25](https://github.com/ydLiu-HIT/deSALT/issues/25)), and improve the speed of deSALT by 15-20%** \n**The version deSALT-v1.5.2 some bugs in Annotation_Load.py, and make deSALT usage more readability.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8944597763753439,
      "result": {
        "original_header": "5. Alignment with annotations",
        "type": "Text_excerpt",
        "value": "```\npython Annotation_Load.py genome.gtf genome.info   #the annotation file should be in GTF format\ndeSALT aln -G genome.info index_route read.fa\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.948617259840306,
      "result": {
        "original_header": "Simulation benchmarking",
        "type": "Text_excerpt",
        "value": "Detailed description of synthetic dataset preparation can be found at https://github.com/ydLiu-HIT/deSALT/blob/master/simulation/Sim_data_generation.md. \nThe simulated datasets and description used for benchmarking are available at https://drive.google.com/drive/folders/1jk1ddv_QGozumnO_S_f-1lJlOehL3SyW?usp=sharing\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9714872760518909,
      "result": {
        "original_header": "Thanks",
        "type": "Text_excerpt",
        "value": "deSALT relies on the hard work of other projects:\n - The reference de bruijn graph index(RdBG-index):https://github.com/HongzheGuo/deBGA\n -  Dynamic programming in the second phase:https://github.com/lh3/ksw2\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9239573590145048,
      "result": {
        "original_header": "5. Alignment with annotations",
        "type": "Text_excerpt",
        "value": "```\npython Annotation_Load.py genome.gtf genome.info   #the annotation file should be in GTF format\ndeSALT aln -G genome.info index_route read.fa\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 ydLiu-HIT\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/img/deSALT_fig.png"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deSALT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ydLiu-HIT"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1529700,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 246634,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8940,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3885,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2020-08-20T05:43:24Z",
        "date_published": "2020-08-20T05:47:52Z",
        "description": "Fix some bugs in Annotation_Load.py and aln_2pass.c for the use of annotation by deSALT.\r\n\r\n",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.6",
        "name": "deSALT-v1.5.6",
        "release_id": 29900137,
        "tag": "v1.5.6",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/29900137",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/29900137",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2020-06-19T05:42:57Z",
        "date_published": "2020-06-19T05:44:05Z",
        "description": "1. Fix the bug of \"uint32_t\" out of bound.\r\n2. The problem of the reference genome and annotation not matched.",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.5",
        "name": "deSALT-v1.5.5",
        "release_id": 27712519,
        "tag": "v1.5.5",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/27712519",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/27712519",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2020-05-17T12:49:45Z",
        "date_published": "2020-05-17T13:07:53Z",
        "description": "Add XS:A: tag for issue #29",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.4",
        "name": "deSALT-v1.5.4",
        "release_id": 26600751,
        "tag": "v1.5.4",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/26600751",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/26600751",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2020-04-21T05:14:40Z",
        "date_published": "2020-04-21T05:19:28Z",
        "description": "New release:\r\n\r\n1. improve the speed of deSALT by 15-20%\r\n2. fix bugs pushed by users recently (#25 #19 #27 #17 #16 #20  etc.)",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.3",
        "name": "deSALT-v1.5.3",
        "release_id": 25708860,
        "tag": "v1.5.3",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/25708860",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/25708860",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2020-01-05T12:41:37Z",
        "date_published": "2020-01-05T12:42:55Z",
        "description": "Bugfix: zero-length operation #16 ",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.2",
        "name": "deSALT-v1.5.2",
        "release_id": 22601232,
        "tag": "v1.5.2",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/22601232",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/22601232",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-11-29T10:20:58Z",
        "date_published": "2019-11-29T10:27:38Z",
        "description": "1. Address bugs in Annotation_Load.py(#9, #10 )\r\n\r\n2. Make deSALT's usage more readability (refer to 'Command and options' in README)",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5.1",
        "name": "deSALT-v1.5.1",
        "release_id": 21852212,
        "tag": "v1.5.1",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/21852212",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/21852212",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-09-25T04:28:59Z",
        "date_published": "2019-10-10T14:30:23Z",
        "description": "!!! Important for users.\r\n\r\nI have changed some parameters according to the revised manuscript, changes as following:\r\n 1. --index-kmer:  from -K to -k\r\n 2. --seeding-kmer:  from -k to -l\r\n 3. --max-readlen: from -l to -L\r\n\r\nUsers should pay attention to the use of new parameters!!!",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.5",
        "name": "deSALT-v1.5",
        "release_id": 20613107,
        "tag": "v1.5",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20613107",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20613107",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-09-21T11:24:40Z",
        "date_published": "2019-09-21T11:25:42Z",
        "description": "Change the method for annotation module.",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.4",
        "name": "deSALT-v1.4",
        "release_id": 20156005,
        "tag": "v1.4",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20156005",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20156005",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-09-21T11:22:29Z",
        "date_published": "2019-09-21T11:23:32Z",
        "description": "Make some changes for high-quality reads (e.g. Iso-seq) to improve the accuracy.",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.3",
        "name": "deSALT-v1.3",
        "release_id": 20155992,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155992",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155992",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-09-21T11:20:05Z",
        "date_published": "2019-09-21T11:20:56Z",
        "description": "Changes to deSALT:\r\n\r\nAdd an option '-T' to force deSALT to detect splicing junction sites in forward transcript strand only for Iso-seq, direct RNA-seq.",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.2",
        "name": "deSALT-v1.2",
        "release_id": 20155984,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155984",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155984",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ydLiu-HIT",
          "type": "User"
        },
        "date_created": "2019-09-21T11:15:19Z",
        "date_published": "2019-09-21T11:18:16Z",
        "description": "Fixed wrong CIGARs when there are large deletions('D', >50 bp). In fact, it should be introns, but be regarded as deletions.",
        "html_url": "https://github.com/ydLiu-HIT/deSALT/releases/tag/v1.1",
        "name": "deSALT-v1.1",
        "release_id": 20155970,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155970",
        "value": "https://api.github.com/repos/ydLiu-HIT/deSALT/releases/20155970",
        "zipball_url": "https://api.github.com/repos/ydLiu-HIT/deSALT/zipball/v1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:18:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 44
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "    git clone --recursive https://github.com/ydLiu-HIT/deSALT.git\n    cd deSALT/src/deBGA-master/\n    make   ## built deBGA for RdBG-index\n    cd ..\n    make   ## built deSALT for alignment\n    \n    ./deSALT index ref.fa index_route\n    ./deSALT aln index_route read.fq\n    \n    or \n    run deSALT directly in the same folder (Executable programs have been built in advance.)\n    \n    ## install by conda\n    conda install -c bioconda desalt\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**[Special emphasis]**",
        "parent_header": [
          "deSALT:",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "1. In current version of deSALT, [deBGA](https://github.com/HongzheGuo/deBGA) is employed for generation of RdBG-index. Some bugs have been corrected and some parameters have been reset (i.e. `START_POS_REF = 0` replaced `START_POS_REF = 2048` in `load_input.h`). \n**Strongly recommend using the executable program in deSALT.**\n2. The input reference genome for indexing required the sequence **cutted with a fixed length each line, the length should be no longer than 500bp**. So before indexing, user should check the linewidth of your genome, if large than 500bp, you can change the linewidth with the script I support in the folder (changelinewidth.py), e.g.\n\n\t`python changelinewidth.py your_genome.fa changed.fa linewidth(e.g. 80)`\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Memory usage",
        "parent_header": [
          "deSALT:"
        ],
        "type": "Text_excerpt",
        "value": "deSALT fits most modern servers and workstations and the peak memory footprint depends on the size of reference genome assembly. In practice, 35 Gigabytes, 31 Gigabytes and 3.5 Gigabytes are required for Homo Sapiens(GRCh38), Mus Musculus(GRCm38) and Drosophila melanogaster(DM6) geomes, on a server with Intel Xeon CPU at 2.00 GHz, 1 Terabytes RAM running Linux Ubuntu 14.04.\n\nIt is worthnoting that, the construction of RdBG-index for large genomes could cost a couple of hours (129, 112 and 4 minutes for human, mouse and fruit fly, respectively) and several tens of GB RAM space (73GB, 63GB and 5.5GB for human, mouse and fruit fly, respectively), depending on the number of distinct k-mers in the genome. This is mainly due to that it needs to extract and sort all the k-mers to construct RdBG at first. However, the index needs only to be built once before use, and we also provide pre-built RdBG-indexes of human, mouse and fruit fly in google drive, users can download the RdBG-index directly.\n\n - https://drive.google.com/file/d/11E2j1X5jGqKNVtyNHsfPjqnu-fVBgyoi/view?usp=sharing, human GRCh38\n - https://drive.google.com/file/d/1tipOySE-_tmLI4jiy3GZdTj08RhJMXcl/view?usp=sharing, mouse, GRCm38\n - https://drive.google.com/file/d/1ZUg-Yc7oRQQjjJdh4_IJcDGomIVNfJBs/view?usp=sharing, fruit fly, DM6\n\n"
      },
      "source": "https://raw.githubusercontent.com/ydLiu-HIT/deSALT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}