{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/srbehera11/stag-cns"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-13T18:48:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-11-27T05:09:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.8233784799970535,
      "result": {
        "original_header": "STAG-CNS",
        "type": "Text_excerpt",
        "value": "An Order-Aware Conserved Non-coding Sequences (CNS) Discovery Tool For Arbitrary Numbers of Species\n \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8420039747929848,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "The first n ( n = number of sequences) lines contain some additional information about the genes. It contains seven fields separated by space. The fields are gene name, chromosome ID, forward(+)/reverse(-) strand, range of 10kbp upstream, rage of 10kbp downstream respectively. Please check the sample test file (input.fasta).\n \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.879523253857978,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "1. TEST_CNS_8.csv (contains CNS information)\n2. TEST_MEM_1_8.csv (contains all MEMs)\n3. TEST_MEM_2_8.csv (contains all MEMs without serial number)\n4. TEST_LPMEM_8_csv (contains all CNSs without actual chromosome location ) \n5. TEST_MEM_8.html  (used for browser visualization )\n6. TEST_LPMEM_8.html (used for browser visualization)\n7. out.txt (contains all console outputs and error logs) \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.853658199825141,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "   java -jar xdat.jar\n   \n   It will open an window where the TEST_MEM_2_8.csv and TEST_LPMEM_8_csv  files can be uploaded (data) to see the visualizations\n   (chart->parallel coordinate set). \n   Don't forget to change the settings (import settings) to accept comma separated files. \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/srbehera11/stag-cns/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/srbehera11/stag-cns/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "srbehera11/stag-cns"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "STAG-CNS"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9905100131642031,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "1. Using XDAT: \n   Run the collowing command on command line \n2. Using browser (firefox)\n Run the following commands: \n     firefox TEST_MEM_8.html\n \n     firefox TEST_LPMEM_8.html \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8147076960556312,
      "result": {
        "original_header": "Visualization",
        "type": "Text_excerpt",
        "value": "1. Using XDAT: \n   Run the collowing command on command line \n   java -jar xdat.jar\n   \n   It will open an window where the TEST_MEM_2_8.csv and TEST_LPMEM_8_csv  files can be uploaded (data) to see the visualizations\n   (chart->parallel coordinate set). \n   Don't forget to change the settings (import settings) to accept comma separated files. \n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/srbehera11/stag-cns/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2016 Sairam Behera\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "stag-cns"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "srbehera11"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 110224,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 4806,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the program",
        "type": "Text_excerpt",
        "value": "./stagCNS -file fasta_file -mem minimum_CNS_length  -out prefix_output_file   >  out.txt\n\nExample: ./stagCNS -file  input.fasta  -mem 8   -out TEST  > out.txt\n"
      },
      "source": "https://raw.githubusercontent.com/srbehera11/stag-cns/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:16:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}