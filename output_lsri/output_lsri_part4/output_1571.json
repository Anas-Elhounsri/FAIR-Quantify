{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CMDM-Lab/GAME"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-02-26T06:47:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-06T06:31:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Source code and datasets of G.A.M.E. - GPU-Accelerated Mixture Elucidator "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9930620409151877,
      "result": {
        "original_header": "Author: Alioune Schurz",
        "type": "Text_excerpt",
        "value": "This program enables to identify the main structures with the given targeted molecular weight and seed scaffolds.\nThe core optimization problem solved within this procedure (referred as CSCCP) is solved in this distribution by implementing a Dynamic programming algorithm (DP): \nA GPU accelerated version of the DP, named GAME, developed by Alioune Schurz is implemented in this library.  \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9315358785451445,
      "result": {
        "original_header": "A. Solving CSCCPs",
        "type": "Text_excerpt",
        "value": "Thanks to it you can solve CSCCP using different methods. Go at GAME/bin and type:\n```\n$> csccp-solver-cli -s GAME/examples/normal/example-data -m 168.195105 -v idp -l cc -r 3 -c 0 --dec 5\n```\nThe program of csccp-solver-cli (GAME) will use the seed scaffolds included in the sepcified foldder after \"-s\" (the file in this case is s0000000001) \nto identified the structures having a targeted weight 168.195105 (-m 168.195105) in configuration 0 (-c 0) and ourput the top 3 (-r 3)  most probable\nmolecules.  The csccp-solver-cli used the DP algorithm (-v idp), implemented in C++ (-v cc). \nPS. In general, r is set to 3~10, dec is set to 1~5\n    In the file of *.cIdx, assume that the number in line 3 is x, we can set the index of configuration (-c) from 0 to x-1. \nYou should get this output in this case:\n```\n------------------csccp info----------------\nscaffold: s0000000001\nn: 2\nR: 3\nmass_peak (w0): 168.195105\nmass_peak_min:168.111007448\nmass_peak_max: 168.279202553\nscaffold_weight_rel2config:106.12194\nscaffold_probability_rel2config: 0.026296875\nmin_possible_weight: 152.120115\nmax_possible_weight: 498.210115\nwmin: 61.9890674475\nwmax: 62.1572625525\nconfiguration: [7, 3]\nnumber of sidechains (K): [5, 6]\nnumber of compounds: 30\nW,P,sidechain_smiles won't be displayed...\n------------------end------------------------\nStarting Iterative Dynamic Programming\nFinished with 1 iterations: RR=30<=30. Reason: len(filtered_results)=4 < RR\n\tProbability\tWeight\t\tSmile\n____________________________________________________________________________________\n1.\t1.972266e-04\t1.681951e+02\tC1C/C(=C\\CC)C(=O)CC1CO\n2.\t1.150488e-04\t1.681951e+02\tC1C/C(=C\\CCO)C(=O)CC1C\n3.\t6.574219e-05\t1.681951e+02\tC1C/C(=C\\O)C(=O)CC1C(C)C\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8412299940973677,
      "result": {
        "original_header": "B. Query information on scaffolds",
        "type": "Text_excerpt",
        "value": "To query information on a scaffold file you can type:\n```\n$> csccp-solver-cli -s data/full_set/normal/s0000000001 -i\n```\nYou should get this output:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.941298629560877,
      "result": {
        "original_header": "Other informations",
        "type": "Text_excerpt",
        "value": "All seed scaffolds (*.cIdx files) in our collected database that can be used as input of the \"csccp-solver-cli\" program were provided in the `GAME/examples/core_index`\nThe index(filename) of seed scaffolds of the four datasets were listed in the `GAME/examples/Datasets/scaffolds`. (the parameter of -c in csccp-solver-cli)\nThe targeted molecular weights of the four datasets were also provided in `GAME/examples/MW/`. (the parameter of -m in csccp-solver-cli) \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/CMDM-Lab/GAME/wiki"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading",
        "parent_header": [
          "Lib Gamefft"
        ],
        "type": "Text_excerpt",
        "value": "You may use `git clone` for downloading the source code:\n\n```\ngit clone https://github.com/CMDM-Lab/GAME.git\n```\n\nOr download the zip file directly:\n\nhttps://github.com/CMDM-Lab/GAME/zipball/master\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CMDM-Lab/GAME/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CMDM-Lab/GAME/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CMDM-Lab/GAME"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Lib Gamefft"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Lib Gamefft"
        ],
        "type": "Text_excerpt",
        "value": "Please make sure that the libgamefft library is installed on your system. (Refer to the section A)\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A. installing the libgamefft",
        "parent_header": [
          "Lib Gamefft",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This will compile and install the library in `/usr/lib/`\nFrom the distribution's root run:\n\n```\ncd lib/libgamefft\nmake\nsudo make install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "B. installing the Python distribution",
        "parent_header": [
          "Lib Gamefft",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "It is very simple, just do:\n\n1. Install libgamefft (cf. section A)\n2. From the distribution's root run:  python setup.py install \n3. Test the distribution by running test.py \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9984709580509598,
      "result": {
        "original_header": "Command line interface",
        "type": "Text_excerpt",
        "value": "When installing the distribution, a script called csccp-solver-cli is installed. \n \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8473096291329691,
      "result": {
        "original_header": "Other informations",
        "type": "Text_excerpt",
        "value": "Test cases were provided in the `GAME/examples/test_case`. See `GAME/examples/test_case/test_example.txt` for their targeted molecular weights.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CMDM-Lab/GAME/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gpu"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GAME"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CMDM-Lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 101126,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 7531,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 315,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A. for basic Functionalities:",
        "parent_header": [
          "Lib Gamefft",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- numpy >= 1.7.1\n- openbabel-python >= 1.3\n- [Jinja2](http://jinja.pocoo.org/)\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:34:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "B. for GPU support:",
        "parent_header": [
          "Lib Gamefft",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "- cuda 5\n- pycuda\ndon't forget to configure the path and to mount the device in /dev (c.f. CUDA installation guide)\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "C. for cluster support:",
        "parent_header": [
          "Lib Gamefft",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "make sure you install hadoop-1.0.3\n"
      },
      "source": "https://raw.githubusercontent.com/CMDM-Lab/GAME/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}