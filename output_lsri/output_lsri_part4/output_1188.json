{
  "application_domain": [
    {
      "confidence": 0.804621349313462,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to cite Gpufit",
        "parent_header": [
          "Gpufit"
        ],
        "type": "Text_excerpt",
        "value": "If you use Gpufit in your research, please cite our publication describing the software.  A paper describing the software was published in Scientific Reports.  The open-access manuscript is available from the Scientific Reports website, [here](https://www.nature.com/articles/s41598-017-15313-9).\n\n  *  Gpufit: An open-source toolkit for GPU-accelerated curve fitting  \n     Adrian Przybylski, Bj\u00f6rn Thiel, Jan Keller-Findeisen, Bernd Stock, and Mark Bates  \n     Scientific Reports, vol. 7, 15722 (2017); doi: https://doi.org/10.1038/s41598-017-15313-9 \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gpufit/Gpufit"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-08-09T13:23:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-20T16:35:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GPU-accelerated Levenberg-Marquardt curve fitting in CUDA"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9663605999560604,
      "result": {
        "original_header": "Gpufit",
        "type": "Text_excerpt",
        "value": "The manuscript describing Gpufit is now published in [Scientific Reports](https://www.nature.com/articles/s41598-017-15313-9).\n \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9827266200473765,
      "result": {
        "original_header": "Using the Gpufit binary distribution",
        "type": "Text_excerpt",
        "value": "- The Gpufit SDK, which consists of the 32-bit and 64-bit DLL files, and \n  the Gpufit header file which contains the function definitions.  The Gpufit\n  SDK is intended to be used when calling Gpufit from an external application\n  written in e.g. C code.\n- Gpufit Performance test: A simple console application comparing the execution speed of curve fitting on the GPU and CPU.  This program also serves as a test to ensure the correct functioning of Gpufit.\n- Matlab 32 bit and 64 bit bindings, with Matlab examples.\n- Python version 2.x and version 3.x bindings (compiled as wheel files) and\n  Python examples.\n- Java binding, with Java examples.\n- The Gpufit manual in PDF format\n \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8991089745232944,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Gpufit was created by Mark Bates, Adrian Przybylski, Bj\u00f6rn Thiel, and Jan Keller-Findeisen at the Max Planck Institute for Biophysical Chemistry, in G\u00f6ttingen, Germany.\n \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Gpufit"
        ],
        "type": "Text_excerpt",
        "value": "[![Documentation Status](https://readthedocs.org/projects/gpufit/badge/?version=latest)](http://gpufit.readthedocs.io/en/latest/?badge=latest)\n\nDocumentation for the Gpufit library may be found online ([latest documentation](http://gpufit.readthedocs.io/en/latest/?badge=latest)), and also\nas a PDF file in the binary distribution of Gpufit.\n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://gpufit.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/gpufit/Gpufit/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 92
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gpufit/Gpufit/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gpufit/Gpufit"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gpufit"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8037987333549855,
      "result": {
        "original_header": "Gpufit",
        "type": "Text_excerpt",
        "value": "Levenberg Marquardt curve fitting in CUDA. \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.976590736021733,
      "result": {
        "original_header": "Binary distribution",
        "type": "Text_excerpt",
        "value": "The latest Gpufit binary release, supporting Windows 32-bit and 64-bit machines, can be found on the [release page](https://github.com/gpufit/Gpufit/releases).\n \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9795771655852115,
      "result": {
        "original_header": "Building Gpufit from source code",
        "type": "Text_excerpt",
        "value": "Instructions for building Gpufit are found in the documentation: [Building from source code](https://github.com/gpufit/Gpufit/blob/master/docs/installation.rst).\n \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995471216046412,
      "result": {
        "original_header": "Using the Gpufit binary distribution",
        "type": "Text_excerpt",
        "value": "Instructions for using the binary distribution may be found in the documentation.  The binary package contains: \n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/gpufit/Gpufit/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "curve-fitting, gpu-acceleration, gpu-computing, gpu-programming, levenberg-marquardt, non-linear-regression, super-resolution"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Gpufit"
        ],
        "type": "Text_excerpt",
        "value": "MIT License\n\nCopyright (c) 2017 Mark Bates, Adrian Przybylski, Bj\u00f6rn Thiel, and Jan Keller-Findeisen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gpufit"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "gpufit"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 167450,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cuda",
        "size": 164374,
        "type": "Programming_language",
        "value": "Cuda"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 77445,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 40876,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 31651,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 27238,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 9475,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 910,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jkfindeisen",
          "type": "User"
        },
        "date_created": "2021-10-13T12:52:01Z",
        "date_published": "2021-10-14T13:17:57Z",
        "description": "Version 1.2.0 for the Gpufit library (https://github.com/gpufit/Gpufit).\r\n\r\nBinary files compiled with Microsoft Visual Studio 2019 and CUDA toolkit 11.4.\r\n\r\n**Release notes:**\r\n\r\nIn this version:\r\n\r\n- New fit model functions: Cubic spline representations of 1, 2, and 3 dimensional, multichannel data sets can be used as fit model functions (see the spline fit examples, documentation and https://github.com/gpufit/Gpuspline for creating sets of spline coefficients from data sets)\r\n- Optional box constraints can be set on parameters (see the examples and documentation)\r\n\r\nThe binary package contains:\r\n\r\nThe Gpufit manual (PDF format)\r\n- Gpufit SDK\r\n- Matlab binding\r\n- Python binding (the pyGpufit module)\r\n- Java binding\r\n- Usage examples written in C, Matlab, Python, and Java\r\n- Executable application which tests Gpufit function and GPU performance\r\n- License information\r\n\r\nNote that two different versions of the Gpufit build are included with this release.  One which makes use of cuBLAS (larger binary file size), and one which does not use cuBLAS.  Use of cuBLAS increased fit speed in some use cases.\r\n\r\nThis package was compiled on October 13, 2021.\r\nSee license statement contained in the LICENSE.txt file.",
        "html_url": "https://github.com/gpufit/Gpufit/releases/tag/v1.2.0",
        "name": "Gpufit source code and binary package v1.2.0 (Windows)",
        "release_id": 48753102,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/gpufit/Gpufit/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gpufit/Gpufit/releases/48753102",
        "value": "https://api.github.com/repos/gpufit/Gpufit/releases/48753102",
        "zipball_url": "https://api.github.com/repos/gpufit/Gpufit/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "superchromix",
          "type": "User"
        },
        "date_created": "2018-04-04T13:12:03Z",
        "date_published": "2018-04-13T09:06:48Z",
        "description": "Version 1.1.0 for the Gpufit library (https://github.com/gpufit/Gpufit).\r\n\r\nBinary files compiled with Microsoft Visual Studio 2015 and CUDA toolkit 8.0.\r\n\r\nRelease notes:\r\n\r\nIn this version:\r\n- A new interface has been added to Gpufit (the CUDA interface), allowing better integration with other CUDA pre- and post-processing steps.\r\n- Adaptive scaling of the Hessian intermediate matrix is included to improve convergence speed.\r\n- A binding to the Java programming language has been added.\r\n- Improved GPU memory allocation for the user_info parameter.\r\n- For 64 bit architectures, the linear equation system in the Levenberg Marquardt algorithm may optionally be solved by LUP decomposition using the Nvidia cuBLAS library.  The use of cuBLAS is specified at compilation, and therefore two different builds of Gpufit (with or without cuBLAS) are included in this release. \r\n- The maximum number of model parameters was limited to 32 in previous releases.  The current release includes an option to use cuBLAS (see above), and for cuBLAS Gpufit the maximum number of model parameters is increased to 1024.\r\n\r\nThe binary package contains:\r\n- The Gpufit manual (PDF format)\r\n- Gpufit SDK (compiled for 32-bit and 64-bit Windows OS)\r\n- Matlab binding\r\n- Python binding (the pyGpufit module)\r\n- Java binding\r\n- Usage examples written in C, Matlab, Python, and Java\r\n- Executable application which tests Gpufit function and GPU performance\r\n- License information\r\n\r\nNote that two different versions of the Gpufit build are included with this release.  One which makes use of cuBLAS and runs only on 64-bit architectures, and one which does not use cuBLAS and runs on 32 or 64-bit machines.\r\n\r\nThis package was compiled on April 13, 2018.\r\nSee license statement contained in the LICENSE.txt file.",
        "html_url": "https://github.com/gpufit/Gpufit/releases/tag/v1.1.0",
        "name": "Gpufit source code and binary package v1.1.0 (Windows)",
        "release_id": 10530929,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/gpufit/Gpufit/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gpufit/Gpufit/releases/10530929",
        "value": "https://api.github.com/repos/gpufit/Gpufit/releases/10530929",
        "zipball_url": "https://api.github.com/repos/gpufit/Gpufit/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jkfindeisen",
          "type": "User"
        },
        "date_created": "2017-10-27T11:46:54Z",
        "date_published": "2017-10-30T13:32:47Z",
        "description": "Version 1.0.2 for the Gpufit library (https://github.com/gpufit/Gpufit).\r\n\r\nBinary files compiled with Microsoft Visual Studio 2015 and CUDA toolkit 8.0.\r\n\r\nRelease notes: \r\n* In this version, adding new fit model functions or fit estimators is made simpler.  Model function files and fit estimator files are now stored in their own directories.  Furthermore, the sections of the Gpufit source code which require editing upon customization are concentrated into fewer files.  See the \"Customization\" section of the Gpufit documentation for details.\r\n\r\nThis package contains:\r\n* the Gpufit manual (PDF format)\r\n* Gpufit SDK (compiled for 32-bit and 64-bit Windows OS)\r\n* Matlab binding\r\n* Python binding (the pyGpufit module)\r\n* usage examples written in C, Matlab, and Python\r\n* executable application which tests Gpufit function and GPU performance\r\n* license information\r\n\r\nThis package was compiled on October 30, 2017.\r\n\r\nSee license statement contained in the LICENSE.txt file.",
        "html_url": "https://github.com/gpufit/Gpufit/releases/tag/v1.0.2",
        "name": "Gpufit source code and binary package v1.0.2 (Windows)",
        "release_id": 8286386,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/gpufit/Gpufit/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/gpufit/Gpufit/releases/8286386",
        "value": "https://api.github.com/repos/gpufit/Gpufit/releases/8286386",
        "zipball_url": "https://api.github.com/repos/gpufit/Gpufit/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gpufit",
          "type": "User"
        },
        "date_created": "2017-10-18T14:58:29Z",
        "date_published": "2017-10-18T15:57:45Z",
        "description": "Version 1.0.1 for the Gpufit library (https://github.com/gpufit/Gpufit).\r\n\r\nBinary files compiled with Microsoft Visual Studio 2015 and CUDA toolkit 8.0.\r\n\r\nRelease notes: \r\n* This version removes a restriction on the maximum number of data points per fit.\r\n\r\nThis package contains:\r\n* the Gpufit manual (PDF format)\r\n* Gpufit SDK (compiled for 32-bit and 64-bit Windows OS)\r\n* Matlab binding\r\n* Python binding (the pyGpufit module)\r\n* usage examples written in C, Matlab, and Python\r\n* executable application which tests Gpufit function and GPU performance\r\n* license information\r\n\r\nThis package was compiled on October 18, 2017.\r\n\r\nSee license statement contained in the LICENSE.txt file.",
        "html_url": "https://github.com/gpufit/Gpufit/releases/tag/v1.0.1",
        "name": "Gpufit source code and binary package v1.0.1 (Windows)",
        "release_id": 8168408,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/gpufit/Gpufit/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/gpufit/Gpufit/releases/8168408",
        "value": "https://api.github.com/repos/gpufit/Gpufit/releases/8168408",
        "zipball_url": "https://api.github.com/repos/gpufit/Gpufit/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jkfindeisen",
          "type": "User"
        },
        "date_created": "2017-08-10T12:21:52Z",
        "date_published": "2017-08-10T12:26:36Z",
        "description": "Version 1.0.0 for the Gpufit library (https://github.com/gpufit/Gpufit).\r\n\r\nCompiled with Microsoft Visual Studio 2015 and CUDA toolkit 8.0.\r\n\r\nThis package contains:\r\n* the Gpufit manual (PDF format)\r\n* Gpufit SDK (compiled for 32-bit and 64-bit Windows OS)\r\n* Matlab binding\r\n* Python binding (the pyGpufit module)\r\n* usage examples written in C, Matlab, and Python\r\n* executable application which tests Gpufit function and GPU performance\r\n* license information\r\n\r\nThis package was compiled on August 8, 2017.\r\n\r\nSee license statement contained in the LICENSE.txt file.",
        "html_url": "https://github.com/gpufit/Gpufit/releases/tag/v1.0.0",
        "name": "Initial release of Gpufit binary package (Windows)",
        "release_id": 7334675,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/gpufit/Gpufit/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/gpufit/Gpufit/releases/7334675",
        "value": "https://api.github.com/repos/gpufit/Gpufit/releases/7334675",
        "zipball_url": "https://api.github.com/repos/gpufit/Gpufit/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:18:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 312
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start instructions",
        "parent_header": [
          "Gpufit"
        ],
        "type": "Text_excerpt",
        "value": "To verify that Gpufit is working correctly on the host computer, go to the folder gpufit_performance_test of the binary package and run Gpufit_Cpufit_Performance_Comparison.exe.  Further details of the test executable can be found in the documentation package.\n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "Gpufit"
        ],
        "type": "Text_excerpt",
        "value": "There are various examples that demonstrate the capabilities and usage of Gpufit. They can be found at the following locations:\n\n- /examples/c++ - C++ examples for Gpufit\n- /examples/c++/gpufit_cpufit - C++ examples that use Gpufit and Cpufit\n- /examples/matlab - Matlab examples for Gpufit including spline fit examples (also requires [Gpuspline](https://github.com/gpufit/Gpuspline))\n- /examples/python - Python examples for Gpufit including spline fit examples (also requires [Gpuspline](https://github.com/gpufit/Gpuspline))\n- /Cpufit/matlab/examples - Matlab examples that only uses Cpufit\n- /Gpufit/java/gpufit/src/test/java/com/github/gpufit/examples - Java examples for Gpufit\n"
      },
      "source": "https://raw.githubusercontent.com/gpufit/Gpufit/master/README.md",
      "technique": "header_analysis"
    }
  ]
}