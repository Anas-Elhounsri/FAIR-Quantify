{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgement",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "Thank Dr. Hequan Sun from MPIPZ for discussions\\\nThank Lukas Baumgarten from MPIPZ and Qiushi Li from University of UCalgary for bug reporting\\\nThank Elad Oren from Hebrew University of Jerusalem for the extending usage of GEAN\n"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 25.96,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing GEAN",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "`\nSong B, Sang Q, Wang H, Pei H, Gan X and Wang F. Complement Genome Annotation Lift Over Using a Weighted Sequence Alignment Strategy. Front. Genet. 10:1046. doi: 10.3389/fgene.2019.01046\n`"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/baoxingsong/GEAN"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "Please feel free to send E-mail to songbaoxing168@163.com\n"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-08-22T15:15:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-23T07:06:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This toolkit deals with GEnomic sequence and genome structure ANnotation files between inbreeding lines and species."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Founding",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "[license]: ./LICENSE\n[license-badge]: https://img.shields.io/badge/license-MIT-blue.svg\n"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9299502314848355,
      "result": {
        "original_header": "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
        "type": "Text_excerpt",
        "value": "The gene sequence and genetic feature variation between different individuals are very important for natural variation research. And the genome sequence and genetic features (always in GFF/GTF format) of reference is well established. In general the genomic sequence of different lines/accession are sequenced.\nThe genetic features of variant individuals are also very interesting, while there no well established solution to transform the genetic features annotation of reference accession/line to other individuls. This pipeline tries transform the reference genetic fearures to variant individuls with genome sequence avaliable by whole-genome resequencing or *de novo* assembly . Here we provide a solution for [inconsistent alignment problem](https://journals.plos.org/plosgenetics/article?id=10.1371/journal.pgen.1007699) which could lead to false positive splice sites disturb or ORF-shift predication. And whole genome MSA is all developped basing on the genetic features.\nGEAN could also use to transform the well annotated genetics feature of model species to phylogenetically nearby species with whole genome newly sequenced . \n<p align=\"center\">\n<img src=\"./doc/alternativeAlignment.gif\" width=\"450px\" background-color=\"#ffffff\" />\n</p>\nHere GEAN solved this problem by a dynamic programming algorithm (Zebric stripped dynamic programming).\nThis pipeline could help to peform analysis where the gene structure annotaion of different accessions might important such the natural variation of certain single interesting gene, quantify the gene expression for non-reference accession/line and detect the difference expression level across different accession/line.  \nUsing the gene annotation as anchors, GEAN could perform base-pair resolution whole-genome-wide sequence alignment and perform variant calling.\n \n"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/baoxingsong/GEAN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/baoxingsong/GEAN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "baoxingsong/GEAN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GEAN &middot; "
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/./doc/alternativeAlignment.gif"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Manual",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "### examples"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/baoxingsong/GEAN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "annotations, gene-structure, gff, liftover, pseudo-genome-sequence, transformation, variant-records"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 baoxingsong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GEAN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "baoxingsong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 5203700,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 459941,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 78392,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 55822,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 45817,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 42664,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 25814,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Starlark",
        "size": 17706,
        "type": "Programming_language",
        "value": "Starlark"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 17601,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2619,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "baoxingsong",
          "type": "User"
        },
        "date_created": "2019-02-24T02:43:20Z",
        "date_published": "2019-02-24T03:00:15Z",
        "html_url": "https://github.com/baoxingsong/GEAN/releases/tag/0.1",
        "name": "linux",
        "release_id": 15738194,
        "tag": "0.1",
        "tarball_url": "https://api.github.com/repos/baoxingsong/GEAN/tarball/0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/baoxingsong/GEAN/releases/15738194",
        "value": "https://api.github.com/repos/baoxingsong/GEAN/releases/15738194",
        "zipball_url": "https://api.github.com/repos/baoxingsong/GEAN/zipball/0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "GNU GCC >=6.0 \\\nCmake >= 3.0\n```\ngit clone https://github.com/baoxingsong/GEAN.git\ncd GEAN\ncmake CMakeLists.txt\nmake\n```\n\nthis command will generate an executable file named gean\n\nThere are several functions are under testing and are included in the source code. The document for those functions will be released after testing.\nBest Practices for different aims could be found under example."
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:07:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 45
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support us",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "### Contact"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "examples",
        "parent_header": [
          "GEAN &middot; <a href=\"./LICENSE\"><img alt=\"license\" src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "* [genome wide multiple sequence alignment using variant calling result](example/variantsSynchronization/README.md)\n* [transform maize reference genome annotation to de novo assembly](example/transformMaizeGFFannotation.md)"
      },
      "source": "https://raw.githubusercontent.com/baoxingsong/GEAN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}