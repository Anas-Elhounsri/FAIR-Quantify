{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KlugerLab/ALRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-22T01:40:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-23T14:30:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Imputation method for scRNA-seq based on low-rank approximation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Adaptively-thresholded Low Rank Approximation (ALRA)"
        ],
        "type": "Text_excerpt",
        "value": "ALRA is a method for imputation of missing values in single cell RNA-sequencing data, described in the preprint, \"Zero-preserving imputation of scRNA-seq data using low-rank approximation\" available [here](https://www.biorxiv.org/content/early/2018/08/22/397588).  Given a scRNA-seq expression matrix, ALRA first computes its rank-k approximation using randomized SVD. Next, each row (gene) is thresholded by the magnitude of the most negative value of that gene. Finally, the matrix is rescaled. \n\n![ALRA schematic](https://gauss.math.yale.edu/~gcl22/alra_schematic2.png)\n\nThis repository contains codes for running ALRA in R. The only prerequisite for ALRA is installation of the randomized SVD package RSVD which can be installed as `install.packages('rsvd')`. \n\nThe functions now have a flag `use.mkl` for users who have installed [rpca-mkl](https://github.com/KlugerLab/rpca-mkl), which allows for dramatic speedups over the default rpca-based version. Note that rpca-mkl is still under development and is not on CRAN, so it is not a required package, but if users have already installed it then they can use it by setting this flag to True.\n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9146398103590021,
      "result": {
        "original_header": "More info",
        "type": "Text_excerpt",
        "value": "ALRA is integrated into [Seurat v3.0](https://github.com/satijalab/seurat/tree/release/3.0) (currently at pre-release stage) as function `RunALRA()`. But if you use Seurat v2, we provide a simple function to perform ALRA on a Seurat v2 object in `alraSeurat2.R`. \nALRA is supported for OS X, Linux, and Windows. It has been tested on MacOS (Mojave, 10.14) and Ubuntu 16.04. Installation should not take longer than a minute or two. \n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KlugerLab/ALRA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KlugerLab/ALRA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KlugerLab/ALRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Adaptively-thresholded Low Rank Approximation (ALRA)"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://gauss.math.yale.edu/~gcl22/alra_schematic2.png"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Adaptively-thresholded Low Rank Approximation (ALRA)"
        ],
        "type": "Text_excerpt",
        "value": "ALRA can be installed as follows:\n\n```r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"KlugerLab/ALRA\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999988564905778,
      "result": {
        "original_header": "More info",
        "type": "Text_excerpt",
        "value": "ALRA is supported for OS X, Linux, and Windows. It has been tested on MacOS (Mojave, 10.14) and Ubuntu 16.04. Installation should not take longer than a minute or two. \n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KlugerLab/ALRA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dropout, imputation, matrix-completion, scrna-seq, svd"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ALRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KlugerLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 9591,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "linqiaozhi",
          "type": "User"
        },
        "date_created": "2019-08-10T15:38:23Z",
        "date_published": "2021-10-31T21:45:49Z",
        "html_url": "https://github.com/KlugerLab/ALRA/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 52411690,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/KlugerLab/ALRA/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/KlugerLab/ALRA/releases/52411690",
        "value": "https://api.github.com/repos/KlugerLab/ALRA/releases/52411690",
        "zipball_url": "https://api.github.com/repos/KlugerLab/ALRA/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:37:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 73
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Adaptively-thresholded Low Rank Approximation (ALRA)"
        ],
        "type": "Text_excerpt",
        "value": "Please be sure to pass ALRA a matrix where the cells are rows and genes are columns. \n\nALRA can be used as follows:\n\n```r\nlibrary(ALRA)\n\n# Let A_norm be a normalized expression matrix where cells are rows and genes are columns.\n# We use library and log normalization, but other approaches may also work well.\nresult.completed <- alra(A_norm)\nA_norm_completed <- result.completed[[3]]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Adaptively-thresholded Low Rank Approximation (ALRA)"
        ],
        "type": "Text_excerpt",
        "value": "```r\nlibrary(ALRA)\n\ndata(\"b_nk_example\")\ndata(\"labels_example\")\n```\n\nLibrary and log normalize the data\n```r\nA_norm <- normalize_data(b_nk_example)\n```\n\nChoose k. \n```r\nk_choice <- choose_k(A_norm)\n```\n\nFor the results in the paper, automatically chosen k worked quite well, but in\nsome cases you might want to take a closer look, as we do here. The k is\nchosen based on the spacings between the singular values, as it can be quite\nhard to identify the ``beginning of noise'' from just looking at the spectrum\nitself.\n\n```r\nlibrary(ggplot2)\nlibrary(gridExtra)\ndf <- data.frame(x=1:100,y=k_choice$d)\ng1<-ggplot(df,aes(x=x,y=y),) + geom_point(size=1)  + geom_line(size=0.5)+ geom_vline(xintercept=k_choice$k)   + theme( axis.title.x=element_blank() ) + scale_x_continuous(breaks=seq(10,100,10)) + ylab('s_i') + ggtitle('Singular values')\ndf <- data.frame(x=2:100,y=diff(k_choice$d))[3:99,]\ng2<-ggplot(df,aes(x=x,y=y),) + geom_point(size=1)  + geom_line(size=0.5)+ geom_vline(xintercept=k_choice$k+1)   + theme(axis.title.x=element_blank() ) + scale_x_continuous(breaks=seq(10,100,10)) + ylab('s_{i} - s_{i-1}') + ggtitle('Singular value spacings')\ngrid.arrange(g1,g2,nrow=1)\n\nA_norm_completed <- alra(A_norm,k=k_choice$k)[[3]]\n```\n\nCheck the completion. Note that the results improve when using the entire dataset (see the ALRA-paper repo for those codes), as opposed to this subset.\n\n* NCAM1 should be expressed in all NK cells, but is only expressed in 4% of of NK cells in the original data.  \n* CR2 should be expressed in all B cells, but is only expressed in 1% of of B cells in the original data.  \n\n```r\nprint(aggregate(A_norm[,c('NCAM1','CR2')], by=list(\" \"=labels_example),FUN=function(x) round(c(percent=100*sum(x>0)/length(x)),1)))\nprint(aggregate(A_norm_completed[,c('NCAM1','CR2')], by=list(\" \"=labels_example),FUN=function(x) round(c(percent=100*sum(x>0)/length(x)),1)))\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KlugerLab/ALRA/master/README.md",
      "technique": "header_analysis"
    }
  ]
}