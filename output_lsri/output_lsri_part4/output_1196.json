{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "NetPredictor: Analyzing and Predicting Links in Bipartite Network data"
        ],
        "type": "Text_excerpt",
        "value": "This project's rapid creation would not have been possible without\nthe numerous excellent R packages available to us.  We wish to\nacknowledge these and thank the authors for their work:\n\n* [shiny](http://cran.r-project.org/web/packages/shiny/index.html), [markdown](http://cran.r-project.org/web/packages/markdown/index.html), and \n* [RRO Open](https://mran.revolutionanalytics.com/open/),[Netpredictor](https://github.com/abhik1368/netpredicter),[igraph](https://cran.r-project.org/web/packages/igraph/index.html)\n* Some amazing cool shiny packages like [shinysky](https://github.com/AnalytixWare/ShinySky),[shinyBS](https://github.com/ebailey78/shinyBS),[shinythemes](https://github.com/rstudio/shinythemes)\n* Some bioconductor packages for Ontology and Pathway search\n[clusterProfiler](http://bioconductor.org/packages/release/bioc/html/clusterProfiler.html),[ReactomePA](http://bioconductor.org/packages/release/bioc/html/ReactomePA.html),[biomaRt](http://bioconductor.org/packages/release/bioc/html/biomaRt.html)\n* Some important R packages such as\n[igraph](http://igraph.org/r/),[DBI](https://cran.r-project.org/web/packages/DBI/index.html),[RSQLite](https://cran.r-project.org/web/packages/RSQLite/index.html),[data.table](https://cran.r-project.org/web/packages/data.table/index.html)\n* Some javascript packages such as [visNetwork](http://dataknowledge.github.io/visNetwork/),[rCharts](http://rcharts.io/),[data.tables](https://cran.r-project.org/web/packages/data.table/index.html)\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 17.92,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abhik1368/Shiny_NetPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-12-07T19:20:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-13T19:43:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9169499409240479,
      "result": {
        "original_header": "NetPredictor: Analyzing and Predicting Links in Bipartite Network data",
        "type": "Text_excerpt",
        "value": "\nTo use the package and explore the PPI Interaction first download the PPI data from [Figshare](https://figshare.com/articles/Interactome_data/5572774) unzip and dump them into the data folder of the application. \n"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abhik1368/Shiny_NetPredictor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abhik1368/Shiny_NetPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetPredictor: Analyzing and Predicting Links in Bipartite Network data"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/y46iikfhmkfcs47l?svg=true"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/figures/Fig1.png"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/figures/Fig2.png"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/figures/Fig3.png"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/figures/Fig4.png"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9662745378970286,
      "result": {
        "original_header": "NetPredictor: Analyzing and Predicting Links in Bipartite Network data",
        "type": "Text_excerpt",
        "value": "* **Version:** 1.0.1\n* [![HitCount](http://hits.dwyl.io/abhik1368/Shiny_NetPredictor.svg)](5000)\n* [![Build Status](https://ci.appveyor.com/api/projects/status/y46iikfhmkfcs47l?svg=true)](https://ci.appveyor.com/project/mbojan/linkprediction-744d7)\n* [![rstudio mirror downloads](http://cranlogs.r-pkg.org/badges/linkprediction?color=2ED968)](http://cranlogs.r-pkg.org/)\n* ![Status](http://img.shields.io/badge/status-In_development_%28STABLE%29-red.svg?style=flat)\n* [![License](http://img.shields.io/badge/license-AGPL--3-orange.svg?style=flat)](https://www.gnu.org/licenses/agpl-3.0.html)\n* **Source:** [GitHub](https://github.com/abhik1368/Shiny_NetPredictor)\n* **Problems:** [Bug reports and feature reqests](https://github.com/abhik1368/netpredicter/issues)\n* **Authors:** [Abhik Seal](https://www.linkedin.com/in/abseal) \n\nThis will not install RRO package in your machine . For fast computations install RRO package from [MRAN](https://mran.revolutionanalytics.com/download/#download)\n \n"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "machine-learning-algorithms, network-analysis, ppi, r"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://hits.dwyl.io/abhik1368/Shiny_NetPredictor.svg"
      },
      "source": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Shiny_NetPredictor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "abhik1368"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 115891,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 6229,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 133,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhik1368/Shiny_NetPredictor/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "abhik1368",
          "type": "User"
        },
        "date_created": "2018-05-14T19:45:56Z",
        "date_published": "2018-06-18T16:43:44Z",
        "description": "Includes analysis of networks and searching networks in PPI data.\r\n\r\nFour Types of network algorithms are being implemented in the current Netpredictor system which are described below.\r\n\r\nHeatS : The algorithm based on the recommendation techniques developed by Zhou et al.\r\n\r\nNetwork Based Inference(NBI) : This method is also based on the two phase resource transfer as the HeatS algorithm. In addition this method extends extends the recommendation model by similarity between small molecules and sequence similarity between targets.\r\n\r\nRandom walk with Restart(RWR) : This method based on the concept of widely known pagerank algorithm which computes random walk-based \u201cdistance\u201d from a node to every other nodes in a network. \r\n\r\nNetcombo : NetCombo algorithm fuses the results of NBI and RWR. Its takes the parameters for both the algorithms and averages the results.",
        "html_url": "https://github.com/abhik1368/Shiny_NetPredictor/releases/tag/V1.0",
        "name": "apollo",
        "release_id": 11532097,
        "tag": "V1.0",
        "tarball_url": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/tarball/V1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/releases/11532097",
        "value": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/releases/11532097",
        "zipball_url": "https://api.github.com/repos/abhik1368/Shiny_NetPredictor/zipball/V1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:19:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}