{
  "application_domain": [
    {
      "confidence": 0.968429688403274,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "ViraPipe"
        ],
        "type": "Text_excerpt",
        "value": "AI Maarala, Z Bzhalava, J Dillner, K Heljanko, D Bzhalava;\nViraPipe: Scalable Parallel Pipeline for Viral Metagenome Analysis from Next Generation Sequencing Reads, Bioinformatics, Nov. 2017, btx702, https://doi.org/10.1093/bioinformatics/btx702\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NGSeq/ViraPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-05T12:02:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-15T12:16:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ViraPipe is distributed Apache Spark based metagenome analytics pipeline for scalable detection of pathogens from NGS data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9992451673511116,
      "result": {
        "original_header": "ViraPipe",
        "type": "Text_excerpt",
        "value": "ViraPipe is a Apache Spark based scalable parallel pipeline for analysing metagenomes from NGS read data in a computing cluster or on a multi-core standalone machine.\nThe pipeline is designed especially for viral metagenomes but the software is applicable for any other genome analysis purposes.\nThe pipeline integrates parallel BWA-MEM read aligner, MegaHit DeNovo assembler, BLAST and HMMSearch tools. Pipeline includes\nalso tools for sequence data normalization and filtration as well as SQL query interfaces for querying the data in parallel.\nFASTQ, FASTA, SAM/BAM and Apache Parquet formats are supported as well as BLAST tabular format. \n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install MegaHit assembler on every worker node (requires gcc compiler)",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "    cd megahit\n    make\n    create symbolic link\n        ln -s {path to megahit}/megahit /usr/local/bin/megahit\n    or add megahit to PATH\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install BLAST and HMMER software on every worker node (requires gcc compiler)",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[HMMER](http://www.hmmer.org/download.html)\n    wget http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2-linux-intel-x86_64.tar.gz\n    Extract and make\n\n[BLAST](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download)\n    wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.6.0+-x64-linux.tar.gz\n    Extract and make\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "vFam database for hmmsearch",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "##### BLAST database files"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BLAST database files",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "    for i in {10..50}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/nt.$i.tar.gz ; done\n    for i in {0..9}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/human_genomic.0$i.tar.gz ; done\n    for i in {10..22}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/human_genomic.$i.tar.gz ; done\n    wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/taxdb.tar.gz\n    cat *.gz | tar -xzvf - -i\n    "
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copy DBs to every node with scp",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "    scp nt.* username@hostname:/database/blast/nt\n    scp human_genomic.* username@hostname:/database/blast/hg\n    scp taxdb.* username@hostname:/database/taxdb\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download NGS sequence files and load to HDFS",
        "parent_header": [
          "ViraPipe",
          "Running the example pipeline"
        ],
        "type": "Text_excerpt",
        "value": "    wget ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase3/data/HG00313/sequence_read/ERR016234_2.filt.fastq.gz\n    hdfs dfs -mkdir /data/input/example\n    hdfs dfs -mkdir /data/output\n    hdfs dfs -put ERR016234_1.filt.fastq.gz /data/input/example\n    hdfs dfs -put ERR016234_2.filt.fastq.gz /data/input/example\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NGSeq/ViraPipe/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NGSeq/ViraPipe/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NGSeq/ViraPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ViraPipe"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/scripts/blast_search.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/scripts/sequential.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/scripts/virapipe.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling ViraPipe",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "    git clone https://github.com/NGSeq/ViraPipe\n    cd ViraPipe\n    mvn install package\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "jbwa",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "    cd jbwa\n    make\n\n    Copy libbwajni native library to {$HADOOP_HOME}/lib/native directory on every worker node e.g. with scp:\n    scp src/main/native/libbwajni.so username@hostname:/{$HADOOP_HOME}/lib/native\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install MegaHit assembler on every worker node (requires gcc compiler)",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "    cd megahit\n    make\n    create symbolic link\n        ln -s {path to megahit}/megahit /usr/local/bin/megahit\n    or add megahit to PATH\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Download and install BLAST and HMMER software on every worker node (requires gcc compiler)",
        "parent_header": [
          "ViraPipe",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[HMMER](http://www.hmmer.org/download.html)\n    wget http://eddylab.org/software/hmmer3/3.1b2/hmmer-3.1b2-linux-intel-x86_64.tar.gz\n    Extract and make\n\n[BLAST](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download)\n    wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.6.0+-x64-linux.tar.gz\n    Extract and make\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "vFam database for hmmsearch",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "##### BLAST database files"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BLAST database files",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "    for i in {10..50}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/nt.$i.tar.gz ; done\n    for i in {0..9}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/human_genomic.0$i.tar.gz ; done\n    for i in {10..22}; do wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/human_genomic.$i.tar.gz ; done\n    wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/taxdb.tar.gz\n    cat *.gz | tar -xzvf - -i\n    "
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copy DBs to every node with scp",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "    scp nt.* username@hostname:/database/blast/nt\n    scp human_genomic.* username@hostname:/database/blast/hg\n    scp taxdb.* username@hostname:/database/taxdb\n"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set BLASTDB environment variable on each node:",
        "parent_header": [
          "ViraPipe",
          "Installation",
          "Download and extract BLAST and HMMER databases under the same path on every worker node"
        ],
        "type": "Text_excerpt",
        "value": "    export BLASTDB=$BLASTDB:/database/blast/hg\n    export BLASTDB=$BLASTDB:/database/taxdb\n------------------------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NGSeq/ViraPipe/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Altti Ilari Maarala, Davit Bzhalava\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ViraPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NGSeq"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 166733,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13293,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scala",
        "size": 10577,
        "type": "Programming_language",
        "value": "Scala"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 581,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "aim11",
          "type": "User"
        },
        "date_created": "2017-10-24T08:57:29Z",
        "date_published": "2017-10-24T09:11:27Z",
        "description": "\r\n",
        "html_url": "https://github.com/NGSeq/ViraPipe/releases/tag/v0.9",
        "name": "v0.9",
        "release_id": 8233558,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/NGSeq/ViraPipe/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/NGSeq/ViraPipe/releases/8233558",
        "value": "https://api.github.com/repos/NGSeq/ViraPipe/releases/8233558",
        "zipball_url": "https://api.github.com/repos/NGSeq/ViraPipe/zipball/v0.9"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "ViraPipe"
        ],
        "type": "Text_excerpt",
        "value": "Apache Spark 2 installed with Hadoop, YARN and HDFS filesystem.\nTested on Ubuntu 16 and Centos 7 servers.\nJava 1.8\n\nDependencies:\nHadoop-BAM 7.4.0 +\nSamtools HtsJDK 2.5.0 +\nJava Bindings (JNI) for bwa: jbwa 1.0.0 +\n\nScala 2.10 +\nScala parsing library Scallop 2.1.2 +\n\n------------------------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run the pipeline",
        "parent_header": [
          "ViraPipe",
          "Running the example pipeline"
        ],
        "type": "Text_excerpt",
        "value": "    scripts/virapipe.sh /data/input /data/output example\n    \n    \n------------------------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/NGSeq/ViraPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:27:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ]
}