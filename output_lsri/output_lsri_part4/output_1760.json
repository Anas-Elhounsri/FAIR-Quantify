{
  "application_domain": [
    {
      "confidence": 40.91,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ToniWestbrook/paladin"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-05-22T00:55:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-06T03:38:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Protein Alignment and Detection Interface"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9423411941305663,
      "result": {
        "original_header": "PALADIN",
        "type": "Text_excerpt",
        "value": "PALADIN is a high-performance protein sequence alignment tool designed for the accurate functional characterization of metagenomes. \nCheck out PALADIN in action in this YouTube tutorial! \nPALADIN is based on BWA and aligns sequences via the BWT. PALADIN, however, offers the novel approach of aligning in protein space. PALADIN is optimized to work with UniProt's SwissProt or UniRef databases as references - it can automatically download these references and provides extensive characterization data when using them.  It also supports manually curated protein references, as well as reference genomes in nucleotide format with an accompanying GTF/GFF annotation containing CDS entries. During alignment, PALADIN will perform ORF detection and translate all detected ORFs into protein sequences to perform alignment. PALADIN also supports transcript (ribo-depleted or poly-A selected) or protein inputs. ORF detection is modified/disabled in these modes. \nPALADIN often outperforms comparable tools such as BLASTX and DIAMOND (https://pubmed.ncbi.nlm.nih.gov/28158639). \nPALADIN currently only supports single-end (or merged) reads. It makes use of many BWA parameters and is therefore compatible with many of its command line arguments. \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9319006106434026,
      "result": {
        "original_header": "SAMPLE COMMANDS",
        "type": "Text_excerpt",
        "value": "Download and prepare UniProt Swiss-Prot index files.\n```\npaladin prepare -r1 \n```\nDownload and prepare UniProt UniRef90 index files.\nBASH2*\nIndex UniProt (or another protein) fasta. (See [here](#prepare-index) for an explanation of `prepare` vs `index`)\nBASH3*\nAlign a set of reads using 4 threads. Send the full UniProt report to paladin_uniprot.tsv.\nBASH4*\nAlign a set of reads using 4 threads. Produce a bam file.\nBASH5*\nAlign a set of reads, preferring higher quality mappings over number of proteins detected.\nBASH6*\nAlign a set of reads, report secondary alignments, and generate UniProt report for both primary and secondary alignments.\nBASH7* \nIf you're interested in trying this out on a smallish test file, try downloading this one which is from a human lung metagenome study: http://www.ebi.ac.uk/ena/data/view/PRJNA71831 \nThis repo also contains a wrapper script (`run.py`) which is intended to make it easier to deploy Paladin on cloud or HPC computing resources (e.g. Slurm or AWS). The script is located in the PATH in the Docker image, and so you can run `run.py -h` to see the set of options for this script. In brief, users can specify the input URL, reference database path, and output folder location (any of which may be local paths, S3 buckets, or FTP). The run script will fetch the input data, run Paladin, wrap up the results into a single JSON output file, and copy the results to the specified output folder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9479440755194063,
      "result": {
        "original_header": "OUTPUT",
        "type": "Text_excerpt",
        "value": "**Note: Be sure to filter your results by the maximum mapping quality.**  Though an ORF may successfully map to a protein/cluster, this does not indicate how likely this is a correct mapping.  Without filtering, the SAM/TSV files will include may entries that are likely noise.  A high maximum mapping quality indicates at least one ORF mapped with high confidence to the reported protein/cluster.\n```\nTSV FORMAT\n\nCount\tAbundance Quality (Avg) Quality (Max) UniProtKB\tID\tOrganism\tProtein Names\tGenes\tPathway\tFeatures\tGene Ontology\tReviewed\tExistence\tComments  Cross Reference (KEGG)  Cross Reference (GeneID)  Cross Reference (PATRIC)  Cross Reference(EnsemblBacteria)   Taxonomic ID   Lineage\n```\n \n- Count: The number of reads mapping to that UniProt entry\n- Abundance: The percentage of reads mapping to that UniProt entry\n- Quality (Avg): The average mapping quality for reads mapped to that UniProt entry (Phred scale, max 60)\n- Quality (Max): The maximum mapping quality for reads mapped to that UniProt entry (Phred scale, max 60)\n- UniProtKB: The ID containing the Gene short-code and species of origin\n- ID: The Uniprot code\n- Organims: The Organims from which the Uniprot ID is derived. Note that one should use this to generate a taxonomic profile of your sample\n- Protein Names\n- Genes\n- Pathway\tFeatures\n- Gene Ontology\n- Reviewed\n- Existence\n- Comments\n- Cross Reference (KEGG): Corresponding entry in KEGG database (http://www.genome.jp/kegg/)\n- Cross Reference (GeneID): Corresponding entry in NCBI gene database (http://www.ncbi.nlm.nih.gov/gene)\n- Cross Reference (PATRIC): Corresponding entry in PATRIC database (http://www.patricbrc.org)\n- Cross Reference (EnsemblBacteria): Corresponding entry in Ensembl Bacteria database (http://bacteria.ensembl.org)\n- Taxonomic ID\n- Lineage\n \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9002473153212239,
      "result": {
        "original_header": "PALADIN-plugins",
        "type": "Text_excerpt",
        "value": "--\nA number of preparation and downstream analysis tools are available via the PALADIN-plugins package.  This includes HPC MPI support, customized UniProt reports, taxonomic analysis, GO term analysis, etc.  PALADIN-plugins can be found [here](https://github.com/twestbrookunh/paladin-plugins/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/twestbrookunh/paladin/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ToniWestbrook/paladin"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PALADIN"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/sample_data/make_test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://img.youtube.com/vi/xo7Njkrjmu8/0.jpg"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://quay.io/repository/fhcrc-microbiome/paladin/status"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALLATION",
        "parent_header": [
          "PALADIN"
        ],
        "type": "Text_excerpt",
        "value": "--\n**Dependencies**\n\n- From a fresh install of Ubuntu, you will need to install `build-essential libcurl4-openssl-dev git make gcc zlib1g-dev`. This should be available on Ubuntu 14.04 using `sudo apt-get install build-essential libcurl4-openssl-dev git make gcc zlib1g-dev`\n- PALADIN compiles by default on OSX 10.10.x\n\n```\ngit clone https://github.com/twestbrookunh/paladin.git\ncd paladin/\nmake\n```\n\n**Docker**\n\nAlternatively, you can use Paladin with the Docker image hosted at [https://quay.io/repository/fhcrc-microbiome/paladin](https://quay.io/repository/fhcrc-microbiome/paladin). This image can be downloaded with the command `docker pull quay.io/fhcrc-microbiome/paladin`. A set of tags are used to pin releases, e.g. `v1.4.0--1` is the image pinned to the `v1.4.0` version of Paladin. \n\n[![Docker Repository on Quay](https://quay.io/repository/fhcrc-microbiome/paladin/status \"Docker Repository on Quay\")](https://quay.io/repository/fhcrc-microbiome/paladin)\n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9964579243229851,
      "result": {
        "original_header": "SAMPLE COMMANDS",
        "type": "Text_excerpt",
        "value": "\n```\n#install PALADIN as per above\n\ncurl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR117/002/SRR1177122/SRR1177122.fastq.gz\npaladin prepare -r1 #unless already done\npaladin align -t 4 -o lungstudy uniprot_sprot.fasta.gz SRR1177122.fastq.gz\n\n#look at report file, SAM, etc.\n``` \nAll references must be initially indexed via either the `prepare` or `index` commands before use with PALADIN. \nThe `prepare` command must be run for all UniProt or UniProt formatted references, and is necessary if you wish PALADIN to generate the TSV UniProt characterization report during alignment.  The `prepare` command will download and index the Swiss-Prot or UniRef90 protein databases by default, or you may specify a local, custom reference formatted using the `>sp|AccID|KBID` header format of the Swiss-Prot database, using valid UniProt KBIDs. \nThis repo also contains a wrapper script (`run.py`) which is intended to make it easier to deploy Paladin on cloud or HPC computing resources (e.g. Slurm or AWS). The script is located in the PATH in the Docker image, and so you can run `run.py -h` to see the set of options for this script. In brief, users can specify the input URL, reference database path, and output folder location (any of which may be local paths, S3 buckets, or FTP). The run script will fetch the input data, run Paladin, wrap up the results into a single JSON output file, and copy the results to the specified output folder. \n \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8024505235323692,
      "result": {
        "original_header": "PALADIN-plugins",
        "type": "Text_excerpt",
        "value": "--\nA number of preparation and downstream analysis tools are available via the PALADIN-plugins package.  This includes HPC MPI support, customized UniProt reports, taxonomic analysis, GO term analysis, etc.  PALADIN-plugins can be found [here](https://github.com/twestbrookunh/paladin-plugins/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, nucleotide-alignment, paladin, protein-alignment, unh, uniprot"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2015 by Anthony Westbrook, University of New Hampshire <anthony.westbrook@unh.edu>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "paladin"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ToniWestbrook"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 379267,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32709,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 9718,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1896,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 690,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 533,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/twestbrookunh/paladin/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2024-04-01T01:45:52Z",
        "date_published": "2024-04-01T01:50:52Z",
        "description": "### Added                                                                                                                                                                                                                                                                                                                   \r\n- Alignment command can now skip ORF detection and treat input sequences as transcripts (-q option)",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v.1.6.0",
        "name": "PALADIN-1.6.0",
        "release_id": 149171993,
        "tag": "v.1.6.0",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v.1.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/149171993",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/149171993",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v.1.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2019-05-14T02:54:29Z",
        "date_published": "2019-05-14T02:57:37Z",
        "description": "### Fixed\r\n- Web request retries now work properly\r\n\r\n### Added\r\n- Taxonomic ID and Lineage to UniProt report\r\n",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.6",
        "name": "PALADIN-1.4.6",
        "release_id": 17329712,
        "tag": "v1.4.6",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/17329712",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/17329712",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2019-05-07T21:17:44Z",
        "date_published": "2019-05-07T21:21:32Z",
        "description": "### Changed\r\n- Changed UniProt web request batch size to 5000 entries to reduce chances of server timeout",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.5",
        "name": "PALADIN-1.4.5",
        "release_id": 17207770,
        "tag": "v1.4.5",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/17207770",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/17207770",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2018-09-13T02:59:36Z",
        "date_published": "2018-09-13T03:02:26Z",
        "description": "### Fixed\r\n\r\n- Corrected issues causing compiler warnings",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.4",
        "name": "PALADIN-1.4.4",
        "release_id": 12873040,
        "tag": "v1.4.4",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/12873040",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/12873040",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2018-07-26T01:41:14Z",
        "date_published": "2018-07-26T01:47:52Z",
        "description": "### Changed\r\n- Changed all web requests from HTTP to HTTPS to accommodate UniProt's new requirements",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.3",
        "name": "PALADIN-1.4.3",
        "release_id": 12108153,
        "tag": "v1.4.3",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/12108153",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/12108153",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2018-03-20T22:13:37Z",
        "date_published": "2018-03-20T22:16:12Z",
        "description": "### Fixed\r\n\r\n- Corrected issue that sometimes caused PALADIN to hang when downloading data from UniProt\r\n- Corrected ability to recover from UniProt server errors",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.2",
        "name": "PALADIN-1.4.2",
        "release_id": 10181084,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/10181084",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/10181084",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2017-11-20T21:49:44Z",
        "date_published": "2017-11-20T21:51:32Z",
        "description": "### Fixed\r\n\r\n- Corrected truncated translation code descriptions\r\n",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.1",
        "name": "PALADIN-1.4.1",
        "release_id": 8593714,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/8593714",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/8593714",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2017-03-23T15:22:30Z",
        "date_published": "2017-03-23T15:28:31Z",
        "description": "### Added\r\n- Option to detect ORFs/translate/align across multiple non-standard genetic codes (-z option). Details of available translation codes may be found here: http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.4.0",
        "name": "PALADIN-1.4.0",
        "release_id": 5846943,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5846943",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5846943",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2017-02-07T20:09:56Z",
        "date_published": "2017-02-07T20:15:29Z",
        "description": "### Added\n- Alignment command can now directly take a protein multi-FASTA and skip ORF detection (-p option)\n- Prepare and alignment commands can now make use of a proxy server (HTTP/SOCKS) for contacting UniProt (-P option)\n",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.3.2",
        "name": "PALADIN-1.3.2",
        "release_id": 5387449,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5387449",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5387449",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ToniWestbrook",
          "type": "User"
        },
        "date_created": "2017-01-13T02:38:44Z",
        "date_published": "2017-01-13T02:45:09Z",
        "description": "### Added\n- UniProt report now includes max mapping quality for each protein\n\n### Changed\n- UniProt report floating precision now set to 5 digits\n",
        "html_url": "https://github.com/ToniWestbrook/paladin/releases/tag/v1.3.1",
        "name": "PALADIN-1.3.1",
        "release_id": 5148031,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/ToniWestbrook/paladin/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5148031",
        "value": "https://api.github.com/repos/ToniWestbrook/paladin/releases/5148031",
        "zipball_url": "https://api.github.com/repos/ToniWestbrook/paladin/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:12:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 60
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}