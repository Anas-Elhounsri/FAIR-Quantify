{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments and contact",
        "parent_header": [
          "taxator-tk"
        ],
        "type": "Text_excerpt",
        "value": "We acknowledge the work done by the contributors of the SeqAn and BOOST projects\nas well as the author(s) of the tree.hh classes and all other anonymous\ncontributors. For the extended pipeline, we acknowledge all the authors of all external programs, which would be too many to list them here.\n\nFor any questions, feedback or complaints, contact\nscience[at]fungs.de\n\nPlease, if you use this software and publish a paper, cite\n\n    J. Dr\u00f6ge, I. Gregor, and A. C. McHardy\n    Taxator-tk: precise taxonomic assignment of metagenomes by fast approximation of evolutionary neighborhoods\n    Bioinformatics 2015 31: 817-824.\n    doi: 10.1093/bioinformatics/btu745\n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fungs/taxator-tk"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments and contact",
        "parent_header": [
          "taxator-tk"
        ],
        "type": "Text_excerpt",
        "value": "We acknowledge the work done by the contributors of the SeqAn and BOOST projects\nas well as the author(s) of the tree.hh classes and all other anonymous\ncontributors. For the extended pipeline, we acknowledge all the authors of all external programs, which would be too many to list them here.\n\nFor any questions, feedback or complaints, contact\nscience[at]fungs.de\n\nPlease, if you use this software and publish a paper, cite\n\n    J. Dr\u00f6ge, I. Gregor, and A. C. McHardy\n    Taxator-tk: precise taxonomic assignment of metagenomes by fast approximation of evolutionary neighborhoods\n    Bioinformatics 2015 31: 817-824.\n    doi: 10.1093/bioinformatics/btu745\n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-02-18T15:57:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-06T23:55:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A set of programs for the taxonomic analysis of genetic sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "taxator-tk"
        ],
        "type": "Text_excerpt",
        "value": "This is the source code for the taxator toolkit, a set of programs and example pipelines for taxonomic classification of nucleotide and amino acid sequences. The input typically represents a mixture of taxa from complex environments.\n\nIf you are looking for pre-packaged sample refpacks for taxonomic assignment, these are hosted at\n[the HZI refpack download page](https://research.bifo.helmholtz-hzi.de/downloads/taxator-tk_refpacks/). 64bit Linux binary packages are also available in GitHub releases.\n\nThis repository consists of two parts, the actual taxator-tk C++ code in the folder `core` and the pipeline scripts which are used to build the ready-to-use binary distribution in folder `extended`. The folder `contrib` contains information on how to add the external binaries which are part of the binary extended version package.\n\nAll issues can be filed in the\n[official GitHub repository](https://github.com/fungs/taxator-tk/issues/).\n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9862763584849741,
      "result": {
        "original_header": "taxator-tk",
        "type": "Text_excerpt",
        "value": "A set of programs for the taxonomic analysis of genetic sequences\n \n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "taxator-tk"
        ],
        "type": "Text_excerpt",
        "value": "Please see separate documentation:\n* [changelog](CHANGELOG.md)\n* [core compilation guide](core/BUILD.md)\n* [core detailed usage instructions](core/USAGE.md)\n* [core dependencies](core/DEPENDENCIES.md)\n* [extended pipeline description](extended/README.md)\n* [extended pipeline dependencies](extended/DEPENDENCIES.md)\n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fungs/taxator-tk/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "taxator-tk"
        ],
        "type": "Text_excerpt",
        "value": "> 1: Help, the majority of assigned taxa are unspecific, like phylum or (super)kingdom, what can I do?\n\nYour input sequences are likely too short or too novel, which means that they lack relative sequences in your refpack. Check that you are using a comprehensive, recent and suitable refpack for classification. For short sequences, you can still find the associated taxonomic information in the [intermediate GFF3](doc/fileformats.md) file, just not at the confidence level which is required for the final consensus assignment.\n\n> 2: Why do taxator-tk pipelines run so long compared to other classification programs?\n\nThe classification requires both, sensitive local alignment to find distant homologs and approximate phylogenetic inference. Typically, alignment dominates the total runtime.\n\n> 3: Can the sequences classification be accelerated?\n\nThere are many pipeline parameters that can be tuned, starting from the aligner itself, alignment length pre-filters, segment classification cutoff length or other parameters to reduce the number of pairwise alignments in the realignment placement algorithm. The provided pipelines try to provide a good balance and example.\n\n> 4: Should taxator-tk be used with sequencing reads or assembled data?\n\nThe algorithm works for single short or long reads, but if your reads are overlapping, it does not make too much sense to apply it to unassembled data. This is, because the calculations for local alignment and inference would be repeated for overlapping regions, doing the same calculations over and over again, which leads to prohibitive runtimes. Secondly, the conservative consensus approach is most effective for longer sequences, either stemming from long read sequencing technologies or assembled contigs.\n\n> 5: Is taxator-tk targeted towards a specific sequencing platform?\n\nLook at FAQ#4. In general, for long-read sequences with specific error profiles such as PacBIO, you should probably use an aligner that considers the biases. Taxator-tk can be used for raw data, keeping in mind that the pairwise genetic distances will likely be over-estimated, leading to more conservative classifications.\n\n> 6: If a sequence was assigned to a taxon by the algorithm, where can I see why?\n\nFirst, look at the GFF3 output file which can also be loaded as a feature track into sequence viewers like IGV. Secondly, if enabled, the taxator logfile will give a very detailed description of the inference algorithm and the involved taxa. In protein space, it even contains the pairwise alignments.\n\n> 7: Can I use taxator-tk with targeted sequencing data like amplicons?\n\nYou can, but to be honest, it probably does not make too much sense, because in the design of such a study, one typically already knows which gene to target. Using this information, you can do much better by phylogenetic inference and tree building. One of the main advantages of using taxator-tk is, that you neither need to know the genes analyzed nor you need to have curated and aligned reference genes for classification.\n\n> 8: Why do I get an error with spaces in the FASTA identifier?\n\nThe FASTA format lacks a stringent format specification and different programs and local aligners interpret the identifiers differently. For instance, NCBI style adds spaces followed by meta-information. In order to work with all types of aligners, we follow the simplest implementation of the FASTA format and allow spaces in the identifiers but no extra meta-information. Use a program like [seqkit](https://github.com/shenwei356/seqkit) or the bundled `fasta-strip-identifier` to clean up sequence identifiers of the input sequences.\n\n> 9: My computer is running out of main memory. How can I run taxator-tk on my desktop machine?\n\nTaxator-tk was primarily designed for computers with large memory and many CPU cores in mind but we avoid holding data permanently in memory and use an on-disk FASTA index to access refpacks. If you use the extended pipelines with a low-memory aligner like Blast, it's mostly the (uncompressed) query sequences and taxonomy mapping which occupy space in main memory. So if your query sequences are particularly large, try using an on-disk FASTA index for the input sequences as well, or just split up the input sequences and run program taxator on the different pieces. You can safely concatenate the GFF3 output files for the last consensus binning step.\n\n> 10: Can I run taxator-tk run on a compute cluster?\n\nSee FAQ#9. The core algorithm is embarassingly parallel, which means it can easily be split across compute nodes. However, you have to write your own pipeline for your compute environment, and you have to decide whether you want to do the local alignment as part of the pipeline or separately on the compute cluster.\n\n> 11: What is the advantage/disadvanage in using taxator-tk over fast k-mer or hash based sequence classification with programs like Centrifuge or Kraken?\n\nAlgorithms using those techniques tend to assign most sequnces at species to family level. Due to phylogenetic neighborhood inference, taxator-tk handles distant homology in a more robust and less error-prone way. If this is not a priority, for instance for well sequenced environments and for human pathogens, these nearest-neighbor-style classifiers will most likely be a better fit. They are much faster.\n\n> 12: What is the advantage/disadvantage in using taxator-tk over marker gene phylogenetic placement with programs like MetagPhlan, CheckM, RAxML or pplacer?\n\nTaxator-tk frees you from selecting genes for analysis, identifiying them in the input sequences, building reference alignments, HMMs and phylogenies. It even handles gene-free input, as long as there is a phylogenetic signal in the data. Starting from v1.5 taxator-tk also supports protein sequences as input and the extended pipeline looks for protein coding regions in nucleotide input. On the other hand, phylogenetic placement is much more precise for specific genes and does not require a global taxonomy (which is often too rough or incorrect, compared to a gene tree).\n\n> 13: What is a refpack?\n\nA refpack is just a collection of reference sequences in FASTA format and a dump of the NCBI taxonomy in a specific version, which are both linked. Refpacks may contain nucleotide sequences of full genomes, partial genomes or genes or amino acid sequences for proteins.\n\n> 14: Where can I find refpacks?\n\nReady to use refpacks can be downloaded along with the binary distribution of the program at the Helmholtz Centre for Infection Research. Because we cannot always keep up with new sequence collection releases or provide specialized refpacks, you are also encouraged to build your own. This is explained in the documentation or maybe you will find [this blog post](https://scienceblog.fungs.de/posts/taxator-tk-marine-refpack/) useful.\n\n> 15: I want to build my own refpack, why do I have mapping problems with taxonomic identifiers?\n\nThe NCBI taxonomy changes frequently, replacing old identifiers by new ones. That means, old taxonomic mappings outdate quickly, when you update the taxonomy. You can always try to remap to the most recent taxonomy version, for instance using the web lookup at the [NCBI taxonomy home](https://www.ncbi.nlm.nih.gov/Taxonomy/).\n\n> 16: Can I use a different taxonomy than NCBI?\n\nNo, currently we only support the NCBI dump file format in refpacks. In theory, you could of course bring your alternate taxonomy into the format using `names.dmp` and `nodes.dmp`.\n\n> 17: Should I use nucleotide or protein alignment for classification?\n\nThat is a hard question. The protein alignment feature is pretty new in taxator-tk (starting at 1.5) and we don't want to give recommendations until we have more extensive experimental data. In theory, protein alignment should be more sensitive for finding distant homologs and more stable in distance estimation.\n\n> 18: I want to use taxator-tk with aligner XYZ, can I?\n\nYes, just implement the [intermediate text-based and TAB-separated alignment format](doc/fileformats.md) and feed the output into `taxator`.\n\n> 19: Can I use taxator-tk to quantify relative in-sample or between-sampe abundances (taxonomic profiling)?\n\nIn order to do so, you need to add sequence coverage information (for assembled sequences). There is no built-in functionality to do so. And you need to account for sequences in the input, that are not classified at all (see FAQ#20). Also note, that the depth of assignment is a function of the refpack taxonomic distribution and will be quite unbalanced.\n\n> 20: Why are some of the input sequences not listed in the final results files?\n\nThe current pipelines are only based on the aligner output. If no alignment can be found, that input sequence is swallowed by the pipeline. This behavior can change in the future. The correct assignment for these sequences would be \"unassigned\" or taxonomy root (taxID 1).\n\n> 21: I want to use a pipeline but it says that some program is missing. What can I do?\n\nThe pipelines combine taxator-tk core with other free software. Use the binary distribution or download and install the required programs before you run the pipeline. It is easiest to get pre-compiled software from the respective authors and place the binaries into the pipeline `bin` folder.\n\n> 22: What is the meaning of the support value in output files?\n\nThe support value measures sequence similarity to the best reference, which supports the classification decision, in the unit number of positions. For nucleotide sequences, this is the estimated number of matches (lower bound). For amino acid sequence, it is a more abstract similarity based on the BLOSUM62 scoring matrix. In any case, dividing the sequence length by support positions yields a simple measure of percentage similarity.\n\n> 23: I know that all my sequences come from the same organism. I want is a single classification, not one for every input sequence.\n\nThe extended pipeline scripts are made for typical metagenomic data which contain a mixture of different species. However, you can just rerun the program `binner`, which has a grouping command line parameter and is very fast, with the generated GFF3 file as input. Passing a catch-all regular expression `-g '(.*)'` will assume that all segments identified and classified in the previous calculation are from the same organism and the output will be a single classification.\n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fungs/taxator-tk/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fungs/taxator-tk"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "taxator-tk"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fungs/taxator-tk/master/core/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fungs/taxator-tk/master/extended/lib/common.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fungs/taxator-tk/master/contrib/download-verify.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/8776981/137801205-87f0a851-bbba-4484-bd80-7ab6387cba78.png"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.950778615822018,
      "result": {
        "original_header": "Sponsoring",
        "type": "Text_excerpt",
        "value": "A license for Ermine was provided free of charge by [magicermine.com](https://magicermine.com) to make the Linux 64bit binary files for download portable.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fungs/taxator-tk/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, classification, taxator-tk, taxonomic"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "taxator-tk"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fungs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 12998062,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 498907,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 450295,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 142490,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 56931,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 35876,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 29402,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fungs/taxator-tk/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2021-10-07T13:59:17Z",
        "date_published": "2021-10-07T21:06:16Z",
        "description": "Taxator-tk can now classify protein input, a sample pipeline is included in the extended version. The overall memory consumption has been reduced.\r\n\r\n### Added\r\n* core: taxator RPA algorithm with protein sequences\r\n* core: taxator reduce memory usage with large fasta index and taxonomy mapping\r\n* core: binner supports query globbing via regular expression to implement whole-genome binning\r\n* core: add transparent gzip compression of taxonomy dump files\r\n* extended: new sample pipeline using protein alignment with orfM and blastp\r\n",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.5.0",
        "name": "v1.5.0: major release",
        "release_id": 50995475,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/50995475",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/50995475",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2021-10-07T21:19:50Z",
        "date_published": "2021-10-07T21:21:54Z",
        "description": "### Fixed\r\n* core: compile with recent compiler and Boost CMake detection",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.4.1",
        "name": "v1.4.1: bugfix release",
        "release_id": 50996294,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/50996294",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/50996294",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2021-02-26T20:20:29Z",
        "date_published": "2021-10-07T21:11:51Z",
        "description": "The repo now tracks both the core and extended versions, making it easier to reproduce. The documentation was aligned with common standards and many dependencies were updated to more recent versions. The release also contains minor bugfixes and speed improvements.\r\n\r\n### Added\r\n* all: reorganized code and included extended pipeline scripts and documentation\r\n\r\n### Changed\r\n* core: backport of code changes from 1.5 branch\r\n* core: add version flags to binaries\r\n* core: seqan update to v2.4.0\r\n* core: tree.hh update to v3.7\r\n* extended: correctly detect Python2 version with two digits in patch number\r\n* extended: update KronaTools to v2.7.1\r\n* extended: update GNU parallel to v20201222\r\n* extended: align with LZA v1.9.3\r\n* extended: align with NCBI Blast 2.11.0+\r\n* extended: align with last-align v1170\r\n* extended: parallel index building and ambiguous characters with last aligner",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.4.0",
        "name": "v1.4.0: major release",
        "release_id": 50995774,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/50995774",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/50995774",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2016-04-18T15:14:46Z",
        "date_published": "2016-04-18T15:21:04Z",
        "description": "Fixes bugs introduced in 1.3.2\r\n\r\n### Changed\r\n* core: fix crashes in all LCA algorithms\r\n* core: more consistent behavior of command line parameters in taxknife\r\n* core: better error reporting",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.3.3",
        "name": "v1.3.3: bugfix release",
        "release_id": 3043022,
        "tag": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/3043022",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/3043022",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2016-04-07T08:10:41Z",
        "date_published": "2016-04-07T08:14:37Z",
        "description": "Mainly improvements for the extended version scripts. Core fixes problems with the LCA algorithms and improves general error handling.\r\n\r\n### Changed\r\n* extended: set more options via variable with LAST and BLAST\r\n* extended: refactor shell code for cleaner workflows and improve POSIX compatibility\r\n* extended: better CPU core detection via numproc command (supports containers)\r\n* extended: specification of output folder (backward-compatible behavior)\r\n",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.3.2",
        "name": "v1.3.2: bugfix release",
        "release_id": 2970023,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/2970023",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/2970023",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2015-04-16T15:13:16Z",
        "date_published": "2015-04-16T15:15:24Z",
        "description": "Large effort have been taken to improve the software when applied to large real-world datasets. We use the well-specified Bioboxes binning format as standard output.\r\n\r\n### Changed\r\n* core: rewrite of RPA with better handling of input alignments and speed improvements\r\n* core: C++11 compatibility\r\n* core: exception handling\r\n* core: bioboxes output format\r\n* core: suppress some notifications\r\n* core: much better scaling core algorithm due to homolog selection heuristic, there is no need to restrict the number of input alignments any more\r\n* extended: CPU core auto-detection, now working with Linux taskset/cpusets\r\n* extended: support for multi-core alignment with LAST (lastal-parallel wrapper script)\r\n* extended: support of parallel search with LAST by integration of GNU parallel in script lastal-parallel, uses lz4 compression of temporary data\r\n* extended: faster conversion by integration of GNU parallel in script lastmaf2alignments-parallel\r\n* extended: integration of KronaTools for interactive pie chart plotting\r\n* extended: download script for sample refpack removed, the project page will point to a location from where to download refpacks\r\n",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.3.0",
        "name": "v1.3.0: major release",
        "release_id": 1176267,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/1176267",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/1176267",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2014-07-07T15:06:24Z",
        "date_published": "2015-04-16T15:24:48Z",
        "description": "We did extensive runtime optimizations, reorganized command line tools and improved build scripts. The extended version pipelines were improved considerably.\r\n\r\n## v1.2.0\r\n### Changed\r\n* core: program taxknife substitutes name-filter and rank-filter\r\n* core: adjust data types to support longer segments\r\n* core: better approximation of identity scores + support values in binner\r\n* core: optimizations in RPA procedure\r\n* core: heuristic to avoid excessive runtime with bad alignments\r\n* core: workaround for CMake bug with boost threads linking\r\n\r\n## v1.2.1\r\n### Changed\r\n* extended: fix bug in binning-workflow-fasta-last.sh, reference FASTA index wasn't used\r\n* extended: replaced quickstart.pdf by a text-based README file\r\n\r\n## v1.2.2\r\n### Changed\r\n* extended: make reference data and aligner index location independent of installation root (easier to run it in multiuser environments)\r\n* extended: remove integrity check for data (should become part of the refpack)\r\n* extended: rename and clean all scripts\r\n* extended: change standard BLAST algorithm to \"discontiguous megablast\" for better sensitivity (increases the runtime by ~20x)\r\n",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.2.0",
        "name": "v1.2.0 to v1.2.2: major release and extended version improvements",
        "release_id": 1176313,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/1176313",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/1176313",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fungs",
          "type": "User"
        },
        "date_created": "2013-08-19T13:30:04Z",
        "date_published": "2021-10-08T20:00:33Z",
        "description": "The program version that was used in the publication.\r\n\r\n### Changed\r\n* core: publication release, many functionalities added; evaluations done on this version\r\n* core: optimized for large-memory systems\r\n* extended: sample workflow shell scripts for taxonomic binning includes microbial RefSeq with taxonomy\r\n* extended: large prepared LAST index with download script",
        "html_url": "https://github.com/fungs/taxator-tk/releases/tag/v1.0.0",
        "name": "v1.0.0: major release",
        "release_id": 51058065,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/fungs/taxator-tk/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/fungs/taxator-tk/releases/51058065",
        "value": "https://api.github.com/repos/fungs/taxator-tk/releases/51058065",
        "zipball_url": "https://api.github.com/repos/fungs/taxator-tk/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contributors",
    "license",
    "usage",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:40:01",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}