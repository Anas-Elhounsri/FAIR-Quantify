{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mfitzp/padua"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-16T09:46:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T18:49:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Proteomic Data Analysis with Python (pandas, scikit-learn, numpy, scipy)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9938668929980182,
      "result": {
        "original_header": "What is it for?",
        "type": "Text_excerpt",
        "value": "The goal is to provide a simple scripting approach to replicate many of the common steps for interacting with the output\nof MaxQuant. Many of the steps implemented are based on similar steps used in the MaxQuant sister software \n[Perseus](http://141.61.102.17/perseus_doku/). While currently Perseus has more features, it has stability issues with\nthe larger datasets we are currently using. Having the processing steps implemented in Python allows for simple \nprocessing workflow scripts to be created and re-used.\n \n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9974677123421791,
      "result": {
        "type": "Text_excerpt",
        "value": "A Python package for Proteomic Data Analysis, offering processing and analysis of the output of proteomics software . \n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mfitzp/padua/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mfitzp/padua/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mfitzp/padua"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mfitzp/padua/master/PaDuA.png"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "PaDuA is available via the Python package index at [PyPi](http://pypi.org) and can be installed in the usual way with:\n\n    pip install padua\n    \nOnce installed the package is available for import using:\n\n    import padua\n    \nThe package is organised into multiple submodules for different purposes, eg.\n\n1. `io` for reading and writing both MaxQuant and Perseus format files (input/output)\n1. `filters` for filtering data by quality and features\n1. `process` incorporating experimental design, labels to index, expand-side-table (Perseus) and more\n1. `normalization` for performing normalisation methods, e.g. remove column median\n1. `annotations` adding annotation metadata for quantified proteins\n1. `analysis` performing simple analyses, e.g. column correlations\n1. `plots` standard plot outputs for overviews of data\n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mfitzp/padua/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause \"Simplified\" License",
        "spdx_id": "BSD-2-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-2-clause",
        "value": "https://api.github.com/licenses/bsd-2-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2015, Martin Fitzpatrick\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "PaDuA is open source software and available under the BSD 2-clause (Simplified) license.\n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "padua"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mfitzp"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 126102,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:26:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "An example Phosphoproteomic label-free-quantification workflow would be as follows:\n\n    import padua\n    df = padua.io.read_maxquant('Phospho (STY)Sites.txt')\n\n    df = padua.filter.filter_localization_probability(df)\n\n    df = padua.filter.remove_reverse(df)\n    df = padua.filter.remove_only_identified_by_site(df)\n    df = padua.filter.remove_potential_contaminants(df)\n\n    # Use standard Pandas dataframe manipulations to set an index\n    df.set_index('Proteins', inplace=True)\n    df = df.filter(regex='Intensity ')\n\n    df = df.process.expand_side_table(df)\n\n    # Remove the multiplicity column\n    df = df.filter(regex='Intensity ')\n\n    df = padua.process.apply_experimental_design(df, 'experimentalDesignTable.txt')\n\n    # The result of this step will be a multilevel index Class, Replicate\n    # built by matching sample labels using regex\n    indices = [\n        ('Class': '^(.*)_',\n        ('Replicate': '_(\\d)', \n    ]\n    df = padua.process.build_index_from_labels(df, indices)\n"
      },
      "source": "https://raw.githubusercontent.com/mfitzp/padua/master/README.md",
      "technique": "header_analysis"
    }
  ]
}