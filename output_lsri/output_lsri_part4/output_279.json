{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "*Citation*",
        "parent_header": [
          "**CRUP - Short Description**"
        ],
        "type": "Text_excerpt",
        "value": "I you are using CRUP, please cite the following publication:\n\nhttps://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1860-7\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VerenaHeinrich/CRUP"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "*Contact*",
        "parent_header": [
          "**CRUP - Short Description**"
        ],
        "type": "Text_excerpt",
        "value": "heinrich@molgen.mpg.de\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-12T15:31:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-03T15:19:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRUP collapses different layers of epigenetic information into a single list of regulatory units consisting of dynamically changing enhancers and target genes."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**CRUP - Short Description**",
        "type": "Text_excerpt",
        "value": "CRUP ([C]ondition-specific [R]egulatory [U]nits [P]rediction) is a workflow consisting of three \nmain steps (CRUP - EP, CRUP - ED, CRUP - ED) and an additonal pre-preparing step (CRUP - normalize),\nwhereas each step build upon one another.\nCRUP collapses different layers of epigenetic information into a single list of regulatory units\nconsisting of dynamically changing enhancers and target genes.\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "General workflow",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "CRUP-normalize -> CRUP-EP -> CRUP-ED -> CRUP-ET\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - normalize",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "This function (input) normalizes and summarizes read counts from ChIP-seq experiments in a\n(100 bp) binned genome.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - EP:  (E)nhancer (P)rediction",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "The random forest-based enhancer classifier CRUP-EP (Enhancer Prediction) was developed so that \nit can be applied across different cell types and species without the need of being re-trained.\nTo guarantee a good transferability, binned ChIP-seq counts are quantile normalized to the \nsample that was used to train the classifier.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - ED: (E)nhancer (D)ynamics",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "CRUP-ED (Enhancer Dynamics) is based on enhancer probabilities and identifies\ncondition-specific ('dynamic') enhancer regions by applying a permutation test.\nUsing empricial p-values, pattern of pairwise significance are build to cluster\nadjacent regions.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - ET: (E)nhancer (T)argets",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "The method CRUP - ET (Enhancer Targets) was developed to correlate condition-specific enhancers\nto normalized RNA-seq experiments.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "R PACKAGES",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "All required R packages are installed at the first run.\\\nNothing needs to be installed manually.\n\n> Overview of all packages:\n> \n> getopt\\\n> bamsignals\\\n> Rsamtools\\\n> BSgenome.Mmusculus.UCSC.mm9 # when using genome mm9\\\n> BSgenome.Mmusculus.UCSC.mm10 # when using genome mm10\\\n> BSgenome.Hsapiens.UCSC.hg19 # when using genome hg19\\\n> BSgenome.Hsapiens.UCSC.hg38 # when using genome hg38\\\n> GenomeInfoDb\\ # when providing an alternative genome\n> preprocessCore\\\n> randomForest\\\n> GenomicRanges\\\n> rtracklayer\\\n> ggplot2\\\n> dplyr\\\n> matrixStats\\\n> parallel\\\n> GenomicFeatures\\\n> GenomicAlignments\\\n> DESeq2\\\n> TxDb.Mmusculus.UCSC.mm10.knownGene\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VerenaHeinrich/CRUP/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VerenaHeinrich/CRUP/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VerenaHeinrich/CRUP"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRUP - Short Description"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparation:",
        "parent_header": [
          "**CRUP - Short Description**"
        ],
        "type": "Text_excerpt",
        "value": "The only preparation that has to be done is to create a tab delimited info file that lists\nthe location of all ChIP-seq experiments in bam file format.\nAll bam files have to be indexed.\nThe following histone modifications must be present:\\\n'H3K27ac', 'H3K4me1', 'H3K4me3' (and 'Input')\n\nThe required column names are: 'feature', 'bam_file', 'bam_file_input'\n\nfeature         : lists histone modifications\\\nbam_file        : location of the alignments in bam format, e.g.: 'TEST/DATA/ChIPseq/condition1.H3K27ac.bam'\\\nbam_file_input  : location of the Input experiments that are associated with each bam_file entry. \n\nExample info files:\n\nTEST/condition1.info.txt\\\nTEST/condition2.info.txt\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VerenaHeinrich/CRUP/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRUP"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "VerenaHeinrich"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 77789,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "VerenaHeinrich",
          "type": "User"
        },
        "date_created": "2019-10-02T12:39:51Z",
        "date_published": "2019-10-02T12:46:48Z",
        "description": "CRUP 1.0",
        "html_url": "https://github.com/VerenaHeinrich/CRUP/releases/tag/1.0",
        "name": "CRUP 1.0",
        "release_id": 20412909,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/VerenaHeinrich/CRUP/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/VerenaHeinrich/CRUP/releases/20412909",
        "value": "https://api.github.com/repos/VerenaHeinrich/CRUP/releases/20412909",
        "zipball_url": "https://api.github.com/repos/VerenaHeinrich/CRUP/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "General workflow",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "CRUP-normalize -> CRUP-EP -> CRUP-ED -> CRUP-ET\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - normalize",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "This function (input) normalizes and summarizes read counts from ChIP-seq experiments in a\n(100 bp) binned genome.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - EP:  (E)nhancer (P)rediction",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "The random forest-based enhancer classifier CRUP-EP (Enhancer Prediction) was developed so that \nit can be applied across different cell types and species without the need of being re-trained.\nTo guarantee a good transferability, binned ChIP-seq counts are quantile normalized to the \nsample that was used to train the classifier.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - ED: (E)nhancer (D)ynamics",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "CRUP-ED (Enhancer Dynamics) is based on enhancer probabilities and identifies\ncondition-specific ('dynamic') enhancer regions by applying a permutation test.\nUsing empricial p-values, pattern of pairwise significance are build to cluster\nadjacent regions.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CRUP - ET: (E)nhancer (T)argets",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "The method CRUP - ET (Enhancer Targets) was developed to correlate condition-specific enhancers\nto normalized RNA-seq experiments.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "R PACKAGES",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "All required R packages are installed at the first run.\\\nNothing needs to be installed manually.\n\n> Overview of all packages:\n> \n> getopt\\\n> bamsignals\\\n> Rsamtools\\\n> BSgenome.Mmusculus.UCSC.mm9 # when using genome mm9\\\n> BSgenome.Mmusculus.UCSC.mm10 # when using genome mm10\\\n> BSgenome.Hsapiens.UCSC.hg19 # when using genome hg19\\\n> BSgenome.Hsapiens.UCSC.hg38 # when using genome hg38\\\n> GenomeInfoDb\\ # when providing an alternative genome\n> preprocessCore\\\n> randomForest\\\n> GenomicRanges\\\n> rtracklayer\\\n> ggplot2\\\n> dplyr\\\n> matrixStats\\\n> parallel\\\n> GenomicFeatures\\\n> GenomicAlignments\\\n> DESeq2\\\n> TxDb.Mmusculus.UCSC.mm10.knownGene\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run CRUP - norm",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:"
        ],
        "type": "Text_excerpt",
        "value": "Run 'Rscript CRUP.R -N ' to see all possible input parameters.\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example run:",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:",
          "Run CRUP - ED"
        ],
        "type": "Text_excerpt",
        "value": "This function (input) normalizes and summarizes read counts from ChIP-seq experiments in a (100 bp) binned genome.\nThe ChIP-seq experiments are listed in the required info file 'condition1.info.txt'.\n\nRun 'Rscript CRUP.R -N -i TEST/condition1.info.txt -g mm10 -s paired -o TEST/RESULTS/0_NORMALIZED_DATA/'\n\nOutput:\n\n> Input normalized and summarized counts in rds file format:\\\n'TEST/RESULTS/0_NORMALIZED_DATA/condition1.data_matrix.rds'\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run CRUP - EP",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:"
        ],
        "type": "Text_excerpt",
        "value": "Run 'Rscript CRUP.R -P' to see all possible input parameters.\n\n    \n#### Example run:\n\nRun 'Rscript CRUP.R -P -m TEST/RESULTS/0_NORMALIZED_DATA/condition1.data_matrix.rds -o TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/'\n\nOutput:\n\n> 1. enhancer probabilities for each 100 bp bin in the genome (bigwig (.bw) and .rds fileformat):\n> 'TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/prediction.bw'\\\n> 'TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/prediction.rds'\n> 2. enhancer peak calls (bedgraph format):\\\n> 'TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/singleEnh.bedGraph'\n> 3. cluster of peak (bedgraph format):\\\n> 'TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/clusterEnh.bed'\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run CRUP - ED",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:"
        ],
        "type": "Text_excerpt",
        "value": "Run 'Rscript CRUP.R -D' to see all possible input parameters.\n\n\n#### Example run:\n\nStep 1: \\\npredict enhancers in another condition (e.g. 'condition2').\n\nA) Run 'Rscript CRUP.R -N -i TEST/condition2.info.txt -g mm10 -s paired -o TEST/RESULTS/0_NORMALIZED_DATA/'\n\nB) Run 'Rscript CRUP.R -P -m TEST/RESULTS/0_NORMALIZED_DATA/condition2.data_matrix.rds -o TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_2/'\n\nStep 2:\\\nidentify condition-specific enhancer regions.\n\nRun 'Rscript CRUP.R -D -p TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_1/prediction.rds,TEST/RESULTS/1_RF_PREDICTIONS/CONDITION_2/prediction.rds -o TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/ -l cond1,cond2'\n\nOutput:\n\n> 1. summarized condition-specific enhancer regions, visualized as a heatmap (.pdf, and .png):\\\n>'TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/dynamicEnh__w0_0.5__threshold_0.05.pdf'\n>  \t- main clusters (1,2, ..) are additionally highlighted on the right border. These clusters describe dynamic enhancer regions that are active on just one condition.\n>  \t- Cluster 'U' describes enhancer regions that are active in all conditions.\n\n> 2. summarized condition-specific enhancer regions:\\\n> 'TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/dynamicEnh__w0_0.5__threshold_0.05.txt'\n> \t- 'best.p.value' : lowest empirical pvalue in condition-specfic enhancer region\\\n> \t- 'cluster'\t : cluster obtained from significance pattern\\\ndynamic enhancer cluster that do not belong to the main clusters (1,2, ..) or cluster 'U' start with an 'r' ('remaining')\n> \t- highest enhancer probability values for each region per sample\n> 3. all condition-specific enhancer regions in bed file format:\\\n> 'TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/dynamicEnh__w0_0.5__threshold_0.05.bed'\n> 4. the main clusters (1,2, ..) and cluster 'U' ('ubiquitous') are additionally exported as separated .bed files\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run CRUP - ET",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:"
        ],
        "type": "Text_excerpt",
        "value": "Run 'Rscript CRUP.R -T' to see all possible input parameters.\n\n\nA) Example run with RNA-seq experiments in bam file format:\\\n\nRun 'Rscript CRUP.R -T -r TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/dynamicEnh__w0_0.5__threshold_0.05.txt -g mm10 -s paired -E TEST/DATA/RNAseq/Condition1.bam,TEST/DATA/RNAseq/Condition2.bam -o TEST/RESULTS/3_REGULATORY_REGIONS/ -l cond1,cond2'\n\nOutput:\n\n> 1. normalized gene expression counts:\\\n> 'gene_expression.rds'\n> 2. dynamic regulatory units in txt format:\\\n> 'RegulatoryUnits.txt'\n>  - 'seqnames'            : chr of dynamic enhancer region\n>  - 'start'               : start of dynamic enhancer region\n>  - 'end'                 : end of dynamic enhancer region\n>  - 'width'               : width of dynamic enhancer region\n>  - 'strand'              : strand of dynamic enhancer region\n>  - 'cluster'             : associated cluster of dynamic enhancer region\n>  - 'TAD_COORDINATES'     : coordinates of topologically associated domain around dynamic enhancer region\n>  - 'CORRELATED_GENE'     : ID of the gene that is correlated with dynamic enhancer region\n>  - 'CORRELATION'         : correlation value\n>  - best probability values for each region per sample\n> 3. dynamic regulatory units in (ucsc) interaction format:\\\n> 'RegulatoryUnits.interaction'\n\n\nB) Example run with already summarized RNA-seq experiments:\n\nRun 'Rscript CRUP.R -T -r TEST/RESULTS/2_DIFFERENTIAL_ENHANCERS/dynamicEnh__w0_0.5__threshold_0.01.txt -e TEST/RESULTS/3_REGULATORY_REGIONS/gene_expression.rds -o TEST/RESULTS/3_REGULATORY_REGIONS/ -l cond1,cond2'\n\nOutput:\n\n> Same output as in A), just without 'gene_expression.rds'.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:43:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get the help message",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "Navigate to 'CRUP' directory and type 'Rscript CRUP.R' or 'Rscript CRUP.R -h' to see all possible functions of CRUP:\n\n>Usage: CRUP.R [-[-norm|N]] [-[-prediction|P]] [-[-dynamics|D]] [-[-targets|T]] [-[-help|h]]\\\n>    -N|--norm          computes normalized count values for .bam files\\\n>    -P|--prediction    runs CRUP - EP: (E)nhancer (P)rediction from histone modification\\\n>    -D|--dynamics      runs CRUP - ED: assigns (E)nhancer to (D)ynamic conditions\\\n>    -T|--targets       runs CRUP - ET: correlates (E)nhancer to (T)arget genes\\\n>    -h|--help          this help message\n\n    "
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get the help message",
        "parent_header": [
          "**CRUP - Short Description**",
          "**Run CRUP**"
        ],
        "type": "Text_excerpt",
        "value": "Navigate to 'CRUP' directory and type 'Rscript CRUP.R' or 'Rscript CRUP.R -h' to see all possible functions of CRUP:\n\n>Usage: CRUP.R [-[-norm|N]] [-[-prediction|P]] [-[-dynamics|D]] [-[-targets|T]] [-[-help|h]]\\\n>    -N|--norm          computes normalized count values for .bam files\\\n>    -P|--prediction    runs CRUP - EP: (E)nhancer (P)rediction from histone modification\\\n>    -D|--dynamics      runs CRUP - ED: assigns (E)nhancer to (D)ynamic conditions\\\n>    -T|--targets       runs CRUP - ET: correlates (E)nhancer to (T)arget genes\\\n>    -h|--help          this help message\n\n    "
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example run:",
        "parent_header": [
          "**CRUP - Short Description**",
          "Preparation:",
          "Run CRUP - ED"
        ],
        "type": "Text_excerpt",
        "value": "This function (input) normalizes and summarizes read counts from ChIP-seq experiments in a (100 bp) binned genome.\nThe ChIP-seq experiments are listed in the required info file 'condition1.info.txt'.\n\nRun 'Rscript CRUP.R -N -i TEST/condition1.info.txt -g mm10 -s paired -o TEST/RESULTS/0_NORMALIZED_DATA/'\n\nOutput:\n\n> Input normalized and summarized counts in rds file format:\\\n'TEST/RESULTS/0_NORMALIZED_DATA/condition1.data_matrix.rds'\n\n"
      },
      "source": "https://raw.githubusercontent.com/VerenaHeinrich/CRUP/master/README.md",
      "technique": "header_analysis"
    }
  ]
}