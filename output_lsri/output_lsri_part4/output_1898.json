{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2012-05-15T01:05:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-20T23:19:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "High throughput sequencing analysis tools"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.914839654662699,
      "result": {
        "original_header": "Nesoni",
        "type": "Text_excerpt",
        "value": "With the closure of the Victorian Bioinformatics Consortium, I anticipate little further development on Nesoni. \nNesoni still serves as the basis for \"Tail Tools\", which remains under development. The parallel processing code is also used by \"Demakein\". \n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.980886082609485,
      "result": {
        "original_header": "What Nesoni does",
        "type": "Text_excerpt",
        "value": "Nesoni is a high-throughput sequencing data analysis toolset, which the Victorian Bioinformatics Consortium developed to cope with the flood of Illumina, 454, and SOLiD data being produced.  \nThe VBC's work was largely with bacterial genomes, and the design tradeoffs in Nesoni reflect this. \nNesoni focusses on analysing the alignment of reads to a reference genome. Use of the SHRiMP and Bowtie2 read aligners is automated by nesoni. We use SHRiMP as it is able to detect small insertions and deletions in addition to SNPs. Output from other aligners may be imported in SAM format. \nNesoni can call a consensus of read alignments, taking care to indicate ambiguity. This can then be used in various ways: to determine the protein level changes resulting from SNPs and indels, to find differences between multiple strains, or to produce n-way comparison data suitable for phylogenetic analysis in SplitsTree4. \n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Victorian-Bioinformatics-Consortium/nesoni"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nesoni"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The easy way to install or upgrade:\n\n    pip install -I nesoni\n\nThen type \"nesoni\" and follow the command to install the R module.\n\nSee below for more ways to install nesoni.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced Installation",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "From source, download and untar the source tarball, then:\n\n    python setup.py install\n\nOptional:\n\n    R CMD INSTALL nesoni/nesoni-r\n\n\nFor PyPy it seems to be currently easiest to install nesoni in \na virtualenv:\n\n    virtualenv -p pypy my-pypy-env\n    my-pypy-env/bin/pip install -I git+https://bitbucket.org/pypy/numpy.git\n    my-pypy-env/bin/pip install -I biopython \n    my-pypy-env/bin/pip install -I nesoni\n\nYou can also set up a CPython virtualenv like this:\n\n    virtualenv my-python-env\n    my-python-env/bin/pip install -I numpy \n    my-python-env/bin/pip install -I matplotlib \n    my-python-env/bin/pip install -I biopython \n    my-python-env/bin/pip install -I nesoni\n\n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9386760490352086,
      "result": {
        "original_header": "Using nesoni",
        "type": "Text_excerpt",
        "value": "for usage instructions. \nnesoni can also be used without installing, from the directory in\nwhich you unpacked it: \n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nesoni"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Victorian-Bioinformatics-Consortium"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 896188,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 55432,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pfh",
          "type": "User"
        },
        "date_created": "2020-07-04T01:57:34Z",
        "date_published": "2020-07-04T02:49:14Z",
        "html_url": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases/tag/v0.134",
        "name": "0.134",
        "release_id": 28214617,
        "tag": "v0.134",
        "tarball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/tarball/v0.134",
        "type": "Release",
        "url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/28214617",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/28214617",
        "zipball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/zipball/v0.134"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pfh",
          "type": "User"
        },
        "date_created": "2018-04-10T04:35:24Z",
        "date_published": "2018-04-10T04:37:46Z",
        "description": "A variety of bugfixes.\r\n\r\nNote that at this stage nesoni mostly exists to support Tail Tools. The author is no longer actively working with bacterial data sets.",
        "html_url": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases/tag/v0.133",
        "name": "0.133",
        "release_id": 10468037,
        "tag": "v0.133",
        "tarball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/tarball/v0.133",
        "type": "Release",
        "url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/10468037",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/10468037",
        "zipball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/zipball/v0.133"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pfh",
          "type": "User"
        },
        "date_created": "2015-11-11T06:21:31Z",
        "date_published": "2015-11-11T06:23:02Z",
        "description": "Changes mostly for tail-tools benefit.\n",
        "html_url": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases/tag/v0.132",
        "name": "0.132 release",
        "release_id": 2106716,
        "tag": "v0.132",
        "tarball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/tarball/v0.132",
        "type": "Release",
        "url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/2106716",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/2106716",
        "zipball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/zipball/v0.132"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pfh",
          "type": "User"
        },
        "date_created": "2015-03-15T21:44:48Z",
        "date_published": "2015-03-15T21:48:03Z",
        "description": "~\n",
        "html_url": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases/tag/v0.130",
        "name": "0.130",
        "release_id": 1052794,
        "tag": "v0.130",
        "tarball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/tarball/v0.130",
        "type": "Release",
        "url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/1052794",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/1052794",
        "zipball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/zipball/v0.130"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pfh",
          "type": "User"
        },
        "date_created": "2015-01-22T09:12:57Z",
        "date_published": "2015-02-02T02:56:33Z",
        "description": "Don't require SplitsTree\n",
        "html_url": "https://github.com/Victorian-Bioinformatics-Consortium/nesoni/releases/tag/v0.129",
        "release_id": 906589,
        "tag": "v0.129",
        "tarball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/tarball/v0.129",
        "type": "Release",
        "url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/906589",
        "value": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/releases/906589",
        "zipball_url": "https://api.github.com/repos/Victorian-Bioinformatics-Consortium/nesoni/zipball/v0.129"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "Python 2.7 or higher. Use of PyPy where possible is highly recommended \nfor performance.\n\nPython libraries\n* Recommended:\n  * BioPython [1]\n* Optional (used by non-core nesoni tools):\n  * numpy\n  * matplotlib\n\nExternal programs:\n* Required:\n  * SHRiMP or Bowtie2\n  * samtools (0.1.19 or higher)\n* Required for VCF based variant calling:\n  * Picard [2]\n  * Freebayes (9.9.2 or higher)\n* Optional for VCF based variant calling:\n  * SplitsTree4\n\nR libraries required by R-based tools (mostly for RNA-seq):\n* Required:\n  * varistran from https://github.com/MonashBioinformaticsPlatform/varistran\n  * limma, edgeR (3.2.4 or higher) from BioConductor\n  * seriation from CRAN\n* Optional:\n  * goseq from BioConductor\n\n\n[1] BioPython is used for reading GenBank files.\n\n[2] There does not seem to be a standard way to install .jar files. \n    Nesoni will search for .jar files in directories listed in \n    environment variables $PATH and $JARPATH.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Victorian-Bioinformatics-Consortium/nesoni/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:39:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ]
}