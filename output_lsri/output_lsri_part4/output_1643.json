{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "NextSV",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Fang, L., Hu, J., Wang, D. et al. NextSV: a meta-caller for structural variants from low-coverage long-read sequencing data. BMC Bioinformatics 19, 180 (2018). https://doi.org/10.1186/s12859-018-2207-1\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimap2",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Li, H. Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics, 34:3094-3100 (2018). https://doi.org/10.1093/bioinformatics/bty191\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Winnowmap",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Jain, C., Rhie, A., Hansen, N.F., Koren, S., and Phillippy, A.M. (2022). Long-read mapping to repetitive reference sequences using Winnowmap2. Nat Methods 19, 705-710. https://doi.org/10.1038/s41592-022-01457-8\n\nJain, C., Rhie, A., Zhang, H., Chu, C., Walenz, B.P., Koren, S., and Phillippy, A.M. (2020). Weighted minimizer sampling improves long read mapping. Bioinformatics 36, i111-i118. https://doi.org/10.1093/bioinformatics/btaa435\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "NGMLR and Sniffles",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Sedlazeck, F.J., Rescheneder, P., Smolka, M. et al. Accurate detection of complex structural variations using single-molecule sequencing. Nat Methods 15, 461\u2013468 (2018). https://doi.org/10.1038/s41592-018-0001-7\n\nSmolka, M., Paulin, L.F., Grochowski, C.M., Mahmoud, M., Behera, S., Gandhi, M., Hong, K., Pehlivan, D., Scholz, S.W., Carvalho, C.M.B., et al. (2022). Comprehensive Structural Variant Detection: From Mosaic to Population-Level. bioRxiv. https://doi.org/10.1101/2022.04.04.487055 \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "CuteSV",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Jiang, T., Liu, Y., Jiang, Y. et al. Long-read-based human genomic structural variation detection with cuteSV. Genome Biol 21, 189 (2020). https://doi.org/10.1186/s13059-020-02107-y\n\nCao, S., Jiang, T., Liu, Y., Liu, S., and Wang, Y. (2022). Re-genotyping structural variants through an accurate force-calling method. bioRxiv. https://doi.org/10.1101/2022.04.04.487055 \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Samtools",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": "Petr Danecek, James K Bonfield, Jennifer Liddle, John Marshall, Valeriu Ohan, Martin O Pollard, Andrew Whitwham, Thomas Keane, Shane A McCarthy, Robert M Davies, Heng Li, Twelve years of SAMtools and BCFtools, GigaScience, Volume 10, Issue 2, February 2021, giab008, https://doi.org/10.1093/gigascience/giab008\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Contributor Code of Conduct\n\nAs contributors and maintainers of this project, we pledge to respect all\npeople who contribute through reporting issues, posting feature requests,\nupdating documentation, submitting pull requests or patches, and other\nactivities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual\nlanguage or imagery, derogatory comments or personal attacks, trolling, public\nor private harassment, insults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct. Project maintainers or\ncontributors who do not follow the Code of Conduct may be removed from the\nproject team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by opening an issue or contacting the maintainer via email.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][cc], [version\n1.0.0][v1].\n\n[cc]: http://contributor-covenant.org/\n[v1]: http://contributor-covenant.org/version/1/0/0/\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/minimap2/code_of_conduct.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Nextomics/nextsv"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools"
        ],
        "type": "Text_excerpt",
        "value": "If you have any questions/suggestions, please feel free to post it on the [Issue page](https://github.com/Nextomics/nextsv/issues). You may also email me at `fangli80@foxmail.com`. \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Mark Adler\nJyrki Alakuijala\nFr\u00e9d\u00e9ric Kayser\nDaniel Reed\nHuzaifa Sidhpurwala\nP\u00e9ter Szab\u00f3\nLode Vandevenne\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/pigz/zopfli/CONTRIBUTORS",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-05T05:30:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-24T08:15:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9827717548194562,
      "result": {
        "original_header": "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
        "type": "Text_excerpt",
        "value": "NextSV3 uses [Minimap2](https://github.com/lh3/minimap2)/[Winnowmap](https://github.com/marbl/Winnowmap)/[NGMLR](https://github.com/philres/ngmlr) to do read mapping and uses two state-of-the-art SV callers ([Sniffles2](https://github.com/fritzsedlazeck/Sniffles) and [cuteSV2](https://github.com/tjiangHIT/cuteSV)) to do SV calling.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8504608544870994,
      "result": {
        "original_header": "Open source software tools included in this repository",
        "type": "Text_excerpt",
        "value": "To provide consistent output and better user experience, we included some open source software tools.  \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Nextomics/NextSV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Nextomics/nextsv/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nextomics/nextsv"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/ngmlr/docker/ngmlr/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/ngmlr/docker/ngmlr/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/ngmlr/docker/build-env/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/ngmlr/docker/build-env/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/src/utility/src/utility/libbacktrace/make.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/src/utility/scripts/build_initial_repo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/scripts/build-initial-meryl-repo.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/scripts/merge-meryl-canu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/scripts/buildRelease.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/external_src/Winnowmap/ext/meryl/scripts/build-initial-canu-repo.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools"
        ],
        "type": "Text_excerpt",
        "value": "**Prerequisites**\n- Operating System: Linux\n- Python 3.8 or later\n- [samtools](https://github.com/samtools/samtools) (v1.9 or later)\n- [sniffles](https://github.com/fritzsedlazeck/Sniffles) (v2.0.7 or later)\n- [cuteSV](https://github.com/tjiangHIT/cuteSV) (v2.0.1 or later)\n\nConda environment is not required but we highly recommend you install the prerequisites in a new conda environment to avoid potential dependency issues. \n\n```\nconda create -n nextsv3 python=3.8\nconda activate nextsv3\npip install \"setuptools<58.0\"\npip install sniffles\npip install cuteSV\n```\n\n**Installation of NextSV3**\n\nIf your OS is Linux, you can acquire precompiled binaries from the [release page](https://github.com/Nextomics/nextsv/releases) with:\n\n```\nwget https://github.com/Nextomics/nextsv/releases/download/v3.2.0/NextSV-3.2.0-linux-x86_64.tar.gz\ntar xzf NextSV-3.2.0-linux-x86_64.tar.gz\n```\n\nIf you want to compile from the source code, you need to have the following tools/libraries installed:\n- GCC (v7.0 or later)\n- GNU make\n- CMake\n- zlib development files \n\n**You may encounter problems during the compilation process if your operating system is missing any of the above tools/libraries,  and we strongly recommend using our pre-compiled binaries if your operating system is Linux.**\n\nTo compile NextSV from source: \n```\ngit clone https://github.com/Nextomics/nextsv.git\ncd nextsv\nmake\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.998083881578065,
      "result": {
        "original_header": "Open source software tools included in this repository",
        "type": "Text_excerpt",
        "value": "**LongReadQC** https://github.com/fangli80/longreadqc \n**Seqtk**\nhttps://github.com/lh3/seqtk \n**Minimap2**\nhttps://github.com/lh3/minimap2 \n**NGMLR**\nhttps://github.com/philres/ngmlr \n**pigz**\nhttps://github.com/madler/pigz \n**Winnowmap**\nhttps://github.com/marbl/Winnowmap\n \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Nextomics/nextsv/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2016-2023 Nextomics Biosciences Co., Ltd.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nextsv"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Nextomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 6692348,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 975000,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 120635,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 91463,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 59030,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 30673,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 27007,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 26172,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 12310,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2972,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1820,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1095,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2023-11-05T10:04:55Z",
        "date_published": "2023-11-05T10:29:43Z",
        "description": "Fix a bug for PacBio HiFi reads\r\n",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/v3.2.0",
        "name": "NextSV-3.2.0",
        "release_id": 128023092,
        "tag": "v3.2.0",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/v3.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/128023092",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/128023092",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/v3.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2023-08-05T17:57:30Z",
        "date_published": "2023-08-05T18:00:49Z",
        "description": "This version add ngmlr to the pipeline.\r\nThe binary files are attached.",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/v3.1.0",
        "name": "NextSV-3.1.0",
        "release_id": 115324018,
        "tag": "v3.1.0",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/v3.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/115324018",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/115324018",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/v3.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2023-04-02T18:10:59Z",
        "date_published": "2023-04-02T18:18:46Z",
        "description": "1) updated `longreadqc`\r\n2) modified installation instructions for sniffles and cuteSV",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/v3.0.2",
        "name": "NextSV-3.0.2",
        "release_id": 97773630,
        "tag": "v3.0.2",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/v3.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/97773630",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/97773630",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/v3.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2022-10-23T10:47:08Z",
        "date_published": "2022-10-23T10:48:25Z",
        "description": "add support for PacBio HiFi and CLR reads",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/v3.0.1",
        "name": "NextSV-3.0.1",
        "release_id": 80726773,
        "tag": "v3.0.1",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/v3.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/80726773",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/80726773",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/v3.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2022-10-22T18:38:50Z",
        "date_published": "2022-10-22T18:51:25Z",
        "description": "added support for sniffles v2\r\nadded a new SV caller (cuteSV) to the pipeline. \r\n",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/v3.0.0",
        "name": "NextSV-3.0.0",
        "release_id": 80708475,
        "tag": "v3.0.0",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/v3.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/80708475",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/80708475",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/v3.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fangli80",
          "type": "User"
        },
        "date_created": "2019-01-18T15:41:22Z",
        "date_published": "2019-01-18T15:42:17Z",
        "description": "This version is DEPRECATED.",
        "html_url": "https://github.com/Nextomics/nextsv/releases/tag/nextsv-1.9.0",
        "name": "nextsv-1.9.0",
        "release_id": 15057307,
        "tag": "nextsv-1.9.0",
        "tarball_url": "https://api.github.com/repos/Nextomics/nextsv/tarball/nextsv-1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Nextomics/nextsv/releases/15057307",
        "value": "https://api.github.com/repos/Nextomics/nextsv/releases/15057307",
        "zipball_url": "https://api.github.com/repos/Nextomics/nextsv/zipball/nextsv-1.9.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:48:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Aligners",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The default aligner is `minimap2` as it is faster. But you can use the `-a`/`--aligners` argument to specifiy aligners. \nYou can use any combination of the following 3 aligners: `minimap2`, `winnowmap`, `ngmlr` (separated by the `+` sign):\n\n```\n# use minimap2 only (default) \n-a minimap2\n\n# use minimap2 and winnowmap\n-a minimap2+winnowmap\n\n# use minimap2, winnowmap and ngmlr\n-a minimap2+winnowmap+ngmlr\n\n# use winnowmap and ngmlr\n-a winnowmap+ngmlr\n\n# use minimap2 and ngmlr\n-a minimap2+ngmlr\n\n# use ngmlr only\n-a ngmlr\n\n# use minimap2 only\n-a minimap2\n```\n\nPlease note that if you use more aligners, it would take more time to finish the pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Example",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\n# PacBio HiFi reads\npython path/to/nextsv3.py -a minimap2+winnowmap+ngmlr -i path/to/fastq/folder/ -o ./nextsv_output -s unique_sample_name -r path/to/hg38.fasta -t 8 -p hifi -e nextsv3\n\n# PacBio CLR reads\npython path/to/nextsv3.py -a minimap2+winnowmap+ngmlr -i path/to/fastq/folder/ -o ./nextsv_output -s unique_sample_name -r path/to/hg38.fasta -t 8 -p clr -e nextsv3\n\n# Oxford Nanopore reads\npython path/to/nextsv3.py -a minimap2+winnowmap+ngmlr -i path/to/fastq/folder/ -o ./nextsv_output -s unique_sample_name -r path/to/hg38.fasta -t 8 -p ont -e nextsv3\n```\n\nMemory consumption of the pipeline depends on number of threads and the size of the reference genome. For human genomes (3Gb), we recommend 4GB memory per thread. \n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "NextSV will generate a `work.sh` in the output directory. Run this `work.sh` and you will get output files. SV calls of sniffles and cuteSV will be generated in the `out_dir/3_SV_calls` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Full Usage",
        "parent_header": [
          "NextSV3: automated structrual variation detection from long-read sequencing using state-of-the-art tools",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: nextsv3.py [-h] -i path/to/input_dir -o path/to/output_dir -s sample_name -r ref.fasta -p sequencing_platform -a aligners_to_use [-t INT]\n                  [-e conda_env] [--samtools path/to/samtools] [--sniffles path/to/sniffles] [--cuteSV path/to/cuteSV]\n                  [--minimap2 path/to/minimap2] [-v]\n\nnextsv3: an automated pipeline for structrual variation detection from long-read sequencing. Contact: Li Fang(fangli2718@gmail.com)\n\noptions:\n  -h, --help            show this help message and exit\n  -i path/to/input_dir, --in_dir path/to/input_dir\n                        (required) path to input FASTQ/FASTA directory (all fastq/fasta files in this directory will be used as input files)\n  -o path/to/output_dir, --out_dir path/to/output_dir\n                        (required) path to output fastq directory\n  -s sample_name, --sample_name sample_name\n                        (required) a unique name or id for the input sample\n  -r ref.fasta, --ref_fasta ref.fasta\n                        (required) path to reference genome sequence in FASTA format\n  -p sequencing_platform, --platform sequencing_platform\n                        (required) sequencing platform. Three valid values: ont/clr/hifi ont: oxford nanopore; clr: PacBio CLR; hifi: PacBio\n                        HiFi/CCS\n  -a aligners_to_use, --aligners aligners_to_use\n                        (optional) which aligner(s) to use. Three supported aligners: minimap2, ngmlr, winnowmap. Use \"+\" to combine multiple\n                        aligners. Examples: minimap2+ngmlr, winnowmap+minimap2, minimap2+ngmlr+winnowmap, minimap2, ngmlr, winnowmap\n  -t INT, --threads INT\n                        (optional) number of threads (default: 4)\n  -e conda_env, --conda_env conda_env\n                        (optional) conda environment name (default: NULL)\n  --samtools path/to/samtools\n                        (optional) path to samtools (default: using environment default)\n  --sniffles path/to/sniffles\n                        (optional) path to sniffles (default: using environment default)\n  --cuteSV path/to/cuteSV\n                        (optional) path to cuteSV (default: using environment default)\n  --minimap2 path/to/minimap2\n                        this parameter is deprecated as minimap2 is supplied in NextSV now\n  -v, --version         show version number and exit\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/Nextomics/NextSV/master/README.md",
      "technique": "header_analysis"
    }
  ]
}