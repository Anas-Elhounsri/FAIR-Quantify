{
  "application_domain": [
    {
      "confidence": 8.37,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bsml320/CNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-02-05T20:02:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-25T05:04:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9960653148272214,
      "result": {
        "original_header": "CNet: discovery of clinically associated, combinatory genomic signatures",
        "type": "Text_excerpt",
        "value": "CNet is a JAR package that detects groups of genomic signatures that are associated with clinical and phenotypical outcomes. \n \n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8661413679102998,
      "result": {
        "original_header": "Other input parameters:",
        "type": "Text_excerpt",
        "value": "4. model={glm|km|chisq|FET}: no default value; users must select one of the four models according to their phenotype.\n5. r_include=0.2: default: 0.2; suggest to be a value between 0.2 and 0.5\n6. r_exclude=0.1: default: 0.1; suggest to be half of the value r_include\n7. output=output.modules.txt\n8. exclude: a file that includes a list of genes to be excluded, one gene per row. Default: no gene is excluded.\n9. permutation={true|false}:\n10. keep_permutation={true|false}: whether to keep the intermediate permutation files\n \n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bsml320/CNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bsml320/CNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bsml320/CNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CNet: discovery of clinically associated, combinatory genomic signatures"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bsml320/CNet/master/Example/CCLE/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bsml320/CNet/master/Example/Subtype/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Input files that should be prepared",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures"
        ],
        "type": "Text_excerpt",
        "value": "1. X: Predictor profile matrices: formatted as samples by genes, with only 0 and 1 allowed (i.e., binary matrix). Space seperated. \n2. Y: Phenotype file: a file with 2 columns (continuous or categorical phenotype) or 3 columns (censored data)\n3. net: Network file: a file with 2 columns, each row with a pair of genes, space seperated. Alternatively, use the label \"net=full\" to refer a fully connected network. An example network file is available in Example/PC.interact.txt, which was prepared based on PathwayCommons binary interaction data.\n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9435567753285011,
      "result": {
        "original_header": "Output file",
        "type": "Text_excerpt",
        "value": "If permutation is turned off (permutation=false), a file named output.modules.txt will be generated, with 5 columns: seed_gene, module_score, component_genes, tags, z_score \nIf permutation is turned on, a file named output.modules.withZ.txt will be generated, with 6 columns: seed_gene, module_score, component_genes, tags, z_score, z_score2\n \n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bsml320/CNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "bsml320"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1065,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:05:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Default",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "> java -jar /path/to/CNet.jar\n\n```\nusage: java -jar CNet.jar <model=glm|km|chisq|FET> \n        <X=Xfile> \n        <Y=Yfile> \n        <net=networkfile>\n        <r_include=0.2>\n        <r_exclude=0.1>\n        <output=output.modules.txt>\n        <exclude=exclude_gene_file>\n        <permutation={true|false}>\n        <keep_permutation={true|false}>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. One predictor matrix:",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "> java -jar /path/to/CNet.jar model=chisq X=BRCA.mut_raw.txt Y=BRCA.Y.txt net=/path/to/PC.interact.txt r_include=0.2 r_exclude=0.1 output=BRCA.mut_raw.modules.txt permutation=true keep_permutation=false 2>log\n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Two predictor matrices:",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "> java -jar /path/to/CNet.jar model=chisq X=BRCA.cnv_gain.txt:BRCA.cnv_loss.txt Y=BRCA.CNV_Y.txt net=/path/to/PC.interact.txt r_include=0.4 r_exclude=0.2 output=BRCA.cnv.modules.txt permutation=true keep_permutation=false 2>log\n          \nIn this case, the column \"tag\" in the output file has multiple index to indicate the dimension that the corresponding gene was selected. For example:\n\nseed_gene    module_score    component_genes  tags    z_score           z_score2\n\nPDE4B        39.430619667    AGA PDE4B        1 0     13.921094778      6.869421\n\nThere are two genes (AGA and PDE4B) in this module. The tag \"1 0\" indicates that the first gene AGA has its best dimension in the 2nd input matrix, i.e., BRCA.cnv_loss.txt, and the second gene PDE4B has its best dimension in the 1st input matrix, i.e. BRCA.cnv_gain.txt. Here \"1 0\" is the index of the input matrices (started at 0).\n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Exclude genes with extreme effect:",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "> java -jar /path/to/CNet.jar model=chisq X=BRCA.mut_one.txt Y=BRCA.Y.txt net=/path/to/PC.interact.txt r_include=0.2 r_exclude=0.1 output=BRCA.mut_one.excludeTP53.modules.txt permutation=true keep_permutation=false exclude=excludeTP53.txt 2>log\n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Selection of parameters:",
        "parent_header": [
          "CNet: discovery of clinically associated, combinatory genomic signatures",
          "Example"
        ],
        "type": "Text_excerpt",
        "value": "We recommend in general that r2 to be half the value of r1. In practice, r1 and r2 are set such that the resultant modules would not be too large (i.e., high false positive) or too small (i.e., high false negative). The default values apply to most applications. When many genes in the input matrix tend to have strong effect, such as applications to cancer data, a stringent set of r1/r2 can be considered, e.g., r1 = 0.4 and r2 = 0.2.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bsml320/CNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}