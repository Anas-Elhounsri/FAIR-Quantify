{
  "application_domain": [
    {
      "confidence": 25.25,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeeHo/Glutton"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-02-27T18:23:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-22T20:19:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Glutton (A tool for Protein Chemical Shift - Structure Analysis)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9637248439478413,
      "result": {
        "original_header": "Glutton",
        "type": "Text_excerpt",
        "value": "Part 1 of 4. Introduction of Glutton \n        The Glutton database and a complementary python script are developed for constructing structure \n        ensembles solely based on backbone chemical shift data for flexible proteins.\n        \n        The Glutton database that we have developed is specifically designed to fill a void\n        currently existing in the bioinformatics tools for the structural analysis of intrinsically\n        disordered proteins (IDPs) based on experimental information, namely Nuclear Magnetic Resonance (NMR). \n        Our Glutton database contains both chemical shifts and their corresponding structural information \n        for a total of 5,270 proteins. The Glutton database is organized hierarchically in three tiers\n        (levels of resolution) that permit customization of the database for specific applications: \n        for calculations of structural ensembles of IDPs, or for determination and prediction of well-folded \n        protein structures. And, most importantly, Glutton interprets chemical shifts as ensemble \n        averages, and thus calculates conformational distributions from chemical shift datasets. \n        These distributions permit the straightforward determination of a maximally broad structural \n        ensemble consistent with the data, and thus it optimizes sampling of the conformational space that is\n        available to the IDP as shown in the above plot. These ensembles provide a realistic description\n        of the conformational heterogeneity and structural propensities of IDPs, but they can also be used \n        as starting points for the refinement of protein structure determination (adding additional \n        experimental information) or protein prediction (incorporating a molecular force-field). \nPart 2 of 4. Use Glutton script to generate structure ensembles based on chemical shifts or vice versa. \n        Step4. Change the input.txt to set parameters to determine the characteristics of the structure \n        ensemble to be generated. \n                bmr15398.str   # name of the input chemical shift file in cs folder\n                2              # LEVEL of the database, 1 - high-resolution; 2 - medium-resolution; 3 - low-resolution \n                200            # Number of structures to be generated (when predicting cs from a structure, set it to 1)\n                0.5            # the selected width of the chemical shift distribution to derive statistical distributions (or the phi/psi angle range if predicting cs from a structure)\n                1              # 0 - Output all Phi and Psi angles before size exclusion; 1 - output Phi and Psi angles used in all the outputed structures\n                1              # 0 - predict chemical shifts based on PDB structure; 1 - predict strcutures based on chemical shifts \n        NOTE: Example input files for Cs to structure is \"input_cs2str_ncbd.txt\" and for structure to CS is\n         \"input_str2cs_ncbd.txt\". To use anyone of them as input file for Glutton, please change the file name\n         to \"input.txt\" and put in the same folder as Glutton.py. \nPart 4 of 4. Protein Chemical Shift - Structure Database (Glutton database) \n        Each row represents a single residue, and the meaning of each column is as follows: \n        column 7: Secondary structure type of this residue \n        column 8: Phi angle of this residue \n        column 9: Psi angle of this residue \n \u00a0 \u00a0 \u00a0 \u00a0NOTE: if the chemical shift value of an atom is not available, Glutton sets it as 9999.0. \n \n"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9253106141866403,
      "result": {
        "type": "Text_excerpt",
        "value": "Figure 1. Side-by-side comparison of the Phi and Psi angle distributions based on 10,000 structures obtained from 10-us MD simulations(left) and Glutton (right) for ALA-49 in NCBD. \n"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeeHo/Glutton/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeeHo/Glutton/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YeeHo/Glutton"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Glutton"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeeHo/Glutton/master/NCBD-49.png"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9683471044731444,
      "result": {
        "original_header": "Glutton",
        "type": "Text_excerpt",
        "value": "Please take 5 minutes to read this brief readme file before running the Glutton script.  \n        NOTE: if the available data are insufficient to generate distributions, you can either: \n        [1]. use the low-resolution database - LEVEL3;            \n        [2]. increase the selected width of the chemical shift distribution. \n        [3]. Output Phi and Psi angle files are named \"PhiAngles.txt\" and \"PsiAngles.txt\". Each row contains all\n             the generated angles corresponding to one residue.\n \n        Step5. Use the following command to run the Glutton script: \n                python Glutton.py \nPart 3 of 4. Python libraries needed to run this script \n        The Glutton script has been tested using the Anaconda python distribution version 3.6. \n        The Anaconda python package can be downloaded for free from: https://www.anaconda.com/download\n        \n        The compatibility of the Glutton script with Python version 2.7 has NOT been evaluated. If you are using the \n        default python in linux, you are most likely using python version 2.7. You will have to manually specify \n        the python interpreter as:\n        \n                /usr/bin/python3.5 Glutton.py\n        \n        If you use the default python in Linux and don't have the pip command, you will need to install pip \n        as follows:\n        \n                sudo apt install python3-pip (Ubuntu)\n        \n                sudo yum install python3-pip (centos/redhat) - not tested \n        The python libraries needed to run Glutton script are: \n        [1]. Install Biopython \n                conda install biopython (or use \"pip install biopython\")\n  \n        Biopython webpage: http://biopython.org/\n  \n        [2]. Install PeptideBuilder \n                pip3 install PeptideBuilder \n        [3]. Install nmrstarlib\n        \n                pip3 install nmrstarlib \n        nmrstarlib webpage: https://github.com/MoseleyBioinformaticsLab/nmrstarlib         \n        [4]. Install other python libraries such as numpy, pandas if you don't have them.\n        \n                pip3 install numpy pandas \n"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.868503013573942,
      "result": {
        "original_header": "Glutton",
        "type": "Text_excerpt",
        "value": "        Step1. Put database files (LEVEL*.dat), Glutton.py and input.txt files in the same folder. \n                python Glutton.py \n"
      },
      "source": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeeHo/Glutton/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Glutton"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YeeHo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 21732,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeeHo/Glutton/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:59:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}