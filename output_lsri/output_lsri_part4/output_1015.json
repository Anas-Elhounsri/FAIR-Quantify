{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References:",
        "parent_header": [
          "Spliceogen"
        ],
        "type": "Text_excerpt",
        "value": "1. Yeo, G., Burge, C., \"Maximum Entropy Modeling of Short Sequence Motifs with Applications to RNA Splicing Signals\", J Comput Biol. 2004; 11(2-3):377-94\n\n2. Pertea, M., Lin, X., Salzberg, S., \"GeneSplicer: a new computational method for splice site prediction\", Nucleic Acids Res. 2001; 29(5):1185-90\n\n3. Shendong, K., et al., \"Quantitative evaluation of all hexamers as exonic splicing elements\", Genome Res. 2011; 21(8):1360-1374\n\n4. Signal, B., et al., \"Machine learning annotation of human branchpoints\", Bioinformatics. 2018; 34(6):920-927\n\n5. Shiraishi, Y., et al., \"A comprehensive characterization of cis-acting splicing-associated variants in human cancer\", Genome Res. 2018; 28(8):1111-1125\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VCCRI/Spliceogen"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-30T02:41:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-21T01:09:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9966868608299692,
      "result": {
        "original_header": "Spliceogen",
        "type": "Text_excerpt",
        "value": "Spliceogen is an integrative, scalable tool for the discovery of splice-altering variants. Variants are assessed for their potential to create or disrupt any of the cis motifs which guide splice site definition: donors, acceptors, branchpoints, enhancers and silencers. Spliceogen integrates scores from MaxEntScan<sup>1</sup>, GeneSplicer<sup>2</sup>, ESRseq<sup>3</sup> and Branchpointer<sup>4</sup>, and provides predictions based on logistic regression models trained on reported splice-altering variants<sup>5</sup>. Spliceogen accepts VCF/TSV inputs and handles both SNVs and indels. \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9206104021337151,
      "result": {
        "original_header": "Predictions",
        "type": "Text_excerpt",
        "value": "We developed logistic regression models for each of the following classes of splice-altering variants: donor loss, acceptor loss, donor gain and acceptor gain. Using these models, we derive probability values which are used to rank variants based on the likelihood that they will cause each kind of splice-altering variant. Variants outside of splice sites are assigned donor and acceptor gain scores only, while variants within donor/acceptor splice sites are assigned only donor/acceptor loss scores.   \n\nNote that these probability values are used for ranking only; they should not be interpreted as the actual probability of splice alteration. Similarly, the scores should not be compared between different classes (gain/loss etc).\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9565958629022887,
      "result": {
        "original_header": "Files",
        "type": "Text_excerpt",
        "value": "Multiple output files are created for each VCF/TSV in the Spliceogen/output directory. A master \"\\_out\" file contains all scores for all variants, in a format suitable for ANNOVAR<sup>6</sup> variant annotation. Several additional files show predictions for variants identified as most likely to be disruptive, ranked in descending order. The specific files generated are as follows: \n    Contains all scores generated for every variant, sorted in standard ascending chromosomal/start order. \n    Contains all variants that overlap annotated splice sites. The overlapping splice sites are denoted by their exonID and \"\\_donor\" or \"\\_acceptor\". Variants are sorted by the maximum of donLossP and accLossP, such that variants most likely to disrupt acceptor/donor splice sites appear at the top of this file. \n    Contains variants outside of existing splice sites that are predicted to create donor or acceptor motifs. Variants are sorted by the maximum of donGainP and accGainP, such that variants most likely to create acceptor/donor splice sites appear at the top of this file. \n    Contains Branchpointer prediction scores, including whether the variant is predicted to create or remove a branchpoint, based on the recommended Branchpointer thresholds.\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8534765364423295,
      "result": {
        "original_header": "Column labels:",
        "type": "Text_excerpt",
        "value": "So for example, the column \"gsDonRef\" contains GeneSplicer scores representing donor motif strength for the reference sequence, whereas \"mesDonAlt\" consists of MaxEntScan scores representing acceptor motif strength for the alternative sequence.\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8459955226654443,
      "result": {
        "original_header": "Including Branchpointer:",
        "type": "Text_excerpt",
        "value": "To include Branchpointer predictions, include the -branchpointer flag and specify the genome build:\n```\n*basic usage command* -branchpointer hgXX\n```\nOr for branchpointer_dev which handles both SNPs and indels, use the flag -branchpointerIndels hgXX\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/VCCRI/Spliceogen/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VCCRI/Spliceogen/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VCCRI/Spliceogen"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Spliceogen"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/RUN.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/sources/gsComparison.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation:",
        "parent_header": [
          "Spliceogen",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Navigate to your desired installation directory and clone this repository:\n```\ngit clone https://github.com/VCCRI/Spliceogen.git Spliceogen\n```"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9121166218020872,
      "result": {
        "original_header": "Files",
        "type": "Text_excerpt",
        "value": "1) \"$file\"_out.txt: \n2) \"$file\"_withinSS.txt: \n3) \"$file\"_ssGain.txt \n4) \"$file\"_bpOutput.txt \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9979037421601286,
      "result": {
        "original_header": "Including Branchpointer:",
        "type": "Text_excerpt",
        "value": "To include Branchpointer predictions, include the -branchpointer flag and specify the genome build:\n```\n*basic usage command* -branchpointer hgXX\n```\nOr for branchpointer_dev which handles both SNPs and indels, use the flag -branchpointerIndels hgXX\n \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8910767913815181,
      "result": {
        "original_header": "Files",
        "type": "Text_excerpt",
        "value": "1) \"$file\"_out.txt: \n2) \"$file\"_withinSS.txt: \n3) \"$file\"_ssGain.txt \n4) \"$file\"_bpOutput.txt \n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/VCCRI/Spliceogen/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Spliceogen"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "VCCRI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 101366,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 30009,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 20375,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 14649,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6035,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 5879,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 203,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 193,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "smonger",
          "type": "User"
        },
        "date_created": "2019-10-04T02:19:41Z",
        "date_published": "2019-10-04T02:50:32Z",
        "description": "-For variants within splice sites, a single probability value is now provided which reflects the variant's potential to disrupt the splice site, based on a logistic regression model trained on cancer-associated splice-altering variants (Shiraishi et al., 2019). The output file formats have been modified to accomodate the new scores.\r\n-As well as VCFs, a simple tab-separated variant format is now accepted. A simplified \"-input\" is tag is accepted; the user no longer has to specify the variant file type. Deprecated v1.0 tags (-inputVCF and -inputBED) and BED inputs are still allowed.\r\n-Gzipped VCF/TSV/GTF files are now accepted.\r\n-Inconsistencies in chromosome nomenclature (eg. chrX and X) between the provided input FASTA/GTF/VCF/TSV files are now handled automatically, rather than requiring the user to edit files for consistency.\r\n-A Reference allele check is now performed, to confirm that the specified reference allele matches the provided FASTA.",
        "html_url": "https://github.com/VCCRI/Spliceogen/releases/tag/v2.0",
        "name": "Spliceogen",
        "release_id": 20463394,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/VCCRI/Spliceogen/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/VCCRI/Spliceogen/releases/20463394",
        "value": "https://api.github.com/repos/VCCRI/Spliceogen/releases/20463394",
        "zipball_url": "https://api.github.com/repos/VCCRI/Spliceogen/zipball/v2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Spliceogen Dependencies:",
        "parent_header": [
          "Spliceogen",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "-Bedtools\n\n-Java\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Branchpointer dependencies:",
        "parent_header": [
          "Spliceogen",
          "Including Branchpointer:"
        ],
        "type": "Text_excerpt",
        "value": "-R (tested on v3.4.3)\n\n-Branchpointer\n\n-BSgenome\n\nThe current Bioconductor release of Branchpointer supports SNV predictions. To install it from an R prompt:\n\n```\n> source(\"https://bioconductor.org/biocLite.R\")\n> biocLite(\"branchpointer\")\n```\nThe development version of Branchpointer also supports indels. To install this version instead:\n```\n> library(devtools)\n> install_github(\"betsig/branchpointer_dev\")\n```\nFrom an R prompt, install the hg38 BSgenomes package using the below command. For hg19, edit the 2nd line to \"hg19\".\n\n```\n> source(\"https://bioconductor.org/biocLite.R\")\n> biocLite(\"BSgenome.Hsapiens.UCSC.hg38\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Input formats:",
        "parent_header": [
          "Spliceogen",
          "Running Spliceogen"
        ],
        "type": "Text_excerpt",
        "value": "As an alternative to VCF, a custom tab-separated format is allowed (chr    start    ref    alt). Gzipped GTF/VCF/TSV files are accepted.\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:38:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Required annotation files:",
        "parent_header": [
          "Spliceogen",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "-Any whole genome FASTA (.fa)\n\n-Any GTF genome annotation (.gtf)\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Obtaining required files:",
        "parent_header": [
          "Spliceogen",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "FASTA/GTF files can be downloaded from [Gencode](https://www.gencodegenes.org/human/)\n\nAlternatively, some recent (as of 2019) hg38 releases can be retrieved using:\n```\n> wget ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.alt.fa.gz\n> wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_29/gencode.v29.basic.annotation.gtf.gz\n```"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Usage:",
        "parent_header": [
          "Spliceogen",
          "Running Spliceogen"
        ],
        "type": "Text_excerpt",
        "value": "```\n> cd path/to/Spliceogen\n> ./RUN.sh -input path/to/variant/file(s) -fasta path/to/hgXX.fa -gtf path/to/annotation.gtf\n```\nExample VCF, TSV, GTF and FASTA files are provided to demonstrate input and output formats. Run this small example using the following command:\n\n```\n> ./RUN.sh -input toy/toy.vcf -gtf toy/toy.gtf -fasta toy/toy.fa\n```\n"
      },
      "source": "https://raw.githubusercontent.com/VCCRI/Spliceogen/master/README.md",
      "technique": "header_analysis"
    }
  ]
}