{
  "application_domain": [
    {
      "confidence": 0.8595050395861674,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenInstitute/sonata"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Allen Institute Contribution Agreement\n\nThis document describes the terms under which you may make \u201cContributions\u201d \u2014 \nwhich may include without limitation, software additions, revisions, bug fixes, configuration changes,\ndocumentation, or any other materials \u2014 to any of the projects owned or managed by the Allen Institute.\nIf you have questions about these terms, please contact us at terms@alleninstitute.org.  \n\nYou certify that:\n\n\u2022\tYour Contributions are either:\n\n1.\tCreated in whole or in part by you and you have the right to submit them under the designated license \n(described below); or\n2.\tBased upon previous work that, to the best of your knowledge, is covered under an appropriate \nopen source license and you have the right under that license to submit that work with modifications,\nwhether created in whole or in part by you, under the designated license; or\n\n3.\tProvided directly to you by some other person who certified (1) or (2) and you have not modified them.\n\n\u2022\tYou are granting your Contributions to the Allen Institute under the terms of the 2-Clause BSD license \n(the \u201cdesignated license\u201d).\n\n\u2022\tYou understand and agree that the Allen Institute projects and your Contributions are public and that \na record of the Contributions (including all metadata and personal information you submit with them) is \nmaintained indefinitely and may be redistributed consistent with the Allen Institute\u2019s mission and the \n2-Clause BSD license.  \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-11-21T22:35:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-09T01:27:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Collaboration between BBP and AIBS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.957902330282778,
      "result": {
        "original_header": "SONATA Data Format",
        "type": "Text_excerpt",
        "value": "The SONATA Data Format is a Scalable Open Data Format for multiscale neuronal network models and simulation output, jointly developed by the Allen Institute for Brain Science (AIBS) and the Blue Brain Project (BBP) of the \u00c9cole polytechnique f\u00e9d\u00e9rale de Lausanne (EPFL). \nThe design and architecture of SONATA  builds on  both organizations\u2019 expertise with large-scale high-performance  network simulation, visualization and analysis. It was designed for memory and computational efficiency, as well as to work across multiple platforms. Even though AIBS and BBP use different approaches to modeling and use different tools, the format allows networks built by one institute to be simulated by the other and vice versa. We provide specification documentation, open-source reference APIs, and model and simulation output examples with the intention of catalyzing support and adoption of the format in the modeling community. \nWe really welcome user input, please use our [user survey form](https://docs.google.com/forms/d/e/1FAIpQLSfwZQhvHF0JH9BLrKXfAtyagy9_d-Y0x5VRX85aDY2-p9-u1g/viewform). Registering allows us to communicate with SONATA users and is encouraged, but not required: [registration link](https://secure2.convio.net/allins/site/SPageServer/?pagename=modeling_tools). \nThe SONATA Data Format provides: \n* Facilities for representing nodes (cells) and edges (synapses/junctions) of a network. It uses table-based data structures, hdf5 and csv, to represent nodes, edges and their respective properties. Furthermore, indexing procedures  are specified to enable fast, parallelizable, and efficient partial lookup of individual nodes and edges. The use of hdf5 provides efficiency both in file size and IO time. The format includes specific properties and naming conventions, but also allows modelers to extend node and edge model properties as they desire, to ensure models can be used with a variety of simulation frameworks and use cases. \n* A JSON-based file format for configuring simulations, including specifying variables to record from, and stimuli to apply.  \n* A systematic schema for describing simulation output/reports making it easy for users to exchange their simulation output data, and moreover the underlying hdf5 based format permits efficient storage of variables such as spike times, membrane potential, and Ca2+ concentration. \nPlease cite SONATA as follows:\n```\nDai et al. The SONATA data format for efficient description of large-scale network models. PLoS Comput Biol 16(2): e1007696. https://doi.org/10.1371/journal.pcbi.1007696\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9429080104966198,
      "result": {
        "original_header": "Software Development Tools",
        "type": "Text_excerpt",
        "value": "* [**pySONATA**](https://github.com/AllenInstitute/sonata/tree/master/src/pysonata) - A Python based API for reading and writing SONATA files.\n    * [Installation](src/pysonata#installation)\n    * [Tutorials for using pySONATA](tutorials/pySonata) \n\n* [**libSONATA**](https://github.com/BlueBrain/libsonata) - A C++ API for reading SONATA files, with Python bindings.\n    * [Installation](https://github.com/BlueBrain/libsonata#installation)\n    * [Usage](https://github.com/BlueBrain/libsonata#usage-python) \n\n* [**NDX Simulation Output**](https://github.com/ben-dichter-consulting/ndx-simulation-output) - An NWB extension for converting NWB:N files to and from SONATA.\n    * [Installation](https://github.com/ben-dichter-consulting/ndx-simulation-output#guide)\n    * [Tutorial](tutorials/nwb_sonata/nwb_tutorial.ipynb) \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenInstitute/sonata/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenInstitute/sonata/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/compartment-reports.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/compartment-reports.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/circuit-files.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/circuit-files.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/spike-reports.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/pySonata/spike-reports.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/nwb_sonata/nwb_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/tutorials/nwb_sonata/nwb_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenInstitute/sonata/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AllenInstitute/sonata"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SONATA Data Format"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/examples/test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/examples/300_pointneurons/run_pynml.jnmlnrn.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/examples/300_pointneurons/figure5E.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/examples/300_cells/figure5D.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999135062758135,
      "result": {
        "original_header": "SONATA Data Format",
        "type": "Text_excerpt",
        "value": "https://github.com/AllenInstitute/sonnet/blob/master/docs/SONATA_DEVELOPER_GUIDE.md \n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenInstitute/sonata/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sonata"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AllenInstitute"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 297443,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 114041,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:37:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 53
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Software that has SONATA support (not exhaustive)",
        "parent_header": [
          "SONATA Data Format"
        ],
        "type": "Text_excerpt",
        "value": "* [Brain Modeling Toolkit (BMTK)](https://github.com/AllenInstitute/bmtk)\n\n* [PyNN](https://neuralensemble.org/PyNN/)\n\n* [Brion/Brain](https://github.com/BlueBrain/Brion)\n\n* [NetPyNE](http://www.netpyne.org/)\n\n* [pyNeuroML](https://github.com/NeuroML/pyNeuroML)\n\n* [RTNeuron](https://github.com/BlueBrain/RTNeuron)\n"
      },
      "source": "https://raw.githubusercontent.com/AllenInstitute/sonata/master/README.md",
      "technique": "header_analysis"
    }
  ]
}