{
  "application_domain": [
    {
      "confidence": 33.54,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mbilab/zebrafish"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-14T08:18:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-04T03:49:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9267538601722768,
      "result": {
        "original_header": "Zebrafish",
        "type": "Text_excerpt",
        "value": "The implementation of the paper : An Automatic Method to Calculate Heart Rate from Zebrafish Larval Cardiac Videos\n \n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mbilab/zebrafish/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mbilab/zebrafish/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mbilab/zebrafish"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Zebrafish"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mbilab/zebrafish/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mbilab/zebrafish/master/run_docker.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "Zebrafish"
        ],
        "type": "Text_excerpt",
        "value": "1. `mkdir input output`\n2. Install dependencies or use our docker image:\n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies",
        "parent_header": [
          "Zebrafish",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "1. install [libav](https://www.libav.org/)\n2. install [cairo](https://www.cairographics.org/)\n3. install [node.js](https://nodejs.org/)\n4. `npm i`\n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mbilab/zebrafish/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zebrafish"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "mbilab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 43780,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 576,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 161,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install dependencies",
        "parent_header": [
          "Zebrafish",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "1. install [libav](https://www.libav.org/)\n2. install [cairo](https://www.cairographics.org/)\n3. install [node.js](https://nodejs.org/)\n4. `npm i`\n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:16:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use docker image",
        "parent_header": [
          "Zebrafish",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "For building a local image:\n`docker build -t zebrafish:standalone .`\n\nFor using a existing image:\n`docker pull st9007a/zebrafish:standalone`\n\nRun docker:\n`docker run -it st9007a/zebrafish:standalone /bin/bash`\n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Zebrafish"
        ],
        "type": "Text_excerpt",
        "value": "For running in local:\n\n1. Put you video into `input` folder\n2. Run the software:\n\n```\nUsage: node zebrafish.js [video] [theda]\n\nArguments:\n  video  the relative path of the video (.mov format) to analyze\n  theda  the threshold to binarize a grayscale image (`0.96` is suggested)\n\nThe result is stored in `output/[VIDEO]/[THEDA]/custom-init-kmeans-centroids/result.json`\n```\n\nFor running in the docker container:\n\n1. Put you video into `input` folder\n2. Start the container:\n\n```\nUsage: ./run_docker.sh [input directory] [output directory]\n\nArguments:\n  input directory   the absolute path of your `input` folder\n  output directory  the absolute path of your `output` folder\n```\n\n3. Run the software:\n```\nUsage: node zebrafish.js [video] [theda]\n\nArguments:\n  video  the relative path of the video (.mov format) to analyze (ex: input/xxx.mov)\n  theda  the threshold to binarize a grayscale image (`0.96` is suggested)\n\nThe result is stored in `output/[VIDEO]/[THEDA]/custom-init-kmeans-centroids/result.json`\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mbilab/zebrafish/master/README.md",
      "technique": "header_analysis"
    }
  ]
}