{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeoLab/anchor"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing\n============\n\nContributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.\n\nYou can contribute in many ways:\n\nTypes of Contributions\n----------------------\n\n### Report Bugs\n\nReport bugs at <https://github.com/YeoLab/anchor/issues>.\n\nIf you are reporting a bug, please include:\n\n-   Your operating system name and version.\n-   Any details about your local setup that might be helpful in troubleshooting.\n-   Detailed steps to reproduce the bug.\n\n### Fix Bugs\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\" is open to whoever wants to implement it.\n\n### Implement Features\n\nLook through the GitHub issues for features. Anything tagged with \"feature\" is open to whoever wants to implement it.\n\n### Write Documentation\n\nanchor: Modality Estimator could always use more documentation, whether as part of the official anchor: Modality Estimator docs, in docstrings, or even on the web in blog posts, articles, and such.\n\n### Submit Feedback\n\nThe best way to send feedback is to file an issue at <https://github.com/YeoLab/anchor/issues>.\n\nIf you are proposing a feature:\n\n-   Explain in detail how it would work.\n-   Keep the scope as narrow as possible, to make it easier to implement.\n-   Remember that this is a volunteer-driven project, and that contributions are welcome :)\n\nGet Started!\n------------\n\nReady to contribute? Here's how to set up anchor for local development.\n\n1.  Fork the anchor repo on GitHub.\n2.  Clone your fork locally:\n\n        $ git clone git@github.com:your_name_here/anchor.git\n\n3.  Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development:\n\n        $ mkvirtualenv anchor\n        $ cd anchor/\n        $ python setup.py develop\n\n4.  Create a branch for local development:\n\n        $ git checkout -b name-of-your-bugfix-or-feature\n\n    Now you can make your changes locally.\n\n5.  When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox:\n\n        $ flake8 anchor tests\n        $ py.test\n        $ tox\n\n    To get flake8 and tox, just pip install them into your virtualenv.\n\n6.  Commit your changes and push your branch to GitHub:\n\n        $ git add .\n        $ git commit -m \"Your detailed description of your changes.\"\n        $ git push origin name-of-your-bugfix-or-feature\n\n7.  Submit a pull request through the GitHub website.\n\nPull Request Guidelines\n-----------------------\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1.  The pull request should include tests.\n2.  If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.rst.\n3.  The pull request should work for Python 2.6, 2.7, 3.3, and 3.4, and for PyPy. Check <https://travis-ci.org/YeoLab/anchor/pull_requests> and make sure that the tests pass for all supported Python versions.\n\nTips\n----\n\nTo run a subset of tests:\n\n    $ python -m unittest tests.test_anchor\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-17T18:21:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-31T03:42:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":anchor: Find bimodal, unimodal, and multimodal features in your data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9992810050349333,
      "result": {
        "original_header": "What is `anchor`?",
        "type": "Text_excerpt",
        "value": "Anchor is a python package to find unimodal, bimodal, and multimodal features in any data that is normalized between 0 and 1, for example alternative splicing or other percent-based units. \n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/YeoLab/anchor/wiki"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YeoLab/anchor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeoLab/anchor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YeoLab/anchor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "To install `anchor`, we recommend using the\n[Anaconda Python Distribution](http://anaconda.org/) and creating an\nenvironment, so the `anchor` code and dependencies don't interfere with\nanything else. Here is the command to create an environment:\n\n\n```\nconda create -n anchor-env pandas scipy numpy matplotlib seaborn\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Stable (recommended)",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "\nTo install this code from the Python Package Index, you'll need to specify ``anchor-bio`` (``anchor`` was already taken - boo).\n\n```\npip install anchor-bio\n```\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bleeding-edge (for the brave)",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you want the latest and greatest version, clone this github repository and use `pip` to install\n\n```\ngit clone git@github.com:YeoLab/anchor\ncd anchor\npip install .  # The \".\" means \"install *this*, the folder where I am now\"\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9892666442957624,
      "result": {
        "original_header": "What is `anchor`?",
        "type": "Text_excerpt",
        "value": "* Free software: BSD license\n* Documentation: https://YeoLab.github.io/anchor\n \n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8984927252409152,
      "result": {
        "original_header": "1.0.1 (2017-06-28)",
        "type": "Text_excerpt",
        "value": "- Documentation and build fixes\n \n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9642766268292027,
      "result": {
        "original_header": "0.1.0 (2015-07-08)",
        "type": "Text_excerpt",
        "value": "* First release on PyPI.\n \n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YeoLab/anchor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2015, Olga Botvinnik\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n* Neither the name of anchor: Modality Estimator nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/anchor/master/logo/v1/logo.png"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "anchor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "YeoLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 58178,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1884,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 06:46:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "`anchor` was structured like `scikit-learn`, where if you want the \"final\nanswer\" of your estimator, you use `fit_transform()`, but if you want to see the\nintermediates, you use `fit()`.\n\nIf you want the modality assignments for your data, first make sure that you\nhave a `pandas.DataFrame`, here it is called `data`, in the format (samples,\nfeatures). This uses a log2 Bayes Factor cutoff of 5, and the default Beta\ndistribution parameterizations (shown [here]())\n\n```python\nimport anchor\n\nbm = anchor.BayesianModalities()\nmodalities = bm.fit_transform(data)\n```\n\nIf you want to see all the intermediate Bayes factors, then you can do:\n\n```python\nimport anchor\n\nbm = anchor.BayesianModalities()\nbayes_factors = bm.fit(data)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/YeoLab/anchor/master/README.md",
      "technique": "header_analysis"
    }
  ]
}