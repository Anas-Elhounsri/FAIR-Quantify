{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TopGene/AIvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-06T07:24:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-20T21:15:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIVAR is a tool for pathogenicity estimation utilizing a 2-tier (benign/likely benign, pathogenic/likely pathogenic) classification system that aims to re-classify VUS into a clinically informative category."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9990200015159676,
      "result": {
        "original_header": "AIVAR",
        "type": "Text_excerpt",
        "value": "We took advantages of neural network methods and developed an in silico method, AIVAR (Artificial Intelligent VARiant classifier), which is highly comparable to human experts on known data sets. \n"
      },
      "source": "https://raw.githubusercontent.com/TopGene/AIvar/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TopGene/AIvar/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TopGene/AIvar/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TopGene/AIvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIVAR"
      },
      "source": "https://raw.githubusercontent.com/TopGene/AIvar/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TopGene/AIvar/master/example/example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "SetUp",
        "parent_header": [
          "AIVAR"
        ],
        "type": "Text_excerpt",
        "value": "----------\n\n**1**.Download the AIVAR package to any directory.\n\n**2**.Dowload external tools\n\n  python 3.x required packages: argparse,numpy,keras,h5py\n\n  perl 5.2x:\n\n**3**.Download database\n\n  Required databases are deposited under the example dirctory, or use the links provided below for direct download\uff1a\n\n  * [RefGene](https://genome.ucsc.edu/cgi-bin/hgTables)\n  * [LOF genes](https://github.com/WGLab/InterVar/blob/master/intervardb/PVS1.LOF.genes.hg19)\n\n  **Notes**: don't forget to give the paths to the above database files specified in bin/database.cfg\n\n**4**.Prepare Input Data\n\n  The input data for AIVAR is the annotated output file of the variants.Please use [ANNOVAR](http://annovar.openbioinformatics.org/en/latest/) and the relative annotation databases for variant annotations.\n  \n  ANNOVAR usage to generate required variant annotations for input to AIVAR\uff1a\n  \n  **Usage**\uff1a\n  \n\t $ table_annovar.pl --vcfinput example.vcf database/hg19 -out example_out -buildver hg19 -remove -protocol refGene,1000g2015aug_all,1000g2015aug_eas,1000g2015aug_afr,1000g2015aug_amr,1000g2015aug_eur,1000g2015aug_sas,hrcr1,cg69,gnomad_genome,exac03,esp6500siv2_all,esp6500siv2_aa,esp6500siv2_ea,gnomad_exome,ljb26_all,intervar_20170202,dbnsfp31a_interpro,dbscsnv11,avsnp147,tfbsConsSites,wgRna,targetScanS,gwasCatalog,eigen -operation g,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,r,r,r,r,f -nastring . --onetranscript\n\n  the annotation output file example_out.hg19_multianno.txt is the input file for AIVAR\n  \n**5**.How to run\n   \n  We strongly recommend going through the example/ directory  where you can view commands and example input file formats required for running.\n  \n  **command-line**\uff1a\n\n\t $ python3 AIVAR.py --help\n\n  arguments:\n\n  -h, --help\t\n  \tshow this help message and exit\n\n  -t TYPE, --type TYPE  \n\n \tPlease specify analysis module to be used: AIVAR model generation or variant pathogenicity prediction,required\n\n  -i INPUT, --input INPUT\n\n  \tPlease specify ANNOVAR annotation results, required\n\n  -o OUTPUT, --output OUTPUT\n\n  \tPlease specify output file ,required\n\n  -c CATEGORIZE, --categorize CATEGORIZE\n\n  \tPlease specify class file containing pathogenicity classification for each variant in the training set (only required for AIVAR model generation),optional\n\n  -m MODEL, --model MODEL\n\n  \tPlease specify AIVAR model to be used,optional\n\n  **Building an AIVAR model**\n\n  We have a ready-to-use model (trained already) under the directory: bin/AIVAR.model_weights.h5 \n\n  Users can also build their own AIVAR model\n  \n  **Usage**\uff1a\n\n\t $ python3 AIVAR.py -t model -i example.hg19_multianno.txt -c example.class -o example\n\n  -t choose type of analysis module, in this case 'model'\n\n  -i annotation output file from ANNOVAR\uff08see 4.Prepare Input Data\uff09\n\n  -o the output filename\n\n  -c class file, a 1-column text file containing pathogenicity classification (0 for benign/likely benign and 1 for pathogenic/likely pathogenic) of each variant in the ANNOVAR output file (number of labels has to match with the number of variants); the column has a header line named '#class'\n  \n  class file like:\n\n\t #class\n\t 0\n\t 1\n\t 0\n\t 0\n\t 1\n\t 1\n\t 0\n\t 0\n\t 0\n\t 1\n\t 1\n\t 0\n\t 1\n\t ...\n  \n  **Using AIVAR model to predict variant pathogenicity**\n\n  **usage**\uff1a\n  \n\t $ python3 AIVAR.py -t predict -i example.hg19_multianno.txt -o example -m example.model_weights.h5\n\n  -t choose type of analysis module, in this case 'predict'\n\n  -i annotation output file from ANNOVAR\uff08see 4.Prepare Input Data\uff09\n\n  -o the output filename\n\n  -m the AIVAR model to be used for prediction\uff08default\uff1abin/AIVAR.model_weights.h5\uff09\n\n\n  \n  "
      },
      "source": "https://raw.githubusercontent.com/TopGene/AIvar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TopGene/AIvar/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "LICENSE",
        "parent_header": [
          "AIVAR"
        ],
        "type": "Text_excerpt",
        "value": "----------\nAIVAR is free for non-commercial use without warranty.\n\n\n  \n"
      },
      "source": "https://raw.githubusercontent.com/TopGene/AIvar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIvar"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TopGene"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 11875,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7590,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 194,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TopGene/AIvar/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:58:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}