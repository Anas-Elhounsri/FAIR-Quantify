{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/labstructbioinf/PiPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-15T10:43:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-04T19:30:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deep learning based prediction of pi-helices in protein sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8931030973217212,
      "result": {
        "original_header": "**Supplementary files**",
        "type": "Text_excerpt",
        "value": "* Updated CB6133 and CB513 benchmark datasets - [link](https://lbs.cent.uw.edu.pl/pipred)\n* Results of PFAM scan - [link](https://lbs.cent.uw.edu.pl/pipred) \n"
      },
      "source": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/labstructbioinf/PiPred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/labstructbioinf/PiPred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "labstructbioinf/PiPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PiPred - deep learning based prediction of pi-helices in protein sequences"
      },
      "source": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/run_example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Installation**",
        "parent_header": [
          "**PiPred - deep learning based prediction of pi-helices in protein sequences**"
        ],
        "type": "Text_excerpt",
        "value": "First clone this repository:\n```bash\n$ git clone https://github.com/labstructbioinf/PiPred.git\n$ cd PiPred\n```\n\nRequired packages to run PiPred are listed in the **`requirements.txt`** file.\nWe suggest running PiPred in the virtual environment:\nIf you don't have virtualenv installed do so:\n```bash\n$ pip3 install virtualenv\n```\nCreate virtual environment and install required packages:\n```bash\n$ cd virtual_envs_location\n$ virtualenv pipred_env\n$ source pipred_env/bin/activate\n$ cd PIPRED_LOCATION\n$ pip3 install -r requirements.txt\n```\nTest the installation:\n```bash\n$ ./run_example.sh\n```\nThis should produce output **`example/1mty_C.out`** identical to **`example/1mty_C.out.bk`**.\n"
      },
      "source": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/labstructbioinf/PiPred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PiPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "labstructbioinf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 15938,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 95,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jludwiczak",
          "type": "User"
        },
        "date_created": "2020-11-29T22:44:39Z",
        "date_published": "2020-11-29T22:48:49Z",
        "description": "- Retrained the predictor with newly available PDB data and exactly the same procedures as in the original paper (https://doi.org/10.1038/s41598-019-43189-4).\r\n- Added handling of sequences with non-standard amino acids (jointly denoted as 'X' residues).\r\n- Changes did not affect the performance of our method.\r\n",
        "html_url": "https://github.com/labstructbioinf/PiPred/releases/tag/v1.1",
        "name": "v1.1",
        "release_id": 34554076,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/labstructbioinf/PiPred/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/labstructbioinf/PiPred/releases/34554076",
        "value": "https://api.github.com/repos/labstructbioinf/PiPred/releases/34554076",
        "zipball_url": "https://api.github.com/repos/labstructbioinf/PiPred/zipball/v1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:51:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Usage**",
        "parent_header": [
          "**PiPred - deep learning based prediction of pi-helices in protein sequences**"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npython3.5 pipred.py [-h] -i FILE [-out_path DIR] [-pssm_path DIR]\n```\n| Option    | Description |\n|:----------:|-------------|\n| **`-i`** | Input file in FASTA format. Can contain multiple entries. |\n| **`-pssm_path`** | Directory with psiblast PSSM files. For each entry in the input fasta file there must be a PSSM file. |\n| **`-out_path`** | Directory where the predictions are saved. For each entry one file will be saved. |\n\nPSSM filenames should be based on the identifiers in the fasta file (only alphanumeric characters and '_'). For example if a fasta sequence is as follows:\n```\n>1mty_C\nERRRGLTDPEMAAV...\n```\nPSSM file should be named **`1mty_C.pssm`**.\n\nYou can generate PSSM files with the following command (requires NR90 database):\n```bash\npsiblast -query 1mty_C.fasta -db NR90_LOCATION -evalue 0.001 -num_iterations 3 -out_ascii_pssm 1mty_C.pssm\n```\nIn order to generate PSSM file from multiple sequence alignment (MSA) you can use this command:\n```bash\npsiblast -subject sequence.fasta -in_msa alignment.fasta -out_ascii_pssm output.pssm\n```\n"
      },
      "source": "https://raw.githubusercontent.com/labstructbioinf/PiPred/master/README.md",
      "technique": "header_analysis"
    }
  ]
}