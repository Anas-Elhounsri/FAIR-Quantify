{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "Many thanks for testing, bug reports, or contributions:\n\nAmin Ardeshirdavani\n\nPierre Bourbon\n\nBenoit Charloteaux\n\nRichard Corbett\n\nDidier Croes\n\nMatthias De Smet\n\nKeith James\n\nLeonor Palmeira\n\nJoke Reumers\n\nGeert Vandeweyer\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing elPrep",
        "type": "Text_excerpt",
        "value": "Please cite the following articles:\n\nHerzeel C, Costanza P, Decap D, Fostier J, Wuyts R, Verachtert W (2021) Multithreaded variant calling in elPrep 5. PLoS ONE 16(2): e0244471. https://doi.org/10.1371/journal.pone.0244471\n\nHerzeel C, Costanza P, Decap D, Fostier J, Verachtert W (2019) elPrep 4: A multithreaded framework for sequence analysis. PLoS ONE 14(2): e0209523. https://doi.org/10.1371/journal.pone.0209523\n\nHerzeel C, Costanza P, Decap D, Fostier J, Reumers J (2015) elPrep: High-Performance Preparation of Sequence Alignment/Map Files for Variant Calling. PLoS ONE 10(7): e0132868. https://doi.org/10.1371/journal.pone.0132868\n\nCostanza P, Herzeel C, Verachter W (2019) A comparison of three programming languages for a full-fledged next-generation sequencing tool. BMC Bioinformatics 2019 20:301. https://doi.org/10.1186/s12859-019-2903-5\n\nIf performance is below your expectations, please contact us first before reporting your results.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Synopsis",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "\telprep filter input.sam output.sam --mark-duplicates --mark-optical-duplicates output.metrics\n\t                                   --sorting-order coordinate \n\t                                   --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites \n\t                                   --haplotypecaller output.vcf.gz\n\n\telprep filter input.bam output.bam --mark-duplicates --mark-optical-duplicates output.metrics \n\t                                   --sorting-order coordinate \n\t                                   --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites \n\t                                   --haplotypecaller output.vcf.gz\n\n\telprep filter /dev/stdin /dev/stdout --mark-duplicates --mark-optical-duplicates output.metrics \n\t                                     --sorting-order coordinate \n\t                                     --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites\t\n\t                                     --haplotypecaller output.vcf.gz\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix pipes",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "elPrep is compatible with Unix pipes and allows using /dev/stdin and /dev/stdout as input or output sources. elPrep \nanalyzes the input from /dev/stdin to determine if it is in .sam or .bam format, and assumes that output to /dev/stdout \nis in .sam format, unless specified otherwise (see below).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--replace-reference-sequences file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter is used for replacing the header of a .sam/.bam file by a new header. The new header is passed as a single \nargument following the command option. The format of the new header can either be a .dict file or another .sam/.bam file from which you wish to extract the new header.\n\nAll alignments in the input file that do not map to a chromosome that is present in the new header are removed. \nTherefore, there should be some overlap between the old and the new header for this command option to be meaningful. \nThe option is typically used to reorder the reference sequence dictionary in the header.\n\nReplacing the header of a .sam/.bam file may destroy the sorting order of the file. In this case, the sorting order in \nthe header is set to \"unknown\" by elPrep in the output file (cf. the 'so' tag).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-unmapped-reads",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG\n is set, conforming to the SAM specification.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-unmapped-reads-strict",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG\n is set, conforming to the SAM specification. Also removes alignments where the mapping position (POS) is 0 or where the \n reference sequence name (RNAME) is *. Such alignments are considered unmapped by the SAM specification, but some \n alignment programs may not mark the FLAG of those alignments as unmapped.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-mapping-quality mapping-quality",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Remove all alignments with mapping quality lower than the given mapping quality.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-exact-mapping-reads",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments where the mapping is not an exact match with the reference, albeit soft-clipping is allowed. This\n filter checks the CIGAR string and only allows occurences of M and S.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-exact-mapping-reads-strict",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments where the mapping is not an exact match with reference or not a unique match. This filter checks \nfor each read that the following optional fields are present with the following values: X0=1 (unique mapping), X1=0 \n(no suboptimal hit), XM=0 (no mismatch), XO=0 (no gap opening), XG=0 (no gap extension).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-overlapping-reads bed-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all reads where the mapping positions do not overlap with any region specified in the bed file. Specifically, \neither the start or end of the read's mapping position must be contained in an interval, or the read is removed from the\n output.\n \n This option produces a different result from --target-regions option. For the difference between both options and \n details on the algorithms, please consult our latest publication.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--replace-read-group read-group-string",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter replaces or adds read groups to the alignments in the input file. This command option takes a single \nargument, a string of the form \"ID:group1 LB:lib1 PL:illumina PU:unit1 SM:sample1\" where the names following ID:, PL:, \nPU:, etc. can be any user-chosen name conforming to the SAM specification. See SAM Format Specification Section 1.3 for \ndetails: The string passed here can be any string conforming to a header line for tag @RG, omitting the tag @RG itself, \nand using whitespace as separators for the line instead of TABs.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-duplicates",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter marks the duplicate reads in the input file by setting bit 0x400 of their FLAG conforming to the SAM \nspecification. For details on the algorithm and comparison to other tools, please consult our publication list.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-optical-duplicates file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "When the --mark-duplicates filter is passed, one can also pass --mark-optical-duplicates. This option makes sure that \noptical duplicate marking is performed and a metrics file is generated that contains read statistics such as number of \nunmapped reads, secondary reads, duplicate reads, optical duplicates, library size estimate, etc. For details on the \nalgorithm and comparison to other tools, please consult our publication list.\n\nThe metrics file generated by --mark-optical-duplicates is compatible with MultiQC for visualisation.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--optical-duplicates-pixel-distance nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option allows specifying the pixel distance that is used for optical duplicate marking. This option is only usable \nin conjunction with --mark-optical-duplicates. The default value for the pixel distance is 100. In general, a pixel \ndistance of 100 is recommended for data generated using unpatterned flowcells (e.g. HiSeq2500) and a pixel distance of \n2500 is recommended for patterned flowcells (e.g. NovaSeq/HiSeq4000). \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--remove-duplicates",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes all reads marked as duplicates. Duplicate reads are reads where their FLAG's bit 0x400 is set \nconforming the SAM specification. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--remove-optional-fields [all | list]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes for each alignment either all optional fields or all optional fields specified in the given list. \nThe list of optional fields to remove has to be of the form \"tag1, tag2, ...\" where tag1, tag2, etc are the tags of the \noptional fields that need to be deleted.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--keep-optional-fields [none | list]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes for each alignment either none of its optional fields, or all optional fields except those specified\n in the given list. The list of optional fields to keep has to be of the form \"tag1, tag2, ...\" where tag1, tag2, etc \n are the tags of the optional fields that need to be kept in the output.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--clean-sam",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter fixes alignments in two ways:\n\n* it soft clips alignments that hang off the end of its reference sequence\n* it sets the mapping quality to 0 if the alignment is unmapped\n\nThis filter is similar to the CleanSam command of Picard.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr recal-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter performs base quality score recalibration. The recal-file is used for logging the recalibration tables \ncomputed during base recalibration. This file is compatible with MultiQC for visualisation.\n\nThere are additional elprep options that can be used for configuring the base quality score recalibration:\n\n* --reference elfasta (required)\n* --known-sites list (optional)\n* --quantize-levels nr (optional)\n* --sqq list (optional)\n* --max-cycle nr (optional)\n* --target-regions bed-file (optional)\n\nSee detailed descriptions of these options next.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--reference elfasta-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to pass a reference file for base quality score recalibration (--bqsr). The reference file must be \nin the .elfasta format, specific to elPrep. \n\nYou can create an .elfasta file from a .fasta file using the elprep command fasta-to-elfasta. For example:\n\n\telprep fasta-to-elfasta ucsc.hg19.fasta ucsc.hg19.elfasta\n\t\n\nYou only need to pass this option once if you are using both the --bqsr and --haplotypecaller options (which both \nrequire passing a reference file).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--known-sites list",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to pass a number of known polymorphic sites that will be excluded during base recalibration (--bqsr)\n.  The list is a list of files in the .elsites format, specific to elPrep. For example:\n\n\t--known-sites Mills_and_1000G_gold_standard.indels.hg19.elsites,dbsnp_137.hg19.elsites\n\nYou can create .elsites files from .vcf or .bed files using the vcf-to-elsites and bed-to-elsites parameters respectively. For example:\n\n\telprep vcf-to-elsites dbsnp_137.hg19.vcf dbsnp_137.hg19.elsites\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--quantize-levels nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to specify the number of levels for quantizing quality scores during base quality score recalibration (--bqsr). The default value is 0.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sqq list",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to indicate to use static quantized quality scores to a given number of levels during base quality score recalibration (--bqsr). This list should be of the form \"[nr, nr, nr]\". The default value is [].\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--max-cycle nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to specify the maximum cycle value during base quality score recalibration (--bqsr). The default value is 500.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--target-regions bed-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to restrict which reads the base recalibration operates on by passing a .bed file that lists \nwhich genomic regions to consider. When this option is used, the reads that fall out of the specified regions are \nremoved from the output .bam file. The option is for example used when processing exomes. \n\nThis option produces a different result from --filter-non-overlapping-reads option. For the difference between both \noptions and details on the algorithms, please consult our latest publication.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-tablename-prefix prefix",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to determine the prefix for the table names when logging the recalibration tables. The default\nvalue ensures that the output is compatible with MultiQC. It is normally not necessary to set this option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-optical-duplicates-intermediate file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used in the context of filtering files created using the elprep split command. It is used internally by \nthe elprep sfm command, but can be used when writing your own split/filter/merge scripts.\n\nThis option tells elPrep to perform optical duplicate marking and to write the result to an intermediate metrics file.\nThe intermediate metrics file generated this way can later be merged with other intermediate metrics files, see the \nmerge-optical-duplicates-metrics command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-tables-only table-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used in the context of filtering files created using the elprep split command. It is used internally by \nthe elprep sfm command, but can be used when writing your own split/filter/merge scripts.\n\nThis option tells elPrep to perform base quality score recalibration and to write the result of the recalibration to an \nintermediate table file. This table file will need to be merged with other intermediate recalibration results during the\napplication of the base quality score recalibration. See the --bqsr-apply option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-apply path",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used when filtering files created by the elprep split command. It is used internally by the elprep sfm \ncommand, and can be used when writing your own split/filter/merge scripts.\n\nThis option is used for applying base quality score recalibration on an input file. It expects a path parameter that \nrefers to a directory that contains intermediate recalibration results for multiple files created using the \n--bqsr-tables-only option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--haplotypecaller vcf-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option performs variant calling for detecting germline SNPS and indels. The vcf-file is used for storing the vcf\n output. This file can be in gzipped format.\n\nThere are additional elprep options that can be used for configuring the haplotype variant caller:\n\n* --reference elfasta (required)\n* --reference-confidence [GVCF | BP_RESOLUTION | NONE] (optional)\n* --sample-name name (optional)\n* --activity-profile igv-file (optional)\n* --assembly-regions igv-file (optional)\n* --assembly-region-padding nr (optional)\n* --target-regions (optional)\n\nSee detailed descriptions of these options next.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--reference elfasta",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to pass a reference file for variant calling (--haplotypecaller). The reference file must be in the \n.elfasta format, specific to elPrep. \n\nYou can create an .elfasta file from a .fasta file using the elprep command fasta-to-elfasta. For example:\n\n\telprep fasta-to-elfasta ucsc.hg19.fasta ucsc.hg19.elfasta\n\nYou only need to pass this option once if you are using both the --bqsr and --haplotypecaller options (which both \nrequire passing a reference file). \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--reference-confidence [GVCF | BP_RESOLUTION | NONE]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to set the mode for emitting reference confidence scores when performing variant calling \n(--haplotypecaller). There are three options to choose from:\n\n* GVCF (default): emit the GVCF format, i.e. the reference model is written with condensed non-variant blocks\n* BP_RESOLUTION: the reference model is emitted site by site\n* NONE: reference confidence calls are not emitted\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sample-name name",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "The elPrep haplotypecaller (--haplotypecaller) only works for single samples. In case the input .bam file contains \nmultiple samples, the --sample-name option can be used to select the sample reads on which to operate on.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--activity-profile igv-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Use this option to output the activity profile calculated by the haplotypecaller to the given file in IGV format.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--activity-regions igv-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to output the assembly regions calculated by haplotypecaller to the speficied file in IGV format\n.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--assembly-region-padding nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option specfies the number of additional bases to include around each assembly region for variant calling.\n\n### --target-regions bed-file\n\nBy default, the haplotypecaller scans the full genome for variants. Use this option to restrict the variant caller to \nspecific regions by passing a .bed file. It is for example used when processing \nexomes.\n\nYou only need to pass this option once if you are using both the --bqsr and --haplotypcaller options.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sorting-order [keep | unknown | unsorted | queryname | coordinate]",
        "parent_header": [
          "Manual Reference Pages",
          "Sorting Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option determines the order of the alignments in the output file. The command option must be followed by \none of five possible orders:\n\n1. *keep*: The original order of the input file is preserved in the output file. This is the default setting when the \n--sorting-order option is not passed. Some filters may change the order of the input, in which case elPrep forces a sort\n to recover the order of the input file.\n2. *unknown*: The order of the alignments in the output file is undetermined, elPrep performs no sorting of any form. \nThe order in the header of the output file will be *unknown*.\n3. *unsorted*: The alignments in the output file are unsorted, elPrep performs no sorting of any form. The order in the \nheader of the output file will be *unsorted*.\n4. *queryname*: The output file is sorted according to the query name. The sort is enforced and guaranteed to be \nexecuted. If the original input file is already sorted by query name and you wish to avoid a sort with elPrep, use the \n*keep* option instead.\n5. *coordinate*: The output file is sorted according to coordinate order. The sort is enforced and guaranteed to be \nexecuted. If the original input file is already sorted by coordinate order and you wish to avoid a sort with elPrep, \nuse the *keep* option instead.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--nr-of-threads number",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the number of threads that elPrep uses during execution. The default number of threads is equal\n to the number of cpu threads.\n\nIt is normally not necessary to set this option. elPrep by default allocates the optimal number of threads.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--timed",
        "parent_header": [
          "Manual Reference Pages",
          "Execution Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to time the different phases of the execution of the elprep command, e.g. time spent on \nreading from file into memory, filtering, sorting, etc.\n\nIt is normally not necessary to set this option. It is only useful to get some details on where execution time is spent.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--log-path path",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to specify a path where elPrep can store log files. The default path is the logs folder in \nyour home path (~/logs).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Format conversion tools",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "elPrep uses internal formats for representing .vcf, .bed, or .fasta files used by specific filter/sfm options. elPrep \nprovides commands for creating these files from existing .vcf, .bed or .fasta files.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Synposis",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "\telprep vcf-to-elsites input.vcf output.elsites --log-path /home/user/logs\n\n## Description\n\nConverts a .vcf file to an .elsites file. Such a file can be passed to the --known-sites suboption of the --bqsr option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Split and Merge tools",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "The elprep split command can be used to split up .sam files into smaller files that store the reads \"per chromosome,\" or\n more precisely groups of chromosomes. elPrep determines the chromosomes by analyzing the sequence dictionary in the \n header of the input file and generates a split file for groups of chromosomes that are roughly equal in size and that \n stores all read pairs that map to that group of chromosomes. elPrep additionally creates a file for storing the \n unmapped reads, and in the case of paired-end data, also a file for storing the pairs where reads map to different \n chromosomes. elPrep also duplicates the latter pairs across chromosome files so that preparation pipelines have access \n to all information they need to run correctly. Once processed, use the elprep merge command to merge the split files \n back into a single .sam file.\n\nSplitting the .sam file into smaller files for processing \"per chromosome\" is useful for reducing the memory pressure as\n these split files are typically significantly smaller than the  input file as a whole. Splitting also makes it possible\n  to parallelize the processing of a single .sam file by distributing the different split files across different \n  processing nodes.\n\nWe provide an sfm command that executes a pipeline while silently using the elprep filter and split/merge tools. It is \nof course possible to write scripts to combine the filter and split/merge tools yourself.\nWe provide a recipe for writing your own split/filter/merge scripts on our github wiki.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--intermediate-files-output-type [sam | bam]",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the format of the split files. By default, elprep uses the same format as the input file for \nthe split files. Changing the intermediate file output type may improve either runtime (.sam) or reduce peak disk usage \n(.bam).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--tmp-path",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to specify a path where elPrep can store temporary files that are created (and deleted) by \nthe split and merge commands that are silently called by the elprep sfm command. The default path is the folder from \nwhere you call elprep sfm.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--single-end",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "Use this command option to indicate the sfm command is processing single-end data. This information is important for the\n split/merge tools to operate correcly. For more details, see the description of the elprep split and elprep merge commands.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--contig-group-size number",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is passed to the split tool.\n\nThe elprep split command groups the sequence dictionary entries for deciding how to split up the input data. The goal is\n to end up with groups of sequence dictionary entries (contigs) for which the total length (sum of LN tags) is roughly \n the same among all groups. By default, the elprep split command identifies the sequence dictionary entry with the \n largest length (LN) and chooses this as a target size for the groups. \n\nThe --contig-group-size option allows configuring a specific group size. This size may be smaller than some of the \nsequence dictionary entries: elprep split will attempt to create as many groups of contigs of the chosen size, and \ncontigs which are \"too long\" will be put in their own group.\n\nConfiguring the contig group size has an impact on how large the split files are that are generated by the elprep split \ncommand. Consequently, this also impacts how much RAM elprep uses for processing the split files. The default group size\n determines the minimum amount of RAM that is necessary to process a .sam/.bam file without information loss. \n\nThe default value for the --contig-group-size option is 0. For this, elprep split makes groups based on the sequence \ndictionary entry with the biggest length (LN).\n\nChoosing the value 1 for the --contig-group-size tells elprep split to split the data \"per chromosome\", i.e. a split \nfile is created for each entry in the sequence dictionary.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Paired-end data (default)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command outputs two types of files:\n\n1. a subdirectory \"/path/to/output/splits/\". The split command groups the entries in the sequence dictionary of the input file and creates a file for each of these groups containing all reads that map to that group.\n2. a \"/path/to/output/output-prefix-spread.output-type\" file containing all reads of which the mate maps to a different entry in the sequence dictionary of the input file.\n\nTo process the files created by the elprep split command, one needs to call the elprep filter command for each entry in the path/to/output/splits/ directory as well as the /path/to/output/output-prefix-spread.output-type file. The output files produced this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-end data (--single-end)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command groups entries in the sequence dictionary of the input file and creates a file for each of these groups that contain all reads that map to that group, and writes those files to the /path/to/output/ directory.\n\nTo process the files created by the elprep split --single-end command, one needs to call the elprep filter command for each entry in the /path/to/output/ directory. The output files produces this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n\n## Options\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--output-prefix name",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "The split command groups entries in the sequence dictionary. The purpose of this grouping is to create groups of which the lengths of the entries (LN tags) add up to roughly the same size. \n\nThe names of the split files created by elprep split are generated by combing a prefix and a chromosome group name. The --output-prefix option sets that prefix. \n\nFor example, if the prefix is \"NA12878\", and the sfm command creates N groups for the sequence dictionary of the input file, then the names of the split files will be \"NA12878-group1.output-type\", \"NA12878-group2.output-type\", \"NA12878-group3.output-type\", and so on. A seperate file for the unmapped reads is created, e.g. \"NA12878-unmapped.output-type\".\n\nIf the user does not specify the --output-prefix option, the name of the input file, minus the file extension, is used as a prefix.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--output-type [sam | bam]",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the format of the split files. By default, elprep uses the same format as the input file for the split files.\n\n### --nr-of-threads number\n\nThis command option sets the number of threads that elPrep uses during execution for parsing/outputting .sam/.bam data. The default number of threads is equal to the number of cpu threads.\n\nIt is normally not necessary to set this option. elPrep by default allocates the optimal number of threads.\n\n### --single-end\n\nWhen this command option is set, the elprep split command will treat the data as single-end data. When the option is not used, the elprep split command will treat the data as paired-end data.\n\n### --log-path path\n\nSets the path for writing a log file.\n\n### --contig-group-size number\n\nThe elprep split command groups the sequence dictionary entries for deciding how to split up the input data. The --contig-group-size options allows configuring a specific group size. See the description of --contig-group-size for the elprep sfm command for more details.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExaScience/elprep"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Mailing List and Contact",
        "type": "Text_excerpt",
        "value": "Use the Google [forum](https://groups.google.com/d/forum/elprep) for discussions. You need a Google account to subscribe\n through the forum URL. You can also subscribe without a Google account by sending an email to \n elprep+subscribe@googlegroups.com.\n\nYou can also contact us via exascience@imec.be directly.\n\nFor inquiries about commercial licensing options contact us via exascience@imec.be. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-07-02T13:17:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-15T06:11:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "elPrep: a high-performance tool for analyzing sequence alignment/map files in sequencing pipelines."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "The elprep filter command requires two arguments: the input file and the output file. The input/output format can be \n.sam or .bam. elPrep determines the format of the input by analyzing the actual contents of the input file. The format \nof the output file is determined by looking at the file extension. elPrep also allows to use /dev/stdin and /dev/stdout \nas respective input or output sources for using Unix pipes. When doing so, elPrep assumes output is in .sam format, \nwhich can be changed by additional parameters (see below).\n\nThe elprep filter command-line tool has three types of command options: filters, which implement actual .sam/.bam \nmanipulations, sorting options, and execution-related options, for example for setting the number of threads. For \noptimal performance, issue a single elprep filter call that combines all filters you wish to apply.\n\nThe order in which command options are passed is ignored. For optimal performance, elPrep always applies \nfilters/operations in the following order:\n\n1. filter-unmapped-reads or filter-unmapped-reads-strict\n2. filter-mapping-quality\n3. filter-non-exact-mapping-reads or filter-non-exact-mapping-reads-strict\n4. filter-non-overlapping-reads\n5. clean-sam\n6. replace-reference-sequences\n7. replace-read-group\n8. mark-duplicates\n9. mark-optical-duplicates\n10. bqsr\n11. remove-duplicates\n12. remove-optional-fields\n13. keep-optional-fields\n14. haplotypecaller\n\nSorting is done after filtering.\n\nPlease also see the **elprep sfm** command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix pipes",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "elPrep is compatible with Unix pipes and allows using /dev/stdin and /dev/stdout as input or output sources. elPrep \nanalyzes the input from /dev/stdin to determine if it is in .sam or .bam format, and assumes that output to /dev/stdout \nis in .sam format, unless specified otherwise (see below).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Paired-end data (default)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command outputs two types of files:\n\n1. a subdirectory \"/path/to/output/splits/\". The split command groups the entries in the sequence dictionary of the input file and creates a file for each of these groups containing all reads that map to that group.\n2. a \"/path/to/output/output-prefix-spread.output-type\" file containing all reads of which the mate maps to a different entry in the sequence dictionary of the input file.\n\nTo process the files created by the elprep split command, one needs to call the elprep filter command for each entry in the path/to/output/splits/ directory as well as the /path/to/output/output-prefix-spread.output-type file. The output files produced this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-end data (--single-end)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command groups entries in the sequence dictionary of the input file and creates a file for each of these groups that contain all reads that map to that group, and writes those files to the /path/to/output/ directory.\n\nTo process the files created by the elprep split --single-end command, one needs to call the elprep filter command for each entry in the /path/to/output/ directory. The output files produces this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n\n## Options\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9434755502307149,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "elPrep is a high-performance tool for analyzing .sam/.bam files (up to and including variant calling) in sequencing pipelines. \nThe key advantage of elPrep is that it only performs a single-pass to process a .sam/.bam \nfile, independent of the number of processing steps that need to be applied in a particular pipeline, greatly improving \nruntime performance. \nelPrep is designed as an in-memory and multi-threaded application to fully take advantage of the processing power available \nwith modern servers. Its software architecture is based on functional programming techniques, which allows easy composition \nof multiple alignment filters and optimizations such as loop merging. To make this possible, elPrep proposes a couple of new algorithms. \nFor example, for duplicate marking we devised an algorithm that expresses the operation as a single-pass filter using memoization \ntechniques and hierarchical hash tables for efficient parallel synchronisation. For base quality score recalibration (BQSR) \nwe designed a parallel range-reduce algorithm. For variant calling, we designed a parallel algorithm that overlaps execution \nas much as possible with other phases in the pipeline. \nOur benchmarks show that elPrep executes a 5-step variant calling best practices pipeline (sorting, duplicate marking, base \nquality score recalibration and application, and variant calling) between 6-10 times faster than other tools for whole-exome \ndata, and 8-20x faster for whole-genome data. \nThe main advantage of elPrep is very fast execution times on high-end servers, as is available for example \nthrough cloud computing or custom server setups. We do not recommend using elPrep on laptops, desktops, \nor low-end servers. Please consult the system requirements below for more details.  \nelPrep is being developed at the [ExaScience Life Lab](http://www.exascience.com) at Imec. For questions, use our \nmailing list (below), our github page, or contact us via exascience@imec.be. \n\nFig. 1 Improvements with elprep 5 wrt runtime, RAM, and disk use for a variant calling best practices pipeline on a 50x \nPlatinum NA12878 WGS aligned against hg38. elPrep combines the execution of the 5 pipeline steps for efficient \nparallel execution. \nFor more benchmark details, please consult our publication list.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.911470118475799,
      "result": {
        "original_header": "Advantages",
        "type": "Text_excerpt",
        "value": "The advantages of elPrep include: \n* efficient multi-threaded execution\n* operates mainly in-memory, few intermediate files are generated\n* 100% equivalent output to results produced by other widely used tools\n* compatible with existing tools\n* modular, easy to add and remove pipeline steps\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9818624945407518,
      "result": {
        "original_header": "Licensing &amp; Availability",
        "type": "Text_excerpt",
        "value": "elPrep 5 is released and distributed under a **dual-licensing scheme**:\n1. It is released as an open-source project under the \nterms of the GNU Affero General Public License version 3 as published by the Free Software Foundation, with Additional \nTerms. Please see the file LICENSE.txt for a copy of the GNU Affero Public License and the Additional Terms. \n2. It is also available under the terms of the elPrep Premium License. This is the same code base but lifts some of the\nAGPL restrictions. Please see the file PREMIUMLICENSE.pdf for details. This license can be acquired via the [Flintbox \nplatform](https://imec.flintbox.com/technologies/fe07eac7-bef5-45a2-a2e3-b6c8f4e0d2d7).\n \nGo to our [terms of use](https://www.imec-int.com/en/terms-use-elprep) page for detailed information. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932579126760852,
      "result": {
        "original_header": "GitHub",
        "type": "Text_excerpt",
        "value": "The elPrep source code is freely available on GitHub. elPrep is implemented in Go and tested for Linux. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.910730097511344,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "The following is only relevant information if you wish to build elPrep yourself. It is not necessary to use the \nelPrep binary we provide. \nelPrep (since version 3.0) is implemented in Go. Please make sure you have a working installation of \nGo. You can either install Go from the [Go website](https://golang.org). Alternatively, most package managers provide \noptions to install Go as a development tool. Check the documentation of the package manager of your Linux distribution \nfor details. \nThis downloads the elPrep Go source code, and creates the elprep binary in your configured Go home folder, for example\n ~/go/bin/elprep. See the [GOPATH](https://golang.org/cmd/go/#hdr-GOPATH_environment_variable) variable for your Go home\n  folder. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9000939545960941,
      "result": {
        "original_header": "Extending elPrep",
        "type": "Text_excerpt",
        "value": "If you wish to extend elPrep, for example by adding your own filters, please consult our [API documentation](https://godoc.org/github.com/ExaScience/elprep).\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ExaScience/elprep/wiki"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExaScience/elprep/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 42
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ExaScience/elprep/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ExaScience/elprep"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Overview"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Synopsis",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "\telprep filter input.sam output.sam --mark-duplicates --mark-optical-duplicates output.metrics\n\t                                   --sorting-order coordinate \n\t                                   --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites \n\t                                   --haplotypecaller output.vcf.gz\n\n\telprep filter input.bam output.bam --mark-duplicates --mark-optical-duplicates output.metrics \n\t                                   --sorting-order coordinate \n\t                                   --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites \n\t                                   --haplotypecaller output.vcf.gz\n\n\telprep filter /dev/stdin /dev/stdout --mark-duplicates --mark-optical-duplicates output.metrics \n\t                                     --sorting-order coordinate \n\t                                     --bqsr output.recal --reference hg38.elfasta --known-sites dbsnp_138.hg38.elsites\t\n\t                                     --haplotypecaller output.vcf.gz\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Unix pipes",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "elPrep is compatible with Unix pipes and allows using /dev/stdin and /dev/stdout as input or output sources. elPrep \nanalyzes the input from /dev/stdin to determine if it is in .sam or .bam format, and assumes that output to /dev/stdout \nis in .sam format, unless specified otherwise (see below).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--replace-reference-sequences file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter is used for replacing the header of a .sam/.bam file by a new header. The new header is passed as a single \nargument following the command option. The format of the new header can either be a .dict file or another .sam/.bam file from which you wish to extract the new header.\n\nAll alignments in the input file that do not map to a chromosome that is present in the new header are removed. \nTherefore, there should be some overlap between the old and the new header for this command option to be meaningful. \nThe option is typically used to reorder the reference sequence dictionary in the header.\n\nReplacing the header of a .sam/.bam file may destroy the sorting order of the file. In this case, the sorting order in \nthe header is set to \"unknown\" by elPrep in the output file (cf. the 'so' tag).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-unmapped-reads",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG\n is set, conforming to the SAM specification.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-unmapped-reads-strict",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments in the input file that are unmapped. An alignment is determined unmapped when bit 0x4 of its FLAG\n is set, conforming to the SAM specification. Also removes alignments where the mapping position (POS) is 0 or where the \n reference sequence name (RNAME) is *. Such alignments are considered unmapped by the SAM specification, but some \n alignment programs may not mark the FLAG of those alignments as unmapped.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-mapping-quality mapping-quality",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Remove all alignments with mapping quality lower than the given mapping quality.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-exact-mapping-reads",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments where the mapping is not an exact match with the reference, albeit soft-clipping is allowed. This\n filter checks the CIGAR string and only allows occurences of M and S.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-exact-mapping-reads-strict",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all alignments where the mapping is not an exact match with reference or not a unique match. This filter checks \nfor each read that the following optional fields are present with the following values: X0=1 (unique mapping), X1=0 \n(no suboptimal hit), XM=0 (no mismatch), XO=0 (no gap opening), XG=0 (no gap extension).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--filter-non-overlapping-reads bed-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Removes all reads where the mapping positions do not overlap with any region specified in the bed file. Specifically, \neither the start or end of the read's mapping position must be contained in an interval, or the read is removed from the\n output.\n \n This option produces a different result from --target-regions option. For the difference between both options and \n details on the algorithms, please consult our latest publication.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--replace-read-group read-group-string",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter replaces or adds read groups to the alignments in the input file. This command option takes a single \nargument, a string of the form \"ID:group1 LB:lib1 PL:illumina PU:unit1 SM:sample1\" where the names following ID:, PL:, \nPU:, etc. can be any user-chosen name conforming to the SAM specification. See SAM Format Specification Section 1.3 for \ndetails: The string passed here can be any string conforming to a header line for tag @RG, omitting the tag @RG itself, \nand using whitespace as separators for the line instead of TABs.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-duplicates",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter marks the duplicate reads in the input file by setting bit 0x400 of their FLAG conforming to the SAM \nspecification. For details on the algorithm and comparison to other tools, please consult our publication list.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-optical-duplicates file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "When the --mark-duplicates filter is passed, one can also pass --mark-optical-duplicates. This option makes sure that \noptical duplicate marking is performed and a metrics file is generated that contains read statistics such as number of \nunmapped reads, secondary reads, duplicate reads, optical duplicates, library size estimate, etc. For details on the \nalgorithm and comparison to other tools, please consult our publication list.\n\nThe metrics file generated by --mark-optical-duplicates is compatible with MultiQC for visualisation.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--optical-duplicates-pixel-distance nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option allows specifying the pixel distance that is used for optical duplicate marking. This option is only usable \nin conjunction with --mark-optical-duplicates. The default value for the pixel distance is 100. In general, a pixel \ndistance of 100 is recommended for data generated using unpatterned flowcells (e.g. HiSeq2500) and a pixel distance of \n2500 is recommended for patterned flowcells (e.g. NovaSeq/HiSeq4000). \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--remove-duplicates",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes all reads marked as duplicates. Duplicate reads are reads where their FLAG's bit 0x400 is set \nconforming the SAM specification. \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--remove-optional-fields [all | list]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes for each alignment either all optional fields or all optional fields specified in the given list. \nThe list of optional fields to remove has to be of the form \"tag1, tag2, ...\" where tag1, tag2, etc are the tags of the \noptional fields that need to be deleted.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--keep-optional-fields [none | list]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter removes for each alignment either none of its optional fields, or all optional fields except those specified\n in the given list. The list of optional fields to keep has to be of the form \"tag1, tag2, ...\" where tag1, tag2, etc \n are the tags of the optional fields that need to be kept in the output.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--clean-sam",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter fixes alignments in two ways:\n\n* it soft clips alignments that hang off the end of its reference sequence\n* it sets the mapping quality to 0 if the alignment is unmapped\n\nThis filter is similar to the CleanSam command of Picard.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr recal-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This filter performs base quality score recalibration. The recal-file is used for logging the recalibration tables \ncomputed during base recalibration. This file is compatible with MultiQC for visualisation.\n\nThere are additional elprep options that can be used for configuring the base quality score recalibration:\n\n* --reference elfasta (required)\n* --known-sites list (optional)\n* --quantize-levels nr (optional)\n* --sqq list (optional)\n* --max-cycle nr (optional)\n* --target-regions bed-file (optional)\n\nSee detailed descriptions of these options next.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--known-sites list",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to pass a number of known polymorphic sites that will be excluded during base recalibration (--bqsr)\n.  The list is a list of files in the .elsites format, specific to elPrep. For example:\n\n\t--known-sites Mills_and_1000G_gold_standard.indels.hg19.elsites,dbsnp_137.hg19.elsites\n\nYou can create .elsites files from .vcf or .bed files using the vcf-to-elsites and bed-to-elsites parameters respectively. For example:\n\n\telprep vcf-to-elsites dbsnp_137.hg19.vcf dbsnp_137.hg19.elsites\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--quantize-levels nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to specify the number of levels for quantizing quality scores during base quality score recalibration (--bqsr). The default value is 0.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sqq list",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to indicate to use static quantized quality scores to a given number of levels during base quality score recalibration (--bqsr). This list should be of the form \"[nr, nr, nr]\". The default value is [].\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--max-cycle nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to specify the maximum cycle value during base quality score recalibration (--bqsr). The default value is 500.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--target-regions bed-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to restrict which reads the base recalibration operates on by passing a .bed file that lists \nwhich genomic regions to consider. When this option is used, the reads that fall out of the specified regions are \nremoved from the output .bam file. The option is for example used when processing exomes. \n\nThis option produces a different result from --filter-non-overlapping-reads option. For the difference between both \noptions and details on the algorithms, please consult our latest publication.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-tablename-prefix prefix",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to determine the prefix for the table names when logging the recalibration tables. The default\nvalue ensures that the output is compatible with MultiQC. It is normally not necessary to set this option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--mark-optical-duplicates-intermediate file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used in the context of filtering files created using the elprep split command. It is used internally by \nthe elprep sfm command, but can be used when writing your own split/filter/merge scripts.\n\nThis option tells elPrep to perform optical duplicate marking and to write the result to an intermediate metrics file.\nThe intermediate metrics file generated this way can later be merged with other intermediate metrics files, see the \nmerge-optical-duplicates-metrics command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-tables-only table-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used in the context of filtering files created using the elprep split command. It is used internally by \nthe elprep sfm command, but can be used when writing your own split/filter/merge scripts.\n\nThis option tells elPrep to perform base quality score recalibration and to write the result of the recalibration to an \nintermediate table file. This table file will need to be merged with other intermediate recalibration results during the\napplication of the base quality score recalibration. See the --bqsr-apply option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--bqsr-apply path",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used when filtering files created by the elprep split command. It is used internally by the elprep sfm \ncommand, and can be used when writing your own split/filter/merge scripts.\n\nThis option is used for applying base quality score recalibration on an input file. It expects a path parameter that \nrefers to a directory that contains intermediate recalibration results for multiple files created using the \n--bqsr-tables-only option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--haplotypecaller vcf-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option performs variant calling for detecting germline SNPS and indels. The vcf-file is used for storing the vcf\n output. This file can be in gzipped format.\n\nThere are additional elprep options that can be used for configuring the haplotype variant caller:\n\n* --reference elfasta (required)\n* --reference-confidence [GVCF | BP_RESOLUTION | NONE] (optional)\n* --sample-name name (optional)\n* --activity-profile igv-file (optional)\n* --assembly-regions igv-file (optional)\n* --assembly-region-padding nr (optional)\n* --target-regions (optional)\n\nSee detailed descriptions of these options next.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--reference-confidence [GVCF | BP_RESOLUTION | NONE]",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option is used to set the mode for emitting reference confidence scores when performing variant calling \n(--haplotypecaller). There are three options to choose from:\n\n* GVCF (default): emit the GVCF format, i.e. the reference model is written with condensed non-variant blocks\n* BP_RESOLUTION: the reference model is emitted site by site\n* NONE: reference confidence calls are not emitted\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sample-name name",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "The elPrep haplotypecaller (--haplotypecaller) only works for single samples. In case the input .bam file contains \nmultiple samples, the --sample-name option can be used to select the sample reads on which to operate on.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--activity-profile igv-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "Use this option to output the activity profile calculated by the haplotypecaller to the given file in IGV format.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--activity-regions igv-file",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option can be used to output the assembly regions calculated by haplotypecaller to the speficied file in IGV format\n.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--assembly-region-padding nr",
        "parent_header": [
          "Manual Reference Pages",
          "Filter Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This option specfies the number of additional bases to include around each assembly region for variant calling.\n\n### --target-regions bed-file\n\nBy default, the haplotypecaller scans the full genome for variants. Use this option to restrict the variant caller to \nspecific regions by passing a .bed file. It is for example used when processing \nexomes.\n\nYou only need to pass this option once if you are using both the --bqsr and --haplotypcaller options.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--sorting-order [keep | unknown | unsorted | queryname | coordinate]",
        "parent_header": [
          "Manual Reference Pages",
          "Sorting Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option determines the order of the alignments in the output file. The command option must be followed by \none of five possible orders:\n\n1. *keep*: The original order of the input file is preserved in the output file. This is the default setting when the \n--sorting-order option is not passed. Some filters may change the order of the input, in which case elPrep forces a sort\n to recover the order of the input file.\n2. *unknown*: The order of the alignments in the output file is undetermined, elPrep performs no sorting of any form. \nThe order in the header of the output file will be *unknown*.\n3. *unsorted*: The alignments in the output file are unsorted, elPrep performs no sorting of any form. The order in the \nheader of the output file will be *unsorted*.\n4. *queryname*: The output file is sorted according to the query name. The sort is enforced and guaranteed to be \nexecuted. If the original input file is already sorted by query name and you wish to avoid a sort with elPrep, use the \n*keep* option instead.\n5. *coordinate*: The output file is sorted according to coordinate order. The sort is enforced and guaranteed to be \nexecuted. If the original input file is already sorted by coordinate order and you wish to avoid a sort with elPrep, \nuse the *keep* option instead.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--nr-of-threads number",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the number of threads that elPrep uses during execution. The default number of threads is equal\n to the number of cpu threads.\n\nIt is normally not necessary to set this option. elPrep by default allocates the optimal number of threads.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--timed",
        "parent_header": [
          "Manual Reference Pages",
          "Execution Command Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to time the different phases of the execution of the elprep command, e.g. time spent on \nreading from file into memory, filtering, sorting, etc.\n\nIt is normally not necessary to set this option. It is only useful to get some details on where execution time is spent.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--log-path path",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to specify a path where elPrep can store log files. The default path is the logs folder in \nyour home path (~/logs).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Format conversion tools",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "elPrep uses internal formats for representing .vcf, .bed, or .fasta files used by specific filter/sfm options. elPrep \nprovides commands for creating these files from existing .vcf, .bed or .fasta files.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Synposis",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "\telprep vcf-to-elsites input.vcf output.elsites --log-path /home/user/logs\n\n## Description\n\nConverts a .vcf file to an .elsites file. Such a file can be passed to the --known-sites suboption of the --bqsr option.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Split and Merge tools",
        "parent_header": [
          "Manual Reference Pages"
        ],
        "type": "Text_excerpt",
        "value": "The elprep split command can be used to split up .sam files into smaller files that store the reads \"per chromosome,\" or\n more precisely groups of chromosomes. elPrep determines the chromosomes by analyzing the sequence dictionary in the \n header of the input file and generates a split file for groups of chromosomes that are roughly equal in size and that \n stores all read pairs that map to that group of chromosomes. elPrep additionally creates a file for storing the \n unmapped reads, and in the case of paired-end data, also a file for storing the pairs where reads map to different \n chromosomes. elPrep also duplicates the latter pairs across chromosome files so that preparation pipelines have access \n to all information they need to run correctly. Once processed, use the elprep merge command to merge the split files \n back into a single .sam file.\n\nSplitting the .sam file into smaller files for processing \"per chromosome\" is useful for reducing the memory pressure as\n these split files are typically significantly smaller than the  input file as a whole. Splitting also makes it possible\n  to parallelize the processing of a single .sam file by distributing the different split files across different \n  processing nodes.\n\nWe provide an sfm command that executes a pipeline while silently using the elprep filter and split/merge tools. It is \nof course possible to write scripts to combine the filter and split/merge tools yourself.\nWe provide a recipe for writing your own split/filter/merge scripts on our github wiki.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--intermediate-files-output-type [sam | bam]",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the format of the split files. By default, elprep uses the same format as the input file for \nthe split files. Changing the intermediate file output type may improve either runtime (.sam) or reduce peak disk usage \n(.bam).\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--tmp-path",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is used to specify a path where elPrep can store temporary files that are created (and deleted) by \nthe split and merge commands that are silently called by the elprep sfm command. The default path is the folder from \nwhere you call elprep sfm.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--single-end",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "Use this command option to indicate the sfm command is processing single-end data. This information is important for the\n split/merge tools to operate correcly. For more details, see the description of the elprep split and elprep merge commands.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--contig-group-size number",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option is passed to the split tool.\n\nThe elprep split command groups the sequence dictionary entries for deciding how to split up the input data. The goal is\n to end up with groups of sequence dictionary entries (contigs) for which the total length (sum of LN tags) is roughly \n the same among all groups. By default, the elprep split command identifies the sequence dictionary entry with the \n largest length (LN) and chooses this as a target size for the groups. \n\nThe --contig-group-size option allows configuring a specific group size. This size may be smaller than some of the \nsequence dictionary entries: elprep split will attempt to create as many groups of contigs of the chosen size, and \ncontigs which are \"too long\" will be put in their own group.\n\nConfiguring the contig group size has an impact on how large the split files are that are generated by the elprep split \ncommand. Consequently, this also impacts how much RAM elprep uses for processing the split files. The default group size\n determines the minimum amount of RAM that is necessary to process a .sam/.bam file without information loss. \n\nThe default value for the --contig-group-size option is 0. For this, elprep split makes groups based on the sequence \ndictionary entry with the biggest length (LN).\n\nChoosing the value 1 for the --contig-group-size tells elprep split to split the data \"per chromosome\", i.e. a split \nfile is created for each entry in the sequence dictionary.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Paired-end data (default)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command outputs two types of files:\n\n1. a subdirectory \"/path/to/output/splits/\". The split command groups the entries in the sequence dictionary of the input file and creates a file for each of these groups containing all reads that map to that group.\n2. a \"/path/to/output/output-prefix-spread.output-type\" file containing all reads of which the mate maps to a different entry in the sequence dictionary of the input file.\n\nTo process the files created by the elprep split command, one needs to call the elprep filter command for each entry in the path/to/output/splits/ directory as well as the /path/to/output/output-prefix-spread.output-type file. The output files produced this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Single-end data (--single-end)",
        "parent_header": [
          "Manual Reference Pages",
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "The split command groups entries in the sequence dictionary of the input file and creates a file for each of these groups that contain all reads that map to that group, and writes those files to the /path/to/output/ directory.\n\nTo process the files created by the elprep split --single-end command, one needs to call the elprep filter command for each entry in the /path/to/output/ directory. The output files produces this way need to be merged with the elprep merge command. This is implemented by the elprep sfm command.\n\n## Options\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--output-prefix name",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "The split command groups entries in the sequence dictionary. The purpose of this grouping is to create groups of which the lengths of the entries (LN tags) add up to roughly the same size. \n\nThe names of the split files created by elprep split are generated by combing a prefix and a chromosome group name. The --output-prefix option sets that prefix. \n\nFor example, if the prefix is \"NA12878\", and the sfm command creates N groups for the sequence dictionary of the input file, then the names of the split files will be \"NA12878-group1.output-type\", \"NA12878-group2.output-type\", \"NA12878-group3.output-type\", and so on. A seperate file for the unmapped reads is created, e.g. \"NA12878-unmapped.output-type\".\n\nIf the user does not specify the --output-prefix option, the name of the input file, minus the file extension, is used as a prefix.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "--output-type [sam | bam]",
        "parent_header": [
          "Manual Reference Pages",
          "Options"
        ],
        "type": "Text_excerpt",
        "value": "This command option sets the format of the split files. By default, elprep uses the same format as the input file for the split files.\n\n### --nr-of-threads number\n\nThis command option sets the number of threads that elPrep uses during execution for parsing/outputting .sam/.bam data. The default number of threads is equal to the number of cpu threads.\n\nIt is normally not necessary to set this option. elPrep by default allocates the optimal number of threads.\n\n### --single-end\n\nWhen this command option is set, the elprep split command will treat the data as single-end data. When the option is not used, the elprep split command will treat the data as paired-end data.\n\n### --log-path path\n\nSets the path for writing a log file.\n\n### --contig-group-size number\n\nThe elprep split command groups the sequence dictionary entries for deciding how to split up the input data. The --contig-group-size options allows configuring a specific group size. See the description of --contig-group-size for the elprep sfm command for more details.\n\n## Name\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999999532747,
      "result": {
        "original_header": "Licensing &amp; Availability",
        "type": "Text_excerpt",
        "value": "elPrep 5 binaries can be compiled from the source code available on GitHub, or can also be installed \nvia [anaconda/bioconda](https://anaconda.org/bioconda/elprep):\n```bash\nconda install -c bioconda elprep\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9888924618026926,
      "result": {
        "original_header": "GitHub",
        "type": "Text_excerpt",
        "value": "The elPrep source code is freely available on GitHub. elPrep is implemented in Go and tested for Linux. \n* https://github.com/exascience/elprep\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.996145411739206,
      "result": {
        "original_header": "Building",
        "type": "Text_excerpt",
        "value": "The following is only relevant information if you wish to build elPrep yourself. It is not necessary to use the \nelPrep binary we provide. \nelPrep (since version 3.0) is implemented in Go. Please make sure you have a working installation of \nGo. You can either install Go from the [Go website](https://golang.org). Alternatively, most package managers provide \noptions to install Go as a development tool. Check the documentation of the package manager of your Linux distribution \nfor details. \nFirst checkout the elPrep sources using the following command: \n\t\tgo get -u github.com/exascience/elprep \nThis downloads the elPrep Go source code, and creates the elprep binary in your configured Go home folder, for example\n ~/go/bin/elprep. See the [GOPATH](https://golang.org/cmd/go/#hdr-GOPATH_environment_variable) variable for your Go home\n  folder. \nAdd the binary to your path, for example:\n  \n          export PATH=$PATH:~/go/bin\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994967860421788,
      "result": {
        "original_header": "Compatibility",
        "type": "Text_excerpt",
        "value": "elPrep has been developed for Linux and has not been tested for other operating systems. We have tested elPrep with the \nfollowing Linux distributions: \n* Ubuntu 14.04.5 LTS\n* Manjaro Linux\n* Red Hat Enterprise Linux 6.4 and 6.5\n* Amazon Linux 2\n \n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ExaScience/elprep/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ExaScience/elprep/raw/master/images/wgs-benchmarks-elprep5.jpg"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "elprep"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ExaScience"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 2571081,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2022-02-09T12:19:29Z",
        "date_published": "2022-02-09T12:50:06Z",
        "description": "Binaries were compiled for Linux using go1.17.\r\n\r\nBug fix:\r\n- Added metrics output for single-end input data.\r\n\r\nMany thanks to Leonor Palmeira for reporting.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.1.2",
        "name": "elPrep 5.1.2 release",
        "release_id": 59119363,
        "tag": "v5.1.2",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/59119363",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/59119363",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2021-10-04T09:09:41Z",
        "date_published": "2021-10-04T09:13:18Z",
        "description": "Binaries were compiled for Linux using go1.17.\r\n\r\nBug fix:\r\n- added missing source code file\r\n\r\nMany thanks to Matthias De Smet",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.1.1",
        "name": "elPrep 5.1.1 release",
        "release_id": 50726532,
        "tag": "v5.1.1",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/50726532",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/50726532",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2021-10-01T09:45:16Z",
        "date_published": "2021-10-01T13:05:45Z",
        "description": "Binaries can be downloaded here:\r\nhttps://www.imec-int.com/en/expertise/lifesciences/genomics/dna-sequence-analysis-software\r\n\r\nUpdate to the sfm command:\r\n\r\nAdded merging of headers when using the sfm command with a directory\r\ncontaining multiple files as input.\r\n\r\nThe merging respects the requirements outlined in the SAM spec:\r\n- order of sequence dictionaries is kept\r\n- read group identifiers are made unique if needed + optional rg tags of\r\n  reads are updated accordingly\r\n- program line identifiers are made unique if needed + optional pg tags\r\n  of reads are updated accordingly\r\n- comment lines are merged\r\n- the sorting order is set to Unknown\r\n\r\nIf elprep cannot merge while guaranteeing the above constraints, an\r\nerror is produced.\r\n\r\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.1.0",
        "name": "elPrep5.1.0 release",
        "release_id": 50632100,
        "tag": "v5.1.0",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/50632100",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/50632100",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2021-05-19T12:49:16Z",
        "date_published": "2021-05-19T15:20:02Z",
        "description": "Binaries can be downloaded here:\r\nhttps://www.imec-int.com/en/expertise/lifesciences/genomics/dna-sequence-analysis-software\r\n\r\nPerformance improvements:\r\n- Updated the explicit calls to the gc, improving average runtime\r\n\r\nSmall bug fixes and code clean up:\r\n- Added immediate error when calling sfm with --haplotype-caller without reference\r\n- Updated calls to match renaming in latest release of bitset library\r\n\r\nIncluded paper reference in README.\r\n\r\nMany thanks to Leonor Palmeira for reporting bugs.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.0.2",
        "name": "elPrep5.0.2 release",
        "release_id": 43227073,
        "tag": "v5.0.2",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/43227073",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/43227073",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2021-02-03T13:24:31Z",
        "date_published": "2021-02-04T09:03:44Z",
        "description": "Binaries can be downloaded here:\r\nhttps://www.imec-int.com/en/expertise/lifesciences/genomics/dna-sequence-analysis-software\r\n\r\nSmall bug fixes and code clean up:\r\n\r\n- Fixed optional logging of haplotype caller (using \u2014activity-profile and \u2014assembly-regions)\r\n- Fixed \u2014log-path to create full directory path if necessary\r\n- Added an error message when using BQSR without read groups.\r\n\r\nMany thanks to Leonor Palmeira and Jacques Dainat for reporting bugs.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.0.1",
        "name": "elPrep5.0.1 Binaries",
        "release_id": 37340256,
        "tag": "v5.0.1",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/37340256",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/37340256",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2020-12-08T15:32:55Z",
        "date_published": "2020-12-08T15:56:49Z",
        "description": "Binaries can be downloaded here:\r\n\r\nhttps://www.imec-int.com/en/expertise/lifesciences/genomics/dna-sequence-analysis-software\r\n\r\nThe major new feature of elPrep 5 is the addition of variant calling, which means that elPrep can now do a full variant calling pipeline on its own, starting from an aligned BAM file, and producing a VCF file. We follow the haplotype caller algorithm.\r\n\u00a0\r\nThere are a number of additional improvements and changes, some of which, but not all related to variant calling.\r\n\r\nFunctionality\r\n\t-\tThe option \u2014haplotypecaller for variant calling\r\n\r\nTool changes\r\n\t-\t The previous --bqsr-reference option has been renamed to --reference because it is also used for the Haplotypecaller.\r\n\t-\tThere exist different semantics in different tools for implementing -L options that are used to filter reads based on genomic regions. The already existing --remove-non-overlapping-reads option implements a different option from the newly added \u2014target-regions, which is especially relevant for the Haplotypecaller. If you use the --remove-non-overlapping-reads option, reads outside of the regions of the given BED file will be removed, but the variant calling will *not* be restricted to the regions in that BED file, which may lead to surprisingly large VCF files. If you want to restrict variant calling to those regions, use --target-regions instead. A peculiar corner case occurs when you use base quality score recalibration and --target-regions in the same pipeline -, the reads outside of the BED region will then effectively also be removed (just a bit later in the pipeline than with --remove-non-overlapping-reads). There are other peculiar effects. For example,  the \u2014target-regions option does not restrict the variant caller exactly to the BED regions, but adds some padding around those regions, so effectively processes reads outside of these regions as well. We carefully covered all these corner cases in detail to ensure elPrep\u2019s result are identical to these semantics.\r\n\t-\tComparing reads by coordinate order is now more fine-grained.\r\n\t-\tWe have removed the previously already deprecated original filter command that existed only for compatibility with very old versions of elPrep. This should not matter for the majority of end users.\r\n\t-\tWe have dropped the undocumented --deterministic and --mark-duplicates-deterministic options. Marking duplicates is now always deterministic. The --deterministic option has been replaced with compile-time options. They are rarely interesting for end users.\r\n\r\nFile handling and formats\r\n\t-\tWe have improved VCF parsing and formatting to be in line with Haplotypecaller requirements. For example, the GT field is now explicitly supported, among other things.\r\n\t-\tWe do not require the presence of bcftools for parsing or formatting .vcf.gz files anymore, but now handle them completely ourselves. As a downside, the BCF format is not supported anymore in elPrep 5. If you need BCF support, consider converting between BCF and VCF separately, for example with bcftools.\r\n\t-\tWhether input files are gzip-compressed (for example, BAM or .vcf.gz files) is not determined anymore by file extensions, but by looking at the actual contents of the input files. This makes elPrep more stable with regard to non-standard file extensions, and for example, now also allows for accepting BAM files as inputs from Unix pipes.\r\n\t-\tWe now support an --output-type parameter to select SAM or BAM format for output. This is useful, for example, if you want to send BAM files to Unix pipes.\r\n\t-\tWhen parsing BED files, we do not process comment, track, or browser lines anymore, but simply ignore them now.\r\n\u00a0\r\nAPI\r\n\t-\tWe have dropped Go-style error handling with error return codes in the elPrep source code in most places, in favor of exception-style error handling. For the end user, this difference doesn\u2019t matter, but this is primarily for making lives easier for developers.\r\n\t-\tWe dropped support for concurrent access to ELFASTA files in favor of exclusively using memory-mapped access.\r\n\u00a0\r\nPerformance\r\n\t-\tVarious other bug fixes and improvements.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v5.0.0",
        "name": "elPrep v5.0.0 release",
        "release_id": 34996568,
        "tag": "v5.0.0",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v5.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/34996568",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/34996568",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v5.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pcostanza",
          "type": "User"
        },
        "date_created": "2020-08-19T14:30:17Z",
        "date_published": "2020-08-19T14:47:55Z",
        "description": "elPrep binaries compiled with go1.15.\r\n\r\nBug fixes:\r\n* Fixed optical duplicate parameter passing in sfm mode.\r\n* Ensure that reads that are already marked as duplicates are handled correctly in mark duplicates / mark optical duplicates.\r\n\r\nMany thanks to Benoit Charloteaux and babicjovana.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.6",
        "name": "elPrep Binaries",
        "release_id": 29868501,
        "tag": "v4.1.6",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/29868501",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/29868501",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-07-24T10:26:52Z",
        "date_published": "2019-07-25T07:49:49Z",
        "description": "elPrep binaries compiled with go1.12.7.\r\n\r\nBug fixes:\r\n\r\n- Fixed reading of floating point numbers from BAM files.\r\n- Fixed sanity checks for some BQSR options.\r\n\r\nExtension:\r\n\r\n- Added --max-cycle option to specify maximum cycle value during BQSR.\r\n\r\nMany thanks to Hideyuki Tanaka, ChristopheH, and wcarre.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.5",
        "name": "elPrep Binaries",
        "release_id": 18854038,
        "tag": "v4.1.5",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/18854038",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/18854038",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-05-23T12:52:01Z",
        "date_published": "2019-05-23T13:31:00Z",
        "description": "elPrep binaries compiled with go1.12.5.\r\n\r\nSmall bug fixes:\r\n- Fixed /dev/stdin and /dev/stdout for sfm\r\n- Fixed the detection of directory path names in sfm\r\n\r\nExtensions:\r\n- Added --tmp-path option for sfm for specifying the path where directories for temporary files are created.\r\n- Added merge-optical-duplicates-metrics command for merging intermediate metrics files created using the --mark-optical-duplicates-intermediate option.\r\n\r\nUpdate documentation with options for writing your own split/filter/merge scripts. See:\r\n--mark-optical-duplicates-intermediate, --bqsr-tables-only, --bqsr-apply.\r\n\r\nMany thanks to Geert Vandeweyer, Amin Ardeshirdavani, and Tuan Li.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.4",
        "name": "elPrep Binaries",
        "release_id": 17543317,
        "tag": "v4.1.4",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/17543317",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/17543317",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-04-29T14:43:37Z",
        "date_published": "2019-04-30T09:00:52Z",
        "description": "elPrep binaries compiled with Go.1.12.4\r\n\r\nFasta parser now accepts empty lines in front of description lines. Existing elfasta files do not need to be recreated.\r\n\r\nMany thanks to Amin Ardeshirdavani for reporting this issue.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.3",
        "name": "elPrep Binaries",
        "release_id": 17060865,
        "tag": "v4.1.3",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/17060865",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/17060865",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-04-08T12:34:15Z",
        "date_published": "2019-04-08T13:13:27Z",
        "description": "elPrep binaries compiled with Go.1.12.2.\r\n\r\nAdded graph algorithm for optical duplicate marking.\r\nAdded additional histogram metrics in duplicate marking metrics.\r\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.2",
        "name": "elPrep Binaries",
        "release_id": 16620537,
        "tag": "v4.1.2",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/16620537",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/16620537",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-01-28T10:23:37Z",
        "date_published": "2019-01-28T11:00:26Z",
        "description": "elPrep binaries compiled with Go.1.11.5.\r\n\r\nBug fix:    \r\n\r\nThere was an issue when the --replace-reference-sequences option was used with the elprep sfm command, which under certain circumstances may have resulted in improperly sorted results. This has been fixed in elprep version 4.1.1. Thanks a lot to Geert Vandeweyer for reporting this issue.\r\n    \r\n    Additional fixes:\r\n    - The --replace-reference-sequences option incorrectly removed unmapped reads. This has been fixed in version 4.1.1 and does not happen anymore.\r\n    - The --contig-group-size option has been deprecated for the elprep merge command. The elprep sfm and elprep split command still support it. The elprep split command now works correctly without knowing the --contig-group-size that was passed to the corresponding elprep split command.\r\n    - The BGZFWriter panicked when a Write happens after a Close because of sending data to a closed Go channel. This has been changed into a proper error return value.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.1",
        "name": "elPrep Binaries",
        "release_id": 15212428,
        "tag": "v4.1.1",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/15212428",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/15212428",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2019-01-21T14:49:01Z",
        "date_published": "2019-01-21T15:25:04Z",
        "description": "elPrep binaries compiled with Go.1.11.4\r\n\r\nTurned pixel distance for optical duplicate marking into a parameter.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.1.0",
        "name": "elPrep Binaries",
        "release_id": 15091136,
        "tag": "v4.1.0",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/15091136",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/15091136",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2018-11-08T12:31:55Z",
        "date_published": "2018-11-08T12:52:05Z",
        "description": "elPrep binaries compiled with Go.1.11.1\r\n\r\nFixed a bug in the fasta parser.\r\n    \r\nIf you see an error message that says \"panic: runtime error: slice bounds out of range\" that refers to a location in github.com/exascience/elprep/v4/fasta.OpenElfasta, then please recreate the corresponding .elfasta file with the fasta-to-elfasta command to fix this error.\r\n\r\nVarious minor fixes.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.0.1",
        "name": "elPrep Binaries",
        "release_id": 13897189,
        "tag": "v4.0.1",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/13897189",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/13897189",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2018-10-18T14:16:05Z",
        "date_published": "2018-10-18T16:13:08Z",
        "description": "elPrep binaries compiled with Go.1.11.1\r\n\r\nelPrep 4.0.0 release.\r\n    \r\n- added base quality score recalibration (BQSR)\r\n- added optical duplicate marking\r\n- added metrics (MultiQC compatible)\r\n- support for SAM File Format version 1.6\r\n- support for FASTA and VCF files\r\n- support for BAM/BGZF files\r\n- support for elPrep-specific elsites and elfasta formats\r\n- split/filter/merge (sfm) mode now implemented in Go instead of Python\r\n- added --log-path option to all tools\r\n- various API and performance improvements\r\n- changed license to the GNU Affero General Public License version 3 as published by the Free Software Foundation, with Additional Terms\r\n- updated demos",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v4.0.0",
        "name": "elPrep Binaries",
        "release_id": 13513262,
        "tag": "v4.0.0",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v4.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/13513262",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/13513262",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v4.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2018-08-24T09:23:41Z",
        "date_published": "2018-08-24T09:44:06Z",
        "description": "elPrep binaries compiled with Go1.10.3\r\n\r\nAdded new filter:\r\n--filter-mapping-quality mapping-quality for filtering out reads based on mapping quality.\r\n\r\nelPrep should now be able to handle long reads.\r\n\r\nVarious bug fixes/improvements:\r\n- fixed bugs for handling .cram files\r\n- improved error handling\r\n- various code clean ups\r\n\r\nMany thanks to Leonor Palmeira, Matthias De Smet, and Koen Herten for bug reports/suggestions.\r\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v3.06",
        "name": "elPrep Binaries",
        "release_id": 12558571,
        "tag": "v3.06",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v3.06",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/12558571",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/12558571",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v3.06"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-11-21T13:53:41Z",
        "date_published": "2017-11-21T14:23:28Z",
        "description": "elPrep binaries compiled with Go 1.9.2.\r\n\r\nAdded 3 new filters:\r\n--filter-non-overlapping-reads bed-file: Removes all reads of which the positions do not overlap with any region specified in a given .bed file.\r\n--remove-optional-fields [all | list]: Removes from reads either all optional fields or all optional fields specified in a given list.\r\n--keep-optional-fields [none | list]: Removes from reads either all optional fields or all optional fields except those specified in a given list.\r\n\r\nAdded .bed file parsing and representation.\r\n\r\nFixed minor bug with PG header lines.\r\n\r\nMany thanks to Leonor Palmeira for testing.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v3.04",
        "name": "elPrep Binaries",
        "release_id": 8603480,
        "tag": "v3.04",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v3.04",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/8603480",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/8603480",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v3.04"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-10-12T11:50:18Z",
        "date_published": "2017-10-12T12:05:06Z",
        "description": "elPrep binaries compiled with Go 1.9.1.\r\n\r\nThe split/merge tools can now handle single-end data. For this, the elprep split and merge commands have been extended with the --single-end option. Similarly, the split/filter/merge scripts have been changed to allow the use of the --single-end option.\r\n\r\nMany thanks to Geert Vandeweyer for bug reports.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v3.03",
        "name": "elPrep Binaries",
        "release_id": 8094115,
        "tag": "v3.03",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v3.03",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/8094115",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/8094115",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v3.03"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-10-09T15:52:41Z",
        "date_published": "2017-10-09T16:08:11Z",
        "description": "elPrep binaries compiled with Go 1.9.1.\r\n\r\n--mark-duplicates now compares reads using the library id instead of just the read group id, matching the behaviour of picard-2.13.2\r\n\r\nThe spliter/filter/merge scripts have been changed:\r\n- to be able to handle a directory as input\r\n- added a --intermediate-files-output-prefix option to specify the name of the intermediate output files generated by the elprep split call\r\n- to have the default file type of the intermediate output files be derived from the file type of the input (sam/bam/cram)\r\n\r\nOptimisation for reducing the memory footprint (where possible).\r\n\r\nMany thanks to Geert Vandeweyer for bug reports.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v3.02",
        "name": "elPrep Binaries",
        "release_id": 8050085,
        "tag": "v3.02",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v3.02",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/8050085",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/8050085",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v3.02"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-10-05T14:06:34Z",
        "date_published": "2017-10-05T14:42:20Z",
        "description": "elPrep binaries compiled with Go 1.9.\r\n\r\nAdded two new filters:\r\n--filter-non-exact-mapping-reads\r\n--filter-non-exact-mapping-reads-strict\r\nfor removing all reads where the mapping is not an exact match with the reference, based on the cigar string or optional tags, see documentation.\r\n\r\nFixed minor bug:\r\n-mark-duplicates filter no longer requires adding read groups to execute\r\n\r\nAdded API documentation in the source code.\r\n\r\nMany thanks to Leonor Palmeira for bug reports.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/v3.01",
        "name": "elPrep Binaries",
        "release_id": 8010688,
        "tag": "v3.01",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/v3.01",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/8010688",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/8010688",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/v3.01"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-09-27T15:42:50Z",
        "date_published": "2017-09-27T16:26:44Z",
        "description": "elPrep is now implemented in Go and this binary is compiled with Go 1.9. Overall, the runtime performance of elPrep has improved.\r\n\r\nNew features:\r\n- There is now a separate remove-duplicates filter. elPrep can now remove duplicates that may have already been marked by other tools.\r\n- Specifying the --nr-of-threads is not necessary anymore. If --nr-of-threads is not passed, elPrep will figure out how many CPUs or cores are available and use them as efficiently as possible on its own.\r\n- The --gc-on option has been removed. elPrep now handles memory more efficiently on its own and does not need user guidance anymore.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/3.0",
        "name": "elPrep binaries",
        "release_id": 7912892,
        "tag": "3.0",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/7912892",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/7912892",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-08-23T11:37:39Z",
        "date_published": "2017-08-23T12:09:08Z",
        "description": "Minor improvements.\r\nReleased as self-extracting binary, execute \"sh elprep-v2.61.sh\" to extract files.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.61",
        "name": "elPrep binaries",
        "release_id": 7492588,
        "tag": "2.61",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.61",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/7492588",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/7492588",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.61"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2017-06-21T11:37:10Z",
        "date_published": "2017-06-21T11:43:43Z",
        "description": "Binaries compiled with LispWorks 7.0, improved runtime.\r\nReleased as self-extracting binary, execute \"sh elprep-v2.6.sh\" to extract files.",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.6",
        "name": "elPrep binaries",
        "release_id": 6785435,
        "tag": "2.6",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/6785435",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/6785435",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2016-11-07T14:27:59Z",
        "date_published": "2016-11-07T14:42:15Z",
        "description": "Minor updates.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.5",
        "name": "elPrep Binaries",
        "release_id": 4591025,
        "tag": "2.5",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/4591025",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/4591025",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2016-01-04T13:48:03Z",
        "date_published": "2016-01-04T14:05:52Z",
        "description": "Updated python scripts with OS compatible error handling.\nFixed minor bug when running elPrep single threaded.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.4",
        "name": "elPrep Binaries",
        "release_id": 2368486,
        "tag": "2.4",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/2368486",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/2368486",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2015-10-19T12:33:13Z",
        "date_published": "2015-10-19T12:46:14Z",
        "description": "Minor bug fixes.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.35",
        "name": "elPrep Binaries",
        "release_id": 1982117,
        "tag": "2.35",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.35",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/1982117",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/1982117",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.35"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2015-08-21T11:01:36Z",
        "date_published": "2015-08-21T11:20:00Z",
        "description": "Refactored Python scripts.\nAdded a Python script that can be used as an entrypoint for Docker.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.34",
        "name": "elPrep Binaries",
        "release_id": 1704348,
        "tag": "2.34",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.34",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/1704348",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/1704348",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.34"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2015-08-11T14:05:01Z",
        "date_published": "2015-08-12T13:17:15Z",
        "description": "Performance improvements parallel sort.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.33",
        "name": "elPrep Binaries",
        "release_id": 1661739,
        "tag": "2.33",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.33",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/1661739",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/1661739",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.33"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2015-07-14T14:32:28Z",
        "date_published": "2015-07-15T13:59:38Z",
        "description": "Minor bug fixes.\nMinor updates documentation.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.32",
        "name": "elPrep Binaries",
        "release_id": 1540685,
        "tag": "2.32",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.32",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/1540685",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/1540685",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.32"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caherzee",
          "type": "User"
        },
        "date_created": "2015-07-06T09:14:18Z",
        "date_published": "2015-07-13T12:00:27Z",
        "description": "Port to LispWorks 7.0.\nAdded --intermediate-files-output-type option to Python scripts.\nRemoved --header option from elPrep split command.\nSimplified output elPrep split command.\nMinor code cleanup and improvements.\n",
        "html_url": "https://github.com/ExaScience/elprep/releases/tag/2.31",
        "name": "elPrep Binaries",
        "release_id": 1499883,
        "tag": "2.31",
        "tarball_url": "https://api.github.com/repos/ExaScience/elprep/tarball/2.31",
        "type": "Release",
        "url": "https://api.github.com/repos/ExaScience/elprep/releases/1499883",
        "value": "https://api.github.com/repos/ExaScience/elprep/releases/1499883",
        "zipball_url": "https://api.github.com/repos/ExaScience/elprep/zipball/2.31"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Licensing &amp; Availability"
        ],
        "type": "Text_excerpt",
        "value": "elPrep works with the .sam, .bam, and .vcf formats as input/output. Previously, there was a dependency on samtools to \nread and write .bam files, but since elPrep4.0, .bam files are directly supported by elPrep, with no need for samtools \nto be present anymore. If you need support for .cram files, consider converting them to/from .bam files before/after \nelPrep using samtools, or other alternatives. There was previously also a dependency on bcftools to read and \nwrite .vcf.gz and .bcf files, but since elPrep5.0, .vcf.gz are directly supported by elPrep as well. If you need support\n for .bcf files, consider converting them to/from .vcf.gz files before/after elPrep using bcftools, or other alternatives.\n\nelPrep relies on its own .elsites file format for representing known sites during base quality score recalibration. \nSuch .elsites files can be generated from .vcf files using the elPrep vcf-to-elsites command, and from .bed files using \nbed-to-elsites. elPrep also uses its ows .elfasta file format for representing references during base quality score \nrecalibration and variant calling. They can be generated from .fasta files using the elPrep fasta-to-elfasta command.\n\nThere are no dependencies on other tools.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "RAM",
        "parent_header": [
          "Memory Requirements"
        ],
        "type": "Text_excerpt",
        "value": "elPrep is designed to operate in memory, i.e. data is stored in RAM during computation. As long as you do not use the \nin-memory sort, mark duplicates filter, base recalibration, or variant calling, elPrep operates as a streaming tool, and\n peak memory use is limited to a few GB.\n\nelPrep also provides a tool for splitting .sam files per chromosome - or better per groups of chromosomes - and \nguarantees that processing these split files and then merging the results does not lose information when compared to \nprocessing a .sam file as a whole. Using the split/merge tool greatly reduces the RAM required to process a .sam file, \nbut it comes at the cost of an additional processing step.\n\nWe recommend the following minimum of RAM when executing memory-intensive operations such as sorting, duplicate marking,\n base quality score recalibration and haplotype caller:\n\n* whole-genome 30x: 128 GB RAM using the elprep split/filter/merge mode (sfm)\n* whole-genome 50x: 200 GB RAM using the elprep split/filter/merge mode (sfm)\n* whole-exome  30x: 24GB RAM using the elprep split/filter/merge mode (sfm)\n* whole-exome  30x: 92GB RAM using the elprep in memory mode (filter)\n\nThese numbers are only estimates, and the actual RAM use may look different for your data sets.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Disk Space",
        "parent_header": [
          "Memory Requirements"
        ],
        "type": "Text_excerpt",
        "value": "elPrep by default does not write any intermediate files, and therefore does not require additional (peak) disk space \nbeyond what is needed for storing the input and output files. If you use the elPrep split and merge tools, elPrep \nrequires additional disk space equal to the size of the input file.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:32:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 285
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Variant calling pipeline for whole-genome data (WGS)",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The following elprep command shows a 5-step variant calling best practices pipeline on WGS data: \n\n    elprep sfm NA12878.input.bam NA12878.output.bam\n               --mark-duplicates --mark-optical-duplicates NA12878.output.metrics\n               --sorting-order coordinate\n               --bqsr NA12878.output.recal --known-sites dbsnp_138.hg38.elsites,Mills_and_1000G_gold_standard.indels.hg38.elsites\n               --reference hg38.elfasta\n               --haplotypecaller NA128787.output.vcf.gz\n\nThe command executes a pipeline that consists of 5 steps: sorting, PCR and optical duplicate marking, base quality score \nrecalibration and application, and variant calling.\n\nWe can break up the command as follows:\n\n - The sfm subcommand tells elprep to run in sfm (split/filter/merge) mode. This is generally the preferred mode for WGS\n  data, unless the data has very low coverage (<= 10x).\n    \n - The input file is \"NA12878.input.bam\".\n    \n - Output is written to a file \"NA12878.bam\" that contains the result of modifying the input bam file by performing \n duplicate marking, sorting, and base quality score recalibration and application.\n    \n - The flags --mark-duplicates and --mark-optical-duplicates instruct elprep to perform PCR and optical duplicate \n marking respectively. The statistics generated by this are written to a file \"NA12878.output.metrics\".\n    \n - The flag --sorting-order tells elprep to sort the input bam file by coordinate order.\n    \n - The flag --bqsr instructs elprep to perform base quality score recalibration. The statistics generated by this are \n written to a file \"NA12878.output.recal\". The --bqsr flags also need to know the reference fasta file with which the \n input bam was created, cf. the \"--reference hg38.elfasta\" option. Note the file extension \".elfasta\". elPrep requires \n converting the fasta file to this format before running the pipeline via the command \"elprep fasta-to-elfasta \n hg38.fasta hg38.elfasta\". The --bqsr option also needs to know the known variant sites, passed via the \"--known-sites \n dbsnp_138.hg38.elsites\" option. Note the file extension \".elsites\". elPrep requires converting vcf files to this format\n  before running the pipeline via the command \"elprep vcf-to-elsites dbsnp_138.hg38.vcf dbsnp_138.hg38.elsites\".\n    \n - The flag --haplotypecaller instructs elprep to perform variant calling. It uses the same reference fasta as the one \n passed for --bqsr (via --reference). The result of this step is written are written to a file \"NA12878.output.vcf.gz\".\n\nFor details, consult the manual reference pages.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Variant calling pipeline for whole-exome data (WES)",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "The following elprep command shows a 5-step variant calling best practices pipeline on WES data:\n\n    elprep sfm NA12878.input.bam  NA12878.output.bam \n               --mark-duplicates --mark-optical-duplicates NA12878.output.metrics \n               --sorting-order coordinate \n               --bqsr NA12878.output.recal --known-sites dbsnp_137.hg19.elsites,Mills_and_1000G_gold_standard.indels.hg19.elsites \n               --reference hg19.elfasta \n               --haplotypecaller NA12878.output.vcf.gz \n               --target-regions nexterarapidcapture_expandedexome_targetedregions.bed \n\nelPrep uses an internal \".elfasta\" format for representing fasta files, which can be created using the \n\"elprep fasta-to-eflasta\" command before running the pipeline. Similarly, elPrep uses an internal format for representing \nvcf files containing known variant sites (.elsites), which can be created using the command \"elprep vcf-to-elsites\".\n\nFor details, consult the manual reference pages.\n"
      },
      "source": "https://raw.githubusercontent.com/ExaScience/elprep/master/README.md",
      "technique": "header_analysis"
    }
  ]
}