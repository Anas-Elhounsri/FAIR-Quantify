{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Fenxiang Liu, Chunfa Tong*, Shentong Tao, Jiyan Wu, Yuhua Chen, Dan Yao, Huogen Li, Jisen Shi. 2017. MVQTLCIM: composite interval mapping of multivariate traits in a hybrid F1 population of outbred species. BMC Bioinformatics,18:515\n"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tongchf/mvqtlcim"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-15T01:27:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-04T17:10:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CIM QTL mapping via multivariate statistical method in an outbred full-sib family"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "MVQTLCIM is a software package for composite inverval mapping QTLs with multivariate phenotype data in an outbred full-sib family. The software utilizes a genetic linkage map constructed with different segregation molecular markers such as 1:1, 1:2:1 and 1:1:1:1, and assumes that QTL may segregate in the five different segregation patterns on a specific position of the genetic map. It allows users to select the best QTL segregation pattern with AIC, BIC and TIC for a significant QTL. It also provides command line parameters to be chosen for alternative analyses, including the number of background markers, window size ([Basten, et al., 1994](http://statgen.ncsu.edu/qtlcart/WinQTLCart.pdf)), QTL segregation type, genetic map function and number of permutations. Specifically, when performing permutations to determine the empirical threshold of significant QTLs, `mvqtlcim` permits to use multithreads to accelerate computing speed. When an analysis completes, the software will generate two files for each QTL model, of which one contains the parameter estimates and the corresponding statistic values at every 1 cM on the genome, and the other saves the maximum LR value of each permutation. With these result files, we wrote an R script, `lrPlot.r`, to summarize the significant QTL information and generate scatter plots of LR against genome position. These plots can be optionally saved in pdf, jpg, png, tif or bmp format. "
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9792085728648252,
      "result": {
        "original_header": "Input data",
        "type": "Text_excerpt",
        "value": "The input data is formated in a plain text as the following example file. In the marker data part, the first column is the serial number of linkage groups, the second the serial number of markers within a linkage group, the third the marker distance from the first marker within a linkage group, the fourth and fifth the marker phases of parents P1 and P2, respectively, and from the sixth column on, each is the marker genotype of an individual at the marker. Similarly, from the six column on in the trait data part, each cell is a trait value at a time point of an individual. In addition, a missing genotype is coded by \"--\", but missing phenotype data are not allowed. \n"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8630747344989793,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "\tColumn\tDescription  \n\t1\tNo. for linkage groups  \n\t2\tNo. for marker intervals within a linkage group  \n\t3\tPosition of a putative QTL within a marker interval  \n\t4\tCumulative position of the QTL along the whole linkage groups (chromosomes)  \n\t5\tLog likelihood under H0  \n\t6\tLog likelihood under H1  \n\t7\tLog likelihood ratio (LR)  \n\t8\tNo. for the QTL model used  \n\t9\tAIC value  \n\t10\tBIC value  \n\t11\tTIC value  \n\t12-19\tThe estimates for vector mu1  \n\t20-27\tThe estimates for vector mu2  \n\t28-91\tThe estimates for matrix sigma arranged by row   \n"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tongchf/mvqtlcim/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tongchf/mvqtlcim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tongchf/mvqtlcim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Introduction"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.999718055252224,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "For exmaple, when you run the command  \n`./mvqtlcim -i example.txt -b 5 -w 15.0 -p 1000 -t 30 -m 1`  \nyou will have two result files, \"example_CIM_M1Rst.txt\" and \"example_CIMPermuM1Rst.txt\", and a fold, \"permu1\". You can ignore the files in the fold, because all the permutaion results are summarized in the file \"example_CIMPermuM1Rst.txt\". The columns in \"example_CIM_M1Rst.txt\" are described as following.   \n"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tongchf/mvqtlcim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mvqtlcim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tongchf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7264,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:42:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "With the embedded example input file `example.txt`, users can get started with the following commands:  \n`./mvqtlcim -i example.txt -b 5 -m 1`  \n`./mvqtlcim -i example.txt -b 5 -w 15.0 -p 1000 -t 20`  \n`Rscript lrPlot.r -i example_CIM_M1Rst.txt -p example_CIMPermuM1Rst.txt -w 1`  \n  \nOne can directly run the commands, `./mvqtlcim` and `Rscript lrPlot.r`, to show the usages of `mvqtlcim` and `lrPlot.r`, respectivley, as follows  \n \n    Usage: mvqtlcim <-i inputfile.txt> [options]  \n    Options:  \n            -b INT  \tnumber of background markers [15]  \n            -w FLOAT\twindow size [10.0]  \n            -m STR\t\tqtl models chosen from 1 to 5,such as '134' and '235' [12345]  \n            -f INT\t\tgenetic map function, 1 for Haldane and 2 for Kosambi [1]  \n            -p INT\t\tnumber of permutaions [0]  \n            -t INT\t\tnumber of threads [1]  \n            -a FLOAT\tthreshold of p-value for a marker to be added in stepwise regression [0.05]  \n            -d FLOAT\tthreshold of p-value for a marker to be deleted in stepwise regression [0.10]  \n--- - - -     \n    Usage: Rscript lrPlot.r -i qtlrstfile [options]\n    Options:\n        \t-p\tstr\tresult file for permutations\n\t        -w\tint\tjust taking the value of 0, 1 or 2 [0]\n\t\t\t        0: manually giving the threshold value\n\t\t\t        1: genome-wide threshold determined by permutations\n\t\t\t        2: linkage-group-wide threshold determined by permutations\n\t        -s\tfloat\tsignificant level in(0.0001,0.2) [0.05]\n\t        -t\tstr\tthe plot format of 'pdf','png','jpg','tif' and 'bmp' [pdf]\n\t        -v\tfloat\tgiving the threshold value manually\n"
      },
      "source": "https://raw.githubusercontent.com/tongchf/mvqtlcim/master/README.md",
      "technique": "header_analysis"
    }
  ]
}