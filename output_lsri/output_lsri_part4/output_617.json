{
  "application_domain": [
    {
      "confidence": 14.21,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "AtacWorks"
        ],
        "type": "Text_excerpt",
        "value": "Please cite AtacWorks as follows:\n\nLal, A., Chiang, Z.D., Yakovenko, N. et al. Deep learning-based enhancement of epigenomics data with AtacWorks. Nat Commun 12, 1507 (2021). https://doi.org/10.1038/s41467-021-21765-5\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NVIDIA-Genomics-Research/AtacWorks"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing to AtacWorks",
        "parent_header": [
          "AtacWorks"
        ],
        "type": "Text_excerpt",
        "value": "This section is only for developers of atacworks. If you would like to contribute to atacworks codebase,\ntake a look at the development guidelines [here](https://clara-parabricks.github.io/development.html#contributing-to-clara-omics).\nYou can read about our Continuous Integration (CI) test flow [here](https://clara-parabricks.github.io/development.html#ci-testing).\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-30T17:22:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-31T08:39:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deep learning based processing of Atac-seq data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9822482370902001,
      "result": {
        "original_header": "AtacWorks",
        "type": "Text_excerpt",
        "value": "AtacWorks is a deep learning toolkit for coverage track denoising and peak calling from low-coverage or low-quality ATAC-Seq data. \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8584805804294275,
      "result": {
        "original_header": "Build from Source",
        "type": "Text_excerpt",
        "value": "Follow the instructions below if you are interested in running AtacWorks tutorial notebooks outside\nof docker.\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9573714868573546,
      "result": {
        "original_header": "Latest development version",
        "type": "Text_excerpt",
        "value": "This will clone the repo to the default branch, which is set to be the latest development branch.\nThis branch is subject to change frequently as features and bug fixes are pushed.\n```\ngit clone --recursive https://github.com/clara-genomics/AtacWorks.git\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.989554209203277,
      "result": {
        "original_header": "Workflow",
        "type": "Text_excerpt",
        "value": "AtacWorks trains a deep neural network to learn a mapping between noisy (low coverage/low cell count/low quality) ATAC-seq data and matching clean (high coverage, high cell count, and/or high quality) ATAC-seq data. Both noisy and clean data should be from the same cell type or tissue. Once this mapping is learned, the trained model can be applied to improve other noisy ATAC-Seq datasets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9590674074759449,
      "result": {
        "original_header": "1. Training an AtacWorks model",
        "type": "Text_excerpt",
        "value": "See [Tutorial 1](tutorials/tutorial1.md) for a workflow detailing the steps of model training and how to modify the parameters used in these steps.\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8887249999954463,
      "result": {
        "original_header": "2. Denoising and peak calling using a trained AtacWorks model",
        "type": "Text_excerpt",
        "value": "See [Tutorial 2](tutorials/tutorial2.md) for an advanced workflow detailing the prediction using a trained model, and how to modify the parameters used in these steps.\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9931552373111762,
      "result": {
        "original_header": "3. RAPIDS + AtacWorks Visualization of Single-cell Chromatin Accessibility",
        "type": "Text_excerpt",
        "value": "See [Tutorial here](tutorials/rapids_examples.md) for a demonstration of using Atacworks in conjunction with RAPIDS, to visualize cell type-specific chromatin accessibility and generate cell type-specific peak calls from single-cell ATAC-seq data. \n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/clara-genomics/AtacWorks/tree/dev-v0.4.0/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/clara-genomics/AtacWorks/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/tutorials/tutorial1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/tutorials/tutorial1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/tutorials/tutorial2.ipynb"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/tutorials/tutorial2.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQ",
        "parent_header": [
          "AtacWorks"
        ],
        "type": "Text_excerpt",
        "value": "1. What's the preferred way for setting up the environment?\n    > A virtual environment, conda installation or docker is preferred for running atacworks. Follow the instructions of setting up your preferred platforms. Once the env is setup, you can follow the Installation section above to install all the necessary dependencies.\n\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NVIDIA-Genomics-Research/AtacWorks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AtacWorks"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/common/install-package.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/common/prep-init-env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/common/logger.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/common/test-atacworks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/local/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/local/prebuild.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/release/update-version.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/release/pypi_uploader.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/checks/changelog.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/checks/style.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/gpu/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/gpu/prebuild.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/cpu/build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/ci/cpu/prebuild.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "PyPI installation",
        "parent_header": [
          "AtacWorks",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "To install atacworks in your environment, run the following in your terminal\n```\npip install atacworks==0.3.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker Installation",
        "parent_header": [
          "AtacWorks",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you'd like to skip all installation and use a pre-installed docker image instead,\nfollow the instructions [here](Dockerfile.md), section \"Pre-installed AtacWorks\".\n\nIf you'd like to pull a docker image that contains AtacWorks source code, then \nfollow the instructions [here](Dockerfile.md), section \"AtacWorks from Source\".\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install dependencies",
        "parent_header": [
          "AtacWorks",
          "Build from Source"
        ],
        "type": "Text_excerpt",
        "value": "* Download `bedGraphToBigWig` and `bigWigToBedGraph` binaries and add $PATH to your bashrc.\n    ```\n    rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/bedGraphToBigWig <custom_path>\n    rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/bigWigToBedGraph <custom_path>\n    export PATH=\"$PATH:<custom_path> >> ~/.bashrc\"\n    ```\n\n* Install pip dependencies\n\n    ```\n    cd AtacWorks && pip install -r requirements.txt\n    ```\n* Optional -- Install macs2.\n  Only required if you want to use macs2 subcommands to call peaks based on peak probabilities generated by AtacWorks.\n\n    ```\n    pip install macs2==2.2.4\n    ```\n\n* Install atacworks\n\n    ```\n    pip install .\n    ```\n\n "
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9958998133024554,
      "result": {
        "original_header": "Build from Source",
        "type": "Text_excerpt",
        "value": "Follow the instructions below if you are interested in running AtacWorks tutorial notebooks outside\nof docker.\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999999784848,
      "result": {
        "original_header": "Latest released version",
        "type": "Text_excerpt",
        "value": "This will clone the repo to the `master` branch, which contains code for latest released version\nand hot-fixes.\n```\ngit clone --recursive -b master https://github.com/clara-genomics/AtacWorks.git\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999999973459808,
      "result": {
        "original_header": "Latest development version",
        "type": "Text_excerpt",
        "value": "This will clone the repo to the default branch, which is set to be the latest development branch.\nThis branch is subject to change frequently as features and bug fixes are pushed.\n```\ngit clone --recursive https://github.com/clara-genomics/AtacWorks.git\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8766440971069157,
      "result": {
        "original_header": "3. Tests",
        "type": "Text_excerpt",
        "value": "    ```\n    python -m pytest tests/\n    ```\n \n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "              Nvidia Source Code License \u2013 NVIDIA CONFIDENTIAL\n\n1. Definitions\n\n\u201cLicensor\u201d means any person or entity that distributes its Work.\n\u201cSoftware\u201d means the original work of authorship made available under this \nLicense.\n\u201cWork\u201d means the Software and any additions to or derivative works of the \nSoftware that are made available under this License.\n\u201cNvidia Processors\u201d means any central processing unit (CPU), graphics \nprocessing unit (GPU), field-programmable gate array (FPGA), \napplication-specific integrated circuit (ASIC) or any combination thereof \ndesigned, made, sold, or provided by Nvidia or its affiliates.\nThe terms \u201creproduce,\u201d \u201creproduction,\u201d \u201cderivative works,\u201d and \n\u201cdistribution\u201d have the meaning as provided under U.S. copyright law; \nprovided, however, that for the purposes of this License, derivative works \nshall not include works that remain separable from, or merely link (or bind by \nname) to the interfaces of, the Work.\nWorks, including the Software, are \u201cmade available\u201d under this License by \nincluding in or with the Work either (a) a copyright notice referencing the \napplicability of this License to the Work, or (b) a copy of this License.\n\n2. License Grants\n\n2.1 Copyright Grant.\u00a0Subject to the terms and conditions of this License, each \nLicensor grants to you a perpetual, worldwide, non-exclusive, royalty-free, \ncopyright license to reproduce, prepare derivative works of, publicly display, \npublicly perform, sublicense and distribute its Work and any resulting \nderivative works in any form.\n\n2.2 Patent Grant.\u00a0Subject to the terms and conditions of this License, each \nLicensor grants to you a perpetual, worldwide, non-exclusive, royalty-free \npatent license to make, have made, use, sell, offer for sale, import, and \notherwise transfer its Work, in whole or in part. The foregoing license applies \nonly to the patent claims licensable by Licensor that would be infringed by \nLicensor\u2019s Work (or portion thereof) individually and excluding any \ncombinations with any other materials or technology.\n\n3. Limitations\n\n3.1 Redistribution.\u00a0You may reproduce or distribute the Work only if (a) you \ndo so under this License, (b) you include a complete copy of this License with \nyour distribution, and (c) you retain without modification any copyright, \npatent, trademark, or attribution notices that are present in the Work.\n\n3.2 Derivative Works.\u00a0You may specify that additional or different terms apply \nto the use, reproduction, and distribution of your derivative works of the Work \n(\u201cYour Terms\u201d) only if (a) Your Terms provide that the use limitation in \nSection 3.3 applies to your derivative works, and (b) you identify the specific \nderivative works that are subject to Your Terms. Notwithstanding Your Terms, \nthis License (including the redistribution requirements in Section 3.1) will \ncontinue to apply to the Work itself.\n\n3.3 Use Limitation. The Work and any derivative works thereof only may be used \nor intended for use commercially with Nvidia Processors.\n\n3.4 Patent Claims.\u00a0If you bring or threaten to bring a patent claim against \nany Licensor (including any claim, cross-claim or counterclaim in a lawsuit) to \nenforce any patents that you allege are infringed by any Work, then your rights \nunder this License from such Licensor (including the grants in Sections 2.1 and \n2.2) will terminate immediately.\n\n3.5 Trademarks.\u00a0This License does not grant any rights to use any Licensor\u2019s \nor its affiliates\u2019 names, logos, or trademarks, except as necessary to \nreproduce the notices described in this License.\n\n3.6 Termination.\u00a0If you violate any term of this License, then your rights \nunder this License (including the grants in Sections 2.1 and 2.2) will \nterminate immediately.\n\n4. Disclaimer of Warranty.\n\nTHE WORK IS PROVIDED \u201cAS IS\u201d WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, \nEITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF M \nERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR NON-INFRINGEMENT. \nYOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER THIS LICENSE. SOME \nSTATES\u2019 CONSUMER LAWS DO NOT ALLOW EXCLUSION OF AN IMPLIED WARRANTY, SO THIS \nDISCLAIMER MAY NOT APPLY TO YOU.\n\n5. Limitation of Liability.\n\nEXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL THEORY, \nWHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE SHALL ANY \nLICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, INDIRECT, SPECIAL, \nINCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATED TO THIS LICENSE, \nTHE USE OR INABILITY TO USE THE WORK (INCLUDING BUT NOT LIMITED TO LOSS OF \nGOODWILL, BUSINESS INTERRUPTION, LOST PROFITS OR DATA, COMPUTER FAILURE OR \nMALFUNCTION, OR ANY OTHER COMM ERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR \nHAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/data/readme/atacworks_slides.gif"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AtacWorks"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "NVIDIA-Genomics-Research"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 293979,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 229712,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 39820,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1427,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GPUtester",
          "type": "User"
        },
        "date_created": "2021-07-06T17:43:11Z",
        "date_published": "2021-07-06T17:43:36Z",
        "description": "v0.3.4 Release",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.3.4",
        "name": "v0.3.4",
        "release_id": 45788313,
        "tag": "v0.3.4",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/45788313",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/45788313",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-08-25T14:42:53Z",
        "date_published": "2020-08-27T19:34:30Z",
        "description": "Hotfix: Fix a bug related to dataloader",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.3.1",
        "name": "v0.3.1 - Hotfix for v0.3.0",
        "release_id": 30238656,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/30238656",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/30238656",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-08-03T20:22:08Z",
        "date_published": "2020-08-03T20:26:24Z",
        "description": "Key Features:\r\n\r\n* Simplified user interface. Single command interface.\r\n* Improved documentation. Launched webpage : https://clara-parabricks.github.io/AtacWorks/index.html\r\n* Improved test coverage\r\n* Package upload to PyPI",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.3.0",
        "name": "AtacWorks 0.3.0 release",
        "release_id": 29245524,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/29245524",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/29245524",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-05-27T18:20:13Z",
        "date_published": "2020-05-27T18:21:44Z",
        "description": "Bug fixes:\r\n    * Custom config files are now being picked up.\r\n    * Tutorials are updated to match expected outputs and output folders",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.2.3",
        "name": "hotfix for release v0.2.0",
        "release_id": 26958872,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/26958872",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/26958872",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-05-11T22:44:27Z",
        "date_published": "2020-05-27T18:19:04Z",
        "description": "Update bugs related to tutorials.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.2.2",
        "name": "hotfix for release v0.2.0",
        "release_id": 26958793,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/26958793",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/26958793",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-03-12T21:27:11Z",
        "date_published": "2020-03-12T21:40:26Z",
        "description": "hotfix. This Release updates the tutorials to use single GPU by default and adds instructions to use multi-GPU training/inference.\r\nAlso, fixes a classification mode related bug.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.2.1",
        "name": "hotfix for release v0.2.0",
        "release_id": 24481208,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/24481208",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/24481208",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-03-06T22:50:21Z",
        "date_published": "2020-03-06T22:52:20Z",
        "description": "AtacWorks v0.2.0 release. The main features of this release include :\r\n\r\n* Tutorials for training and inference.\r\n* Addition of end-to-end tests.\r\n* Addition of setup scripts.\r\n* updating documentation, linting of code.\r\n* Ability to provide multiple input channels for training, inference.\r\n* Introduced config files for setting up training parameters and for defining model structure.\r\n",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.2.0",
        "name": "AtacWorks 0.2.0 release",
        "release_id": 24307721,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/24307721",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/24307721",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ntadimeti",
          "type": "User"
        },
        "date_created": "2020-02-19T17:08:22Z",
        "date_published": "2020-02-21T22:38:12Z",
        "description": "This is a pre-release candidate for AtacWorks v0.2.0. The main features of the pre-release include : \r\n* Addition of end-to-end tests.\r\n* Addition of setup scripts.\r\n* updating documentation, linting of code.\r\n* Ability to provide multiple input channels for training, inference.\r\n* Introduced config files for setting up training parameters and for defining model structure.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/v0.2.0-rc1",
        "name": "AtacWorks 0.2.0 release candidate 1",
        "release_id": 23893031,
        "tag": "v0.2.0-rc1",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/v0.2.0-rc1",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/23893031",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/23893031",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/v0.2.0-rc1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2019-12-02T16:06:21Z",
        "date_published": "2019-12-02T16:08:57Z",
        "description": "_**Hotfix**_ Fixed an issue with generating regression bigwg files when some intervals had all 0 valued outputs.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/0.1.1",
        "name": "AtacWorks Release 0.1.1",
        "release_id": 21901864,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/21901864",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/21901864",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tijyojwad",
          "type": "User"
        },
        "date_created": "2019-11-27T03:57:25Z",
        "date_published": "2019-11-27T04:00:29Z",
        "description": "This is the first official release of AtacWorks. AtacWorks is a deep learning-based toolkit for denoising and peak calling from noisy ATAC-Seq data. While currently tested only on ATAC-Seq, AtacWorks can also be applied to other epigenomic data types such as ChIP-Seq or DNase-Seq. A detailed description and results for several use cases are given in the preprint: https://www.biorxiv.org/content/10.1101/829481\r\n\r\nThe main components of this release are:\r\n\r\n1. Data reading and writing from BED, BEDGRAPH and BigWig formats\r\n2. Training deep learning models using a customizable resnet architecture\r\n3. Pre-trained models that can be applied to new data\r\n4. Inference using a newly trained or provided model, producing a denoised ATAC-Seq signal and peak calls\r\n5. Evaluating model performance on denoising and peak calling tasks.",
        "html_url": "https://github.com/NVIDIA-Genomics-Research/AtacWorks/releases/tag/0.1.0",
        "name": "AtacWorks Release 0.1.0",
        "release_id": 21781482,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/21781482",
        "value": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/releases/21781482",
        "zipball_url": "https://api.github.com/repos/NVIDIA-Genomics-Research/AtacWorks/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "parent_header": [
          "AtacWorks",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Ubuntu 16.04+\n* CUDA 9.0+\n* Python 3.7.0+\n* GCC 5+\n* (Optional) A conda or virtualenv setup\n* Any NVIDIA GPU that supports CUDA 9.0+\n\n**AtacWorks training and inference currently does not run on CPU.**\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Install dependencies",
        "parent_header": [
          "AtacWorks",
          "Build from Source"
        ],
        "type": "Text_excerpt",
        "value": "* Download `bedGraphToBigWig` and `bigWigToBedGraph` binaries and add $PATH to your bashrc.\n    ```\n    rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/bedGraphToBigWig <custom_path>\n    rsync -aP rsync://hgdownload.soe.ucsc.edu/genome/admin/exe/linux.x86_64/bigWigToBedGraph <custom_path>\n    export PATH=\"$PATH:<custom_path> >> ~/.bashrc\"\n    ```\n\n* Install pip dependencies\n\n    ```\n    cd AtacWorks && pip install -r requirements.txt\n    ```\n* Optional -- Install macs2.\n  Only required if you want to use macs2 subcommands to call peaks based on peak probabilities generated by AtacWorks.\n\n    ```\n    pip install macs2==2.2.4\n    ```\n\n* Install atacworks\n\n    ```\n    pip install .\n    ```\n\n "
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running CI Tests Locally",
        "parent_header": [
          "AtacWorks",
          "Contributing to AtacWorks"
        ],
        "type": "Text_excerpt",
        "value": "When a PR is submitted to the github, CI tests are triggered by github CI. If you would like to run those tests locally,\nfollow the instructions below.\n!!CAUTION!!\nPlease note, your git repository will be mounted to the container, any untracked files will be removed from it.\nBefore executing the CI locally, stash or add them to the index.\n\nRequirements:\n1. [docker](https://docs.docker.com/install/linux/docker-ce/ubuntu/)\n2. [nvidia-docker](https://github.com/NVIDIA/nvidia-docker)\n3. [nvidia-container-runtime](https://github.com/NVIDIA/nvidia-container-runtime)\n\nRun the following command to execute the CI build steps inside a container locally:\n\n```\nbash ci/local/build.sh -r <Atacworks repo path>\n```\nci/local/build.sh script was adapted from [rapidsai/cudf](https://github.com/rapidsai/cudf/tree/branch-0.11/ci/local)\nThe default docker image is **clara-genomics-base:cuda10.1-ubuntu16.04-gcc5-py3.6**.\n\nOther images from [gpuci/clara-genomics-base](https://hub.docker.com/r/gpuci/clara-genomics-base/tags) repository can be used instead, by using -i argument as shown below:\n\n```\nbash ci/local/build.sh -r <Atacworks repo path> -i gpuci/clara-genomics-base:cuda10.0-ubuntu18.04-gcc7-py3.6\n```\n"
      },
      "source": "https://raw.githubusercontent.com/clara-genomics/AtacWorks/dev-v0.4.0/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "usage",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:10:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 128
      },
      "technique": "GitHub_API"
    }
  ]
}