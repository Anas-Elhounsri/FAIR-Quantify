{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ablab-nthu/CSAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-05T13:34:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-31T10:26:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A contig scaffolding tool using algebraic rearrangements."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "CSAR"
        ],
        "type": "Text_excerpt",
        "value": "CSAR is a contig scaffolding tool that can efficiently and accurately scaffold the contigs of a draft genome (i.e., target genome) based on an incomplete reference genome of a related organism.\n"
      },
      "source": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9165741995667954,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "* `scaffolds.nuc.csar` (if NUCmer is used) or `scaffolds.pro.csar` (if PROmer is used): \nThe above file lists all the scaffolds returned by CAR. These scaffolds are numbered arbitrarily and each of them contains ordered contigs and their orientations as exemplified as follows.\n\t\t\n```\n>Scaffold_1\n<contig_name_a> <orientation_a>\n<contig_name_b> <orientation_b>\n<contig_name_c> <orientation_c>\n...\n\n>Scaffold_2\n<contig_name_d> <orientation_d>\n<contig_name_e> <orientation_e>\n<contig_name_f> <orientation_f>\n...\t\n``` \nNote that the orientation of a contig is represented by an integer number 0 or 1, where 0 indicates that the original (i.e., forward) orientation of the contig is used in the scaffold, while 1 indicates that the reverse orientation of the contig is used. \n\n* `scaffolds.nuc.csar.fna` (if NUCmer is used) or `scaffolds.pro.csar.fna` (if PROmer is used): \nThe above file contains DNA sequences of scaffolds in multi-FASTA format. In this file, a stretch of 100 undetermined bases (N) serving as a spacer will be inserted between any two adjecent contigs in a scaffold with multiple contigs. \n* `*.delta, *.filter, and *.coords`: \n"
      },
      "source": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ablab-nthu/CSAR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ablab-nthu/CSAR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ablab-nthu/CSAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSAR"
      },
      "source": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ablab-nthu/CSAR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSAR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ablab-nthu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 26048,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "parent_header": [
          "CSAR"
        ],
        "type": "Text_excerpt",
        "value": "CSAR is developed in PHP. When running, it requires the program NUCmer or PROmer from MUMmer's package to first identify conserved genetic markers between target and reference genomes and then uses these markers to do its scaffolding job. To run CSAR, therefore, the following packages must be installed on your system and also available in your $PATH.\n\n1. PHP (from 5.1.6): http://php.net/downloads.php\n2. MUMmer: http://mummer.sourceforge.net/\n\nAfter that, the following command can be used to install CSAR if git is available in your $PATH:\n\n\tgit clone https://github.com/ablab-nthu/CSAR.git\n\nAnother alternative way is to download the zip file CSAR-master.zip and upzip it on your system. \n"
      },
      "source": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:22:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "CSAR"
        ],
        "type": "Text_excerpt",
        "value": "Options of running CSAR:\n\n```\n-t <string>   Target genome (i.e., draft genome to be scaffolded)\n\n-r <string>   Reference genome\n\n--nuc         Use NUCmer to identify conserved genetic markers between target and reference genomes\n \n--pro         Use PROmer to identify conserved genetic markers between target and reference genomes\n\n-o <string>   Output folder to contain all the files returned by running CSAR (default: ./csar_out)\n\n-h            Show help message\n\n```\nNote that the target and reference genomes should be prepared in multi-FASTA format, and either --nuc or --pro but not both shall be used in one command line. If the -o option is omitted, then a ./csar_out is used as default. The following is an example of running CSAR.\n\n\tphp csar.php -t example/M.luteus_contigs.fna -r example/GCA_001691605.1_reference.fna --nuc -o example_output\n\t"
      },
      "source": "https://raw.githubusercontent.com/ablab-nthu/CSAR/master/README.md",
      "technique": "header_analysis"
    }
  ]
}