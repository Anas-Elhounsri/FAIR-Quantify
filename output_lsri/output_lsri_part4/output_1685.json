{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BioHPC/LONGO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-07-22T15:50:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-28T01:20:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gene Length-Dependent Expression Analysis Tool in Neuronal Cells"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9240597119868865,
      "result": {
        "original_header": "LONGO: Gene Length-Dependent Expression Analysis Tool in Neuronal Cells",
        "type": "Text_excerpt",
        "value": "LONGO is designed to have two different uses. One through a shiny interface\nand another through R. Both of results of the program are\nthe same. The shiny interface will allow the user to alter certain variables\nin the analysis to see how they will affect the result. This can be\nuseful when interpreting new data. \nLONGO is designed to take in a data file with a gene identifier to get\nthe gene name and length. Occasionally there will be multiple probes going\nto a single gene. LONGO can handle this in two different ways. The default way\nis to get the mean expression values. The other option is to only keep the\nprobe that has the highest overall expression values. If a read has no\nidentified gene name or length in BioMart, the read is removed. \nAfter getting the gene names and lengths the data is sorted by length. A\nrolling window is used to create bins. The user can change the size of the\nwindow as well as the step size of the window. These rolling window values\nare then plotted. The P value plot shows the p value comparisons of the values\nmaking up the windows to the window values in the control.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9212218350577133,
      "result": {
        "original_header": "Pre-processing:",
        "type": "Text_excerpt",
        "value": "In order to use LONGO the data needs to be in a specific format. This format\nhas the gene identifier in the first column and all of the other columns are\nexpression values. The first row can be a header. The script file in the LONGO-script\ndirectory has multiple examples of pre-processing. The example dataset used\nin the examples below is GSE69480 and can be downloaded from [here](https://ftp.ncbi.nlm.nih.gov/geo/series/GSE69nnn/GSE69480/matrix/).\n \n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biohpc/longo/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biohpc/longo/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BioHPC/LONGO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioHPC/LONGO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LONGO: Gene Length-Dependent Expression Analysis Tool in Neuronal Cells"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/01_main.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/02_submit.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/03_data_table.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/04_LONGO_output.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/05_LONGO_lq.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/./vignettes/figures/06_LONGO_go.png"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\ntitle: \"Installation\"\nauthor: \"Alexander Paul, Matthew McCoy, Haijun Gong, Tae-Hyuk (Ted) Ahn, \nAndrew Yoo\"\ndate: \"`r Sys.Date()`\"\noutput:\n    rmarkdown::html_vignette\n    #word_document\nvignette: >\n    %\\VignetteIndexEntry{Vignette Title}\n    %\\VignetteEngine{knitr::rmarkdown}\n    %\\VignetteEncoding{UTF-8}\n---\n\n## Prerequisite Bioconductor packages:  \n- biomaRt  \n```{} \n    source(\"https://bioconductor.org/biocLite.R\")  \n    biocLite(\"biomaRt\")\n```\n- edgeR  \n```{}\n    source(\"https://bioconductor.org/biocLite.R\")  \n    biocLite(\"edgeR\")  \n```\n- preprocessCore  \n```{}\n    source(\"https://bioconductor.org/biocLite.R\")  \n    biocLite(\"preprocessCore\")\n```  \n- topGO  \n```{}\n    source(\"https://bioconductor.org/biocLite.R\")  \n    biocLite(\"topGO\")\n```  \n- Rgraphviz  \n```{}\n    source(\"https://bioconductor.org/biocLite.R\")  \n    biocLite(\"Rgraphviz\")\n```  \n\n##  Prerequisite CRAN packages:  \n- shiny  \n```{}\n    install.packages(\"shiny\") \n```  \n- DT  \n```{}\n    install.packages(\"DT\") \n```\n- data.table  \n```{}\n    install.packages(\"data.table\") \n```\n- hash  \n```{}\n    install.packages(\"hash\") \n```\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/vignettes/LONGO_install/install.Rmd",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing LONGO Package:",
        "type": "Text_excerpt",
        "value": "To install the LONGO package all the prerequisites above need to be installed.\nAfter confirming those packages are installed start RStudio. From there follow\nthe instructions below:\n\n* Tools dropdown -> Install Packages\u2026\n* Change the Install from dropdown to Package Archive File\n* Locate the LONGO tarball (LONGO_X.X.X.tar.gz)\n* Click install\n\nAnother option is to use the follow R line:\n\n> install.packages(\u201c~/LONGO_X.X.X.tar.gz\u201d, repos = NULL, type = \u201csource\u201d)\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9997976955493504,
      "result": {
        "original_header": "LONGO: Gene Length-Dependent Expression Analysis Tool in Neuronal Cells",
        "type": "Text_excerpt",
        "value": "Documentation is also available on GitHub Pages: https://biohpc.github.io/LONGO/ \n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BioHPC/LONGO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) <2016> <Washington University and Saint Louis University>\n<Matthew J. McCoy, Alexander J. Paul, Haijun Gong, Tae-Hyuk (Ted) Ahn and Andrew S. Yoo>\nPermission is hereby granted, free of charge, to any academic, government,\n    and non-profit/not-for-profit institutions obtaining a copy of this software\n    and associated documentation files (the \"Software\"), to deal in the Software\n    without restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies of the\n    Software, and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nFor the avoidance of doubt, this license does not allow commercial use.  A commercial\n    license is available, and is licensed through the Office of Technology Management\n    at Washington University.  For information about a commercial license, please contact:\nScott Crick Ph.D. | Licensing Associate\nWashington University in St. Louis | Office of Technology Management\nMailing Address: Campus Box 8013, 660 South Euclid, St. Louis, MO 63110\nPhysical Address: 4240 Duncan Ave., Suite 110, St. Louis, MO 63110\nP 314.362.7808 | F 314.362.5872 | E-mail: scrick@wustl.edu\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LONGO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "BioHPC"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 68726,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 16632,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biohpc/longo/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-requisites:",
        "type": "Text_excerpt",
        "value": "* R version\n  * Download R (>3.4.0) version from CRAN.\n    * Windows: https://cran.r-project.org/bin/windows/base/\n    * Mac OS X: https://cran.r-project.org/bin/macosx/\n    * Linux: https://cran.r-project.org/bin/linux/\n\n\n- BiocManager package\n  \n  * install by using the following R commands:\n    \n        > install.packages(\"BiocManager\")\n\n- biomaRt package\n\n  * install by using the following R commands:\n\n        > source(\"https://bioconductor.org/biocLite.R\")  \n        > BiocManager::install(\"biomaRt\")  \n\n- edgeR package\n\n  * install by using the following R commands:\n\n        > source(\"https://bioconductor.org/biocLite.R\")  \n        > BiocManager::install(\"edgeR\")  \n\n- preprocessCore package\n\n  * install by using the following R commands:\n\n        > source(\"https://bioconductor.org/biocLite.R\")  \n        > BiocManager::install(\"preprocessCore\") \n\n- topGO package\n\n  * install by using the following R commands:\n\n        > source(\"https://bioconductor.org/biocLite.R\")  \n        > BiocManager::install(\"topGO\")  \n\n- Rgraphviz package\n\n  * install by using the following R commands:\n\n        > source(\"https://bioconductor.org/biocLite.R\")  \n        > BiocManager::install(\"Rgraphviz\")\n\n- shiny package:\n\n  * install by using the following R command:\n\n        > install.packages(\"shiny\")  \n\n- DT package\n\n  * install by using the following R command:\n\n        > install.packages(\"DT\")  \n\n- data.table package\n\n  * install by using the following R command:\n\n        > install.packages(\"data.table\")  \n\n- hash package:\n\n  * install by using the following R command:\n\n        > install.packages(\"hash\")\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:58:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage with LONGO():",
        "type": "Text_excerpt",
        "value": "* Launch LONGO\n  > LONGO()\n\n![figure 1](./vignettes/figures/01_main.png)\n\n* Load pre-processed data\n  * Select options for data file\n  * Example data will be a tsv with a file extension of .txt\n* Select species\n  * For the example data will be 'hsapiens_gene_ensembl'\n* Select gene identifier\n  * Make sure gene identifier is in the first column\n  * For the example data this will be 'affy_primeview'\n* Confirm data and options are accurate, then click submit\n\n![figure 2](./vignettes/figures/02_submit.png)\n\n* Wait until the analysis completes\n* Data Table output tab has the gene name, length for the data\n\n![figure 3](./vignettes/figures/03_data_table.png)\n\n* LONGO Output tab has the LONGO plot and few other statistical plots\n  * Can adjust these variables to quickly see how they affect the plots\n\n![figure 4](./vignettes/figures/04_LONGO_output.png)\n\n* Long Gene Quotient tab has the long gene quotient plot\n\n![figure 5](./vignettes/figures/05_LONGO_lq.png)\n\n* The raw data for all of these plots are available to be downloaded\n  via download buttons\n* The GO Analysis tab provides options allowing graphing of the GO enrichment\n  analysis\n\n![figure 6](./vignettes/figures/06_LONGO_go.png)\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage with LONGOcmd():",
        "type": "Text_excerpt",
        "value": "The LONGOcmd function will automatically write the output data files to your\nworking directory. This can allow faster data analysis if you know the values\nto use. LONGOcmd can also be used with an R dataframe as the input file as long\nas it satisfies the format described in the pre-processing section above.\nThe shiny interface is more beginner friendly while the LONGOcmd()\nrequires more specific knowledge at the start. The LONGOcmd() function uses\nthe same techniques but requires only the initial input. If you know the BioMart\nspecies database and gene identifier, you can use this for faster analysis.\nThe example gives an overview of the possible input variables and their\ndefaults.\n\n* Use the following R command:\n  > LONGOcmd(fileLocation = path_to_file, {separator = \",\"},\n  > {header = TRUE}, {commentChar = \"!\"},\n  > {species = \"hsapiens_gene_ensembl\"},\n  > {libraryType = \"affy_primeview\"}, {multiProbes = \"mean\"},\n  > {windowSize = 200}, {stepSize = 40}, {windowStyle = \"mean\"},\n  > {filterData = TRUE}, {normalizeData = TRUE}, {controlColumn = 2})\n* Output files are written to the working directory\n"
      },
      "source": "https://raw.githubusercontent.com/biohpc/longo/master/README.md",
      "technique": "header_analysis"
    }
  ]
}