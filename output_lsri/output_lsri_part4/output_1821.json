{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "NetProphet 2.0"
        ],
        "type": "Text_excerpt",
        "value": "Kang, Y, et al. NetProphet 2.0: Mapping Transcription Factor Networks by Exploiting Scalable Data Resources. Bioinformatics 2018;34(2):249\u2013257.\n\nHaynes, B.C., et al. Mapping functional transcription factor networks from gene expression data. Genome research 2013;23(8):1319-1328.\n"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BrentLab/NetProphet_2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-07T20:50:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-24T05:01:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A \u201cdata light\u201d TF-network mapping algorithm using only gene expression and genome sequence data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9725309333330935,
      "result": {
        "original_header": "NetProphet 2.0",
        "type": "Text_excerpt",
        "value": "NetProphet 2.0 is our second-generation \u201cdata light\u201d TF-network mapping algorithm. It requires only data that can be generated from low-cost, reliable, and easily scalable experimental methods. NetProphet 2.0 relies on three fundamental ideas. First, combining several expression-based network algorithms that use different types of models can yield better results than using either one alone. Second, TFs with similar DNA binding domains (in terms of amino acid sequence) tend to bind similar sets of target genes. Third, even an imperfect net-work map can be used to infer models of each TF\u2019s DNA binding prefer-ences from the promoter sequences of its putative targets and these mod-els can be used to further refine the network. The following is our algorithm overview. \nOur implementation is available for both serial processing on a local desktop and parallel computing on a HPC cluster. The parallel computing mode requires the SLURM workload manager for job scheduling. \n \n"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9831644739198009,
      "result": {
        "original_header": "Wiki Page",
        "type": "Text_excerpt",
        "value": "Please find the details on installation, data preparation, code execution, and result interpretation in our wiki page [here](https://github.com/yiming-kang/NetProphet_2.0/wiki).\n \n"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/yiming-kang/NetProphet_2.0/wiki"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yiming-kang/NetProphet_2.0/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BrentLab/NetProphet_2.0/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BrentLab/NetProphet_2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetProphet 2.0"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/helper/load_singularity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/helper/load_modules.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/workflow/build_net_pwm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/score_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/check_inference_status.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/run_infer_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/run_score_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/infer_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/code/netprophet2/prepare_resources_wrap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/build_net_motif.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/score_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/convert_fire2meme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/parse_quantized_bins.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/parse_network_scores.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/infer_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_pwm/wrapper/parse_motif_summary.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/combine_networks/workflow/combine_networks_and_smooth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/combine_networks/wrapper/combine_networks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/combine_networks/wrapper/quantile_combine_networks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_np1/workflow/build_net_np1_and_smooth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_np1/code/netprophet1/run_netprophet_parallel_init.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_np1/wrapper/build_net_np1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_bart/workflow/build_net_bart_and_smooth.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/build_bart/wrapper/build_net_bart.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/src/smooth_networks/wrapper/weighted_avg_similar_dbds_wrap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/toy_example/run_toy_example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/NP2_overview.png"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BrentLab/NetProphet_2.0/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gene-expression, gene-regulation, transcription-factors, transcriptional-regulatory-network"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 yiming-kang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetProphet_2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BrentLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 92449,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 71598,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 67152,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 2424,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "abid-dhoha",
          "type": "User"
        },
        "date_created": "2020-08-11T15:27:31Z",
        "date_published": "2021-01-16T22:23:02Z",
        "description": "This release is for the code that was released with Netprophet2 paper. \r\nAll changes in this code were made by Yiming, first author of the code/paper.",
        "html_url": "https://github.com/BrentLab/NetProphet_2.0/releases/tag/v2.0",
        "name": "netprophet2.0",
        "release_id": 36504678,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/BrentLab/NetProphet_2.0/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/BrentLab/NetProphet_2.0/releases/36504678",
        "value": "https://api.github.com/repos/BrentLab/NetProphet_2.0/releases/36504678",
        "zipball_url": "https://api.github.com/repos/BrentLab/NetProphet_2.0/zipball/v2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:23:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Usage",
        "parent_header": [
          "NetProphet 2.0"
        ],
        "type": "Text_excerpt",
        "value": "Let's run NetProphet in parallel processing mode on your HPC cluster with email notification:\n\n```\n$ conda activate np2\n$ sbatch --mail-type=END,FAIL --mail-user=<your_email> NetProphet2 -f config.json\n```\n\nAlternatively, run serial processing mode on your MacOS or Linux desktop:\n\n```\n$ conda activate np2\n$ ./NetProphet2 -s -f config.json\n```\n\nAfter execution, you will see following messages that monitor the progress:\n\t\n```\nUnlocking working directory.\nProvided cores: 2\nRules claiming more threads will be scaled down.\nJob counts:\n\tcount\tjobs\n\t1\tall\n\t1\tassemble_final_network\n\t1\tbuild_motif_network\n\t1\tcombine_npwa_bnwa\n\t1\tinfer_motifs\n\t1\tmake_directories\n\t1\tmap_bart_network\n\t1\tmap_np_network\n\t1\tprepare_resources\n\t1\tscore_motifs\n\t1\tweighted_average_bart_network\n\t1\tweighted_average_np_network\n\t12\nrule make_directories:\n\toutput : ...\n1 of 12 steps (8%) done\nrule prepare_resources:\n...\n2 of 12 steps (17%) done\n...\n...\n...\n12 of 12 steps (100%) done\n```\n\n> NOTE: The example input data provided in this repo is used for mapping a small Yeast subnetwork. Visit http://mblab.wustl.edu/software.html for the resources for mapping whole TF network in yeast and fruit fly.\n\n"
      },
      "source": "https://raw.githubusercontent.com/yiming-kang/NetProphet_2.0/master/README.md",
      "technique": "header_analysis"
    }
  ]
}