{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing this work",
        "parent_header": [
          "DriverSub"
        ],
        "type": "Text_excerpt",
        "value": "------------------------\nJianing Xi, Xiguo Yuan, Minghui Wang, Ao Li, Xuelong Li, Qinghua Huang, Inferring subgroup specific driver genes from heterogeneous cancer samples via subspace learning with subgroup indication, *Bioinformatics*, Volume 36, Issue 6, 15 March 2020, Pages 1855\u20131863,  https://doi.org/10.1093/bioinformatics/btz793\n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "DriverSub"
        ],
        "type": "Text_excerpt",
        "value": "------------------------\n[1] Gao, J., Aksoy, B. A., Dogrusoz, U., Dresdner, G., Gross, B., Sumer, S. O., Sun, Y., Jacobsen, A., Sinha, R., Larsson, E., et al. (2013). Integrative analysis of complex cancer genomics and clinical profiles using the cbioportal. Sci. Signal, 6(269), pl1-pl1.\n\n[2] Cancer Genome Atlas Network and others (2012). Comprehensive molecular portraits of human breast tumours. Nature, 490(7418), 61.\n\n[3] Cancer Genome Atlas Research Network and others (2014). Comprehensive molecular characterization of urothelial bladder carcinoma. Nature, 507(7492), 315.\n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JianingXi/DriverSub"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-07T02:26:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-14T08:29:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Inferring subgroup specific driver genes from heterogeneous cancer samples via subspace learning with subgroup indication"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9849326461801095,
      "result": {
        "original_header": "DriverSub",
        "type": "Text_excerpt",
        "value": "Center for OPTical IMagery Analysis and Learning (OPTIMAL), \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9005266589410008,
      "result": {
        "original_header": "Input data Generation",
        "type": "Text_excerpt",
        "value": "The script `./GenerateInputData.m` can generate input data file from raw data, where the mutations of a cohort of cancer samples are download from [cBioPortal database](http://www.cbioportal.org/data_sets.jsp) [1].\n \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9773904021999981,
      "result": {
        "original_header": "1. Loading raw data of mutations",
        "type": "Text_excerpt",
        "value": "Here we have provided raw data of TCGA somatic mutations of two cancer types, breast cancers (BRCA) [2] and bladder cancers (BLCA) [3], downloaded from cBioPortal [1], which are located at: \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9692932091600193,
      "result": {
        "original_header": "2. Generating input data",
        "type": "Text_excerpt",
        "value": "After the raw data are loaded, the script `./GenerateInputData.m` with function `./bin/P02_GenerateMutData.m` can \ngenerate the mutation matrix of BRCA and BLCA as `./InputData/D01_brca.mat` and `./InputData/D02_blca.mat`. The two generated `.mat` files are the input data of DriverSub. \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9854736886484574,
      "result": {
        "original_header": "2. Input Arguments",
        "type": "Text_excerpt",
        "value": "* `X_mat`: the mutation matrix of cancer samples (sample x gene);\n* `K_dim`: the number of subgroups, predefined by users;\n* `lambda_Z`: the tuning parameter for the sparisity of matrix Z;\n* `lambda_W`: the tuning parameter for preventing overfitting of matrix W;\n* `L_norm`: the index of which type of regularization on output vector zi is choosen, where there are two options `L1` and `L2`;\n* `W_init`: the user-defined random initialization of matrix W, and the function will generates a random matrix if `W_init` is not included. \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9319538756958623,
      "result": {
        "original_header": "3. Output variables",
        "type": "Text_excerpt",
        "value": "* `W_mat`: the variable `W_mat` contains the parameters of the subspace learning and can be used to indicate subgroup samples, formed as matrix format. \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9348367110501234,
      "result": {
        "original_header": "Subgroup Prediction Assessment",
        "type": "Text_excerpt",
        "value": "Expect that the subgroup annotations for bladder cancer is not available, we have collected the available subgroup annotations for breast cancer from [UCSC Xena](https://xenabrowser.net/) in file `./SubgroupAnnotations/GT01_brca.mat`, as the ground truth in respect to data file `./InputData/D01_brca.mat`. \nThe script file `./SubgroupAssessment.m` is used to assess subgroup prediction performance. It will automatically draw the figure of association between the inferrd subgroups and the subgroup annotations, which is saved as `Fig_SubgroupAssessment.png`. \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JianingXi/DriverSub/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JianingXi/DriverSub/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JianingXi/DriverSub"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DriverSub"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/bin/splash.jpg"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/bin/Fig_SubgroupAssessment.png"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.930202812987527,
      "result": {
        "original_header": "1. Loading raw data of mutations",
        "type": "Text_excerpt",
        "value": "* `./cBioPortal_RawData/brca_tcga_pub/data_mutations_extended.txt`,\n* `./cBioPortal_RawData/blca_tcga_pub/data_mutations_extended.txt`. \nThrough the script `./GenerateInputData.m` with function `./bin/P01_LoadRawMut.m`, the raw data can be loaded into Matlab Workspace.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8408807354235062,
      "result": {
        "original_header": "Input data Generation",
        "type": "Text_excerpt",
        "value": "The script `./GenerateInputData.m` can generate input data file from raw data, where the mutations of a cohort of cancer samples are download from [cBioPortal database](http://www.cbioportal.org/data_sets.jsp) [1].\n \n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JianingXi/DriverSub/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DriverSub"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "JianingXi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 8253,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "parent_header": [
          "DriverSub"
        ],
        "type": "Text_excerpt",
        "value": "------------------------\n* 4GB memory\n* MATLAB R2015a or later\n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Run DriverSub",
        "parent_header": [
          "DriverSub",
          "Subgroup specific driver gene analysis by DriverSub"
        ],
        "type": "Text_excerpt",
        "value": "To apply DriverSub, please run the Matlab script file `./demo.m` and the results will be automatically saved in file `./Output/result_[cancer_file_name].mat` after the program is finished.\n"
      },
      "source": "https://raw.githubusercontent.com/JianingXi/DriverSub/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 01:55:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}