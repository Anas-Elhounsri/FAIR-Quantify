{
  "application_domain": [
    {
      "confidence": 0.858697509455703,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/edawson/gfakluge"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "1. Please treat others with kindness and professionalism. Everyone is welcome and we will not tolerate harassment for any reason.\n2. Please keep `gfakluge.hpp` header-only and update the build process if a modification alters it.  \n3. Please update the dependency list if one is added.  \n4. Please use semantic versioning. Minor changes bump the third versioning digit (e.g. 1.0.0 -> 1.0.1).  \nAdditional features, or changes that may or may not partially break backward compatibility \nbut which do not require significant modifications to code depending on the library bump the second versioning digit (e.g. 1.0.0 -> 1.1.0).  \nChanges which signficantly alter the API require a bump in the major version digit (e.g. 1.0.0 -> 2.0.0).\n5. Please fully specify all namespace items (e.g. `std::stream` in place of just `stream`).  \n6. To incorporate changes, please file a pull request on the Github page.\n7. Bug reports or feature requests should be posted as \"issues\" on the Github page with the appropriate tag and referenced in any relevant pull requests.\n\n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-30T16:40:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-31T15:24:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A C++ library and utilities for manipulating the Graphical Fragment Assembly format."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9925906753998618,
      "result": {
        "original_header": "What is it?",
        "type": "Text_excerpt",
        "value": "a set of command line utilities for manipulating [GFA files](http://lh3.github.io/2014/07/19/a-proposal-of-the-grapical-fragment-assembly-format).\nIt parses GFA to a set of data structures that represent the encoded graph.\nYou can use these components and their fields/members to build up your own\ngraph representation. You can also convert between GFA 0.1 <-> 1.0 <-> 2.0\nto glue programs that use different GFA versions together. \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8656080037894855,
      "result": {
        "original_header": "Command line utilities",
        "type": "Text_excerpt",
        "value": "+ gfak extract : transform the GFA segment lines to a FASTA file.  \n+ gfak fillseq : fill in the sequence field of S lines with placeholders using sequences from a FASTA file.\n+ gfak diff : check if two GFA files are different (not very sophisticated at the moment)  \n+ gfak sort : change the line order of a GFA file so that lines proceed in\nHeader -> Segment -> Link/Edge/Containment -> Path order.  \n+ gfak convert : convert between the different GFA specifications (e.g. GFA1 -> GFA2).  \n+ gfak stats : get the assembly stats of a GFA file (e.g. N50, L50)  \n+ gfak subset : extract a subgraph between two Segment IDs in a GFA file.  \n+ gfak ids : manually coordinate / increment the ID spaces of two graphs, so that they can be concatenated.  \n+ gfak merge : merge (i.e. concatenate) multiple GFA files. NB: Obliterates nodes with the same ID.   \nFor CLI usage, run any of the above (including `gfak` with no subcommand) with no arguments or `-h`. To change specification version, most commands take the `-S` flag and a single `double` argument.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8831258347677059,
      "result": {
        "original_header": "How do I build it?",
        "type": "Text_excerpt",
        "value": "You can then build libgfakluge and the command line `gfak` utilities by typing ``make`` in the repo.  \nTo use GFAKluge in your program, you'll need to\nadd a few lines to your code. First, add the necessary include line to your C++ code:  \n                #include \"gfakluge.hpp\" \nNext, make sure that the library is on the proper system paths and compile line: \n\nYou should then be able to parse and manipulate gfa from your program:   \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957096543823566,
      "result": {
        "original_header": "Why gfak / gfakluge?",
        "type": "Text_excerpt",
        "value": "+ High level C++ API for many graph manipulations.  \n+ Easy to build - no external dependencies; build with just a modern C++ compiler supporting C++11.\n+ Easy to develop with - Backing library is mostly STL containers and a handful of structs.  \n+ Performance - gfakluge is fast and relies on standard STL containers and basic structs.   \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9784143459713115,
      "result": {
        "original_header": "Internal Structures",
        "type": "Text_excerpt",
        "value": "The structs for contained elements, link elements, and alignment elements are very similar. These individual structs\nare then wrapped in a set of standard containers for easy access: \nAll of these structures can be accessed using the ``get_<Thing>`` method, where \\<Thing\\> is the name of the map you would like to retrieve.\nThey reside in gfakluge.hpp.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9727630192248524,
      "result": {
        "original_header": "GFA2",
        "type": "Text_excerpt",
        "value": "A few caveats apply:  \n    1. As GFA2 is a **superset** of GFA1, we support only support legal GFA2 -> GFA1 conversions. Information can be lost along the way (e.g. unordered groups won't be output).\n    2. Our GFA2 testing is a bit limited but we've verified several times to be on-spec. \nTags we specifically do not (i.e. cannot) support in GFA2 -> GFA1 conversion: G - gap, U - unordered group, F - fragment.\nLinks and containments should get converted to edges correctly. Sequence elements should get converted, but watch out for the length field if you hit issues. \nGFAKluge is fully compliant with reading GFA2 and GFA0.1 <-> GFA1.0 -> GFA2.0 conversion as of September 2017.\n \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8505645895065388,
      "result": {
        "original_header": "Reading GFA",
        "type": "Text_excerpt",
        "value": "You can then iterate over the aforementioned maps/structs and build out your own graph representation. \nI'm working on a low-memory API for reading lines / emitting structs but it won't be this pretty.\n \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9985502763995483,
      "result": {
        "original_header": "Status",
        "type": "Text_excerpt",
        "value": "valid GFA. This may change as the GFA spec becomes more formal.  \n- Diff is not a useful tool yet.\n- Parses JSON structs in optional fields of sequence lines (just as strings though).  \n- Full GFA1/GFA2 compatibility and interconversion is now implemented.  \n- CLI has been refactored to a single executable\n- Memory usage for to\\_string is a bit high - be careful with large graphs.\n- API for input / spec conversion / output is stable. API for merging graphs and coordinating ID namespaces may change slightly, but will strive for backwards compatibility. \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/edawson/gfakluge/wiki"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/edawson/gfakluge/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/edawson/gfakluge/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "edawson/gfakluge"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/47132080"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/d731f6dfc6b77013caaccfd8333c684a/status.svg"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9989630618848134,
      "result": {
        "original_header": "What is it?",
        "type": "Text_excerpt",
        "value": "\n**Homepage**: https://github.com/edawson/gfakluge  \n**License**: MIT  \n \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9901069371516448,
      "result": {
        "original_header": "How do I build it?",
        "type": "Text_excerpt",
        "value": "Building GFAKluge from source requires OpenMP. This should be supported on Linux by default. On Apple Mac OS X, we recommend installing gcc:  \n```\nbrew install gcc@8\nmake CXX=g++-8\n```  \nor  \nBASH2*\n \nYou can then build libgfakluge and the command line `gfak` utilities by typing ``make`` in the repo.  \nTo use GFAKluge in your program, you'll need to\nadd a few lines to your code. First, add the necessary include line to your C++ code:  \n                #include \"gfakluge.hpp\" \nNext, make sure that the library is on the proper system paths and compile line: \n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/edawson/gfakluge/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genomics, gfa, graph-representation, parsing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n=====================\n\nCopyright \u00a9 `2015` `Eric T Dawson`\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \u201cSoftware\u201d), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://dev.azure.com/ericco92/ericco92/_apis/build/status/edawson.gfakluge?branchName=master"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gfakluge"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "edawson"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 179098,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 3404,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1894,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1668,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1034,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 446,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2020-02-04T14:40:32Z",
        "date_published": "2021-01-27T03:29:23Z",
        "description": "Attempts to fix an issue with tabs/spaces in the makefile that break the build.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/1.1.3",
        "name": "Make fix",
        "release_id": 36948128,
        "tag": "1.1.3",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/36948128",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/36948128",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2019-01-22T12:50:19Z",
        "date_published": "2019-01-22T13:03:07Z",
        "description": "This contains some minor changes from the review process:\r\n\r\n- [X] make examples.md a link to that file  \r\n- [X] set the GitHub website link to the appropriate documentation (now links to README / GitHub Pages)  \r\n- [X] make interface.md a link to that file  \r\n- [X] bash-tap/bash-tap-bootstrap be included in the source code (made bash-tap) a git submodule, meaning it's now downloaded with `git clone --recursive`  \r\n- [X] You may want to consider using Autotools (I'm going to run through some tutorials and see if I can incorporate this - thanks for the suggestion!)\r\n- [X] `make` install installs `pliib.hpp` and `tinyfa.hpp`\r\n- [X] bump version to 1.1.2\r\n- [X] fix make install instructions",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/1.1.2",
        "name": "1.1.2",
        "release_id": 15109694,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/15109694",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/15109694",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2019-01-14T22:23:17Z",
        "date_published": "2019-01-14T22:23:46Z",
        "description": "This release brings the changes requested by @sjackman in the JOSS review.\r\n\r\n[X] Fix install instructions\r\n[X] Remove citation to repo in summary\r\n[X] Mention the homepage and license in the summary\r\n[X] Make GFAKluge a header-only library\r\n[X] Add a make install target to makefile\r\n[X] Change the wording of \"legacy GFA formats\"\r\n[X] Reference GFApy and RGFA and ABYSS, all of which are other programs which can convert GFA 1 -> 2\r\n[X] Fix typesetting of convert\r\n[X] Fix typesetting of vg msga\r\n[X] Change wording to reflect that GFA2 and GFA1 interconversion needs are not temporary\r\n[X] List the currently available commands in the manuscript.\r\n[X] Give command line examples of three or more commands\r\n[X] Mention the API documentation in the manuscript\r\n[X] Add a make test target in the makefile that runs automated tests\r\n[X] Add a contributing section to the Readme",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/1.1.0",
        "name": "Paper release",
        "release_id": 14970826,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/14970826",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/14970826",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-09-24T10:38:51Z",
        "date_published": "2018-09-24T10:47:06Z",
        "description": "This release has a bunch of bug fixes and contains all the basic functionality we desired for submission.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/v1.0.0",
        "name": "Version 1.0",
        "release_id": 13053772,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/13053772",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/13053772",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-09-10T09:17:00Z",
        "date_published": "2018-09-10T11:39:39Z",
        "description": "Fixes a bug where fillseq output was not deterministic.\r\nShould also fix a nasty quadratic runtime issue when reading paths and another where reading path lines sometimes crashed due to weird pointer weather.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.3.1",
        "release_id": 12814322,
        "tag": "0.3.1",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/12814322",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/12814322",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-08-15T22:09:06Z",
        "date_published": "2018-08-15T22:14:45Z",
        "description": "This release deprecates the walk_elem and instead support GFA0.1 using the path_elem as the backing container. It also adds the fillseq command. There are bug fixes related to segment orientations in paths and a performance improvement in path normalization.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 12424013,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/12424013",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/12424013",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-05-01T21:55:01Z",
        "date_published": "2018-05-01T22:00:05Z",
        "description": "This release adds a few new features:\r\n- streaming output by calling `write_element(<element>)`\r\n- FASTA formatted output in the convert too\r\n\r\nIt also refactors the `pliib.hpp` file to reside in the repo, rather than as a submodule.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.2.2",
        "name": "Streaming output",
        "release_id": 10803942,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/10803942",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/10803942",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-04-05T14:13:59Z",
        "date_published": "2018-04-05T14:19:22Z",
        "description": "This is a minor tweak to 0.2.0 that swaps the `--version <X>` flag to the more GNU-esque behavior of printing the software version when the `--version` flag is passed (NB: no argument). The GFA output version can be controlled using the `--spec <X>` flag. \r\n\r\nThis also swaps the gfakluge::split function for the pliib::split function, which should make swapping out to the zero-copy version easier.\r\n\r\nA bug which caused a segfault when sorting GFA2 and outputting GFA1 was fixed.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.2.1",
        "name": "Swap version and spec flags, switch split functions, Bug fixes",
        "release_id": 10409281,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/10409281",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/10409281",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2018-04-03T13:32:29Z",
        "date_published": "2018-04-05T13:12:49Z",
        "description": "This release brings full compatibility with GFA0.1, GFA1.0, and the GFA1.0 compatible subset of GFA2.0.\r\n\r\n- Executable is now named `gfak`, not \"gfakluge\"\r\n- New `--version <X>` flag for relevant tools that allows users to select which format to use for output.\r\n- `gfak extract`: create a fasta file from the S lines of a GFA file.\r\n- No information is lost in the backing containers when switching between formats, though incompatible records are removed from output.\r\n- Crushed a few bugs (an off by one error, some segfaults, etc)\r\n- Several helpful changes/fixes from other devs (namespace rules, output bug fix)\r\n",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.2.0",
        "name": "GFA Harmony",
        "release_id": 10371233,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/10371233",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/10371233",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "edawson",
          "type": "User"
        },
        "date_created": "2017-07-17T15:54:44Z",
        "date_published": "2017-09-20T03:06:16Z",
        "description": "This release supports all of the variants of GFA 0.1 / 1.0 I have thus far observed. I'm pushing it out now in preparation for the forthcoming merge of the `dev` branch that brings full GFA2 compatibility.",
        "html_url": "https://github.com/edawson/gfakluge/releases/tag/0.1.0",
        "name": "GFA 0.1 <-> 1.0",
        "release_id": 7817578,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/edawson/gfakluge/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/edawson/gfakluge/releases/7817578",
        "value": "https://api.github.com/repos/edawson/gfakluge/releases/7817578",
        "zipball_url": "https://api.github.com/repos/edawson/gfakluge/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "OpenMP (via GCC or clang)  \n**NB**: GFAKluge cannot be compiled with Apple clang, as it does not include OpenMP.\n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:03:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 51
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Help",
        "type": "Text_excerpt",
        "value": "github: [edawson](https://github.com/edawson/https://github.com/edawson/GFAKluge)   \nPlease post an issue for help.\n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Help",
        "type": "Text_excerpt",
        "value": "github: [edawson](https://github.com/edawson/https://github.com/edawson/GFAKluge)   \nPlease post an issue for help.\n"
      },
      "source": "https://raw.githubusercontent.com/edawson/gfakluge/master/README.md",
      "technique": "header_analysis"
    }
  ]
}