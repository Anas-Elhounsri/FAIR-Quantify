{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing LICHEM",
        "type": "Text_excerpt",
        "value": "If you use LICHEM in your research, please cite the following papers:\n\n```\nKratz, E.G.; Walker, A.R.; Lagardere, L; Lipparini, F; Piquemal, J.-P.; and\nCisneros, G.A.; \"LICHEM: A QM/MM Program for Simulations with Multipolar and\nPolarizable Force Fields\", J. Comput. Chem., 37, 11, 1019, (2016)\n```\n\n```\nKratz, E.G.; Duke, R.E.; and Cisneros, G.A.; \"Long-Range Electrostatic\nCorrections in Multipolar/Polarizable QM/MM Simulations\", Theor. Chem. Acc.,\n135, 7, 1, (2016)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kratman/LICHEM_QMMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-12-12T20:23:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-28T19:13:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Symbiotic computational chemistry; Public repository."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "This package is an open-source (GPLv3) interface between QM and MM software\nso that QM/MM calculations can be performed with polarizable and frozen\nelectron density force fields. Functionality is also present for standard\npoint-charge based force fields, pure MM, and pure QM calculations.\n\nAvailable calculations: single-point energies, geometry optimizations,\nclassical Monte Carlo, path-integral Monte Carlo, and reaction pathways.\n```\nAvailable QM wrappers: Gaussian, NWChem, PSI4\n\nAvailable MM wrappers: TINKER\n\nMM wrappers in development: LAMMPS\n```\n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9567926235104977,
      "result": {
        "original_header": "QM and MM packages",
        "type": "Text_excerpt",
        "value": "LICHEM uses QM and MM packages that are pre-installed and located in the\nuser's path. The LICHEM wrappers are kept up-to-date with the development of\nthe QM and MM packages. It is best to use packages from conda, git, or other\npackage management systems.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9480964476223661,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "LICHEM is still in the early stages of development. Please report all bugs so\nthat the code can be updated quickly. Bugs should be reported through the\nGitHub issues interface. A list of known issues and the development timeline\nare available in the doc directory or on the GitHub page. \nDevelopment versions of LICHEM are kept in a private repository. Large changes\nto the code or the addition of new features (diffuse charges, reaction path\nways, etc) are tested and published before they are merged into the public\nrepository. To ensure that LICHEM compiles properly, dummy function calls are\nadded for incomplete or untested features. \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8764141443463902,
      "result": {
        "original_header": "Jokes",
        "type": "Text_excerpt",
        "value": "Jokes and Easter eggs can be included by changing\n```\n const bool JOKES = 0; //Print humorous comments\n```\nin LICHEM_options.h to\nBASH2*\nbefore compiling the code.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9730666935501058,
      "result": {
        "original_header": "Black-box testing",
        "type": "Text_excerpt",
        "value": "Tests can be performed for pairs of QM and MM wrappers.\n```\nuser:$ ./runtests Ncpus QMPackage MMPackage\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8860955073814653,
      "result": {
        "original_header": "White-box testing",
        "type": "Text_excerpt",
        "value": "Tools for performing static code analysis can be found in the\ntests/Code_analysis directory. These tools can help developers detect coding\nerrors and style issues. \nIn addition to using cpplint and cppcheck, the Makefile can be used to check\nfor code issues at compile-time.\n```\nuser:$ make checksyntax\n\n  or\n\nuser:$ make Dev\n```\nThe two commands above check for compiler warnings using the c++14 standard.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9695953004931182,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "The development of LICHEM was supported by funding from the NIH (Grant No.\nR01GM108583) and Wayne State University. LICHEM is currently maintained by\nboth Eric G. Kratz and the Cisneros research group at University of North\nTexas. \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9884024626448882,
      "result": {
        "type": "Text_excerpt",
        "value": "[//]: # (Mixture of GitHub markdown and HTML. HTML is needed for formatting.) \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kratman/LICHEM_QMMM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kratman/LICHEM_QMMM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kratman/LICHEM_QMMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Currently, the binary and user's manual are not included in the repository.\nHowever, the Makefile can be used to generate both files. Since LICHEM is\ndesigned to be simple, only a small number of packages are required to compile\nthe code. An approximate list of packages is given below.\n```\n LICHEM binary: OpenMP\n LICHEM test suite: Python\n LICHEM manual: LaTeX, BibTeX, TeXLive\n```\nA copy of the Eigen3 library is included with the LICHEM source code.\nHowever, other versions of Eigen3 can be used to build LICHEM by modifying\nthe Makefile.\n\nTo install LICHEM, clone the git repository:\n```\nuser:$ mkdir LICHEM\nuser:$ git clone https://github.com/kratman/LICHEM_QMMM.git ./LICHEM/\n```\n\nOn Ubuntu boxes, the Makefile should function without modifications. However,\nit may be necessary to install additional LaTeX packages. On OSX machines,\nthe SEDI, TEX, BIB, and CXXFLAGS variables will need to be modified.\n\nThe Makefile can produce both the documentation and the binary.\n```\nuser:$ make install\n```\n\nFor development, debugging, or testing an alternate binary can be compiled.\n```\nuser:$ make Dev\n```\n\nAdditional make rules can be found in the Makefile.\n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9945756157279876,
      "result": {
        "original_header": "Automated tests",
        "type": "Text_excerpt",
        "value": "**Travis CI build:** [![Build Status](https://travis-ci.org/kratman/LICHEM_QMMM.svg?branch=master)](https://travis-ci.org/kratman/LICHEM_QMMM)\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999642781825177,
      "result": {
        "original_header": "QM and MM packages",
        "type": "Text_excerpt",
        "value": "LICHEM uses QM and MM packages that are pre-installed and located in the\nuser's path. The LICHEM wrappers are kept up-to-date with the development of\nthe QM and MM packages. It is best to use packages from conda, git, or other\npackage management systems.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.963220250478743,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "LICHEM is still in the early stages of development. Please report all bugs so\nthat the code can be updated quickly. Bugs should be reported through the\nGitHub issues interface. A list of known issues and the development timeline\nare available in the doc directory or on the GitHub page. \nFurther development details can be found in the doc directory, or the GitHub\nissues section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8255683340846993,
      "result": {
        "original_header": "Black-box testing",
        "type": "Text_excerpt",
        "value": "A dry run can be performed to check packages without performing the\ncalculations.\n```\nuser:$ ./runtests Ncpus QMPackage MMPackage Dry\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.912900394348685,
      "result": {
        "original_header": "White-box testing",
        "type": "Text_excerpt",
        "value": "Tools for performing static code analysis can be found in the\ntests/Code_analysis directory. These tools can help developers detect coding\nerrors and style issues. \nA configuration file for cppcheck is also included in the tool kit.\n```\nuser:$ cppcheck-gui lichem.cfg\n``` \nIn addition to using cpplint and cppcheck, the Makefile can be used to check\nfor code issues at compile-time.\n```\nuser:$ make checksyntax\n\n  or\n\nuser:$ make Dev\n```\nThe two commands above check for compiler warnings using the c++14 standard.\n \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8836690120329934,
      "result": {
        "type": "Text_excerpt",
        "value": "[//]: # (Mixture of GitHub markdown and HTML. HTML is needed for formatting.) \n"
      },
      "source": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kratman/LICHEM_QMMM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LICHEM_QMMM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kratman"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 5376325,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 79835,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 45226,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24253,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 5180,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 694,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 136,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kratman/LICHEM_QMMM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kratman",
          "type": "User"
        },
        "date_created": "2015-03-10T05:04:50Z",
        "date_published": "2015-03-10T05:41:36Z",
        "description": "Feature freeze for alpha release. New changes are in the Dev branch(es)\n",
        "html_url": "https://github.com/kratman/LICHEM_QMMM/releases/tag/alpha",
        "name": "alpha",
        "release_id": 1032556,
        "tag": "alpha",
        "tarball_url": "https://api.github.com/repos/kratman/LICHEM_QMMM/tarball/alpha",
        "type": "Release",
        "url": "https://api.github.com/repos/kratman/LICHEM_QMMM/releases/1032556",
        "value": "https://api.github.com/repos/kratman/LICHEM_QMMM/releases/1032556",
        "zipball_url": "https://api.github.com/repos/kratman/LICHEM_QMMM/zipball/alpha"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:41:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ]
}