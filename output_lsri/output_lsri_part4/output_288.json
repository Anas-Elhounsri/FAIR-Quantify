{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylanbeeber/crispRdesignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-28T23:14:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-30T18:31:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Software used to design guide RNA sequences for CRISPR/Cas9 genome editing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9233642561011086,
      "result": {
        "original_header": "crispRdesignR",
        "type": "Text_excerpt",
        "value": "\nSoftware used to design guide RNA sequences for CRISPR/Cas9 genome editing \nThis package aims to provide scientifically pertinent information when designing guide RNA sequences for Cas9 genome editing. When provided a target DNA sequence for editing, a genome to check for off-targets in, and a genome annotation file (.gtf), it will output information for two separate data tables. The first table contains information on the generated sgRNA (sgRNA sequence, PAM, Direction, Start, End, GC content, Presence of Homopolymers, Regions of Self Complementarity, Effciency Score (Doench 2016), Number of Potential Off-Target sequences, and Notes on the sgRNA). The second table contains information on the found off-target sequences (Original sgRNA Sequence, Chromosome, Start, End, Number of Mismatches, Direction, CFD Scores, Matched Sequence, Gene ID, Gene Name, Sequence Type, and Exon Number). This data can be generated through the command line or through crispRdesignR's GUI. Additionally, a user may provide their own DNA libraries and genome annotation files when searching for off-targets. \n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9900199031046698,
      "result": {
        "original_header": "Command-line version",
        "type": "Text_excerpt",
        "value": "- Load crispRdesignR with `library(crispRdesignR)` and ensure that your genome of interest is installed. The following commands can be used to output the same data tables as in the GUI version.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9261656448130435,
      "result": {
        "original_header": "sgRNA Design",
        "type": "Text_excerpt",
        "value": "`userseq`: The target sequence to generate sgRNA guides for. Can either be a character sequence containing DNA bases or the name of a fasta/text file in the working directory. \n`genomename`: The name of a genome (in BSgenome format) to check for off-targets in. These genomes can be downloaded through BSgenome or compiled by the user. \n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8810487764778094,
      "result": {
        "original_header": "Off-Target Data Retrieval",
        "type": "Text_excerpt",
        "value": "The additional off-target data can be retrieved with `getofftargetdata(x)` \n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylanbeeber/crispRdesignR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dylanbeeber/crispRdesignR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dylanbeeber/crispRdesignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "crispRdesignR"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/38253997/76813540-b40e9580-67ce-11ea-93c5-58f939ed6161.PNG"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/38253997/76813686-20899480-67cf-11ea-89e3-447eef26d21a.PNG"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install crispRdesignR v1.1.7 through CRAN",
        "parent_header": [
          "crispRdesignR",
          "Installation and dependencies (tested in R version 4.2.2):"
        ],
        "type": "Text_excerpt",
        "value": "`install.packages(\"crispRdesignR\")`\n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.974398375936868,
      "result": {
        "original_header": "Command-line version",
        "type": "Text_excerpt",
        "value": "- Load crispRdesignR with `library(crispRdesignR)` and ensure that your genome of interest is installed. The following commands can be used to output the same data tables as in the GUI version.\n \n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dylanbeeber/crispRdesignR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "crispRdesignR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dylanbeeber"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 83450,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:46:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start with the GUI",
        "parent_header": [
          "crispRdesignR"
        ],
        "type": "Text_excerpt",
        "value": "Example Data is located in /inst/ folder.\n\nThe DAK1.fasta and DAK1_short.txt file contains a DNA sequence native to the DAK1 gene that can be copied and pasted into crispRdesignR or uploaded as a file (in the GUI version).\n\nThe \"Saccharomyces_cerevisiae.R64-1-1.92.gtf.gz\" file is the compressed genome annotation file for Saccharomyces cerevisiae. Both compressed and uncompressed .gtf files can be used.\n\nUsing the GUI version:\n\n- `library(crispRdesignR)`\n\n- `crispRdesignRUI()`\n\n- Click on the \u201cUse FASTA or txt file as target sequence\u201d button and choose the DAK1.fasta or DAK1_short.txt file, or copy and paste the sequence in the box.\n\n- select the Saccharomyces cerevisiae genome\n\n- browse to choose the .gtf file Saccharomyces_cerevisiae.R64-1-1.92.gtf.gz\n\n- click on the Find sgRNA button\n\n![crispRdesignRscreenshot5](https://user-images.githubusercontent.com/38253997/76813686-20899480-67cf-11ea-89e3-447eef26d21a.PNG)\n\nAdditional Genome annotation files can be found here: https://useast.ensembl.org/info/data/ftp/index.html\n\nNote: Even though it might be possible to select them in the GUI, Genomes must be installed (with `install.packages(BSgenome.yourgenome)`) before they can be used in the shiny app.\n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example:",
        "parent_header": [
          "crispRdesignR",
          "Command-line version",
          "Off-Target Data Retrieval"
        ],
        "type": "Text_excerpt",
        "value": "```\n# Set query sequence, genome, and gtf file\ntestseq <- \"GGCAGAGCTTCGTATGTCGGCGATTCATCTCAAGTAGAAGATCCTGGTGCAGTAGG\"\nusergenome <- BSgenome.Scerevisiae.UCSC.sacCer2::BSgenome.Scerevisiae.UCSC.sacCer2\ngtfname <- \"Saccharomyces_cerevisiae.R64-1-1.92.gtf.gz\"\nannotation_file <- system.file(\"example_data\", gtfname, package = \"crispRdesignR\")\n\n# Perform guide RNA design\nalldata <- sgRNA_design(testseq, usergenome, annotation_file)\n\n# Obtain guide RNA information data frame\nsgRNAdata <- getsgRNAdata(alldata)\n\n# Obtain off-target information data frame\nofftargetdata <- getofftargetdata(alldata)\n```\n\n###### Example:\n`exampledata <- sgRNA_design(\"DAK1.fasta\", BSgenome.Scerevisiae.UCSC.sacCer2, \"Saccharomyces_cerevisiae.R64-1-1.92.gtf.gz\", \"NAG\", calloffs = TRUE, annotateoffs = FALSE)`\n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Data",
        "parent_header": [
          "crispRdesignR"
        ],
        "type": "Text_excerpt",
        "value": "Example Data is located in /inst/ folder. To use the DAK1.fasta file, place it in the working directory and refer to it in crispRdesignR. The DAK1_short.txt file contains a short DNA sequence that can be copied and pasted into crispRdesignR. Both sequences are native to the DAK1 gene in Saccharomyces cerevisiae. The \"Saccharomyces_cerevisiae.R64-1-1.92.gtf.gz\" file is a genome annotation file for Saccharomyces cerevisiae and must also be placed in the working directory (when using the command line version).\n"
      },
      "source": "https://raw.githubusercontent.com/dylanbeeber/crispRdesignR/master/README.md",
      "technique": "header_analysis"
    }
  ]
}