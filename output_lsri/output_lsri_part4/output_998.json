{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "NeoPredPipe has now been published in BMC Bioinformatics. Please cite:\n- Schenck, Ryan O. and Lakatos, Eszter and Gatenbee, Chandler and Graham, Trevor A. and Anderson, Alexander R. A. [NeoPredPipe: high-throughput neoantigen prediction and recognition potential pipeline](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-2876-4). BMC Bioinformatics. 2019. 20:264.\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MathOnco/NeoPredPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-08T11:23:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-10T00:47:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Neoantigens prediction pipeline for multi- or single-region vcf files using ANNOVAR and netMHCpan."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "type": "Text_excerpt",
        "value": "This tool allows a user to process neoantigens predicted from single- or multi-region vcf files using ANNOVAR and netMHCpan.\n\nOnce the primary pipeline is ran, the user is then able to perform Neoantigen recognition potential as described by [Marta Luksza et al., Nature 2017](https://www.nature.com/articles/nature24473).\nTo perform the neoantigen recognition potential please [click here](RecognitionPotential.md). Finally, you can visualize these predictions using [NeoPredViz](NeoPredViz.md).\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Updates",
        "parent_header": [
          "Summary"
        ],
        "type": "Text_excerpt",
        "value": "**2024-09-01** Support for netMHCpan 4.1 is added to NeoRecoPo - now full pipeline can work with and process the output of version 4.1. Simply specify the netMHCpan-4.1 binary in _usr_paths.ini_.\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9817919894050137,
      "result": {
        "original_header": "Input files",
        "type": "Text_excerpt",
        "value": "3. (Optional) Expression file(s), specified after the -x flag:\n   - Either the path to a single file to be used for all samples (for example values compiled from a reference cohort); or a path to a directory, containing files for each sample, named as <patientIdentifier>.tsv. NeoPredPipe will automatically search for appropriate *.tsv files if a directory is specified.\n   - Each file should be tab-delimited, with the first column containing gene identifiers, and the second column containing expression values. If the --expmulti flag is specified, expression files are assumed to hold information on multiple regions, and additional columns are read in as expression data.\n   - Direct outputs of RNAseq quantification software, such as HTseqCount and kallisto are supported.\n   - Currently supported gene identifier formats: Ensembl gene ID, Ensembl transcript ID, RefSeq transcript ID, UCSC transcript ID.\n \n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8723624621505123,
      "result": {
        "original_header": "Data post processing",
        "type": "Text_excerpt",
        "value": "1. Post processing is turned on by default. If you want it turned off set the '-pp' flag.\n2. The output files will yield files with the following information:\n   - A file containing the neoantigen predictions with appropriate identifier information and heterogeneity if multiregion.\n   - A file containing summaries of the neoantigen burdens in each sample (and regions if multiregion).\n \n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9296037674829375,
      "result": {
        "original_header": "Output Format",
        "type": "Text_excerpt",
        "value": "1. The primary output file of neoantigens has the following format, separated by tabulators (columns 12-26 are taken from [here](http://www.cbs.dtu.dk/services/NetMHCpan/output.php)):\n   - **Sample**: vcf filename/patient identifier\n   - **R1**: Region 1 of a multiregion sample, binary for presence (1) or absence (0), regions above the number of regions in the sample (for varying number of biopsies) are indicated by -1. Can be *n* numbers of regions. _Only present in multiregion samples_.\n   - **R2**: Region 2 of a multiregion sample, binary for presence (1) or absence (0), regions above the number of regions in the sample (for varying number of biopsies) are indicated by -1. Can be *n* numbers of regions. _Only present in multiregion samples_.\n   - **R3**: Region 3 of a multiregion sample, binary for presence (1) or absence (0), regions above the number of regions in the sample (for varying number of biopsies) are indicated by -1. Can be *n* numbers of regions. _Only present in multiregion samples_.\n   - **Line**: Line number from the *.avready file (same as the vcf) to identify mutation yielding corresponding neoantigen.\n   - **chr**: Chromosome of mutation\n   - **allelepos**: Position of the mutation\n   - **ref**: Reference base at the position\n   - **alt**: Alternative base at the location\n   - **GeneName:RefID**: Gene name and RefSeq ID separated by a colon. Multiple genes/RefSeq IDs separated by a comma.\n   - **Expression**: Expression value of the gene. Expression values for multiple regions (_if using the -expmulti flag_) are comma-separated. NA for genes that are not found in the corresponding expression file, or for samples without expression information. _Only present if the -x flag is used_.\n   - **pos**: Residue number (starting from 0)\n   - **hla**: Molecule/allele name\n   - **peptide**: Amino acid sequence of the potential ligand\n   - **core**: The minimal 9 amino acid binding core directly in contact with the MHC\n   - **Of**: The starting position of the Core within the Peptide (if > 0, the method predicts a N-terminal protrusion)\n   - **Gp**: Position of the deletion, if any.\n   - **Gl**: Length of the deletion.\n   - **Ip**: Position of the insertions, if any.\n   - **Il**: Length of the insertion.\n   - **Icore**: Interaction core. This is the sequence of the binding core including eventual insertions of deletions.\n   - **Identity**: Protein identifier, i.e. the name of the Fasta entry.\n   - **Score**: The raw prediction score\n   - **Binding Affinity**: Predicted binding affinity in nanoMolar units.\n   - **Rank**: Rank of the predicted affinity compared to a set of random natural peptides. This measure is not affected by inherent bias of certain molecules towards higher or lower mean predicted affinities. Strong binders are defined as having %rank<0.5, and weak binders with %rank<2. We advise to select candidate binders based on %Rank rather than nM Affinity\n   - **Candidate**: Symbol (<=) used to denote a Strong or Week Binder in BindLevel\n   - **BindLevel**: (SB: strong binder, WB: weak binder). The peptide will be identified as a strong binder if the % Rank is below the specified threshold for the strong binders, by default 0.5%. The peptide will be identified as a weak binder if the % Rank is above the threshold of the strong binders but below the specified threshold for the weak binders, by default 2%.\n   - **Novelty**: Binary value for indicating if the epitope is novel (1) or exists in the reference proteome (0). _Only present if -m flag is set to perform peptide matching in postprocessing_.\n    \n3. If multiple regions are specified then the output will look as follows (scroll left or right to view all):\n   - For cases of multiregion samples, the same information for totals are given, but also for each region in the vcf.\n   - Heterogeneity (e.g. clonal, subclonal, and shared) information is also measured and printed out. This yields counts of clonal subclonal and shared.\n     - For _shared_ neoantigens there must be >2 regions present, otherwise shared will be 0. **This pipeline can handle samples with different numbers of regions**. \n4. The above two files are reported separately for single nucleotide changes and indels (and/or other genetic alterations resulting in more than 1 amino acid change).\n   - _ExperimentName_.neoantigens.txt and _ExperimentName_.neoantigens.summarytable.txt contain single amino acid changes.\n   - _ExperimentName_.neoantigens.Indels.txt and _ExperimentName_.neoantigens.Indels.summarytable.txt contain neoantigen information arising from indel/frameshift/stop-loss events. \n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MathOnco/NeoPredPipe/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MathOnco/NeoPredPipe/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MathOnco/NeoPredPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing and preparing environment",
        "type": "Text_excerpt",
        "value": "1. Clone the repository:\n```bash\ngit clone https://github.com/MathOnco/NeoPredPipe.git\n```\n2. Configure the 'usr_path.ini' file for your environment.\n   - All paths within the annovar header should be where you installed annovar.\n   - Only one path is needed to the netMHCpan executible under netMHCpan\n      - If you wish to use netMHCIIpan instead, simply provide that path in this section and the pipeline will process files accordingly\n   - If you wish to use PeptideMatch, provide paths for both jar and reference index.\n   #### Note: You need to provide the absolute paths for all the above.\n3. You can see the options associated by running the following:\n```bash\npython ./NeoPredPipe.py --help\n```\n   - Which produces the following:\n```bash\nusage: NeoPredPipe.py [-h] [-E EPITOPES [EPITOPES ...]] [-l] [-d] [-r] [-p]\n                      [--EL] [-I VCFDIR] [-H HLAFILE] [-o OUTPUTDIR]\n                      [-n OUTNAME] [-pp] [-c COLREGIONS [COLREGIONS ...]] [-a]\n                      [-m] [-x EXPRESSION] [--expmulti] [-t]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -E EPITOPES [EPITOPES ...], --epitopes EPITOPES [EPITOPES ...]\n                        Epitope lengths for predictions. Default: 8 9 10\n  -l                    Specifies whether to delete the ANNOVAR log file.\n                        Default: True. Note: Use for debugging.\n  -d                    Specifies whether to delete intermediate files created\n                        by program. Default: True. Note: Set flag to resume\n                        job.\n  -r, --cleanrun        Specify this alone with no other options to clean-up a\n                        run. Be careful that you mean to do this!!\n  -p, --preponly        Prep files only without running neoantigen\n                        predictions. The prediction step takes the most time.\n  --EL                  Flag to perform netMHCpan predictions with Eluted\n                        Ligand option (without the -BA flag). Please note that\n                        the output will NOT be compatible with downstream\n                        Recognition Potential analysis. Default=False (BA\n                        predictions)\n\nRequired arguments:\n  -I VCFDIR             Input vcf file directory location. Example: -I\n                        ./Example/input_vcfs/\n  -H HLAFILE            HLA file for vcf patient samples OR directory with\n                        patient-specific directories from running POLYSOLVER\n                        (see Readme).\n  -o OUTPUTDIR          Output Directory Path\n  -n OUTNAME            Name of the output file for neoantigen predictions\n\nPost Processing Options:\n  -pp                   Flag to perform post processing. Default=True.\n  -c COLREGIONS [COLREGIONS ...]\n                        Columns of regions within vcf that are not normal\n                        within a multiregion vcf file after the format field.\n                        Example: 0 is normal in test samples, tumor are the\n                        other columns. Program can handle different number of\n                        regions per vcf file.\n  -a                    Flag to not filter neoantigen predictions and keep all\n                        regardless of prediction value.\n  -m                    Specifies whether to perform check if predicted\n                        epitopes match any normal peptide. If set to True,\n                        output is added as a column to neoantigens file.\n                        Requires PeptideMatch specified in usr_paths.ini.\n                        Default=False\n  -x EXPRESSION, --expression EXPRESSION\n                        RNAseq expression quantification file(s), if\n                        specified, expression information is added to output\n                        tables.\n  --expmulti            Flag to specify if expression file(s) has information\n                        on multiple regions in multiple columns.\n                        Default=False.\n  -t                    Flag to turn off a neoantigen burden summary table.\n                        Default=True.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8290078271861919,
      "result": {
        "original_header": "Output Format",
        "type": "Text_excerpt",
        "value": "| Sample | Total | Total_WB | Total_SB |\n|  --- |  --- |  --- |  --- |\n|  Pat1 |  72 |  72 |  0 |\n|  Pat2 |  33 |  23 |  10 | \n4. The above two files are reported separately for single nucleotide changes and indels (and/or other genetic alterations resulting in more than 1 amino acid change).\n   - _ExperimentName_.neoantigens.txt and _ExperimentName_.neoantigens.summarytable.txt contain single amino acid changes.\n   - _ExperimentName_.neoantigens.Indels.txt and _ExperimentName_.neoantigens.Indels.summarytable.txt contain neoantigen information arising from indel/frameshift/stop-loss events. \n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8116125373019679,
      "result": {
        "original_header": "Output Format",
        "type": "Text_excerpt",
        "value": "| Sample | Total | Total_WB | Total_SB |\n|  --- |  --- |  --- |  --- |\n|  Pat1 |  72 |  72 |  0 |\n|  Pat2 |  33 |  23 |  10 | \n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MathOnco/NeoPredPipe/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Lesser General Public License v3.0",
        "spdx_id": "LGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/lgpl-3.0",
        "value": "https://api.github.com/licenses/lgpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NeoPredPipe"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MathOnco"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 138098,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4257,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rschenck",
          "type": "User"
        },
        "date_created": "2019-05-28T18:09:40Z",
        "date_published": "2019-05-29T09:57:59Z",
        "description": "Current code base at the date of publication.",
        "html_url": "https://github.com/MathOnco/NeoPredPipe/releases/tag/1.1",
        "name": "Publication Version",
        "release_id": 17651021,
        "tag": "1.1",
        "tarball_url": "https://api.github.com/repos/MathOnco/NeoPredPipe/tarball/1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MathOnco/NeoPredPipe/releases/17651021",
        "value": "https://api.github.com/repos/MathOnco/NeoPredPipe/releases/17651021",
        "zipball_url": "https://api.github.com/repos/MathOnco/NeoPredPipe/zipball/1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rschenck",
          "type": "User"
        },
        "date_created": "2018-11-08T18:37:10Z",
        "date_published": "2018-12-08T11:29:07Z",
        "html_url": "https://github.com/MathOnco/NeoPredPipe/releases/tag/1.0",
        "name": "Review Release",
        "release_id": 14422515,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/MathOnco/NeoPredPipe/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MathOnco/NeoPredPipe/releases/14422515",
        "value": "https://api.github.com/repos/MathOnco/NeoPredPipe/releases/14422515",
        "zipball_url": "https://api.github.com/repos/MathOnco/NeoPredPipe/zipball/1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Note: Should be compatible on Darwin and Linux systems, not Windows.",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "1. Python >= 2.7 (Built using Python 2.7.13, compatible with Python 3)\n   - biopython == 1.7 (Tested on 1.70-1.76)\n2. ANNOVAR\n   - Can be downloaded [here](http://annovar.openbioinformatics.org/en/latest/user-guide/download/).\n   - ANNOVAR reference files, for example: hg19_refGene.txt and hg19_refGeneMrna.fa\n   - Other reference files/builds can be used. Simply change the usr_path.ini file to the appropriate reference (see below).\n     - Make sure to use the same one used to call variants.\n   - **NOTE: For indel predictions, use the 2018-04-16 or later release of ANNOVAR, as earlier versions do not provide the appropriate support for protein-elongating frameshift mutations.**\n4. netMHCpan or netMHCIIpan\n   - The pipeline supports [netMHCpan-4.0](https://services.healthtech.dtu.dk/services/NetMHCpan-4.0/) and [netMHCpan-4.1](https://services.healthtech.dtu.dk/services/NetMHCpan-4.1/).\n   - Support for MHC-II prediction using [netMHCIIpan-3.2](https://services.healthtech.dtu.dk/services/NetMHCIIpan-3.2/) is also available, but note that this functionality has not been thoroughly tested.  \n   - You can download required packages from [here](https://services.healthtech.dtu.dk/software.php).\n   - Note that the location of the data file for netMHCpan-4.0 (step 2 of instructions for set-up) has been changed! The updated location is (based on your operating system): https://services.healthtech.dtu.dk/services/NetMHCpan-4.0/data.<Darwin|Linux>.tar.gz\n5. PeptideMatch (Only necessary if one wishes to check predicted epitopes for novelty against a reference proteome.)\n   - Requires Java.\n   - The runnable jar is available [here](https://research.bioinformatics.udel.edu/peptidematch/commandlinetool.jsp).\n   - Download a reference protein sequence in fasta format (e.g. from [Ensembl](ftp://ftp.ensembl.org/pub/release-91/fasta/homo_sapiens/pep/) or [UniProt](ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/Eukaryota/)) and index it according to the Tutorial.\n   - **We advise the use of PeptideMatch for indel predictions, to filter out non-frameshift peptides and peptides that are novel to the genomic location, but coincidentally exist elsewhere.**\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Using Example .vcf files",
        "type": "Text_excerpt",
        "value": "```bash\n# Run the Pipeline to only prepare the input files. Can be best to run this independently if working on a cluster.\npython NeoPredPipe.py --preponly -I ./Example/input_vcfs -H ./Example/HLAtypes/hlatypes.txt -o ./ -n TestRun -c 1 2 -E 8 9 10\n\n# Run the Pipeline\npython NeoPredPipe.py -I ./Example/input_vcfs -H ./Example/HLAtypes/hlatypes.txt -o ./ -n TestRun -c 1 2 -E 8 9 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:34:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 106
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run Using Example .vcf files",
        "type": "Text_excerpt",
        "value": "```bash\n# Run the Pipeline to only prepare the input files. Can be best to run this independently if working on a cluster.\npython NeoPredPipe.py --preponly -I ./Example/input_vcfs -H ./Example/HLAtypes/hlatypes.txt -o ./ -n TestRun -c 1 2 -E 8 9 10\n\n# Run the Pipeline\npython NeoPredPipe.py -I ./Example/input_vcfs -H ./Example/HLAtypes/hlatypes.txt -o ./ -n TestRun -c 1 2 -E 8 9 10\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MathOnco/NeoPredPipe/master/README.md",
      "technique": "header_analysis"
    }
  ]
}