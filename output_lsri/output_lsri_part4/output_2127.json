{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/melop/simMSG"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-15T14:00:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-08T06:51:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simulate accuracy of MSG for your genome"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9341686056791679,
      "result": {
        "original_header": "simMSG",
        "type": "Text_excerpt",
        "value": "simMSG user manual: Predict the accuracy of MSG for your hybrid cross \nWhen the installation is finished and you have checked the error logs, return to the main MSGsimulator directory by typing: \nIn case automated installation fails, all dependency packages can be found in simMSG/msg/dependencies for manual installation. \nAfter installation of these packages, you may need to update paths for python, R and perl in the runsimmsg.sh shell script.\nInstallation on a server environment may be further complicated by security settings and permissions, in which case you should check with the system administrator. \nIII.\tSetting up the configuration file for simMSG:\nsimMSG has many parameters that go into the simulation (see Table at the end of the user manual) but many of these parameters have default values that can reasonably be used in most cases.  \n  Description  (parameter name in configuration file)\n1)\tname of parent 1 genome provided in fasta format (par1)\n2)\tname of parent 2 genome provided in fasta format (par2)\n3)\tgenome size in Mb (genome_size)\n4)\trecombination rate in cM per kb (rate)\n5)\tchromosome to analyze (chrom)\n6)\tgenerations of recombination between the parental genomes (gen)\n7)\tproportion of the genome derived from parent1 (prop_par1)\n8)\tproportion of the genome derived from parent 2 (prop_par2)\n9)\tproportion of polymorphic sites in parent1 (poly_par1)\n10)\t proportion of polymorphic sites in parent2 (poly_par2) \nAll other parameters have either suggested ranges or default values, but can be changed as described in Table 1 (at the end of this document). \nIf you are running a large number of individuals, you may need to allow for more processes per user for the hybrid genome generation step. To do this, before running simMSG enter:\n\t\n\tulimit \u2013u 126561 \nA)\tIf you have set save_files=0 (default)\nThree major summary files are output by simMSG: \n  1)\tSimulation_results_summary.txt\nThis file contains an overall summary of the simulation results, including number of markers sampled, overall accuracy,     accuracy by parent, and ancestry tract length. \n  2)\taccuracy_distribution.pdf\nThis file is a histogram of individual accuracy for the simulation. \n  3)\tancestry_distribution.pdf\nThis file is a histogram of individual hybrid index for the simulation, generated from the output file individual_priors. \nOther simulation files retained under this option are: \n  1) ancestry-probs-par1.tsv, ancestry-probs-par1par2.tsv, ancestry-probs-par2.tsv\n\tFiles containing posterior probability of each genotype (homozygous parent 1, heterozygous, and homozygous parent 2 respectively) output from MSG.  \nTwo log files are also retained when using this parameter:\n  1)\thybrid_genomes_log\nContains log of output and error messages generated during the hybrid genome simulation step of the pipeline.\n  2)\tmsg_error_log\nContains log of output and error messages generated during the MSG steps of the pipeline.  \nThe reads.fq_parsed folder contains reads generated for each hybrid individual.  \nVI.\tCommon errors:\nIn our experience the most common errors include:\n1)\tincorrect scaffold/chromosome name specified in the cfg file\n2)\tdifferent scaffold/chromosome name in the two input parental genomes\n3)\tdifferent scaffold/chromosome length in the two input parental genomes\n4)\tInput polymorphism parameters calculations generate a larger number of expected polymorphisms than available sites in the scaffold/chromosome or a non-positive number of sites. This is almost always caused by errors in the input polymorphism parameters or specifying too few individuals to simulate.\n5)\tNumber of processes permitted per user is less than the number required (gives a \u201cfork error\u201d while generating the hybrid genomes. Try raising the number (for e.g.: ulimit \u2013u 126561). \n"
      },
      "source": "https://raw.githubusercontent.com/melop/simMSG/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/melop/simMSG/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/melop/simMSG/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "melop/simMSG"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "simMSG"
      },
      "source": "https://raw.githubusercontent.com/melop/simMSG/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9887083929042152,
      "result": {
        "original_header": "simMSG",
        "type": "Text_excerpt",
        "value": "I.\tDownload:\nOnce you have downloaded MSGsimulator.tar.gz, to unzip and untar, type: \n\ttar xvfz MSGsimulator.tar.gz \nInside this folder you will find the simMSG program folder, the installation folder with the installation shell script, the perl script which executes the program, an example configuration file, and example input and results from a run of simMSG: \n\tsimMSG\n\tinstall\n\tsimulateMSG.pl\n\texample_simmsg_config.cfg\n\texample_results_simulation \nII.\tInstallation:\nThe installation tool has been tested on Ubuntu 12.04. Redhat types of Linux distributions (including CentOS) have a known issue with installing python2.7, a prerequisite for this installation tool. On these systems, please install python2.7 manually before executing the installation script.  \nThe following instructions assume Ubuntu 12.04 Desktop version.  \nTo install, first cd into the MSGsimulator directory: \n\tcd MSGsimulator/install \n\t\nIf you have sudo privileges this will facilitate installation. Type: \n\tsudo bash install.sh \nThe installation tool will first check if the required versions of python, perl, R and php are installed. If not, the apt-get command will be executed to install them from the Ubuntu repository. Then, the tool installs all required packages for python, perl, and R within the simMSG folder so as not to interfere with the user\u2019s existing package settings. If successful, a file named \u201crunsimmsg.sh\u201d will be created in the same folder as install.sh. This shell script contains \u201cexport\u201d commands pointing to the package directories.  \nWhen the installation is finished and you have checked the error logs, return to the main MSGsimulator directory by typing: \n\tcd .. \n\nIf you do not have sudo privileges, enter: \n\tbash install.sh \nIn case automated installation fails, all dependency packages can be found in simMSG/msg/dependencies for manual installation. \nAfter installation of these packages, you may need to update paths for python, R and perl in the runsimmsg.sh shell script.\nInstallation on a server environment may be further complicated by security settings and permissions, in which case you should check with the system administrator. \nUsers set parameters by editing the configuration file (.cfg file). We recommend copying the example configuration file (example_simmsg_config.cfg) to a new file name and editing this file. The parameters that must be specified by the user are: \nIV.\tRunning the pipeline: \nLink or copy the two parental reference fasta files into the MSGsimulator directory (containing the simMSG program folder and simulateMSG.pl script). Make sure the configuration file for the simulation is also in this directory.\nTo run the simulator, simply type from this directory:  \n\tbash runsimmsg.sh configuration_file.cfg \nTo store the information printed to the screen during the run (which can contain important information for troubleshooting an unsuccessful run, see below) type:\n\t\n\tbash runsimmsg.sh configuration_file.cfg > simMSG_out_log \nIf you are running a large number of individuals, you may need to allow for more processes per user for the hybrid genome generation step. To do this, before running simMSG enter:\n\t\n\tulimit \u2013u 126561 \nB)\tIf you have set save_files=1\nIn addition to the above files, the program will retain all intermediate files generated by the program and MSG.\nThe hybrid_genomes folder contains sequences generated for each hybrid individual (*genome_hap1.txt, *genome_hap2.txt), information on ancestry for each hybrid individual (*ancestry_hap1.txt, *ancestry_hap2.txt) and information on polymorphism for each individual (*_chr1_poly.txt, *_chr2_poly.txt). \nThe following files and folders are generated by MSG (details can be found on them at https://github.com/JaneliaSciComp/msg):\nreads.fq_sam_files\nhmm_data\nhmm_fit\nparent1_ref*\nparent2_ref*\nancestry-probs*rda\nmsg.chrLengths\nmsgError*\nmsgOut* \n"
      },
      "source": "https://raw.githubusercontent.com/melop/simMSG/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8393356178274648,
      "result": {
        "original_header": "simMSG",
        "type": "Text_excerpt",
        "value": "\tbash runsimmsg.sh configuration_file.cfg \n"
      },
      "source": "https://raw.githubusercontent.com/melop/simMSG/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/melop/simMSG/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "simMSG"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "melop"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/melop/simMSG/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:26:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}