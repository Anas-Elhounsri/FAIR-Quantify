{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jhu99/localali"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-27T04:31:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-23T00:16:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Automatically exported from code.google.com/p/localali"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.938956896434357,
      "result": {
        "type": "Text_excerpt",
        "value": "This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version. \nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details. \nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>. \n################################################################################\nDescription\nThis file is README file of the package of LocalAli developed by Jialu Hu.\nTo guide you quickly starting to use our alignment tool, we structured this README into five parts:\n1) PREREQUISITE\n2) DOWNLOAD\n3) COMPILING\n4) OPTION\n5) EXAMPLES\nBefore running this program, you are recommended to read this file carefully.\nFor easy to explain, we denote $LOCALALI as the path to LocalAli folder. \n################################################################################\nPREREQUISITE\n1. LEMON Graph Library 1.2.3\nThe source code is freely available under Boost Software License, Version 1.0 at the website: http://ftp.mi.fu-berlin.de/jhu/LocalAli/lemon-1.2.3.tar.gz\nPlease first compile the lemon graph library before compiling the code of LocalAli.\nNote that this package should be moved to the directory $LOCALALI/include.\n2. GoTermFinder\nThis package is necessary only if you want to use \"-analyse\" option to analyze the Gene Ontology enrichment of reported alignments.\nIt can be download at http://search.cpan.org/dist/GO-TermFinder/lib/GO/TermFinder.pm. \n\n################################################################################\nCOMPILING\nThe compiler g++-4.6 as well as its higher variants is strongly recommended to compile the source code, but not limited to. Visual Studio 11 is also supported.\nThe compilation should be done under Linux and Mac OS X with several simple commands as follows: \n1. Compile LEMON GRAPH LIBRARY \n"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9557140928771579,
      "result": {
        "original_header": "if you want to compile it with other compilers such as g++-4.7, do it like this:",
        "type": "Text_excerpt",
        "value": "\n################################################################################\nOPTION\nYou can see the detailed option information with option \"-h\".\nIt is noted that there are two options you must specify if you want to run LOCALALI for an alignment task. They are described as follows: \n1. -profile\nThe default file is \"./profile.txt\", but you can also change the filename and path by \"-profile\" option.\nThis file tells the program where to find the input files.\nIt is expected to be in two-column tab-delimited format.\nThese lines starting with \"#\" will be seen as comments.\nEach line has one keyword and one value, like this:\n$keyword\t$value\nUsing this file, you are allowed to set keywords (folder species layers tree) here. \nInteractions of each species are in three-column tab-delimited format (INTERACTOR_A INTERACTOR_B score) as follows (the third column is not necessary):\n--------------BEGIN OF NETWORK--------------\nO43521\tQ07820\t0.40\nP05556\tP07948\t0.43\nP05556\tP13612\t0.66\nP07948\tP13612\t0.43\n2609382\tP40763\t0.40\nP17947\tQ15156\t0.54\n--------------END OF NETWORK-------------- \nThe layered graph will be constructed through these homologous proteins (with evalue <1e-07). It looks as follows (the third column is not necessary):\n--------------BEGIN OF HOMOLOGY--------------\nP31946\tQ20655\t9e-146\nP31946\tP41932\t2e-137\nP62258\tQ20655\t5e-121\nP41932\tP62258\t5e-113\nQ04917\tQ20655\t9e-133\nP41932\tQ04917\t1e-126\nP61981\tQ20655\t2e-132\nP41932\tP61981\t8e-129\nP27348\tQ20655\t4e-138\nP27348\tP41932\t2e-132\n--------------END OF HOMOLOGY-------------- \nUsage:\n  ./localali -version|-alignment|-analyse|-format [--help|-h|-help]\n     [-alpha num] [-beta num] [-extdist1 int] [-extdist2 int]\n     [-formatfile str] [-maxext int] [-method int] [-minext int]\n     [-numconnected int] [-numseeds int] [-numspecies int]\n     [-numspinetries int] [-numthreads int] [-parallel] [-profile str]\n     [-resultfolder str] [-score_threshold num] [-seedrep int]\n     [-seedsize int] [-seedtries int] [-task int] [-verbose int]\nWhere:\n  --help|-h|-help\n     Print a short help message\n  -alignment\n     Execute the alignment algorithm.\n  -alpha num\n     Impact factor of the evolutionary rate. Default is 0.2\n  -analyse\n     Make analysis on the alignment results.\n  -beta num\n     The second impact factor of the evolutionary rate of interactions. Default is 2.0.\n  -extdist1 int\n     Distance of neighbors in the search for seeds. Default is 1.\n  -extdist2 int\n     Distance of neighbors in the search for subnets. Default is 2.\n  -format\n     Process input or output file into proper format.\n  -formatfile str\n     Input file which is used to analyse the quality of alignments.\n  -maxext int\n     Maximal number of the extension. Default is 13.\n  -method int\n     Specify the method used for verification. LocalAli 1, NetworkBlastM 2. Default is 1.\n  -minext int\n     Minimal number of the extension. Default is 3.\n  -numconnected int\n     Number of connected subnetwork. Default is 3.\n  -numseeds int\n     Number of refined seeds. Default is 400.\n  -numspecies int\n     Number of the species compared. Default is 3.\n  -numspinetries int\n     Number of tries for strongly connected spines. Default is 5.\n  -numthreads int\n     Number of threads. Default is 1.\n  -parallel\n     Run LocalAli in parallel if it is true. Default is false.\n  -profile str\n     Configuration of various input parameters. Default is \"./profile.txt\".\n  -resultfolder str\n     Configuration of various input parameters.\n  -score_threshold num\n     Score threshold of subnets which are qualified. Default is 0.2.\n  -seedrep int\n     Allow protein replicatioin in refined seeds. Default is false.\n  -seedsize int\n     Size of the seeds. Default is 2.\n  -seedtries int\n     Number of tries for each refined seeds. Default is 1.\n  -task int\n     Specify the task of each method. Default is 0.\n  -verbose int\n     Display standard output levle:0-3. Default is 0.\n  -version\n     Show the version number. \n"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/screamer/localali/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jhu99/localali/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jhu99/localali"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9744609930812796,
      "result": {
        "type": "Text_excerpt",
        "value": "You should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>. \n################################################################################\nDescription\nThis file is README file of the package of LocalAli developed by Jialu Hu.\nTo guide you quickly starting to use our alignment tool, we structured this README into five parts:\n1) PREREQUISITE\n2) DOWNLOAD\n3) COMPILING\n4) OPTION\n5) EXAMPLES\nBefore running this program, you are recommended to read this file carefully.\nFor easy to explain, we denote $LOCALALI as the path to LocalAli folder. \n################################################################################\nPREREQUISITE\n1. LEMON Graph Library 1.2.3\nThe source code is freely available under Boost Software License, Version 1.0 at the website: http://ftp.mi.fu-berlin.de/jhu/LocalAli/lemon-1.2.3.tar.gz\nPlease first compile the lemon graph library before compiling the code of LocalAli.\nNote that this package should be moved to the directory $LOCALALI/include.\n2. GoTermFinder\nThis package is necessary only if you want to use \"-analyse\" option to analyze the Gene Ontology enrichment of reported alignments.\nIt can be download at http://search.cpan.org/dist/GO-TermFinder/lib/GO/TermFinder.pm. \n################################################################################\nDOWNLOAD\n1. Checkout the source code from the project's subversion repository\nsvn checkout http://localali.googlecode.com/svn/trunk/ $LOCALALI \n2. Download datasets and lemon-1.2.3\ndatsets: http://ftp.mi.fu-berlin.de/jhu/LocalAli/dataset.tar.gz\nlemon-1.2.3: http://ftp.mi.fu-berlin.de/jhu/LocalAli/lemon-1.2.3.tar.gz \nDownload the datasets into the folder $LOCALALI and uncompress it with command:\ncd $LOCALALI\ntar -zxvf dataset.tar.gz\nDownload lemon-1.2.3 into the folder $LOCALALI/include/ and uncompress it with command:\ncd $LOCALALI/include\ntar -zxvf lemon-1.2.3.tar.gz \n\n################################################################################\nCOMPILING\nThe compiler g++-4.6 as well as its higher variants is strongly recommended to compile the source code, but not limited to. Visual Studio 11 is also supported.\nThe compilation should be done under Linux and Mac OS X with several simple commands as follows: \n1. Compile LEMON GRAPH LIBRARY \ncd $LOCALALI/include/lemon-1.2.3/\n./configure\n./make\n./make check (optional)\n./make install (optional) \n2. Compile LOCALALI \ncd $LOCALALI\n./make MODE=Release \n"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9582398188492449,
      "result": {
        "original_header": "if you want to compile it with other compilers such as g++-4.7, do it like this:",
        "type": "Text_excerpt",
        "value": "./make MODE=Release CXX=g++-4.7 \n\n################################################################################\nOPTION\nYou can see the detailed option information with option \"-h\".\nIt is noted that there are two options you must specify if you want to run LOCALALI for an alignment task. They are described as follows: \nThe specified filenames which are required by localali are:\n./dataset/3-way/Celeg201300707.txt\n./dataset/3-way/Dmela20130707.txt\n./dataset/3-way/Scere20130707.txt\n./dataset/3-way/input_blast.txt\n./dataset/3-way/tree.txt \ncd $LOCALALI\nmkdir ./result  \n"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8565317517320893,
      "result": {
        "original_header": "if you want to compile it with other compilers such as g++-4.7, do it like this:",
        "type": "Text_excerpt",
        "value": "################################################################################\nEXAMPLES \n"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jhu99/localali/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "localali"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jhu99"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 216300,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 828,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 764,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/screamer/localali/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "If you want to compile it in Debug mode, run command:",
        "type": "Text_excerpt",
        "value": "./make (MODE=Debug)"
      },
      "source": "https://raw.githubusercontent.com/screamer/localali/master/README",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:44:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}