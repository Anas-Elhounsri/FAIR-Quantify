{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rachelss/SISRS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-03-29T00:12:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-08T08:21:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Site Identification from Short Read Sequences."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9671401581834669,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Next-gen sequence data such as Illumina HiSeq reads.\nData must be sorted into folders by taxon (e.g. species or genus).\nPaired reads in fastq format must be specified by _R1 and _R2 in the (otherwise identical) filenames.\nPaired and unpaired reads must have a fastq file extension.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9477605198262365,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Nexus file with variable sites in a single alignment. Usable in most major phylogenetics software as a concatenated alignment with a setting for variable-sites-only.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8791821813933378,
      "result": {
        "type": "Text_excerpt",
        "value": "THIS VERSION IS DEPRECATED\nGO TO https://github.com/SchwartzLabURI/SISRS/ \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/rachelss/SISRS/wiki"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rachelss/SISRS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rachelss/SISRS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rachelss/SISRS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SISRS"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rachelss/SISRS/master/ci/before_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rachelss/SISRS/master/ci/run_tests.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.997892353658772,
      "result": {
        "original_header": "SISRS",
        "type": "Text_excerpt",
        "value": "SISRS: Site Identification from Short Read Sequences  \nVersion 1.6.2  \nCopyright (c) 2013-2016 Rachel Schwartz <Rachel.Schwartz@asu.edu>  \nhttps://github.com/rachelss/SISRS  \nMore information: Schwartz, R.S., K.M Harkins, A.C. Stone, and R.A. Cartwright. 2015. A composite genome approach to identify phylogenetically informative data from next-generation sequencing. BMC Bioinformatics. 16:193.\n(http://www.biomedcentral.com/1471-2105/16/193/) \nTalk from Evolution 2014 describing SISRS and its application:  \nhttps://www.youtube.com/watch?v=0OMPuWc-J2E&list=UUq2cZF2DnfvIUVg4tyRH5Ng\n \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8807436830521048,
      "result": {
        "original_header": "Test Data",
        "type": "Text_excerpt",
        "value": "The folder test_data (https://github.com/rachelss/SISRS_test_data) contains simulated data for 10 species on the tree found in simtree.tre . Using 40 processors this run took 9 minutes. Analysis of the alignment output by sisrs using raxml produced the correct tree.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9987173739131822,
      "result": {
        "original_header": "Sample commands",
        "type": "Text_excerpt",
        "value": "1. Basic sisrs run: start with fastq files and produce an alignment of variable sites\n```\nsisrs sites -g 1745690\n```\n2. Basic sisrs run with modifications\nBASH2*\n3. Run only sisrs read subsampling step\nBASH3*\n4. Produce an alignment of loci based on the most variable loci in your basic sisrs run. Note - this command will run sisrs sites if (and only if) it was not run previously.\nBASH4*\n5. Get loci from your fastq files given known loci. \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9996174939893325,
      "result": {
        "type": "Text_excerpt",
        "value": "THIS VERSION IS DEPRECATED\nGO TO https://github.com/SchwartzLabURI/SISRS/ \n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rachelss/SISRS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantability or fitness for a particular purpose. See the GNU General Public License for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SISRS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rachelss"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 63785,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 36794,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BobLiterman",
          "type": "User"
        },
        "date_created": "2018-02-26T15:13:13Z",
        "date_published": "2018-02-26T15:13:53Z",
        "html_url": "https://github.com/rachelss/SISRS/releases/tag/1.6.2",
        "name": "1.6.2",
        "release_id": 9836473,
        "tag": "1.6.2",
        "tarball_url": "https://api.github.com/repos/rachelss/SISRS/tarball/1.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/rachelss/SISRS/releases/9836473",
        "value": "https://api.github.com/repos/rachelss/SISRS/releases/9836473",
        "zipball_url": "https://api.github.com/repos/rachelss/SISRS/zipball/1.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "BobLiterman",
          "type": "User"
        },
        "date_created": "2017-11-16T11:26:14Z",
        "date_published": "2018-02-26T15:07:32Z",
        "html_url": "https://github.com/rachelss/SISRS/releases/tag/v1.6.1",
        "name": "1.6.1",
        "release_id": 9836335,
        "tag": "v1.6.1",
        "tarball_url": "https://api.github.com/repos/rachelss/SISRS/tarball/v1.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/rachelss/SISRS/releases/9836335",
        "value": "https://api.github.com/repos/rachelss/SISRS/releases/9836335",
        "zipball_url": "https://api.github.com/repos/rachelss/SISRS/zipball/v1.6.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "* Built-In Genome Assemblers (Required if SISRS is building your composite genome)\n  * Velvet (tested with v.1.2.10) (http://www.ebi.ac.uk/~zerbino/velvet/)\n  * Minia (tested with v.2.0.7) (http://minia.genouest.org/)\n  * AbySS (tested with v.2.0.2) (http://www.bcgsc.ca/platform/bioinfo/software/abyss)\n* Bowtie2 (http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)\n* Python 2.7, Biopython, and PySAM\n* Samtools v1.3.1 (http://www.htslib.org/)\n* GNU Parallel (http://www.gnu.org/software/parallel/)\n* MAFFT (http://mafft.cbrc.jp/alignment/software/)\n* BBMap [requires Java] (https://sourceforge.net/projects/bbmap/)\n\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Commands:",
        "parent_header": [
          "Running SISRS",
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "**sites**: produce an alignment of sites from raw reads  \n\n**loci**: produce a set of aligned loci based on the most variable regions of the composite genome  \n\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Subcommands of sites:",
        "parent_header": [
          "Running SISRS",
          "Usage:",
          "Commands:"
        ],
        "type": "Text_excerpt",
        "value": "**subSample**: run sisrs subsampling scheme, subsampling reads from all taxa to ~10X coverage across species, relative to user-specified genome size  \n\n**buildContigs**: given subsampled reads, run sisrs composite genome assembly with user-specified assembler  \n\n**alignContigs**: align reads to composite genome as single-ended, uniquely mapped  \n\n**mapContigs**: align composite genome reads to a reference genome (optional)  \n\n**identifyFixedSites**: find sites with no within-taxa variation  \n\n**outputAlignment**: output alignment file of sisrs sites  \n\n**changeMissing**: given alignment of sites (alignment.nex), output a file with only sites missing fewer than a specified number of samples per site  \n\n\n #### Option Flags:\n\n * -g : the approximate genome size (**mandatory** if sisrs will be assembling a composite genome)\n * -p : use this number of processors *[Default: 1]*\n * -r : the path to the reference genome in fasta format *[Optional]*\n * -k : k-mer size (for assembly) *[Default: 21]*  \n * -f : path to the directory containing the folders of reads *[Default: Current Directory]*\n * -z : path to either an empty or non-existent directory where SISRS will output data *[Default: Current Directory]*\n * -n : the number of reads required to call a base at a site  *[Default: 3]*\n * -t : the threshold for calling a site; e.g. 0.99 means that >99% of bases for that taxon must be one allele; only recommended for low ploidy with <3 individuals  *[Default: 1 (100%)]*\n * -m : the number of species that are allowed to have missing data at a site\n * -o : the length of the final loci dataset for dating  \n * -l : the number of alleles  \n * -a : assembler [velvet, minia, abyss, or premade; *Default: velvet*]\n      - If using a premade composite genome, it must be in a folder named 'premadeoutput' in the same directory as the folders of read data, and must be called 'contigs.fa'\n * -s : Sites to analyze when running 'loci' [0,1,2]\n      - 0 [Default], all variable sites, including singletons\n      - 1, variable sites excluding singletons\n      - 2, only biallelic variable sites\n * -c : continuous command mode for calling subcommands [1,0]  \n      - 1 [Default]: calling a subcommand runs that subcommand **and all subsequent steps in the pipeline**\n      - 0: calling a subcommand runs **only** that subcommand\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:03:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "Running SISRS"
        ],
        "type": "Text_excerpt",
        "value": " sisrs command options\n\n ### By default, SISRS assumes that\n\n  * A reference genome is not available and a composite assembly will be\n    assembled using Velvet\n  * The K-mer size to be used by Velvet in contig assembly is 21.\n  * Only one processor is available.\n  * Files are in fastq format.\n  * Paired read filenames end with _R1 and _R2\n  * A site is only required to have data for two species to be included in the\n    final alignment.\n  * Folders containing reads are in the present working directory\n  * SISRS data will be output into the present working directory\n  * A minimum of three reads are required to call the base at a site\n    for a taxon.\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Commands:",
        "parent_header": [
          "Running SISRS",
          "Usage:"
        ],
        "type": "Text_excerpt",
        "value": "**sites**: produce an alignment of sites from raw reads  \n\n**loci**: produce a set of aligned loci based on the most variable regions of the composite genome  \n\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Subcommands of sites:",
        "parent_header": [
          "Running SISRS",
          "Usage:",
          "Commands:"
        ],
        "type": "Text_excerpt",
        "value": "**subSample**: run sisrs subsampling scheme, subsampling reads from all taxa to ~10X coverage across species, relative to user-specified genome size  \n\n**buildContigs**: given subsampled reads, run sisrs composite genome assembly with user-specified assembler  \n\n**alignContigs**: align reads to composite genome as single-ended, uniquely mapped  \n\n**mapContigs**: align composite genome reads to a reference genome (optional)  \n\n**identifyFixedSites**: find sites with no within-taxa variation  \n\n**outputAlignment**: output alignment file of sisrs sites  \n\n**changeMissing**: given alignment of sites (alignment.nex), output a file with only sites missing fewer than a specified number of samples per site  \n\n\n #### Option Flags:\n\n * -g : the approximate genome size (**mandatory** if sisrs will be assembling a composite genome)\n * -p : use this number of processors *[Default: 1]*\n * -r : the path to the reference genome in fasta format *[Optional]*\n * -k : k-mer size (for assembly) *[Default: 21]*  \n * -f : path to the directory containing the folders of reads *[Default: Current Directory]*\n * -z : path to either an empty or non-existent directory where SISRS will output data *[Default: Current Directory]*\n * -n : the number of reads required to call a base at a site  *[Default: 3]*\n * -t : the threshold for calling a site; e.g. 0.99 means that >99% of bases for that taxon must be one allele; only recommended for low ploidy with <3 individuals  *[Default: 1 (100%)]*\n * -m : the number of species that are allowed to have missing data at a site\n * -o : the length of the final loci dataset for dating  \n * -l : the number of alleles  \n * -a : assembler [velvet, minia, abyss, or premade; *Default: velvet*]\n      - If using a premade composite genome, it must be in a folder named 'premadeoutput' in the same directory as the folders of read data, and must be called 'contigs.fa'\n * -s : Sites to analyze when running 'loci' [0,1,2]\n      - 0 [Default], all variable sites, including singletons\n      - 1, variable sites excluding singletons\n      - 2, only biallelic variable sites\n * -c : continuous command mode for calling subcommands [1,0]  \n      - 1 [Default]: calling a subcommand runs that subcommand **and all subsequent steps in the pipeline**\n      - 0: calling a subcommand runs **only** that subcommand\n"
      },
      "source": "https://raw.githubusercontent.com/rachelss/SISRS/master/README.md",
      "technique": "header_analysis"
    }
  ]
}