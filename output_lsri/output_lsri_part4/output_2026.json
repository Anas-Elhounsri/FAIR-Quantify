{
  "application_domain": [
    {
      "confidence": 0.9236381626078829,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "1.  Allen E, Xie Z, Gustafson AM, Carrington JC (2005) microRNA-directed phasing during trans-acting siRNA biogenesis in plants. Cell 121: 207\u00d0221. doi:[10.1016/j.cell.2005.04.004](http://dx.doi.org/10.1016/j.cell.2005.04.004).\n2.  Fahlgren N, Howell MD, Kasschau KD, Chapman EJ, Sullivan CM, Cumbie JS, Givan SA, Law TF, Grant SR, Dangl JL, Carrington JC (2007) High-throughput sequencing of *Arabidopsis* microRNAs: Evidence for frequent birth and death of *MIRNA* genes. PLoS ONE 2: e219. doi:[10.1371/journal.pone.0000219](http://dx.doi.org/10.1371/journal.pone.0000219).\n3.  Fahlgren N, Carrington JC (2010) miRNA Target Prediction in Plants. Methods in molecular biology (Clifton, NJ) 592: 51\u00d057. doi:[10.1007/978-1-60327-005-2_4](http://dx.doi.org/10.1007/978-1-60327-005-2_4).\n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/carringtonlab/TargetFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-02-05T23:56:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-12T11:44:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Plant small RNA target prediction tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8959068391121445,
      "result": {
        "original_header": "Optional Arguments",
        "type": "Text_excerpt",
        "value": "  -r             Search reverse strand for targets?. Use this option if the database is genomic DNA.\n  \n  -h             Shows the help menu.\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9260543388437137,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Each predicted target site is printed out separately. The output consists of two parts. The first is a description line and the second is a base-pairing diagram of the target and small RNA (query) sequence. The description line contains the query name (query=name), the description line from the target sequence database (target=target description), and the target prediction score (score=prediction score). \nThe base-pairing diagram has the target site sequence on top in 5'-3' orientation and the query sequence on the bottom in 3'-5' orientation. Between the target site sequece and the query sequence are base pair\nsymbols. A \":\" (colon) symbol represents an ordinary Watson-Crick base pair, a \".\" (period) represents a G:U base pair, and a \" \" (space) represents a mismatch. \n  example:\n```\ntarget  5' UAGGGCAAAUCUUCUUUGGCA 3'  \n           .:::::::::::.::::::::  \nquery   3' GUCCCGUUUAGAGGAAACCGU 5'\n```\n \nIf a small RNA is predicted to target a sequence more than once, each target site will be output as separate output. Below is an example of output for miR399a and its target AT2G33770. miR399a has five\ntarget sites in the 5'UTR of AT2G33770.\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9163224772234775,
      "result": {
        "original_header": "Method",
        "type": "Text_excerpt",
        "value": "targetfinder.pl searches for potential miRNA target sites in a FASTA-formated sequence database using three main steps. \n1.  The small RNA query sequence is aligned to every sequence in the FASTA-formated sequence database using Smith-Waterman (SW) alignments implemented in the FASTA package (ssearch35_t).\n2.  The SW alignments are converted into RNA duplexes.\n3.  Each duplex is scored using a position-dependent scoring matrix. \nSW alignments are used to identify the best complementary regions between the small RNA query sequence and every sequence in the FASTA-formated sequence database. This script runs ssearch35_t with the following settings:\n  \n  -n     Forces the small RNA query sequence to be treated as nucleotide sequence.  \n  -H     Suppresses the normal histogram output.  \n  -Q     Runs Smith-Waterman search in \"quiet\" mode.  \n  -f     Gap opening penalty (set to -16).  \n  -g     Gap extention penalty (set to -10).  \n  -r     Match reward/mismatch penalty (set to +15/-10).  \n  -w     Alignment output line length (set to 100).  \n  -W     Additional sequence context in the output (set to 25).  \n  -E     The E-value cutoff (set to 100000).  \n  -i     Limits SW alignments to reverse complement matches only.  \n  -U     Changes scoring matrix to allow for G:A, T:C, or U:C matches.  \n  ktup   Word size for seed matches used to build alignments (set to 1).   \nSW output is read directly into this script.  Each alignment is converted to a RNA duplex by complementing the small RNA query sequence. Each RNA duplex is scored using the following scoring metric and rule set: \nNote: the -i option limits SW to reverse complement matches only, but you can use the -r option with targetfinder.pl to search both strands of a sequence database. This should be done if the database is a genome sequence so that target sites on both strands can be found.\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/carringtonlab/TargetFinder/wiki"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/carringtonlab/TargetFinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/carringtonlab/TargetFinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "carringtonlab/TargetFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TargetFinder"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Installing TargetFinder"
        ],
        "type": "Text_excerpt",
        "value": "1.  TargetFinder uses the environmental variable TMPDIR as a temporary directory. If TMPDIR is undefined TargetFinder tries to use /tmp instead. If you want TargetFinder to write temporary files to a specific place, change the value of TMPDIR.\n2.  Make sure that 'ssearch35_t' is in your path.\n3.  Make sure that the required modules are in your Perl library path.\n4.  Make sure that targetfinder.pl is executable (use 'chmod' to change privileges).\n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.906826360576367,
      "result": {
        "original_header": "Optional Arguments",
        "type": "Text_excerpt",
        "value": "  -r             Search reverse strand for targets?. Use this option if the database is genomic DNA.\n  \n  -h             Shows the help menu.\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9478585873990444,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "targetfinder.pl writes all output to the terminal (STOUT). To save the output to a file use '>' to redirect output to a file. \n  example:\n```\n./targetfinder.pl -s UGCCAAAGGAGAUUUGCCCUG -d arab_cdna -q miR399a > miR399a_predicted_targets.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9947616874621573,
      "result": {
        "original_header": "Method",
        "type": "Text_excerpt",
        "value": "Note: the -i option limits SW to reverse complement matches only, but you can use the -r option with targetfinder.pl to search both strands of a sequence database. This should be done if the database is a genome sequence so that target sites on both strands can be found.\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8038269351209331,
      "result": {
        "original_header": "Required arguments",
        "type": "Text_excerpt",
        "value": "  -s <string>    Small RNA sequence (RNA or DNA, 5'->3').\n  \n  -d <file>      Target sequence database file (FASTA-format).\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8973520162454807,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "  example:\n```\n./targetfinder.pl -s UGCCAAAGGAGAUUUGCCCUG -d arab_cdna -q miR399a > miR399a_predicted_targets.txt\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/carringtonlab/TargetFinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2014 nfahlgren\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TargetFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "carringtonlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 26334,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Minimum Requirements",
        "parent_header": [
          "Installing TargetFinder"
        ],
        "type": "Text_excerpt",
        "value": "* Required Software Packages:\n  * Perl (v5.8+)\n  * FASTA35 binaries from (http://fasta.bioch.virginia.edu/fasta_www2/fasta_down.shtml)\n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Additional Tools"
        ],
        "type": "Text_excerpt",
        "value": "1.  Requires Perl 5.10.0 or higher.\n2.  Requires the Perl threads and Thread::Queue modules.\n\nRequired arguments\n------------\n  -f <file>      Input small RNA sequences file (FASTA-format).\n  \n  -d <file>      Target sequence database file (FASTA-format).\n  \n  -o <file>      Output file. Stores collective results.\n\nOptional Arguments\n------------\n  -c <float>     Prediction score cutoff value (DEFAULT = 4).\n  \n  -t <int>       Number of TargetFinder threads/CPUs to use (DEFAULT = 1).\n  \n  -r             Search reverse strand for targets?. Use this option if the database is genomic DNA.\n  \n  -h             Shows the help menu.\n"
      },
      "source": "https://raw.githubusercontent.com/carringtonlab/TargetFinder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:05:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ]
}