{
  "application_domain": [
    {
      "confidence": 15.58,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/stajichlab/RelocaTE2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-08-07T22:08:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-06T04:24:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This tool is for mapping TEs from resequencing data: Stajich lab"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "RelocaTE2: a high resolution transposable element insertion sites mapping tool for population resequencing"
        ],
        "type": "Text_excerpt",
        "value": "RelocaTE2 is an improved version of RelocaTE ([Robb et al., 2013](http://www.g3journal.org/content/3/6/949.long)). RelocaTE2 is highly sensitive and accurate in mapping transposable elements (TE) polymorphisms at single base pair resolution. RelocaTE2 uses the reads associated with TEs as seeds to cluster the read pairs on chromosomes. It automatically detects the target site duplication (TSD) of a TE insertion from alignments in each cluster, which enable high resolution mapping of TE polymorphisms. Unlike parallel searching of multi-TE elements in RelocaTE, RelocaTE2 searches all TEs in one cycle, which enables us find polymorphisms of thousands of TEs in an individual genome or large population in a reasonable timeframe without losing sensitivity and specificity.\n\n![RelocaTE2 Workflow](RelocaTE2_flowchart.png)\n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9668531994208677,
      "result": {
        "original_header": "RelocaTE2 Command Line Options",
        "type": "Text_excerpt",
        "value": "```shell\npython scripts/relocaTE2.py --help\nusage: relocaTE2.py [-h] [-b BAM] [-t TE_FASTA] [-d FQ_DIR] [-g GENOME_FASTA]\n                   [-r REFERENCE_INS] [-o OUTDIR] [-s SIZE] [-c CPU]\n                   [-1 MATE_1_ID] [-2 MATE_2_ID] [-u UNPAIRED_ID]\n                   [--sample SAMPLE] [--aligner ALIGNER]\n                   [--len_cut_match LEN_CUT_MATCH]\n                   [--len_cut_trim LEN_CUT_TRIM] [--mismatch MISMATCH]\n                   [--mismatch_junction MISMATCH_JUNCTION] [--step STEP]\n                   [--run] [--split] [-v VERBOSE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b BAM, --bam BAM     Name of BAM file of reads mapped reference genome\n  -t TE_FASTA, --te_fasta TE_FASTA\n                        Name of fasta sequence of repeat element\n  -d FQ_DIR, --fq_dir FQ_DIR\n                        Name of directory of input fastq sequence data\n  -g GENOME_FASTA, --genome_fasta GENOME_FASTA\n                        Name of fasta file of reference genome sequence\n  -r REFERENCE_INS, --reference_ins REFERENCE_INS\n                        Name of RepeatMasker TE annotation of reference genome\n  -o OUTDIR, --outdir OUTDIR\n                        Name of output directory where to put temperary and\n                        final results\n  -s SIZE, --size SIZE  Insert size of sequence library, default = 500\n  -c CPU, --cpu CPU     Number of CPUs to use for multiplex, default = 1\n  -1 MATE_1_ID, --mate_1_id MATE_1_ID\n                        string define paired-end read1, default = \"_1\"\n  -2 MATE_2_ID, --mate_2_id MATE_2_ID\n                        string define paired-end read2, default = \"_2\"\n  -u UNPAIRED_ID, --unpaired_id UNPAIRED_ID\n                        string defining single-end reads, default = \".unPaired\"\n  --sample SAMPLE       string defining sample name which will present in output\n                        GFF, default = \"not_given\"\n  --aligner ALIGNER     aligner used to map reads to repeat elements,\n                        default=blat\n  --len_cut_match LEN_CUT_MATCH\n                        length cutoff threshold for match between reads and\n                        repeat elements. Large value will lead to less\n                        sensitive but more accuracy, default = 10\n  --len_cut_trim LEN_CUT_TRIM\n                        length cutoff threshold for trimed reads after\n                        trimming repeat sequence from reads. Large value will\n                        lead to less sensitive but more accuracy, default = 10\n  --mismatch MISMATCH   Number of mismatches allowed for matches between reads\n                        and repeat elements, default = 2\n  --mismatch_junction MISMATCH_JUNCTION\n                        Number of mismatches allowed for matches between\n                        junction reads and repeat elements, default = 2\n  --step STEP           Number to control steps of pipeline, default =\n                        \"1234567\"\n  --dry_run             write shell scripts only while this script excute\n  --run                 run while this script excute\n  --split               split fastq into 1 million reads chunks to run blat/bwa jobs\n  -v VERBOSE, --verbose VERBOSE\n                        verbose grade to print out information in all scripts:\n                        range from 0 to 4, default = 2\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.989805130485473,
      "result": {
        "original_header": "RelocaTE2 input",
        "type": "Text_excerpt",
        "value": "+ Reference genome sequence (ref): multiple sequences of reference genome in fasta format\n```shell\ncat test_data/MSU7.Chr3.fa | head -n 25\n>Chr3\n#########Skip lines of NNNNNN in sequence#########\nCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACC\nCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCC\nTAAACCCTAAACCCTAAACCCTAAACCCTCAATCCTAACCCCTCAATCCT\nAAGCCGTCTGCAGTGGCCATCGCAGGGTGAGGTGGGTGGAGGGTGAGTGA\n```\n+ Repeat sequence (repeat): Consensus sequences of repeat families in fasta format\nBASH2*\n+ Resequencing data (fq_dir): Illumina reads from one strain in fastq format (fastq or fastq.gz). Sequences need to be put in one directory. Paired-end reads need to end with \\_1.fastq and \\_2.fastq.\nBASH3*\n+ RepeatMasker results of TE annotation on reference genome (ref_te): default TE annotation of reference genome used to call TE insertions in reference genome and remove possible false positive non-reference TE insertions.\nBASH4*\n+ Bam file of reads mapping results on reference genome (bam): characterize heterozygous and homozygous TE insertions when BAM file is provided.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8762116304608549,
      "result": {
        "original_header": "RelocaTE2 output",
        "type": "Text_excerpt",
        "value": "+ Structure of output directory\n  - blat\\_output: BLAT results of reads to repeat sequence\n  - bwa\\_aln: bwa results of trimmed-reads to reference genome\n  - flanking\\_seq: trimmed-reads and their pairs\n  - results: final results of TE insertions\n  - te\\_containing\\_fq: temporary results of reads that matched to repeat sequence\n  - te\\_only\\_read\\_portions\\_fa: temporary results of the proportion of reads that matched to repeat sequence \nID: unique id of TE insertions, repeat\\_\"chromosome\"\\_\"start\"\\_\"end\" \nName: TE family name of this insertion \nNote: definition of TE insertions, including Non-reference, Reference-Only and Shared. \nRight\\_junction\\_reads: number of reads covering the junction of TE insertion on right side/downstream. \nLeft\\_junction\\_reads: number of reads covering the junction of TE insertion on left side/upstream. \nRight\\_support\\_reads: number of reads not covering the junction of TE insertion, but supporting TE insertion by paired-end reads on right side/downstream. \nLeft\\_support\\_reads: number of reads not covering the junction of TE insertion, but supporting TE insertion by paired-end reads on left side/downstream.\n \n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/stajichlab/RelocaTE2/wiki"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/stajichlab/RelocaTE2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/stajichlab/RelocaTE2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "stajichlab/RelocaTE2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RelocaTE2: a high resolution transposable element insertion sites mapping tool for population resequencing"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/git.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/RelocaTE2_flowchart.png"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RelocaTE2: a high resolution transposable element insertion sites mapping tool for population resequencing"
        ],
        "type": "Text_excerpt",
        "value": "+ System requirements\n  - Linux/Unix platform\n  - Short read aligner: BLAT (v35+), bowtie2 (v2.2.6+), bwa (v0.6.2)\n  - samtools (v1.3.1)\n  - bedtools (v2.25.0)\n  - Python (v2.7.5+) and pysam package (v0.8.5+)\n  - Perl (v5.20.2+)\n  - seqtk (v1.0+)\n\n+ Install\n```shell\necho \"Installation via github\"\ngit clone https://github.com/JinfengChen/RelocaTE2.git\ncd RelocaTE2\nbash install.sh\ncd test_data\nbash run_test.sh > run_test.sh.log 2>&1 &\n\necho \"Installation via conda (Linux as example)\"\n#download miniconda from http://conda.pydata.org/miniconda.html and install\nwget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh\nbash Miniconda2-latest-Linux-x86_64.sh\nsource ~/.bashrc\n#install RelocaTE2 into miniconda isolated environment \"RelocaTE2\"\nconda create --name RelocaTE2 -c bioconda relocate2\n#run test data\nsource activate RelocaTE2\ncd /PATH_TO_miniconda/env/RelocaTE2\ncd test_data\nbash run_test.sh > run_test.sh.log 2>&1 &\n```\n\n+ Troubleshooting\n  - Installation of RelocaTE2 using install.sh or conda will install all the tools and packages required to run RelocaTE2. The executables of all tools are RelocaTE2/bin directory and record their paths in RelocaTE2/CONFIG. The main script of RelocaTE2, relocaTE2.py, searches for executables in $PATH; however, the executables from RelocaTE2/CONFIG will supercede $PATH. Users can modify RelocaTE2/CONFIG with paths to tools installed on their specific system to avoid problems. \n  - The Python module \"pysam\" is installed to RelocaTE2/lib. By setting PYTHONPATH=PATH\\_OF\\_RelocaTE2/lib/python2.7/site-packages, any other locally-installed versions of pysam are temporarily ignored and the supported version of pysam for RelocaTE2 is used instead.\n  - In RelocaTE2, we align trimmed reads to reference genome by bwa v0.6.2, which allows paired-end reads have different names in fastq files. We recommend using install.sh or conda provided in RelocaTE2 to install these dependent tools including bwa v0.6.2.\n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/stajichlab/RelocaTE2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Jinfen Chen <jinfeng7chen@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RelocaTE2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "stajichlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 319665,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 12759,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7421,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JinfengChen",
          "type": "User"
        },
        "date_created": "2016-11-17T20:33:49Z",
        "date_published": "2016-11-17T20:39:39Z",
        "description": "1. Easy installation from miniconda.\n2. Smaller test data with 2 Mb reference and 6X sequencing data.\n3. Output absence of reference TE.\n4. md5: 395bd7833163bd72fe7a6ec3d85bf9d5  v2.0.1.tar.gz\n",
        "html_url": "https://github.com/stajichlab/RelocaTE2/releases/tag/v2.0.1",
        "name": "Release 2.0.1 - synced with PeerJ ReLocaTE2 revision",
        "release_id": 4691759,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/stajichlab/RelocaTE2/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/stajichlab/RelocaTE2/releases/4691759",
        "value": "https://api.github.com/repos/stajichlab/RelocaTE2/releases/4691759",
        "zipball_url": "https://api.github.com/repos/stajichlab/RelocaTE2/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hyphaltip",
          "type": "User"
        },
        "date_created": "2016-09-10T06:19:27Z",
        "date_published": "2016-09-10T06:20:57Z",
        "description": "1. This is version 2.0 of RelocaTE2, a rewrite of [RelocaTE](https://github.com/stajichlab/RelocaTE) which is used to identify Transposable element insertions or deletions in population resequencing data.\n2. md5: ab7d93c200db702403575672aa8f513c  v2.0.0.tar.gz\n",
        "html_url": "https://github.com/stajichlab/RelocaTE2/releases/tag/v2.0.0",
        "name": "Initial release of RelocaTE2 (v2.0.0)",
        "release_id": 4095580,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/stajichlab/RelocaTE2/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/stajichlab/RelocaTE2/releases/4095580",
        "value": "https://api.github.com/repos/stajichlab/RelocaTE2/releases/4095580",
        "zipball_url": "https://api.github.com/repos/stajichlab/RelocaTE2/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:06:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start Quide",
        "parent_header": [
          "RelocaTE2: a high resolution transposable element insertion sites mapping tool for population resequencing"
        ],
        "type": "Text_excerpt",
        "value": "  - set environment variables if failed to find executable PATH or pysam libary \n```shell\nexport PYTHONPATH=`pwd`/lib/python2.7/site-packages:$PYTHONPATH\nexport PATH=`pwd`/bin:$PATH \n```\n  - run RelocaTE2 to find transposable element insertions\n```shell\ncd test_data\n#repeat element\nrepeat=RiceTE.fa\n#reference genome\nref=MSU7.Chr3_2M.fa\n#repeatmasker results of TE annotation on reference genome\nref_te=MSU7.Chr3_2M.fa.RepeatMasker.out\n#directory where the input fastq format reads are located\nfq_dir=MSU7.Chr3_2M.ALL_reads/\n#output directory where RelocaTE2 write temperary and final output\noutdir=MSU7.Chr3_2M.ALL_reads_RelocaTE2_outdir\npython scripts/relocaTE2.py --te_fasta $repeat --genome_fasta $ref --fq_dir $fq_dir --outdir $outdir --reference_ins $ref_te --run\n```\n  - check results of TE insertions and compare with simulated TE insertions\n```shell\nwc -l MSU7.Chr3_2M.ALL_reads_RelocaTE2_outdir/repeat/results/ALL.all_nonref_insert.gff\n196\nbedtools window -w 10 -a MSU7.Chr3_2M.ALL.gff -b MSU7.Chr3_2M.ALL_reads_RelocaTE2_outdir/repeat/results/ALL.all_nonref_insert.gff | wc -l\n196\n```\n"
      },
      "source": "https://raw.githubusercontent.com/stajichlab/RelocaTE2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}