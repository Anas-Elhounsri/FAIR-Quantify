{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "Metacoder\u2019s major dependencies are `taxa`, `taxize`, `vegan`, `igraph`,\n`dplyr`, and `ggplot2`.\n\nThis package includes code from the R package\n[ggrepel](https://github.com/slowkow/ggrepel) to handle label overlap\navoidance with permission from the author of\n[ggrepel](https://github.com/slowkow/ggrepel) [Kamil\nSlowikowski](https://github.com/slowkow). We included the code instead\nof depending on `ggrepel` because we are using functions internal to\n`ggrepel` that might change in the future. We thank Kamil Slowikowski\nfor letting us use his code and would like to acknowledge his\nimplementation of the label overlap avoidance used in metacoder.\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.8187550581187863,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "bibentry(bibtype = \"Article\",\n         title = \"Metacoder: An R package for visualization and manipulation of community taxonomic diversity data.\",\n         author = c(person(\"Zachary\", \"Foster\"),\n                    person(\"Thomas\", \"Sharpton\"),\n                    person(\"Niklaus\", \"Gr\u00fcnwald\")),\n         journal = \"PLOS Computational Biology\",\n         publisher = \"Public Library of Science\",\n         year = \"2017\",\n         month = \"02\",\n         volume = \"13\",\n         pages = \"1-15\",\n         number = \"2\",\n         doi = \"10.1371/journal.pcbi.1005404\",\n         url = \"https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005404\")"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you use metcoder in a publication, please cite our [article in PLOS\nComputational\nBiology](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005404):\n\nFoster ZSL, Sharpton TJ, Gr\u00fcnwald NJ (2017) Metacoder: An R package for\nvisualization and manipulation of community taxonomic diversity data.\nPLOS Computational Biology 13(2): e1005404.\n<https://doi.org/10.1371/journal.pcbi.1005404>\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/grunwaldlab/metacoder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-09-10T17:57:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-04T09:06:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parsing, Manipulation, and Visualization of Metabarcoding/Taxonomic data "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9988926184899267,
      "result": {
        "original_header": "An R package for metabarcoding research planning and analysis",
        "type": "Text_excerpt",
        "value": "Metacoder is an R package for reading, plotting, and manipulating large\ntaxonomic data sets, like those generated from modern high-throughput\nsequencing, like metabarcoding (i.e.\u00a0amplification metagenomics, 16S\nmetagenomics, etc). It provides a tree-based visualization called \u201cheat\ntrees\u201d used to depict statistics for every taxon in a taxonomy using\ncolor and size. It also provides various functions to do common tasks in\nmicrobiome bioinformatics on data in the `taxmap` format defined by the\n`taxa` package, such as: \n- Summing read counts/abundance per taxon\n- Converting counts to proportions and rarefaction of counts using\n  `vegan`\n- Comparing the abundance (or other characteristics) of groups of\n  samples (e.g., experimental treatments) per taxon\n- Combining data for groups of samples\n- Simulated PCR, via EMBOSS primersearch, for testing primer specificity\n  and coverage of taxonomic groups\n- Converting common microbiome formats for data and reference databases\n  into the objects defined by the `taxa` package.\n- Converting to and from the `phyloseq` format and the `taxa` format\n \n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9983442311217658,
      "result": {
        "original_header": "Relationship with other packages",
        "type": "Text_excerpt",
        "value": "Many of these operations can be done using other packages like\n`phyloseq`, which also provides tools for diversity analysis. The main\nstrength of `metacoder` is that its functions use the flexible data\ntypes defined by `taxa`, which has powerful parsing and subsetting\nabilities that take into account the hierarchical relationship between\ntaxa and user-defined data. In general, `metacoder` and `taxa` are more\nof an abstracted tool kit, whereas `phyloseq` has more specialized\nfunctions for community diversity data, but they both can do similar\nthings. I encourage you to try both to see which fits your needs and\nstyle best. You can also combine the two in a single analysis by\nconverting between the two data types when needed.\n \n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9701489848921595,
      "result": {
        "original_header": "Future development",
        "type": "Text_excerpt",
        "value": "Metacoder is under active development and many new features are planned.\nSome improvements that are being explored include: \n- Barcoding gap analysis and associated plotting functions\n- A function to aid in retrieving appropriate sequence data from NCBI\n  for *in silico* PCR from whole genome sequences\n- Graphing of different node shapes in heat trees, possibly including\n  pie graphs or [PhyloPics](http://phylopic.org/).\n- Adding the ability to plot specific edge lengths in the heat trees so\n  they can be used for phylogenetic trees.\n- Adding more data import and export functions to make parsing and\n  writing common formats easier. \nTo see the details of what is being worked on, check out the\n[issues](https://github.com/grunwaldlab/metacoder/issues) tab of the\nMetacoder [Github site](https://github.com/grunwaldlab).\n \n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "All the documentation for `metacoder` can be found on our website here:\n\n<https://grunwaldlab.github.io/metacoder_documentation/>\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/grunwaldlab/metacoder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "grunwaldlab/metacoder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/man/figures/readme_figure.jpg"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "This project is available on CRAN and can be installed like so:\n\n``` r\ninstall.packages(\"metacoder\")\n```\n\nYou can also install the development version for the newest features,\nbugs, and bug fixes:\n\n``` r\ninstall.packages(\"devtools\")\ndevtools::install_github(\"grunwaldlab/metacoder\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999065458994,
      "result": {
        "original_header": "Feedback and contributions",
        "type": "Text_excerpt",
        "value": "We would like to hear about users\u2019 thoughts on the package and any\nerrors they run into. Please report errors, questions or suggestions on\nthe [issues](https://github.com/grunwaldlab/metacoder/issues) tab of the\nMetacoder [Github site](https://github.com/grunwaldlab). We also welcome\ncontributions via a Github [pull\nrequest](https://help.github.com/articles/using-pull-requests/). You can\nalso talk with us using our [Google\ngroups](https://groups.google.com/forum/#!forum/metacoder-discussions)\nsite.\n \n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "type": "Text_excerpt",
        "value": "[![Downloads from Rstudio mirror per\nmonth](http://cranlogs.r-pkg.org/badges/metacoder)](https://www.r-pkg.org:443/pkg/metacoder)\n[![Downloads from Rstudio\nmirror](http://cranlogs.r-pkg.org/badges/grand-total/metacoder)](https://www.r-pkg.org:443/pkg/metacoder)\n[![CRAN\nversion](http://www.r-pkg.org/badges/version/metacoder)](https://cran.r-project.org/package=metacoder) \n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "community-diversity, cran, hierarchical, metabarcoding, pcr, r, taxonomy, trees"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2016 Zachary S.L. Foster and Niklaus J. Grunwald\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nPermission to incorporate this software into commercial products may be\nobtained by contacting USDA ARS and OREGON STATE UNIVERSITY Office for \nCommercialization and Corporate Development.\n\nThe software program and documentation are supplied \"as is\", without any\naccompanying services from the USDA or the University. USDA ARS or the \nUniversity do not warrant that the operation of the program will be \nuninterrupted or error-free. The end-user understands that the program was \ndeveloped for research purposes and is advised not to rely exclusively on the \nprogram for any reason.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This work is subject to the [MIT\nLicense](https://github.com/grunwaldlab/metacoder/blob/master/LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metacoder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "grunwaldlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 800641,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 18407,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2023-04-04T01:16:21Z",
        "date_published": "2023-04-06T16:46:48Z",
        "description": "Notable changes made:\r\n\r\n* When an ordered factor is supplied to the `groups` argument of `compare_groups`, the order of levels is used to arrange the results. This can be used to change the order of groups when the output is used with `heat_tree_matrix` (issue [#323](https://github.com/grunwaldlab/metacoder/issues/323)).\r\n* Added `calc_diff_abund_deseq2` function to use DESeq2 to produce output like `compare_group` useful for `heat_tree_matrix`\r\n* Fixed error with `primersearch` and `primersearch_raw` when there is a single match to a single query (issue [#326](https://github.com/grunwaldlab/metacoder/issues/326))\r\n* Fixed `Error in grid.Call.graphics(C_setviewport, vp, TRUE) : non-finite location and/or size for viewport` when using `heat_tree_matrix` with only a single comparison. Now a single differential heat tree is made instead of a matrix [#328](https://github.com/grunwaldlab/metacoder/issues/328)).\r\n* Replace use of depreciated `n_extra` in `print`.",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.6",
        "name": "metacoder 0.3.6",
        "release_id": 98445032,
        "tag": "v0.3.6",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/98445032",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/98445032",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2021-06-23T21:42:54Z",
        "date_published": "2021-07-08T21:51:57Z",
        "description": "* Replaced depreciated `as.tbl` function from `dplyr`'\r\n* Added `node_legend_title` and `edge_legend_title` options to `heat_tree` to specify the title for each legend.\r\n* Added options to `heat_tree` to set the number of significant fingures used for the numbers in the legend.\r\n* Reintegrated the functionality of the `taxa` package in order to prepare for releasing a rewritten version of taxa.\r\n* Reduced the number of dependencies and made some optional. \r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.5",
        "name": "metacoder 0.3.5",
        "release_id": 45935176,
        "tag": "v0.3.5",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/45935176",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/45935176",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2020-04-29T19:14:37Z",
        "date_published": "2020-05-07T22:16:21Z",
        "description": "* Added parsing of taxon ranks to the UNITE parser\r\n* Versious minor bug fixes\r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.4",
        "name": "metacoder  0.3.4",
        "release_id": 26292312,
        "tag": "v0.3.4",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/26292312",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/26292312",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2019-04-08T18:14:58Z",
        "date_published": "2019-04-08T20:34:34Z",
        "description": "* calculation functions that use the `groups` option now warn if `groups` is used without `cols`.\r\n* Fixed a bug in some calculation functions that would name columns incorrectly in some data sets when the `groups` option was used. (issue [#233](https://github.com/grunwaldlab/metacoder/issues/233)).\r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.2",
        "name": "metacoder 0.3.2",
        "release_id": 16631303,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/16631303",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/16631303",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2019-01-04T12:03:01Z",
        "date_published": "2019-01-07T14:25:19Z",
        "description": "\r\n### Bug fixes\r\n\r\n* `calc_taxon_abund` no longer errors when a taxon has no observations associated with it.\r\n* New `heat_tree_matrix` options to change size and color of row and column labels. \r\n* Fixed a bug causing the size legend not to be shown (issue [#249](https://github.com/grunwaldlab/metacoder/issues/249).\r\n* Now when a node_color_interval is set but a edge_color_interval is not and edge_color is not used, the edge_color_interval is the same as the node_color_interval.\r\n\r\n### New features\r\n\r\n* Added parser for `dada2` results called `parse_dada2` and writers to convert back called `make_dada2_asv_table` and `make_dada2_tax_table`.\r\n\r\n### Changes\r\n\r\n* Started using the `viridis` colors for `heat_tree` by default (issue [#133](https://github.com/grunwaldlab/metacoder/issues/133).\r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.1",
        "name": "metacoder 0.3.1",
        "release_id": 14834290,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/14834290",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/14834290",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2018-08-28T05:00:04Z",
        "date_published": "2018-08-28T14:49:32Z",
        "description": "### Bug fixes\r\n\r\n* Fixed bug in `calc_n_samples` where the message reported the number of taxa instead of the number of rows in the table.\r\n* Fixed bug in `heat_tree_matrix` that happened when factors were used for treatments (issue [#240](https://github.com/grunwaldlab/metacoder/issues/240).\r\n* `zero_low_counts` now ignores `NA`s instead of odd error.\r\n* `compare_groups` now ignores `NA`s instaed of returning `NaN`\r\n\r\n### Improvements\r\n\r\n* Added `more_than` option to `calc_n_samples` so that users can set the minimum threshold for whether a sample is counted or not instead of it always 1.\r\n* Added `calc_prop_samples` function for calculating the proportion of samples with a value greater than 0 (issues [#233](https://github.com/grunwaldlab/metacoder/issues/233).\r\n* `primersearch` is faster and takes less memory by using `ape::DNAbin` objects internally.\r\n* Made `calc_taxon_abund` about 5x faster.\r\n\r\n### New features\r\n\r\n* `taxmap` objects can be converted to `phyloseq` objects using `as_phyloseq`.\r\n* Added parser for uBiome data.\r\n\r\n### Changes\r\n\r\n* `primersearch` now takes and returns a `taxmap` object with results added as tables. `primersearch_raw` is a new function that behaves like the old `primersearch` did, returning a table.\r\n* The `dataset` option of many functions has been renamed to `data` to match the option name in the `taxa` package.\r\n* Numerous spelling fixes.",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.3.0",
        "name": "metacoder 0.3.0",
        "release_id": 12613326,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/12613326",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/12613326",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2018-05-01T23:03:06Z",
        "date_published": "2018-05-04T19:17:58Z",
        "description": "##  metacoder 0.2.1\r\n\r\n### Bug fixes\r\n\r\n* Fixes numerous bugs in `heat_tree_matrix` that happen when the input data is not exactly like that produced by `compare_groups` (issues [#195](https://github.com/grunwaldlab/metacoder/issues/195), [#196](https://github.com/grunwaldlab/metacoder/issues/196), [#197](https://github.com/grunwaldlab/metacoder/issues/197)). \r\n* Fixed how `output_file` was used with `heat_tree_matrix`. Now whole plot is saved instead of last subplot.  (issue [#203](https://github.com/grunwaldlab/metacoder/issues/203))\r\n* Fixed \"unused argument\" bug in `parse_mothur_tax_summary` when reading from a file path (issue [#211](https://github.com/grunwaldlab/metacoder/issues/211)).\r\n* Fixed bug when in `zero_low_counts` when using `use_total = TRUE` (issue [#227](https://github.com/grunwaldlab/metacoder/issues/227)).\r\n* Numerous other small fixes.\r\n* Fixed `parse_phyloseq` error when arbitrary rank names were used.\r\n\r\n\r\n### Improvements\r\n\r\n* Node and edge legends can now be excluded individually (Thanks [\\@grabear](https://github.com/grabear)!) (issue [#202](https://github.com/grunwaldlab/metacoder/issues/202)).\r\n* The output of `heat_tree_matrix` always has a 1:1 aspect ratio. (issue [#205](https://github.com/grunwaldlab/metacoder/issues/205))\r\n* Numerous calculation functions added, with more consistent behavior.\r\n\r\n## metacoder 0.2.0\r\n\r\n### Bug fixes\r\n\r\n* Fixed bug in `subtaxa` that caused an error when all of `subset` is `FALSE`. (issue [#143](https://github.com/grunwaldlab/metacoder/issues/143))\r\n* Fixed bug in `filter_taxa` that caused an error when all taxa are filtered out. (issue [#144](https://github.com/grunwaldlab/metacoder/issues/144))\r\n\r\n### Breaking changes\r\n\r\n* All taxmap-related manipulation functions have been moved to the [taxa](https://github.com/ropensci/taxa) package.\r\n* `heat_tree` now uses the `taxmap` class defined in the [taxa](https://github.com/ropensci/taxa) package.\r\n* Numerous changes (i.e. upgrades) to `primersearch`\r\n\r\n### Improvements\r\n\r\n* Upgraded `primersearch` output to be cleaner and have info like the amplicon sequence and primer binding sites.\r\n* Added functions to identift and remove taxa with ambiguous names like \"unknown\"\r\n* code from [ggrepel](https://github.com/slowkow/ggrepel) package now used to avoid overlapping labels. Thanks Kamil Slowikowski!\r\n* New function `heat_tree_matrix` to make plotting a pairwise matrix of heat trees for comparing treatments.\r\n* New parser named `parse_mothur_tax_summary` for mothur *.tax.summary file made by [classify.seqs](https://www.mothur.org/wiki/Classify.seqs).\r\n* New parser named `parse_mothur_taxonomy` for mothur *.taxonomy file made by [classify.seqs](https://www.mothur.org/wiki/Classify.seqs).\r\n* New parser named `parse_qiime_biom` for the QIIME BIOM output.\r\n* New parser named `parse_phyloseq` to convert phyloseq objects.\r\n* New parser named `parse_newick` to parse newick files.\r\n* New parser named `parse_unite_general` for unite general FASTA release. (issue [#154](https://github.com/grunwaldlab/metacoder/issues/154))\r\n* New parser named `parse_rdp` for RDP FASTA release. (issue [#160](https://github.com/grunwaldlab/metacoder/issues/160))\r\n* New parser named `parse_silva_fasta` for SILVA FASTA release. (issue [#162](https://github.com/grunwaldlab/metacoder/issues/162))\r\n* New function `calc_obs_props` to calculate proportions from observation counts (issue [#167](https://github.com/grunwaldlab/metacoder/issues/167)\r\n* New parser named `parse_greengenes` for the Greengenes database. (issue [#?](https://github.com/grunwaldlab/metacoder/issues/?))\r\n* New writer named `write_greengenes` to create an imitation of the Greengenes database format. \r\n* New writer named `write_rdp` to create an imitation of the RDP database format. \r\n* New writer named `write_mothur_taxonomy` to create an imitation of the mothur taxonomy format. \r\n* New writer named `write_unite_general` to create an imitation of the UNITE general FASTA release. \r\n* New writer named `write_silva_fasta` to create an imitation of the SILVA FASTA release. \r\n* New function named `compare_treatments` to compare multiple samples in multiple treatments, applying a user-defined function.\r\n* New function named `calc_taxon_abund` to sum observation values for each taxon.\r\n* Added `col_names` option to `calc_taxon_abund` to set names of output columns.\r\n\r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.2.1",
        "name": "metacoder 0.2.1",
        "release_id": 10859416,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/10859416",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/10859416",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2018-01-05T17:17:15Z",
        "date_published": "2018-01-08T19:19:36Z",
        "description": "## metacoder 0.2.0\r\n\r\n### Bug fixes\r\n\r\n* Fixed bug in `subtaxa` that caused an error when all of `subset` is `FALSE`. (issue [#143](https://github.com/grunwaldlab/metacoder/issues/143))\r\n* Fixed bug in `filter_taxa` that caused an error when all taxa are filtered out. (issue [#144](https://github.com/grunwaldlab/metacoder/issues/144))\r\n\r\n### Breaking changes\r\n\r\n* All taxmap-related manipulation functions have been moved to the [taxa](https://github.com/ropensci/taxa) package.\r\n* `heat_tree` now uses the `taxmap` class defined in the [taxa](https://github.com/ropensci/taxa) package.\r\n* Numerous changes (i.e. upgrades) to `primersearch`\r\n\r\n### Improvements\r\n\r\n* Upgraded `primersearch` output to be cleaner and have info like the amplicon sequence and primer binding sites.\r\n* Added functions to identift and remove taxa with ambiguous names like \"unknown\"\r\n* code from [ggrepel](https://github.com/slowkow/ggrepel) package now used to avoid overlapping labels. Thanks Kamil Slowikowski!\r\n* New function `heat_tree_matrix` to make plotting a pairwise matrix of heat trees for comparing treatments.\r\n* New parser named `parse_mothur_tax_summary` for mothur *.tax.summary file made by [classify.seqs](https://www.mothur.org/wiki/Classify.seqs).\r\n* New parser named `parse_mothur_taxonomy` for mothur *.taxonomy file made by [classify.seqs](https://www.mothur.org/wiki/Classify.seqs).\r\n* New parser named `parse_qiime_biom` for the QIIME BIOM output.\r\n* New parser named `parse_phyloseq` to convert phyloseq objects.\r\n* New parser named `parse_newick` to parse newick files.\r\n* New parser named `parse_unite_general` for unite general FASTA release. (issue [#154](https://github.com/grunwaldlab/metacoder/issues/154))\r\n* New parser named `parse_rdp` for RDP FASTA release. (issue [#160](https://github.com/grunwaldlab/metacoder/issues/160))\r\n* New parser named `parse_silva_fasta` for SILVA FASTA release. (issue [#162](https://github.com/grunwaldlab/metacoder/issues/162))\r\n* New function `calc_obs_props` to calculate proportions from observation counts (issue [#167](https://github.com/grunwaldlab/metacoder/issues/167)\r\n* New parser named `parse_greengenes` for the Greengenes database. (issue [#?](https://github.com/grunwaldlab/metacoder/issues/?))\r\n* New writer named `write_greengenes` to create an imitation of the Greengenes database format. \r\n* New writer named `write_rdp` to create an imitation of the RDP database format. \r\n* New writer named `write_mothur_taxonomy` to create an imitation of the mothur taxonomy format. \r\n* New writer named `write_unite_general` to create an imitation of the UNITE general FASTA release. \r\n* New writer named `write_silva_fasta` to create an imitation of the SILVA FASTA release. \r\n* New function named `compare_treatments` to compare multiple samples in multiple treatments, applying a user-defined function.\r\n* New function named `calc_taxon_abund` to sum observation values for each taxon.\r\n* Added `col_names` option to `calc_taxon_abund` to set names of output columns.\r\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/0.2.0",
        "name": "metacoder 0.2.0",
        "release_id": 9150826,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/9150826",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/9150826",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2017-05-23T03:31:35Z",
        "date_published": "2017-05-23T16:19:04Z",
        "description": "Mostly minor improvements and bug fixes. Larger changes are waiting on the [taxa](https://github.com/ropensci/taxa) package to be done, which will be the new home of the `taxmap` class and the associated dplyr-like manipulating functions like `filter_taxa`.\r\n\r\n## Improvements\r\n\r\n* Provided helpful error message when the `evaluation nested too deeply: infinite recursion / options(expressions=)?` occurs due to too many labels being printed.\r\n* `heat_tree`: improved how the predicted bondries of text is calcuated, so text with any rotation, justification, or newlines influences margins correctly (i.e. does not get cut off).\r\n* `heat_tree`: Can now save multiple file outputs in different formats at once\r\n\r\n## Minor changes\r\n\r\n* `heat_tree` now gives a warning if infinite values are given to it\r\n* `extract_taxonomy`: There is now a warning message if class regex does not match ([issue #123](https://github.com/grunwaldlab/metacoder/issues/123))\r\n* `heat_tree`: Increased lengend text size and reduced number of labels\r\n* `extract_taxonomy`: added `batch_size` option to help deal with invalid IDs better\r\n* Added CITATION file\r\n\r\n\r\n## Breaking changes\r\n\r\n* The `heat_tree` option `margin_size` funcion now takes four values instead of 2.\r\n\r\n## Bug fixes\r\n\r\n* `heat_tree`: Fixed bug when color is set explicitly (e.g. \"grey\") instead of raw numbers and the legend is not removed. Now a mixure of raw numbers and color names can be used. \r\n* Fixed bugs caused by dplyr version update\r\n* Fixed bug in `heat_tree` that made values not in the input taxmap object not associate with the right taxa. See [this post](https://groups.google.com/d/msgid/metacoder-discussions/c9d8ecc2-1efa-4baf-946e-0f105575da2e%40googlegroups.com).\r\n* `extract_taxonomy`: Fixed an error that occured when not all inputs could be classified and sequences were supplied\r\n* Fixed bug in `primersearch` that cased the wrong primer sequence to be returned when primers match in the reverse direction\r\n* Fixed a bug in `parse_mothur_summary` where \"unclassified\" had got changed to \"untaxmap\" during a search and replace\r\n* Fixed outdated example code for `extract_taxonomy`\r\n* Fixed a bug in `mutate_taxa` and `mutate_obs` that made replacing columns result in new columns with duplicate names. ",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.1.3",
        "name": "metacoder 0.1.3",
        "release_id": 6478805,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/6478805",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/6478805",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zachary-foster",
          "type": "User"
        },
        "date_created": "2016-08-26T19:56:19Z",
        "date_published": "2016-08-26T22:55:58Z",
        "description": "This is the first version of MetacodeR on CRAN. Highlights include:\n- Functions to parse any text-based file format with taxonomic information. \n- A new class called `taxmap` that holds tabular \"observations\" assigned to hierarchical \"taxa\". This class also supports \"virtual\" columns. \n- A set of functions inspired by `dplyr` to manipulate `taxmap` objects\n- A function to plot heat trees: a taxonomic tree with the size and color of most components mapped to aribtrary variables. Easily makes publication-quality graphs from `taxmap` objects. \n- A function to run _in silico_ PCR from R\n",
        "html_url": "https://github.com/grunwaldlab/metacoder/releases/tag/v0.1.2",
        "name": "First CRAN release",
        "release_id": 3987881,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/grunwaldlab/metacoder/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/grunwaldlab/metacoder/releases/3987881",
        "value": "https://api.github.com/repos/grunwaldlab/metacoder/releases/3987881",
        "zipball_url": "https://api.github.com/repos/grunwaldlab/metacoder/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "The function that simulates PCR requires `primersearch` from the EMBOSS\ntool kit to be installed. This is not an R package, so it is not\nautomatically installed. Type `?primersearch` after installing and\nloading metacoder for installation instructions.\n"
      },
      "source": "https://raw.githubusercontent.com/grunwaldlab/metacoder/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:50:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 135
      },
      "technique": "GitHub_API"
    }
  ]
}