{
  "application_domain": [
    {
      "confidence": 15.47,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you find this code useful in your research, please consider citing the following paper::\n\n  @article{VASAN20191714,\n    title=\"DLITE Uses Cell-Cell Interface Movement to Better Infer Cell-Cell Tensions\",\n    journal={Biophysical Journal},\n    volume = \"117\",\n    number = \"9\",\n    pages = \"1714 - 1727\",\n    year={2019},\n    issn = \"0006-3495\",\n    doi = \"https://doi.org/10.1016/j.bpj.2019.09.034\",\n    url = \"http://www.sciencedirect.com/science/article/pii/S0006349519308215\",\n    author = \"Ritvik Vasan and Mary M. Maleckar and C. David Williams and Padmini Rangamani\",\n  }\n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Ritvik Vasan and Mary M. Maleckar and C. David Williams and Padmini Rangamani",
        "doi": "https://doi.org/10.1016/j.bpj.2019.09.034",
        "format": "bibtex",
        "title": "DLITE Uses Cell-Cell Interface Movement to Better Infer Cell-Cell Tensions",
        "type": "Text_excerpt",
        "url": "http://www.sciencedirect.com/science/article/pii/S0006349519308215",
        "value": "@article{VASAN20191714,\n    author = {Ritvik Vasan and Mary M. Maleckar and C. David Williams and Padmini Rangamani},\n    url = {http://www.sciencedirect.com/science/article/pii/S0006349519308215},\n    doi = {https://doi.org/10.1016/j.bpj.2019.09.034},\n    issn = {0006-3495},\n    year = {2019},\n    pages = {1714 - 1727},\n    number = {9},\n    volume = {117},\n    journal = {Biophysical Journal},\n    title = {DLITE Uses Cell-Cell Interface Movement to Better Infer Cell-Cell Tensions},\n}"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenCellModeling/DLITE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-22T16:39:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-29T23:44:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Let's infer the forces that cells generate during time series by looking at the angles they make with each other. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9600408713063137,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "\n* Generate synthetic colonies from relaxed voronoi tessellations and save them as .txt files in Surface Evolver format.  \n* Predict tensions in time-series synthetic data. Data is available as .txt files (/Notebooks/data/Synthetic_data/).  \n* Predict tensions in time-series ZO-1 data. Data is available as .txt files (/Notebooks/data/ZO-1_data/).  \n* Compare tension predictions between CellFIT and DLITE.  \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8848226250190275,
      "result": {
        "original_header": "Additional",
        "type": "Text_excerpt",
        "value": "* Licensed under the `Allen Institute Software License`_.\n* This package was created with Cookiecutter_. \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997563300475995,
      "result": {
        "type": "Text_excerpt",
        "value": "\nDLITE is Dynamic Local Intercellular Tension Estimation of cell-cell forces in time-lapse images of a cell monolayer. In other words, DLITE is a method that takes in a digested skeletonization of curved edges at the tops of cell colonies and gives you a predicted tension along each of those edges. This differs from other tools such as `CellFIT`_ in that it is intended to be applied across time series; the predictions get better as you feed more and more frames into it.  \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://DLITE.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AllenCellModeling/DLITE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/Compare_CellFIT_DLITE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/Compare_CellFIT_DLITE.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/Demo_notebook_ZO-1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/Demo_notebook_ZO-1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/ZO-1_data/ZO-1_Mesh_To_Force_Network.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/ZO-1_data/ZO-1_Mesh_To_Force_Network.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/example/Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/example/Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Compare_force_network_CellFIT_DLITE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Compare_force_network_CellFIT_DLITE.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/SurfaceEvolver_Mesh_To_Force_Network.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/SurfaceEvolver_Mesh_To_Force_Network.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Generate_Voronoi_Colony_Mesh.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Generate_Voronoi_Colony_Mesh.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Simulate_FOV_Drift.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/docs/synthetic_data/Simulate_FOV_Drift.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Demo_notebook_SurfaceEvolver.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Demo_notebook_SurfaceEvolver.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Compare_CellFIT_DLITE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Compare_CellFIT_DLITE.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Generate_Voronoi_Data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Generate_Voronoi_Data.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Demo_notebook_ZO-1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/Demo_notebook_ZO-1.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/FOV_drift.ipynb"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/Notebooks/FOV_drift.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenCellModeling/DLITE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AllenCellModeling/DLITE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Like other complex projects, DLITE is best installed in a `Conda environment`_ or `virtual environment`_. We'll use a Conda environment here. First we'll create and activate it. \n\n.. code-block:: bash\n\n    $ conda create --name dlite python=3.7\n    $ conda activate dlite\n\nNow we have our named environment. Next clone the DLITE repository and install the local copy\n\n.. code-block:: bash\n\n    $ git clone https://github.com/AllenCellModeling/DLITE.git\n    $ cd DLITE\n    $ pip install -e .[all]\n\nDLITE is installed. Optionally we can check that the installation was successful by running a test suite by issuing the single command ``$ tox``. But likely of more interest is to look at the example notebooks via, e.g.:\n\n.. code-block:: bash\n\n    $ jupyter-notebook  Notebooks/Example.ipynb\n\nThis is the preferred method to install DLITE in its alpha form as it allows updates via:\n\n.. code-block:: console\n\n    $ git pull\n\n.. _Conda environment: https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html\n.. _virtual environment: https://docs.python.org/3/tutorial/venv.html\n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9750746362737208,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "    $ jupyter notebook Generate_Voronoi_Data.ipynb \n    $ jupyter notebook demo_notebook_Surface_Evolver.ipynb \n    $ jupyter notebook demo_notebook_ZO-1.ipynb \n    $ jupyter notebook Compare_CELLFIT_DLITE.ipynb \n    $ jupyter notebook FOV_drift.ipynb\n \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999924910887875,
      "result": {
        "original_header": "Additional",
        "type": "Text_excerpt",
        "value": ".. _Allen Institute Software License: https://github.com/AllenCellModeling/DLITE/blob/master/LICENSE\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9826140801839987,
      "result": {
        "type": "Text_excerpt",
        "value": "\n.. image:: https://travis-ci.com/AllenCellModeling/DLITE.svg?branch=master\n        :target: https://travis-ci.com/AllenCellModeling/DLITE\n        :alt: Build Status \n.. image:: https://readthedocs.org/projects/dlite/badge/?version=latest\n        :target: https://DLITE.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status \n.. image:: https://codecov.io/gh/AllenCellModeling/DLITE/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/AllenCellModeling/DLITE\n  :alt: Codecov Status \n`Install via pip`_ as described or view `full documentation`_. For more details, refer to our `paper`_. \n.. _Install via pip: `Installation`_\n.. _full documentation: https://DLITE.readthedocs.io/en/latest/?badge=latest\n.. _CellFIT: http://www.civil.uwaterloo.ca/brodland/inferring-forces-in-cells.html \n.. _paper: https://www.sciencedirect.com/science/article/pii/S0006349519308215\n   \n.. image:: https://user-images.githubusercontent.com/40371793/61190376-3f3bf800-a650-11e9-9e8f-51235200aca4.jpg\n   :width: 750px\n   :align: center\n  \n   \n.. Add a section on what DLITE needs as inputs, how the input files need to be formatted \n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AllenCellModeling/DLITE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Allen Institute Software License \u2013 This software license is the 2-clause BSD\nlicense plus clause a third clause that prohibits redistribution and use for\ncommercial purposes without further permission.\n\nCopyright \u00a9 2019\nRitvik Vasan, Allen Institute.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Redistributions and use for commercial purposes are not permitted without\nthe Allen Institute\u2019s written permission. For purposes of this license,\ncommercial purposes are the incorporation of the Allen Institute's software\ninto anything for which you will charge fees or other compensation or use of\nthe software to perform a commercial service for a third party. Contact\nterms@alleninstitute.org for commercial licensing opportunities.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DLITE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AllenCellModeling"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 856414,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 238464,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 121189,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 71575,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 28137,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Lisp",
        "size": 13739,
        "type": "Programming_language",
        "value": "Common Lisp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 8515,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 4519,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 1268,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:02:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "type": "Text_excerpt",
        "value": "We are not currently supporting this code, but simply releasing it to the community AS IS but are not able to provide any guarantees of support. The community is welcome to submit issues, but you should not expect an active response.\n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "**DLITE needs**\n\n\n* Input data in the form of .txt files. \n\n* Synthetic data .txt files that are formatted for the outputs of Surface Evolver.\n\n*  Experimental data .txt files that are formatted for the outputs of tracing using the NeuronJ plugin in ImageJ.\n"
      },
      "source": "https://raw.githubusercontent.com/AllenCellModeling/DLITE/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}