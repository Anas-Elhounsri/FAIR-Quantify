{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GregoryFaust/samblaster"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-02-11T18:27:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-25T09:20:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "samblaster: a tool to mark duplicates and extract discordant and split reads from sam files."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary",
        "parent_header": [
          "*samblaster*"
        ],
        "type": "Text_excerpt",
        "value": "*samblaster* is a fast and flexible program for marking duplicates in __read-id grouped<sup>1</sup>__ paired-end SAM files.\nIt can also optionally output discordant read pairs and/or split read mappings to separate SAM files, and/or unmapped/clipped reads to a separate FASTQ file.\nWhen marking duplicates, *samblaster* will require approximately 20MB of memory per 1M read pairs.\n"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9207874755046115,
      "result": {
        "original_header": "*samblaster*",
        "type": "Text_excerpt",
        "value": "Support for Linux and OSX (Version 10.7 or higher).\n \n"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/GregoryFaust/samblaster/wiki"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/GregoryFaust/samblaster/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GregoryFaust/samblaster"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "samblaster"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "*samblaster*"
        ],
        "type": "Text_excerpt",
        "value": "*samblaster* is self contained and therefore has no installation dependencies beyond **g++** and **make**.\n\n*samblaster* can be downloaded from the **_releases_** tab or manually downloaded via *git clone*.  Afterwards, simply use *make* and copy *samblaster* to a directory in your path.  For example:\n~~~~~~~~~~~~~~~~~~\ngit clone git://github.com/GregoryFaust/samblaster.git\ncd samblaster\nmake\ncp samblaster /usr/local/bin/.\n~~~~~~~~~~~~~~~~~~\n"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9841944960345784,
      "result": {
        "original_header": "*samblaster*",
        "type": "Text_excerpt",
        "value": "Support for Linux and OSX (Version 10.7 or higher).\n \n"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "samblaster"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "GregoryFaust"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 84451,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 535,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2020-06-04T16:29:03Z",
        "date_published": "2020-06-04T16:29:22Z",
        "description": "This release addresses the following issues:\r\n\r\n1) Fix the bug that failed to output discordant reads to the discordantFile when the **--discordantFile** (**-d**) option is used in conjunction with the **--acceptDupMarks** (**-a**) option. This closes issue #46.\r\n\r\n2) Add spaces around every occurrence of 'PRIu64' format specification to be compliant with c++11 string constant standards. This incorporates the changes to samblaster.cpp from pull request #44. Also add string literal warning to Makefile.\r\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.26",
        "name": "v.0.1.26",
        "release_id": 27230281,
        "tag": "v.0.1.26",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.26",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/27230281",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/27230281",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.26"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2020-03-17T01:01:42Z",
        "date_published": "2020-03-17T01:24:28Z",
        "description": "This release addresses the following issues:\r\n\r\n1. Change the behavior of **--addMateTags** to first ensure that the tag does not already exist before adding to a line. As a result, we now have no duplicate tags added. Closes issue #41.\r\n\r\n2. Improve handling of orphan/singleton reads.\r\n   1. Improve orphan/singleton duplicate identification by allowing forward and reverse strand orphans/singletons to be duplicates of each other. This identifies 10% to 100% more orphan/singleton reads as duplicates, but still not as many as Picard MarkDuplicates. See [SAMBLASTER_Supplemental.pdf](https://www.dropbox.com/s/s7vvdtf2gmytvay/SAMBLASTER_Supplemental.pdf?dl=0) for our initial discussion of this issue. Common *samblaster* usage is with Illumina paired-end reads aligned with **BWA MEM**. Orphans are ~0.5% of all pairs in such data, resulting in a small overall effect. The main impetus for this change is to increase the suitability of *samblaster* for finding duplicates in singleton long-read data where the entire dataset is subject to this change. In a test of long reads aligned with **NGMLR** this release found ~80% more duplicates than the previous algorithm.\r\n   2. Add a **--maxReadLength** parameter to fix the issue addressed in release 0.1.24 in a more general way, especially for proper handling of long singleton reads, but also anticipating longer reads from Illumina.\r\n   3. Keep track of the count and max of read lengths that are larger than **--maxReadLength**. Report these at the end of the run as warnings, unless a read is such that it causes the calculated reference offset to fall outside the reference genome. In this latter case, a fatal error will occur (previously caused a segfault).\r\n   4. The above changes close issues #40, #43, and provide a more permanent resolution to issue #26.\r\n   5. Add example usage scenarios in both the program help and README.md for using *samblaster* to mark duplicates and/or pull splitters from files containing long singleton reads. \r\nResponds to issue #42.\r\n\r\n3. Additional changes to error handling and run stats reporting.\r\n   1. Add check to ensure that every read has a reference sequence that is listed in the SAM header.\r\n   2. Add better input parameter error checking and error messages.\r\n   3. Output partial run stats if a fatal error occurs after *samblaster* starts processing SAM lines.\r\n   4. Keep track of the number of ids with no primary alignment, pairs in which reads are: both unmapped, one mapped, and both mapped. Add a table of run statistics output to stderr which includes these counts and percentages of all reads, as well as counts and percentages of duplicates that occur in each appropriate category. This is a partial response to issue #16.\r\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.25",
        "name": "v.0.1.25",
        "release_id": 24579560,
        "tag": "v.0.1.25",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.25",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/24579560",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/24579560",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.25"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2016-11-28T21:55:19Z",
        "date_published": "2016-11-28T22:27:21Z",
        "description": "This release fixes a sometimes fatal bug caused by underflow/overflow of reference coordinates on contigs due to clipped reads near the beginning/end of a contig. Also, especially in overflow, there was a small chance of _samblaster_ falsely identifying as duplicates a read pair mapping to the end of one contig with a read pair at the beginning of the next contig.\n\nFixes issue #26.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.24",
        "name": "v.0.1.24",
        "release_id": 4777796,
        "tag": "v.0.1.24",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.24",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/4777796",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/4777796",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.24"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2016-09-22T21:26:53Z",
        "date_published": "2016-09-22T23:08:13Z",
        "description": "**THIS RELEASE IS DEPRACATED. PLEASE USE RELEASE 0.1.24 INSTEAD**\n\nThis release addresses the following issues:\n- Change a data structure to handle both longer and a larger number of sequences in the input SAM file. Thanks to [carsonhh](https://github.com/carsonhh) for the idea and code. Closes issue #21.\n- Change the behavior of **--addMateTags** to not add tags to any alignment with an unmapped mate. Thanks to [ernfrid](https://github.com/ernfrid) for the code. Closes pull request #24.\n- Add genomic location information in the error message for missing mate.  Closes issue #22.\n- Explicitly check if the input file is in BAM format, and if so exit. This avoids unpredictable results including potential segfault.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.23",
        "name": "v.0.1.23",
        "release_id": 4208940,
        "tag": "v.0.1.23",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.23",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/4208940",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/4208940",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.23"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2015-06-18T19:40:16Z",
        "date_published": "2015-06-18T20:52:21Z",
        "description": "This release addresses the following issues:\n- Add **-M** option. Use of **-M** is backward compatible with the _samblaster_ behavior since release 0.1.15 in which alignments marked with both FLAG values 0x100 and 0x800 were treated as _supplemental_ alignments for the purposes of identifying split-reads. The new default behavior is compliant with the latest SAM specification and treats only reads flagged with 0x800 as _supplemental_. The **-M** option can (and should) be used with older alignment files created when chimeric reads were marked 0x100, or ones produced by recent versions of _bwa mem_ using its **-M** option. See README.md for details.\n- Bug fixes for buffer overruns that sometimes occurred while adding the duplicate flag or mate tag information to output lines.\n- The 'N' CIGAR op is now supported, as well as multiple clip ops ('S' and/or 'H') at the beginning or end of a CIGAR string.\n- An @PG line is now placed in the header of all output SAM files.\n- SAM headers with up to 32,000 contigs may now be supported if the system being used can allocate sufficiently large arrays.\n- Add **--ignoreUnmated** option. **This option is not recommended for general use.** It disables checks in _samblaster_ that detect incorrectly sorted or malformed input files. However, it can be useful in cases in which some alignments have been filtered out of an otherwise well formed and read-id (QNAME) grouped input file.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.22",
        "release_id": 1434849,
        "tag": "v.0.1.22",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.22",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/1434849",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/1434849",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.22"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-12-23T18:59:39Z",
        "date_published": "2014-12-23T19:43:34Z",
        "description": "This release addresses the following issues:\n- Fixed bug that resulted in intermittent incorrect detection of a few split-read mappings when using **--splitterFile** option in conjunction with **--acceptDupMarks** option.\n- _samblaster_ now supported on OSX.  Thanks to Aakrosh Ratan and Saket Choudhary for their code mods.\n- Updated [SAMBLASTER_supplemental.pdf](https://www.dropbox.com/s/s7vvdtf2gmytvay/SAMBLASTER_Supplemental.pdf?dl=0) to include final _samblaster_ citation, and fixed the recently broken link to the file in README.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.21",
        "name": "v.0.1.21",
        "release_id": 806188,
        "tag": "v.0.1.21",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.21",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/806188",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/806188",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.21"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-09-02T16:12:41Z",
        "date_published": "2014-09-06T23:53:00Z",
        "description": "This release adds support for sequence match ('=') and mismatch ('X') in CIGAR strings when calculating the 5' reference coordinates of alignments for duplicate identification.\n\nThanks Brad.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.20",
        "name": "v.0.1.20",
        "release_id": 540480,
        "tag": "v.0.1.20",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.20",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/540480",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/540480",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.20"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-08-15T00:00:48Z",
        "date_published": "2014-08-15T00:41:41Z",
        "description": "This release adds support for the **--addMateTags** option.  This option will cause _samblaster_ to add MC (Mate CIGAR) and MQ (Mate Mapping Quality) tags to all SAM output lines that are associated with paired-end reads for which both reads appear in the input SAM file.  The CIGAR and Mapping Quality of the primary alignment for each read are used.  The MC and MQ tags are added regardless of whether both, one, or neither of the reads are mapped, and are also added to any secondary alignments associated with such a pair of reads.  In addition to the main output SAM file, they are also added to the **discordantFile** and/or **splitterFile** output file(s) when specified.  \n\nThese tags can be useful for  downstream processing of the output SAM file(s) especially after they are position sorted, which can separate the alignments associated with paired-end reads by an indefinite distance.  However, to my knowledge, no commonly used aligner includes the MC or MQ tags in their output.  Therefore, it is easier for _samblaster_ to add these tags while the file is **read-id grouped** than for downstream processing steps to try to access the alignment for each mate to get this information.  In addition, as of now, when **--addMateTags** is specified, _samblaster_ will add these tags as outlined above without first checking whether or not these tags are already present in the input file.  This release is no slower than previous releases when **--addMateTags** is not specified.  However, _samblaster_ is a few to several percent slower when this option is used, and of course the output SAM files are also larger.\n\nThanks to Colby Chiang for helping to test this release.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.19",
        "name": "v.0.1.19",
        "release_id": 492703,
        "tag": "v.0.1.19",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.19",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/492703",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/492703",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.19"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-08-08T20:45:29Z",
        "date_published": "2014-08-08T20:48:10Z",
        "description": "Fixed a bug for single-read (not paired-end) input files that sometimes resulted in junk lines in output SAM file(s) immediately following a marked duplicate.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.18",
        "name": "v.0.1.18",
        "release_id": 480360,
        "tag": "v.0.1.18",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.18",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/480360",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/480360",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.18"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-08-01T18:31:53Z",
        "date_published": "2014-08-01T18:36:19Z",
        "description": "Fixed a bug that mishandled unmapped reads in single-read (not paired-end) input files.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.17",
        "name": "v0.1.17",
        "release_id": 466139,
        "tag": "v.0.1.17",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.17",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/466139",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/466139",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.17"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-07-03T15:56:54Z",
        "date_published": "2014-07-03T16:11:30Z",
        "description": "This release adds the following features:\n- Significantly reduced memory usage when SAM file header contains many (1000s) of sequences from the reference genome used during alignment.\n- Added [SAMBLASTER_supplemental.pdf](http://faculty.virginia.edu/irahall/support/samblaster/SAMBLASTER_Supplemental.pdf) to the github site.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.16",
        "name": "v0.1.16",
        "release_id": 410253,
        "tag": "v.0.1.16",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.16",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/410253",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/410253",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-05-28T21:16:40Z",
        "date_published": "2014-05-28T21:53:00Z",
        "description": "This release adds the following features:\n- Added license terms for _samblaster_ use.\n- Added **--removeDups** option that removes duplicates from the main and all other output files.\n- When identifying duplicates, the unmapped read of orphan pairs need not be in the input file.\n- Single-read alignments are now supported as orphan pairs in which the unmapped read is missing.\n- Secondary alignments are now recognized by both the SAM flag 0x100 and 0x800.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/v.0.1.15",
        "name": "v0.1.15",
        "release_id": 344941,
        "tag": "v.0.1.15",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/v.0.1.15",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/344941",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/344941",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/v.0.1.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-03-16T18:28:24Z",
        "date_published": "2014-03-16T18:50:38Z",
        "description": "This is a major new release of _samblaster_ that includes the following changes:\n- New data structure uses less than half the memory as prior release;  \n  now averages about 20 bytes per read pair while marking duplicates.\n- More accurate duplicate identification using 5' end of reads as reference offset.\n- More control over which reads will be included in splitter file;  \n  **--minIndelSize** and **--maxUnmappedBases** parameters added.\n- New capability to output unmapped/clipped reads into a FASTQ file for re-alignment,  \n  controlled by **--unmappedFile** and **--minClipSize** parameters.\n- Recent version of **g++** is no longer required to compile _samblaster_.\n- Added **--quiet** mode to optionally suppress most informational output to stderr.\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/0.1.14",
        "name": "v0.1.14",
        "release_id": 226078,
        "tag": "0.1.14",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/0.1.14",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/226078",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/226078",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/0.1.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "GregoryFaust",
          "type": "User"
        },
        "date_created": "2014-02-14T22:23:53Z",
        "date_published": "2014-03-14T19:11:09Z",
        "description": "Initial Release\n",
        "html_url": "https://github.com/GregoryFaust/samblaster/releases/tag/0.1.9",
        "name": "v0.1.9",
        "release_id": 224537,
        "tag": "0.1.9",
        "tarball_url": "https://api.github.com/repos/GregoryFaust/samblaster/tarball/0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/GregoryFaust/samblaster/releases/224537",
        "value": "https://api.github.com/repos/GregoryFaust/samblaster/releases/224537",
        "zipball_url": "https://api.github.com/repos/GregoryFaust/samblaster/zipball/0.1.9"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 09:45:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 224
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "*samblaster*"
        ],
        "type": "Text_excerpt",
        "value": "See the [SAM File Format Specification](http://samtools.sourceforge.net/SAMv1.pdf) for details about the SAM alignment format.\n\nBy default, *samblaster* reads SAM input from **stdin** and writes SAM to **stdout**. Input SAM files usually contain paired end data (see [Duplicate Identification](#DupIdentification) below), must contain a sequence header, and must be __read-id grouped<sup>1<sup>__.\nBy default, the output SAM file will contain all the alignments in the same order as the input, with duplicates marked with SAM FLAG 0x400.  The **--removeDups** option will instead remove duplicate alignments from the output file.\n\n__<sup>1</sup>A read-id grouped__ SAM file is one in which all alignments for a read-id (QNAME) are grouped together in adjacent lines.\nAligners naturally produce such files.\nThey can also be created by sorting a SAM file by read-id.\nBut as shown below, sorting the input to *samblaster* by read-id is not required if the alignments are already grouped.\n\n**COMMON USAGE SCENARIOS:**\n\nTo take input alignments directly from _bwa mem_ and output to _samtools view_ to compress SAM to BAM:\n```\nbwa mem <idxbase> samp.r1.fq samp.r2.fq | samblaster | samtools view -Sb - > samp.out.bam\n```\n\nWhen using the *bwa mem* **-M** option, also use the *samblaster* **-M** option:\n```\nbwa mem -M <idxbase> samp.r1.fq samp.r2.fq | samblaster -M | samtools view -Sb - > samp.out.bam\n```\n\nTo additionally output discordant read pairs and split read alignments:\n```\nbwa mem <idxbase> samp.r1.fq samp.r2.fq | samblaster -e -d samp.disc.sam -s samp.split.sam | samtools view -Sb - > samp.out.bam\n```\n\nTo pull split reads and discordants read pairs from a pre-existing BAM file with duplicates already marked:\n```\nsamtools view -h samp.bam | samblaster -a -e -d samp.disc.sam -s samp.split.sam -o /dev/null\n```\n\nTo process a BAM file of singleton long reads to pull split and/or unmapped reads with/without marking duplicates:\n```\nsamtools view -h samp.bam | samblaster --ignoreUnmated [-e] --maxReadLength 100000 [-s samp.split.sam] [-u samp.umc.fasta] | samtools view -Sb - > samp.out.bam\nsamtools view -h samp.bam | samblaster --ignoreUnmated -a [-e] [-s samp.split.sam] [-u samp.umc.fasta] -o /dev/null\n```\n\n---\n**OPTIONS:**\nDefault values enclosed in square brackets []\n<pre>\nInput/Output Options:\n-i --input           FILE Input sam file [stdin].\n-o --output          FILE Output sam file for all input alignments [stdout].\n-d --discordantFile  FILE Output discordant read pairs to this file. [no discordant file output]\n-s --splitterFile    FILE Output split reads to this file abiding by paramaters below. [no splitter file output]\n-u --unmappedFile    FILE Output unmapped/clipped reads as FASTQ to this file abiding by parameters below. [no unmapped file output].\n                          Requires soft clipping in input file.  Will output FASTQ if QUAL information available, otherwise FASTA.\n\nOther Options:\n-a --acceptDupMarks       Accept duplicate marks already in input file instead of looking for duplicates in the input.\n-e --excludeDups          Exclude reads marked as duplicates from discordant, splitter, and/or unmapped file.\n-r --removeDups           Remove duplicates reads from all output files. (Implies --excludeDups).\n   --addMateTags          Add MC and MQ tags to all output paired-end SAM lines.\n   --ignoreUnmated        Suppress abort on unmated alignments. Use only when sure input is read-id grouped,\n                          and either paired-end alignments have been filtered or the input file contains singleton reads.\n                          <b>--ignoreUnmated is not recommended for general use on paired-end data. It disables checks that detect incorrectly sorted input.</b>\n-M                        Compatibility mode (details below); both FLAG 0x100 and 0x800 denote supplementary (chimeric). Similar to <i>bwa mem</i> <b>-M</b> option.\n   --maxReadLength    INT Maximum allowed length of the SEQ/QUAL string in the input file. [500]\n   --maxSplitCount    INT Maximum number of split alignments for a read to be included in splitter file. [2]\n   --maxUnmappedBases INT Maximum number of un-aligned bases between two alignments to be included in splitter file. [50]\n   --minIndelSize     INT Minimum structural variant feature size for split alignments to be included in splitter file. [50]\n   --minNonOverlap    INT Minimum non-overlaping base pairs between two alignments for a read to be included in splitter file. [20]\n   --minClipSize      INT Minumum number of bases a mapped read must be clipped to be included in unmapped file. [20]\n\n-h --help                 Print samblaster help to stderr.\n-q --quiet                Output fewer statistics.\n   --version              Print samblaster version number to stderr.\n</pre>\n\n---\n**ALIGNMENT TYPE DEFINITIONS:<a name=\"Definitions\"></a>**\nBelow, we will use the following definitions for alignment types.\nStarting with *samblaster* release 0.1.22, these definitions are affected by the use of the **-M** option.\nBy default, *samblaster* will use the current definitions of alignment types as specified in the [SAM Specification](http://samtools.sourceforge.net/SAMv1.pdf).\nNamely, alignments marked with FLAG 0x100 are considered *secondary*, while those marked with FLAG 0x800 are considered *supplementary*.\nIf the **-M** option is specified, alignments marked with either FLAG 0x100 or 0x800 are considered *supplementary*, and no alignments are considered *secondary*.\nA *primary* alignment is always one that is neither *secondary* nor *supplementary*.\nOnly *primary* and *supplementary* alignments are used to find chimeric (split-read) mappings.\nThe **-M** flag is used for backward compatibility with older SAM/BAM files in which \"chimeric\" alignments were marked with FLAG 0x100, and should also be used with output from more recent runs of *bwa mem* using its **-M** option.\n\n---\n**DUPLICATE IDENTIFICATION:<a name=\"DupIdentification\"></a>**\nA **duplicate** read pair is defined as a pair that has the same *signature* for each mapped read as a previous read pair in the input SAM file.  The *signature* is comprised of the combination of the sequence name, strand, and the reference offset where the 5' end of the read would fall if the read were fully aligned (not clipped) at its 5' end.  The 5' aligned reference position is calculated using a combination of the POS field, the strand, and the CIGAR string.  This definition of *signature* matches that used by *Picard MarkDuplicates*.\n\n1. For pairs in which both reads are mapped, both signatures must match.\n2. For pairs in which only one side is mapped (an \"orphan\"), the signature of the mapped read must match a previously seen orphan. Starting with *samblaster* 0.1.25,  forward and reverse strand orphans/singletons are allowed to be duplicates of each other. In an orphan pair, the unmapped read need not appear in the input file. In addition, mapped non-paired singleton (possible long) read alignments will be treated the same as an orphan pair with a missing unmapped read.\n3. No doubly unmapped pair will be marked as a duplicate.\n4. Any *secondary* or *supplementary* alignment associated with a duplicate *primary* alignment will also be marked as a duplicate.\n\n---\n**DISCORDANT READ PAIR IDENTIFICATION:**\nA **discordant** read pair is one which meets all of the following criteria:\n\n1. Both side of the read pair are mapped (neither FLAG 0x4 or 0x8 is set).\n2. The *properly paired* FLAG (0x2) is not set.\n3. *Secondary* or *supplementary* alignments are never output as discordant, although a discordant read pair can have such alignments associated with them.\n4. Duplicate read pairs that meet the above criteria will be output as discordant unless the **-e** option is used.\n\n---\n**SPLIT READ IDENTIFICATION:**\n**Split Read** alignments are derived from a single read when one portion of the read aligns to a different region of the reference genome than another portion of the read.  Such pairs of alignments often define a structural variant (SV) breakpoint, and are therefore useful input to SV detection algorithms such as [LUMPY](https://github.com/arq5x/lumpy-sv/).  *samblaster* uses the following strategy to identify split reads alignments.\n\n1. Identify reads that have between two and **--maxSplitCount** *primary* and *supplementary* alignments.\n2. Sort these alignments by their strand-normalized position along the read.\n3. Two alignments are output as splitters if they are adjacent on the read, and meet these criteria:\n    - each covers at least **--minNonOverlap** base pairs of the read that the other does not.\n    - the two alignments map to different reference sequences and/or strands.\n    - the two alignments map to the same sequence and strand, and represent a SV that is at least **--minIndelSize** in length, and have at most **--maxUnmappedBases** of un-aligned base pairs between them.\n4. Split read alignments that are part of a duplicate read will be output unless the **-e** option is used.\n\n---\n**UNMAPPED/CLIPPED READ IDENTIFICATION:**\nAn **unmapped** or **clipped** read is a *primary* alignment that is unaligned over all or part of its length respectively.  The lack of a full alignment may be caused by a SV breakpoint that falls within the read.  Therefore, *samblaster* will optionally output such reads to a FASTQ file for re-alignment by a tool, such as [YAHA](https://github.com/GregoryFaust/yaha/), geared toward finding split-read mappings.  *samblaster* applies the following strategy to identify and output unmapped/clipped reads:\n\n1. An **unmapped** read has the *unmapped read* FLAG set (0x4).\n2. A **clipped** read is a mapped read with a CIGAR string that begins or ends with at least **--minClipSize** unaligned bases (CIGAR code S and/or H), and is not from a read that has one or more *supplementary* alignments.\n3. In order for *samblaster* to output the entire sequence for clipped reads, the input SAM file must have soft clipped primary alignments.\n4. *samblaster* will output unmapped/clipped reads into a FASTQ file if QUAL information is available in the input file, and a FASTA file if not.\n5. Unmapped/clipped reads that are part of a duplicate read pair will be output unless the **-e** option is used.\n"
      },
      "source": "https://raw.githubusercontent.com/GregoryFaust/samblaster/master/README.md",
      "technique": "header_analysis"
    }
  ]
}