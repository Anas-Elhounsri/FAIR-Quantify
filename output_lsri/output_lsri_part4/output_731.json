{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bazykinlab/SELVa"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-06T10:07:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-05T01:28:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simulator of Evolution with Landscape Variation"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9790406741210648,
      "result": {
        "original_header": "SELVa",
        "type": "Text_excerpt",
        "value": "Simulator of Evolution with Landscape Variation \n**Affiliation**: Skolkovo Institute of Science and Technology, Moscow, Russia; Kharkevich Institute for Information Transmission Problems, Moscow, Russia. \nSELVa is a simulator of sequence evolution that allows the fitness landscape to vary according to user-specified rules.  It is geared towards exploring the effects of landscape change on molecular sequence evolution.  SELVa has a variety of options for specifying the rules of landscape change, allowing the user to tailor the simulation to his or her needs and to explore various evolutionary scenarios.\n \n"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bazykinlab/SELVa/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bazykinlab/SELVa/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bazykinlab/SELVa"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SELVa"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bazykinlab/SELVa/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Elena Nabieva\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SELVa"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bazykinlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 100544,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "enabieva",
          "type": "User"
        },
        "date_created": "2019-05-14T08:19:18Z",
        "date_published": "2019-05-14T08:26:52Z",
        "description": "This release has more flexible parametrization of the gamma distribution (separate alpha and beta)",
        "html_url": "https://github.com/bazykinlab/SELVa/releases/tag/v0.2",
        "name": "v 0.2",
        "release_id": 17334064,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/bazykinlab/SELVa/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/bazykinlab/SELVa/releases/17334064",
        "value": "https://api.github.com/repos/bazykinlab/SELVa/releases/17334064",
        "zipball_url": "https://api.github.com/repos/bazykinlab/SELVa/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "enabieva",
          "type": "User"
        },
        "date_created": "2018-10-18T07:28:37Z",
        "date_published": "2019-02-23T07:41:04Z",
        "html_url": "https://github.com/bazykinlab/SELVa/releases/tag/v0.1",
        "release_id": 15732494,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/bazykinlab/SELVa/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/bazykinlab/SELVa/releases/15732494",
        "value": "https://api.github.com/repos/bazykinlab/SELVa/releases/15732494",
        "zipball_url": "https://api.github.com/repos/bazykinlab/SELVa/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run SELVa:",
        "parent_header": [
          "SELVa"
        ],
        "type": "Text_excerpt",
        "value": "SELVa is distributed as a Java jar file.\n\nSimulation settings are given in a config file.\n\nSELVa runs the simulation along the user-provided phylogenetic tree.  The tree should be provided in a Newick-format file, and the config file should contain the path to this file (as the value of the `TREE_FILE` parameter).\n\nTo run the simulator, open the command line prompt, go to the directory where the above-mentioned files are and type\n\n`% java \u2013jar Selva.jar config.txt`\n\nCurrently, the jar is built using Java 1.8, so you have to have the corresponding JRE on your system.\n"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 04:36:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started",
        "parent_header": [
          "SELVa"
        ],
        "type": "Text_excerpt",
        "value": "We provide some usage examples\n\nexample_useset: an example of specifying many parameters of the simulation by hand\n\nexample_stochastic: an example of stochastic landscape change with randomly sampled landscapes\n\nexample_age: an example of the current allele's fitness increasing with time (age)\n\nexample_variable_landsccapes: three landscapes, each governed by its own rules (though in this case they largely overlap)\n\nIn each case, the .fasta files are example of output.  In the stochastic case, they will be different for every simulation.\n"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "What SELVa does:",
        "parent_header": [
          "SELVa",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "SELVa simulates point mutations (no indels yet) along a user-provided phylogenetic tree (given in a separate file in the Newick format).  These substitutions are governed by a fitness landscape that is specified by a vector giving the fitness of each allele.  The fitness landscape can change discretely according to rules set by the user in the config file.  The config files also specifies everything else about the simulation, including the sequence alphabet, the length of the sequence, the number of processors used, whether to print the intermediate fitness values, etc.  Detailed information about the config file options is given in the Manual.\n"
      },
      "source": "https://raw.githubusercontent.com/bazykinlab/SELVa/master/README.md",
      "technique": "header_analysis"
    }
  ]
}