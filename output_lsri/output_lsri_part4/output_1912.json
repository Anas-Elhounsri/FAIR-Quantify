{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andrewparkermorgan/argyle"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-05-08T21:09:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-27T06:54:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R package for import, QC and analysis of Illumina Infinium genotyping arrays"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9552496264001974,
      "result": {
        "original_header": "<img src=\"figs/argyle.png\" alt=\"argyle logo\" height=50 /> argyle",
        "type": "Text_excerpt",
        "value": "**An R package for GenotYpes from ILlumina Et al.**\nUtilities for import, QC and (some) analysis of genotyping and hybridization-intensity data from Illumina Infinium arrays using `R`. \n> Morgan AP (2015) `argyle`: an `R` package for analysis of Illumina genotyping arrays. *G3* **6**: 281-286. doi:[10.1534/g3.115.023739](http://dx.doi.org/10.1534/g3.115.023739). \nIf you suspect a bug, please consider reporting it on the [Issues page](https://github.com/andrewparkermorgan/argyle/issues).  To receive (infrequent) updates about `argyle` and interact with other users, subscribe to the [`arglye-users`](https://groups.google.com/d/forum/argyle-users) Google Group.\n \n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9454730617595584,
      "result": {
        "original_header": "Recent updates",
        "type": "Text_excerpt",
        "value": "New in version 0.2: \n* `as.data.frame()` for conversion to friendly-looking genotype table suitable for Excel\n* integrity checks for Illumina BeadStudio output files\n* checks for duplicate sample and marker names in `cbind()` and `rbind()`\n* bug-fixes in functions for conversion between `R/qtl` and `argyle`\n* random access (over markers or samples) to `PLINK` filesets\n* option to store intensitites in compact binary format (`*.bii`) alongside a `PLINK` fileset \n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9231751882104134,
      "result": {
        "original_header": "Interface to <a href=\"https://www.cog-genomics.org/plink2/\">`PLINK`</a>",
        "type": "Text_excerpt",
        "value": "Computation on large SNP array genotyping datasets is not a new problem.  Many common operations -- frequency statistics (sample-wise and marker-wise), differentiation statistics ($F_{st}$ et al), homozygosity checks, association testing, multivariate clustering by PCA and MDS -- are implemented efficiently in the `PLINK` package.  The input formats popularized by `PLINK` are now used by other software in population genetics. \nThis package provides functions to read and write **binary** `PLINK` filesets.  The binary fileset consists of three files: \nAlso included are thin wrappers around many `PLINK` utilities.  These of course require a working executable named `plink` in the user's path. See the user manual for details. \n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/andrewparkermorgan/argyle/wiki"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/andrewparkermorgan/argyle/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andrewparkermorgan/argyle/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "andrewparkermorgan/argyle"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " argyle"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "<img src=\"figs/argyle.png\" alt=\"argyle logo\" height=50 /> argyle"
        ],
        "type": "Text_excerpt",
        "value": "A source version of the package (`*.tar.gz`) and binaries for Mac (`*.tgz`) and Windows (`*.zip`) are available from this repository.  Before installing, all dependencies will need to be in place.  Building from soure requires a reasonably modern `C++` compiler.\n\nIf at all possible, consider installing the most recent version of the package directly from Github with `devtools`.\n```\nlibrary(devtools)\n\n## allow R to look for pacakges in both CRAN and Bioconductor\nsetRepositories(ind = 1:2)\n\n## install from Github source\ninstall_github(\"andrewparkermorgan/argyle\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/andrewparkermorgan/argyle/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/figs/argyle.png"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "argyle"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "andrewparkermorgan"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 274435,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 7895,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewparkermorgan",
          "type": "User"
        },
        "date_created": "2016-05-26T16:00:10Z",
        "date_published": "2016-05-26T16:11:19Z",
        "description": "The first official release of this package addresses a number of `NAMESPACE` issues in previous commits and adds several data-integrity checks.\n",
        "html_url": "https://github.com/andrewparkermorgan/argyle/releases/tag/v0.2.0",
        "name": "argyle-v0.2.0",
        "release_id": 3314095,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/andrewparkermorgan/argyle/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/andrewparkermorgan/argyle/releases/3314095",
        "value": "https://api.github.com/repos/andrewparkermorgan/argyle/releases/3314095",
        "zipball_url": "https://api.github.com/repos/andrewparkermorgan/argyle/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "<img src=\"figs/argyle.png\" alt=\"argyle logo\" height=50 /> argyle"
        ],
        "type": "Text_excerpt",
        "value": "Effort has been made to keep to a minimum the number of package dependencies, subject to the constraint that I don't want to re-implement from scratch what others have done better.\n\n* `data.table`: really fast and efficient handling of big (multi-GB scale) table-style data with low overhead\n* `preprocessCore` (Biodoncuctor): robust quantile normalization routine written in `C`\n* `plyr`: generalizations of base-`R`'s `apply()` family\n* `reshape2`: easy \"flattening\" of matrices to dataframes\n* `digest`: for computing MD5 checksums to check data integrity\n* `ggplot2` (and friends): required for the plotting functions\n* `Rcpp`: for compiled code\n\nThe following are required for some functions but one could get by without them:\n\n* `corpcor`: required for \"fast\"-mode PCA\n\n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:42:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 32
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "<img src=\"figs/argyle.png\" alt=\"argyle logo\" height=50 /> argyle"
        ],
        "type": "Text_excerpt",
        "value": "```\n## load example dataset\ndata(ex)\n\n## high-level summary\nsummary(ex)\n\n## NB: print(.) same as summary, won't flood the terminal\nprint(ex)\n\n## peek at genotype matrix\nhead(ex)\n\n## see marker map and sample metadata\nmarkers(ex)\nsamples(ex)\n\n## subset operations: hard brackets or subset()\nex[ 1:10,1:2 ]\n\n## or stuff like\nx <- subset(ex, chr == \"chrM\")\nx <- subset(ex, sex == 2, by = \"samples\")\n\n## run QC checks and flag samples above thresholds\nex <- run.sample.qc(ex, max.H = 5e3, max.N = 500)\n# how many samples fail QC?\nsummarize.filters(ex)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/andrewparkermorgan/argyle/master/README.md",
      "technique": "header_analysis"
    }
  ]
}