{
  "application_domain": [
    {
      "confidence": 29.86,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing FEATHER",
        "type": "Text_excerpt",
        "value": "If you use FEATHER, please cite the P. Heenan and T. Perkins publication in Biophysical Journal, 2018.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/perkinslab/AppFEATHER"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-06T16:20:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-20T13:28:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "![FEATHER cloning](Data/docs/abstract.png \"Cloning FEATHER\")\n\nThis repository contains FEATHER (*F*orce *E*xtension *A*nalysis using a *T*estable *H*ypothesis for *E*vent *R*ecognition), a freely available technique for finding rupture events in force spectroscopy data.\n\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/perkinslab/AppFEATHER/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/perkinslab/AppFEATHER/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "perkinslab/AppFEATHER"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Description"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/scripts/testing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/AppPython/example.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/abstract.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/1_download.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/2_WindowsInstall.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/3_Setup_1_and_2.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/4_python_run_Setup_3.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/Data/docs/example_zoom.png"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Verifying the install worked",
        "parent_header": [
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "Whether you installed Anaconda or are using your own custom python, you should make sure all of the needed packages are installed by running the following commands in the install folder. Note that Windows must run this as an administrator (e.g., right click on git bash icon and click 'run as administrator').: \n\n- \"C:/ProgramData/Anaconda2/python.exe setup.py install\" (for Windows, no quotes)\n- \"//anaconda/bin/python2 setup.py install\" (for MAC, no quotes)\n\nFor example, in the image below, we have installed FEATHER in the home ('~') subdirectory), and we run setup.py. \n\n![Making sure FEATHER will run](Data/docs/3_Setup_1_and_2.png \"Ensuring FEATHER's dependencies exist\")\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/perkinslab/AppFEATHER/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AppFEATHER"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "perkinslab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 108149,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 9323,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "IGOR Pro",
        "size": 7756,
        "type": "Programming_language",
        "value": "IGOR Pro"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1836,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M",
        "size": 150,
        "type": "Programming_language",
        "value": "M"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "perkinslab",
          "type": "User"
        },
        "date_created": "2018-07-23T14:24:35Z",
        "date_published": "2018-07-23T16:48:05Z",
        "description": "Please 'git pull' the release branch (default branch) for the most updated code. ",
        "html_url": "https://github.com/perkinslab/AppFEATHER/releases/tag/V1.4",
        "name": "Publication + Docs",
        "release_id": 12059888,
        "tag": "V1.4",
        "tarball_url": "https://api.github.com/repos/perkinslab/AppFEATHER/tarball/V1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/perkinslab/AppFEATHER/releases/12059888",
        "value": "https://api.github.com/repos/perkinslab/AppFEATHER/releases/12059888",
        "zipball_url": "https://api.github.com/repos/perkinslab/AppFEATHER/zipball/V1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "perkinslab",
          "type": "User"
        },
        "date_created": "2018-07-05T20:23:38Z",
        "date_published": "2018-07-06T16:26:44Z",
        "description": "Resubmission code for FEATHER; updated to work with simulated datasets and low-force data. ",
        "html_url": "https://github.com/perkinslab/AppFEATHER/releases/tag/V1.1",
        "name": "Resubmission",
        "release_id": 11815010,
        "tag": "V1.1",
        "tarball_url": "https://api.github.com/repos/perkinslab/AppFEATHER/tarball/V1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/perkinslab/AppFEATHER/releases/11815010",
        "value": "https://api.github.com/repos/perkinslab/AppFEATHER/releases/11815010",
        "zipball_url": "https://api.github.com/repos/perkinslab/AppFEATHER/zipball/V1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "Although FEATHER has interfaces for Matlab (tested with version 2017b and 2018a), Igor (tested with 6.37 and 7.04), and Python (tested with 2.7.14), Python 2.7 is needed for FEATHER. The easiest way to install Python 2.7 and the dependencies is the free Anaconda:\n\nhttps://www.anaconda.com/download\n\nAgain, install python2.7 (*not* python3.4). For Matlab and Igor usage, FEATHER assumes there will be a python binary (or .exe for Windows) at:\n\n- \"C:/ProgramData/Anaconda2/\" (for Windows, no quotes)\n- \"//anaconda/bin/python2\" (for MAC, no quotes)\n\nThis is the default for OS X, and also the default for Windows if you choose 'Install for all users', as in this picture:\n\n![Installing Anaconda2 for Windows to correct folder](Data/docs/2_WindowsInstall.png \"Anaconda2 Windows install\")\n\nAs of 2018-6, the above paths are the default option for when Anaconda installs. If you install to a different location and use Matlab or Igor, you will need to update the relevant path in the \".m\" or \".ipf\" (see below).\n\nYou will need the following libraries (installed by default by Anaconda)\n\n- numpy\n- scipy\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the example",
        "type": "Text_excerpt",
        "value": "Open git bash for Windows (or terminal for Mac). Navigate to the repository installed above. If you type dir (ls for Mac), you should see something like:\n\n$ ls\n__init__.py  AppMatlab/  Code/  README.md   UtilGeneral/  UtilIgorPro/\nAppIgor/     AppPython/  Data/  UtilForce/  UtilIgor/\n\nEach language (Matlab, Python, and Igor Pro) has an example file which shows FEATHER working on a polyprotein force-extension curve. The files are located in AppYYY, where YYY is the language name. To run in the following languages:\n\n- Matlab:\n\t- Change to the AppMatlab folder \n\t\t-- Open Matlab, Click 'Run', then click 'Change Folder' when the 'Matlab Editor' dialogue appears\n\t- Run 'feather_example.m' in the AppMatlab folder\n- Igor Pro: \n\t- Open 'Example/MainFEATHER.ipf' in the AppIgor folder\n\t- Run 'ModMainFeather#Main_Windows()' in the command window after compiling\n- Python:\n\t- Run 'main_example.py' from the AppPython folder\n\t- e.g. For windows type 'C:/ProgramData/Anaconda2/python.exe main_example.py' without quotes for Windows in git bash\n\t\n**You should run the python files first**. Here is an example of run FEATHER in python on a Windows machine:\n\n![FEATHER running on windows in python](Data/docs/4_python_run_Setup_3.png \"Running the python example\")\n\nRunning each of the files should result in a plot like the following appearing, with the predicted events marked:\n\n![FEATHER example output graph](Data/docs/example_zoom.png \"FEATHER example output graph\")\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running more examples",
        "type": "Text_excerpt",
        "value": "FEATHER has many more example force-extension curves in the Data subdirectory. If you would lie to run them in Matlab or python, merely change the input file variable from (the default) 'example_0.csv' to whichever file you want to run. In Igor, export one of those .csv files to a .pxp file , as described below. \n\t"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running FEATHER on your own data",
        "parent_header": [
          "Running more examples"
        ],
        "type": "Text_excerpt",
        "value": "\nIt is recommended to run FEATHER through one of the interfaces (python, Matlab, or Igor Pro). These interfaces deal with data management for you. Each example file (Matlab, Python, and Igor Pro, listed above), loads either a pxp or a csv file before calling FEATHER. To run on your data, modify the example to run on your data. In this manner, any data you have loaded in the programming language can be analyzed with FEATHER\n\nYou can also run FEATHER directly from the command line. FEATHER's command line arguments can be found by calling the program with -h, as follows:\n\n\n~~~~\t\t\t\n$:python main_feather.py -h\n usage: main_feather.py [-h] [-tau tau] -threshold threshold -spring_constant\n                       spring_constant -trigger_time trigger_time -dwell_time\n                       dwell_time -file_input file_input -file_output\n                       file_output\n\nPredict event locations in a data file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -tau tau              tau fraction of curve (0,1)\n  -threshold threshold  probability threshold (0,1)\n  -spring_constant spring_constant\n                        spring constant of the probe (N/m)\n  -trigger_time trigger_time\n                        time at which approach ends (s)\n  -dwell_time dwell_time\n                        time between approach end and retract start (s)\n  -file_input file_input\n                        path to the force-extension curve file (string)\n  -file_output file_output\n                        path to output the associated data (string)\n~~~~\t\t\t\n\n Using the command line, the output file is always written as a single column, with one event index per line. The following example will create the event indices in the file \"output.txt\" in the current directory.\n\n~~~~\npython2 main_feather.py\n    -tau 1e-2 \\\n    -threshold 1e-3 \\\n    -spring_constant 6.67e-3 \\\n    -trigger_time 0.382 \\\n    -dwell_time 0.992 \\\n    -file_input ../Data/example_0.csv \\\n    -file_output ./output.txt \\\n~~~~\n\nNote that '\\\\' is the line continuation character. FEATHER accepts the following formats for the input file.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".pxp (Igor Pro) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.pxp' with names formatted as below. \n    - These are Igor Pro files, and should have a separation, force, and time wave, named like:\n\t    - \"[X][#]Sep\", \"[X][#]Force\", and \"[X][#]Time\" (without quotes)\n\t\t- where \"[X]\" is any letters, and \"[#]\" is any digits.\n    - For example, \"Image0994Time\", \"Image0994Sep\",\"Image0994Force\".\n    - If directly using the example .ipf file, the note must have a string like:\n        - \"TriggerTime:[number],DwellTime:[number],SpringConstant[numbers]\" without quotes, where [number] is a value in SI units (*e.g.* 0.123e-6, without brackets) and the values are respectively the end of the approach, the length of the dwell at the surface before retraction, and the spring constant of the force probe.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".mat (Matlab) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.mat', formatted like '-v7.3' (see: mathworks.com/help/matlab/ref/save.html#bvmz_n7), with 'time', 'sep', and 'force' data sets. This is essentially an hdf5 file.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".csv (Generic) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.csv', where there are three comma-delimited columns of length N, which are the time, separation, and force columns, with the following lines:\n    - Line 1: A literal '#', followed by key-value pairs of experimental information, formatted like 'key:value'.\n        - For example (and most relevant to FEATHER) 'SpringConstant:0.001,DwellTime:0,TriggerTime:1'\n    - Line 2: A literal '#EventIndices,formatted as [[start1,end1],...]:', followed by an csv list of event start and end index pairs, formatted like '[start,end]'\n        - For example, '[[1,2],[7,8]]' means two events, where one events starts at index 1 and stops at 2, and the other starts at 7 and ends at 8.\n        - Note: all indices are zero-offset into the remaining data in the csv file. In other words, index 0 would mean line 3\n    -Line 3 to end: the time, separation, and force as comma-delimited columns. \n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom force-extension curves",
        "parent_header": [
          "Running more examples"
        ],
        "type": "Text_excerpt",
        "value": "Some applications (*e.g.* complicated triggering or refolding schemes) may only have a retraction. In this case, a suitable portion of the retraction lacking any events (*e.g.* post-detachment) can be 'pasted' onto the approach. An example of this process is shown in the file AppPython/main_example.py (the function _test_FEATHER_retract_only).\n\nThe easiest way to create these custom waves (as demonstrated in the file mentioend above) is as follows:\n\n1. Get the retraction curve\n2. Determine the part of the retraction curve without events (often, the last 10-50 percent), which will be called the 'psuedo' approach\n3. Prepend the 'psuedo' approach to the retraction.\n       - Offset the separation of the 'psuedo' approach so it and the retraction curve have a common zero\n       - Adjust the time so that t=0 at point 0 of the prepended data and continues monotonically\n       - The total length of the new retraction is now greater than it was before\n4. Run FEATHER, with the DwellTime set to 0 and and TriggerTime set to the total length of the 'psuedo' approach\n\n\n\t"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting",
        "parent_header": [
          "Running more examples"
        ],
        "type": "Text_excerpt",
        "value": "- The most common error for Igor and Matlab is an inaccurate Python binary location. \n\t-- In the relevant example file, check that the path matches the true path of python\n\t-- Try 'which python' in Git bash or 'where python' in Terminal\n- Be sure that the python example file runs before trying Matlab or Igor Pro. If some part of the python install was bad, then nothing will work.\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:23:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Video tutorial",
        "type": "Text_excerpt",
        "value": "The steps in this text document are covered by [this video tutorial](https://www.youtube.com/watch?v=F2N1cFR1FzA \"FEATHER video tutorial\").\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting the Repository",
        "parent_header": [
          "Installing"
        ],
        "type": "Text_excerpt",
        "value": "To install, in git bash (for windows, https://git-scm.com/downloads) or Terminal (Mac/OS X), type in the following:\n\ngit clone --recurse-submodules https://github.com/perkinslab/AppFEATHER.git\n\nWe recommend using the most update-to-date version of the 'release' branch.\n\nThis will install FEATHER to the current directory.  You should see something like the following:\n\n![FEATHER cloning](Data/docs/1_download.png \"Cloning FEATHER\")\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the example",
        "type": "Text_excerpt",
        "value": "Open git bash for Windows (or terminal for Mac). Navigate to the repository installed above. If you type dir (ls for Mac), you should see something like:\n\n$ ls\n__init__.py  AppMatlab/  Code/  README.md   UtilGeneral/  UtilIgorPro/\nAppIgor/     AppPython/  Data/  UtilForce/  UtilIgor/\n\nEach language (Matlab, Python, and Igor Pro) has an example file which shows FEATHER working on a polyprotein force-extension curve. The files are located in AppYYY, where YYY is the language name. To run in the following languages:\n\n- Matlab:\n\t- Change to the AppMatlab folder \n\t\t-- Open Matlab, Click 'Run', then click 'Change Folder' when the 'Matlab Editor' dialogue appears\n\t- Run 'feather_example.m' in the AppMatlab folder\n- Igor Pro: \n\t- Open 'Example/MainFEATHER.ipf' in the AppIgor folder\n\t- Run 'ModMainFeather#Main_Windows()' in the command window after compiling\n- Python:\n\t- Run 'main_example.py' from the AppPython folder\n\t- e.g. For windows type 'C:/ProgramData/Anaconda2/python.exe main_example.py' without quotes for Windows in git bash\n\t\n**You should run the python files first**. Here is an example of run FEATHER in python on a Windows machine:\n\n![FEATHER running on windows in python](Data/docs/4_python_run_Setup_3.png \"Running the python example\")\n\nRunning each of the files should result in a plot like the following appearing, with the predicted events marked:\n\n![FEATHER example output graph](Data/docs/example_zoom.png \"FEATHER example output graph\")\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running more examples",
        "type": "Text_excerpt",
        "value": "FEATHER has many more example force-extension curves in the Data subdirectory. If you would lie to run them in Matlab or python, merely change the input file variable from (the default) 'example_0.csv' to whichever file you want to run. In Igor, export one of those .csv files to a .pxp file , as described below. \n\t"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".pxp (Igor Pro) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.pxp' with names formatted as below. \n    - These are Igor Pro files, and should have a separation, force, and time wave, named like:\n\t    - \"[X][#]Sep\", \"[X][#]Force\", and \"[X][#]Time\" (without quotes)\n\t\t- where \"[X]\" is any letters, and \"[#]\" is any digits.\n    - For example, \"Image0994Time\", \"Image0994Sep\",\"Image0994Force\".\n    - If directly using the example .ipf file, the note must have a string like:\n        - \"TriggerTime:[number],DwellTime:[number],SpringConstant[numbers]\" without quotes, where [number] is a value in SI units (*e.g.* 0.123e-6, without brackets) and the values are respectively the end of the approach, the length of the dwell at the surface before retraction, and the spring constant of the force probe.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".mat (Matlab) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.mat', formatted like '-v7.3' (see: mathworks.com/help/matlab/ref/save.html#bvmz_n7), with 'time', 'sep', and 'force' data sets. This is essentially an hdf5 file.\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": ".csv (Generic) formatting",
        "parent_header": [
          "Running more examples",
          "Running FEATHER on your own data"
        ],
        "type": "Text_excerpt",
        "value": "- Files ending with '.csv', where there are three comma-delimited columns of length N, which are the time, separation, and force columns, with the following lines:\n    - Line 1: A literal '#', followed by key-value pairs of experimental information, formatted like 'key:value'.\n        - For example (and most relevant to FEATHER) 'SpringConstant:0.001,DwellTime:0,TriggerTime:1'\n    - Line 2: A literal '#EventIndices,formatted as [[start1,end1],...]:', followed by an csv list of event start and end index pairs, formatted like '[start,end]'\n        - For example, '[[1,2],[7,8]]' means two events, where one events starts at index 1 and stops at 2, and the other starts at 7 and ends at 8.\n        - Note: all indices are zero-offset into the remaining data in the csv file. In other words, index 0 would mean line 3\n    -Line 3 to end: the time, separation, and force as comma-delimited columns. \n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom force-extension curves",
        "parent_header": [
          "Running more examples"
        ],
        "type": "Text_excerpt",
        "value": "Some applications (*e.g.* complicated triggering or refolding schemes) may only have a retraction. In this case, a suitable portion of the retraction lacking any events (*e.g.* post-detachment) can be 'pasted' onto the approach. An example of this process is shown in the file AppPython/main_example.py (the function _test_FEATHER_retract_only).\n\nThe easiest way to create these custom waves (as demonstrated in the file mentioend above) is as follows:\n\n1. Get the retraction curve\n2. Determine the part of the retraction curve without events (often, the last 10-50 percent), which will be called the 'psuedo' approach\n3. Prepend the 'psuedo' approach to the retraction.\n       - Offset the separation of the 'psuedo' approach so it and the retraction curve have a common zero\n       - Adjust the time so that t=0 at point 0 of the prepended data and continues monotonically\n       - The total length of the new retraction is now greater than it was before\n4. Run FEATHER, with the DwellTime set to 0 and and TriggerTime set to the total length of the 'psuedo' approach\n\n\n\t"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Troubleshooting",
        "parent_header": [
          "Running more examples"
        ],
        "type": "Text_excerpt",
        "value": "- The most common error for Igor and Matlab is an inaccurate Python binary location. \n\t-- In the relevant example file, check that the path matches the true path of python\n\t-- Try 'which python' in Git bash or 'where python' in Terminal\n- Be sure that the python example file runs before trying Matlab or Igor Pro. If some part of the python install was bad, then nothing will work.\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/perkinslab/AppFEATHER/V1.4/README.md",
      "technique": "header_analysis"
    }
  ]
}