{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "selected cLoops citations",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
        ],
        "type": "Text_excerpt",
        "value": "1. Cao, Yaqiang, et al. \"Widespread roles of enhancer-like transposable elements in cell identity and long-range genomic interactions.\" Genome research 29.1 (2019): 40-52.\n1. Alavattam, Kris G., et al. \"Attenuated chromatin compartmentalization in meiosis and its maturation in sperm development.\" Nature structural & molecular biology 26.3 (2019): 175-184.\n1. Luo, Zhengyu, et al. \"Reorganized 3D genome structures support transcriptional regulation in mouse spermatogenesis.\" Iscience (2020): 101034.\n1. Johnstone, Sarah E., et al. \"Large-Scale Topological Changes Restrain Malignant Progression in Colorectal Cancer.\" Cell (2020).\n1. Zhen, Tao, et al. \"RUNX1 and CBF\u03b2-SMMHC transactivate target genes together in abnormal myeloid progenitors for leukemia development.\" Blood, The Journal of the American Society of Hematology 136.21 (2020): 2373-2385.\n1. Ma, Sai, et al. \"Chromatin Potential Identified by Shared Single-Cell Profiling of RNA and Chromatin.\" Cell 183.4 (2020): 1103-1116. \n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-06-26T05:28:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-10T07:11:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Accurate and flexible loops calling tool for 3D genomic data."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
        ],
        "type": "Text_excerpt",
        "value": "Chromosome conformation capture (3C) derived high-throughput sequencing methods such as ChIA-PET,HiChIP and Hi-C provide genome-wide view of chromatin organization. Fine scale loops formed by interactions of regulatory elements spanning hundreds kilobases can be detected from these data. Here we introduce cLoops ('see loops'),a common loops calling tool for ChIA-PET, HiChIP and high-resolution Hi-C data. Paired-end tags (PETs) are first classified as self-ligation and inter-ligation clusters using an optimized unsupervisied clustering algorithm. The significances of the inter-ligation clusters are then estimated using permutated local background. \n\nIf you find cLoops useful, please give us a star at github and cite our paper :\n\nOfficial version: \n***Yaqiang Cao, Zhaoxiong Chen, Xingwei Chen, Daosheng Ai, Guoyu Chen, Joseph McDermott, Yi Huang, Guo Xiaoxiao, Jing-Dong J Han, Accurate loop calling for 3D genomic data with cLoops, Bioinformatics, , btz651, https://doi.org/10.1093/bioinformatics/btz651***\n\nPreprint bioRxiv:\n***Yaqiang Cao, Xingwei Chen, Daosheng Ai, Zhaoxiong Chen, Guoyu Chen, Joseph McDermott, Yi Huang, Jing-Dong J. Han (2018) \"Accurate loop calling for 3D genomic data with cLoops\" bioRxiv 465849; doi: https://doi.org/10.1101/465849***\n\nYou can also find the cLoops wiki in Chinese [here](https://github.com/YaqiangCao/cLoops/wiki)\n\n***Please kindly refer to [cLoops2](https://github.com/YaqiangCao/cLoops2) for more analytical modules.***\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9933359814223253,
      "result": {
        "original_header": "Other data",
        "type": "Text_excerpt",
        "value": "In theory cLoops could be applied to more 3D genomic data as long as there are enriched clusters in the heatmap, however, parameters and significance cutoffs should be tuned. We're now trying to make cLoops work for [GRID-seq](https://www.nature.com/articles/nbt.3968) and [Capture HiC](https://www.nature.com/articles/ng.3286). If you have designed a new sequencing based 3D genomic method and want to try cLoops, please contact caoyaqiang0410@gmail.com first. \n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9267370942101288,
      "result": {
        "original_header": "Questions &amp; Answers",
        "type": "Text_excerpt",
        "value": "Please address questions and bugs to Yaqiang Cao (caoyaqiang0410@gmail.com) or Zhaoxiong Chen (chenzhaoxiong@picb.ac.cn), using the subject as \"cLoops: questions about ###\" to escape misjudged as spams.   \n2. inter-chromosomal loops    \nSo far cLoops doesn't support calling inter-chromosomal loops, as there are few significant inter-chromosomal loops called for our tested data and it takes a long time to run. However, we'll try to implement a script for calling this kind of loops for next version as soon as there's available testing data. \n3. For multiple eps and minPts parameters, how cLoops determine the output loops?          \nFor example, eps=5000,7500,10000 and minPts=5,10,20, so total there will be 9 clustering carried out to find potential loop regions, candidate with PETs less than max(minPts) (here 20) will be filtered. Further, for overlapped loops, after the significance test, cLoops will output the one with highest significance by binomial test.\nThe reason for multiple times of clustering with eps and minPts is that,1) though DBSCAN clustering (or other) is great, there will be some random result due to the visit order of points, even though we try to control it; 2) no idea theory estimation of the parameters. 3) Hi-C data quality may different from one set to another. \n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/wiki"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YaqiangCao/cLoops"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/examples/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://views.whatilearened.today/views/github/YaqiangCao/cLoops.svg"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/cLoops.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/chiapet_disCutoff.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/chiapet_washU.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/hichip_juicebox_example.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/FingerprintPlot.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YaqiangCao/cLoops/raw/master/pngs/K562_H3K27ac_HiChIP_stripes.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/pngs/Trac-looping.png"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
        ],
        "type": "Text_excerpt",
        "value": "If you are familar with [conda](https://docs.conda.io/en/latest/), cLoops could be installed very easily with following after clone and cd in it. \n```\ngit clone https://github.com/YaqiangCao/cLoops\ncd cLoops\nconda env create --name cLoops --file cLoops_env.yaml\nconda activate cLoops \npython setup.py install\n```\nThen every time just use **conda activate cLoops** to run cLoops enviroment. \n\nOr you prefer the old school, install from scratch. \n[scipy](https://www.scipy.org/),[numpy](http://www.numpy.org/), [seaborn](https://seaborn.pydata.org/), [pandas](http://pandas.pydata.org/) and [joblib](https://pythonhosted.org/joblib/) are required. **Joblib version 0.11 is requried to avoid parallel computating bugs caused by it for newer version. Install it through pip2.7 install --user joblib==0.11.** If you have problems for installing scipy, please refer to [Anaconda](https://docs.continuum.io/anaconda/) or [SAGE](http://www.sagemath.org/).\n```\nwget https://github.com/YaqiangCao/cLoops/archive/0.93.tar.gz\ntar xvzf 0.93.tar.gz\ncd cLoops-0.93\npython setup.py install    \n```\n\nTo test whether cLoops is successfully installed:\n```\ncd examples\nsh run.sh\n```\n\n\nPlease refer to [here](https://docs.python.org/2/install/index.html) to install cLoops to customized path.\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "3d-genome, algorithm, bioinformatics, chia-pet, chromatin-interaction, chromatin-loops, chromatin-stripes, clustering, dbscan, example-data, hi-c, hichip, loops-calling, ngs, pipeline, python, sequencing, stripes, tool, trac-looping"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 YaqiangCao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://tokei.rs/b1/github/YaqiangCao/cLoops?category=code"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cLoops"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YaqiangCao"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 304914,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2019-05-02T13:46:10Z",
        "date_published": "2019-05-03T16:58:57Z",
        "description": "Just small updates like the first command line in example/run.sh to keep updates.",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/v0.93a",
        "name": "cLoops v0.93a",
        "release_id": 17138976,
        "tag": "v0.93a",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/v0.93a",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/17138976",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/17138976",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/v0.93a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2019-03-11T01:45:17Z",
        "date_published": "2019-03-11T01:51:09Z",
        "description": "1. updated DBSCAN algorithm as CHEN Zhaoxiong's version, much faster for clustering, nearly 1/2 time saved compared to old DBSCAN version. \r\n2. updated method for visiting PETs, now using CHEN Zhaoxiong's method of binary search, much faster.\r\n3. new DBSCAN algorithm designed by us called blockDBSCAN  is uploaded and under intense fine-tune for cLoops. \r\n\r\nHappy loop-calling. ",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/0.93",
        "name": "cLoops v0.93",
        "release_id": 16023909,
        "tag": "0.93",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/0.93",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/16023909",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/16023909",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/0.93"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2018-10-11T00:34:21Z",
        "date_published": "2018-10-11T00:38:07Z",
        "description": "Some small updates as following:\r\n1) Optimized combining clustering results, much faster\r\n2) -max_cut option added to use the maximal estimated self-ligation and inter-ligation distance cutoff when multiple eps or minPts feed to cLoops. This option works well for Trac-looping data. ",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/v0.92",
        "name": "cLoops v0.92",
        "release_id": 13363224,
        "tag": "v0.92",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/v0.92",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/13363224",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/13363224",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/v0.92"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2018-05-24T03:54:53Z",
        "date_published": "2018-05-24T04:02:29Z",
        "description": "1. Initial version of callStripes added, which can call stripes (defined in [***The Energetics and Physiological Impact of Cohesin Extrusion***](https://www.cell.com/cell/abstract/S0092-8674(18)30404-5) ). We tested it using K562 H3K27ac HiChIP data, not fully tested in deep-sequenced Hi-C data. ",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/0.91",
        "name": "cLoops v0.91",
        "release_id": 11149228,
        "tag": "0.91",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/0.91",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/11149228",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/11149228",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/0.91"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2018-04-09T04:38:07Z",
        "date_published": "2018-04-09T08:11:14Z",
        "description": "1.  Pre-set parameters for our tested ChIA-PET, Hi-C and HiChIP data, with the parameter -m (--mode) to set, -m 0 accepts user settings; -m 1 for sharp peak like ChIA-PET data; -m 2 for broad peak like ChIA-PET data; -m 3 for deep sequenced Hi-C (~200 million cis PETs); -m 4 for HiChIP (~100 million cis PETs);    \r\n2. Multiple minPts options added;    \r\n3. Fixed bug of merging overlapped loops;    \r\n4. The generation of self-ligation and inter-ligation PETs distance distribution plot can be determine by user using -plot option;    \r\n5. Turn off deLoops for further development;   \r\n6. Roll back cDBSCAN for Yaqiang Cao's version, Zhaoxiong Chen's version is under further improvement;\r\n7. fixed several small bugs\r\n8. for old option like -j 1, now set -j is OK. \r\n\r\n",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/0.9",
        "name": "cLoops v0.9",
        "release_id": 10451113,
        "tag": "0.9",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/10451113",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/10451113",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2018-02-04T02:12:58Z",
        "date_published": "2018-02-04T02:16:14Z",
        "description": "1. New cDBSCAN by CHEN Zhaoxiong, much faster for HiChIP and Hi-C data. \r\n2. New query method for genomic regions by CAO Yaqiang, much faster and less memory usage for second  step loops' significance estimation. ",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/0.6",
        "name": "cLoops v0.6 ",
        "release_id": 9522804,
        "tag": "0.6",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/9522804",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/9522804",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "YaqiangCao",
          "type": "User"
        },
        "date_created": "2017-11-20T09:25:11Z",
        "date_published": "2017-11-20T09:26:17Z",
        "description": "This is version for our original paper. ",
        "html_url": "https://github.com/YaqiangCao/cLoops/releases/tag/0.5",
        "name": "cLoops v0.5",
        "release_id": 8583485,
        "tag": "0.5",
        "tarball_url": "https://api.github.com/repos/YaqiangCao/cLoops/tarball/0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/YaqiangCao/cLoops/releases/8583485",
        "value": "https://api.github.com/repos/YaqiangCao/cLoops/releases/8583485",
        "zipball_url": "https://api.github.com/repos/YaqiangCao/cLoops/zipball/0.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 02:51:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 109
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
        ],
        "type": "Text_excerpt",
        "value": "Run ***cLoops -h*** to see all options. Key parameters are ***eps*** and ***minPts*** . ***minPts*** defines at least how many PETs are required for a candidate loop, ***eps*** defines the distance requried for two PETs being neighbors. For practically usage to tune parameters, using the PETs in the smallest chromosome except chrY and chrM, then run a series of ***eps*** and ***minPts***,all rounds clustering result will be combined to determine your parameters. \n\nSince version 0.8, cLoops added a parameter **--mode(-m)**, which is the pre-set parameters for different types of data. -m 0 accepts user settings; -m 1 equals -eps 500,1000,2000 -minPts 5 for sharp peak like ChIA-PET data; -m 2 equals -eps 1000,2000,5000 -minPts 5 for broad peak like ChIA-PET data; -m 3 equals -eps 5000,7500,10000 -minPts 20,30,40,50 -hic for deep sequenced Hi-C data (~200 million cis PETs); -m 4 equals -eps 2500,5000,7500,10000 -minPts 20,30 -hic for ~100 million cis PETs HiChIP data;for ~30-40 miilion cis PETs HiChIP data, we suggested -eps 2500,5000,7500,10000 -minPts 10,15,20 -hic. You can always add more eps and smaller minPts to get more candidate loops and maybe more significant loops, however, it takes longer time.\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Mapped PETs in [BEDPE format](http://bedtools.readthedocs.io/en/latest/content/general-usage.html), compressed files with gzip are also accepected, following columns are necessary: chrom1 (1st),start1 (2),end1 (3),chrom2 (4),start2 (5),end2 (6),strand1 (9),strand2 (10). For the column of name or score, \".\" is accepcted. Columns are seperated by \"\\t\".\nFor example as following :\n```\nchr1\t9945\t10095\tchr1\t248946216\t248946366\t.\t.\t+\t+\nchr1\t10034\t10184\tchr1\t180987\t181137\t.\t.\t+\t-\nchr1\t10286\t10436\tchr1\t181103\t181253\t.\t.\t+\t-\n```\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The main output is a loop file and a PDF file or PDFs for the plot of self-ligation and inter-ligation PETs distance distributions.\nFor the .loop file, columns and explaination are as follwing:\n\ncolumn | name | explaination\n------ | ---- | ------------\n0th | loopId | Id for a loop, like chr1-chr1-1\n1th | ES | Enrichment score for the loop, caculated by observed PETs number divided by the mean PETs number of nearby permutated  regions\n2th | FDR | false discovery rate for the loop, caculated as the number of permutated regions that there are more observed PETs than the region  \n3th | binomal\\_p-value | binomal test p-value for the loop\n4th | distance | distance (bp) between the centers of the anchors for the loop\n5th | hypergeometric\\_p-value | hypergeometric test p-value for the loop\n6th | iva | genomic coordinates for the left anchor, for example, chr13:50943050-50973634\n7th | ivb | genomic coordinates for the right anchor\n8th | poisson_p-value | poisson test p-value for the loop\n9th | ra | observed PETs number for the left anchor\n10th | rab | observed PETs number linking the left and right anchors\n11th | rb | observed PETs number for the right anchor\n12th | poisson\\_p-value\\_corrected | Bonferroni corrected poisson p-value according to number of loops for each chromosome\n13th | binomal\\_p-value\\_corrected | Bonferroni corrected binomal p-value according to number of loops for each chromosome\n14th | hypergeometric\\_p-value\\_corrected | Bonferroni corrected hypergeometric p-value according to number of loops for each chromosome\n15th | significant | 1 or 0, 1 means we think the loop is significant compared to permutated regions. You can ignore this and customize your cutoffs using above values by visualization a small chromosome in the [Juicebox](https://github.com/theaidenlab/juicebox) or [washU](http://epigenomegateway.wustl.edu/).\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping"
        ],
        "type": "Text_excerpt",
        "value": "All following examples source data, result and log file can be found in the [examples](https://github.com/YaqiangCao/cLoops_supplementaryData/tree/master/examples).\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. ChIA-PET data",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "We provide a test data from GM12878 CTCF ChIA-PET ([GSM1872886](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM1872886)), just the chromosome 21 mapped to hg38. Run the command as following then you will get the result if cLoops is successfuly installed. The ***eps*** is auto estimated and default ***minPts*** is 5,**-w** option will generate loops for visualization in [washU browser](http://epigenomegateway.wustl.edu/browser/),**-j** option will generate loops for visualization in [Juicebox](https://github.com/theaidenlab/juicebox) .\n```\nwget https://github.com/YaqiangCao/cLoops/blob/master/examples/GSM1872886_GM12878_CTCF_ChIA-PET_chr21_hg38.bedpe.gz\ncLoops -f GSM1872886_GM12878_CTCF_ChIA-PET_chr21_hg38.bedpe.gz -o chiapet -w -j -s -m 1 -plot\n```      \nFor ChIA-PET data with sharp peak, like the CTCF here, you will get the inter-ligation and self-ligation PETs distance distribution like following, the two kinds of PETs well seperated using auto estimated ***eps***:\n![](https://github.com/YaqiangCao/cLoops/raw/master/pngs/chiapet_disCutoff.png)\n\nIf your experimental data doesn't look like this by auto estimated ***eps***, which could be true for some ChIA-PET data with broad peak (like H3K27ac), please use the small chromosome (chr21 in human and chr19 in mouse) run a series of ***eps***, then chose the smallest one that generate the well seperated distance distribution to run cLoops, or just using the series. \n\nWe recommend washU to visualize the loops, by the script jd2washU we can convert the cLoops temp files to washU long range track, and [bedtools](http://bedtools.readthedocs.io/en/latest/),[bgzip & tabix](http://www.htslib.org/doc/tabix.html) are needed in the command enviroment. \n```\njd2washU -d chiapet -o chiapet       \n``` \n\nWith other ChIP-seq data, you can get following plot:\n![](https://github.com/YaqiangCao/cLoops/raw/master/pngs/chiapet_washU.png)\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. HiChIP data",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "We provide test data of GM12878 cohesin HiChIP two biological replicates, just the chromosome 21 mapped to hg38. Run the command as following to call merged loops. ***-s*** option is used to keep working directory and temp files, which could be used by scripts of deLoops, jd2washU (BEDTOOLS needed), jd2juice (Juicer needed), jd2fingerprint and jd2saturation. ***-hic*** option means using cutoffs design for Hi-C like data, see above. \n```\nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSE80820_GM12878_cohesin_HiChIP_chr21_hg38_bio1.bedpe.gz \nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSE80820_GM12878_cohesin_HiChIP_chr21_hg38_bio2.bedpe.gz \ncLoops -f GSE80820_GM12878_cohesin_HiChIP_chr21_hg38_bio1.bedpe.gz,GSE80820_GM12878_cohesin_HiChIP_chr21_hg38_bio2.bedpe.gz -o hichip -m 4 -j -s -w \n```    \nTo convert cLoops temp files to hic file for juicebox, [juicer tools](https://github.com/theaidenlab/juicer/wiki/Download) are required. Java 1.7 or 1.8 is also required to run juicer tools. Script named ***juicer_tools*** with the following content should be put inside a directory included in command environment, then enable its executable privilege.\n```\n#!/bin/sh\njava -jar /PATH/TO/JUICER_TOOLS_JAR_DIRECTORY/juicer_tools.1.8.9_jcuda.0.8.jar $@\n```\nThen use jd2juice:\n```\njd2juice -d hichip -o hichip -org hg38 \n``` \nWith the adjustment of resolution, color range and how to show the loops, then you can get following visualization:\n![](https://github.com/YaqiangCao/cLoops/raw/master/pngs/hichip_juicebox_example.png) \n\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Hi-C data",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "We provide test data from GM12878 Hi-C, just the chromosome 21 mapped to hg38. Run the the command as following to call loops.\n```\nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM1551552_GM12878_HiC_chr21_hg38.bedpe.gz \ncLoops -f GSM1551552_GM12878_HiC_chr21_hg38.bedpe.gz -o hic -w -j -eps 5000,7500,10000 -minPts 20,30 -s -hic \n```   \nor just run following for version >= 0.9:\n\n```\ncLoops -f GSM1551552_GM12878_HiC_chr21_hg38.bedpe.gz -o hic -w -j -s -m 3\n```   \n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Fingerprint plot for data qualities comparasion of loops calling",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Run following and you will get [a PDF plot](https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/compare_fingerprint.pdf), the far from the random line, the better for the data used to call loops by cLoops. You can using this to estimate data qualities between samples.\n```\njd2fingerprint -d chiapet,hichip,hic -plot 1 -o compare -bs 2000\n```\n![](https://github.com/YaqiangCao/cLoops/raw/master/pngs/FingerprintPlot.png)\n\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. call stripes",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Since v0.91 (2018-05-17 release), we introduce a new script callStripe, which can identify stripes (a structure defined in [***The Energetics and Physiological Impact of Cohesin Extrusion***](https://www.cell.com/cell/abstract/S0092-8674(18)30404-5)). However, the original paper hasn't released their data, so we demonstrate the the result using H3K27ac HiChIP data in K562, which from the heatmap we can observe a lot of similar stripes.\nWe provided the H3K27ac HiChIP data in K562 chr21 for testing. Parameters tuning maybe needed for other data, please email caoyaqiang0410@gmail.com for tuning parameters for your data. \n```\nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSE101498_K562_HiChIP_H3K27ac_rep1.bedpe.gz\nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSE101498_K562_HiChIP_H3K27ac_rep2.bedpe.gz\nwget https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSE101498_K562_HiChIP_H3K27ac_rep3.bedpe.gz\n#first call loops to save the middle files, you can kill cLoops once the .jd files are generated\ncLoops -f GSE101498_K562_HiChIP_H3K27ac_rep1.bedpe.gz,GSE101498_K562_HiChIP_H3K27ac_rep2.bedpe.gz,GSE101498_K562_HiChIP_H3K27ac_rep3.bedpe.gz -o K562_HiChIP_H3K27ac_chr21 -minPts 20,30 -eps 2500,5000,7500,10000 -hic -s -j -c chr21\n#call stripes\ncallStripes -d K562_HiChIP_H3K27ac_chr21 -o K562_HiChIP_H3K27ac_chr21 -c chr21 -j\n#for visualization in juicebox\njd2juice -d K562_HiChIP_H3K27ac_chr21/ -o K562_HiChIP_H3K27ac_chr21 -org hg38\n\n```\nAfter above command, you will get two files (with suffix juicebox.txt,[K562_HiChIP_H3K27ac_chr21_x_horizontal_juicebox.txt](https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/K562_HiChIP_H3K27ac_chr21_x_horizontal_juicebox.txt) and [K562_HiChIP_H3K27ac_chr21_y_vertical_juicebox.txt](https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/K562_HiChIP_H3K27ac_chr21_y_vertical_juicebox.txt) that could be used for furthur analysis and loaded in Juicebox as 2D annotation as following example:\n![](https://github.com/YaqiangCao/cLoops/raw/master/pngs/K562_H3K27ac_HiChIP_stripes.png)\nTwo extra files with file type as .stripe ([K562_HiChIP_H3K27ac_chr21_x_horizontal.stripe](https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/K562_HiChIP_H3K27ac_chr21_x_horizontal.stripe) and [K562_HiChIP_H3K27ac_chr21_y_vertical.stripe](https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/K562_HiChIP_H3K27ac_chr21_y_vertical_juicebox.txt)) is similar to that of .loop file.\nPlease note, it's a initial experimental function added in v0.91, not well tested for all data. We'll make improvements when the deep-sequenced Hi-C data is available.\n"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Trac-looping data",
        "parent_header": [
          "cLoops: loop-calling for ChIA-PET, Hi-C, HiChIP and Trac-looping",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "We provide test data of [Trac-looping data](https://www.nature.com/articles/s41592-018-0107-y) from resting CD4+ cell, just the chromosome 21 mapped to hg19 obtained from [GEO:GSE87254](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE87254). Run the the command as following to call loops. This new datasets also show cLoops is applied to new developed 3D mapping data.The option \"-max_cut\" is a new option in v0.92 to select more distant loops from the distance cutoffs determined from multiple ***eps*** and ***minPts*** combinations. \n```\n#download data from our site\nwget -c https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM2326178_CD4_Resting_Trac-looping_rep1-tech1_chr21_hg19.bedpe.gz\nwget -c https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM2326179_CD4_Resting_Trac-looping_rep2_chr21_hg19.bedpe.gz\nwget -c https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM2326180_CD4_Resting_Trac-looping_rep1-tech2_chr21_hg19.bedpe.gz \nwget -c https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM2782295_CD4_Resting_Trac-looping_rep3_chr21_hg19.bedpe.gz \nwget -c https://github.com/YaqiangCao/cLoops_supplementaryData/blob/master/examples/GSM2782296_CD4_Resting_Trac-looping_rep4_chr21_hg19.bedpe.gz \n#run cLoops, -cut 2000 was used to remove close PETs before calling loops\ncLoops -f GSM2326178_CD4_Resting_Trac-looping_rep1-tech1_chr21_hg19.bedpe.gz,GSM2326179_CD4_Resting_Trac-looping_rep2_chr21_hg19.bedpe.gz,GSM2326180_CD4_Resting_Trac-looping_rep1-tech2_chr21_hg19.bedpe.gz,GSM2782295_CD4_Resting_Trac-looping_rep3_chr21_hg19.bedpe.gz,GSM2782296_CD4_Resting_Trac-looping_rep4_chr21_hg19.bedpe.gz -o Trac-looping_chr21 -eps 500,1000,2000,5000 -minPts 5 -p 1 -w -j -cut 2000 -s -c chr21 -max_cut\n#conver cLoops tmp files to washU interaction tracks for visualizaiton\njd2washU -d Trac-looping_chr21 -o Trac-looping_chr21 \n```\nBy uploading the interaction tracks and cLoops called loops (with suffix of _loops_washU.txt ) to washU, you can visualize the result for example as following. Meanwhile, cLoops called loops are more distant than their original called loops. We're keeping improving cLoops.\n![](https://github.com/YaqiangCao/cLoops/blob/master/pngs/Trac-looping.png)\n\n--------"
      },
      "source": "https://raw.githubusercontent.com/YaqiangCao/cLoops/master/README.md",
      "technique": "header_analysis"
    }
  ]
}