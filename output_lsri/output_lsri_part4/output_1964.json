{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/usuyama/hapmuc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-05-21T05:35:49Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-28T00:29:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HapMuC: Somatic Mutation Calling Using Heterozygous Germ Line Variants Near Candidate Mutations (Bioinformatics)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9959747090726518,
      "result": {
        "original_header": "HapMuC",
        "type": "Text_excerpt",
        "value": "HapMuC is a **somatic mutation caller**, which can utilize the information of heterozygous germline variants near candidate mutations. It takes a tumor bam and a normal bam as inputs, and generates a list of candidate somatic mutations.\n \n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/usuyama/hapmuc/wiki"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/usuyama/hapmuc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/usuyama/hapmuc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "usuyama/hapmuc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HapMuC"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/usuyama/hapmuc/master/utils/make_windows.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/usuyama/hapmuc/master/utils/to_bam.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare build dependencies",
        "parent_header": [
          "HapMuC",
          "How to build"
        ],
        "type": "Text_excerpt",
        "value": "* Boost 1.45.0 (modified to include only the subset of the library used by HapMuC)\n* SAMtools 0.1.19\n    * SAMtools has two dependencies (vid. [Samtools - Primer](http://biobits.org/samtools_primer.html#InstallingSAMtools)):\n        * [GNU curses library](http://www.gnu.org/software/ncurses/)\n        * [ZLib compression library](http://zlib.net/)\n* BEDTools 2.17.0\n    * BEDTools also depends on ZLib (vid. [BEDTools FAQ](https://code.google.com/p/bedtools/wiki/FAQ#Problems_compiling_BEDTools))\n\n\nTo prepare them, please execute the following script in your shell:\n```sh\n% make dependencies\n```\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get ready for associated scripts",
        "parent_header": [
          "HapMuC",
          "How to build"
        ],
        "type": "Text_excerpt",
        "value": "* Ruby 1.9.3\n* Python 2.7.3.\n\nAlso, the Python script requires the [fisher module](https://pypi.python.org/pypi/fisher/) for calculating the p-values of Fisher's exact test.\n\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9499025999717008,
      "result": {
        "original_header": "Build HapMuC",
        "type": "Text_excerpt",
        "value": "```sh\n% make\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932722256668493,
      "result": {
        "original_header": "Simulation",
        "type": "Text_excerpt",
        "value": "A dataset and scripts for simulation are available here: https://github.com/usuyama/hapmuc_simulation .\n \n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/usuyama/hapmuc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "HapMuC"
        ],
        "type": "Text_excerpt",
        "value": "Copyright &copy; 2013 Naoto Usuyama  \nReleased under the [GNU General Public License, Version 3.0][GPL].\n\nThis implementation forked from the program [Dindel][dindel], which is licensed under the GPLv3.  \n\n[GPL]: http://www.gnu.org/licenses/gpl.html\n[dindel]: http://www.sanger.ac.uk/resources/software/dindel/\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hapmuc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "usuyama"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 237687,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31934,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 14747,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2827,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2335,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare build dependencies",
        "parent_header": [
          "HapMuC",
          "How to build"
        ],
        "type": "Text_excerpt",
        "value": "* Boost 1.45.0 (modified to include only the subset of the library used by HapMuC)\n* SAMtools 0.1.19\n    * SAMtools has two dependencies (vid. [Samtools - Primer](http://biobits.org/samtools_primer.html#InstallingSAMtools)):\n        * [GNU curses library](http://www.gnu.org/software/ncurses/)\n        * [ZLib compression library](http://zlib.net/)\n* BEDTools 2.17.0\n    * BEDTools also depends on ZLib (vid. [BEDTools FAQ](https://code.google.com/p/bedtools/wiki/FAQ#Problems_compiling_BEDTools))\n\n\nTo prepare them, please execute the following script in your shell:\n```sh\n% make dependencies\n```\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to run",
        "parent_header": [
          "HapMuC"
        ],
        "type": "Text_excerpt",
        "value": "HapMuC workflow is consisting from three steps. Let's try it on the sample bam files, which we prepared in the tests folder.\nPlease go to `tests/data/1`."
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step1: *samtools mpileup*",
        "parent_header": [
          "HapMuC",
          "How to run"
        ],
        "type": "Text_excerpt",
        "value": "../../../libs/samtools-0.1.19/samtools mpileup -B -f ../random_ref.fasta normal.bam > normal.pileup\n../../../libs/samtools-0.1.19/samtools mpileup -B -f ../random_ref.fasta tumor.bam > tumor.pileup\n```"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step2: making candidate windows",
        "parent_header": [
          "HapMuC",
          "How to run"
        ],
        "type": "Text_excerpt",
        "value": "sh ../../../utils/make_windows.sh tumor.pileup normal.pileup ./\n```\nOutputs:\n* ./cand_somatic\n    * Candidate somatic mutations, which passed the minimum criteria. (NOTE: you can set the parameters in `utils/search_variants.rb` )\n* ./cand_hetero_germline\n    * Heterozygous germline variants. Also, you can check the criteria in `utils/search_variants.rb`.\n* ./windows\n    * A list of candidate windows, which is generated based on the above two files using `bedtools window`.\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step3: mutation calling by HapMuC algorithm",
        "parent_header": [
          "HapMuC",
          "How to run"
        ],
        "type": "Text_excerpt",
        "value": "../../../bin/hapmuc -a tumor.bam -b normal.bam -f ../random_ref.fasta -w windows -o result/mc\n```\nYou can check the results in `results/mc.calls.txt`\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 08:53:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get ready for associated scripts",
        "parent_header": [
          "HapMuC",
          "How to build"
        ],
        "type": "Text_excerpt",
        "value": "* Ruby 1.9.3\n* Python 2.7.3.\n\nAlso, the Python script requires the [fisher module](https://pypi.python.org/pypi/fisher/) for calculating the p-values of Fisher's exact test.\n\n"
      },
      "source": "https://raw.githubusercontent.com/usuyama/hapmuc/master/README.md",
      "technique": "header_analysis"
    }
  ]
}