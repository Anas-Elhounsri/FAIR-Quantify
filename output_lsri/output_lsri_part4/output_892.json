{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GRO2LAM"
        ],
        "type": "Text_excerpt",
        "value": "   The publication associated with this code is found here: [s00894-019-4011-x]\n   \n   Hern\u00e1n Ch\u00e1vez Thielemann, Annalisa Cardellini, Matteo Fasano, Luca Bergamasco, Matteo Alberghini, Gianmarco Ciorra, Eliodoro Chiavazzo, Pietro Asinari. From GROMACS to LAMMPS: GRO2LAM A converter for molecular dynamics software.  Journal of Molecular Modeling (2019) 25: 147.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hernanchavezthielemann/GRO2LAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-19T17:07:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-08T15:24:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gromacs to Lammps simulation converter "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "GRO2LAM"
        ],
        "type": "Text_excerpt",
        "value": "   This program was designed for easy conversion of solvated structures between \n   the GROningen MAchine for Chemical Simulations ([Gromacs]) and the \n   Large-scale Atomic Molecular Massively Parallel Simulator ([Lammps]). \n   It is a python 2.7 modular routine used to convert [Gromacs] input files to [Lammps] input files,\n   which include topology, force field coefficients and simulation commands.\n   "
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8838185079498831,
      "result": {
        "original_header": "Code Datastream Highlights",
        "type": "Text_excerpt",
        "value": "  In this section, the most important routines in the GRO2LAM package are described. \n  > grotolam.py\n  \n  Works as cap of the library, and calls the GUI (main_gui.py). \n  > main_gui.py\n  \n  Background window, it handles the three different stages in the menu bar as well as the help button. It relies on conversion_gui.py, script_gui.py, run_gui.py, popup.py and tk_lib.py.\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n     |  Gro2Lam_GUI\n     |      Graphic User Interface\n     |  \n     |  Methods defined here:\n     |  \n     |  browsefile(self, entry, ext=None)\n     |      Browse a file <button> action binder\n     |  \n     |  create_conversion_gui(self)\n     |      Hook to create conversion GUI\n     |  \n     |  create_run_gui(self)\n     |      Hook to create run GUI\n     |  \n     |  create_script_gui(self)\n     |      Hook to create script GUI\n     |  \n     |  createfileentry(self, parent_frame, fi_text, _def_fi_, **kwargs) \n     |      Creates a row in which it is possible to search for a file\n     |  \n     |  createmainPennon(self)\n     |      Improve readibility\n     |  \n     |  quit_hook(self, event=None)\n     |  \n     |  swap_hook(self)\n     |  \n     |  swapbody(self, _pbody_)\n     |      Deletes and clean the last generated body\n```\n> conversion_gui.py\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\nclass Conversion(Tkinter.Frame)\n     |  Script creation graphical user interface.\n     |  Methods defined here:\n     |  \n     |  __init__(self, master=None, **options)\n     |  \n     |  atomstyle(self)\n     |      In this case just one, but it could be modified \n     |      to be generic, accepting <row>, <text> and <options>\n     |  \n     |  build_finalbuttons(self)\n     |  \n     |  build_solvation_section(self)\n     |  \n     |  check_solvation_inputs(self, _app_aux_, _vbs_=False)\n     |  \n     |  config_solvation(self)\n     |  \n     |  createWidgets(self)\n     |  \n     |  create_conversion_gui(self)\n     |  \n     |  get_entriesvalues(self)\n     |      ---   app entry getter   ----\n     |      Mainly to obtain values beside check buttons\n     |  \n     |  getdata_and_convert(self)\n     |  \n     |  radio_part(self, _s_row_, _text_, _desc_=[''], _vals_=[])\n     |  \n     |  solvastuff(self)\n     |      If this point is reached, some button changed\n```\n> script_gui.py\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n        Script_GUI\n    \n    class Script_GUI(Tkinter.Frame)\n     |  Script creation graphical user interface.\n     |  Methods defined here:\n     |  \n     |  __init__(self, master=None, **options)\n     |  \n     |  build_finalbuttons(self)\n     |      Final Buttons section builder\n     |  \n     |  check_datafile(self, _bflag_=None)\n     |      Function to get the max atom number \n     |      It is also used in case of no Gromacs direct data conversion\n     |      to make a check if that file is ok\n     |  \n     |  config_restrain(self)\n     |  \n     |  createWidgets(self)\n     |      Create the script GUI\n     |  \n     |  createWidgets_n_pack(self)\n     |  \n     |  create_main_section(self)\n     |      Section for main input values\n     |  \n     |  further_config_script(self)\n     |  \n     |  write_script(self)\n```\n> run_gui.py\n \nThis file neats everything that comes out as a popup.\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n        FilePopUp\n        Message_box\n    Tkinter.Toplevel(Tkinter.BaseWidget, Tkinter.Wm)\n        PromptPopUp\n            WarningPopUp2\n        PromptPopUp_wck\n    AboutPopUp\n    PromptPopUp_old\n    SaveAsPopUp\n\nFUNCTIONS\n    message_box(message='', title='Message box', **options)\n         Creates a message box through the implementation of an instance\n         of class Message_box. These messages can be info, warning and error\n```        \n \nHome made tkinter library.\n```\nCLASSES\n    Tkinter.Widget(Tkinter.BaseWidget, Tkinter.Pack, Tkinter.Place, Tkinter.Grid)\n        Drop_Down_List\n\nclass Drop_Down_List(Tkinter.Widget)\n     |  The lean version of the Ttk Combobox from ttk library\n     |  \n     |  Methods defined here:\n     |  \n     |  current(self, newindex=None)\n     |  \n     |  set(self, value)\n\nFUNCTIONS\n    bottom_hline_deco(row, func=None)\n        Adds a sunken line in the bottom of a tkinter function\n    \n    create_check_row(_s_row_, _text_, func, _desc_=[''])\n        Creates a tkinter entry with a check button\n\n    create_entry(_main_row_, _desc_txt, _def_txt_, t_len, ckbc=None, fn=None)\n        Creates a tkinter entry\n    \n    create_file_entry(_master_, ups_frame, fi_text, _default_file)\n        Creates a row in which is possible to search for a file\n    \n    createmenubar(_root_window_, _listofentriesdicts_)\n        Under development. \n        Input format example: \n            <class app>\n            [{ 'title' : 'Title1', 'title_com' : (print , '>command11<') },\n            { 'title' : 'Title2',\n            'cascade' : (('cnd_label' ,'>command31<'),('cnd_label' ,'>command33<'),\n            ('separator'),('cnd_label' ,'>command33<'))}]\n    \n    format_dec(_rnt_or_lc_, _create_=True, _pack_=True, _lastline_=True)\n        Can be re-thought as a function wrapper or as a class... but for now works perfectly\n    \n    generate_listbox(row, fill_list)\n    \n    get_entriesvalue(entries_container)\n        ---   entry getter app ----\n        Mainly to obtain values of entries\n ```   \n \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/hernanchavezthielemann/GRO2LAM/wiki"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hernanchavezthielemann/GRO2LAM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hernanchavezthielemann/GRO2LAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRO2LAM"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/fEVcyxY.gif"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://i.imgur.com/gbI5H7y.gif"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GRO2LAM"
        ],
        "type": "Text_excerpt",
        "value": "   To download the latest version there are at least three ways:\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step by step",
        "parent_header": [
          "GRO2LAM",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "   The download page of GRO2LAM can be found at the following link:\n\n     https://github.com/hernanchavezthielemann/GRO2LAM/archive/27ene19.zip\n\n   The installation package can be downloaded through the bash console as:\n\n    ~$ wget https://github.com/hernanchavezthielemann/GRO2LAM/archive/27ene19.zip\n    \n   This will download a zipped file, that you can uncompress with right click or with the command:\n\n    ~$ unzip 27ene19.zip\n    \n   Then, make sure that terminal is in the GROTOLAM folder. For example:\n    \n    user@system:~/Downloads/GRO2LAM-27ene19$\n    \n   Once there, execute the setup file through the terminal as:\n    \n    ~$ python setup\n   \n   Then, without changing the folder, execute the run script:\n    \n    ~$ ./run\n    \n   After the ./run command, an intuitive graphical user interface should appear.\n   This GUI interface will guide the user through all the inputs needed to perform the conversion correctly, as shown in the next section.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9943915548726348,
      "result": {
        "original_header": "GRO2LAM",
        "type": "Text_excerpt",
        "value": "   Gromacs to Lammps simulation converter\n   \n   <p align=\"center\">\n   <img src=\"https://i.imgur.com/fEVcyxY.gif\" title=\"source: imgur.com\" />\n   </p> \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999983068193,
      "result": {
        "original_header": "Version",
        "type": "Text_excerpt",
        "value": "   ### Stable\n   GRO2LAM version 1.25 (27 Jan 2019) - BETA\n   \n   ### Beta-Stable\n   GRO2LAM version 1.3 (06 Jan 2021) - BETA-beta (Python 3 compatible)\n   \n    wget https://raw.githubusercontent.com/hernanchavezthielemann/utils/master/grotolam/G2L_iBeta && bash G2L_iBeta\n   \n   \n   \n   :new:New features :  \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Files",
        "type": "Text_excerpt",
        "value": "    ./run\n    ./lib/README.md\n    ./lib/LICENSE\n    ./lib/setup\n    ./lib/gui/__init__.py\n    ./lib/misc/data.py\n    ./lib/misc/file.py\n    ./lib/gui/img/help.ppm\n    ./lib/misc/version.py\n    ./lib/__init__.py\n    ./lib/handling/gromacs.py\n    ./lib/gui/img/gear.ppm\n    ./lib/gui/conversion_gui.py\n    ./lib/gui/img/small_logo2.ppm\n    ./lib/handling/__init__.py\n    ./lib/misc/__init__.py\n    ./lib/grotolam.py\n    ./lib/gui/img/logo2.ppm\n    ./lib/gui/main_gui.py\n    ./lib/misc/warn.py\n    ./lib/gui/run_gui.py\n    ./lib/handling/lammps.py\n    ./lib/gui/img/logo.ppm\n    ./lib/gui/custom_row.py\n    ./lib/gui/script_gui.py\n    ./lib/gui/popup.py\n    ./lib/gui/img/README.md\n    ./lib/gui/tk_lib.py\n    ./lib/docs/README.md\n    ./lib/gui/img/file.ppm\n \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924980955261016,
      "result": {
        "original_header": "Code Datastream Highlights",
        "type": "Text_excerpt",
        "value": "  > main_gui.py\n  \n  Background window, it handles the three different stages in the menu bar as well as the help button. It relies on conversion_gui.py, script_gui.py, run_gui.py, popup.py and tk_lib.py.\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n     |  Gro2Lam_GUI\n     |      Graphic User Interface\n     |  \n     |  Methods defined here:\n     |  \n     |  browsefile(self, entry, ext=None)\n     |      Browse a file <button> action binder\n     |  \n     |  create_conversion_gui(self)\n     |      Hook to create conversion GUI\n     |  \n     |  create_run_gui(self)\n     |      Hook to create run GUI\n     |  \n     |  create_script_gui(self)\n     |      Hook to create script GUI\n     |  \n     |  createfileentry(self, parent_frame, fi_text, _def_fi_, **kwargs) \n     |      Creates a row in which it is possible to search for a file\n     |  \n     |  createmainPennon(self)\n     |      Improve readibility\n     |  \n     |  quit_hook(self, event=None)\n     |  \n     |  swap_hook(self)\n     |  \n     |  swapbody(self, _pbody_)\n     |      Deletes and clean the last generated body\n```\n> conversion_gui.py\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\nclass Conversion(Tkinter.Frame)\n     |  Script creation graphical user interface.\n     |  Methods defined here:\n     |  \n     |  __init__(self, master=None, **options)\n     |  \n     |  atomstyle(self)\n     |      In this case just one, but it could be modified \n     |      to be generic, accepting <row>, <text> and <options>\n     |  \n     |  build_finalbuttons(self)\n     |  \n     |  build_solvation_section(self)\n     |  \n     |  check_solvation_inputs(self, _app_aux_, _vbs_=False)\n     |  \n     |  config_solvation(self)\n     |  \n     |  createWidgets(self)\n     |  \n     |  create_conversion_gui(self)\n     |  \n     |  get_entriesvalues(self)\n     |      ---   app entry getter   ----\n     |      Mainly to obtain values beside check buttons\n     |  \n     |  getdata_and_convert(self)\n     |  \n     |  radio_part(self, _s_row_, _text_, _desc_=[''], _vals_=[])\n     |  \n     |  solvastuff(self)\n     |      If this point is reached, some button changed\n```\n> script_gui.py\n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n        Script_GUI\n    \n    class Script_GUI(Tkinter.Frame)\n     |  Script creation graphical user interface.\n     |  Methods defined here:\n     |  \n     |  __init__(self, master=None, **options)\n     |  \n     |  build_finalbuttons(self)\n     |      Final Buttons section builder\n     |  \n     |  check_datafile(self, _bflag_=None)\n     |      Function to get the max atom number \n     |      It is also used in case of no Gromacs direct data conversion\n     |      to make a check if that file is ok\n     |  \n     |  config_restrain(self)\n     |  \n     |  createWidgets(self)\n     |      Create the script GUI\n     |  \n     |  createWidgets_n_pack(self)\n     |  \n     |  create_main_section(self)\n     |      Section for main input values\n     |  \n     |  further_config_script(self)\n     |  \n     |  write_script(self)\n```\n> run_gui.py\n \n```\nCLASSES\n    Tkinter.Frame(Tkinter.Widget)\n        Run_GUI\n    \n    class Run_GUI(Tkinter.Frame)\n     |  Run script graphical user interface.\n     |  Methods defined here:\n     |  \n     |  __init__(self, master=None, **options)\n     |  \n     |  build_finalbuttons(self)\n     |      Final Buttons\n     |  \n     |  createWidgets(self)\n     |      create the script gui\n```\n> popup.py \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9986929644074094,
      "result": {
        "original_header": "Repository:",
        "type": "Text_excerpt",
        "value": "   https://github.com/hernanchavezthielemann/GRO2LAM \n\n[s00894-019-4011-x]: https://doi.org/10.1007/s00894-019-4011-x\n[Lammps]: http://lammps.sandia.gov/\n[Gromacs]: http://www.gromacs.org/\n \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.899944241852836,
      "result": {
        "original_header": "Code Datastream Highlights",
        "type": "Text_excerpt",
        "value": "  > run\n  \n  Starts GRO2LAM calling grotolam_launcher() function in grotolam.py. \n> tk_lib.py \n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "converter, gromacs, gui, lammps, lammps-script-creator, solvated"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Hernan Chavez Thielemann\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "GRO2LAM"
        ],
        "type": "Text_excerpt",
        "value": "   [MIT](./LICENSE)\n   Copyright 2018 Hernan Chavez Thielemann, Annalisa Cardellini, Matteo Fasano, Gianmarco Ciorra, Luca Bergamasco, Matteo Alberghini, Eliodoro Chiavazzo, Pietro Asinari\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GRO2LAM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hernanchavezthielemann"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 226235,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hernanchavezthielemann",
          "type": "User"
        },
        "date_created": "2020-07-05T21:57:55Z",
        "date_published": "2020-07-05T22:02:21Z",
        "description": "Adding new features",
        "html_url": "https://github.com/hernanchavezthielemann/GRO2LAM/releases/tag/v1.0.3_b",
        "name": "v1.0.3_beta",
        "release_id": 28236607,
        "tag": "v1.0.3_b",
        "tarball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/tarball/v1.0.3_b",
        "type": "Release",
        "url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/28236607",
        "value": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/28236607",
        "zipball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/zipball/v1.0.3_b"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hernanchavezthielemann",
          "type": "User"
        },
        "date_created": "2019-05-22T20:45:47Z",
        "date_published": "2019-05-22T20:48:15Z",
        "description": "Patched untested flows at 90%",
        "html_url": "https://github.com/hernanchavezthielemann/GRO2LAM/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 17527225,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/17527225",
        "value": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/17527225",
        "zipball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hernanchavezthielemann",
          "type": "User"
        },
        "date_created": "2019-04-15T12:05:14Z",
        "date_published": "2019-04-15T12:13:23Z",
        "description": "First stable release!",
        "html_url": "https://github.com/hernanchavezthielemann/GRO2LAM/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 16764088,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/16764088",
        "value": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/releases/16764088",
        "zipball_url": "https://api.github.com/repos/hernanchavezthielemann/GRO2LAM/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:14:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 68
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quantum start",
        "parent_header": [
          "GRO2LAM",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "   Copy&paste the following command in your bash console and execute it, this will download and execute Grotolam in about 5 seconds:\n\n    wget https://raw.githubusercontent.com/hernanchavezthielemann/utils/master/grotolam/G2L_installer && bash G2L_installer\n    \nE.g.\n    \n\n * First create a folder in your desktop (lets say \"Untitled Folder\")\n * Inside that folder open a terminal ( in Ubuntu: right click inside the folder-space to open a context menu > Open in Terminal )\n * In that terminal copy&paste the previous \"quantum start\" command:\n     \n       wget https://raw.githubusercontent.com/hernanchavezthielemann/utils/master/grotolam/G2L_installer && bash G2L_installer\n \n * Then hit intro key to start the setup\n * If you have no errors, at this point a folder called GRO2LAM-27ene19 should exist in a path like:\n \n       /home/*YourUser*/Desktop/Untitled Folder/GRO2LAM-27ene19\n         \n * Now, inside that folder it is possible to find the \"run\" file,  that was generated during the setup.\n * To run this file open a terminal in that folder, and execute *./run* or *python run*\n\n    "
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "GRO2LAM",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "   Download the compressed package of GRO2LAM:\n   \n     wget https://github.com/hernanchavezthielemann/GRO2LAM/archive/27ene19.zip\n  \n   Decompress it:\n   \n     unzip 27ene19.zip\n   \n   Make sure that terminal is in the GRO2LAM folder, then:\n   \n     cd GRO2LAM-*\n   \n   Execute the setup file through the terminal as follows:\n   \n     ~/Desktop/GRO2LAM-27ene19$python setup\n   \n   Then, without changing the folder, execute the run script:\n   \n     ~/Desktop/GRO2LAM-27ene19$./run\n  \n   After that, an intuitive graphical user interface should appear.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "GRO2LAM"
        ],
        "type": "Text_excerpt",
        "value": " To perform the conversion, there are two ways to proceed:\n   \n   The \"easy one\":\n   \n   \n   * First select the gro and top files.\n   * Then press the autoload button.\n   * Finally press the convert button,  you can press this last one using space-key also.\n   \n   \n   The second option would be:\n   \n   \n   * First select gro and top files\n   * Then select the itp files containing the defaults, atomtypes and bondtypes directives.\n   * Finally press the convert button,  you can press this last one using space-key also.\n   \n   "
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI",
        "parent_header": [
          "GRO2LAM",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "   In the GIF below, the typical protocol to convert Gromacs input file into Lammps input files is summed up.\n   \n   <p align=\"center\">\n   <img src=\"https://i.imgur.com/gbI5H7y.gif\" title=\"source: imgur.com\" />\n   </p>\n   \n   This procedure will create [Lammps] simulation files with setup parameters inherited from [Gromacs] input files.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GUI input data",
        "parent_header": [
          "GRO2LAM",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "   In this section, the simulation data that can be imported are listed (that is the entries required by the GUI).\n\n  #### Lammps data file generation:\n   > Enter the gro file\n   \n   Gromacs .gro file with the system coordinates, and the box size specified at the end of file.\n   \n   > Enter the top file\n   \n   Gromacs .top (topology) file with [ moleculetype ], [ atoms ], [ bonds ], [ pairs ], [ angles ], [ dihedrals ], [ system ] and [ molecules ]. Any #include is omitted. In the atoms section, at least one atom should be declared.\n   \n   > Enter the forcefield file\n   \n   Gromacs forcefield.itp file with [ defaults ] section, also with nbfun, comb-rule, gen-pairs, fudgeLJ and fudgeQQ columns. Any #include or #define is omitted.\n   \n   > Enter the non bonded file\n   \n   Gromacs forcefield_nonbonded.itp file with [ atomtypes ], where [ nonbond_params ] and [ pairtypes ] are ignored.\n   \n   > Enter the bonded file\n   \n   Gromacs forcefield_bonded.itp file with [ bondtypes ], [ angletypes ] and [ dihedraltypes ].\n   \n   > Choose an atom style\n   \n   Atom style according to Lammps styles, which can be full, charge, molecular, angle, bond and atomic.\n   \n   > Solvation atoms\n   \n   >> yes\n   \n   Water atoms are taken into account, and water configuration popup is enabled.\n   \n   >> Configuration Popup\n   \n   The following data can be extracted from the water_model.itp according the user chosen model. \n   \n   >>> O in the non bonded file\n   \n   Label for the oxigen atom in the non bonded .itp file.\n   \n   >>> H in the non bonded file\n   \n   Label for the hydrogen atom in the non bonded .itp file.\n   \n   >>> O in the .gro file\n   \n   Label for the oxigen atom in the .gro file.\n   \n   >>> H in the .gro file\n   \n   Label for the hydrogen atom in the .gro file.\n   \n   >>> H - O partial charge\n   \n   Partial charge increment magnitude from H to O, equal to the whole H charge (or the half of O).\n   \n   After inserting the solvation parameters, data must be saved by clicking on the Save button.\n   \n   >> no\n   \n   Solvation molecules are not converted by GRO2LAM.\n   \n  #### Lammps input file generation:\n  \n  ##### Main page\n  >Timestep [fs]\n  \n  The simulation time step, expressed in femtoseconds (floating point number).\n  \n  >NVE steps  [#ts]\n  \n  Number of steps in the NVE ensembles (integer number).\n  \n  >NVT steps  [#ts]\n  \n  Number of steps in the NVT ensembles (integer number).\n  \n  >Temperature at start:end [K]\n  \n  Temperature gradient to apply in the NVT ensemble, as start_temperature:ending_temperature (floating point numbers).\n \n  >Temperature damping [fs]\n  \n  Characteristic time constant of the thermostat.\n  \n  >NPT steps  [#ts]\n  \n  Number of steps in the NPT ensembles (integer number).\n  \n  >Pressure at start:end  [atm]\n  \n  Pressure gradient to apply in the NPT ensemble, as start_presure:ending_presure (floating point numbers).\n  \n  >Pressure damping [fs]\n  \n  Characteristic time constant of the barostat.\n  \n  >Temperature at start:end [K]\n  \n  Same thing that in the NVT case, but for the thermostat coupled with the barostat in the NPT runs.\n  \n  >Temperature damping [fs]\n  \n  Same thing that in NVT, but for the thermostat coupled with the barostat in the NPT runs.\n  \n  ##### Advanced Settings\n  Section to change further default simulation parameters. \n  \n  >Thermo output every  [#ts]\n  \n  Print thermodynamic info on time steps that are a multiple of this number of time steps.\n  >Atom mapping\n  \n  Array, in each processor stores a lookup table of length as the atoms in the system, else, hash value uses a hash table, being slower.\n  >Pairwise interactions\n  \n  To set wich set of formulas will LAMMPS use to compute pairwise interactions. (where, cut = cut off distance, long = long-range interactions, coul = Coulombics and zero = do not compute any pairwise and build neighbor list)\n  >L-J/Buck rcutoff  [\u00c5]\n  \n  Global cut off distance in Angstrom for Lennard Jones or Buckingham interactions.\n  >Coulomb rcutoff  [\u00c5]\n  \n  Global cutoff distance in Angstrom for Coulombic interactions.\n  >Neighbor skin distance  [\u00c5]\n  \n  Extra skin distance beyond force cutoff in Angstrom.\n  >Long-range solver\n  \n  Define a long-range solver to use each timestep to compute long-range Coulombic and/or 1/r^6 interactions.\n  >Long-range relative error\n  \n  Desired relative RMS error in per-atom forces calculated by the long-range-solver.\n  >Interaction 1-2:1-3:1-4\n  \n  Sets weighting coefficients for pairwise contributions between atoms that are permanently bonded to each other.\n  The 1st of the 3 numbers is the factor on 1-2 atom pairs, atoms directly bonded to each other. The 2nd number is the factor on 1-3 atom pairs which are separated by 2 bonds or 1 angle. And the 3rd is the factor on 1-4 atom pairs which are those separated by 3 bonds or 2 angles.\n  >Neighbor delay  [#ts] \n  \n  Delays the building until this many time steps since last build.\n  >Neighbor update  [#ts]\n  \n  Build the neighbor list every this many time steps.\n  >Pressure control\n  \n  To specify an isometric or anisometric external stress tensor in the constant-pressure simulation adjust 3 dimensions. In triclinic simulation boxes adjust 6 dimensions.\n  >Force mixing rule  \n  \n  Mixing rule that affects pair coefficients for pairwise interactions, mixing the \"Pair Coeffs\" of the data file, according to geometric, arithmetic or sixth power combination formulas.\n  >Velocity creation Temp  [K]\n  \n  Set the velocities of all atoms in the system as the specified temperature demands.\n  >Energy minimization tolerance\n  \n  Stopping tolerance for force (force units) when an energy minimization of the system is performed.\n  >Simulation order\n  \n  The order in which the simulated ensembles perform. The possible keys are: NVE, NVT, NPT, R and M. The key R stands for restart point and M stands for energy minimization. The different components must be separated by a minus dash, as example NVE-M-M-NVT-NPT-NPT-NVT.\n  >Shake tolerance\n  \n  Accuracy tolerance of SHAKE solution for 20 iterations.\n  >Shake bonds [b#]\n  \n  Bond types that will be constrained.\n  >Shake angles [a#]\n  \n  Angle types that will be constrained.\n  ##### Restraint\n  Definition of the harmonic potentials to restrain some groups of atoms in their initial positions. \n  \n  #### Lammps simulation launching:\n  This GUI can be employed to test the congruency of the Lammps data and input files.\n\n  >Select the script to run\n  \n  A valid input data file to run.\n\n  >Machine\n  \n  Select the Lammps run file, according to the version installed on the local machine.\n\n  >Cores\n  \n  Select the amount of computational cores to be used for the Lammps simulation, according to the characteristics of the local machine.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command line interface",
        "parent_header": [
          "GRO2LAM",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "   Currently, there is no implementation of command line interface. The only available command is:\n   ```bash\n   ~$ python setup -t\n   ```\n   that creates a test GUI.\n"
      },
      "source": "https://raw.githubusercontent.com/hernanchavezthielemann/GRO2LAM/27ene19/README.md",
      "technique": "header_analysis"
    }
  ]
}