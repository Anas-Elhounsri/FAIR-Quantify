{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bio-phys/BioEn"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-06-25T10:13:44Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-02T00:17:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioEn - Bayesian Inference Of ENsembles"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "BioEn integrates a broad range of experimental data to refine ensembles\nof structures. For a detailed description of the procedures and the\nalgorithm, we refer to [Hummer2015].\n\n.. image::  /img/bioen.png\n\nOverview of the BioEn software\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe BioEn software consists of two Python packages:\n\n* `optimize <https://github.com/bio-phys/BioEn/tree/master/bioen/optimize>`_ provides algorithms to solve the optimization problem underlying ensemble refinement by reweighting. This package can be used independently of the 'analyze' package.\n* `analyze <https://github.com/bio-phys/BioEn/tree/master/bioen/analyze>`_ uses the 'optimize' package to integrate a wide range of experimental data and simulations in a user friendly way.\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bio-phys/BioEn/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/scattering/scattering_reweighting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/scattering/scattering_reweighting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/conformation-refinement/conformer_refinement.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/conformation-refinement/conformer_refinement.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/POTRA/rotamer_refinement_potra.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/POTRA/rotamer_refinement_potra.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/POTRA/calculate_deer_signals.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/POTRA/calculate_deer_signals.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/single_trace/rotamer_refinement.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/single_trace/rotamer_refinement.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/CD_data/cd_data_reweighting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/CD_data/cd_data_reweighting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/ala5_optimize/ala5-bioen.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/ala5_optimize/ala5-bioen.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "FAQs",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "Q: All my optimization yield \"fmin\\_final = 0.0\". What is going on?\n\nA: This could indicate that the path to fast libraries was not properly\nset before installing the package.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bio-phys/BioEn/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bio-phys/BioEn"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioEn - Bayesian Inference Of ENsembles"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/download_dependencies.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/install_dependencies.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/gsl-2.5/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/gsl-2.5/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/gsl-2.5/test_gsl_histogram.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/gsl-2.5/siman/siman_test_driver.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/liblbfgs-1.10/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/third-party/liblbfgs-1.10/ltmain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/scripts/setup_install_home.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/scripts/build_packages.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/scripts/setup_develop_home.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/scripts/upload_wheels_gitlab.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/scripts/build_documentation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/scattering/run_bioen_ipynb_scattering.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/conformation-refinement/run_bioen_ipynb_deer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/POTRA/run_bioen_ipynb_deer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/DEER/rotamer-refinement/single_trace/run_bioen_ipynb_deer.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/examples/CD_data/run_bioen_ipynb_cd.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "Dependencies\n~~~~~~~~~~~~\n\nIn addition to the multidimensional minimizers from SciPy, BioEN\nsupports the minimizers provided by the GSL library and by the LIBLBFGS\nlibrary which do increase the performance significantly. To obtain these\nlibraries, the following options are possible, where option 1 is\nrecommended for most users:\n\n1. In the directory 'third-party', copies of the source codes of GSL and\n   LIBLBFGS including a script to build and install them are provided.\n   After having run the build script './install\\_dependencies.sh', both\n   the libraries are placed into the '~/.local' directory where BioEN's\n   'setup.py' will find and use them automatically.\n2. Alternatively, you may install GSL and LIBLBFGS to a default location\n   using the package manager of your operating system, where 'setup.py'\n   will find them typically, as well.\n3. Finally, on some HPC systems, GSL and LIBLBFGS may already be\n   provided via environment modules. In this case, load the respective\n   modules before installing BioEN.\n\nNote that the environment variables 'GSL\\_HOME' and 'LIBLBFGS\\_HOME' are\nevaluated by 'setup.py'. If set, they are assumed to contain the path to\na valid installation of GSL or LIBLBFGS which will then be used. Setting\nthese variables is only necessary if the libraries were installed to a\nnon standard location, e.g. with Homebrew on the Mac.\n\nInstallation\n~~~~~~~~~~~~\n\nOnce the dependencies are available (see above), install the package as\nfollows:\n\n::\n\n    BIOEN_OPENMP=1 python setup.py install [--user]\n\nBIOEN\\_OPENMP set to 1 enables OpenMP parallelism. On OSX use\nBIOEN\\_OPENMP=0.\n\nYou can use the optional '--user' flag for a local installation which\ndoes not require root privileges. When you install BioEn locally, please\nmake sure that '$HOME/.local/bin' is on your path. You can add the\nfolder to the path, e.g., by adding 'export PATH=$HOME/.local/bin:$PATH'\nto your '.bashrc' file. In a conda-environment, install the package\nwithout the '--user' flag.\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bio-phys/BioEn/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayesian-inference, biological-simulations, data-integration, deer, electron-paramagnetic-resonance, molecular-dynamics, nmr, peldor, saxs, structural-biology, xray-scattering-experiments"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioEn"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bio-phys"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 175764,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 62396,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 29554,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5653,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies and Software Requirements",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "-  Python 2.7 or Python 3\n-  Python packages: numpy, scipy, Cython, pyyaml, MDAnalysis, pandas\n-  GCC (>= 4.9)\n-  GSL (>= 2.1)\n-  LIBLBFGS (>= 1.10)\n\nCopies of GSL and LIBLBFGS are included in the source distribution of\nBioEn. To run Jupyter notebooks ``*.ipynb`` in ./examples/ you need\nadditionally\n\n-  Jupyter (https://jupyter.org/)\n-  Python packages: matplotlib\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:54:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Help",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "Please, if you have an issue with the software, open an issue on the github repository https://github.com/bio-phys/bioen/issues.\n\nIf you have any questions or suggestions, please contact bioen@biophys.mpg.de.\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "BioEn - Bayesian Inference Of ENsembles"
        ],
        "type": "Text_excerpt",
        "value": "We want to integrate a diverse set of experimental data with simulated\nobservables. Therefore, we implemented three types of chi-square\ncalculations to use different kinds of experimental data:\n\n-  Generic data (chi-square optimization without nuisance parameters)\n-  DEER/PELDOR data (includes the modulation depth as a nuisance\n   parameter)\n-  SAXS/WAXS/SANS data (includes the scaling parameter and constant\n   offset as a nuisance parameter)\n\nBioEn can also be used to obtain **precision DEER distances from\nspin-label ensemble refinement** [Reichel2018], for which we provide an\n`example <https://github.com/bio-phys/BioEn/tree/master/examples/DEER/rotamer-refinement/POTRA>`__.\n\n(1) Generic data\n~~~~~~~~~~~~~~~~\n\nThe term generic data refers to experimental data, where measurements\nprovide single data points including noise (e.g. NOE, PREs, chemical\nshifts, J-couplings, distances, chemical cross-links etc). To use\ngeneric data, the bioen options should contain\n``--experiments generic``. In the experimental data file (e.g.\n``./test/generic/data/exp-generic.dat``), the ID (first column) of a\ndata point (second column) and its noise (third column) has to be\nprovided. The ID refers than to the file from the simulated data (e.g.\n``./test/generic/data/sim-noe_1-generic.dat``), in which each line is\nthe simulated data point from a single ensemble member (e.g., simualted\ndata extracted from a trajectory of a MD simulation).\n\nThe full list of options for generic data is:\n\n.. code:: bash\n\n    --sim_path\n    --sim_prefix\n    --sim_suffix\n    --exp_path\n    --exp_prefix\n    --exp_suffix\n    --data_IDs\n    --data_weight\n    --input_pkl\n    --output_pkl\n\nPlease take note of the options ``--sim_path``, ``--sim_prefix``,\n``--sim_sufffix``, ``--exp_path``, ``--exp_prefix``, and\n``--exp_suffix``. These are useful to define the path to and names of\nthe files. Defaults are provided.\n\n(2) Experimental data from DEER/PELDOR measurements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor the reweighting with experimental data including a nuisance\nparameter (here: modulation depth), the structure of the input files is\nextended and more information is needed. To use DEER data, the bioen\noptions should contain ``--experiments deer``. In the case of DEER data,\nwe can either perform reweighting over an ensemble of conformations with\n`averaged spin-label rotamer\nstates <https://github.com/bio-phys/BioEn/blob/master/examples/DEER/conformation-refinement/conformer_refinement.ipynb>`__\nor over an `ensemble of spin-label rotamer states with a single protein\nconformation <https://github.com/bio-phys/BioEn/blob/master/examples/DEER/rotamer-refinement/POTRA/rotamer_refinement_potra.ipynb>`__.\n\nIf an ensemble of conformations is investigated, provide for each label\npair (e.g. 319-259) a single file of the experimental data (e.g.,\n``./test/deer/data/exp-319-259-deer.dat``) and ensemble member (e.g.,\n``./test/deer/data/conf0-319-259-deer.dat``). The experimental data file\ncontains:\n\n.. code:: bash\n\n    #time   #raw        #polyfit\n    0.0     0.9886054   1.0\n    0.008   0.97737117  0.99091340848\n    0.016   1.0         0.988879614369\n    0.024   0.97842962  0.984631477624\n    0.032   0.98185696  0.983339482409\n\nThe simulated data file (e.g. ``conf0-319-259-deer.dat``) contains:\n\n.. code:: bash\n\n    #time   #simulated_data\n    0.0     1.0\n    0.008   0.99984697806\n    0.016   0.999388027044\n    0.024   0.998623491217\n    0.032   0.997553943855\n\nUsing DEER data in BioEn, the models file (``models-deer.dat``) is of\nparticular interest: listed numbers (model IDs) in this file have to be\nthe same as the deer file names\n(``conf0-319-259-deer.dat, conf1-319-259-deer.dat, conf2-319-259-deer.dat``\nand so on).\n\nIf an ensemble of spin-label rotamer states is investigated, we\nrecommend to use the Jupyter notebook\n``deer_spin_label_reweighting.ipynb`` in\n``./examples/DEER/rotamer-refinement/single_trace/``. Here, the user can\ndefine the protein structure and a own rotamer library (or use the\ndefault). By executing the cells in the notebook, data preparation,\nBioEn run, and analysis can be performed in a smooth procedure. The\nanalysis of the BioEn data include also the L-curve analysis. More\ndetails on the method are provided in [Reichel2018].\n\nFor both cases, refinement over an ensemble of protein conformations or\nover spin-label rotamer states, the modulation depth as the nuisance\nparameter is relevant. With the option ``--deer_modulation_depth``, an\ninitial guess (\"<path\\_to\\_file>/modulation-depth.dat\") can be provided\nor an initial optimization (\"initial-optimization\") can be performed for\neach spin-label pair. As indicated above, the modulation depth is needed\nto calculate the consistency of the simulated data with the experimental\ndata correctly. To achieve this, we have to iteratively optimize the\nweights of the ensemble members and the modulation depth. For all cases\ntested with DEER data, 10 iterations seems to be sufficient until the\noptimization converges. To do so, we recommend to set the option\n``--number_of_iterations`` to **10** or higher.\n\nThe full list of options for DEER data is:\n\n.. code:: bash\n\n    --deer_sim_path\n    --deer_sim_prefix\n    --deer_sim_suffix\n    --deer_exp_path\n    --deer_exp_prefix\n    --deer_exp_suffix\n    --deer_labels\n    --deer_noise\n    --deer_modulation_depth\n    --deer_input_pkl\n    --deer_input_hd5\n    --deer_output_pkl\n    --deer_input_sim_pkl\n    --deer_input_sim_hd5\n\nPlease take note of the options ``--deer-sim_path``,\n``--deer_sim_prefix``, ``--deer_sim_suffix``, ``--deer_exp_path``,\n``--deer_exp_prefix``, and ``--deer_exp_suffix``. These options are\nuseful to define the names of the simulated and experimental files. In\naddition, please define the spin-label pairs with ``--deer_labels``\n(e.g.; \"319-259,370-259\"), which is also part of the experimental and\nsimulated data file names (see above).\n\n(3) Experimental data from SAXS/WAXS measurements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBioEn can be used with `scattering\ndata <https://github.com/bio-phys/BioEn/blob/master/examples/scattering/scattering_reweighting.ipynb>`__\nlike SAXS or WAXS, for which we provide also the optimization of the\nnuisance parameter (here: coefficient). To use scattering data, the\nbioen options should contain ``--experiments scattering``. The input\ndata is handled in a similar way as the DEER data, but just for a single\nscattering curve and not different label-pairs. The standard file format\nfor experimental data (e.g. ``lyz-exp.dat``) is:\n\n.. code:: bash\n\n    #   q                 I(q)      error/noise\n    4.138455E-02        5.904029    1.555333E-01\n    4.371607E-02        5.652469    1.527037E-01\n    4.604759E-02        5.533381    1.521723E-01\n    4.837912E-02        5.547052    1.474577E-01\n    5.071064E-02        5.296281    1.436712E-01\n\nThe simulated data file (e.g. ``lyz0-sim-saxs.dat``) contains:\n\n.. code:: bash\n\n    #   q               I(q)\n    4.138454e-02    2.906550e+06\n    4.371607e-02    2.865970e+06\n    4.604758e-02    2.823741e+06\n    4.837911e-02    2.779957e+06\n    5.071064e-02    2.734716e+06\n\nTo handle different data input, we recommend to use the ipython notebook\n``./examples/scattering/scattering_reweighting.ipynb``.\n\nThe full list of options for scattering data is:\n\n.. code:: bash\n\n    --scattering_sim_path\n    --scattering_sim_prefix.\n    --scattering_sim_suffix\n    --scattering_exp_pPath\n    --scattering_exp_prefix\n    --scattering_exp_suffix\n    --scattering_noise\n    --scattering_coefficient\n    --scattering_data_weight\n    --scattering_input_pkl\n    --scattering_input_hd5\n    --scattering_input_sim_pkl\n    --scattering_input_sim_hd5\n    --scattering_output_pkl\n\nPlease take note of the options ``--scattering_sim_prefix``,\n``--scattering_sim_sufffix``, ``--scattering_exp_prefix``, and\n``--scattering_exp_suffix``. These options are useful to define the\nnames of the files of experimental and simulated.\n\nAs indicated above, a nuisance parameter (here: coefficient) is needed\nto calculate the consistency of the simulated data with the experimental\ndata correctly. To achieve this, we have to iteratively optimize the\nweights of the ensemble members and the coefficient. For all cases\ntested with scattering data, 10 iterations seems to be sufficient until\nthe optimization converges. To do so, we recommend to set the option\n``--number_of_iterations`` to **10** or higher.\n\n(4) Experimental data from Circular dichroism (CD) measurements\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBioEn can be used with `CD\ndata <https://github.com/bio-phys/BioEn/blob/master/examples/cd_data/cd_data_reweighting.ipynb>`__. To use CD data, the bioen options should contain ``--experiments cd``.  The standard file format\nfor experimental data (e.g. ``exp-cd.dat``) is:\n\n.. code:: bash\n\n   #wavelength   cd_raw          cd_poly_fit\n   190           -5.808250e+03   -6.356057524681091309e+03\n   191           -8.324000e+03   -8.437500596046447754e+03\n   192           -1.228125e+04   -1.166270971298217773e+04\n   193           -1.553750e+04   -1.528861761093139648e+04\n   194           -1.938975e+04   -1.879757702350616455e+04 \n\n\nThe simulated data file (e.g. ``conf1-cd.dat``) contains:\n\n.. code:: bash\n\n\n   #wavelength   cd\n   190           1.522400000000000000e+04\n   191           1.838200000000000000e+04\n   192           2.215800000000000000e+04\n   193           2.556100000000000000e+04\n   194           2.796400000000000000e+04\n\n\nThe full list of options for scattering data is:\n\n.. code:: bash\n\n    --cd_sim_path\n    --cd_sim_prefix.\n    --cd_sim_suffix\n    --cd_exp_pPath\n    --cd_exp_prefix\n    --cd_exp_suffix\n    --cd_noise\n    --cd_data_weight\n    --cd_input_pkl\n    --cd_input_hd5\n    --cd_input_sim_pkl\n    --cd_input_sim_hd5\n    --cd_output_pkl\n\nPlease take note of the options ``--cd_sim_prefix``,\n``--cd_sim_sufffix``, ``--cd_exp_prefix``, and\n``--cd_exp_suffix``. These options are useful to define the\nnames of the files of experimental and simulated.\n\n\nOther options and settings\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe initial and reference weights can be set with\n``--reference_weights`` and ``--initial_weights``. For both options, one\ncan either choose **uniform** (uniformly distributed weights; default),\n**random** (randomly distributed weights), or provide a file as input.\n\nAs described in [Hummer2015], we have to balance the consistency with\nthe experimental data (chi-square) with the changes in the weights\n(relative entropy) by the **confidence parameter theta**. We can achieve\nthis aim by the maximum-entropy principle and as such avoid\nover-fitting. To decide for the correct confidence parameter theta for a\nspecific set of data, usually a theta-series is applied. This means,\nthat for each theta an independent ensemble refinement run is performed.\nSubsequent L-curve analysis (relative entropy vs. chi-square) leads us\nto the optimal weight distribution. Please note, that the choice of the\nconfidence parameter depends on the system and data. In the BioEn\nsoftware package, one can choose ``--theta`` by defining a single value\n(e.g., 10.0) or a theta-series, which can be provided as a list (e.g.,\n100.0,10.0,1.0) or a list in a file (e.g., <path\\_to\\_file>/thetas.dat).\n\nTo check the BioEn results quickly, a simple plot can be generated, that\ncompares experimental data and ensemble averaged simulated data for the\nused confidence values. Therefore, the following three options have to\nbe set: ``--simple_plot``, ``--simple_plot_input`` and\n``--simple_plot_output``. The file name of the output pkl file has to be\nprovided for ``--simple_plot_input``. The data in this pkl file is\nvisualized and saved in a pdf file, which can be specified with\n``--simple_plot_output``.\n\nMisc options\n~~~~~~~~~~~~\n\nThe option ``--output_pkl_input_data`` can be used to generate a pkl\nfile of all settings, parameters and weights from the previous BioEn\nrun. This file can then be used afterwards with ``--input_pkl`` to\nrestart the BioEn calculation.\n\nMinimal example\n~~~~~~~~~~~~~~~\n\nThe minimal amount of input parameters are:\n\n-  number of ensemble members (``--number_of_models``)\n-  list of models (``--models_list``)\n-  type of experiments (``--experiments``)\n-  input experimental and simulated data\n\nIn case you have data from NMR measurements (e.g. NOEs), a typical\ninvocation would look like this:\n\n.. code:: bash\n\n    bioen \\\n        --number_of_models 10 \\\n        --models_list <path-to-data>/models-generic.dat \\\n        --experiments generic \\\n        --theta 0.01 \\\n        --sim_path <path-to-data> \\\n        --exp_path <path-to-data> \\\n        --data_ids all\n\nWe provide example test scripts ``run_bioen*.sh`` in\n``./test/generic/``, ``./test/deer/``, and ``./test/scattering/`` to run\nBioEn with the three mentioned types of data.\n\nDefault settings\n~~~~~~~~~~~~~~~~\n\nThe default setting for reweighting is log-weights for the procedure and\nbfgs2 for the optimization algorithm.\n\nOutput\n~~~~~~\n\nThree BioEn output files are generated by default, for which you can\nchoose the file names or leave it with the default naming.\n\n(1) The most useful BioEn output file is in pickle (pkl) format. Choose\n    the name of this file with the option ``--output_pkl``. The default\n    file name is **bioen\\_result.pkl**. This pkl file contains all\n    relevant information from the weight optimization including\n    experimental data, ensemble averaged data, (reference, initial, and\n    optimized) weights, consistency of simulated data with\n    experimental data (chi-squared), relative entropy, etc. For a\n    complete analysis of your BioEn calculations, this file is\n    essential.\n(2) The second file contains a list of weights in text file format. The\n    name can be choosen with ``--output_weights``. The default name is\n    **bioen\\_result\\_weights.dat**. But careful, it generates this file\n    only for the smallest confidence value theta.\n(3) The third files contains for each ensemble member the corresponding\n    weight. This file is similar to the second file, however, it\n    includes also the IDs of each ensemble member and is as such in a\n    tabular form. The name of the file can be chosen by\n    ``--output_models_weights`` with the default file name\n    **bioen\\_result\\_models\\_weights.dat**. Also here, this file is\n    generated from the smallest confidence value theta.\n\nMisc information\n~~~~~~~~~~~~~~~~\n\nWe recommend to have a close look at the files in the folders\n``./test/generic/``, ``./test/deer/``, and ``./test/scatter/``. These\nfiles can be used to understand and transfer the own scientific\nquestions to BioEn. Lines including ``#`` are in general ignored.\n\nFor further options and more information, type:\n\n::\n\n    bioen --help\n"
      },
      "source": "https://raw.githubusercontent.com/bio-phys/BioEn/master/README.rst",
      "technique": "header_analysis"
    }
  ]
}