{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "GiniClust"
        ],
        "type": "Text_excerpt",
        "value": "---------\r\n\r\nThe GiniClust software was developped in support of a research project conducted at the GC Yuan Lab (Harvard University & DFCI). If you find it useful to your own investigations, please cite the following publication:\r\n\r\nJiang L, Chen H, Pinello L, Yuan GC. GiniClust: Detecting rare cell types from single-cell gene expression data with Gini Index. Genome Biology (2016) 17:144 DOI: 10.1186/s13059-016-1010-4\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "GiniClust"
        ],
        "type": "Text_excerpt",
        "value": "--------\r\n\r\nLan Jiang (lan_jiang at hms dot harvard dot edu), the main developer of GiniClust, wrote the R scripts and started the README file. Gregory Giecold (ggiecold at jimmy dot harvard dot edu) developed the graphical user interface, reorganized the R packaging and edited the README file. Huidong Chen (hdchen at jimmy dot harvard dot edu) wrote the R command-line interface and contributed to the graphical user interface. Qian Zhu (qzhu at princeton dot edu) contributed to the graphical user interface. We would like to give special thanks to Luca Pinello who introduced the Gini-index and advised on the development and implementation of the GiniClust software.\r\n\r\nMaintainers: Lan Jiang (lan_jiang at hms dot harvard dot edu), Huidong Chen (hdchen at jimmy do harvard dot edu) and Qian Zhu (qzhu at princeton dot edu).\r\n\r\nFor more information on the biological motivations underlying this project, please contact Lan Jiang (lan_jiang at hms dot harvard dot edu) or Guo-Cheng Yuan (gcyan at jimmy dot harvard dot edu).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lanjiangboston/GiniClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-12-31T06:37:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-15T08:15:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GiniClust: Detecting Rare Cell Types from Single-Cell Gene Expression Data with Gini Index"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9991486231162833,
      "result": {
        "original_header": "GiniClust",
        "type": "Text_excerpt",
        "value": "\r\nGiniClust is a clustering method implemented in Python and R for detecting rare cell-types from large-scale single-cell gene expression data. \r\n\r\nGiniClust can be applied to datasets originating from different platforms, such as multiplex qPCR data, traditional single-cell RNAseq or newly emerging UMI-based single-cell RNAseq, e.g. inDrops and Drop-seq. \r\n\r\nGiniClust is created and maintained by the GC Yuan Lab at Harvard University and the Dana-Farber Cancer Institute and comes with a graphical user interface for convenience:\r\n\r\n![alt tag](https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/img/GiniClust_starting_screenshot.png)\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9952029624692815,
      "result": {
        "original_header": "Input file format",
        "type": "Text_excerpt",
        "value": "----------------\r\n\r\nThe input file is a gene expression matrix in comma-separated value (csv) format.\r\n\r\nSpecifically, for qPCR data, each row is log2 gene expression level; for RNAseq data, each row is UMI-Count/Cell or Raw-Read-Count/Cell (Note: log2 transformed RNA-seq data for Giniclust may not work! We suggest that user use featureCounts from http://subread.sourceforge.net/ or htseq-count from http://www-huber.embl.de/users/anders/HTSeq/doc/counting.html to get raw reads counts ).  The first row contains cell IDs. The first column contains unique gene names. \r\n\r\nFor example, in R \r\n```R\r\n>ExprM.RawCounts  <- read.csv(\"Data_GBM.csv\", sep=\",\", head=T)\r\n>ExprM.RawCounts[1:4,1:4]\r\n```\r\nyou can take a look at one of our test datasets (stored in the BASH2* folder within GiniClust's repository):\r\n\r\n|Table   |MGH26 | MGH26.1 | MGH26.2 | MGH26.3|\r\n|------------ |------------| -------------|------------ | -------------|\r\n|1/2-SBSRNA4| 0      |47       |0       |0|\r\n|A1BG          | 41      |80       |3       |0|\r\n|A1BG-AS1        |0       |0       |0      |0|\r\n|A1CF            |0       |0       |0       |0|\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9742881291121372,
      "result": {
        "original_header": "Results",
        "type": "Text_excerpt",
        "value": "-------\r\n\r\nThe output directory specified by the user at the graphical user interface will contain the following files and directories: \r\n\r\n* Dataname_rawCounts.csv: the raw counts \r\n* Dataname_normCounts.csv: the normalized counts\r\n* Dataname_gene.expression.matrix.RawCounts.filtered.csv: the raw counts after filtering \r\n* Dataname_gene.expression.matrix.normCounts.filtered.csv: the normalized counts after filtering  \r\n* Gini_related_table_RNA-seq.csv: the table related with Gini index for RNA-seq data\r\n* Gini_related_table_qPCR.csv: the table related with Gini index for qPCR data\r\n* Dataname_clusterID.csv: clustering result, the first column represents cell IDs and the second column is the corresponding cluster result for each cell.\r\n* Dataname_Rtnse_coord2.csv: coordinates of cells in tSNE plot \r\n* Dataname_rare_cells_list.txt: the clusters of rare cells detected by Giniclust\r\n* Dataname_bi-directional.GiniIndexTable.csv: For qPCR data the table of bidirectional Gini index\r\n* RareCluster_lrTest.csv: lrTest results by MAST analysis for RNA-seq data \r\n* RareCluster.diff.gene.t-test.results.csv: t-test results for qPCR data\r\n* RareCluster.overlap_genes.txt: overlap genes between the selected high Gini genes and DE genes in rare cluster\r\n* sub-folder 'figures':\r\n - Dataname_histogram of Normalized.Gini.Socre.pdf: histogram of estimated p-values based on a normal distribution approximation for genes\r\n - Dataname_smoothScatter_pvalue_gene.pdf: the smoothScatter plot in which the red points are the selected high Gini genes according to specified cutoff\r\n - Dataname_tsne_plot.pdf: tSNE plot for cells\r\n - Dataname_RareCluster_diff_gene_overlap.pdf: Venn diagram for differentially expressed genes and high gini genes\r\n - Dataname_RareCluster_overlapgene_rawCounts_bar_plot.genename.pdf: barplot of rare cluster and major cluster for the overlap genes\r\n\r\nFurthermore, a folder named 'Library' will be created, which includes a wealth of newly installed packages.\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lanjiangboston/GiniClust/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lanjiangboston/GiniClust/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lanjiangboston/GiniClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GiniClust"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/img/GiniClust_selected_data_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GiniClust"
        ],
        "type": "Text_excerpt",
        "value": "------------\r\n\r\nPlease ensure that you have Python 2.7 in your environment. The graphical user interface of GiniClust relies on ```wxPython```, a Python wrapper for the cross-platform wxWidgets API. Instructions on how to install ```wxPython``` are available on the corresponding website. On Fedora Linux, the following at the command-line interface worked just fine:\r\n\r\n```$ sudo dnf install wxPython```.\r\n\r\nIn addition, GiniClust relies on the following libraries:\r\n* ```Gooey```(version 0.9.2.3 or ulterior);\r\n* ```setuptools``` (version 24.0.2 or subsequent).\r\n\r\nThose packages should be automatically installed or upgraded via a ```pip``` installation. For instance, to install ```Gooey```, proceed as follows:\r\n* start a terminal session;\r\n* run ```$ pip install Gooey --upgrade```.\r\n\r\nIf in doubt, please check that those libraries got installed properly by trying to import them or some of their modules in your Python interpreter: ```>>> import gooey, pkg_resources```.\r\n\r\nAs for the R code at the core of much of GiniClust`s computations, for MAC and WINDOWS only the official R installation file is supported and tested. Using other installation methods, such as brew, may lead to running error.\r\n\r\nBesides, some users might experience issues installing another of GiniClust's dependencies: the MAST R package. If this happens, please visit the MAST website (https://github.com/RGLab/MAST) for detailed instructions. We recommend that users upgrade MAST package to the newest version. If you are using an old version, you may need to replace the file DE_MAST.R in 'Rfunction' by DE_MAST.R in 'Archive'.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/lanjiangboston/GiniClust/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2016-2021 Lan Jiang and contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "GiniClust"
        ],
        "type": "Text_excerpt",
        "value": "-------\r\n\r\nCopyright 2016-2021 Lan Jiang and contributors.\r\n\r\nGiniClust is free software made available under the MIT License. For details see the LICENSE file.\r\n\r\n"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/img/GiniClust_starting_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GiniClust"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "lanjiangboston"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 58828,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 2803,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 07:23:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 36
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "GiniClust"
        ],
        "type": "Text_excerpt",
        "value": "-----\r\n\r\nTo run GiniClust, please download the GiniClust GitHub repository, unzip it and move to the extracted directory so that it becomes your current working directory. \r\n\r\nThen, in a Linux environment, proceed as follows:\r\n* start a terminal session;\r\n* enter ```$ python GiniClust.py```.\r\n\r\nFrom an OS X or Windows environment, proceed as follows:\r\n* launch a terminal session;\r\n* enter ```$ pythonw GiniClust.py```.\r\n\r\nA graphical user interface will spring up and direct you into choosing a file to process from your arborescence of directories, specify the type of data at hand (qPCR or RNA-seq), along with the name of the folder where you would like to store GiniClust's output (see the section below for more information about those files). A screenshot is provided herewith:\r\n\r\n![alt tag](https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/img/GiniClust_selected_data_screenshot.png)\r\n\r\nAlternatively, GiniClust can be run directly as an R script at the command-line interface:\r\n\r\n```$ Rscript Giniclust_Main.R [options]```\r\n\r\nYou can specify the following options:\r\n- -f CHARACTER or --file=CHARACTER, input dataset file name \r\n- -t CHARACTER or --type=CHARACTER, input dataset type: choose from 'qPCR' or 'RNA-seq' \r\n- -o CHARACTER or --out=CHARACTER, output folder name [default=results]\r\n- -e DOUBLE or --epsilon=DOUBLE, DBSCAN epsilon parameter qPCR:[default=0.25],RNA-seq:[default=0.5]\r\n- -m INTEGER or --minPts=INTEGER, DBSCAN minPts parameter qPCR:[default=5],RNA-seq:[default=3]\r\n- -h or --help, Show help message and exit\r\n\r\nFor example, the following command is used to analyze the 'Data_GBM.csv' dataset\r\n```sh\r\n$ Rscript GiniClust_Main.R -f Data_GBM.csv -t RNA-seq -o GBM_results\r\n```\r\nThe following command is used to analyze the 'Data_qPCR.csv' dataset. \r\n```sh\r\n$ Rscript GiniClust_Main.R -f Data_qPCR.csv -t qPCR -o  qPCR_results\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/lanjiangboston/GiniClust/master/README.md",
      "technique": "header_analysis"
    }
  ]
}