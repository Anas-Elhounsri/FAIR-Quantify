{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davideyre/hash-cgmlst"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-07T14:01:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T23:38:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9639642968992104,
      "result": {
        "original_header": "hash-cgMLST",
        "type": "Text_excerpt",
        "value": "A tool for core-genome MLST typing for bacterial data. This has been initially developed for Clostridium difficile, but could be adpated to other bacteria.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8555194844248971,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "Outputs provided include:\n - QC data: `*_base_qual.txt`, `*_kraken.txt`, `*_length.txt`, `*.raw_fastqc.html`, `*.clean_fastqc.html`\n - Spades contigs and assembly stats: `*_spades_contigs.fa`, `*_cgmlst.stats`\n - cgMLST genes as a multifasta file: `*_cgmlst.fa`\n - standard cgMLST calls as a json file: `*_cgmlst.profile` (no tracking of novel alleles is done, just recorded missing for now)\n - hash-cgMLST calls as a json file: `*_cgmlst.json`\n - standard MLST calls: `*_mlst.txt` \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9309973941476676,
      "result": {
        "original_header": "Comparison scripts",
        "type": "Text_excerpt",
        "value": "These scripts search for json files with the folder specified and any immediate sub-folders. Please ensure that the only json files present are those created by this workflow.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8954968855410561,
      "result": {
        "original_header": "Bring your own assemblies",
        "type": "Text_excerpt",
        "value": "If you wish to simply call the hash-cgMLST of an existing assembly this can be done by running:\n```\nbin/getCoreGenomeMLST.py -f assembly_contigs.fa \\\n\t-n contig_name \\\n\t-s ridom_scheme/files \\\n\t-d ridom_scheme/ridom_scheme.fasta \\\n\t-o output_file_prefix \\\n\t-b blastn_path \n```\n \nHere `assembly_contigs.fa` is the input contigs file, `contig_name` is the name to use for the assembly in the output json files, `ridom_scheme/files` is the path to files for the ridom scheme and `ridom_scheme/ridom_scheme.fasta` a fasta file of each gene in the ridom scheme, `output_file_prefix` needs to be set as does the path to the blastn binary `blastn_path`. \nIf running outside of the Singularity container then a local installation of blastn, python 3 and biopython is required. \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9774217363502193,
      "result": {
        "original_header": "File size",
        "type": "Text_excerpt",
        "value": "Each downloaded set of gzipped fastq files will be stored in the working directory, as will a pair of gzipped cleaned fastq files. You will need to periodically delete your working directory to prevent it from growing too large for very large projects. \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davideyre/hash-cgmlst/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davideyre/hash-cgmlst/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "davideyre/hash-cgmlst"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hash-cgMLST"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/bin/get_assembly_stats.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Singularity",
        "parent_header": [
          "hash-cgMLST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Build image\n```\ncd singularity\nsudo singularity build hash-cgmlst.img Singularity\n```\n\nIf you do not have sudo access to your compute machine, the image can be built on another installation and copied across.\n\nThe image can be mounted and tested if desired:\n```\nsingularity shell hash-cgmlst.img\n```\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "miniKraken2",
        "parent_header": [
          "hash-cgMLST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Fetch the miniKraken2 database, from the root of the repository\n```\nmkdir minikraken2\ncd minikraken2\nwget ftp://ftp.ccb.jhu.edu/pub/data/kraken2_dbs/minikraken2_v1_8GB_201904_UPDATE.tgz\ntar -xzf minikraken2_v1_8GB_201904_UPDATE.tgz\nrm minikraken2_v1_8GB_201904_UPDATE.tgz\ncd minikraken2_v1_8GB\nmv * ../\ncd ..\nrmdir minikraken2_v1_8GB\n```\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "cgmlst.org scheme",
        "parent_header": [
          "hash-cgMLST",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A version of this is included - it can be updated if desired, but this is not required for hash-cgMLST.\n\nTo update this, visit cgmlst.org and download the allele files for each gene to `ridom_scheme/files` and then run:\n```\ncd bin\npython makeReferenceDB.py\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.999920273392937,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "Outputs provided include:\n - QC data: `*_base_qual.txt`, `*_kraken.txt`, `*_length.txt`, `*.raw_fastqc.html`, `*.clean_fastqc.html`\n - Spades contigs and assembly stats: `*_spades_contigs.fa`, `*_cgmlst.stats`\n - cgMLST genes as a multifasta file: `*_cgmlst.fa`\n - standard cgMLST calls as a json file: `*_cgmlst.profile` (no tracking of novel alleles is done, just recorded missing for now)\n - hash-cgMLST calls as a json file: `*_cgmlst.json`\n - standard MLST calls: `*_mlst.txt` \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9488291240468976,
      "result": {
        "original_header": "Comparison scripts",
        "type": "Text_excerpt",
        "value": "To run a comparison for hash-cgMLST profiles after the nextflow pipeline above is complete use the `bin/compareProfiles.py` script:\n```\nbin/compareProfiles.py -i comparison_study_data/example_output -o  comparison_study_data/example_compare.txt\n``` \nThese scripts search for json files with the folder specified and any immediate sub-folders. Please ensure that the only json files present are those created by this workflow.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8474178044225826,
      "result": {
        "original_header": "File size",
        "type": "Text_excerpt",
        "value": "Each downloaded set of gzipped fastq files will be stored in the working directory, as will a pair of gzipped cleaned fastq files. You will need to periodically delete your working directory to prevent it from growing too large for very large projects. \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8321877188680886,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "Outputs provided include:\n - QC data: `*_base_qual.txt`, `*_kraken.txt`, `*_length.txt`, `*.raw_fastqc.html`, `*.clean_fastqc.html`\n - Spades contigs and assembly stats: `*_spades_contigs.fa`, `*_cgmlst.stats`\n - cgMLST genes as a multifasta file: `*_cgmlst.fa`\n - standard cgMLST calls as a json file: `*_cgmlst.profile` (no tracking of novel alleles is done, just recorded missing for now)\n - hash-cgMLST calls as a json file: `*_cgmlst.json`\n - standard MLST calls: `*_mlst.txt` \n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davideyre/hash-cgmlst/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# LICENCE TERMS FOR ACCESS TO SOFTWARE AND DATABASE FOR ACADEMIC USE  \n  \nThese licence terms apply to all licences granted by THE CHANCELLOR, MASTERS AND SCHOLARS OF THE UNIVERSITY OF OXFORD whose administrative offices are at University Offices, Wellington Square, Oxford OX1 2JD, United Kingdom (the \u201cUniversity\u201d) for use of or access to the hash-cgMLST software (\u201cthe Software\u201d) through this website https://github.com/davideyre/hash-cgmlst (the\u201dWebsite\u201d).   \n  \nPLEASE READ THESE LICENCE TERMS CAREFULLY BEFORE USING THE SOFTWARE THROUGH THIS WEBSITE.  IF YOU DO NOT AGREE TO THESE LICENCE TERMS YOU SHOULD NOT USE THE SOFTWARE.  \n  \nTHIS WEBSITE AND THE SOFTWARE ARE INTENDED FOR ACADEMICS CARRYING OUT RESEARCH AND NOT FOR USE BY CONSUMERS OR COMMERCIAL BUSINESSES.  \n\n## 1.\tAcademic Use Licence  \n1.1\tThe User is granted a limited non-exclusive and non-transferable royalty free licence to access and use the Software provided that the User will:  \n(a)\tlimit their use of the Software to their own internal academic non-commercial research which is undertaken for the purposes of education or other scholarly use;   \n(b)\tnot use the Software for or on behalf of any third party or to provide a service or integrate all or part of the Software into a product for sale or license to third parties;  \n(c)\tuse the Software in accordance with the prevailing instructions and guidance for use given on the Website and comply with procedures on the Website for user identification, authentication and access;  \n(d)\tcomply with all applicable laws and regulations with respect to their use of the Software;   \n(e)\texcept to the extent expressly permitted under these terms, not attempt to: reverse compile, disassemble or copy, modify, duplicate, create derivative works from, frame, mirror, republish, download, display, transmit, or distribute all or any portion of the Software or Website in any form or media or by any means; and   \n(f)\tensure that the Copyright Notice \u201cCopyright \u00a9 2019, University of Oxford\u201d appears prominently wherever results from the Software are used, and is referenced or cited with the Copyright Notice when the Software is described in any research publication or on any documents or other material created using the Software.  \n1.2\tthe University reserves the right at any time and without liability or prior notice to the User to revise, modify and replace the functionality and performance of the access to and operation of the Software.   \n1.3\tThe User acknowledges and agrees that the University owns all intellectual property rights in the Software. The User shall not have any right, title or interest in or to any results or other output from the Software.  \n1.4\tThis Licence will terminate immediately and the User will no longer have any right exercise any of the rights granted to the User upon any breach of the conditions in Section 1.1 of this Licence.  \n  \n## 2.\tIndemnity and Liability   \n2.1\tThe User shall defend, indemnify and hold harmless the University against any claims, actions, proceedings, losses, damages, expenses and costs (including without limitation court costs and reasonable legal fees) arising out of or in connection with the User's possession or use of the Software, or any breach of these terms by the User.   \n2.2\tThe Software are provided on an \u2018as is\u2019 basis and the User uses the Software at their own risk. No representations, conditions, warranties or other terms of any kind are given in respect of the Software and all statutory warranties and conditions are excluded to the fullest extent permitted by law. Without affecting the generality of the previous sentences, the University gives no implied or express warranty and makes no representation that the Software or any part of them: (a) will enable specific results to be obtained; or (b) meets a particular specification or is comprehensive within its field or that it is error free or will operate without interruption; or (c) is suitable for any particular, or the User's specific purposes.   \n2.3\tExcept in relation to fraud, death or personal injury, the University's liability to the User for any use of the Software, in negligence or arising in any other way out of the subject matter of these licence terms, will not extend to any incidental or consequential damages or losses, or any loss of profits, loss of revenue, loss of data, loss of contracts or opportunity, whether direct or indirect.  \n2.4\tThe User hereby irrevocably undertakes to the University not to make any claim against any employee, student, researcher or other individual engaged by the University, being a claim which seeks to enforce against any of them any liability whatsoever in connection with this agreement or its subject-matter.   \n  \n## 3.\tGeneral   \n3.1\tSeverability - If any provision (or part of a provision) of these licence terms is found by any court or administrative body of competent jurisdiction to be invalid, unenforceable or illegal, the other provisions shall remain in force.  \n3.2\tEntire Agreement - These licence terms and any documents referred to in them, constitute the whole agreement between the parties and supersede any previous arrangement, understanding or agreement between them relating to the Software.   \n3.3\tLaw and Jurisdiction - These licence terms and any disputes or claims arising out of or in connection with them shall be governed by, and construed in accordance with, the law of England. The User irrevocably submits to the exclusive jurisdiction of the English courts for any dispute or claim that arises out of or in connection with these licence terms.  \n  \nIf you are interested in using the Software commercially, please contact Oxford University Innovation Limited to negotiate a licence. Contact details are enquiries@innovation.ox.ac.uk quoting reference 16605."
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hash-cgmlst"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "davideyre"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 23600,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 21533,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 9843,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 500,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "* Singularity - instructions can be found here https://github.com/sylabs/singularity/blob/master/INSTALL.md\n* Java version 8 or later (required for nextflow)\n* Nextflow - https://www.nextflow.io\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements",
        "parent_header": [
          "hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "This workflow will run on systems that support the dependencies above. It has been tested on MacOS, Ubuntu and CentOS. Minimal system resources are required to generate hash-cgMLST profiles alone, however generating assemblies using SPAdes is the main resource constraint for the whole pipeline, the amount of memory to use per core can be set in the nextflow.config file, e.g. 8 Gb.\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running hash-cgMLST",
        "parent_header": [
          "hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "At present the scripts are designed to be run on two specific server set-ups, each with its own profile. Updates can be made to the nextflow.config file for other set-ups. \n\nThe two profiles are:\n* cluster - an example implementation for a SGE based cluster\n* ophelia - an example for a local bare-metal server (would adapt to a stand-alone machine if the amount of memory available per core is changed)\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example command to run workflow",
        "parent_header": [
          "hash-cgMLST",
          "Running hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "To run the cgMLST analysis, e.g. using files from EBI\n```\nnextflow hash-cgMLST.nf --seqlist example_data/example_input.csv --outputPath comparison_study_data/example_output -resume -profile ophelia\n```\n\nThis will download 2 example pairs of fastq files from EBI and process these through the pipeline. Please see `example_data/example_input.csv` for an example of an input file. The file type column should be set to ebi to download from EBI and the file_name column should be a sample or run identifier. \n\nAlternatively\n```\nnextflow hash-cgMLST.nf --seqlist example_data/example_input_local.csv --outputPath comparison_study_data/example_output -resume -profile ophelia\n```\n\nRuns the locally downloaded files from above.\n\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 03:45:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example input file types",
        "parent_header": [
          "hash-cgMLST",
          "Running hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "Two sources of raw read files for the workflow are supported\n* ebi - supports running workflow on files downloaded from EBI\n* local - support running on local gzipped paired fastq files\n\n(The third option bam can be ignored as it has been developed for local testing only.)\n\nTo set up two test files for testing the local input option, the following command or similar can be run:\n\n```\nmkdir comparison_study_data\ncd comparison_study_data\nwget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR257/ERR257052/ERR257052_1.fastq.gz -O a.1.fq.gz\nwget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR257/ERR257052/ERR257052_2.fastq.gz -O a.2.fq.gz\nwget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR257/ERR257068/ERR257068_1.fastq.gz -O b.1.fq.gz\nwget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR257/ERR257068/ERR257068_2.fastq.gz -O b.2.fq.gz\n```\n\nExamples of the csv files that specify the input files for the pipeline can be found in the `example_data` folder:\n* `example_input.csv` obtain 2 files from EBI by accession number, leave columns fq1 and fq2 empty\n* `example_input_local.csv` obtain files from local path relative to root of this repository specified in fq1 and fq2, file_name column is used a readable name for the files\n* `example_input_bam.csv` ignore\n* `example_six_hospitals.csv` re-run the analysis of samples from six hospitals used in the paper describing hash-cgMLST\n* `all_cdiff_ncbi_20190611.csv` run the analysis on all C diff in EBI/NCBI as of 6 June 2019\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example command to run workflow",
        "parent_header": [
          "hash-cgMLST",
          "Running hash-cgMLST"
        ],
        "type": "Text_excerpt",
        "value": "To run the cgMLST analysis, e.g. using files from EBI\n```\nnextflow hash-cgMLST.nf --seqlist example_data/example_input.csv --outputPath comparison_study_data/example_output -resume -profile ophelia\n```\n\nThis will download 2 example pairs of fastq files from EBI and process these through the pipeline. Please see `example_data/example_input.csv` for an example of an input file. The file type column should be set to ebi to download from EBI and the file_name column should be a sample or run identifier. \n\nAlternatively\n```\nnextflow hash-cgMLST.nf --seqlist example_data/example_input_local.csv --outputPath comparison_study_data/example_output -resume -profile ophelia\n```\n\nRuns the locally downloaded files from above.\n\n"
      },
      "source": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/readme.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davideyre/hash-cgmlst/master/hash-cgMLST.nf"
      },
      "technique": "file_exploration"
    }
  ]
}