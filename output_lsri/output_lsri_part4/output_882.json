{
  "application_domain": [
    {
      "confidence": 18.77,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Tuukka Norri and\nBastien Cazaux and\nDmitry Kosolobov and\nVeli M{\\\"{a}}kinen",
        "doi": "10.1186/s13015-019-0147-6",
        "format": "bibtex",
        "title": "Linear time minimum segmentation enables scalable founder reconstruction",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1186/s13015-019-0147-6",
        "value": "@article{NorriCKM19,\n    timestamp = {Mon, 29 Jul 2019 15:58:48 +0200},\n    doi = {10.1186/s13015-019-0147-6},\n    url = {https://doi.org/10.1186/s13015-019-0147-6},\n    year = {2019},\n    pages = {12:1--12:15},\n    number = {1},\n    volume = {14},\n    journal = {Algorithms for Molecular Biology},\n    title = {Linear time minimum segmentation enables scalable founder reconstruction},\n    author = {Tuukka Norri and\nBastien Cazaux and\nDmitry Kosolobov and\nVeli M{\\\"{a}}kinen},\n}"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tsnorri/founder-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-28T18:26:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-26T08:51:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Create a set of founder sequences from a set of multiple-aligned sequences."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9944174235327216,
      "result": {
        "original_header": "founder-sequences",
        "type": "Text_excerpt",
        "value": "Given a minimum segment length and *m* sequences of length *n* drawn from an alphabet of size \u03c3, create a segmentation in *O(mn log \u03c3)* time and use various matching strategies to join the segment texts to generate founder sequences. Please see [releases](https://github.com/tsnorri/founder-sequences/releases) for pre-built binaries.\n \n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9767802315954507,
      "result": {
        "original_header": "Long version",
        "type": "Text_excerpt",
        "value": "1. Clone the repository with `git clone --recursive https://github.com/tsnorri/founder-sequences.git`.\n2. Change the working directory with `cd founder-sequences`.\n3. Create the file `local.mk`. `linux-static.local.mk` is provided as an example and may be copied with `cp linux-static.local.mk local.mk`\n4. Edit `local.mk` in the repository root to override build variables. Useful variables include `CC`, `CXX`, and `GENGETOPT` for C and C++ compilers and gengetopt respectively. `BOOST_ROOT` is used to determine the location of Boost headers and libraries. `BOOST_LIBS` and `LIBDISPATCH_LIBS` are passed to the linker. See `common.mk` for additional variables.\n5. Run make with a suitable numer of parallel jobs, e.g. `make -j12` \n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tsnorri/founder-sequences/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tsnorri/founder-sequences/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tsnorri/founder-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "founder-sequences"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/tools/git_version.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/tools/os_name.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999999572395,
      "result": {
        "original_header": "Short version",
        "type": "Text_excerpt",
        "value": "1. `git clone --recursive https://github.com/tsnorri/founder-sequences.git`\n2. `cd founder-sequences`\n3. `cp linux-static.local.mk local.mk`\n4. Edit local.mk.\n5. `make -j12`\n \n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999895512278324,
      "result": {
        "original_header": "Long version",
        "type": "Text_excerpt",
        "value": "1. Clone the repository with `git clone --recursive https://github.com/tsnorri/founder-sequences.git`.\n2. Change the working directory with `cd founder-sequences`.\n3. Create the file `local.mk`. `linux-static.local.mk` is provided as an example and may be copied with `cp linux-static.local.mk local.mk`\n4. Edit `local.mk` in the repository root to override build variables. Useful variables include `CC`, `CXX`, and `GENGETOPT` for C and C++ compilers and gengetopt respectively. `BOOST_ROOT` is used to determine the location of Boost headers and libraries. `BOOST_LIBS` and `LIBDISPATCH_LIBS` are passed to the linker. See `common.mk` for additional variables.\n5. Run make with a suitable numer of parallel jobs, e.g. `make -j12` \n<dl>\n<dt>all</dt>\n<dd>Build everything</dd>\n<dt>clean</dt>\n<dd>Remove build products except for dependencies (in the <code>lib</code> folder).</dd>\n<dt>clean-all</dt>\n<dd>Remove all build products.</dd>\n</dl>\n \n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/tsnorri/founder-sequences/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, founder-sequences, sequence-generation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Tuukka Norri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "founder-sequences"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "tsnorri"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 147819,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 8494,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 459,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tsnorri",
          "type": "User"
        },
        "date_created": "2019-08-12T18:15:49Z",
        "date_published": "2019-08-12T18:19:47Z",
        "description": "* Implemented the greedy matching algorithm.",
        "html_url": "https://github.com/tsnorri/founder-sequences/releases/tag/v0.3",
        "name": "v0.3",
        "release_id": 19236690,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/tsnorri/founder-sequences/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/tsnorri/founder-sequences/releases/19236690",
        "value": "https://api.github.com/repos/tsnorri/founder-sequences/releases/19236690",
        "zipball_url": "https://api.github.com/repos/tsnorri/founder-sequences/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tsnorri",
          "type": "User"
        },
        "date_created": "2018-11-01T10:49:06Z",
        "date_published": "2018-11-01T10:58:19Z",
        "description": "- The second pass of calculating the pBWT arrays is now done in parallel.\r\n- Adjacent segments are now joined from left to right if the number of distinct substrings within the new segment does not exceed the minimum number of founders for the whole input.\r\n- Implemented random matching using 32-bit Mersenne Twister. Earlier the \u201crandom\u201d matching was done in pBWT order.\r\n- Disabled experimental and unneeded features in version 0.2.",
        "html_url": "https://github.com/tsnorri/founder-sequences/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "release_id": 13774203,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/tsnorri/founder-sequences/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/tsnorri/founder-sequences/releases/13774203",
        "value": "https://api.github.com/repos/tsnorri/founder-sequences/releases/13774203",
        "zipball_url": "https://api.github.com/repos/tsnorri/founder-sequences/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tsnorri",
          "type": "User"
        },
        "date_created": "2018-05-16T08:38:40Z",
        "date_published": "2018-05-16T09:00:52Z",
        "description": "Initial release.",
        "html_url": "https://github.com/tsnorri/founder-sequences/releases/tag/v0.1",
        "name": "v0.1",
        "release_id": 11022586,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/tsnorri/founder-sequences/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/tsnorri/founder-sequences/releases/11022586",
        "value": "https://api.github.com/repos/tsnorri/founder-sequences/releases/11022586",
        "zipball_url": "https://api.github.com/repos/tsnorri/founder-sequences/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Build/Runtime Requirements",
        "parent_header": [
          "founder-sequences"
        ],
        "type": "Text_excerpt",
        "value": "On Linux the following libraries are required:\n\n* [zlib](https://zlib.net/)\n* libpthread\n* [libbsd](https://libbsd.freedesktop.org/)\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build Requirements",
        "parent_header": [
          "founder-sequences"
        ],
        "type": "Text_excerpt",
        "value": "- A recent version of [Clang](https://clang.llvm.org/) and libclang. C++17 support is required. Building the tools has been tested with Clang 6.0.\n- [GNU gengetopt](https://www.gnu.org/software/gengetopt/gengetopt.html) (tested with version 2.22.6)\n- [CMake](https://cmake.org)\n- [Boost](https://www.boost.org)\n- On Linux, libdispatch dependencies including [Ninja](https://ninja-build.org) and [SystemTap](https://sourceware.org/systemtap/) development files are required.\n\nFor installing libdispatch dependencies, the package list in the [Building and installing for Linux](https://github.com/apple/swift-corelibs-libdispatch/blob/master/INSTALL.md#building-and-installing-for-linux) section in the libdispatch installation guide can be helpful. On Linux, libdispatch itself is built as part of our build process, so it does not need to be installed. On macOS, the operating system libraries are used instead.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running",
        "parent_header": [
          "founder-sequences"
        ],
        "type": "Text_excerpt",
        "value": "The package contains `founder_sequences` as well as some auxiliary tools.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "founder_sequences",
        "parent_header": [
          "founder-sequences",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Takes a text file that contains a list of sequence file paths as its input. A FASTA file with short (less than 1 kb) lines may be used instead. It generates a segmentation with substrings not shorter than the value given with `--segment-length-bound`. It then proceeds to join the segments with the joining method specified with `--segment-joining` and writes the founder sequences to the path given with `--output-founders` one sequence per line. In addition, the segments may be written to a separate file with `--output-segments`.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "remove_identity_columns",
        "parent_header": [
          "founder-sequences",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Reads the aligned texts file paths given from a given list. Outputs the reduced texts to files created in the current directory. The identity columns will be listed as a sequence of zeros and ones (indicates identity) to the standard output.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "insert_identity_columns",
        "parent_header": [
          "founder-sequences",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Given a set of founder sequences, a reference sequence and a list of identity columns, outputs the founder sequences with the identity columns included.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "match_founder_sequences",
        "parent_header": [
          "founder-sequences",
          "Running"
        ],
        "type": "Text_excerpt",
        "value": "Matches sequences to founder sequences and outputs statistics. Uses a greedy algorithm to find the longest match in the set of founders.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-11-04 05:13:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Academic use",
        "parent_header": [
          "founder-sequences"
        ],
        "type": "Text_excerpt",
        "value": "If you use the software in an academic setting we kindly ask you to cite the following paper:\n\n```TeX\n@article{NorriCKM19,\n  author    = {Tuukka Norri and\n               Bastien Cazaux and\n               Dmitry Kosolobov and\n               Veli M{\\\"{a}}kinen},\n  title     = {Linear time minimum segmentation enables scalable founder reconstruction},\n  journal   = {Algorithms for Molecular Biology},\n  volume    = {14},\n  number    = {1},\n  pages     = {12:1--12:15},\n  year      = {2019},\n  url       = {https://doi.org/10.1186/s13015-019-0147-6},\n  doi       = {10.1186/s13015-019-0147-6},\n  timestamp = {Mon, 29 Jul 2019 15:58:48 +0200}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "founder-sequences",
          "Running",
          "founder_sequences"
        ],
        "type": "Text_excerpt",
        "value": "    founder_sequences --input=input-list.txt --segment-length-bound=10 --output-segments=segments.txt --output-founders=founders.txt\n\n`input-list.txt` should contain the paths of the sequence files, one path per line. The sequence files should contain one sequence in each file without the terminating newline. The segment length bound specifies the minimum segment length.\n"
      },
      "source": "https://raw.githubusercontent.com/tsnorri/founder-sequences/master/README.md",
      "technique": "header_analysis"
    }
  ]
}