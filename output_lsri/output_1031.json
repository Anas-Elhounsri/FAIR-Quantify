{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xuewuzhang-UTSW/PyHI"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-26T17:04:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-09T01:16:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A python-based GUI for helical indexing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9084692149328654,
      "result": {
        "original_header": "PyHI",
        "type": "Text_excerpt",
        "value": "V006: Tab1: can read stacks (.mrc or .mrcs) of power spectra; Tab2: can highlight Bessel peaks and their Bessel orders based on the current refined lattice.  \nNote: V005 addes a new tab which generates a 3D representation of the helix and Relion command for making initial model. This needs a newer version of Matplotlib (>3.6). \n\nWritten by Xuewu Zhang, Department of Pharmacology, University of Texas Southwestern Medical Center, Dallas, USA. \nThis is a Python-based GUI program for indexing power spectra of helical assemblies. The program is a Python script that runs under Python version 3.7. The script depends on the following Python libraries: Mrcfile 1.1.2 (Burnley et al., 2017), numpy 1.18.3 (Harris et al., 2020), matplotlib 3.4.2 (Hunter, 2007), Pillow 7.2.0 (https://pillow.readthedocs.io/en/stable/), PyQt5 5.15.0 (https://pypi.org/project/PyQt5/), SciPy 1.4.1 (Virtanen et al., 2020) and mplsursors 0.4 (https://mplcursors.readthedocs.io/en/stable/). Newer versions of these packages should work as well. These libraries can be installed on modern operating systems with standard Python library management tools such as PIP (Python Package Installer; https://pip.pypa.io/en/stable/) and anaconda (https://docs.conda.io/en/latest/).  \n"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xuewuzhang-UTSW/PyHI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xuewuzhang-UTSW/PyHI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xuewuzhang-UTSW/PyHI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyHI"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.984386380872562,
      "result": {
        "original_header": "PyHI",
        "type": "Text_excerpt",
        "value": "A video demo on how to use it:\nhttps://www.youtube.com/watch?v=KxAeo90CIt4 \nThis is a Python-based GUI program for indexing power spectra of helical assemblies. The program is a Python script that runs under Python version 3.7. The script depends on the following Python libraries: Mrcfile 1.1.2 (Burnley et al., 2017), numpy 1.18.3 (Harris et al., 2020), matplotlib 3.4.2 (Hunter, 2007), Pillow 7.2.0 (https://pillow.readthedocs.io/en/stable/), PyQt5 5.15.0 (https://pypi.org/project/PyQt5/), SciPy 1.4.1 (Virtanen et al., 2020) and mplsursors 0.4 (https://mplcursors.readthedocs.io/en/stable/). Newer versions of these packages should work as well. These libraries can be installed on modern operating systems with standard Python library management tools such as PIP (Python Package Installer; https://pip.pypa.io/en/stable/) and anaconda (https://docs.conda.io/en/latest/).  \nFor example, you can download Miniconda from here:\nhttps://docs.conda.io/en/latest/miniconda.html \nFollow the intruction to install the python 3 version of Miniconda. To activate Conda: \n$ source /directory/to/miniconda/bin/activate  \n\nNow you can directly install the dependency packages by using commands such as: \n$ conda install numpy \nOr you can create a virtual environment for PyHI: \n$ conda create --name PyHI \n\nTo activate this new virtual environment: \n$ source /directory/to/miniconda/bin/activate PyHI \n\nNow you can install the packages within this envirnoment. To run PyHI, change to the directory where PyHI_v003.py resides and then: \n$ python3 PyHI_v004.py \n"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8787926301013637,
      "result": {
        "original_header": "PyHI",
        "type": "Text_excerpt",
        "value": "$ python3 PyHI_v004.py \n"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xuewuzhang-UTSW/PyHI/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cryo-em, helical-reconstruction, indexing"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyHI"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xuewuzhang-UTSW"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 548530,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pillow.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mplcursors.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/xuewuzhang-UTSW/PyHI/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:14:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ]
}