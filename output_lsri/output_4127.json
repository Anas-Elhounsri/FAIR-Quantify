{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Unzip the reference",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Unzip the reference genome files.\n\n```\ntar xvf refs.tar.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xz-stjude/idcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-29T00:06:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-17T16:58:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a pipeline for quick clade identification of SARS-CoV-2 isolates"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9861936770492866,
      "result": {
        "original_header": "idCOV",
        "type": "Text_excerpt",
        "value": "idCOV is a phylogenetic pipeline for quickly identifying the clades of\nSARS-CoV-2 virus isolates from raw sequencing data based on a selected\nclade-defining marker list. Web and equivalent command-line interfaces are\navailable. It can be deployed on any Linux environment, including personal\ncomputer, HPC and the cloud.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Download",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Download the idCOV docker image and the indexed reference genome (human + SARS-Cov-2).\n\n```\nwget http://168.61.40.201/get-idcov/idcov_docker_image.tar.gz\nwget http://168.61.40.201/get-idcov/refs.tar.gz\n```\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xz-stjude/idcov/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xz-stjude/idcov/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xz-stjude/idcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "idCOV"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xz-stjude/idcov/master/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xz-stjude/idcov/master/workflow/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Docker",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[Install Docker](https://docs.docker.com/get-docker/). Confirm success by\nexecuting `docker images`. It should show you a list of your local docker\nimages. Note that this list may be empty for a fresh installation of Docker, in\nwhich case you will only see a line of column headers. Consult the [docker\ninstallation guide](https://docs.docker.com/get-docker/) if any error\noccurs.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Load the docker file",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ncat idcov_docker_image.tar.gz | gunzip | docker load\n```\n\nConfirm success by typing `docker images` in your shell. You should see a new image\ntagged \"idcov\" appearing in the list.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Visit the website",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Open your browser and enter `http://<IP to the server machine>:8071` and you should see the website showing up.\n\nIf you deployed the server on the same machine where your browser is, the `<IP to the server machine>` is simply `localhost`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xz-stjude/idcov/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Fulcrologic, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/web_app/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "idcov"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xz-stjude"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Clojure",
        "size": 140178,
        "type": "Programming_language",
        "value": "Clojure"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 14103,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Groovy",
        "size": 13243,
        "type": "Programming_language",
        "value": "Groovy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 4091,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2467,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1269,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 493,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Emacs Lisp",
        "size": 314,
        "type": "Programming_language",
        "value": "Emacs Lisp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 287,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 243,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Start a run",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Click \"run\" to the right of the newly created project. A new \"run\" will be created in the \"Runs\" tab.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Monitor the run progress",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Make sure the \"Auto-refresh\" button on the top of the screen is activated.\n\nYou should see the new run is reporting its progress in the \"Messages\" tab.\n\nThe run is successul when you see the icon of the run turns green.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:15:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "6. Check the report and files",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Go to the \"Report\" tab to check the report and the \"Files\" tab to download the output files.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "5. Start the server",
        "parent_header": [
          "idCOV",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "```\ndocker run -p 8071:8080 \\\n  -v `pwd`/refs:/refs \\\n  -v `pwd`/idcov:/idcov \\\n  -it \\\n  idcov:latest\n```\n\nYou should see a welcome message that says the server is now listening to the port 8071.\n\nNote: The `` `pwd\\`/idcov`` part specifies the folder where idcov is going to\nstore its persistent state which includes the user account information and\nprojects. Deleting this folder in the host file system effectively \"factory resets\" idCOV.\nYou may want to specify this folder at a different location such as\n`/var/lib/idcov` to suit your needs. **Be sure that both refs and idcov paths need to be\nabsolute (hence the `` `pwd` ``).**\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Register an account",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Click \"Sign up\" on the left panel to register for an account.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Log in",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "After successfully registered the account, log in with your credentials using the left panel.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Create a project",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Click the \"New project ...\" button on the toolbar to create a new project.\n\nIn the popped up dialog, enter a name for your project and upload the FastQ files.\n\nNote that currently idCOV supports pair-end sequences only and the FastQ files\nshould be in pairs, and named as \"\\*R1.fastq.gz\" and \"\\*R2.fastq.gz\".\n\nAfter clicking the \"Create Project\" button, the upload process will begin and the progress will be shown on the toolbar.\n\nWhen all files are uploaded, you will see a new project with your specified name appearing in the list of projects.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Start a run",
        "parent_header": [
          "idCOV",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Click \"run\" to the right of the newly created project. A new \"run\" will be created in the \"Runs\" tab.\n"
      },
      "source": "https://raw.githubusercontent.com/xz-stjude/idcov/master/README.md",
      "technique": "header_analysis"
    }
  ]
}