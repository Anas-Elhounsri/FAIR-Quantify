{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling"
        ],
        "type": "Text_excerpt",
        "value": "We would like to thank Patrick Grinaway and John Chodera for their basic code framework for NCMC in OpenMM (see https://github.com/choderalab/perses/tree/master/perses/annihilation), and John Chodera and Christopher Bayly for their helpful discussions.\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 13.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Publication",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Citations"
        ],
        "type": "Text_excerpt",
        "value": "- [Gill, S; Lim, N. M.; Grinaway, P.; Rustenburg, A. S.; Fass, J.; Ross, G.; Chodera, J. D.; Mobley, D. L. \u201cBinding Modes of Ligands Using Enhanced Sampling (BLUES): Rapid Decorrelation of Ligand Binding Modes Using Nonequilibrium Candidate Monte Carlo\u201d](https://pubs.acs.org/doi/abs/10.1021/acs.jpcb.7b11820) - Journal of Physical Chemistry B. February 27, 2018\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preprints",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Citations"
        ],
        "type": "Text_excerpt",
        "value": "- [BLUES v1](https://chemrxiv.org/articles/Binding_Modes_of_Ligands_Using_Enhanced_Sampling_BLUES_Rapid_Decorrelation_of_Ligand_Binding_Modes_Using_Nonequilibrium_Candidate_Monte_Carlo/5406907) - ChemRxiv September 19, 2017\n- [BLUES v2](https://doi.org/10.26434/chemrxiv.5406907.v2) - ChemRxiv September 25, 2017\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MobleyLab/blues"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute\n\nWe welcome contributions from external contributors, and this document\ndescribes how to merge code changes into blues. \n\n## Getting Started\n\n* Make sure you have a [GitHub account](https://github.com/signup/free).\n* [Fork](https://help.github.com/articles/fork-a-repo/) this repository on GitHub.\n* On your local machine,\n  [clone](https://help.github.com/articles/cloning-a-repository/) your fork of\n  the repository.\n\n## Making Changes\n\n* Add some really awesome code to your local fork.  It's usually a [good\n  idea](http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/)\n  to make changes on a\n  [branch](https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/)\n  with the branch name relating to the feature you are going to add.\n* When you are ready for others to examine and comment on your new feature,\n  navigate to your fork of blues on GitHub and open a [pull\n  request](https://help.github.com/articles/using-pull-requests/) (PR). Note that\n  after you launch a PR from one of your fork's branches, all\n  subsequent commits to that branch will be added to the open pull request\n  automatically.  Each commit added to the PR will be validated for\n  mergability, compilation and test suite compliance; the results of these tests\n  will be visible on the PR page.\n* If you're providing a new feature, you must add test cases and documentation.\n* When the code is ready to go, make sure you run the test suite using pytest.\n* When you're ready to be considered for merging, check the \"Ready to go\"\n  box on the PR page to let the blues devs know that the changes are complete.\n  The code will not be merged until this box is checked, the continuous\n  integration returns checkmarks,\n  and multiple core developers give \"Approved\" reviews.\n\n# Additional Resources\n\n* [General GitHub documentation](https://help.github.com/)\n* [PR best practices](http://codeinthehole.com/writing/pull-requests-and-other-good-practices-for-teams-using-github/)\n* [A guide to contributing to software packages](http://www.contribution-guide.org)\n* [Thinkful PR example](http://www.thinkful.com/learn/github-pull-request-tutorial/#Time-to-Submit-Your-First-PR)\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-28T00:04:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-14T08:56:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Applications of nonequilibrium candidate Monte Carlo (NCMC) to ligand binding mode sampling"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8914919427969555,
      "result": {
        "original_header": "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
        "type": "Text_excerpt",
        "value": "This package takes advantage of non-equilibrium candidate Monte Carlo moves (NCMC) to help sample between different ligand binding modes. \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9700410908717763,
      "result": {
        "original_header": "Manifest",
        "type": "Text_excerpt",
        "value": "* `blues/` -  Source code and example scripts for BLUES toolkit\n* `devdocs/` - Class diagrams for developers\n* `devtools/` - Developer tools and documentation for conda, travis, and issuing a release\n* `images/` - Images/logo for repository\n* `notebooks` - Jupyter notebooks for testing/development\n \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9895701712926074,
      "result": {
        "original_header": "Versions:",
        "type": "Text_excerpt",
        "value": "- Version 0.0.1: Basic BLUES functionality/package\n- [Version 0.0.2](http://dx.doi.org/10.5281/zenodo.438714): Maintenance release fixing a critical bug and improving organization as a package.\n- [Version 0.0.3](http://dx.doi.org/10.5281/zenodo.569065): Refactored BLUES functionality and design.\n- [Version 0.0.4](http://dx.doi.org/10.5281/zenodo.569074): Minor bug fixes plus a functionality problem on some GPU configs.\n- [Version 0.1.0](http://dx.doi.org/10.5281/zenodo.837900): Refactored move proposals, added Monte Carlo functionality, Smart Darting moves, and changed alchemical integrator.\n- [Version 0.1.1](https://doi.org/10.5281/zenodo.1028925): Features to boost move acceptance such as freezing atoms in the NCMC simulation and adding extra propagation steps in the alchemical integrator.\n- [Version 0.1.2](https://doi.org/10.5281/zenodo.1040364): Incorporation of SideChainMove functionality (Contributor: Kalistyn Burley)\n- [Version 0.1.3](https://doi.org/10.5281/zenodo.1048250): Improvements to simulation logging functionality and parameters for extra propagation.\n- [Version 0.2.0](https://doi.org/10.5281/zenodo.1284568): YAML support, API changes, custom reporters.\n- [Version 0.2.1](https://doi.org/10.5281/zenodo.1288925): Bug fix in alchemical correction term\n- [Version 0.2.2](https://doi.org/10.5281/zenodo.1324415): Bug fixes for OpenEye tests and restarting from the YAML; enhancements to the Logger and package installation.\n- [Version 0.2.3](https://zenodo.org/badge/latestdoi/62096511): Improvements to Travis CI, fix in velocity synicng, and add tests for checking freezing selection.\n- [Version 0.2.4](https://doi.org/10.5281/zenodo.2672932): Added a simple test system (charged ethylene) which can run quickly on CPU.\n- [Version 0.2.5](https://doi.org/10.5281/zenodo.4118606): This contains numerous small changes/fixes since the v0.2.4 release, but most notably includes the introduction of water hopping as described at https://doi.org/10.26434/chemrxiv.12429464.v1\n \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling"
        ],
        "type": "Text_excerpt",
        "value": "For documentation on the BLUES modules see [ReadTheDocs: Modules](https://mobleylab-blues.readthedocs.io/en/latest/module_doc.html)\nFor a tutorial on how to use BLUES see [ReadTheDocs: Tutorial](https://mobleylab-blues.readthedocs.io/en/latest/tutorial.html)\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BLUES using NCMC",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "This package takes advantage of non-equilibrium candidate Monte Carlo moves (NCMC) to help sample between different ligand binding modes using the OpenMM simulation package.  One goal for this package is to allow for easy additions of other moves of interest, which will be covered below.\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Actually using BLUES",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "The integrator of `BLUES` contains the framework necessary for NCMC.  Specifically, the integrator class calculates the work done during a NCMC move. It also controls the lambda scaling of parameters. The integrator that BLUES uses inherits from `openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator` to keep track of the work done outside integration steps, allowing Monte Carlo (MC) moves to be incorporated together with the NCMC thermodynamic perturbation protocol. Currently the `openmmtools.alchemy` package is used to generate the lambda parameters for the ligand, allowing alchemical modification of the sterics and electrostatics of the system.\nThe `Simulation` class in `blues/simulation.py` serves as a wrapper for running NCMC simulations.\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Implementing Custom Moves",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "Users can implement their own MC moves into NCMC by inheriting from an appropriate `blues.moves.Move` class and constructing a custom `move()` method that only takes in an Openmm context object as a parameter. The `move()` method will then access the positions of that context, change those positions, then update the positions of that context. For example if you would like to add a move that randomly translates a set of coordinates the code would look similar to this pseudocode:\n\n```python\nfrom blues.moves import Move\nclass TranslationMove(Move):\n   \tdef __init__(self, atom_indices):\n   \t\tself.atom_indices = atom_indices\n   \tdef move(context):\n   \t\"\"\"pseudocode for move\"\"\"\n   \t\tpositions = context.context.getState(getPositions=True).getPositions(asNumpy=True)\n   \t\t#get positions from context\n   \t\t#use some function that translates atom_indices\n   \t\tnewPositions = RandomTranslation(positions[self.atom_indices])\n   \t\tcontext.setPositions(newPositions)\n   \t\treturn context\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Combining Moves",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "**Note: This feature has not been tested, use at your own risk.**\nIf you're interested in combining moves together sequentially\u2013say you'd like to perform a rotation and translation move together\u2013instead of coding up a new `Move` class that performs that, you can instead leverage the functionality of existing `Move`s using the `CombinationMove` class. `CombinationMove` takes in a list of instantiated `Move` objects. The `CombinationMove`'s `move()` method perfroms the moves in either listed or reverse order. Replicating a rotation and translation move on t, then, can effectively be done by passing in an instantiated TranslationMove (from the pseudocode example above) and RandomLigandRotation.\nOne important non-obvious thing to note about the CombinationMove class is that to ensure detailed balance is maintained, moves are done half the time in listed order and half the time in the reverse order.\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MobleyLab/blues/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MobleyLab/blues/master/docs/BLUES_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/docs/BLUES_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MobleyLab/blues/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MobleyLab/blues"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BLUES: Binding modes of Ligands Using Enhanced Sampling"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MobleyLab/blues/master/devtools/travis-ci/before_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MobleyLab/blues/master/devtools/conda-recipe/conda_upload.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/62096511"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling"
        ],
        "type": "Text_excerpt",
        "value": "[ReadTheDocs: Installation](https://mobleylab-blues.readthedocs.io/en/latest/installation.html)\n\nRecommended: Install releases from conda\n\n```bash\n# Create a clean environment (python 3.6 is required)\nconda create -n blues python=3.6\nconda activate blues\n\n# Install OpenEye toolkits and related tools first\nconda install -c openeye/label/Orion -c omnia oeommtools\nconda install -c openeye openeye-toolkits\n\n# Install necessary dependencies\nconda install -c omnia -c conda-forge openmmtools=0.15.0 openmm=7.4.2 numpy cython\n\nconda install -c mobleylab blues\n```\n\nInstall from source (if conda installation fails)\n```bash\n# Clone the BLUES repository\ngit clone https://github.com/MobleyLab/blues.git ./blues\n\n# Install some dependencies\nconda install -c omnia -c conda-forge openmmtools=0.15.0 openmm=7.4.2 numpy cython\n\n# To use SideChainMove class, OpenEye toolkits and related tools are requried (requires OpenEye License)\nconda install -c openeye/label/Orion -c omnia oeommtools\nconda install -c openeye openeye-toolkits\n\n# Install BLUES package from the top directory\npip install -e .\n\n# To validate your BLUES installation run the tests (need pytest)\ncd blues/tests\npytest -v -s\n```\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9589357981442124,
      "result": {
        "original_header": "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
        "type": "Text_excerpt",
        "value": "Latest release:\n[![Build Status](https://travis-ci.org/MobleyLab/blues.svg?branch=master)](https://travis-ci.org/MobleyLab/blues)\n[![Documentation Status](https://readthedocs.org/projects/mobleylab-blues/badge/?version=stable)](https://mobleylab-blues.readthedocs.io/en/stable/?badge=stable)\n[![codecov](https://codecov.io/gh/MobleyLab/blues/branch/master/graph/badge.svg)](https://codecov.io/gh/MobleyLab/blues)\n[![Anaconda-Server Badge](https://anaconda.org/mobleylab/blues/badges/version.svg)](https://anaconda.org/mobleylab/blues)\n [![DOI](https://zenodo.org/badge/62096511.svg)](https://zenodo.org/badge/latestdoi/62096511)\n \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9990748370246476,
      "result": {
        "original_header": "Manifest",
        "type": "Text_excerpt",
        "value": "* `blues/` -  Source code and example scripts for BLUES toolkit\n* `devdocs/` - Class diagrams for developers\n* `devtools/` - Developer tools and documentation for conda, travis, and issuing a release\n* `images/` - Images/logo for repository\n* `notebooks` - Jupyter notebooks for testing/development\n \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995585574155796,
      "result": {
        "original_header": "Versions:",
        "type": "Text_excerpt",
        "value": "- Version 0.0.1: Basic BLUES functionality/package\n- [Version 0.0.2](http://dx.doi.org/10.5281/zenodo.438714): Maintenance release fixing a critical bug and improving organization as a package.\n- [Version 0.0.3](http://dx.doi.org/10.5281/zenodo.569065): Refactored BLUES functionality and design.\n- [Version 0.0.4](http://dx.doi.org/10.5281/zenodo.569074): Minor bug fixes plus a functionality problem on some GPU configs.\n- [Version 0.1.0](http://dx.doi.org/10.5281/zenodo.837900): Refactored move proposals, added Monte Carlo functionality, Smart Darting moves, and changed alchemical integrator.\n- [Version 0.1.1](https://doi.org/10.5281/zenodo.1028925): Features to boost move acceptance such as freezing atoms in the NCMC simulation and adding extra propagation steps in the alchemical integrator.\n- [Version 0.1.2](https://doi.org/10.5281/zenodo.1040364): Incorporation of SideChainMove functionality (Contributor: Kalistyn Burley)\n- [Version 0.1.3](https://doi.org/10.5281/zenodo.1048250): Improvements to simulation logging functionality and parameters for extra propagation.\n- [Version 0.2.0](https://doi.org/10.5281/zenodo.1284568): YAML support, API changes, custom reporters.\n- [Version 0.2.1](https://doi.org/10.5281/zenodo.1288925): Bug fix in alchemical correction term\n- [Version 0.2.2](https://doi.org/10.5281/zenodo.1324415): Bug fixes for OpenEye tests and restarting from the YAML; enhancements to the Logger and package installation.\n- [Version 0.2.3](https://zenodo.org/badge/latestdoi/62096511): Improvements to Travis CI, fix in velocity synicng, and add tests for checking freezing selection.\n- [Version 0.2.4](https://doi.org/10.5281/zenodo.2672932): Added a simple test system (charged ethylene) which can run quickly on CPU.\n- [Version 0.2.5](https://doi.org/10.5281/zenodo.4118606): This contains numerous small changes/fixes since the v0.2.4 release, but most notably includes the introduction of water hopping as described at https://doi.org/10.26434/chemrxiv.12429464.v1\n \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8431918061425073,
      "result": {
        "original_header": "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
        "type": "Text_excerpt",
        "value": "<img align=\"right\" src=\"./images/blues.png\" width=\"300\"> \n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MobleyLab/blues/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2016, Mobley Lab at UC Irvine.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/MobleyLab/blues/master/./images/blues.png"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "blues"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MobleyLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 466800,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 4339,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2327,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mobleylab-blues.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidlmobley",
          "type": "User"
        },
        "date_created": "2020-10-16T21:44:47Z",
        "date_published": "2020-10-22T19:12:10Z",
        "description": "This contains numerous small changes/fixes since the v0.2.4 release, but most notably includes the introduction of water hopping as described at https://doi.org/10.26434/chemrxiv.12429464.v1.\r\n\r\nIt also includes fixes to documentation.",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.5",
        "name": "Version 0.2.5",
        "release_id": 32935897,
        "tag": "0.2.5",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/32935897",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/32935897",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2019-05-07T19:02:15Z",
        "date_published": "2019-05-07T19:37:43Z",
        "description": "This point release:\r\n- adds a simple test system (charged ethylene) which can run quickly on CPU.\r\n- Adds python 3.7 support",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.4",
        "name": "v0.2.4",
        "release_id": 17205616,
        "tag": "0.2.4",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/17205616",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/17205616",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2018-09-04T22:10:56Z",
        "date_published": "2018-09-04T23:38:30Z",
        "description": "- Adds the standard python `.gitignore` file\r\n- Adds a `.github/` which holds template files for PRs  and guidelines for contributing to the code\r\n- Adds Sphinx docs and ReadTheDocs to the repository\r\n- Docstrings are now formatted in numpydoc style\r\n- Code is styled in YAPF style; configured by the `setup.cfg` file\r\n- Re-wrote the tests to use pytest\r\n- Adds CodeCov to the repository\r\n- Adds Versioneer to the repository\r\n- Improvements to Travis-CI\r\n   - Builds and deploys conda packages for py3.5/3.6 for both osx/linux platforms\r\n   - Deploys the conda environment yml file onto anaconda cloud\r\n   - Conda packages follow convention, example for version 0.2.3 on python3.5\r\n      - `blues-0.2.3-py35g{SHORTHASH}_{#UNRELEASED COMMITS}` or `blues-0.2.3-py35g6aaba2d_5`\r\n- Minor API changes, renaming some functions in the BLUESSimulation to adhere to conventional python name schemes\r\n   - Move the `engine.py` module (which housed just one single class) into the `moves.py` module\r\n   - Fix in the `AlchemicalExternalLangevinIntegrator` for issue #115 [ref](https://github.com/nathanmlim/blues/blob/8079e40bda8c092da65123722ba3b54376ea5268/blues/integrators.py#L136)\r\n- Make package compatible for openmm=7.2.2 and openmmtools=0.15.0\r\n- Includes changes from #150 \r\n   - Removes some code redundancy in syncing the simulation states\r\n   - Correctly resets the velocities before the start of each MD simulation [ref](https://github.com/MobleyLab/blues/blob/fix-0.2.3/blues/simulation.py#L1248)\r\n   - Corrects behavior in syncing the simulation states [ref](https://github.com/MobleyLab/blues/blob/9172607d3b1d7941a894e51d130c85a77f1bbbac/blues/simulation.py#L1143)\r\n   - Adds some checks in the freezing selection [ref](https://github.com/MobleyLab/blues/blob/9172607d3b1d7941a894e51d130c85a77f1bbbac/blues/simulation.py#L439)",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.3",
        "name": "Version 0.2.3",
        "release_id": 12730813,
        "tag": "0.2.3",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/12730813",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/12730813",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2018-07-24T19:45:27Z",
        "date_published": "2018-07-31T16:40:37Z",
        "description": "Bug fixes for OpenEye tests and restarting from the YAML; enhancements to the Logger and package installation.\r\n\r\n- PR #144, #145 Ensures installation through setup.py installs dependencies\r\n- PR #143 Fixes a bug when restarting through the YAML file\r\n- PR #140 Adds the ability to stream information from the Logger module to stdout or a file\r\n- PR #135, #139 Fixes unittests to isolate OpenEye related code, skips tests if no OE_LICENSE or OpenEye-toolskits installation is found. ",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.2",
        "name": "Version 0.2.2",
        "release_id": 12188418,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/12188418",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/12188418",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2018-06-14T03:33:06Z",
        "date_published": "2018-06-14T03:35:52Z",
        "description": "PR #125:  Critical bug fix in alchemical correction term ",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.1",
        "name": "Version 0.2.1",
        "release_id": 11473652,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/11473652",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/11473652",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2018-06-04T01:58:00Z",
        "date_published": "2018-06-06T19:38:17Z",
        "description": "Release for changes from PR #117 \r\n\r\n- BLUES will now support *partial* configuration from a YAML file\r\n  - Supported settings: Input/output, system parameters, simulation parameters, freezing/restraining atoms, and configuring reporters \r\n- API Changes\r\n   - Addition of `SystemFactory` class: Provides methods for freezing or restraining atoms in your system\r\n   - Addition of `SimulationFactory`: Allows addition of a MonteCarloBarostat to your System, enabling NPT simulations\r\n   - Name changes methods in the `Simulation` class\r\n- Addition of `reporters.py` module\r\n   - Addition of `ReporterConfig` class, provides functionality for generating/configuring a some recommended/customized reporters for BLUES simulations:\r\n     - `BLUESHDF5Reporter` subclass from mdtraj.HDF5Reporter\r\n        - Custom features include: \r\n           - specifying the indices of frames to be recorded, \r\n           - protocolWork/alchemicalLambda from the NCMC simulation \r\n           - simulation parameters\r\n           - exporting your conda environment\r\n     - `BLUESStateDataReporter` subclass from openmm.app.StateDataReporter\r\n        - Custom features include:\r\n           - title field to set the string prefix that is printed with each report line. \r\n           - enable writing to a file or *file-like object for streaming the data* (logging.Logger) to the terminal window,\r\n           - specifying the indices of frames to be recorded\r\n           - currentIter/protocolWork/alchemicalLambda from the NCMC simulation \r\n     - `NetCDF4Reporter` subclass from parmed.openmm.reporters.NetCDFReporter\r\n         - Custom features includes:\r\n           - Add ability to properly flush the data to disc on call to report()\r\n           - specifying the indices of frames to be recorded\r\n           - protocolWork/alchemicalLambda from the NCMC simulation\r\n     - `parmed.openmm.reporters.RestartReporter`, **enabling restarts from the rst7 file**\r\n",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.2.0",
        "name": "Version 0.2.0",
        "release_id": 11357100,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/11357100",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/11357100",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2017-11-13T17:33:42Z",
        "date_published": "2017-11-13T17:41:11Z",
        "description": "- General enhancements to simulation logging\r\n  - Moved initialization of the `logger` module into simulation.py\r\n  - Added reporter for the NCMC simulation\r\n  - Print out simulation information/timing\r\n  - Lambda range to add extra propagation steps now controlled by a single parameter `prop_lambda`\r\n    - Added docstrings for `nprop` and `prop_lambda`",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.1.3",
        "name": "Version 0.1.3",
        "release_id": 8495801,
        "tag": "0.1.3",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/8495801",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/8495801",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2017-11-01T19:00:38Z",
        "date_published": "2017-11-01T19:02:10Z",
        "description": "-Introduction of a new movetype: SideChainMove\r\n  - Requires: oeommtools `conda install -c openeye/label/Orion oeommtools -c omnia`\r\n- Dropped Python 2.7 support\r\n- Fixes for the logger functionality\r\n",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.1.2",
        "name": "version 0.1.2",
        "release_id": 8347659,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/8347659",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/8347659",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2017-10-19T18:38:59Z",
        "date_published": "2017-10-19T19:06:39Z",
        "description": "- Adding extra propagation steps between lambda 0.2 -> 0.8 in the alchemical integrator\r\n   - User parameter `nprop = 5` (Default).\r\n- Zeroing masses of atoms outside the 5.0A distance (Default) of the ligand in the alchemical system.\r\n   - Distance for freezing atoms is now a user parameter with `freeze_distance`\r\n   - Added option to set selection center `freeze_center` Default: 'LIG'\r\n   - Added option to include solvent `freeze_solvent` Default: 'HOH,NA,CL'\r\n- Switch print statements for `logging` module\r\n- Made input parameters for functions in the `Simulation` class explicit \r\n   - Set default values but can pass the input parameters from the `opt` dictionary\r\n- New parameter `write_move` for the `acceptRejectNCMC` function\r\n   - Setting `write_move = True` will write the accepted move to a PDB file.\r\n- Changed `runNCMC()` to `run()`.\r\n   - Avoids potential confusion with function `simulateNCMC()`\r\n- Simplified NCMC trajectory reporter\r\n    - Replaced`write_ncmc` parameter with `ncmc_traj`\r\n    - If a string is specified for (i.e. `ncmc_traj = ncmc_output`, it will write every NCMC step to a DCD file named `ncmc_output.dcd`\r\n- Added a function `_getSimulationInfo()`  that will print out the simulation time information",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.1.1",
        "name": "Version 0.1.1",
        "release_id": 8186955,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/8186955",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/8186955",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "sgill2",
          "type": "User"
        },
        "date_created": "2017-08-01T20:42:29Z",
        "date_published": "2017-08-01T23:23:01Z",
        "description": "This release:\r\n* Adds refactored move proposal scheme\r\n    * Allows for mixing of move types using `CombinationMove`\r\n    * Allows for choosing between a set of moves with different probabilities\r\n* Adds SmartDartMove` move class, which performs Smart Darting moves\r\n* Adds Monte Carlo Functionality\r\n* Switches alchemical VV integrator with an alchemical Langevin splitting integrator\r\n* Longrange Dispersion corrections for the alchemical integrator is turned off\r\n    * This greatly increases alchemical integration speeds (see https://github.com/choderalab/openmmtools/pull/218)",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.1.0",
        "name": "Version 0.1.0",
        "release_id": 7249460,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/7249460",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/7249460",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nathanmlim",
          "type": "User"
        },
        "date_created": "2017-04-26T00:29:08Z",
        "date_published": "2017-04-26T00:37:50Z",
        "description": "This release fixes a critical bug in OpenMM Simulation generation (see issue #57):\r\n- Removed lines that explicitly assigns the Simulation to a set GPU Device.\r\n- Removed the `alchemy` requirement in the meta.yml (moved to openmmtools).\r\n- `example.py` settings revised to give better benchmark timings.",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.0.4",
        "name": "Version 0.0.4",
        "release_id": 6188843,
        "tag": "0.0.4",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/6188843",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/6188843",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidlmobley",
          "type": "User"
        },
        "date_created": "2017-04-25T21:49:36Z",
        "date_published": "2017-04-25T22:57:37Z",
        "description": "This release:\r\n- Does a major rearrangement and modularization of the BLUES code \r\n- Fixes a bug in the alchemical correction factor\r\n- Improves documentation dramatically, including adding developer documentation\r\n- Temporarily disables smart darting (see #47 )",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.0.3",
        "name": "Version 0.0.3",
        "release_id": 6188230,
        "tag": "0.0.3",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/6188230",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/6188230",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidlmobley",
          "type": "User"
        },
        "date_created": "2017-03-28T20:33:18Z",
        "date_published": "2017-03-28T20:35:31Z",
        "description": "This release:\r\n- Fixes a critical bug relating to the alchemical correction factor\r\n- Improves arrangement of blues into a package (for making it conda installable)\r\n- Improves the README",
        "html_url": "https://github.com/MobleyLab/blues/releases/tag/0.0.2",
        "name": "Version 0.0.2",
        "release_id": 5900213,
        "tag": "0.0.2",
        "tarball_url": "https://api.github.com/repos/MobleyLab/blues/tarball/0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MobleyLab/blues/releases/5900213",
        "value": "https://api.github.com/repos/MobleyLab/blues/releases/5900213",
        "zipball_url": "https://api.github.com/repos/MobleyLab/blues/zipball/0.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling"
        ],
        "type": "Text_excerpt",
        "value": "BLUES is compatible with MacOSX/Linux with Python=3.6.\n\nInstall [miniconda](http://conda.pydata.org/miniconda.html) according to your system.\n\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:20:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 33
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Use",
        "parent_header": [
          "`BLUES`: Binding modes of Ligands Using Enhanced Sampling",
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "An example of how to set up a simulation sampling the binding modes of toluene bound to T4 lysozyme using NCMC and a rotational move can be found in `examples/example_rotmove.py`\n"
      },
      "source": "https://raw.githubusercontent.com/MobleyLab/blues/master/README.md",
      "technique": "header_analysis"
    }
  ]
}