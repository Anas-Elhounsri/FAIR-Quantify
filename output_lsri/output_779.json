{
  "application_domain": [
    {
      "confidence": 0.8577497524979366,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 5.73,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Snehalikalall/CopulaGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-12T14:20:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-17T18:19:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9768837122221672,
      "result": {
        "original_header": "CopulaGCN",
        "type": "Text_excerpt",
        "value": "A topology preserving graph convolution network for clustering of single-cell RNA seq data\n \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8176208310283182,
      "result": {
        "original_header": "Preprocessing of raw data",
        "type": "Text_excerpt",
        "value": "    Biase_data<- readRDS(\"klein.rds\")\n    data <- assay(Biase_data) \n    annotation <- Biase_data[[1]] #already factor type class\n    colnames(data) <- annotation\n    data_process = normalized_data(data)\n    write.table(t(data_process),file=\"UCFS/Data/data_process.csv\",sep=\",\",row.names = FALSE,col.names = FALSE)\n \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Snehalikalall/CopulaGCN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/Python/GCN_on_copulamat.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/Python/GCN_on_copulamat.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Snehalikalall/CopulaGCN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Snehalikalall/CopulaGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CopulaGCN"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "CopulaGCN"
        ],
        "type": "Text_excerpt",
        "value": "library(\"devtools\")\n\ninstall_github(\"Snehalikalall/CopulaGCN\")\n\nCheck the installation:\n\nlibrary(scGCConv)\n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9197017464094075,
      "result": {
        "original_header": "Load required packages",
        "type": "Text_excerpt",
        "value": "R packages \nPython Packages: \n \n    pip install -U scikit-learn==0.19.2\n    pip install multiprocess \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.860886376721046,
      "result": {
        "original_header": "Preprocessing of raw data",
        "type": "Text_excerpt",
        "value": "Preprocess the raw data using DataProcessing.R function \n    Biase_data<- readRDS(\"klein.rds\")\n    data <- assay(Biase_data) \n    annotation <- Biase_data[[1]] #already factor type class\n    colnames(data) <- annotation\n    data_process = normalized_data(data)\n    write.table(t(data_process),file=\"UCFS/Data/data_process.csv\",sep=\",\",row.names = FALSE,col.names = FALSE)\n \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Snehalikalall/CopulaGCN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CopulaGCN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Snehalikalall"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 18638,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1842,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1690,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-requisites",
        "parent_header": [
          "CopulaGCN"
        ],
        "type": "Text_excerpt",
        "value": "> R version  4.0.2\n\n> Python 3.7\n\n> Python packages: sklearn-0.19.2, multiprocessing, tensorflow 2.0\n\n> R packages: copula, foreach, doParallel\n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:20:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use LSH smpling",
        "parent_header": [
          "CopulaGCN"
        ],
        "type": "Text_excerpt",
        "value": "Run LSPCAnew.py to select a sub-sample of genes as:  python LSPCAnew.py \n\nThe function returns the sampled data \"lspcadata.csv\" \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get copula based cell-cell correlation matrix from sampled data",
        "parent_header": [
          "CopulaGCN"
        ],
        "type": "Text_excerpt",
        "value": "Use copula_cell_cell_similarmatrix.R to get the cell-cell correlation matrix.\n\n    # load the \"lspcadata.csv\" in R file (#should be genes in row, cells in coloumn).  \n    lspcadata<-as.matrix(read.csv(\"Data/lspcadata.csv\",header=FALSE))\n    p=40\n    \n    #P: Number of cores, default is 40\n\n    # Copula based cell cell correlation matrix generation, the function returns (cellxcell) matrix\n    copulacorrmat=copulacellmatrix(lspcadata,p)\n    "
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get low dimensional embedding from copula based cell-cell correlation matrix",
        "parent_header": [
          "CopulaGCN"
        ],
        "type": "Text_excerpt",
        "value": "    \n    Use GCN_on_copulamat.ipynb to get the low dimensional embedding matrix.\n    \n    load the \"copulacorrmat.csv\" in the above ipynb file (#should be cellxcell) from .\n    \n   \n"
      },
      "source": "https://raw.githubusercontent.com/Snehalikalall/CopulaGCN/master/README.md",
      "technique": "header_analysis"
    }
  ]
}