{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nabstract: \"Genome assembly is increasingly performed on long, uncorrected reads. Assembly quality may be degraded due to unfiltered chimeric reads; also, the storage of all read overlaps can take up to terabytes of disk space.We introduce two tools: yacrd for  chimera removal and read scrubbing, and fpa for filtering out spurious overlaps. We show that yacrd results in higher-quality assemblies and is one hundred times faster than the best available alternative.https://github.com/natir/yacrd and https://github.com/natir/fpa.Supplementary data are available at Bioinformatics online.\"\nauthors: \n  -\n    affiliation: \" Department of Computer Science , Inria, Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL, Lille F-59000, France\"\n    family-names: Marijon\n    given-names: Pierre\n    orcid: \"https://orcid.org/0000-0002-6694-6873\"\n  -\n    affiliation: \" Department of Computational Biology , Institut Pasteur, C3BI USR 3756 IP CNRS, Paris, France\"\n    family-names: Chikhi\n    given-names: Rayan\n    orcid: \"https://orcid.org/0000-0003-1099-8735\"\n  -\n    affiliation: \" Univ. Lille , CNRS, Centrale Lille, UMR 9189 - CRIStAL - Centre de Recherche en Informatique Signal et Automatique de Lille, F-59000 Lille, France\"\n    family-names: \"Varr\u00e9\"\n    given-names: \"Jean-St\u00e9phane\"\n    orcid: \"https://orcid.org/0000-0001-6322-0519\"\ncff-version: \"1.1.0\"\ndate-released: 2020-04-21\ndoi: \"10.1093/bioinformatics/btaa262\"\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/natir/yacrd\"\ntitle: \"yacrd and fpa: upstream tools for long-read genome assembly\"\n..."
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb"
        ],
        "type": "Text_excerpt",
        "value": "If you use yacrd in your research, please cite the following publication:\n\n```\nPierre Marijon, Rayan Chikhi, Jean-St\u00e9phane Varr\u00e9, yacrd and fpa: upstream tools for long-read genome assembly, Bioinformatics, btaa262, https://doi.org/10.1093/bioinformatics/btaa262\n```\n\nbibtex format:\n```\n@article {@article{Marijon_2020,\n\tdoi = {10.1093/bioinformatics/btaa262},\n\turl = {https://doi.org/10.1093%2Fbioinformatics%2Fbtaa262},\n\tyear = 2020,\n\tmonth = {apr},\n\tpublisher = {Oxford University Press ({OUP})},\n\tauthor = {Pierre Marijon and Rayan Chikhi and Jean-St{\\'{e}}phane Varr{\\'{e}}},\n\teditor = {Inanc Birol},\n\ttitle = {yacrd and fpa: upstream tools for long-read genome assembly},\n\tjournal = {Bioinformatics}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Pierre Marijon and Rayan Chikhi and Jean-St{\\'{e}}phane Varr{\\'{e}}",
        "doi": "10.1093/bioinformatics/btaa262",
        "format": "bibtex",
        "title": "yacrd and fpa: upstream tools for long-read genome assembly",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1093%2Fbioinformatics%2Fbtaa262",
        "value": "@article{@article{Marijon_2020,\n    journal = {Bioinformatics},\n    title = {yacrd and fpa: upstream tools for long-read genome assembly},\n    editor = {Inanc Birol},\n    author = {Pierre Marijon and Rayan Chikhi and Jean-St{\\'{e}}phane Varr{\\'{e}}},\n    publisher = {Oxford University Press ({OUP})},\n    month = {apr},\n    year = {2020},\n    url = {https://doi.org/10.1093%2Fbioinformatics%2Fbtaa262},\n    doi = {10.1093/bioinformatics/btaa262},\n}"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/natir/yacrd"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-28T23:29:17Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-17T02:58:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Yet Another Chimeric Read Detector"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9753851320272415,
      "result": {
        "original_header": "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
        "type": "Text_excerpt",
        "value": "1. computation of pile-up coverage for each read\n2. detection of chimeras \nChimera detection is done as follows: \n1. for each region where coverage is smaller or equal than `min_coverage` (default 0), yacrd creates a _bad region_.\n2. if there is a _bad region_ that starts at a position strictly after the beginning of the read and ends strictly before the end of the read, the read is marked as `Chimeric`\n3. if total _bad region_ length > 0.8 * read length, the read is marked as `NotCovered`\n4. if a read isn't `Chimeric` or `NotCovered` is `NotBad` \nMinimap2 v2.19 introduce some change in selection of seed and chaining of this seed to generate overlap. This change could have an important impacte on yacrd behavior, I can't guarantee the quality of yacrd results with this version of minimap2, I recommend you not to use a minimap2 version higher than 2.18.\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.986158044795876,
      "result": {
        "original_header": "Rationale",
        "type": "Text_excerpt",
        "value": "Long read error-correction tools usually detect and also remove chimeras. But it is difficult to isolate or retrieve information from just this step. \nDAStrim (from the [DASCRUBBER suite](https://github.com/thegenemyers/DASCRUBBER) does a similar job to yacrd but relies on a different mapping step, and uses different (likely more advanced) heuristics. Yacrd is simpler and easier to use. \nThis [repository](https://github.com/natir/yacrd-and-fpa-upstream-tools-for-lr-genome-assembly) contains a set of scripts to evaluate yacrd against other similar tools such as [DASCRUBBER](https://github.com/thegenemyers/DASCRUBBER/) and [miniscrub](https://bitbucket.org/berkeleylab/jgi-miniscrub) on real data sets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8783711640549298,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "Any set of long reads (PacBio, Nanopore, anything that can be given to [minimap2](https://github.com/lh3/minimap2)).\nyacrd takes the resulting PAF (Pairwise Alignement Format) from minimap2 or BLASR m4 file from some other long reads overlapper as input.\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9942791048827854,
      "result": {
        "original_header": "With conda",
        "type": "Text_excerpt",
        "value": "yacrd is avaible in [bioconda channel](https://bioconda.github.io/) \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9442511776504158,
      "result": {
        "original_header": "Minimum supported Rust version",
        "type": "Text_excerpt",
        "value": "Currently the minimum supported Rust version is 1.57.\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/natir/yacrd/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/natir/yacrd/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "natir/yacrd"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999921068863,
      "result": {
        "original_header": "With conda",
        "type": "Text_excerpt",
        "value": "if bioconda channel is setup you can run :\n```\nconda install yacrd\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "From source",
        "type": "Text_excerpt",
        "value": "```\ngit clone https://github.com/natir/yacrd.git\ncd yacrd\ngit checkout v0.6.2\n\ncargo build\ncargo test\ncargo install --path .\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/natir/yacrd/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, chimera, long-reads, sequence"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Pierre Marijon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yacrd"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "natir"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Rust",
        "size": 110609,
        "type": "Programming_language",
        "value": "Rust"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2022-03-01T11:16:57Z",
        "date_published": "2022-03-01T11:25:45Z",
        "description": "Change:\r\n- Replace rust-bio by noodles\r\n- Bump to stable Clap 3",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v1.0.0",
        "name": "Magby",
        "release_id": 60696842,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/60696842",
        "value": "https://api.github.com/repos/natir/yacrd/releases/60696842",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2020-07-18T19:13:09Z",
        "date_published": "2020-07-18T19:21:54Z",
        "description": "Some change:\r\n- Don't crash, when yacrd report parser see a perfect read\r\n- Replace `structopt` by `clap-3.0.0-beta`",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.6.2",
        "name": "Ivysaur",
        "release_id": 28704337,
        "tag": "v0.6.2",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/28704337",
        "value": "https://api.github.com/repos/natir/yacrd/releases/28704337",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2020-05-26T14:41:11Z",
        "date_published": "2020-05-26T14:46:45Z",
        "description": "Just some small change:\r\n- Avoid crash when paf record have different number of SAM like optional file\r\n- Update dependency\r\n- Use niffler release version",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.6.1",
        "name": "Vaporeon",
        "release_id": 26903777,
        "tag": "v0.6.1",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/26903777",
        "value": "https://api.github.com/repos/natir/yacrd/releases/26903777",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2020-01-10T16:44:40Z",
        "date_published": "2020-01-10T16:49:31Z",
        "description": "Compatibility with previous version is broken, again yes I'm sorry but this is the last time\r\n\r\nChange:\r\n- all post-detection operation (extract, filter, split, scrubb) are now subcommand\r\n- chimeric-threshold option is renamed coverage\r\n- not-covered-threshold option is renamed not-coverage\r\n- memory usage is reduced but the length of read need to be lower than 2^32\r\n- add an ondisk mode to reduce again the memory usage, on this mode memory usage is linear in the number of read, in basic mode memory usage is linear in the number of overlap\r\n- more understandable error messages\r\n\r\nThanks to Peter Ebert (for the idea of disk mode), Luiz Iber (for niffler, and discovering of many useful crates), and all people they found bug in development and previous version.\r\n\r\nIt's probably the last version before 1.0\r\n",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.6.0",
        "name": "Flareon",
        "release_id": 22748901,
        "tag": "v0.6.0",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/22748901",
        "value": "https://api.github.com/repos/natir/yacrd/releases/22748901",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2019-02-22T14:26:17Z",
        "date_published": "2019-02-22T14:31:05Z",
        "description": "Break compatibility with previous version.\r\n\r\nAdd two subcommand:\r\n- chimeric: behavior of the previous version\r\n- scrubbing: removes all unsupported read fragments",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.5.1",
        "name": "Omanyte",
        "release_id": 15719993,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/15719993",
        "value": "https://api.github.com/repos/natir/yacrd/releases/15719993",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-10-09T15:49:34Z",
        "date_published": "2018-10-09T15:52:51Z",
        "description": "Bug correction:\r\n\r\n- MHAP shared min-mers can be float\r\n- correct error in help message\r\n\r\n",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.4.1",
        "name": "Hypno",
        "release_id": 13332475,
        "tag": "v0.4.1",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/13332475",
        "value": "https://api.github.com/repos/natir/yacrd/releases/13332475",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-09-28T18:49:24Z",
        "date_published": "2018-09-28T18:53:49Z",
        "description": "New Feature:\r\n- yacrd can write report in json if flag `-j` or `--json` are set\r\n\r\nNew PostDetection operation:\r\n- extract : write in name_extracted.{paf|mhap|fasta|fastq} Chimeric and Not_covered read\r\n- spilt: write in name_spilt.{fasta|fastq} part of read with sufficient coverage\r\n\r\nBug correction:\r\n- In PostDetection output name generation in fliterd input is `../something.other/test.fasta` output are `../something.other/test_filtred.fasta` not `._filtred./something.other/test.fasta`",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.4",
        "name": "Doduo",
        "release_id": 13156375,
        "tag": "v0.4",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/13156375",
        "value": "https://api.github.com/repos/natir/yacrd/releases/13156375",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-07-19T00:37:52Z",
        "date_published": "2018-07-20T06:43:13Z",
        "description": "Complete rewrite in Rust.\r\n\r\nChange log:\r\n\r\n- Support of compressed file\r\n- Read from stdin\r\n- Add unit and functional test",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.3",
        "name": "Ninetales",
        "release_id": 12020914,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/12020914",
        "value": "https://api.github.com/repos/natir/yacrd/releases/12020914",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-04-21T08:13:53Z",
        "date_published": "2018-04-21T08:22:14Z",
        "description": "Changelog:\r\n\r\n- Solve compilation error on gcc-5 \r\n- Add version option",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.2.1",
        "name": "Kabuto",
        "release_id": 10655120,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/10655120",
        "value": "https://api.github.com/repos/natir/yacrd/releases/10655120",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-04-12T08:37:10Z",
        "date_published": "2018-04-12T08:46:17Z",
        "description": "Changelog :\r\n\r\n- Huge optimization Big Thanks to @Piezoid !\r\n- Change in output format, better human readability\r\n\r\n",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.2",
        "name": "Arbok",
        "release_id": 10511231,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/10511231",
        "value": "https://api.github.com/repos/natir/yacrd/releases/10511231",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "natir",
          "type": "User"
        },
        "date_created": "2018-04-06T11:34:45Z",
        "date_published": "2018-04-12T08:47:39Z",
        "description": "First yacrd release !\r\n\r\nyacrd take long read mapping tools result (minimap, mhap, graphmap) and find chimeric long-read.\r\n",
        "html_url": "https://github.com/natir/yacrd/releases/tag/v0.1",
        "name": "yacrd 0.1",
        "release_id": 10375324,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/natir/yacrd/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/natir/yacrd/releases/10375324",
        "value": "https://api.github.com/repos/natir/yacrd/releases/10375324",
        "zipball_url": "https://api.github.com/repos/natir/yacrd/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb"
        ],
        "type": "Text_excerpt",
        "value": "- [Rust](https://www.rust-lang.org/) in stable channel\n- libgz\n- libbzip2\n- liblzma\n- [minimap2](https://github.com/lh3/minimap2) <= v2.18\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:05:30",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 72
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use yacrd report as input",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd",
          "Important note"
        ],
        "type": "Text_excerpt",
        "value": "You can use yacrd report as input in place of overlap file, `ondisk` option are ignored if you use yarcd report has input.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Find chimera",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd"
        ],
        "type": "Text_excerpt",
        "value": "```\nminimap2 -x {corresponding preset} reads.fq reads.fq > overlap.paf\nyacrd -i overlap.paf -o reads.yacrd\n```\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Post-detection operation",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd"
        ],
        "type": "Text_excerpt",
        "value": "yacrd can perform some post-detection operation:\n\n- filter: for sequence or overlap file, record with reads marked as Chimeric or NotCovered isn't write in output\n- extract: for sequence or overlap file, record contains reads marked as Chimeric or NotCovered is write in output\n- split: for sequence file bad region in middle of reads are removed, NotCovered read is removed\n- scrubb: for sequence file all bad region are removed, NotCovered read is removed\n\n```\nminimap2 -x {corresponding preset} reads.fq reads.fq > mapping.paf\nyacrd -i mapping.paf -o reads.yacrd filter -i reads.fasta -o reads.filter.fasta\nyacrd -i mapping.paf -o reads.yacrd extract -i reads.fasta -o reads.extract.fasta\nyacrd -i mapping.paf -o reads.yacrd split -i reads.fasta -o reads.split.fasta\nyacrd -i mapping.paf -o reads.yacrd scrubb -i reads.fasta -o reads.scrubb.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Read scrubbing overlapping recommended parameter",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd"
        ],
        "type": "Text_excerpt",
        "value": "We recommended this parameter for dataset with coverage upper than **30x**.\n\nFor nanopore data, we recommend using minimap2 with all-vs-all nanopore preset with a maximal distance between seeds fixe to 500 (option `-g 500`) to generate overlap. We recommend to run yacrd with minimal coverage fixed to 4 (option `-c`) and minimal coverage of read fixed to 0.4 (option `-n`).\n\nThis is an exemple of how run a yacrd scrubbing:\n```\nminimap2 -x ava-ont -g 500 reads.fasta reads.fasta > overlap.paf\nyacrd -i overlap.paf -o report.yacrd -c 4 -n 0.4 scrubb -i reads.fasta -o reads.scrubb.fasta\n```\n\nFor pacbio P6-C4 data, we recommend to use minimap2 with all-vs-all pacbio preset with a maximal distance between seeds fixe to 800 (option `-g 800`) to generate overlap. We recommend to run yacrd with minimal coverage fixed to 4 (option `-c 4`) and minimal coverage of read fixed to 0.4 (option `-n 0.4`).\n\n```\nminimap2 -x ava-pb -g 800 reads.fasta reads.fasta > overlap.paf\nyacrd -i overlap.paf -o report.yacrd -c 4 -n 0.4 scrubb -i reads.fasta -o reads.scrubb.fasta\n```\n\nFor pacbio Sequel data, we recommend to use minimap2 with all-vs-all pacbio preset with a maximal distance between seeds fixe to 5000 (option `-g 5000`) to generate overlap. We recommand to run yacrd with minimal coverage fixed to 3 (option `-c 3`) and minimal coverage of read fixed to 0.4 (option `-n 0.4`).\n\n```\nminimap2 -x ava-pb -g 5000 reads.fasta reads.fasta > overlap.paf\nyacrd -i overlap.paf -o report.yacrd -c 3 -n 0.4 scrubb -i reads.fasta -o reads.scrubb.fasta\n```\n\nIf you have parameter sets for other types of data do not hesitate to make a pull request to add them, thanks.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Extension",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd",
          "Important note"
        ],
        "type": "Text_excerpt",
        "value": "yacrd use extension to detect format file if your filename contains (anywhere):\n- `.paf`: file is consider has minimap file\n- `.m4`, `.mhap`: file is consider has blasr m4 file (mhap output)\n- `.fa`, `.fasta`: file is consider has fasta file\n- `.fq`, `.fastq`: file is consider has fastq file\n- `.yacrd`: file is consider has yacrd output file\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compression",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd",
          "Important note"
        ],
        "type": "Text_excerpt",
        "value": "yacrd automatically detect file if is compress or not (gzip, bzip2 and lzma compression is available). For post-detection operation, if input is compressed output have the same compression format.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use yacrd report as input",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "How to use Yacrd",
          "Important note"
        ],
        "type": "Text_excerpt",
        "value": "You can use yacrd report as input in place of overlap file, `ondisk` option are ignored if you use yarcd report has input.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Yet Another Chimeric Read Detector for long reads  \ud83e\uddec \ud83d\udcbb",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "```\nNotCovered readA 4599    3782,0,3782\n```\n\nHere, readA doesn't have sufficient coverage, there is a zero-coverage region of length 3782bp between positions 0 and 3782.\n\n```\nChimeric    readB   10452   862,1260,2122;3209,4319,7528\n```\n\nHere, readB is chimeric with 2 zero-coverage regions: one between bases 1260 and 2122, another between 4319 and 7528.\n"
      },
      "source": "https://raw.githubusercontent.com/natir/yacrd/master/Readme.md",
      "technique": "header_analysis"
    }
  ]
}