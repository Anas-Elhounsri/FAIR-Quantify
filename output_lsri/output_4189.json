{
  "application_domain": [
    {
      "confidence": 0.9987564121696202,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SouthGreenPlatform/PyRice"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-09-06T07:23:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-02T14:17:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyRice is an API to access some Rice public databases at the same time with consistent output. PyRice design is modular and implements a smart query system which fits the computing resources to optimize the query speed."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9539969912708182,
      "result": {
        "original_header": "List of supported databases",
        "type": "Text_excerpt",
        "value": "**Keywords are value of arguments in query module.**\n \n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.962058269103212,
      "result": {
        "original_header": "List of exception",
        "type": "Text_excerpt",
        "value": "    Throw when server response code is not 200. \n    Throw when database description is not found.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyrice.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SouthGreenPlatform/PyRice/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/Demo_PyRice.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/Demo_PyRice.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SouthGreenPlatform/PyRice/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SouthGreenPlatform/PyRice"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyRice - a Python package for query rice gene information"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from source:",
        "parent_header": [
          "PyRice - a Python package for query rice gene information"
        ],
        "type": "Text_excerpt",
        "value": "- Clone project from Github:\n  ```\n  git clone https://github.com/SouthGreenPlatform/PyRice.git\n  ```"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install from PyPI",
        "parent_header": [
          "PyRice - a Python package for query rice gene information"
        ],
        "type": "Text_excerpt",
        "value": "\n- If you install PyRice on your local machine:\n    ```\n    pip install pyrice\n    ```\n    \n- Now there is only version available (should use the latest version):\n     - Verrsion 0.2.0: Update reference for gene from Oryzabase. Add 2 new databases PlantTFDB for PyRice\n        * If you install PyRice on your local machine, please follow these steps:\n            + Please check carefully the current version of Chrome on your computer before downloading\n            + Download the [Chrome driver](https://chromedriver.chromium.org/downloads).\n            + After downloading, fill the file path lead to Chrome driver before querying:\n                ```py\n                from pyrice import utils\n                utils.chrome_path = \"the path of your Chrome driver\"\n                ``` \n  \n     - Version 0.1.9: PyRice on Google Colab or other cloud platform. Updating the change output format.\n \n     - Version 0.1.8: Addition of crawling JavaScript data with Selenium.\n    \n**IN PROCESS**: If you want to install the newest demo of PyRice: \n```\n!pip install -i https://test.pypi.org/simple/ pyrice\n```\n         \n- To see demo of package: [Demo_PyRice.ipynb](https://github.com/SouthGreenPlatform/PyRice/blob/master/Demo_PyRice.ipynb)\n    \n\n ## Instruction \n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8508921393752449,
      "result": {
        "original_header": "List of exception",
        "type": "Text_excerpt",
        "value": "    Throw requests.exceptions.RequestException \n    *requests* module exception.\n* Timeout Exception \n    Throw requests.exceptions.Timeout \n    *requests* module exception.\n* Database Exception \n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SouthGreenPlatform/PyRice/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics-analysis, rice"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PyRice"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "SouthGreenPlatform"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 380588,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 81000,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hongquando",
          "type": "User"
        },
        "date_created": "2020-06-05T02:34:58Z",
        "date_published": "2020-07-23T14:56:58Z",
        "html_url": "https://github.com/SouthGreenPlatform/PyRice/releases/tag/PyRice-0.1.8",
        "name": "PyRice-0.1.8",
        "release_id": 28875996,
        "tag": "PyRice-0.1.8",
        "tarball_url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/tarball/PyRice-0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/releases/28875996",
        "value": "https://api.github.com/repos/SouthGreenPlatform/PyRice/releases/28875996",
        "zipball_url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/zipball/PyRice-0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hongquando",
          "type": "User"
        },
        "date_created": "2019-10-22T11:10:01Z",
        "date_published": "2020-01-13T13:49:42Z",
        "html_url": "https://github.com/SouthGreenPlatform/PyRice/releases/tag/pyrice-0.1.5",
        "name": "Release",
        "release_id": 22790811,
        "tag": "pyrice-0.1.5",
        "tarball_url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/tarball/pyrice-0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/releases/22790811",
        "value": "https://api.github.com/repos/SouthGreenPlatform/PyRice/releases/22790811",
        "zipball_url": "https://api.github.com/repos/SouthGreenPlatform/PyRice/zipball/pyrice-0.1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:31:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of system search_gene",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom pyrice.multi_query import MultiQuery\n\nquery = MultiQuery()\nresult = query.search_on_chromosome(chro=\"chr01\", start_pos=\"1\", end_pos=\"20000\",\n                                    number_process = 4, dbs=\"all\", save_path=\"./result/\")\nprint(\"Output database:\", result)\n```\n```bash\nOutput database:\n{'OsNippo01g010050': {\n    'msu7Name': {'LOC_Os01g01010'},\n    'raprepName': {'Os01g0100100'},\n    'contig': 'chr01', 'fmin': 2982,\n    'fmax': 10815},\n'OsNippo01g010150': {\n    'msu7Name': {'LOC_Os01g01019'},\n    'raprepName': {'Os01g0100200'},\n    'contig': 'chr01',\n    'fmin': 11217,\n    'fmax': 12435},\n...\n'OsNippo01g010300': {\n    'msu7Name': {'LOC_Os01g01040'},\n    'raprepName': {'Os01g0100500'},\n    'contig': 'chr01',\n    'fmin': 16398,\n    'fmax': 20144}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of system query_by_chromosome",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom pyrice.multi_query import MultiQuery\n\nquery = MultiQuery()\nresult = query.query_by_chromosome(chro=\"chr01\", start_pos=\"1\", end_pos=\"20000\", \n                                   number_process = 4, multi_processing=True,\n                                   multi_threading=True, dbs=\"all\")\n\nquery.save(result, save_path=\"./result/\",\n           format=[\"csv\", \"html\", \"json\", \"pkl\"], hyper_link=False)\nprint(\"Output database:\", result)\n```\n```bash\nOutput database:\n{'OsNippo01g010050': {\n    'rapdb': {\n        'Locus_ID': 'Os01g0100100',\n        'Description': 'RabGAP/TBC domain containing protein.',\n            'Oryzabase Gene Name Synonym(s)': 'Molecular Function: Rab GTPase activator activity (GO:0005097)',\n            ...},\n        'gramene': {\n            '_id': 'Os01g0100100',\n            'name': 'Os01g0100100',\n            'biotype': 'protein_coding',\n            ...},\n        ...},\n    'OsNippo01g010150': {\n        'rapdb': {...},\n        'gramene': {...},\n        ...},\n    ...\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of system query_by_ids",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom pyrice.multi_query import MultiQuery\n\t\t\nquery = MultiQuery()\nresult = query.query_by_ids(ids=[\"Os08g0164400\", \"Os07g0586200\"],\n                            locs=[\"LOC_Os10g01006\", \"LOC_Os07g39750\"],\n                            irics=[\"OsNippo01g010050\", \"OsNippo01g010300\"],\n                            number_process = 4, multi_processing=True, multi_threading=True, dbs=\"all\")\nquery.save(result, save_path = \"./result/\",\n\t       format=[\"csv\", \"html\", \"json\", \"pkl\"], hyper_link=False)   \nprint(\"Output database:\",result)   \n```\n```bash\nOutput database:\n{'OsNippo01g010050': {\n        'rapdb': {\n            'Locus_ID': 'Os01g0100100',\n            'Description': 'RabGAP/TBC domain containing protein.',\n            'Position': '',\n            ...},\n        'ic4r': {\n            'Anther_Normal': {'expression_value': '0.699962'},\n            'Anther_WT': {'expression_value': '13.9268'},\n            ...},\n        ...},\n    'OsNippo01g010300': {\n        'rapdb': {...},\n        'ic4r': {...},\n        ...},\n    ...\n}            \n```"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of system query_new_database",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom pyrice.multi_query import MultiQuery\n    \nquery = MultiQuery()\nresult = query.query_new_database(atts=['AT4G32150'], number_process= 4,\n                                  multi_processing=True,multi_threading=True,dbs=['planteome'])\nquery.save(result, save_path=\"./result/\",\n           format=[\"csv\", \"html\", \"json\", \"pkl\"], hyper_link=False) \nprint(\"Output database:\",result)                          \n```\n```bash\nOutput database:\n{'AT4G32150':\n    {'planteome':{\n        'service': '/api/search/annotation', \n        'status': 'success',\n        'arguments': {},\n        'comments': ['Results found for: annotation; queries: ; filters: '],\n        'data': [{...}]\n        ...\n   }\n   ...\n}\n```"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of Build Dictinary Module",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "```py\nfrom pyrice.build_dictionary import update_gene_dictionary, update_rapdb_oryzabase\n\nupdate_gene_dictionary()\nupdate_local_database(rapdb_url, oryzabase_url)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of Search Module",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "**You have to save file as .pkl and re-load it again to use search function.**\n\n```python\nfrom pyrice import utils \nimport pandas as pd\n\ndf1 = pd.read_pickle(\"./result1/data/db.pkl\")\ndf2 = pd.read_pickle(\"./result2/data/db.pkl\")\ndf = pd.concat([df1,df2])\nresult = utils.search(df,\"Amino acid \")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example of SQL Query",
        "parent_header": [
          "PyRice - a Python package for query rice gene information",
          "Install from PyPI"
        ],
        "type": "Text_excerpt",
        "value": "You can execute a SQL query over a pandas dataframe.\nYou have to install package [Pandasql](<https://pypi.org/project/pandasql/>). The variable name is same with the table name in SQL query.\nNext, follow the code below to run SQL query:\n```python\nimport pandas as pd\nfrom pandasql import sqldf\n\ndata = pd.read_pickle(\"./result/data/db.pkl\")\ndata = data.astype(str)\nsql = \"SELECT * FROM data WHERE `oryzabase.CGSNL Gene Symbol` = 'TLP27' or `gramene.system_name` = 'oryza_sativa'\"\npysqldf = lambda q: sqldf(q, globals())\nprint(pysqldf(sql))\n```\n**The variable name must be same with the table name in SQL query.**\n"
      },
      "source": "https://raw.githubusercontent.com/SouthGreenPlatform/PyRice/master/README.md",
      "technique": "header_analysis"
    }
  ]
}