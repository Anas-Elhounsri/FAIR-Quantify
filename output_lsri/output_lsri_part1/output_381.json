{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite as",
        "type": "Text_excerpt",
        "value": "If you use our software, please cite [our paper](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0286314).\n\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference matrix merging",
        "parent_header": [
          "Usage",
          "Handling large datasets &amp; updating an existing system"
        ],
        "type": "Text_excerpt",
        "value": "script : `src/mergeReferenceMat.py`\n\nProvided that they were computed on an independent set of sequences AND that no grouping/species are shared, then two reference matrices can be merged (at a very reasonnable computational cost, because the only required operation is a simple matrix addition).\n\nThis allows the computation of the reference matrix to be subdivided in any number of subtasks (as long as the species/groups are part of the same subtask), by simply splitting the input alignment, and subsequently merging the resulting matrices.\n\nThis also allows one to update a previously obtained matrix with a new set of sequences, as long as these new sequences only belong to species/groups hitherto absent from the reference matrix.\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WandrilleD/pyKleeBarcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-11-20T11:04:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-08T15:06:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implements methods and scripts to compute a structure matrix from a multiple sequence alignment.  Th"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9836050374492097,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "The `testscripts/` folder contains a number of tests for the different scripts. They provide both a way to verify that your environment is compatible with the software and provide usage examples. \n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9461215545690944,
      "result": {
        "type": "Text_excerpt",
        "value": "This code implements methods and scripts to compute indicator vectors and a structure matrix from a multiple sequence alignment. \n\nThe structure matrix describe degrees of closedness between sequence, you can read more on structure matrices and how they are computed in: \n\n> Note on the usage of the term \"species\" in this notice: we use here the term species in the a sense, as a modality to group different sequences together. In practice, one can group sequences by any arbitrary unit they define, or not group them at all. \n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/WandrilleD/pyKleeBarcode/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WandrilleD/pyKleeBarcode/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WandrilleD/pyKleeBarcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9801473352188947,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "To test all scripts at once, use `sh testScripts/all_tests.sh` (NB: the test scripts need to have write access to the current folder in order to write logs and temporary files).\n \n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8154491503728651,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "To test all scripts at once, use `sh testScripts/all_tests.sh` (NB: the test scripts need to have write access to the current folder in order to write logs and temporary files).\n \n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/WandrilleD/pyKleeBarcode/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "comparative-genomics, evolution, genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "This material is made available under the Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license\n\nhttps://creativecommons.org/licenses/by-sa/4.0/legalcode\n\nAttribution-ShareAlike 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n  wiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n  wiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-ShareAlike 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-ShareAlike 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. BY-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  k. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  l. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  m. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part; and\n\n            b. produce, reproduce, and Share Adapted Material.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.\n\n            c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-SA Compatible License.\n\n       2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n\n     including for purposes of Section 3(b); and\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n\n=======================================================================\n\nCreative Commons is not a party to its public licenses.\nNotwithstanding, Creative Commons may elect to apply one of its public\nlicenses to material it publishes and in those instances will be\nconsidered the \"Licensor.\" Except for the limited purpose of indicating\nthat material is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the public\nlicenses.\n\nCreative Commons may be contacted at creativecommons.org.\n\n    \u00a9 2021 GitHub, Inc.\n    Terms\n    Privacy\n    Security\n    Status\n    Docs\n\n    Contact GitHub\n    Pricing\n    API\n    Training\n    Blog\n    About\n\nLoading complete\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyKleeBarcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "WandrilleD"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 133029,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 14128,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 11756,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "You need to have the scipy librairies installed. Look here for instructions : [https://www.scipy.org/install.html](https://www.scipy.org/install.html) (like them, we suggest using Anaconda).\nFor the MPI script you need to have MPI enable on the machine and the python library mpi4py installed.\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:32:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Structure Matrix computation",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Structure matrix computation is performed in 3 steps:\n 1. computing the reference matrix from a (trimmed) alignment\n 2. computing indicator vectors from a reference matrix and an alignment\n 3. computing the structure matrix from the indicator vectors\n\n\nIf the dataset you manipulate is of a reasonnable size (say, less than 1000 sequences), then you may use the `src/pyKleeBarcode_MPI.py` script which wraps all three steps together.\n\nHowever if your dataset is larger we recommend you use the scripts corresponding to each step:\n 1. `src/pyKleeBarcode_computeRefMat_MPI.py`\n 2. `src/pyKleeBarcode_computeIndicatorVector_MPI.py`\n 3. `src/pyKleeBarcode_computeStructureMatrix.py`\n\nThe reason why are that each step require different amount of resources and benefit differently from parallelization.\nAlso, the results from the first two steps (reference matrix and Indicator vector computation) can be aggregated with results from previous run (see [Reference matrix merging](#reference-matrix-merging), [Indicator vector merging](#indicator-vector-merging), and [Structure matrix updating](#structure-matrix-updating)).\n\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step 1: pyKleeBarcode_computeRefMat_MPI.py",
        "parent_header": [
          "Usage",
          "Structure Matrix computation"
        ],
        "type": "Text_excerpt",
        "value": "Computes the reference matrix, a matrix representation of the diversity of a DNA sequence across a number of individuals or groups or individuals (typically, species)\ngiven in an input alignment.\n\n\n```sh\npython pyKleeBarcode_computeRefMat_MPI.py --help\n```\n```\nusage: pyKleeBarcode_computeRefMat_MPI.py [-h] -i INPUTFILE -o OUTPUTFILE\n                                          [-m MAX_SEQ_PER_SPECIES]\n                                          [-f FIELD_DELIMITOR]\n                                          [-s SPECIES_FIELD_INDEX]\n                                          [-C CORRESPONDENCE_FILE]\n                                          [--seed SEED]\n\nComputes a reference matrix: a matrix representation of the diversity of a DNA\nsequence across a number of individuals or groups or individuals (typically,\nspecies) according to the definitions of \"A scalable method for analysis and\ndisplay of DNA sequences\" by Sirovitch et alii\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputFile INPUTFILE\n                        input multiple sequence alignment in fasta format\n                        (preferably, trimmed)\n  -o OUTPUTFILE, --outputFile OUTPUTFILE\n                        output file name for the reference matrix\n  -m MAX_SEQ_PER_SPECIES, --max-seq-per-species MAX_SEQ_PER_SPECIES\n                        maximum number of sequences kept per species. Default\n                        : 3. Set to 0 to have no limit ; be careful thought,\n                        as this parameter has a direct impact on speed.\n  -f FIELD_DELIMITOR, --field-delimitor FIELD_DELIMITOR\n                        field delimitor of the fasta sequence id lines.\n                        default: \"|\"\n  -s SPECIES_FIELD_INDEX, --species-field-index SPECIES_FIELD_INDEX\n                        index (starting at 0) of the species name in the fasta\n                        sequence id lines. default: 1\n  -C CORRESPONDENCE_FILE, ---correspondence-file CORRESPONDENCE_FILE\n                        name of a comma-delimited file containing\n                        correspondence between sequence and species. Overrides\n                        option -s when used. One sequence ID per line,\n                        sequence id and species name separated by a semicolumn\n                        (;).\n  --seed SEED           random seed used when selecting a species sequences if\n                        there is more than --max-seq-per-species. By default\n                        is it created using time.\n```\n\nThe `-m`, `-f`, `-s`, `-C`, and `--seed` options are designed for the case where a number of sequence should be aggregated prior to the computation of the matrix.\nThis can serve as an elegant solution to the overrepresentation of certain species (or whichever grouping you choose) where these are prevented from taking too much space in the created reference space (ie. the reference matrix), while still conserving all the information about the diversity of the sequence in these species.\n\n\n**Aparte : grouping of sequences.**\nBy default, the grouping of sequences is governed by the field delimitor (`-f`) and field index (`-s`) options, whose default are, respectively `'|'` and `1`.\nThis means that the sequences will be grouped according to the second field (indexing begins at 0) in a | delimited fasta id line. For instance:\n\n`>GBSP13299-19|Pseudocorynosoma anatarium|COI-5P|KX688147`\n\nWith the default values the group will be : `Pseudocorynosoma anatarium`.\n\nWith this form of sequence ids, one can avoid any kind of grouping (ie. keep all sequences as separate), one could set the `-s` option to `0` : the grouping would be the unique sequence id.\n\nAlternatively, you can provide the associations between sequence and group in an external file using the `-C` option.\nThe file is expected to contain one association (ie, 1 sequence and 1 group) per line, separated by semicolons (`;`).\n\nThe sequence id used should correspond to the first field of the corresponding the fasta id line (field delimitor:`|`, can be changed with `-f`).\n\nFor instance if the correspondence file contains the line:\n\n`GBSP13299-19;specieA`\n\nThen a sequence with the fasta id line: `>GBSP13299-19|Pseudocorynosoma anatarium|COI-5P|KX688147` will be associated to `speciesA`.\n\n---\n\n\nAs the title entails, this script can be parallelized using MPI if you have installed the proper library on your system.\n\n**example usage:**\n```\nmpirun -np 4 python src/pyKleeBarcode_computeRefMat_MPI.py -i testData/1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas -o 1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.Ssum \n```\n\n> See the various scripts in `testScripts/` for more example usages.\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step 2: pyKleeBarcode_computeIndicatorVector_MPI.py",
        "parent_header": [
          "Usage",
          "Structure Matrix computation"
        ],
        "type": "Text_excerpt",
        "value": "\n```sh\npython pyKleeBarcode_computeIndicatorVector_MPI.py --help\n```\n```\nusage: pyKleeBarcode_computeIndicatorVector_MPI.py [-h] -i INPUTFILE -S\n                                                   INPUTSSUMFILE -o OUTPUTFILE\n                                                   [-m MAX_SEQ_PER_SPECIES]\n                                                   [-f FIELD_DELIMITOR]\n                                                   [-s SPECIES_FIELD_INDEX]\n                                                   [-C CORRESPONDENCE_FILE]\n                                                   [--seed SEED]\n\nComputes the indicator vectors of the DNA sequences of a number of individuals\nor groups or individuals (typically, species), from the diversity represented\nin a given reference matrix according to the definitions of \"A scalable method for\nanalysis and display of DNA sequences\" by Sirovitch et alii\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputFile INPUTFILE\n                        input multiple sequence alignment in fasta format\n                        (preferably, trimmed)\n  -S INPUTSSUMFILE, --inputRefMFile INPUTREFMFILE\n                        input reference matrix matrix (expected: binary format \n                        as produced by the pyKleeBarcode_computeRefMat_MPI.py \n                        script)                        \n  -o OUTPUTFILE, --outputFile OUTPUTFILE\n                        output file name for the indicator vectors (csv format)\n  -m MAX_SEQ_PER_SPECIES, --max-seq-per-species MAX_SEQ_PER_SPECIES\n                        maximum number of sequences kept per species. Default\n                        : 3. Set to 0 to have no limit ; be careful thought,\n                        as this parameter has a direct impact on speed.\n  -f FIELD_DELIMITOR, --field-delimitor FIELD_DELIMITOR\n                        field delimitor of the fasta sequence id lines. default: \"|\"\n  -s SPECIES_FIELD_INDEX, --species-field-index SPECIES_FIELD_INDEX\n                        index (starting at 0) of the species name in the fasta\n                        sequence id lines. default: 1\n  -C CORRESPONDENCE_FILE, ---correspondence-file CORRESPONDENCE_FILE\n                        name of a comma-delimited file containing\n                        correspondence between sequence and species. Overrides\n                        option -s when used. One sequence ID per line,\n                        sequence id and species name separated by a semicolumn\n                        (;).\n  --seed SEED           random seed used when selecting a species sequences if\n                        there is more than --max-seq-per-species. By default\n                        is it created using time.\n```\n\nThe `-m`, `-f`, `-s`, `-C` and `--seed` options are designed for the case where a number of sequence should be aggregated prior to the computation of the indicator vector.\nIn general they should be set to(although this is not mandatory), the same values as the one given during the computation of the reference matrix in the previous step.\n\n**example usage:**\n```\nmpirun -np 4 python src/pyKleeBarcode_computeIndicatorVector_MPI.py -i testData/1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas -S 1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.Ssum -o 1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.indicatorVectors.csv\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "step 3: pyKleeBarcode_computeStructureMatrix.py",
        "parent_header": [
          "Usage",
          "Structure Matrix computation"
        ],
        "type": "Text_excerpt",
        "value": "```sh\npython src/pyKleeBarcode_computeStructureMatrix.py --help\n```\n```\nusage: pyKleeBarcode_computeStructureMatrix.py [-h] -i INPUTFILE -o OUTPUTFILE\n\nComputes a structure matrix from a set of indicator vectors according to the\ndefinitions of \"A scalable method for analysis and display of DNA sequences\"\nby Sirovitch et alii\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputFile INPUTFILE\n                        input indicator vectors in csv format (one seq/species\n                        per line)\n  -o OUTPUTFILE, --outputFile OUTPUTFILE\n                        output file name for the structure matrix\n```\n\n**example usage:**\n```\npython src/pyKleeBarcode_computeStructureMatrix.py -i testData/1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.indicatorVectors.csv -o testData/1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.stMat.bin\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "all steps in one go (recommended for small dataset only)",
        "parent_header": [
          "Usage",
          "Structure Matrix computation"
        ],
        "type": "Text_excerpt",
        "value": "```sh\npython src/pyKleeBarcode_MPI.py --help\n```\n```\nusage: pyKleeBarcode_MPI.py [-h] -i INPUTFILE -o OUTPUTFILE\n                            [-m MAX_SEQ_PER_SPECIES] [-f FIELD_DELIMITOR]\n                            [-s SPECIES_FIELD_INDEX] [-C CORRESPONDENCE_FILE]\n                            [--seed SEED]\n\nComputes a structure matrix between sets of DNA sequences (typically grouped\nby species) according to the definitions of \"A scalable method for analysis\nand display of DNA sequences\" by Sirovitch et alii\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUTFILE, --inputFile INPUTFILE\n                        input multiple sequence alignment in fasta format\n                        (preferably, trimmed)\n  -o OUTPUTFILE, --outputFile OUTPUTFILE\n                        output file name for the structural matrix\n  -m MAX_SEQ_PER_SPECIES, --max-seq-per-species MAX_SEQ_PER_SPECIES\n                        maximum number of sequences kept per species. Default\n                        : 3. Set to 0 to have no limit ; be careful thought,\n                        as this parameter has a direct impact on speed.\n  -f FIELD_DELIMITOR, --field-delimitor FIELD_DELIMITOR\n                        field delimitor of the fasta sequence id lines.\n                        default: \"|\"\n  -s SPECIES_FIELD_INDEX, --species-field-index SPECIES_FIELD_INDEX\n                        index (starting at 0) of the species name in the fasta\n                        sequence id lines. default: 1\n  -C CORRESPONDENCE_FILE, ---correspondence-file CORRESPONDENCE_FILE\n                        name of a comma-delimited file containing\n                        correspondence between sequence and species. Overrides\n                        option -s when used. One sequence ID per line,\n                        sequence id and species name separated by a semicolumn\n                        (;).\n  --seed SEED           random seed used when selecting a species sequences if\n                        there is more than --max-seq-per-species. By default\n                        is it created using time.\n\n```\n\nThe different options follow the same logic as the separate steps.\n\n**example usage:**\n```\npython src/pyKleeBarcode_MPI.py --inputFile testData/1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas -o 1turdus_migratorius_BLAST100_NJptp.trimmed_50_640.fas.stMat.bin\n```\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Handling large datasets &amp; updating an existing system",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "`pyKleeBarcode` offers utilities to allows massive distribution of the computations needed to compute indicator vectors and a structure matrix,\nas well as the possibility to update an existing structure matrix with new data without having to re-compute everything from scratch.\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Indicator vector merging",
        "parent_header": [
          "Usage",
          "Handling large datasets &amp; updating an existing system"
        ],
        "type": "Text_excerpt",
        "value": "The computation of indicator vectors can be made completely independently between each sequence, provided the script are given the same reference matrix.\nThus, after the reference matrix computation one can split the input alignment however they see fit in order to distribute the computation of the indicator vectors as needed.\n\nIndicator vector files are simple `.csv` files which can be merged by concatenation, for example with a simple `cat` command call.\n\nGiven this, updating a set of indicator vectors with new sequences is fairly simple. One would have to compute the indicator vectors of the new sequences (using the same reference matrix as the one used for the already existing indicator vectors), and then concatenate the created indicator vector file to the existing one.\n\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Structure matrix updating",
        "parent_header": [
          "Usage",
          "Handling large datasets &amp; updating an existing system"
        ],
        "type": "Text_excerpt",
        "value": "While the previous steps could be split fairly arbitrarily with little computational cost, the structure matrix computation matrix computation is a more complicated affair, because it must look at all pairs of indicator vectors.\n\nNevertheless, we have devised an algorithm that allows the update of an existing structure matrix with new indicator vector (thus, new sequences). \nBecause structure matrix files quickly become large (nb: it grows quadratically with the number of sequences) the structure matrix file format has been thought to allow and updating operation which does not have to re-write the whole file but only append the new information to it (long story short : we represent the lower triangular portion of the matrix only).\n\n\n\n```sh\npython src/pyKleeBarcode_updateStructureMatrix.py --help\n```\n```\nusage: pyKleeBarcode_updateStructureMatrix.py [-h] -r REFERENCE_VECTORS -n\n                                              NEW_VECTORS -m STRUCTURE_MATRIX\n\nUpdates a structure matrix from a set of reference indicator vectors (the\nsequences already in the structure matrix) amd a set of new structure vectors\n(to add to the structure matrix) according to the definitions of \"A scalable\nmethod for analysis and display of DNA sequences\" by Sirovitch et alii .\nIMPORTANT: this script assumes sequences are ordered similarly between the\nreference indicator vectors and structure matrix.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REFERENCE_VECTORS, --reference-vectors REFERENCE_VECTORS\n                        input reference indicator vectors in csv format (one\n                        seq/species per line)\n  -n NEW_VECTORS, --new-vectors NEW_VECTORS\n                        input new indicator vectors in csv format (one\n                        seq/species per line)\n  -m STRUCTURE_MATRIX, --structure-matrix STRUCTURE_MATRIX\n                        structure matrix file to update\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Alignment utilities",
        "parent_header": [
          "Usage",
          "Other scripts"
        ],
        "type": "Text_excerpt",
        "value": "\n * `trimAlignment.py` : to trim an alignment\n * `sequenceAveragePairWiseComputation.py` : to compute average pairwise distances among and between species in an alignment\n * `alignmentAveragePairWiseComputation.py` : computes average pairwise difference among sequences in an alignment (often termed Pi in population genetics) as well as other diversity metrics.\n * `restrictAlnToClade.py` : Extract the sequences of specific clades from an alignment.\n * `convertStructureMat_CSV_to_bin.py` : utility to convert a structure matrix between the binary and a csv format useful for debugging\n\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Representation of structure matrix",
        "parent_header": [
          "Usage",
          "Other scripts"
        ],
        "type": "Text_excerpt",
        "value": "* `order_structureMatrix_with_tree.py` : reorders the rows inside a structure matrix according to a tree in newick format\n* `order_structureMatrix_with_list.py` : reorders the rows inside a structure matrix according to a list (file with one id per line)\n* `heatmap_from_structureMatrix.py` : produces a klee diagram image from a structure matrix\n* `taxon_annotated_heatmap_from_structureMatrix.py` : produces a klee diagram image from a structure matrix, with taxonomic annotations from a file.\n    see an example of annotation file in `testData/Animal.taxons.ok_and_resolved.txt`, which should work for most animal taxons following the ncbi taxonomy.\n"
      },
      "source": "https://raw.githubusercontent.com/WandrilleD/pyKleeBarcode/master/README.md",
      "technique": "header_analysis"
    }
  ]
}