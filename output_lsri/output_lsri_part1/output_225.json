{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference genome",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "1. Reference genome of the species in `FASTA` format.\n2. Annotation of the species in `GFF/GTF` format."
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-24T05:44:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-05T16:28:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Long non-coding RNAs (lncRNAs) are RNA molecules longer than 200 nucleotides that do not encode proteins. Experimental studies have shown the diversity and importance of lncRNA functions in plants. To expand knowledge about lncRNAs in other species, computational pipelines that allow for standardised data-processing steps in a mode that does not require user control up to the final result were actively developed recently. These advancements enable wider functionality for lncRNA data identification and analysis. In the present work, we propose the ICAnnoLncRNA pipeline for automatic identification, classification and annotation of plant lncRNAs in transcriptomic sequences assembled from high-throughput RNA sequencing (RNA-seq) data.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "This pipeline is only applicable to the Linux operating system.",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline includes the following steps: "
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Pre-processing.",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "+ Gmap index building.\n+ LncFinder model building."
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. LncRNA filtering.",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "+ Length filtering\n+ LncFinder predicting.\n+ CPC2 predicting.\n+ GMAP alignment on reference genome.\n+ Filtering erros/noise.\n+ Filtering possible transposable elements (TEs)."
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. LncRNA annotation.",
        "parent_header": [
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "+ Classification gffcompare.\n+ Blastn alignment.\n+ Analysis of lncRNA expression.\n\nThe pipeline is implemented using the workflow management system [Snakemake](https://snakemake.readthedocs.io/en/stable/getting_started/installation.html), which provides ability to platform-independent installation and execution of the software.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "It is necessary to install and download (download program in pipeline folder):",
        "type": "Text_excerpt",
        "value": "+ [CPC2](https://github.com/biocoder/CPC2)\n```\n1. cd ./ICAnnoLncRNA---identification-classification-and-annotation-of-LncRNA-main\n2. wget https://github.com/biocoder/CPC2/archive/refs/heads/master.zip\n3. unzip master.zip\n4. mv CPC2-master CPC2\n```\n+ [LncAPDB.fasta](https://data.mendeley.com/datasets/fnk8pmp2yz/3)\n\ndownload LncAPDB.fasta into `data/reference/data_index` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Genome sequence",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "1. Known LncRNA transcripts of the species in `FASTA` format. File with lncRNA from the public database of lncRNA. For example [Ensembl](https://www.ensembl.org/index.html), [EVLncRNAs v2](https://www.sdklab-biophysics-dzu.net/EVLncRNAs2/).\n2. Known protein coding sequences of the species in `FASTA` format. File with protein coding sequences from a public database. For example [Ensembl](https://www.ensembl.org/index.html).\n3. RNA-seq transcripts of the species in `FASTA` format. This file contains transcripts obtained after assembly of transcriptome. For example file that we provide, [30k_zey.fasta](https://github.com/artempronozin95/ICAnnoLncRNA---identification-classification-and-annotation-of-LncRNA/blob/main/data/input/30k_zey.zip), obtained by [Trinity](https://github.com/trinityrnaseq/trinityrnaseq) assembly.\nAll three sets are necessary for build "
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional data",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "1. TE coordinats on the reference genome, example [Zea_N_merged.bed](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/data/reference/N_coords/Zea_N_merged.bed)\n2. File with sequence ID from public lncRNA databases connected to IDs in library of known lncRNAs. example [index_and_newindex.csv](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/tissue/index_and_newindex.csv)\n3. Annotation of the organism transcriptome libraries by tissue type, example [SRX_all_org.tsv](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/tissue/SRX_all_org.tsv)\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "Additional data is presented here: https://data.mendeley.com/datasets/fnk8pmp2yz/3\n\nIt includes: \n+ blast.outfmt6 - Blastn results. Contain homologs with known lncRNAs sequences from the LncAPDB library.\n+ index_and_newindex.fasta - index of PNRD, CANTATAdb, GREENC, PlncDB, EVLncRNA databases compared with new index for LncAPDB library. \n+ LncAPDB.fasta - lncRNA sequences of LncAPDB library in fasta format.\n+ lncrna_class.tmap - novel lncRNAs divided into gffcompare classes.\n+ lncrna_coordinats.bed - coordinates of novel lncRNAs on chromosomes.\n+ lncrna_intron_size.tsv - intron size of novel lncRNAs and their coordinates on the genome.\n+ new_lncrna.fasta - novel lncRNA sequences in fasta format.\n+ new_lncrna_locus.loci - locus of lncRNA sequences on genome.\n+ transcriptome_lib.txt - Maize transcriptome libraries. \n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration file",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data"
        ],
        "type": "Text_excerpt",
        "value": "Input all necessary files into configuration file \u201cconfig.yaml\u201d:\n+ `lnc:` - known LncRNA sequences of studied organisms in `FASTA` format. \n  + (Example: `lnc: \"data/input/lincrna.fasta\"`)\n+ `cds:` - known CDS (coding) sequences of studied organisms in `FASTA` format. \n  + (Example: `cds: \"data/input/7000_len_mRNA.fasta\"`)\n+ `model:` - pipeline check if model (lncFinder) for this organism already exist and use it, if it's not, pipeline will create a new one (in output folder). Model that exist represented in [Models](#models). \n  + (Example: `model: \"Zea_mays\"`)\n+ `sequence:` - sequences that need to study in `FASTA` format.\n  + (Example: `sequence: \"data/input/Zea.fasta\"`)\n+ `structure:` - need to choose whether to use secondary structure in model building or not. Choose between `DNA` or `SS` (secondary structure). \n  + (Example: `structure: \"DNA\"`)\n+ `gmap:`\n  + `gff_reference:` - reference genome annotation in `GFF` format. \n    + (Example: `gff_reference: \"data/reference/Zea_mays.AGPv4.40.gff\"`)\n  + `reference:` - reference genome in `FASTA` format.\n    +  (Example: `reference: \"data/reference/Zea_mays.AGPv4.dna.toplevel.fa\"`)\n  + `out:` - output file. \n    + (Example: `out: \"data/output/alignm.gff\"`)\n+ `gff:` - gff file of reference genome. \n  + (Example: `gff: \"data/reference/Zea_mays.AGPv4.40.gff\"`)\n+ `blast:` - standard BLAST parameters\n  + `evalue:` - evalue\n    + (Example: `evalue: 1e-50`)\n  + `max_target:` - max_target_seqs\n    + (Example: `max_target: 1`)\n  + `identity:` - perc_identity\n    + (Example: `identity: 30`)\n  + `threads:` - num_threads\n    + (Example: `threads: 1`)\n+ `TE_coords:` - if there is no TE coordinats information - recomended to turn off this step.\n   + `option:` \"on\" - turn on or turn off this step (on/off) \n   + `coords:` - TE coordinat\n     + (Example: `coords: \"data/reference/N_coords/Zea_N_merged.bed\"`)\n+ `tissue:`\n  + `organism:` - choose species that you study form species [list](#species), or input your own species ID in same format\n    + (Example: `organism: \"ZMAY\"`)\n  + `exp:` - choose between organisms tissue experiments in [Tissue analysis](#tissue-analysis) or input your organism. \n    + (Example: `exp: \"ZM\"`)\n  + `LncAPDB:` - File with sequence ID from public lncRNA databases connected to IDs in library of known lncRNAs.\n    + (Example: `LncAPDB: \"tissue/index_and_newindex.csv\"`)\n  + `SRX_exp:` - Annotation of the transcriptome libraries by tissue type and gene expression levels.\n    + (Example: `SRX_exp: \"tissue/SRX_all_org.tsv\"`)\n+ `expression`:\n  + `option`: \"on\" - turn on or turn off this step (on/off) \n  + `path`: - path to expression data.\n    + (Example: `path: \"expressin/Kallisto\"`)\n  + `calculation_type`: - type of expression data. There three types: 1.Kallisto 2.Htseq 3.Own type of data.\n    + (Example: `path: \"Kallisto\"`)\n    "
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "data/input",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data",
          "Folders"
        ],
        "type": "Text_excerpt",
        "value": "Contain: \n1. Known LncRNA transcripts of the species in `FASTA` format.\n2. Known protein coding sequences of the species in `FASTA` format.\n3. RNA-seq transcripts of the species in `FASTA` format."
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "data/reference",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data",
          "Folders"
        ],
        "type": "Text_excerpt",
        "value": "Contain:\n+ reference genome of studied organism in `FASTA` format.\n+ annotation of studied organism in `GFF/GTF` format.\n+ `data_index` folder with library of known lncRNA from databases.\n+ `intron_data` folder with structure information of organisms.\n+ `models` folder with model for lncFinder.\n+ `N_coords` folder with TE coordinats"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Models",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Zea_mays*\n+ *Arabidopsis_thaliana*\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LncRNA structure information",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Zea_mays*\n+ *Arabidopsis_thaliana*\n+ *Oryza_sativa*\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Known LncRNA for database",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "Folder `data/reference/data_index` contain lncRNA library (LncAPDB.fasta) that build on base of 5 lncRNA databases (PNRD, CANTATAdb, GREENC, PlncDB, EVLncRNA). The library you can find here: https://data.mendeley.com/v1/datasets/fnk8pmp2yz/draft?a=13de1dfb-b631-42f3-8108-f3de2f50fd90\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Species",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Medicago truncatula* - `MTRU`\n+ *Glycine max* - `GMAX`\n+ *Populis trichocarpa* - `PTRI`\n+ *Arabidopsis thaliana* - `ATHA`\n+ *Vitis vivifera* - `VVIN`\n+ *Oryza sativa japonica* - `OSAT`\n+ *Brachipodiumdistachion* - `BDIS`\n+ *Sorghum bicolor* - `SBIC`\n+ *Zea mays* - `ZMAY`\n+ *Selaginella moellendorfii* - `SMOE`\n+ *Physcomitrella patens* - `PPAT`\n+ *Ostreococcus tauri*- `OTAU`\n+ *Volvox* - `VOLV`\n+ *Amborell trichopoda* - `ATRI`\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tissue analysis",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "File `tissue/SRX_all_org.tsv`, contains information about 1241 transcript experiment libraries for 5 organisms with respect to specific tissue. In config.yaml need to choose between organisms that presented in SRX file:\n+ HV - *Hordeum vulgare*\n+ OS - *Oryza sativa*\n+ SL - *Solanum lycopersicum*\n+ ST - *Solanum tuberosum*\n+ ZM - *Zea mays*\n\nIf the libraries you are investigating (for other organism for exemple) are not in this file. You can add them to the data file in the same format \n```\nST\tSRX1478098\tleaf\nZM\tSRX339769\tstomatal division zone\nZM\tSRX339787\tear\nZM\tSRX711129\tleaf\nOS\tSRX2582231\tunknown\nZM\tSRX711024\tear\nZM\tSRX711053\tleaf\n\n```\nWhere 1 column - id, 2 - organism that you study, 3 - SRX library, 4 - tissue. \n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Expression and entropy",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "For this step there is necessary to provide expression data for every transcript. Thus recommended `turn off` this step at first run of the pipeline. After receiving expression data `turn on` this step and pipeline will calculete entropy and espression statistic. In config.yaml need to choose between three types of table building:\n+ `Kallisto` - result are received by means of Kallisto program. Results should be presented as on example:\n```\n\u251c\u2500\u2500 SRR957466\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 run_info.json\n\u251c\u2500\u2500 SRR957467\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 run_info.json\n\u2514\u2500\u2500 SRR957468\n    \u251c\u2500\u2500 abundance.h5\n    \u251c\u2500\u2500 abundance.tsv\n    \u2514\u2500\u2500 run_info.json\n```  \n+ `Htseq` - result are received by means of Htseq program. Results should be presented as on example:\n```\n\u251c\u2500\u2500 SRR1586686.txt\n\u2514\u2500\u2500 SRR504468.txt\n```\n+ `own` - In this case user should build table by himself. Table should looks like as [table](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/example/expr_table.tsv) presented in example folder. Where:\n+ `type` - `mRNA` - is protein coding genes. `noncons` - nonconserved lncRNAs. `consv` - conserved lncRNAs.\n+ all tissue that needed. In example table, value is a median of expression for libraries that belong to tissue in column name.\n+ `target_id` - ID of the transcript. it is necessary that the transcripts correspond to the results of the pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "A typical structure of `Output` is follows:\n```\n\u251c\u2500\u2500 gffcompare_first\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.annotated.gtf\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.filter_alignm.bed.refmap\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.filter_alignm.bed.tmap\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.loci\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.stats\n \u00a0\u00a0 \u2514\u2500\u2500 gffcmp.tracking\n\u251c\u2500\u2500 gffcompare_second\n \u00a0\u00a0 \u251c\u2500\u2500 gff.annotated.gtf\n \u00a0\u00a0 \u251c\u2500\u2500 gff.filter_alignm.bed.refmap\n \u00a0\u00a0 \u251c\u2500\u2500 gff.filter_alignm.bed.tmap\n \u00a0\u00a0 \u251c\u2500\u2500 gff.loci\n \u00a0\u00a0 \u251c\u2500\u2500 gff.stats\n \u00a0\u00a0 \u2514\u2500\u2500 gff.tracking\n\u251c\u2500\u2500 GMAP\n \u00a0\u00a0 \u251c\u2500\u2500 alignm.bed\n \u00a0\u00a0 \u251c\u2500\u2500 alignm_filter.gff\n \u00a0\u00a0 \u251c\u2500\u2500 filter_alignm.bed\n \u00a0\u00a0 \u251c\u2500\u2500 gmap_build.err.log\n \u00a0\u00a0 \u251c\u2500\u2500 gmap_build.out.log\n \u00a0\u00a0 \u251c\u2500\u2500 gmap.out.log\n \u00a0\u00a0 \u251c\u2500\u2500 reference.bed\n \u00a0\u00a0 \u2514\u2500\u2500 statistic.csv\n\u251c\u2500\u2500 lncRNA_prediction\n \u00a0\u00a0 \u251c\u2500\u2500 Coding.fasta\n \u00a0\u00a0 \u251c\u2500\u2500 cpc.txt\n \u00a0\u00a0 \u251c\u2500\u2500 lncFinder.csv\n \u00a0\u00a0 \u2514\u2500\u2500 Noncoding.fasta\n\u251c\u2500\u2500 lncRNA_structure\n \u00a0\u00a0 \u251c\u2500\u2500 anti.png\n \u00a0\u00a0 \u251c\u2500\u2500 exon_size.png\n \u00a0\u00a0 \u251c\u2500\u2500 intron_size.png\n \u00a0\u00a0 \u251c\u2500\u2500 itron_coordin.tsv\n\u00a0 \u00a0 \u251c\u2500\u2500 long_transcripts.bed\n\u00a0\u00a0  \u251c\u2500\u2500 number_of_exon.png\n\u00a0\u00a0  \u251c\u2500\u2500 number_of_lncRNA.png\n \u00a0\u00a0 \u2514\u2500\u2500 statistic_bed.tsv\n\u251c\u2500\u2500 loci\n \u00a0\u00a0 \u251c\u2500\u2500 lncRNA_before_loci.bed\n \u00a0\u00a0 \u2514\u2500\u2500 lncRNA_loci.bed\n\u251c\u2500\u2500 new_lncRNA\n \u00a0\u00a0 \u251c\u2500\u2500 blast.outfmt6\n \u00a0\u00a0 \u251c\u2500\u2500 classes.png\n \u00a0\u00a0 \u251c\u2500\u2500 LncAPDB_vs_blast.csv\n\u00a0 \u00a0 \u251c\u2500\u2500 new_lncrna.fasta\n\u00a0\u00a0  \u2514\u2500\u2500 True_lncRNA.bed\n\u251c\u2500\u2500 TE_finder\n \u00a0\u00a0 \u251c\u2500\u2500 Lnc_aling_with_TE.tsv\n \u00a0\u00a0 \u2514\u2500\u2500 lncRNA_after_loci.bed\n\u251c\u2500\u2500 tissue\n    \u251c\u2500\u2500 all.txt\n    \u251c\u2500\u2500 cod.txt\n    \u251c\u2500\u2500 cons.txt\n    \u251c\u2500\u2500 id.txt\n    \u251c\u2500\u2500 non.txt\n    \u251c\u2500\u2500 tissue_org.csv\n    \u251c\u2500\u2500 tissue_org.png\n    \u251c\u2500\u2500 transc_cod.csv\n    \u251c\u2500\u2500 transc.csv\n    \u2514\u2500\u2500 transc_non.csv\n\u251c\u2500\u2500 expression\n \u00a0\u00a0 \u251c\u2500\u2500 box_plot.png\n \u00a0\u00a0 \u251c\u2500\u2500 entropy.png\n \u00a0\u00a0 \u251c\u2500\u2500 expr_table.tsv\n \u00a0\u00a0 \u251c\u2500\u2500 hist_expr.png\n \u00a0\u00a0 \u2514\u2500\u2500 table_type.txt\n```\n* Folder \"tissue\", contains lncRNA distribution in tissue.\n\nGroups of output files\n\n**1. Pre-processing.**\n\nPre-processing performed in input directory:\n+ filtered_seq.fasta - filter transcripts with length < 200 nt.\n+ new_vs_old_id.tsv - new ID and old ID of transcripts.\n+ test_train - folder of lncFinder model studie. \n\n**2. LncRNA filtering.**\n\n***lncRNA_prediction***\n\n`lncRNA_prediction`\n+ Coding.fasta - Transcripts predicted as protein coding by lncFinder, `FASTA` format. \n+ cpc.txt - Transcripts predicted as lncRNA by CPC2, `TXT` format.\n+ lncFinder.csv - Transcripts predicted as lncRNA by lncFinder, `CSV` format.\n+ Noncoding.fasta - Transcripts predicted as lncRNA by lncFinder, `FASTA` format.\n\n***GMAP alignment on reference genome.***\n\n`GMAP`\n+ alignm.bed - results of lncRNA transcripts alignment on reference genome by GMAP, 'BED' format.\n+ alignm_filter.gff - results of lncRNA transcripts alignment on reference genome without long intron transcripts, `GFF` format.\n+ filter_alignm.bed - results of lncRNA transcripts alignment on reference genome without long intron transcripts, `BED` format.\n+ gmap_build.err.log\n+ gmap_build.out.log\n+ gmap.out.log\n+ reference.bed - reference genome annotation, `BED` format.\n+ statistic.csv - lncRNA structure statistic, `CSV` format.\n\n***Filtering erros/noise.***\n\n`gffcompare_first` - classification of the candidate lncRNA sequences by their location in the genome relative to a protein-coding genes, more information can be found on [gffcompare](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml)\n+ gffcmp.annotated.gtf - Gffcompare reports a GTF file containing the \u201cunion\u201d of all transcript IDs in each sample.\n+ gffcmp.filter_alignm.bed.refmap - This tab-delimited file lists, for each reference transcript, which query transcript either fully or partially matches that reference transcript.\n+ gffcmp.filter_alignm.bed.tmap - This tab delimited file lists the most closely matching reference transcript for each query transcript. \n+ gffcmp.loci - Represent loci of transcripts. \n+ gffcmp.stats\n+ gffcmp.tracking - This file matches transcripts up between samples.\n\n`loci`\n+ lncRNA_before_loci.bed - the candidate lncRNA sequences before merging into loci, `BED` format.\n+ lncRNA_loci.bed - loci of the candidate lncRNA, `BED` format.\n\n`gffcompare_second`- classification of the candidate lncRNA sequences by their location in the genome relative to lncRNA loci.\n+ gff.annotated.gtf\n+ gff.filter_alignm.bed.refmap\n+ gff.filter_alignm.bed.tmap\n+ gff.loci\n+ gff.stats\n+ gff.tracking\n\n***Filtering possible transposable elements (TEs).***\n\n`TE_finder`\n+ Lnc_aling_with_TE.tsv - the candidate lncRNA sequences that mapped on TE, `TSV` format.\n+ lncRNA_after_loci.bed - the candidate lncRNA sequences that are completely matched (`=` - class of gff compare) with lncRNA loci, `BED` format.\n\n**3. LncRNA annotation.**\n\n`lncRNA_structure`\n+ anti.png - allocation of antisense lncRNA alignment to target gene structure.\n+ exon_size.png - lncRNA exon size distribution. \n+ intron_size.png - lncRNA intron size distribution.\n+ itron_coordin.tsv - coordinates lncRNA introns, `TSV` format.\n+ long_transcripts.bed - transcripts with length > 5000 nt, `BED` format.\n+ number_of_exon.png - the ratio of the number of exons per lncRNA.\n+ number_of_lncRNA.png - number of lncRNA per chromosome.\n+ statistic_bed.tsv - lncRNA intron statistic, `TSV` format.\n\n`new_lncRNA`\n+ blast.outfmt6 - BLASTn results in `outfmt6` format.\n+ classes.png - distribution of lncRNA classes. \n+ LncAPDB_vs_blast.csv - known lncRNAs that were predicted.\n+ new_lncrna.fasta - identified lncRNA transcripts,`FASTA` format. (**final result**)\n+ True_lncRNA.bed - identified lncRNA transcripts,`BED` format.\n\n`tissue`\n+ all.txt - lncRNA that have homologs with known lncRNAs.\n+ cod.txt - ID of proteine coding transcripts.\n+ cons.txt - ID of the lncRNAs similar to lncRNAs from other species (conserved sequences)\n+ id.txt - ID of all input transcripts\n+ non.txt - ID of the lncRNAs similar only to known studied organism sequences (non-conserved sequences)\n+ tissue_org.csv - all in one (proteine coding, conserved lncRNAs, non-conserved lncRNAs) \n+ tissue_org.png - heatmap of transcript libraries tissue type.\n+ transc_cod.csv - proteine coding transcript libraries tissue type.\n+ transc.csv - conserved lncRNAs transcript libraries tissue type.\n+ transc_non.csv - non-conserved lncRNAs transcript libraries tissue type.\n+ Blastn alignment.\n+ Analysis of lncRNA expression.\n\n`expression`\n+ box_plot.png - box plot diagrams of gene expression.\n+ entropy.png - density plot of Shannon entropy.\n+ expr_table.tsv - table with expression data for every transcript in every tissue.\n+ hist_expr.png - density plot of maximum expression levels of transcripts.\n+ table_type.txt - type of expression results.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Errors",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "```\nrule model_lncFinder:\n    input: data/input/test_train/sets.txt                                    \n    output: data/input/test_train/dirs.txt                                                                                                            \n    jobid: 2    \n\nActivating conda environment /home/pronozin/ICAnnoLncRNA---identification-classification-and-annotation-of-LncRNA-main/.snakemake/conda/767d2b45.\n/bin/bash: activate:\n```\n**Solution**: type `conda install conda` in ICAnnoLncRNA environment.\n\n```\nrule Gmap_build:\n    input: data/reference/Zea_mays.AGPv4.dna.toplevel.fa, data/reference/Zea_mays.AGPv4.40.gff\n    output: data/output/statistic.csv\n    jobid: 5\n...\n\nError in rule Gmap_build:\n    jobid: 5\n    output: data/output/statistic.csv\n\nRuleException:\nCalledProcessError in line 123 of ...:\nCommand ' set -euo pipefail; ...'\n```\n**Solution**: update gtfparse package. `Example: conda install -c bioconda gtfparse`\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/run_pipeline.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/scripts/parallel_gmap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/scripts/Chunk_dataframe.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/image/Pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "It is necessary to install and download (download program in pipeline folder):",
        "type": "Text_excerpt",
        "value": "+ [CPC2](https://github.com/biocoder/CPC2)\n```\n1. cd ./ICAnnoLncRNA---identification-classification-and-annotation-of-LncRNA-main\n2. wget https://github.com/biocoder/CPC2/archive/refs/heads/master.zip\n3. unzip master.zip\n4. mv CPC2-master CPC2\n```\n+ [LncAPDB.fasta](https://data.mendeley.com/datasets/fnk8pmp2yz/3)\n\ndownload LncAPDB.fasta into `data/reference/data_index` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Genome sequence",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "1. Known LncRNA transcripts of the species in `FASTA` format. File with lncRNA from the public database of lncRNA. For example [Ensembl](https://www.ensembl.org/index.html), [EVLncRNAs v2](https://www.sdklab-biophysics-dzu.net/EVLncRNAs2/).\n2. Known protein coding sequences of the species in `FASTA` format. File with protein coding sequences from a public database. For example [Ensembl](https://www.ensembl.org/index.html).\n3. RNA-seq transcripts of the species in `FASTA` format. This file contains transcripts obtained after assembly of transcriptome. For example file that we provide, [30k_zey.fasta](https://github.com/artempronozin95/ICAnnoLncRNA---identification-classification-and-annotation-of-LncRNA/blob/main/data/input/30k_zey.zip), obtained by [Trinity](https://github.com/trinityrnaseq/trinityrnaseq) assembly.\nAll three sets are necessary for build "
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional data",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Input"
        ],
        "type": "Text_excerpt",
        "value": "1. TE coordinats on the reference genome, example [Zea_N_merged.bed](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/data/reference/N_coords/Zea_N_merged.bed)\n2. File with sequence ID from public lncRNA databases connected to IDs in library of known lncRNAs. example [index_and_newindex.csv](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/tissue/index_and_newindex.csv)\n3. Annotation of the organism transcriptome libraries by tissue type, example [SRX_all_org.tsv](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/tissue/SRX_all_org.tsv)\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "Additional data is presented here: https://data.mendeley.com/datasets/fnk8pmp2yz/3\n\nIt includes: \n+ blast.outfmt6 - Blastn results. Contain homologs with known lncRNAs sequences from the LncAPDB library.\n+ index_and_newindex.fasta - index of PNRD, CANTATAdb, GREENC, PlncDB, EVLncRNA databases compared with new index for LncAPDB library. \n+ LncAPDB.fasta - lncRNA sequences of LncAPDB library in fasta format.\n+ lncrna_class.tmap - novel lncRNAs divided into gffcompare classes.\n+ lncrna_coordinats.bed - coordinates of novel lncRNAs on chromosomes.\n+ lncrna_intron_size.tsv - intron size of novel lncRNAs and their coordinates on the genome.\n+ new_lncrna.fasta - novel lncRNA sequences in fasta format.\n+ new_lncrna_locus.loci - locus of lncRNA sequences on genome.\n+ transcriptome_lib.txt - Maize transcriptome libraries. \n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration file",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data"
        ],
        "type": "Text_excerpt",
        "value": "Input all necessary files into configuration file \u201cconfig.yaml\u201d:\n+ `lnc:` - known LncRNA sequences of studied organisms in `FASTA` format. \n  + (Example: `lnc: \"data/input/lincrna.fasta\"`)\n+ `cds:` - known CDS (coding) sequences of studied organisms in `FASTA` format. \n  + (Example: `cds: \"data/input/7000_len_mRNA.fasta\"`)\n+ `model:` - pipeline check if model (lncFinder) for this organism already exist and use it, if it's not, pipeline will create a new one (in output folder). Model that exist represented in [Models](#models). \n  + (Example: `model: \"Zea_mays\"`)\n+ `sequence:` - sequences that need to study in `FASTA` format.\n  + (Example: `sequence: \"data/input/Zea.fasta\"`)\n+ `structure:` - need to choose whether to use secondary structure in model building or not. Choose between `DNA` or `SS` (secondary structure). \n  + (Example: `structure: \"DNA\"`)\n+ `gmap:`\n  + `gff_reference:` - reference genome annotation in `GFF` format. \n    + (Example: `gff_reference: \"data/reference/Zea_mays.AGPv4.40.gff\"`)\n  + `reference:` - reference genome in `FASTA` format.\n    +  (Example: `reference: \"data/reference/Zea_mays.AGPv4.dna.toplevel.fa\"`)\n  + `out:` - output file. \n    + (Example: `out: \"data/output/alignm.gff\"`)\n+ `gff:` - gff file of reference genome. \n  + (Example: `gff: \"data/reference/Zea_mays.AGPv4.40.gff\"`)\n+ `blast:` - standard BLAST parameters\n  + `evalue:` - evalue\n    + (Example: `evalue: 1e-50`)\n  + `max_target:` - max_target_seqs\n    + (Example: `max_target: 1`)\n  + `identity:` - perc_identity\n    + (Example: `identity: 30`)\n  + `threads:` - num_threads\n    + (Example: `threads: 1`)\n+ `TE_coords:` - if there is no TE coordinats information - recomended to turn off this step.\n   + `option:` \"on\" - turn on or turn off this step (on/off) \n   + `coords:` - TE coordinat\n     + (Example: `coords: \"data/reference/N_coords/Zea_N_merged.bed\"`)\n+ `tissue:`\n  + `organism:` - choose species that you study form species [list](#species), or input your own species ID in same format\n    + (Example: `organism: \"ZMAY\"`)\n  + `exp:` - choose between organisms tissue experiments in [Tissue analysis](#tissue-analysis) or input your organism. \n    + (Example: `exp: \"ZM\"`)\n  + `LncAPDB:` - File with sequence ID from public lncRNA databases connected to IDs in library of known lncRNAs.\n    + (Example: `LncAPDB: \"tissue/index_and_newindex.csv\"`)\n  + `SRX_exp:` - Annotation of the transcriptome libraries by tissue type and gene expression levels.\n    + (Example: `SRX_exp: \"tissue/SRX_all_org.tsv\"`)\n+ `expression`:\n  + `option`: \"on\" - turn on or turn off this step (on/off) \n  + `path`: - path to expression data.\n    + (Example: `path: \"expressin/Kallisto\"`)\n  + `calculation_type`: - type of expression data. There three types: 1.Kallisto 2.Htseq 3.Own type of data.\n    + (Example: `path: \"Kallisto\"`)\n    "
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "data/input",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data",
          "Folders"
        ],
        "type": "Text_excerpt",
        "value": "Contain: \n1. Known LncRNA transcripts of the species in `FASTA` format.\n2. Known protein coding sequences of the species in `FASTA` format.\n3. RNA-seq transcripts of the species in `FASTA` format."
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "data/reference",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):",
          "Data",
          "Folders"
        ],
        "type": "Text_excerpt",
        "value": "Contain:\n+ reference genome of studied organism in `FASTA` format.\n+ annotation of studied organism in `GFF/GTF` format.\n+ `data_index` folder with library of known lncRNA from databases.\n+ `intron_data` folder with structure information of organisms.\n+ `models` folder with model for lncFinder.\n+ `N_coords` folder with TE coordinats"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Models",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Zea_mays*\n+ *Arabidopsis_thaliana*\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LncRNA structure information",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Zea_mays*\n+ *Arabidopsis_thaliana*\n+ *Oryza_sativa*\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Known LncRNA for database",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "Folder `data/reference/data_index` contain lncRNA library (LncAPDB.fasta) that build on base of 5 lncRNA databases (PNRD, CANTATAdb, GREENC, PlncDB, EVLncRNA). The library you can find here: https://data.mendeley.com/v1/datasets/fnk8pmp2yz/draft?a=13de1dfb-b631-42f3-8108-f3de2f50fd90\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Species",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "+ *Medicago truncatula* - `MTRU`\n+ *Glycine max* - `GMAX`\n+ *Populis trichocarpa* - `PTRI`\n+ *Arabidopsis thaliana* - `ATHA`\n+ *Vitis vivifera* - `VVIN`\n+ *Oryza sativa japonica* - `OSAT`\n+ *Brachipodiumdistachion* - `BDIS`\n+ *Sorghum bicolor* - `SBIC`\n+ *Zea mays* - `ZMAY`\n+ *Selaginella moellendorfii* - `SMOE`\n+ *Physcomitrella patens* - `PPAT`\n+ *Ostreococcus tauri*- `OTAU`\n+ *Volvox* - `VOLV`\n+ *Amborell trichopoda* - `ATRI`\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tissue analysis",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "File `tissue/SRX_all_org.tsv`, contains information about 1241 transcript experiment libraries for 5 organisms with respect to specific tissue. In config.yaml need to choose between organisms that presented in SRX file:\n+ HV - *Hordeum vulgare*\n+ OS - *Oryza sativa*\n+ SL - *Solanum lycopersicum*\n+ ST - *Solanum tuberosum*\n+ ZM - *Zea mays*\n\nIf the libraries you are investigating (for other organism for exemple) are not in this file. You can add them to the data file in the same format \n```\nST\tSRX1478098\tleaf\nZM\tSRX339769\tstomatal division zone\nZM\tSRX339787\tear\nZM\tSRX711129\tleaf\nOS\tSRX2582231\tunknown\nZM\tSRX711024\tear\nZM\tSRX711053\tleaf\n\n```\nWhere 1 column - id, 2 - organism that you study, 3 - SRX library, 4 - tissue. \n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Expression and entropy",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "For this step there is necessary to provide expression data for every transcript. Thus recommended `turn off` this step at first run of the pipeline. After receiving expression data `turn on` this step and pipeline will calculete entropy and espression statistic. In config.yaml need to choose between three types of table building:\n+ `Kallisto` - result are received by means of Kallisto program. Results should be presented as on example:\n```\n\u251c\u2500\u2500 SRR957466\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 run_info.json\n\u251c\u2500\u2500 SRR957467\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 abundance.tsv\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 run_info.json\n\u2514\u2500\u2500 SRR957468\n    \u251c\u2500\u2500 abundance.h5\n    \u251c\u2500\u2500 abundance.tsv\n    \u2514\u2500\u2500 run_info.json\n```  \n+ `Htseq` - result are received by means of Htseq program. Results should be presented as on example:\n```\n\u251c\u2500\u2500 SRR1586686.txt\n\u2514\u2500\u2500 SRR504468.txt\n```\n+ `own` - In this case user should build table by himself. Table should looks like as [table](https://github.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/blob/main/example/expr_table.tsv) presented in example folder. Where:\n+ `type` - `mRNA` - is protein coding genes. `noncons` - nonconserved lncRNAs. `consv` - conserved lncRNAs.\n+ all tissue that needed. In example table, value is a median of expression for libraries that belong to tissue in column name.\n+ `target_id` - ID of the transcript. it is necessary that the transcripts correspond to the results of the pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "A typical structure of `Output` is follows:\n```\n\u251c\u2500\u2500 gffcompare_first\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.annotated.gtf\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.filter_alignm.bed.refmap\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.filter_alignm.bed.tmap\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.loci\n \u00a0\u00a0 \u251c\u2500\u2500 gffcmp.stats\n \u00a0\u00a0 \u2514\u2500\u2500 gffcmp.tracking\n\u251c\u2500\u2500 gffcompare_second\n \u00a0\u00a0 \u251c\u2500\u2500 gff.annotated.gtf\n \u00a0\u00a0 \u251c\u2500\u2500 gff.filter_alignm.bed.refmap\n \u00a0\u00a0 \u251c\u2500\u2500 gff.filter_alignm.bed.tmap\n \u00a0\u00a0 \u251c\u2500\u2500 gff.loci\n \u00a0\u00a0 \u251c\u2500\u2500 gff.stats\n \u00a0\u00a0 \u2514\u2500\u2500 gff.tracking\n\u251c\u2500\u2500 GMAP\n \u00a0\u00a0 \u251c\u2500\u2500 alignm.bed\n \u00a0\u00a0 \u251c\u2500\u2500 alignm_filter.gff\n \u00a0\u00a0 \u251c\u2500\u2500 filter_alignm.bed\n \u00a0\u00a0 \u251c\u2500\u2500 gmap_build.err.log\n \u00a0\u00a0 \u251c\u2500\u2500 gmap_build.out.log\n \u00a0\u00a0 \u251c\u2500\u2500 gmap.out.log\n \u00a0\u00a0 \u251c\u2500\u2500 reference.bed\n \u00a0\u00a0 \u2514\u2500\u2500 statistic.csv\n\u251c\u2500\u2500 lncRNA_prediction\n \u00a0\u00a0 \u251c\u2500\u2500 Coding.fasta\n \u00a0\u00a0 \u251c\u2500\u2500 cpc.txt\n \u00a0\u00a0 \u251c\u2500\u2500 lncFinder.csv\n \u00a0\u00a0 \u2514\u2500\u2500 Noncoding.fasta\n\u251c\u2500\u2500 lncRNA_structure\n \u00a0\u00a0 \u251c\u2500\u2500 anti.png\n \u00a0\u00a0 \u251c\u2500\u2500 exon_size.png\n \u00a0\u00a0 \u251c\u2500\u2500 intron_size.png\n \u00a0\u00a0 \u251c\u2500\u2500 itron_coordin.tsv\n\u00a0 \u00a0 \u251c\u2500\u2500 long_transcripts.bed\n\u00a0\u00a0  \u251c\u2500\u2500 number_of_exon.png\n\u00a0\u00a0  \u251c\u2500\u2500 number_of_lncRNA.png\n \u00a0\u00a0 \u2514\u2500\u2500 statistic_bed.tsv\n\u251c\u2500\u2500 loci\n \u00a0\u00a0 \u251c\u2500\u2500 lncRNA_before_loci.bed\n \u00a0\u00a0 \u2514\u2500\u2500 lncRNA_loci.bed\n\u251c\u2500\u2500 new_lncRNA\n \u00a0\u00a0 \u251c\u2500\u2500 blast.outfmt6\n \u00a0\u00a0 \u251c\u2500\u2500 classes.png\n \u00a0\u00a0 \u251c\u2500\u2500 LncAPDB_vs_blast.csv\n\u00a0 \u00a0 \u251c\u2500\u2500 new_lncrna.fasta\n\u00a0\u00a0  \u2514\u2500\u2500 True_lncRNA.bed\n\u251c\u2500\u2500 TE_finder\n \u00a0\u00a0 \u251c\u2500\u2500 Lnc_aling_with_TE.tsv\n \u00a0\u00a0 \u2514\u2500\u2500 lncRNA_after_loci.bed\n\u251c\u2500\u2500 tissue\n    \u251c\u2500\u2500 all.txt\n    \u251c\u2500\u2500 cod.txt\n    \u251c\u2500\u2500 cons.txt\n    \u251c\u2500\u2500 id.txt\n    \u251c\u2500\u2500 non.txt\n    \u251c\u2500\u2500 tissue_org.csv\n    \u251c\u2500\u2500 tissue_org.png\n    \u251c\u2500\u2500 transc_cod.csv\n    \u251c\u2500\u2500 transc.csv\n    \u2514\u2500\u2500 transc_non.csv\n\u251c\u2500\u2500 expression\n \u00a0\u00a0 \u251c\u2500\u2500 box_plot.png\n \u00a0\u00a0 \u251c\u2500\u2500 entropy.png\n \u00a0\u00a0 \u251c\u2500\u2500 expr_table.tsv\n \u00a0\u00a0 \u251c\u2500\u2500 hist_expr.png\n \u00a0\u00a0 \u2514\u2500\u2500 table_type.txt\n```\n* Folder \"tissue\", contains lncRNA distribution in tissue.\n\nGroups of output files\n\n**1. Pre-processing.**\n\nPre-processing performed in input directory:\n+ filtered_seq.fasta - filter transcripts with length < 200 nt.\n+ new_vs_old_id.tsv - new ID and old ID of transcripts.\n+ test_train - folder of lncFinder model studie. \n\n**2. LncRNA filtering.**\n\n***lncRNA_prediction***\n\n`lncRNA_prediction`\n+ Coding.fasta - Transcripts predicted as protein coding by lncFinder, `FASTA` format. \n+ cpc.txt - Transcripts predicted as lncRNA by CPC2, `TXT` format.\n+ lncFinder.csv - Transcripts predicted as lncRNA by lncFinder, `CSV` format.\n+ Noncoding.fasta - Transcripts predicted as lncRNA by lncFinder, `FASTA` format.\n\n***GMAP alignment on reference genome.***\n\n`GMAP`\n+ alignm.bed - results of lncRNA transcripts alignment on reference genome by GMAP, 'BED' format.\n+ alignm_filter.gff - results of lncRNA transcripts alignment on reference genome without long intron transcripts, `GFF` format.\n+ filter_alignm.bed - results of lncRNA transcripts alignment on reference genome without long intron transcripts, `BED` format.\n+ gmap_build.err.log\n+ gmap_build.out.log\n+ gmap.out.log\n+ reference.bed - reference genome annotation, `BED` format.\n+ statistic.csv - lncRNA structure statistic, `CSV` format.\n\n***Filtering erros/noise.***\n\n`gffcompare_first` - classification of the candidate lncRNA sequences by their location in the genome relative to a protein-coding genes, more information can be found on [gffcompare](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml)\n+ gffcmp.annotated.gtf - Gffcompare reports a GTF file containing the \u201cunion\u201d of all transcript IDs in each sample.\n+ gffcmp.filter_alignm.bed.refmap - This tab-delimited file lists, for each reference transcript, which query transcript either fully or partially matches that reference transcript.\n+ gffcmp.filter_alignm.bed.tmap - This tab delimited file lists the most closely matching reference transcript for each query transcript. \n+ gffcmp.loci - Represent loci of transcripts. \n+ gffcmp.stats\n+ gffcmp.tracking - This file matches transcripts up between samples.\n\n`loci`\n+ lncRNA_before_loci.bed - the candidate lncRNA sequences before merging into loci, `BED` format.\n+ lncRNA_loci.bed - loci of the candidate lncRNA, `BED` format.\n\n`gffcompare_second`- classification of the candidate lncRNA sequences by their location in the genome relative to lncRNA loci.\n+ gff.annotated.gtf\n+ gff.filter_alignm.bed.refmap\n+ gff.filter_alignm.bed.tmap\n+ gff.loci\n+ gff.stats\n+ gff.tracking\n\n***Filtering possible transposable elements (TEs).***\n\n`TE_finder`\n+ Lnc_aling_with_TE.tsv - the candidate lncRNA sequences that mapped on TE, `TSV` format.\n+ lncRNA_after_loci.bed - the candidate lncRNA sequences that are completely matched (`=` - class of gff compare) with lncRNA loci, `BED` format.\n\n**3. LncRNA annotation.**\n\n`lncRNA_structure`\n+ anti.png - allocation of antisense lncRNA alignment to target gene structure.\n+ exon_size.png - lncRNA exon size distribution. \n+ intron_size.png - lncRNA intron size distribution.\n+ itron_coordin.tsv - coordinates lncRNA introns, `TSV` format.\n+ long_transcripts.bed - transcripts with length > 5000 nt, `BED` format.\n+ number_of_exon.png - the ratio of the number of exons per lncRNA.\n+ number_of_lncRNA.png - number of lncRNA per chromosome.\n+ statistic_bed.tsv - lncRNA intron statistic, `TSV` format.\n\n`new_lncRNA`\n+ blast.outfmt6 - BLASTn results in `outfmt6` format.\n+ classes.png - distribution of lncRNA classes. \n+ LncAPDB_vs_blast.csv - known lncRNAs that were predicted.\n+ new_lncrna.fasta - identified lncRNA transcripts,`FASTA` format. (**final result**)\n+ True_lncRNA.bed - identified lncRNA transcripts,`BED` format.\n\n`tissue`\n+ all.txt - lncRNA that have homologs with known lncRNAs.\n+ cod.txt - ID of proteine coding transcripts.\n+ cons.txt - ID of the lncRNAs similar to lncRNAs from other species (conserved sequences)\n+ id.txt - ID of all input transcripts\n+ non.txt - ID of the lncRNAs similar only to known studied organism sequences (non-conserved sequences)\n+ tissue_org.csv - all in one (proteine coding, conserved lncRNAs, non-conserved lncRNAs) \n+ tissue_org.png - heatmap of transcript libraries tissue type.\n+ transc_cod.csv - proteine coding transcript libraries tissue type.\n+ transc.csv - conserved lncRNAs transcript libraries tissue type.\n+ transc_non.csv - non-conserved lncRNAs transcript libraries tissue type.\n+ Blastn alignment.\n+ Analysis of lncRNA expression.\n\n`expression`\n+ box_plot.png - box plot diagrams of gene expression.\n+ entropy.png - density plot of Shannon entropy.\n+ expr_table.tsv - table with expression data for every transcript in every tissue.\n+ hist_expr.png - density plot of maximum expression levels of transcripts.\n+ table_type.txt - type of expression results.\n"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "artempronozin95"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 43693,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6923,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1002,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:55:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Work start",
        "parent_header": [
          "It is necessary to install and download (download program in pipeline folder):"
        ],
        "type": "Text_excerpt",
        "value": "  #### 1. `snakemake -j 2`\n  `-j` or  `--cores` -  Use at most N CPU cores/jobs in parallel. If N is omitted or \u2018all\u2019, the limit is set to the number of available CPU cores.\n  #### 2. `snakemake -nr` \n  `-n` - Do not execute anything, and display what would be done. If you have a very large workflow, use \u2013dry-run \u2013quiet to just print a summary of the DAG of jobs.\n  \n  `-r` - Print the reason for each executed rule.\n  #### 3. `snakemake --use-conda`\n  `--use-conda` - Use additional conda environment.\n  #### 4. Recommended run: \n  `snakemake -j 2 --use-conda`"
      },
      "source": "https://raw.githubusercontent.com/artempronozin95/ICAnnoLncRNA-identification-classification-and-annotation-of-LncRNA/main/README.md",
      "technique": "header_analysis"
    }
  ]
}