{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kruvelab/MS2Quant"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-27T10:10:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-18T20:20:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9994617774938463,
      "result": {
        "original_header": "MS2Quant",
        "type": "Text_excerpt",
        "value": "\r\n**MS2Quant** is a machine learning model that enables prediction of concentration \r\nfrom fragmentation (MS<sup>2</sup>) spectra of detected, but unidentified chemicals. \r\nMS2Quant is an *xgbTree* algorithm-based regression model developed using ionization efficiency data for\r\n1191 unique chemicals that span 8 orders of magnitude. For more information about the data used in model training \r\nsee the summary file under [MS2Quant/development/data](https://github.com/kruvelab/MS2Quant/tree/main/development/data).\r\n\r\nAs for now, MS2Quant can predict ionization efficiencies in positive electrospray ionization mode\r\nfor [M+H]+ and [M]+ ions, and the negative mode model is currently being developed.\r\nMS2Quant package has been tested with R version 4.1.1 and 4.2.2, as well as with SIRIUS versions 4.9.15 to 5.6.2.\r\n\r\nFor more information about development and validation of MS2Quant, please see the [paper](https://doi.org/10.1021/acs.analchem.3c01744).\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8703409125226131,
      "result": {
        "original_header": "1. Using MS2Quant to quantify unidentified substances",
        "type": "Text_excerpt",
        "value": "\r\nFollowing steps need to be taken to use MS2Quant for quantification of detected unknown chemicals:\r\n\r\n+ 1.1. Install the MS2Quant R-package\r\n+ 1.2. Measure a set of calibrants together with the sample\r\n+ 1.3. Organize the input information into a table\r\n+ 1.4. Run SIRIUS+CSI:FingerID calculations\r\n+ 1.5. Use MS2Quant to quantify\r\n\r\n![MS2Quant_github_workflow](https://github.com/kruvelab/MS2Quant/assets/48623628/1d32b3bc-8cd0-4ecf-99c1-d2630f6f5af6)\r\n**Figure 1.** MS2Quant workflow\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9966887551134653,
      "result": {
        "original_header": "1.3. Organize the input information into a table",
        "type": "Text_excerpt",
        "value": "To use the function *MS2Quant_quantify()*, all data about calibrants and suspects needs to be organized into a table\r\nwith following information:\r\n+ *identifier* - this information is especially relevant for unidentified features as the identifier needs to align with the identifier in \r\nSIRIUS+CSI:FingerID calculations folder name (FIG). For calibrants, this information is used for grouping; therefore, the name of the chemical can be added, for example.\r\n+ *SMILES* - SMILES notation needs to be added to calibrants, as for these chemicals ionization efficiency is predicted from the structure. \r\n+ *retention_time* - retention time information is needed for all features (both calibrants and suspects subject to quantification). This information is used to\r\ncalculate eluent descriptors such as organic modifier percentage, aqueous pH, polarity index, surface tension, and viscosity.\r\n+ *area* - integrated signal area; needs to be added for all LC/MS features. For calibrants, all signal areas corresponding to different spiked concentration levels should be added as a new line.\r\n+ *conc_M* - molar concentration; needs to be added to calibrants in order to fit calibration curves and calculate RFs. **This needs to be left empty for chemicals subject to quantification!**\r\n\r\nNB! Do not change the writing of the column names!\r\nThe example data table can be found at [inst/example_data/quantification_example.csv](https://github.com/kruvelab/MS2Quant/blob/main/inst/example_data/quantification_example.csv)\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9797387660844439,
      "result": {
        "original_header": "2. Using MS2Quant to quantify (tentatively) identified substances",
        "type": "Text_excerpt",
        "value": "\r\nMS2Quant can also be used to quantify identifier or tentatively identified structures. For this, the workflow is similar to \r\nChapter 1, with a modification in creating the input table (Chapter 1.3.). For tentatively identified chemicals, SMILES notation needs to be added \r\n(however, *conc_M* should still be left empty to consider this chemical subject to quantification).\r\n\r\n![MS2Quant_github_tentativelyidentified](https://github.com/kruvelab/MS2Quant/assets/48623628/018c8a8d-443f-4274-ab6b-099c761d3b64)\r\n**Figure 3.** If SMILES notation is provided for tentatively identified suspect, quantification will be done based on structure.\r\n\r\n**NB!** Unidentified and tentatively identified chemicals subject to quantification can be used at the same time; however, when SMILES is provided,\r\nquantification based on structure will be prioritized.\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860492797077081,
      "result": {
        "original_header": "3. Using MS2Quant to predict ionization efficiency (without quantification)",
        "type": "Text_excerpt",
        "value": "\r\nQuantification cannot be performed if calibration chemicals have not been run together with the suspects. Still, ionization efficiency can be predicted for any chemical either based on structure (SMILES) or\r\npredicted fingerprints.\r\n\r\nIn order to predict ionization efficiency values to different chemicals under the same eluent conditions, following code can be run:\r\n```\r\nchemicals_SMILES = tibble(SMILES = c(\"CN1C=NC2=C1C(=O)N(C(=O)N2C)C\", \r\n                                     \"CC(C)CC1=CC=C(C=C1)C(C)C(=O)O\"))\r\n\r\nIE_pred = MS2Quant_predict_IE(chemicals_SMILES)\r\ndata = IE_pred$chemicals_predicted_IEs\r\n```\r\nBy default, 80/20 MeCN/H2O with aqueous pH of 2.7 is used. Alternative eluent compositions can be specified as function input: \r\nBASH2*\r\nIonization efficiency can also be predicted for unidentified chemicals. In this case, similarly to *MS2Quant_quantify()* function, data table with an identifier and retention time needs to be provided together\r\nwith the eluent file and SIRIUS calculations results folder:\r\nBASH3*\r\nIf retention time is missing from the data table, default eluent conditions will be used. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/kruvelab/MS2Quant/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kruvelab/MS2Quant/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kruvelab/MS2Quant"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MS2Quant"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kruvelab/MS2Quant/assets/48623628/1d32b3bc-8cd0-4ecf-99c1-d2630f6f5af6"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kruvelab/MS2Quant/assets/48623628/89874378-64bc-499e-aa32-43c9f69447b1"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kruvelab/MS2Quant/assets/48623628/018c8a8d-443f-4274-ab6b-099c761d3b64"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.1. Install the MS2Quant R-package",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo install the package, run the following command in R:\r\n\r\n```\r\ndevtools::install_github(\"kruvelab/MS2Quant\",\r\n                         ref=\"main\",\r\n                         INSTALL_opts=\"--no-multiarch\")\r\n```\r\nTo test if the installation was successful, you can run the test code (see testing in Chapter 4.)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2. Measure a set of calibrants together with the sample",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo convert a predicted ionization efficiency (IE) value to an instrument and measurement-specific response \r\nfactor (RF), calibration of the model is performed by measuring calibrants during the same experimental run with suspects.\r\nResponse factors of calibrants are calculated by MS2Quant using spiked concentration and integrated signal areas, and the \r\nlinearity is checked (see *1.2.1. Linearity check*). \r\nTo construct a calibration graph between predicted ionization efficiencies and experimental response factors, \r\nthe ionization efficiency of calibrants is predicted using their SMILES notation, and the calibration\r\ngraph between logIE and logRF can be visualized (see testing in Chapter 4.).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2.1. Linearity check",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances",
          "1.2. Measure a set of calibrants together with the sample"
        ],
        "type": "Text_excerpt",
        "value": "Weighted linear regression is performed for calibration curves (spiked concentration vs integrated signal area). \r\nThe goodness of fit evaluated based on relative residuals, and if the largest relative residual \r\n(based on absolute value) is >20%, highest concentration datapoint is removed. If this is not achieved, minimum 5 points are \r\nleft in the dataset, however, a warning message will be sent if the largest relative residual is larger than 20%. We suggest looking\r\ninto the calibration graphs visually to confirm the correctness of provided concentrations and signal areas \r\n(separate calibration plots for each calibrant can be visualized after running *MS2Quant_quantify()* function, see testing in Chapter 4.)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1.2.2. Choosing calibrants",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances",
          "1.2. Measure a set of calibrants together with the sample"
        ],
        "type": "Text_excerpt",
        "value": "The calibrants are used to find a linear regression between predicted ionization effciencies and measurement\r\nspecific response factors. Therefore, it is important that the ionization efficiencies of these chemicals would cover \r\nmultiple orders of magnitude in IE scale. Minimum 5 calibrants is required to use MS2Quant but we strongly suggest to use \r\nat least 10 calibrants. For choosing calibrants that would cover wide range of ionization efficiencies, you can look into experimental IE data used for\r\nmodel training at [MS2Quant/development/data](https://github.com/kruvelab/MS2Quant/tree/main/development/data).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9954494934330865,
      "result": {
        "original_header": "1. Using MS2Quant to quantify unidentified substances",
        "type": "Text_excerpt",
        "value": "\r\nFollowing steps need to be taken to use MS2Quant for quantification of detected unknown chemicals:\r\n\r\n+ 1.1. Install the MS2Quant R-package\r\n+ 1.2. Measure a set of calibrants together with the sample\r\n+ 1.3. Organize the input information into a table\r\n+ 1.4. Run SIRIUS+CSI:FingerID calculations\r\n+ 1.5. Use MS2Quant to quantify\r\n\r\n![MS2Quant_github_workflow](https://github.com/kruvelab/MS2Quant/assets/48623628/1d32b3bc-8cd0-4ecf-99c1-d2630f6f5af6)\r\n**Figure 1.** MS2Quant workflow\r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/kruvelab/MS2Quant/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MS2Quant"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "kruvelab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 93344,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1963,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MAXScript",
        "size": 1322,
        "type": "Programming_language",
        "value": "MAXScript"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.4. Run SIRIUS+CSI:FingerID",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances"
        ],
        "type": "Text_excerpt",
        "value": "SIRIUS calculations can be run either using graphical user interface or command line interface.\r\nInformation obtained from SIRIUS predictions will be joined to the unidentified chemicals information based on the **identifier**. \r\nThat means that the identifier provided in the table for unidentified LC/MS features needs to align with identifier found in SIRIUS folder name, see Figure 2.\r\n\r\n**NB! Do not use underscores (_) in your identifier!**\r\n\r\n![MS2Quant_github_sirius](https://github.com/kruvelab/MS2Quant/assets/48623628/89874378-64bc-499e-aa32-43c9f69447b1)\r\n**Figure 2.** *identifier* of unidentified suspect will be used to join predicted fingerprints from SIRIUS calculations.\r\n\r\n\r\nLonger explanation on how to use SIRIUS for predictions can be found from [Official online documentation for the SIRIUS MS/MS software github page](https://boecker-lab.github.io/docs.sirius.github.io/)\r\nand some examples can be found on [MS2Tox github page](https://github.com/kruvelab/MS2Tox/tree/main#fingerprint-calculation-with-siriuscsifingerid).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:58:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1.5. Use MS2Quant to quantify",
        "parent_header": [
          "MS2Quant",
          "1. Using MS2Quant to quantify unidentified substances"
        ],
        "type": "Text_excerpt",
        "value": "To quantify the unidentified chemicals, *MS2Quant_quantify()* function can be used. Following inputs are neede for the function:\r\n+ *calibrants_suspects* - (path to) data table including information about calibrants and suspects subject to quantification (see Chapter 1.3.)\r\n+ *eluent* - (path to) the gradient program information (see example at [inst/example_data/eluent.csv](https://github.com/kruvelab/MS2Quant/blob/main/inst/example_data/eluent.csv))\r\n+ *organic_modifier* - specify which organic modifier was used (either \"MeCN\" or \"MeOH\").\r\n+ *pH_aq* - specify the pH of the water phase.\r\n+ *fingerprints* - specify the path to your SIRIUS calculations results folder.\r\n\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Test code using example data from the package",
        "parent_header": [
          "MS2Quant"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo confirm that the installation of **MS2Quant** package has been successful, the following code can be run.\r\nThis code uses test data from the package.\r\n\r\n```\r\nlibrary(MS2Quant)\r\n\r\npath_dataframe_calibrants_suspects <- system.file(\"example_data\", \"quantification_example.csv\", package = \"MS2Quant\")\r\npath_eluent_file <- system.file(\"example_data\", \"eluent.csv\", package = \"MS2Quant\")\r\npath_suspects_sirius_project_folder <- system.file(\"example_data\", \"SIRIUS_results\", package = \"MS2Quant\")\r\n\r\nMS2Quant_quantification_results <- MS2Quant_quantify(path_dataframe_calibrants_suspects,\r\n                                                     path_eluent_file ,\r\n                                                     organic_modifier = \"MeCN\",\r\n                                                     pH_aq = 2.7,\r\n                                                     path_suspects_sirius_project_folder)\r\n\r\n# Separate calibration plots for each calibrant\r\nMS2Quant_quantification_results$calibrants_separate_plots\r\n\r\n# Calibration plot between experimental logRF and logIE\r\nMS2Quant_quantification_results$logIE_logRF_calibration_plot\r\n\r\n# Summary of the linear model between logRF and logIE\r\nMS2Quant_quantification_results$calibration_linear_model_summary\r\n\r\n# All suspect concentrations\r\nMS2Quant_quantification_results$suspects_concentrations\r\n\r\n# Date when the quantification was done\r\nMS2Quant_quantification_results$date\r\n\r\n\r\n```\r\n\r\n"
      },
      "source": "https://raw.githubusercontent.com/kruvelab/MS2Quant/main/README.md",
      "technique": "header_analysis"
    }
  ]
}