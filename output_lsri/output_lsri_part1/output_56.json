{
  "application_domain": [
    {
      "confidence": 49.38,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "PTransIPs"
        ],
        "type": "Text_excerpt",
        "value": "Please feel free to email us at `ziyangxu0205@gmail.com` or `haitian.zhong@cripac.ia.ac.cn`. If you find this work useful in your own research, please consider citing our work. \n```bibtex\n@ARTICLE{xu2024ptransips,\n  author={Xu, Ziyang and Zhong, Haitian and He, Bingrui and Wang, Xueying and Lu, Tianchi},\n  journal={IEEE Journal of Biomedical and Health Informatics}, \n  title={PTransIPs: Identification of Phosphorylation Sites Enhanced by Protein PLM Embeddings}, \n  year={2024},\n  volume={},\n  number={},\n  pages={1-10},\n  keywords={Proteins;Protein engineering;Amino acids;Training;Biological system modeling;Data models;Vectors;Phosphorylation sites;protein pre-trained language model;CNN;Transformer},\n  doi={10.1109/JBHI.2024.3377362}}\n```"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Xu, Ziyang and Zhong, Haitian and He, Bingrui and Wang, Xueying and Lu, Tianchi",
        "doi": "10.1109/JBHI.2024.3377362",
        "format": "bibtex",
        "title": "PTransIPs: Identification of Phosphorylation Sites Enhanced by Protein PLM Embeddings",
        "type": "Text_excerpt",
        "value": "@article{xu2024ptransips,\n    doi = {10.1109/JBHI.2024.3377362},\n    keywords = {Proteins;Protein engineering;Amino acids;Training;Biological system modeling;Data models;Vectors;Phosphorylation sites;protein pre-trained language model;CNN;Transformer},\n    pages = {1-10},\n    number = {},\n    volume = {},\n    year = {2024},\n    title = {PTransIPs: Identification of Phosphorylation Sites Enhanced by Protein PLM Embeddings},\n    journal = {IEEE Journal of Biomedical and Health Informatics},\n    author = {Xu, Ziyang and Zhong, Haitian and He, Bingrui and Wang, Xueying and Lu, Tianchi},\n}"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/StatXzy7/PTransIPs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-06T17:49:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-09T06:58:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PTransIPs: Identification of phosphorylation sites based on protein pretrained language model and Transformer"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9825485439500704,
      "result": {
        "original_header": "PTransIPs",
        "type": "Text_excerpt",
        "value": "PTransIPs: Identification of SARS-CoV-2 phosphorylation sites based on protein pretrained model embedding and transformer [[Paper]](https://arxiv.org/abs/2308.05115) \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9755471547795317,
      "result": {
        "original_header": "2. Generate two pretrained embedding",
        "type": "Text_excerpt",
        "value": "(**For ones that wish to skip this step:** We have already uploaded complete embeddings for Y sites in the data folder `./embedding/`. For S/T sites, you may download complete embeddings from [**All PTransIPs pretrained embeddings**](https://1drv.ms/f/s!AqzWnkSOWHpvhxMUDCjM9KFpz50O?e=N23jEn) and place them under the directory`./embedding/`) \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9869759560274878,
      "result": {
        "original_header": "Input2: Sequence pretrained embedding",
        "type": "Text_excerpt",
        "value": "**The code is set to generate embeddings for Y sites as default, if you attempt to do that for S/T sites, you should run the code after commenting Y sites' part and uncommenting S/T sites' part!** \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8022336495536896,
      "result": {
        "original_header": "Input3: Structure pretrained embedding",
        "type": "Text_excerpt",
        "value": "You may also refer to **[EMBER2](https://github.com/kWeissenow/EMBER2)** for detailed explanations. \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9134253577211965,
      "result": {
        "original_header": "3. Training PTransIPs Model",
        "type": "Text_excerpt",
        "value": "(**For ones that wish to skip this step:** you may [**Download the PTransIPs model**](https://1drv.ms/f/s!AqzWnkSOWHpvhxMUDCjM9KFpz50O?e=N23jEn) directly. Remember to place them under `.\\model\\Y_train` or `.\\model\\ST_train` so that you can proceed to the evaluation step directly.) \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9411128492555744,
      "result": {
        "original_header": "4. Evaluate the model performance on independent testset",
        "type": "Text_excerpt",
        "value": "Important parameters are:\n1. ``--Y``: To specify that we evalute the model trained on Y sites.\n2. ``--ST``: To specify that we evaluate the model trained on ST sites.\n3. ``--path``: To specify the path of model we evaluate, if you trained as default code, you should specify ``./model/Y_train`` for Y sites and ``./model/ST_train`` for ST sites.(but this part CAN't be empty!) \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/StatXzy7/PTransIPs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/sequence_to_analysis/merge_data.ipynb"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/sequence_to_analysis/merge_data.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/StatXzy7/PTransIPs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "StatXzy7/PTransIPs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PTransIPs"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/flowchart.png"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "\ud83d\udd27Pip Installation",
        "parent_header": [
          "PTransIPs",
          "1. Setup"
        ],
        "type": "Text_excerpt",
        "value": "**Note: We recommend use Python 3.9 for PTransIPs, and use conda to manage your environments!**\n\nTo get started, simply install conda and run:\n\n```shell\ngit clone https://github.com/StatXzy7/PTransIPs.git\nconda create --name PTransIPs python==3.9\n...\npip install -r requirements.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8671877886247805,
      "result": {
        "original_header": "Input2: Sequence pretrained embedding",
        "type": "Text_excerpt",
        "value": "To generate sequence pretrained embedding, run `./src/pretrained_embedding_generate.py` directly:\n```bash\npython src/pretrained_embedding_generate.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9250893744396373,
      "result": {
        "original_header": "Input3: Structure pretrained embedding",
        "type": "Text_excerpt",
        "value": "You may also refer to **[EMBER2](https://github.com/kWeissenow/EMBER2)** for detailed explanations. \nTo generate structure embeddding, firstly, git clone the `EMBER2` project. After moving the file `./src/pretrained_embedding_generate.py` into the `EMBER2` folder, you may run the codes: \n```bash\ngit clone https://github.com/kWeissenow/EMBER2.git\ncp src/structure_embedding_generate.py EMBER2/\npython EMBER2/structure_embedding_generate.py -i \"data/Y-train.fa\" -o \"EMBER2/output\"\npython EMBER2/structure_embedding_generate.py -i \"data/Y-test.fa\" -o \"EMBER2/output\"\n```\n**Here, `structure_embedding_generate.py` is set to generate embeddings for Y sites as default, if you attempt to do that for S/T sites, you may run as follows after modify the codes by commenting Y sites' part and uncommenting S/T sites' part!**\n \n```bash\npython EMBER2/structure_embedding_generate.py -i \"data/ST-train.fa\" -o \"EMBER2/output\"\npython EMBER2/structure_embedding_generate.py -i \"data/ST-test.fa\" -o \"EMBER2/output\"\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9970306141924972,
      "result": {
        "original_header": "3. Training PTransIPs Model",
        "type": "Text_excerpt",
        "value": "Example: Train PTransIPs on ST sites with default GPU:\n```bash\npython src/train.py --ST\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9959897134023998,
      "result": {
        "original_header": "4. Evaluate the model performance on independent testset",
        "type": "Text_excerpt",
        "value": "Files `path/PTransIPs_test_prob.npy` and `path/PTransIPs_text_result.txt` will be created, representing the prediction probability and performance of PTransIPs, respectively. (where `path/` depends on which sites you choose`) \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998115248196736,
      "result": {
        "original_header": "5. Some Visualization Analysis",
        "type": "Text_excerpt",
        "value": "Run `./src/umap_test.py` to generate umap visualization figures. Remember to modify the path of the model to the one that you want to visualize.\n```bash\npython src/umap_test_Y.py\npython src/umap_test_ST.py\n```\nRun `./src/Generate_tfseq.py` files to generate sequence for Two Sample Logo analysis. Remember to modify the path of the model to the one that you want to visualize.\n```bash\npython src/Generate_tfseq_Y.py\npython src/Generate_tfseq_ST.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9643599765589983,
      "result": {
        "original_header": "Input2: Sequence pretrained embedding",
        "type": "Text_excerpt",
        "value": "To generate sequence pretrained embedding, run `./src/pretrained_embedding_generate.py` directly:\n```bash\npython src/pretrained_embedding_generate.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8886393169388016,
      "result": {
        "original_header": "Input3: Structure pretrained embedding",
        "type": "Text_excerpt",
        "value": "To generate structure embeddding, firstly, git clone the `EMBER2` project. After moving the file `./src/pretrained_embedding_generate.py` into the `EMBER2` folder, you may run the codes: \n```bash\ngit clone https://github.com/kWeissenow/EMBER2.git\ncp src/structure_embedding_generate.py EMBER2/\npython EMBER2/structure_embedding_generate.py -i \"data/Y-train.fa\" -o \"EMBER2/output\"\npython EMBER2/structure_embedding_generate.py -i \"data/Y-test.fa\" -o \"EMBER2/output\"\n```\n**Here, `structure_embedding_generate.py` is set to generate embeddings for Y sites as default, if you attempt to do that for S/T sites, you may run as follows after modify the codes by commenting Y sites' part and uncommenting S/T sites' part!**\n \n```bash\npython EMBER2/structure_embedding_generate.py -i \"data/ST-train.fa\" -o \"EMBER2/output\"\npython EMBER2/structure_embedding_generate.py -i \"data/ST-test.fa\" -o \"EMBER2/output\"\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9461991208819314,
      "result": {
        "original_header": "3. Training PTransIPs Model",
        "type": "Text_excerpt",
        "value": "Run `./src/train.py` to train the PTransIPs model in `./src/PTransIPs_model.py`. \nExample: Train PTransIPs on ST sites with default GPU:\n```bash\npython src/train.py --ST\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9188019869715833,
      "result": {
        "original_header": "4. Evaluate the model performance on independent testset",
        "type": "Text_excerpt",
        "value": "Run `./src/model_performance_evaluate.py` to evaluate the model performance on independent testset. \nExample: Evaluate PTransIPs model trained on Y sites with default path:\n```bash\npython src/model_performance_evaluate.py \\\n        --Y \\\n        --path ./model/Y_train\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8778754418080447,
      "result": {
        "original_header": "5. Some Visualization Analysis",
        "type": "Text_excerpt",
        "value": "Run `./src/umap_test.py` to generate umap visualization figures. Remember to modify the path of the model to the one that you want to visualize.\n```bash\npython src/umap_test_Y.py\npython src/umap_test_ST.py\n```\nRun `./src/Generate_tfseq.py` files to generate sequence for Two Sample Logo analysis. Remember to modify the path of the model to the one that you want to visualize.\n```bash\npython src/Generate_tfseq_Y.py\npython src/Generate_tfseq_ST.py\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/StatXzy7/PTransIPs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PTransIPs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "StatXzy7"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 136107,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6319,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2308.05115"
      },
      "source": "https://raw.githubusercontent.com/StatXzy7/PTransIPs/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:07:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}