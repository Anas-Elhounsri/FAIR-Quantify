{
  "application_domain": [
    {
      "confidence": 15.62,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Michael-shannon/cellPLATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-13T21:01:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T22:16:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The 2023 version of cellPLATO"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "A Python data analysis package for time-lapse cell migration experiments written in collaboration with [Tyler Sloan](https://github.com/tsloan1377) at [Quorumetrix](https://github.com/Quorumetrix). Used after segmention (eg. [Cellpose](https://github.com/MouseLand/cellpose)) and tracking (eg. [Bayesian Tracker](https://github.com/quantumjot/btrack)) of large timelapse microscopy datasets, cellPLATO measures morphokinetic information about each cell per timepoint and automatically makes statistical plots (plots of difference in python, inspired by those in R by [Joachim Goedhart](https://github.com/JoachimGoedhart)). Users can pool/compare multiple replicates from multiple experimental conditions. Next, dimensionality reduction and cluster analysis is used to segregate cells into behavioural subtypes and produce a fingerprint for each condition (cells per behaviour subtype). Finally, exemplar cells are automatically selected and graphically displayed to disambiguate the nature of each quanitfied cell behavioural subtype.\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9497462171293467,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "Published in the Journal of Cell Science on the 24th of June, 2024 [here](https://journals.biologists.com/jcs/article/137/20/jcs261887/352628) \nOn the 14th of May 2023 at Journal of Cell Science's 'Imaging Cell Dynamics' conference in Lisbon, we presented cellPLATO's UMAP and HDBSCAN module to produce a fingerprint of cell behaviours in a heterogeneous population. Go [here](https://drive.google.com/drive/folders/1_f2GmdqbaF15FyesgxnsotuAu_XGh10o?usp=sharing) to see the poster! \n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9968065489186554,
      "result": {
        "type": "Text_excerpt",
        "value": "An unsupervised method for identifying cell behaviour in heterogeneous cell trajectory data \n1. takes tracking and segmentation data as input\n2. measures morphology and migration at each timepoint for every cell\n3. clusters cells with similar morphology and migration using UMAP and HDBSCAN\n4. measures the similarity of behavioural sequences for each cell over time, and clusters them to form 'trajectories of behaviour'\n5. de-abstractifies the clustered behaviours using graphics of exemplar cells, readouts of plasticity and comparisons between conditions \n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Michael-shannon/cellPLATO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/cellPLATO_StepByStep_trackmate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/cellPLATO_StepByStep_trackmate.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/cellPLATO_StepByStep_main.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/cellPLATO_StepByStep_main.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/Btrack_cellPLATO_2024.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/cellPLATO/Btrack_cellPLATO_2024.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Michael-shannon/cellPLATO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Michael-shannon/cellPLATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/588728402"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation instructions",
        "type": "Text_excerpt",
        "value": "1. Using anaconda terminal, cd to a directory where you want to install the software\n2. Clone the repository onto your local machine: git clone \n3. cd to the folder that contains 'environment.yml' and type: conda env create -f environment.yml\n4. Activate the environment: conda activate cellPLATO\n5. Install the rest of the packages: pip install -e .\n\nKnown issues with installation:\n\nIf you get the ERROR: Could not build wheels for hdbscan, which is required to install pyproject.toml-based projects\n\nPlease check 1) you have C++ installed, 2) install hdbscan using 'conda install -c conda-forge hdbscan'\n\nIf matplotlib fails to install via pip for the same reason, please use:\n\nconda install -c conda-forge matplotlib\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Michael-shannon/cellPLATO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Michael Shannon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/cellPLATO/images/cellPLATOlogo.png"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cellPLATO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Michael-shannon"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 804346,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 92998,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Michael-shannon",
          "type": "User"
        },
        "date_created": "2024-05-23T20:18:15Z",
        "date_published": "2024-05-23T20:22:12Z",
        "description": "This is the 2024 version of cellPLATO (cell Plasticity Analysis Tool) developed in collaboration with @tsloan1377 with help from @quantumjot . CellPLATO is a semi-automated morpho-kinetic analysis tool for creating classes of motion and morphology from cell tracking data.\r\n\r\nIt takes cell tracking data as an input, makes motility, morphology and clustering measurements for each cell at each timepoint, then outputs statistical plots of difference and plots of difference over time (inspired by those developed in R by @JoachimGoedhart ).\r\n\r\nThen, dimensionality reduction and cluster analysis are used to separate cells into behavioural classes based on their morpho-kinetic measurement between single timepoints or in time windows, producing a fingerprint of behaviour types per biological condition. \r\n\r\nTrajectories of behaviour are derived from clustering on sequence similarity, comparing strings of single timepoint behaviours.\r\n\r\nFor visualization, there is an emphasis on de-abstractification. Thus each trajectory is visualizable on the raw data, and the top contributing features are listed in order for each trajectory class.",
        "html_url": "https://github.com/Michael-shannon/cellPLATO/releases/tag/v1.0.1",
        "name": "CellPLATO 2024",
        "release_id": 157201611,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/Michael-shannon/cellPLATO/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/Michael-shannon/cellPLATO/releases/157201611",
        "value": "https://api.github.com/repos/Michael-shannon/cellPLATO/releases/157201611",
        "zipball_url": "https://api.github.com/repos/Michael-shannon/cellPLATO/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Michael-shannon",
          "type": "User"
        },
        "date_created": "2023-05-17T08:55:07Z",
        "date_published": "2023-06-29T15:34:33Z",
        "description": "This is the 2023 version of cellPLATO (cell Plasticity Analysis Tool) developed in collaboration with @tsloan1377 @Quorumetrix. CellPLATO is a semi-automated morpho-kinetic analysis tool for cell tracking data.\r\n\r\nIt takes cell tracking data as an input, makes motility, morphology and clustering measurements for each cell at each timepoint, then outputs statistical plots of difference and plots of difference over time in python (inspired by those developed in R by @JoachimGoedhart ).\r\n\r\nThen, dimensionality reduction and cluster analysis are used to separate cells into behavioural subsets based on combinations of these morpho-kinetic measurements, producing a fingerprint of behaviour types per biological condition: how many of the cells operate behaviour a versus behaviour b or behaviour c, and over what timescale? \r\n\r\nFinally, the disambiguation step automatically picks cells most representative of a given behaviour in dimensionally reduced space, extracts them along with the metrics that best define them, and displays them as figures in 'human space', enabling humans to understand the shape and motion characteristics defined by the software in each behaviour case.",
        "html_url": "https://github.com/Michael-shannon/cellPLATO/releases/tag/v1.0.0",
        "name": "cellPLATO",
        "release_id": 110380894,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Michael-shannon/cellPLATO/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Michael-shannon/cellPLATO/releases/110380894",
        "value": "https://api.github.com/repos/Michael-shannon/cellPLATO/releases/110380894",
        "zipball_url": "https://api.github.com/repos/Michael-shannon/cellPLATO/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:11:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to use cellPLATO:",
        "type": "Text_excerpt",
        "value": "cellPLATO is made to be used downstream of cell segmentation and tracking, and can currently be used with several tracking methodologies. The default is btrack.\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1:",
        "parent_header": [
          "How to use cellPLATO:"
        ],
        "type": "Text_excerpt",
        "value": "Organize your data into the following heirarchal format:\n\n- \ud83d\udcc1 **Master folder** `[Folder_path]`\n  - \ud83c\udf3f **Condition_1** `[Experimental condition 1]`\n    - \ud83d\udd04 **Rep_1** `[Experimental repeat 1]`\n      - \ud83d\udcc4 `Replicate_1.h5`\n    - \ud83d\udd04 **Rep_2**\n      - \ud83d\udcc4 `Replicate_2.h5`\n    - \ud83d\udd04 **Rep_n**\n      - \ud83d\udcc4 `Replicate_n.h5`\n  - \ud83c\udf3f **Condition_2**\n    - \ud83d\udd04 **Rep_1**\n    - \ud83d\udd04 **Rep_2**\n    - \ud83d\udd04 **Rep_n**\n  - \ud83c\udf3f **Condition_n**\n    - \ud83d\udd04 **Rep_n**\n\n\ud83d\udcc1 represents the main folder or directory.\n\ud83c\udf3f represents the condition folders.\n\ud83d\udd04 represents the replicate folders.\n\ud83d\udcc4 represents the individual H5 files containing the segmentations and tracks\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2:",
        "parent_header": [
          "How to use cellPLATO:"
        ],
        "type": "Text_excerpt",
        "value": "Open the config.py file, and edit as directed. \n\nAs a minimum fill in the master directory, experiments to include, pixel size and sampling interval.\n\nExperiments to include getsf filled with the folder names of the conditions you are measuring:\n\nEXPERIMENTS_TO_INCLUDE = ['Condition_1', 'Condition_2', 'Condition_n']\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3:",
        "parent_header": [
          "How to use cellPLATO:"
        ],
        "type": "Text_excerpt",
        "value": "Run cellPLATO through Jupyter Notebooks. Choose the master notebook to run all of the analysis step by step.\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Michael-shannon/cellPLATO/main/README.md",
      "technique": "header_analysis"
    }
  ]
}