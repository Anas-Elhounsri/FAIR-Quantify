{
  "application_domain": [
    {
      "confidence": 29.01,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "type": "Text_excerpt",
        "value": "If you use the pipeline or ViPhOG HMMs in your work, please cite accordingly:\n\n**ViPhOGs:**\n\n[Moreno-Gallego, Jaime Leonardo, and Alejandro Reyes. \"Informative regions in viral genomes.\" _Viruses_ 13.6 (2021): 1164.](https://www.mdpi.com/1999-4915/13/6/1164)\n\n**VIRify:** \n\n[Rangel-Pineros, Guillermo, et al. \"VIRify: an integrated detection, annotation and taxonomic classification pipeline using virus-specific protein profile hidden Markov models.\" _bioRxiv_ (2022)](https://doi.org/10.1101/2022.08.22.504484)\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EBI-Metagenomics/emg-viral-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-29T16:04:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T09:25:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VIRify: detection of phages and eukaryotic viruses from metagenomic and metatranscriptomic assemblies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9643390601500544,
      "result": {
        "original_header": "General",
        "type": "Text_excerpt",
        "value": "VIRify is a pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies. The pipeline is part of the repertoire of analysis services offered by [MGnify](https://www.ebi.ac.uk/metagenomics/). VIRify's taxonomic classification relies on the detection of taxon-specific profile hidden Markov models (HMMs), built upon a set of 22,013 orthologous protein domains and [referred to as ViPhOGs](https://doi.org/10.3390/v13061164).  \nThe pipeline is implemented in [Nextflow](#nf) and additionally only Docker or Singularity are needed to run VIRify. Details about installation and usage are given below. \n**Please note**, that until v1.0 the pipeline was also implemented in [CWL](#cwl) as an alternative to [Nextflow](#nf). However, later updates were only included in the [Nextflow](#nf) version of the pipeline.  \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8364153816765052,
      "result": {
        "original_header": "Nextflow",
        "type": "Text_excerpt",
        "value": "A [Nextflow](https://www.nextflow.io/) implementation of the VIRify pipeline. In the backend, the same scripts are used as in the [CWL](#cwl) implementation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9559902134508584,
      "result": {
        "original_header": "What do I need?",
        "type": "Text_excerpt",
        "value": "This implementation of the pipeline runs with the workflow manager [Nextflow](https://www.nextflow.io/) and needs as second dependency either [Docker](https://docs.docker.com/v17.09/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce) or [Singularity](https://sylabs.io/guides/3.0/user-guide/quick_start.html). Conda will be implemented soonish, hopefully (currently blocked bc/ we use [PPR-Meta](https://github.com/zhenchengfang/PPR-Meta/issues/8)). However, we highly recommend in any way the usage of the stable containers. All other programs and databases are automatically downloaded by Nextflow.  \n**Attention**, the workflow will download the containers and databases with a size of roughly 19 GB (49 GB with `--hmmextend` and `--blastextend`) the first time it is executed! \n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9011609247865338,
      "result": {
        "original_header": "Profiles",
        "type": "Text_excerpt",
        "value": "Nextflow uses a merged profile handling system so you have to define an executor (e.g., `local`, `lsf`, `slurm`) and an engine (`docker`, `singularity`) to run the pipeline according to your needs and infrastructure.  \nPer default, the workflow runs locally (e.g., on your laptop) with Docker. When you execute the workflow on a HPC you can for example switch to a specific job scheduler and Singularity instead of Docker: \nDon't forget, especially on an HPC, to define further important parameters such as `-w`, `--databases`, and `--singularity_cachedir` as mentioned above. \nThe engine `conda` is not working at the moment until there is a conda recipe for PPR-Meta or we switch the tool. Sorry. Use Docker. Or Singularity. Please. Or install PPR-Meta by yourself and then use the `conda` profile (not recommended).  \n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9103483449621694,
      "result": {
        "original_header": "Monitoring",
        "type": "Text_excerpt",
        "value": "To monitor your Nextflow computations, VIRify can be connected to [Nextflow Tower](https://tower.nf). You need a user access token to connect your Tower account with the pipeline. Simply [generate a login](https://tower.nf/login) using your email and then click the link sent to this address. \nOnce logged in, click on your avatar in the top right corner and select \"Your tokens.\" Generate a token or copy the default one and set the following environment variable:\n```bash\nexport TOWER_ACCESS_TOKEN=<YOUR_COPIED_TOKEN>\n```\n \nYou can save this variable in your `.bashrc` or `.profile` to not need to enter it again. Refresh your terminal. \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9220553968763354,
      "result": {
        "original_header": "GFF output files",
        "type": "Text_excerpt",
        "value": "The outputs generated from viral prediction tools, ViPhOG annotation, taxonomy assign, and CheckV quality are integrated and summarized in a validated gff file. You can find such output in the `08-final/gff/` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.902976473042723,
      "result": {
        "original_header": "Common Workflow Language (discontinued)",
        "type": "Text_excerpt",
        "value": "## What do I need?\nThe implementation until v1.0 of VIRify uses CWL version 1.2. It was tested using Toil version 5.3.0 as the workflow engine and conda to manage the software dependencies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8223249845142019,
      "result": {
        "original_header": "How?",
        "type": "Text_excerpt",
        "value": "For instructions go to the [CWL README](cwl/README.md). \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.841090619645199,
      "result": {
        "original_header": "Pipeline overview",
        "type": "Text_excerpt",
        "value": "![VIRify Overview](nextflow/figures/virify_fig1_workflow.png)\nFor further details please check: [doi.org/10.1101/2022.08.22.504484](https://doi.org/10.1101/2022.08.22.504484) \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9901909395554671,
      "result": {
        "original_header": "A note about metatranscriptomes",
        "type": "Text_excerpt",
        "value": "Although VIRify has been benchmarked and validated with metagenomic data in mind, it is also possible to use this tool to detect RNA viruses in metatranscriptome assemblies (e.g. SARS-CoV-2). However, some additional considerations for this purpose are outlined below: \n**1. Quality control:** As for metagenomic data, a thorough quality control of the FASTQ sequence reads to remove low-quality bases, adapters and host contamination (if appropriate) is required prior to assembly. This is especially important for metatranscriptomes as small errors can further decrease the quality and contiguity of the assembly obtained. We have used [TrimGalore](https://www.bioinformatics.babraham.ac.uk/projects/trim_galore/) for this purpose. \n**2. Assembly:** There are many assemblers available that are appropriate for either metagenomic or single-species transcriptomic data. However, to our knowledge, there is no assembler currently available specifically for metatranscriptomic data. From our preliminary investigations, we have found that transcriptome-specific assemblers (e.g. [rnaSPAdes](http://cab.spbu.ru/software/spades/)) generate more contiguous and complete metatranscriptome assemblies compared to metagenomic alternatives (e.g. [MEGAHIT](https://github.com/voutcn/megahit/releases) and [metaSPAdes](http://cab.spbu.ru/software/spades/)). \n**3. Post-processing:** Metatranscriptomes generate highly fragmented assemblies. Therefore, filtering contigs based on a set minimum length has a substantial impact in the number of contigs processed in VIRify. It has also been observed that the number of false-positive detections of [VirFinder](https://github.com/jessieren/VirFinder/releases) (one of the tools included in VIRify) is lower among larger contigs. The choice of a length threshold will depend on the complexity of the sample and the sequencing technology used, but in our experience any contigs <2 kb should be analysed with caution. \n**4. Classification:** The classification module of VIRify depends on the presence of a minimum number and proportion of phylogenetically-informative genes within each contig in order to confidently assign a taxonomic lineage. Therefore, short contigs typically obtained from metatranscriptome assemblies remain generally unclassified. For targeted classification of RNA viruses (for instance, to search for Coronavirus-related sequences), alternative DNA- or protein-based classification methods can be used. Two of the possible options are: (i) using [MashMap](https://github.com/marbl/MashMap/releases) to screen the VIRify contigs against a database of RNA viruses (e.g. Coronaviridae) or (ii) using [hmmsearch](http://hmmer.org/download.html) to screen the proteins obtained in the VIRify contigs against marker genes of the taxon of interest. \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9241181096794968,
      "result": {
        "original_header": "Resources",
        "type": "Text_excerpt",
        "value": "Additional material (assemblies used for benchmarking in the paper, ...) as well as the ViPhOG HMMs with model-specific bit score thresholds used in VIRify are available at [osf.io/fbrxy](https://osf.io/fbrxy/). \nHere, we also list databases used and automatically downloaded by the pipeline **(in v2.0.0)** when it is first run. We deposited database files on a separate FTP to ensure their accessibility. The files can be also downloaded manually and then used as an input for the pipeline to prevent the auto-download (see `--help` in the Nextflow pipeline).\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8876218912480695,
      "result": {
        "original_header": "Initial virus prediction on contig level",
        "type": "Text_excerpt",
        "value": "* **VirSorter** HMMs\n    * `wget ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/virsorter-data-v2.tar.gz`\n    * [Publication](https://peerj.com/articles/985/)\n* **Virfinder** model\n    * `wget ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/virfinder/VF.modEPV_k8.rda`\n    * [Publication](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-017-0283-5)\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/wiki"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EBI-Metagenomics/emg-viral-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "VIRify"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/hmmer/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/hmmer/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/bioruby/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/bioruby/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/virsorter/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/virsorter/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/mashmap/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/mashmap/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/pprmeta/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/pprmeta/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/python3/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/python3/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/sankey_plot/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/sankey_plot/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/krona/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/krona/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/virfinder/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/virfinder/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/checkv/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/checkv/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/r_chromomap/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/r_chromomap/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/plot_contig_map/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/plot_contig_map/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/basics/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/basics/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/blast/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/blast/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/virify.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/download-databases.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/local-virify.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/ebi/codon-virify-env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/ebi/embassy-wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/ebi/bsub-virify.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/helpers/pull_singularity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/helpers/docker_build_locally.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/helpers/singularity_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/helpers/docker_push.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/hmmer/hmmscan_wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/containers/pprmeta/pprmeta.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/bin/imgvr_blast.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/bin/hmmscan_wrapper.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/bin/hmmscan_postprocessing.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/bin/prodigal_wrapper.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/nextflow/figures/2023-sankey-neto.png"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/figures/tower.png"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/nextflow/figures/virify_fig1_workflow.png"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Nextflow",
        "parent_header": [
          "Nextflow",
          "What do I need?"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ncurl -s https://get.nextflow.io | bash\n```\n* for troubleshooting, see [more instructions about Nextflow](https://www.nextflow.io/). \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Docker",
        "parent_header": [
          "Nextflow",
          "What do I need?"
        ],
        "type": "Text_excerpt",
        "value": "If you dont have experience with bioinformatic tools and their installation just copy the commands into your terminal to set everything up (local machine with full permissions!):\n```bash\nsudo apt-get install -y docker-ce docker-ce-cli containerd.io\nsudo usermod -a -G docker $USER\n```\n* restart your computer\n* for troubleshooting, see [more instructions about Docker](https://docs.docker.com/v17.09/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce)\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Singularity",
        "parent_header": [
          "Nextflow",
          "What do I need?"
        ],
        "type": "Text_excerpt",
        "value": "While singularity can be installed via Conda, we recommend setting up a _true_ Singularity installation. For HPCs, ask the system administrator you trust. [Here](https://github.com/hpcng/singularity/blob/master/INSTALL.md) is also a good manual to get you started. _Please note_: you only need Docker or Singularity. However, due to security concerns it might not be possible to use Docker on your shared machine or HPC.\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Nextflow",
          "Basic Nextflow execution"
        ],
        "type": "Text_excerpt",
        "value": "While it is possible to clone this repository and directly execute the `virify.nf`, we _recommend_ to let Nextflow handle the installation. Get the pipeline code via:\n```bash\nnextflow pull EBI-Metagenomics/emg-viral-pipeline\n```\n\nTest installation and get help:\n```bash\nnextflow run EBI-Metagenomics/emg-viral-pipeline --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9729457295272544,
      "result": {
        "original_header": "What do I need?",
        "type": "Text_excerpt",
        "value": "This implementation of the pipeline runs with the workflow manager [Nextflow](https://www.nextflow.io/) and needs as second dependency either [Docker](https://docs.docker.com/v17.09/engine/installation/linux/docker-ce/ubuntu/#install-docker-ce) or [Singularity](https://sylabs.io/guides/3.0/user-guide/quick_start.html). Conda will be implemented soonish, hopefully (currently blocked bc/ we use [PPR-Meta](https://github.com/zhenchengfang/PPR-Meta/issues/8)). However, we highly recommend in any way the usage of the stable containers. All other programs and databases are automatically downloaded by Nextflow.  \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999723140201098,
      "result": {
        "original_header": "Profiles",
        "type": "Text_excerpt",
        "value": "The engine `conda` is not working at the moment until there is a conda recipe for PPR-Meta or we switch the tool. Sorry. Use Docker. Or Singularity. Please. Or install PPR-Meta by yourself and then use the `conda` profile (not recommended).  \n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9965781901881401,
      "result": {
        "original_header": "Monitoring",
        "type": "Text_excerpt",
        "value": "To monitor your Nextflow computations, VIRify can be connected to [Nextflow Tower](https://tower.nf). You need a user access token to connect your Tower account with the pipeline. Simply [generate a login](https://tower.nf/login) using your email and then click the link sent to this address. \nOnce logged in, click on your avatar in the top right corner and select \"Your tokens.\" Generate a token or copy the default one and set the following environment variable:\n```bash\nexport TOWER_ACCESS_TOKEN=<YOUR_COPIED_TOKEN>\n```\n \nYou can save this variable in your `.bashrc` or `.profile` to not need to enter it again. Refresh your terminal. \nNow run:\n```bash\nnextflow run EBI-Metagenomics/emg-viral-pipeline -r v0.4.0 --fasta \"$HOME/.nextflow/assets/EBI-Metagenomics/emg-viral-pipeline/nextflow/test/assembly.fasta\" --cores 4 -profile local,docker -with-tower\n```\nAlternatively, you can also pull the code from this repository and activate the Tower connection within the `nextflow.config` file located in the root GitHub directory:\n```java\ntower {\n    accessToken = ''\n    enabled = true\n} \n```\n \nYou can also directly enter your access token here instead of generating the above-mentioned environment variable. \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8889753599216149,
      "result": {
        "original_header": "GFF output files",
        "type": "Text_excerpt",
        "value": "Note that CDS are reported only when a ViPhOG match has been found.  \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9679787750261067,
      "result": {
        "original_header": "Common Workflow Language (discontinued)",
        "type": "Text_excerpt",
        "value": "## What do I need?\nThe implementation until v1.0 of VIRify uses CWL version 1.2. It was tested using Toil version 5.3.0 as the workflow engine and conda to manage the software dependencies.\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9170217569434261,
      "result": {
        "original_header": "How?",
        "type": "Text_excerpt",
        "value": "For instructions go to the [CWL README](cwl/README.md). \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Virus-specific protein profile HMMs",
        "type": "Text_excerpt",
        "value": "* **ViPhOGs** (mandatory, used for taxonomy assignment)\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/hmmer_databases/vpHMM_database_v3.tar.gz`\n    * Additional metadata file for filtering the ViPhOGs (according to taxonomy updates by the [ICTV](https://ictv.global/taxonomy))\n        * `wget ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/additional_data_vpHMMs_v4.tsv`\n    * [Publication](https://www.mdpi.com/1999-4915/13/6/1164)\n* **pVOGs** (optional)\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/hmmer_databases/pvogs.tar.gz`\n    * [Publication](https://doi.org/10.1093/nar/gkw975)\n* **RVDB** (optional)\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/hmmer_databases/rvdb.tar.gz`\n    * [Publication](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7492780/)\n* **VOGDB** (optional)\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/hmmer_databases/vogdb.tar.gz`\n    * [Publication](https://vogdb.org/)\n* **VPF** (optional)\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/hmmer_databases/vpf.tar.gz`\n    * [Publication](https://doi.org/10.1093/nar/gky1127)\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9904198981581023,
      "result": {
        "original_header": "Initial virus prediction on contig level",
        "type": "Text_excerpt",
        "value": "* **VirSorter** HMMs\n    * `wget ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/virsorter-data-v2.tar.gz`\n    * [Publication](https://peerj.com/articles/985/)\n* **Virfinder** model\n    * `wget ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/virfinder/VF.modEPV_k8.rda`\n    * [Publication](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-017-0283-5)\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999372957697747,
      "result": {
        "original_header": "Virus prediction QC",
        "type": "Text_excerpt",
        "value": "* **CheckV**\n    * `wget https://portal.nersc.gov/CheckV/checkv-db-v1.0.tar.gz`\n    * [Publication](https://www.nature.com/articles/s41587-020-00774-7)\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9772540835450491,
      "result": {
        "original_header": "Taxonomy annotation",
        "type": "Text_excerpt",
        "value": "* **NCBI taxonomy**\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/2022-11-01_ete3_ncbi_tax.sqlite.gz`\n \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9969990410718351,
      "result": {
        "original_header": "Additional blast-based assignment (optional, super slow)",
        "type": "Text_excerpt",
        "value": "* **IMG/VR**\n    * `wget -nH ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/viral-pipeline/IMG_VR_2018-07-01_4.tar.gz`\n    * [Publication](https://doi.org/10.1093/nar/gkw1030) \n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cwl, nextflow, pipeline, viruses, workflow"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/figures/virify_logo.png"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "emg-viral-pipeline"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "EBI-Metagenomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 106383,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 75319,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 70007,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 25425,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 13555,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 7973,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 6366,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2024-05-08T20:09:15Z",
        "date_published": "2024-05-08T20:10:03Z",
        "description": "## What's Changed\r\n* Fix the Chromomap container. by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/112\r\n* Fix Chromomap container by @hoelzer in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/114\r\n* remove lsf requirement for ebi profile by @Vkale1 in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/122\r\n* Prase.nf results are optional. by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/123\r\n* Merge small set of fixes for new release #123 by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/124\r\n\r\n## New Contributors\r\n* @Vkale1 made their first contribution in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/122\r\n\r\n**Full Changelog**: https://github.com/EBI-Metagenomics/emg-viral-pipeline/compare/v2.0.0...v2.0.1",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v2.0.1",
        "name": "Small bug fixes release",
        "release_id": 154840781,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/154840781",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/154840781",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2023-07-17T11:29:36Z",
        "date_published": "2023-07-24T13:44:37Z",
        "description": "## What's Changed\r\n* Adjustment of the voting scheme (see **Figure 1**) and updated viral taxonomy by @hoelzer and @guille0387  in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/99\r\n* Metadata file v4, also included a warning about the deleted taxa. by @mberacochea  in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/106\r\n* Adjustment of the voting scheme and updated viral taxonomy and bugfixes for new release by @hoelzer , @guille0387 and @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/103\r\n* Dropped support for CWL.\r\n* Updates to the README.\r\n\r\n**Full Changelog**: https://github.com/EBI-Metagenomics/emg-viral-pipeline/compare/v1.1...v2.0.0\r\n\r\n![New Workflow Overview](https://github.com/EBI-Metagenomics/emg-viral-pipeline/blob/1207242a17865dc8991dbb9520b32514398d51df/nextflow/figures/virify_fig1_workflow.png)\r\n**Fig 1** Updated voting scheme. ",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v2.0.0",
        "name": "v2.0.0",
        "release_id": 112670753,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/112670753",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/112670753",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2023-04-28T09:43:41Z",
        "date_published": "2023-04-28T09:45:07Z",
        "description": "## What's Changed\r\n* Re-build the virsorter container, using one hosted in quay by our team. by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/94\r\n* Bugfix/issue 92 prophages and gff generation by @Ales-ibt in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/95\r\n* Fasta IDs renaming fixed by @Ales-ibt in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/98\r\n* Bugfix release - PR #94  by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/97\r\n\r\n## New Contributors\r\n* @Ales-ibt made their first contribution in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/95\r\n\r\n**Full Changelog**: https://github.com/EBI-Metagenomics/emg-viral-pipeline/compare/v1.0...v1.1",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v1.1",
        "name": "Minor bugfix release [Nextflow ONLY]",
        "release_id": 101246108,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/101246108",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/101246108",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2023-01-05T17:16:54Z",
        "date_published": "2023-01-05T17:24:14Z",
        "description": "## What's Changed\r\n\r\nFirst stable release of the pipeline.\r\n\r\nMerged PRs:\r\n* Pprmeta repo fix by @hoelzer in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/75\r\n* Merge DEV by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/76\r\n* Clean up by @hoelzer in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/78\r\n* Update containers, nf trace compatible now. Some to biocontainers. by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/81\r\n* CheckV - prophages fixes and post processing gff creation step by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/80\r\n* Add one simple pytest-workflow test by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/89\r\n* 1.0 release PR :) by @mberacochea in https://github.com/EBI-Metagenomics/emg-viral-pipeline/pull/88\r\n\r\n**Full Changelog**: https://github.com/EBI-Metagenomics/emg-viral-pipeline/compare/v0.4.0...v1.0",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v1.0",
        "name": "v1.0",
        "release_id": 88034021,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/88034021",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/88034021",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hoelzer",
          "type": "User"
        },
        "date_created": "2021-10-20T11:46:04Z",
        "date_published": "2021-11-16T09:03:51Z",
        "description": "* deactivate the nf tower plugin\r\n    * can cause problems on systems that have restricted internet access\r\n    * can still be activated by experienced users\r\n* simplify nf version check via `nextflow.config`\r\n* add `CheckV` to the pipeline to get information on quality and completness of contigs that were detected as \"viral\"\r\n",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v0.4.0",
        "name": "v0.4.0",
        "release_id": 53451299,
        "tag": "v0.4.0",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/53451299",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/53451299",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2021-06-21T15:36:44Z",
        "date_published": "2021-06-21T19:34:19Z",
        "description": "This is a third release candidate of the EBI metagenomics virus detection and classification pipeline.\r\n\r\nThis RC contains updates to the software required to run the pipeline, nextflow version upgrade and cwl-toil version upgrade",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v0.3.0",
        "name": "Third RC",
        "release_id": 44972209,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/44972209",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/44972209",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hoelzer",
          "type": "User"
        },
        "date_created": "2020-10-12T08:37:16Z",
        "date_published": "2020-10-12T08:46:09Z",
        "description": "Older versions of the pipeline were run without PPR-Meta as a third tool for virus prediction. \r\n\r\nTo increase reproducibility for such older analyses, this release deactivates virus prediction via PPR-Meta to represent a reproducible code version based only on the initial viral contig predictions with VirSorter and VirFinder. ",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v0.2.0-no-pprmeta",
        "name": "Reproducible release: no PPR-Meta ",
        "release_id": 32441451,
        "tag": "v0.2.0-no-pprmeta",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v0.2.0-no-pprmeta",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/32441451",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/32441451",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v0.2.0-no-pprmeta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mberacochea",
          "type": "User"
        },
        "date_created": "2020-07-23T07:36:04Z",
        "date_published": "2020-07-23T08:52:12Z",
        "description": "This is a second release candidate of the EBI metagenomics virus detection and classification pipeline.",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v0.2.0",
        "name": "Second RC",
        "release_id": 28861358,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/28861358",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/28861358",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hoelzer",
          "type": "User"
        },
        "date_created": "2020-06-05T10:30:02Z",
        "date_published": "2020-06-05T11:16:01Z",
        "description": "This is a first release candidate of the EBI metagenomics virus detection and classification pipeline. \r\n\r\nThe pipeline is implemented in Nextflow and CWL based on the same core Python and Shell scripts and Docker containers.\r\n\r\nThe pipeline features \r\n\r\n* length filtering of the input assembly\r\n* detection of potential viral sequences with VirSorter, VirFinder, and PPR-Meta\r\n* classification of potential viruses into high and low confidence sets as well as prophages\r\n* ORF prediction\r\n* protein detection w/ hmmscan using a customized database of virus-specific profile HMMs (so-called ViPhOGs)\r\n* filtering of the hits and taxonomic assignment based on a voting system\r\n* visualization of the results with Krona, Sankey (currently only in the Nextflow pipeline), and ChromoMap (Nextflow)\r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases/tag/v0.1",
        "name": "Initial release ",
        "release_id": 27259210,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/27259210",
        "value": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/releases/27259210",
        "zipball_url": "https://api.github.com/repos/EBI-Metagenomics/emg-viral-pipeline/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run specific pipeline version",
        "parent_header": [
          "Nextflow",
          "Basic Nextflow execution"
        ],
        "type": "Text_excerpt",
        "value": "We __highly recommend__ to always run stable [releases](https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases), also for reproducibility:\n```bash\nnextflow run EBI-Metagenomics/emg-viral-pipeline -r v0.4.0 --help\n```\n\nCheck the [release page](https://github.com/EBI-Metagenomics/emg-viral-pipeline/releases) to figure out the newest version of the pipelne. Or run:\n\n```bash\nnextflow info EBI-Metagenomics/emg-viral-pipeline\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:15:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 123
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example execution",
        "parent_header": [
          "Nextflow",
          "Basic Nextflow execution"
        ],
        "type": "Text_excerpt",
        "value": "Run annotation for a small assembly file (10 contigs, 0.78 Mbp) on your local Linux machine using Docker containers (per default `--cores 4`; takes approximately 10 min on a 8 core i7 laptop + time for database download; ~19 GB):\n```bash\nnextflow run EBI-Metagenomics/emg-viral-pipeline -r v0.4.0 --fasta \"$HOME/.nextflow/assets/EBI-Metagenomics/emg-viral-pipeline/nextflow/test/assembly.fasta\" --cores 4 -profile local,docker\n```\n\n__Please note__ that in particular the following parameters are important to handle where Nextflow writes files. \n\n* `--workdir` or `-w` (here your work directories with intermediate data will be saved)\n* `--databases` (here your databases will be saved and the workflow checks if they are already available under this path)\n* `--singularity_cachedir` (here Singularity containers will be cached, not needed for Docker, default path: `./singularity`)\n\n**Please clean up your work directory from time to time to save disk space!**\n"
      },
      "source": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/virify.nf"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/pipeline.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/Assign/assign_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/FastaRename/fasta_restore_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/checkv/checkv_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/Krona/krona_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/Prodigal/prodigal_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/IMGvrBlast/imgvr_blast_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/RestoreOutputNames/restore_tools_outputs_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/Annotation/viral_annotation_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/HMMScan/hmmscan_swf.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EBI-Metagenomics/emg-viral-pipeline/master/cwl/src/Tools/MashMap/mashmap_swf.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}