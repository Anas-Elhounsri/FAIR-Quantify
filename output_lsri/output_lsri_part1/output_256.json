{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation:",
        "parent_header": [
          "KAS-Analyzer"
        ],
        "type": "Text_excerpt",
        "value": "1. Tong, Wu, Ruitu Lyu, Qiancheng You, and Chuan He. [Kethoxal-assisted single-stranded DNA sequencing captures global transcription dynamics and enhancer activity in situ.](https://www.nature.com/articles/s41592-020-0797-9) Nature methods 17, no. 5 (2020): 515-523.\n\n2. Ruitu, Lyu, Tong Wu, Allen C. Zhu, Diana C. West-Szymanski, Xiaocheng Weng, Mengjie Chen, and Chuan He. [KAS-seq: genome-wide sequencing of single-stranded DNA by N3-kethoxal\u2013assisted labeling.](https://www.nature.com/articles/s41596-021-00647-6) Nature protocols (2022): 1-19.\n\n3. Wu, Tong, Ruitu Lyu, and Chuan He. [spKAS-seq reveals R-loop dynamics using low-input materials by detecting single-stranded DNA with strand specificity.](https://www.science.org/doi/full/10.1126/sciadv.abq2166) Science Advances 8.48 (2022): eabq2166.\n\n4. Lyu, Ruitu, Tong Wu, Gayoung Park, Yu-Ying He, Mengjie Chen, and Chuan He. [KAS-Analyzer: a novel computational framework for exploring KAS-seq data.](https://academic.oup.com/bioinformaticsadvances/article/3/1/vbad121/7264217) Bioinformatics Advances 3, no. 1 (2023): vbad121.\n\n----------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Ruitulyu/KAS-Analyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-15T08:05:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-29T09:25:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "New computational framework to process and analyze KAS-seq and spKAS-seq data. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9992073271265682,
      "result": {
        "original_header": "A new computational framework for exploring KAS-seq data",
        "type": "Text_excerpt",
        "value": "----------------------------------------\nHere we introduce KAS-Analyzer, a newly designed, comprehensive methodological framework aimed at simplifying the analysis and interpretation of KAS-seq data. In addition to standard analyses, KAS-Analyzer offers many novel features specifically tailored for KAS-seq data, including, but not limited to: calculation of termination length and index, identification of single-stranded transcribing (SST) enhancers, high-resolution mapping of R-loops, and time-course differential RNA polymerase activity analysis. \nKAS-seq is a kethoxal-assisted single-stranded DNA sequencing (KAS-seq) approach, based on the fast and specific reaction between N3-kethoxal and guanines in ssDNA. KAS-seq allows rapid (within 5 min), sensitive and genome-wide capture and mapping of ssDNA produced by transcriptionally active RNA polymerases or other processes in situ using as few as 1,000 cells. KAS-seq can also enable definition of a group of enhancers that are single-stranded. Overall, KAS-seq facilitates fast and accurate analysis of transcription dynamics and enhancer activities in both low-input and high-throughput manner. Strand-specific KAS-seq (spKAS-seq) was further developped to identify in vivo genome-wide R-loops with strand specificity using as few as 50,000 cells by mapping the exposed single-stranded DNA (ssDNA) caused by RNA-DNA duplex R-loop formation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9563924280995827,
      "result": {
        "original_header": "**For more details on the above tools, and other features implemented in KAS-Analyzer, such as \"identification of genome-wide R-loops\" (only for spKAS-seq) and \"differential RNA Pols activity analysis\" (two-conditions or time-course KAS-seq data), please check the <a href=\"https://ruitulyu.github.io/KAS-Analyzer/\">tutorial</a>.**",
        "type": "Text_excerpt",
        "value": "This tool suite is developed by the [Dr. Ruitu Lyu](https://scholar.google.com/citations?user=7nt2ezgAAAAJ&hl=en) at [Prof. Chuan He's lab](https://he-group.uchicago.edu/) of [the University of Chicago](https://www.uchicago.edu/). \n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation:",
        "parent_header": [
          "KAS-Analyzer",
          "Citation:"
        ],
        "type": "Text_excerpt",
        "value": "Our [documentation](https://ruitulyu.github.io/KAS-Analyzer/) contains more details on the [individual command line tool and usages](https://ruitulyu.github.io/KAS-Analyzer/)\n\n>Please see also the [FAQ](https://github.com/Ruitulyu/KAS-Analyzer/wiki), which we update regularly. \n\n>If you have any questions about the KAS-Analyzer, please post your questions to [github discussions](https://github.com/Ruitulyu/KAS-Analyzer/discussions).\n\n>For more specific **troubleshooting, feedback, and suggestions**, please post to [github issue](https://github.com/Ruitulyu/KAS-Analyzer/issues) or send emails to the authors: lvruitu@gmail.com.\n\n-----------------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/Ruitulyu/KAS-Analyzer/wiki"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Ruitulyu/KAS-Analyzer/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Ruitulyu/KAS-Analyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KAS-Analyzer"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/setup.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/define_R-loops_sensitive_to_RNaseH.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_spKAS-seq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/diff_regions_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_saturation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_fastqc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/plot_PCA.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/define_SST_enhancers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_build.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_activate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_correlation_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_statistics.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/plot_profile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_KAS_index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_fragmentsize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_KAS_index_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_bedGraphToBigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/diff_regions.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_normalize.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_KAS-seq.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_complexity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/plot_heatmap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/motifs_on_enhancers.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/define_target_genes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_idr.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_rawreads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_deactivate.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_genomicdist.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_fingerprint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_peakscalling.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_termination_length.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_uninstall.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_trim.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/define_R-loops.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/calculate_index_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/KAS-seq_timecourse.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_FRiP.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/plot_PCA_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/fastqc_correlation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/configure_download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/define_SST_enhancers_bigWig.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/scripts/map_UCSC.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/regular_KAS-seq_procedure.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/spKAS-seq_procedure.jpg"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_fingerprint_plot.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_FRiP.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_pearson_scatterplot.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_snapshot.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_metagene_heatmap.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-seq_metagene_profile.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "KAS-Analyzer",
          "Citation:"
        ],
        "type": "Text_excerpt",
        "value": "**Install by cloning KAS-Analyzer git repository on github:**\n\nYou can install KAS-Analyzer using command line (linux) by cloning git repository on github:\n```\ngit clone https://github.com/Ruitulyu/KAS-Analyzer.git\ncd KAS-Analyzer\nbash ./setup.sh\nsource ~/.bashrc\n\t\n# If anaconda or miniconda was not installed on your system. #OPTIONAL.\nKAS-Analyzer install -conda\n\n# Make sure you have Mamba installed. If not, you can install it in your base Conda environment with the following command:\nconda install mamba -c conda-forge\n\n# Install 'KAS-Analyzer' environment using mamba. \nmamba env create -f ./environment.yml\n\n# Decompress the genomic annotation files.\nfind ./ -type f -name '*.xz' -exec xz -d {} +\n\n# or\nKAS-Analyzer install -KAS-Analyzer\n\n# Activate conda 'KAS-Analyzer' environment.\nconda activate KAS-Analyzer\n\n# Deactivate conda 'KAS-Analyzer' environment.\nconda deactivate\n\n```\t\n\n------------------------------------\t"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.942406514981698,
      "result": {
        "original_header": "A new computational framework for exploring KAS-seq data",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-Analyzer.png\"  height=\"180\" align=\"right\" /> \n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9896672127663578,
      "result": {
        "original_header": "KAS-seq:",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/regular_KAS-seq_procedure.png\"> \n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9913451029845922,
      "result": {
        "original_header": "Strand-specific KAS-seq (spKAS-seq):",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/spKAS-seq_procedure.jpg\" width=\"470\" height=\"320\"> \n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics-pipeline, chip-seq, genomics, kas-seq, ngs, ssdna"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Ruitu Lyu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/image/KAS-Analyzer.png"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KAS-Analyzer"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Ruitulyu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 570714,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41221,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 12143,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Ruitulyu",
          "type": "User"
        },
        "date_created": "2022-04-30T21:56:11Z",
        "date_published": "2022-05-04T22:17:12Z",
        "description": "This is the first release of KAS-Analyzer.",
        "html_url": "https://github.com/Ruitulyu/KAS-Analyzer/releases/tag/v2.0.0",
        "name": "First release of KAS-Analyzer for processing and analyzing KAS-seq data.",
        "release_id": 66066593,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/releases/66066593",
        "value": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/releases/66066593",
        "zipball_url": "https://api.github.com/repos/Ruitulyu/KAS-Analyzer/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:02:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "KAS-Analyzer",
          "Citation:"
        ],
        "type": "Text_excerpt",
        "value": "**Download test data**\n\nUsers can download example KAS-seq data in HEK293T cells from Gene Expression Omnibus (GEO):\n\n```\nNote: install sra-tools using \"conda install -c bioconda sra-tools\" if fastq-dump is not available in your system.\n\nwget https://sra-pub-run-odp.s3.amazonaws.com/sra/SRR10349532/SRR10349532 ./ &\nwget https://sra-pub-run-odp.s3.amazonaws.com/sra/SRR10349533/SRR10349533 ./ &\nwget https://sra-pub-run-odp.s3.amazonaws.com/sra/SRR10349534/SRR10349534 ./ &\nwget https://sra-pub-run-odp.s3.amazonaws.com/sra/SRR10349535/SRR10349535 ./ &\n\nmv SRR10349532 HEK293T_KAS-Input.rep1.sra\nmv SRR10349533 HEK293T_KAS-Input.rep2.sra\nmv SRR10349534 HEK293T_KAS-seq.rep1.sra\nmv SRR10349535 HEK293T_KAS-seq.rep2.sra\n        \nfastq-dump HEK293T_KAS-Input.rep1.sra & \nfastq-dump HEK293T_KAS-Input.rep2.sra &\nfastq-dump HEK293T_KAS-seq.rep1.sra &\nfastq-dump HEK293T_KAS-seq.rep2.sra &\t\n```\t\n\n**Trimming of adapter and poor quality sequence**\n\n```\nNote: the \"nohup\" command is optional, which means \"no hang up\" and writes the screen output to \"nohup.out\" file.\nnohup KAS-Analyzer trim -a illumina -t 10 -1 HEK293T_KAS-Input.rep1.fastq.gz &\nnohup KAS-Analyzer trim -a illumina -t 10 -1 HEK293T_KAS-Input.rep2.fastq.gz &\nnohup KAS-Analyzer trim -a illumina -t 10 -1 HEK293T_KAS-seq.rep1.fastq.gz &\nnohup KAS-Analyzer trim -a illumina -t 10 -1 HEK293T_KAS-seq.rep2.fastq.gz &\n```\n\t\n**Read alignment of KAS-seq and Input control data**\n\n```        \nnohup KAS-Analyzer KAS-seq -t 10 -i /absolute path/hg19_Bowtie2Index/hg19 -o HEK293T_KAS-Input.rep1 -s hg19 -1 HEK293T_KAS-Input.rep1_trimmed.fq.gz &\nnohup KAS-Analyzer KAS-seq -t 10 -i /absolute path/hg19_Bowtie2Index/hg19 -o HEK293T_KAS-Input.rep2 -s hg19 -1 HEK293T_KAS-Input.rep2_trimmed.fq.gz &\nnohup KAS-Analyzer KAS-seq -t 10 -i /absolute path/hg19_Bowtie2Index/hg19 -o HEK293T_KAS-seq.rep1 -s hg19 -1 HEK293T_KAS-seq.rep1_trimmed.fq.gz &\nnohup KAS-Analyzer KAS-seq -t 10 -i /absolute path/hg19_Bowtie2Index/hg19 -o HEK293T_KAS-seq.rep2 -s hg19 -1 HEK293T_KAS-seq.rep2_trimmed.fq.gz &\n```\n\t\nHere, the user can generate a read alignment summary report: \n\n```\n# Run from \"Summary\" directory.\nKAS-Analyzer statistics -o HEK293T_KAS-seq_statistics -s /absolute path/Summary/ &\n```\n \nExample summary report: \n\n|Samples         | Raw reads      | Clean reads   | Mapped reads | Deduplicated reads | Mapping ratios | Duplication ratios |\n|     :---:      |     :---:      |     :---:     |    :---:     |        :---:       |      :---:     |        :---:       |\n|  KAS-seq.rep1  | 39,249,037     | 39,194,455    | 38,608,066   | 31,874,927         | 98.50%         |  17.44%            |\n|  KAS-seq.rep2  | 37,235,447     | 37,195,072    | 36,623,472   | 30,659,014         | 98.46%         |  16.29%            |\n|   Input.rep1   | 45,182,939     | 45,162,826    | 44,306,192   | 41,261,883         | 98.10%         |  6.87%             |\n|   Input.rep2   | 39,911,067     | 39,886,186    | 39,065,103   | 36,158,950         | 97.94%         |  7.44%             |\n\n\n**KAS-seq peaks calling**\t\n         \nCall merged KAS-seq peaks with two KAS-seq replicates:\t \n\n```\n# Run from \"Bed_files\" directory.\t \nnohup KAS-Analyzer peakscalling -t HEK293T_KAS-seq.rep1.ext150.bed,HEK293T_KAS-seq.rep2.ext150.bed -c HEK293T_KAS-Input.rep1.ext150.bed,HEK293T_KAS-Input.rep2.ext150.bed -o HEK293T_KAS-seq -g hg19 &\n```\n\t\nCall KAS-seq peaks with KAS-seq data individually:\n\n```\n# Run from \"Bed_files\" directory. \nnohup KAS-Analyzer peakscalling -t HEK293T_KAS-seq.rep1.ext150.bed -c HEK293T_KAS-Input.rep1.ext150.bed -o HEK293T_KAS-seq.rep1 -g hg19 &\nnohup KAS-Analyzer peakscalling -t HEK293T_KAS-seq.rep2.ext150.bed -c HEK293T_KAS-Input.rep2.ext150.bed -o HEK293T_KAS-seq.rep2 -g hg19 &\n```\n\t\n**Quality control**\n\nFingerprint plot of KAS-seq data:\n\n```\n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer fingerprint -t 10 -s hg19 -o HEK293T_KAS-seq_fingerprint -l labels.txt -k KAS-seq_data.txt &\n\nExample \"labels.txt\" and \"KAS-seq_data.txt\" :\n\nKAS-seq.rep1                            HEK293T_KAS-seq.rep1_rmdup.bam             \nKAS-seq.rep2                            HEK293T_KAS-seq.rep2_rmdup.bam\nInput.rep1                              HEK293T_Input.rep1_rmdup.bam\nInput.rep2       ---labels.txt          HEK293T_Input.rep2_rmdup.bam        ---KAS-seq_data.txt\n```\n\nExample fingerprint plot:\n\n<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_fingerprint_plot.png\"  height=\"240\" align=\"middle\" > \n\n\nFraction of reads in peaks (FRiP) scores:\n\n```\nnohup KAS-Analyzer FRiP -o HEK293T_KAS-seq_FRiP -p peaks_files.txt -l labels.txt -k KAS-seq.txt &\n\nExample \"peaks_files.txt\", \"labels.txt\", and \"KAS-seq.txt\" :\n\nHEK293T_KAS-seq.rep1_peaks.broadPeak                                 KAS-seq.rep1                            HEK293T_KAS-seq.rep1.ext150.bed\nHEK293T_KAS-seq.rep2_peaks.broadPeak     ---peaks_files.txt          KAS-seq.rep2     ---labels.txt          HEK293T_KAS-seq.rep2.ext150.bed     ---KAS-seq.txt\n```\n\t\nExample fraction of reads in peaks (FRiP) scores:\n\n<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_FRiP.png\"  height=\"240\" align=\"middle\" > \n\n\nCalculate library complexity metrics for KAS-seq data, including PCR Bottlenecking Coefficient and Non-Redundant Fraction (NRF):\n\n```\n# Run from \"Bam_files\" directory.        \nnohup KAS-Analyzer complexity -o HEK293T_KAS-seq_complexity -l labels.txt -k KAS-seq.txt &\n\nExample \"labels.txt\" and \"KAS-seq.txt\" :\n\nKAS-seq.rep1                              HEK293T_KAS-seq.rep1_sorted.bam\nKAS-seq.rep2      ---labels.txt           HEK293T_KAS-seq.rep2_sorted.bam      ---KAS-seq.txt\n```\nExample library complexity metrics of KAS-seq data in HEK293T cells:\n|Samples         | PBC     | Bottlenecking level | NRF     | Complexity |\n|     :---:      | :---:   |     :---:           | :---:   | :---:      |\n|  KAS-seq.rep1  | 0.88    | None                | 0.84    | Ideal      |\n|  KAS-seq.rep2  | 0.89    | None                | 0.85    | Ideal      |\n|   Input.rep1   | 0.96    | None                | 0.95    | Ideal      |\n|   Input.rep2   | 0.95    | None                | 0.95    | Ideal      |\n\nCalculate the correlation coefficient and pvalue, generate scatterplot for replicates of KAS-seq data:\n\n``` \n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer correlation -m pearson -t 10 -s hg19 -r bin -p heatmap -o KAS-seq -l labels.txt -k KAS-seq.txt &\n\nExample \"labels.txt\" and \"KAS-seq.txt\" :\n\nKAS-seq.rep1                             HEK293T_KAS-seq.rep1.bam\nKAS-seq.rep2     ---labels.txt           HEK293T_KAS-seq.rep2.bam     ---KAS-seq.txt\n```\n\nExample scatterplot between two replicates of KAS-seq data:\n\n<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_pearson_scatterplot.png\"  height=\"260\" align=\"middle\" > \n\n\nGenerate KAS-seq read density files that can be viewed in the UCSC genome browser:\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer UCSC -k KAS-seq.txt -n UCSC_track_names.txt &\n\nExample \"KAS-seq.txt\" and \"UCSC_track_names.txt\" :\n\nHEK293T_KAS-seq.rep1.ext150.bg                             KAS-seq.rep1\nHEK293T_KAS-seq.rep2.ext150.bg     ---KAS-seq.txt          KAS-seq.rep2     ---UCSC_track_names.txt\n```\n\nExample snapshot of KAS-seq data custom tracks from UCSC Genome Browser:\n\n<img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_snapshot.png\"  height=\"240\" align=\"middle\" > \n\n\n**Normalization of KAS-seq data**\n\nUsing the number of uniquely mapped reads:\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer normalize -m ratios -k HEK293T_KAS-seq_data.txt -r ratios.txt -b -s hg19 &\n\nExample \"HEK293T_KAS-seq_data.txt\" and \"ratios.txt\" :\n\nHEK293T_KAS-seq.rep1.ext150.bg                                           1.2\nHEK293T_KAS-seq.rep1.ext150.bg      ---HEK293T_KAS-seq_data.txt          1.4       ---ratios.txt\n```\n\nUsing Reads Per Kilobase per Million mapped reads (RPKM):\n\n```\n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer normalize -m RPKM -k HEK293T_KAS-seq_data.txt -b -s hg19 &\n\nExample \"HEK293T_KAS-seq_data.txt\":\nNote: the bam files need to be deduplicated.\n\nHEK293T_KAS-seq.rep1.rmdup.bam\nHEK293T_KAS-seq.rep2.rmdup.bam      ---HEK293T_KAS-seq_data.txt\n```\n\t\t\n**Generate summary plots of KAS-seq signals**\n\nGenerate metagene profile of KAS-seq read density on gene coding regions (TSS, genebody or TES):\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer profile -t 10 -s hg19 -o HEK293T_KAS-seq_profile -r genebody -c red,blue,green,purple -l labels.txt -k KAS-seq.normalized.bigWig.txt &\n```\n\nGenerate heatmap of KAS-seq read density on gene coding regions (TSS, genebody or TES):\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer heatmap -t 10 -s hg19 -o HEK293T_KAS-seq_heatmap -r genebody -q -c Reds -l labels.txt -k KAS-seq.normalized.bigWig.txt &\n```\n\nExample heatmap and metagene profile of KAS-seq signals on gene coding regions:\n\n <img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_metagene_heatmap.png\"  height=\"550\" align=\"middle\" > <img src=\"https://github.com/Ruitulyu/KAS-Analyzer/blob/main/image/KAS-seq_metagene_profile.png\"  height=\"240\" align=\"middle\" >           \n\n\n**Calculate transcription-related metrics**\n\nCalculate pausing index (PI) of RNA Pol II:\n\n```\n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer index -o HEK293T_pausing_index -t 10 -s hg19 -i pausing -l labels.txt -k KAS-seq.txt &\n```\n      \nCalculate elongation index (EI) of RNA Pol II:\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer KASindex -o HEK293T_elongation_index -t 10 -s hg19 -r gene -l labels.txt -k KAS-seq.txt &\n```\n\t\nCalculate termination index (TI) of RNA Pol II:\n\n```\n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer index -o HEK293T_termination_index -t 10 -s hg19 -i termination -l labels.txt -k KAS-seq.txt &\n```\n\t\nCalculate termination length (TL) of RNA Pol II:\n\n```\n# Run from \"Bam_files\" directory.\nnohup KAS-Analyzer termilength -o HEK293T_termination_length -t 10 -g hg19 -p peaks.txt -l labels.txt -k KAS-seq.txt &\n```\n\t\n**Identify single-stranded transcribing enhancers (SST enhancers)**\n\n```\n# Run from \"BedGraph_files\" directory.\nnohup KAS-Analyzer SST_enhancer -o HEK293T_SST_enhancers -t 10 -s hg19 -e H3K27ac_enhancers.bed -p HEK293T_KAS-seq_peaks.broadPeak -k HEK293T_KAS-seq.rep1.ext150.nor.bigWig,HEK293T_KAS-seq.rep1.ext150.nor.bigWig &\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Ruitulyu/KAS-Analyzer/main/README.md",
      "technique": "header_analysis"
    }
  ]
}