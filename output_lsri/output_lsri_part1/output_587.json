{
  "application_domain": [
    {
      "confidence": 21.7,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xiaoyu518/genofunc"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-06T13:29:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-15T10:45:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9774736747929625,
      "result": {
        "original_header": "Changelog",
        "type": "Text_excerpt",
        "value": "    v1.1.3\n        > Minor bugfix to strain_encoder with encoded metadata header not in correct format.\n    v1.1.2\n        > Multiprocessing added to genome_annotator function for improving run-time. --threads option added to this function.\n        \n    v1.1.1\n        > minor bugfixes (reference_matcher)\n        > Note: Due to the current version may experience lack of memory issue for longer sequences (>50kb), it is adviced not to be used for large datasets of such sequence length until newer updates. \n    v1.1\n        > Added options \"virus-type\" to reference_matcher to deal with DNA virus type which raw sequences may not be on the forward strand. \n        > Added options \"percentage-match\" to reference_matcher to filter out raw sequences which do not match to reference based on a certain threshold. e.g. the default value 0.1 implies only a match of 90% to a certain reference will be passed out to the output file.\n        > Added function to annotated DNA viruses which contains \"complement\" under annotation tab within GenBank. This is treated as a \"-\" sign within the reference/annotation file gene coordinate and read as a \"reverse complement\" when extracted using feature_extractor. \n        > Minor bug fixes.\n    \n    Note: Genofunc was extensively tested on the Darwin OS and may experience problems with other OS. Please issue any bugs encountered and will be attended to ASAP.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9839704782831887,
      "result": {
        "original_header": "FASTA and/or Metadata Manipulation",
        "type": "Text_excerpt",
        "value": "Mini tools for manipulation of FASTA and/or metadata files. Contains functions such as merging multiple FASTA files and metadata files, filtering duplicates, encoding FASTA file sequence IDs etc. \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9024340349769465,
      "result": {
        "original_header": "concatenate_fasta",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc concatenate_fasta --in-prefix tests/data/sequences/concatenate_fasta/ --gene pol gag --out-dir tests/data/output/\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9223680605647442,
      "result": {
        "original_header": "extract_metadata",
        "type": "Text_excerpt",
        "value": "Description: Extract relevent metadata based on index fields from metadata file using FASTA files. If field is empty, it will not be extracted and flagged in log file. \n    e.g. genofunc extract_metadata --in-fasta tests/data/sequences/seqB.fasta --in-metadata tests/data/metadata/metadataB.tsv --column country --id-column strain --out-fasta tests/data/output/extract.fasta --out-metadata tests/data/output/extract_metadata.csv\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8927698235595628,
      "result": {
        "original_header": "filter_fasta",
        "type": "Text_excerpt",
        "value": "    Options:\n        --in-dir: Input directory (Required)\n        --in-metadata: Input metadata for filtering alongside sequence file (Required)\n        --genes: Which genes fasta files are needed for filtering (Required)\n        --min-length: Minimum base coverage (Non-gaps) for sequences to be filtered if under this threshold (Required)\n        --symmetric: Require all gene regions to be available for the same sequence (Default: False)\n        --out-dir: Output directory after filtering (Default: ./) \n    e.g. genofunc filter_fasta --in-dir tests/data/sequences/gene_fasta/ --in-metadata tests/data/metadata/metadataB.tsv --genes pol gag --min-length 0.9 --symmetric --out-dir tests/data/output/\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8661358070057213,
      "result": {
        "original_header": "gene_concatenator",
        "type": "Text_excerpt",
        "value": "Description: Concatenate FASTA file based on similar sequence names of multiple genomic regions.  \n    e.g. genofunc gene_concatenator --in-fasta tests/data/sequences/gene_fasta/pol.fasta tests/data/sequences/gene_fasta/gag.fasta --out-fasta tests/data/output/gag_pol.fasta\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9079181594035589,
      "result": {
        "original_header": "merge",
        "type": "Text_excerpt",
        "value": "Description: Merges two or more FASTA files avoiding duplicates based on matches to metadata \n    Options:\n        --in-fasta: List of fasta files with spaces in between. At least two fasta files must be inserted here. (Required)\n        --in-metadata: list of matching metadata file with same naming convention as fasta file. (Required)\n        --index-field: The column ID with matching sequence IDs with fasta file (Required)\n        --out-dir: Output merged sequence and metadata file from multiple inputs (Default: ./). \n    e.g. genofunc merge --in-fasta tests/data/sequences/seqA.fasta tests/data/sequences/seqB.fasta --in-metadata tests/data/metadata/metadataA.tsv tests/data/metadata/metadataB.tsv --index-field strain --out-dir tests/data/output/\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8962415783617436,
      "result": {
        "original_header": "name_splitter",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc name_splitter --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-metadata tests/data/output/output_metadata.csv\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8740346172964549,
      "result": {
        "original_header": "rename_fasta",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc rename_fasta --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-fasta tests/data/output/depipe.fasta\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8953754091631703,
      "result": {
        "original_header": "strain_encoder",
        "type": "Text_excerpt",
        "value": "    Options:\n        --in-fasta: Input folder containing sequence files in fasta format (Required)\n        --in-metadata: Input metadata corresponding to sequence files (Required)\n        --encoding-column: Column for the base for encoding information (Required)\n        --out-dir: Output folder including encoded files (Default: ./) \n    e.g. genofunc strain_encoder --in-fasta tests/data/sequences/strain_encoder/ --in-metadata tests/data/metadata/metadataB.tsv --encoding-column 2 --out-dir tests/data/output/ \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9944144540761963,
      "result": {
        "original_header": "HIV Sequence Processing",
        "type": "Text_excerpt",
        "value": "Mini tools for manipulation of sequences mainly dealing with processing of raw sequences into information rich data such as annotation, feature extraction, referencing and alignment. \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8374808459357913,
      "result": {
        "original_header": "genome_annotator",
        "type": "Text_excerpt",
        "value": "    Options:\n        --raw-fasta: Raw sequences with reference in name tag in fasta format (Required)\n        --reference-sequence: Annotated reference sequences in json format (Required)\n        --threads: Set number of threads for multiprocessing (Default: 1)\n        --out-annotation: Output list of sequences annotated in json format (Default: referenced.json) \n    e.g. genofunc genome_annotator --raw-fasta tests/data/sequences/referenced.fasta --reference-sequence tests/data/reference/reference.json --out-annotation tests/data/output/annotated.json\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8754016346302752,
      "result": {
        "original_header": "reference_matcher",
        "type": "Text_excerpt",
        "value": "Description: Map sequence to the closest reference sequence list based on mini-map2. Note: Program uses piping convention for indicating references. Dont use \"|\" within any reference or sequence IDs. \n    Options:\n        --in-fasta: Raw sequences needed to be referenced to reference list in fasta format (Required)\n        --reference-sequence: Reference list in fasta format (Required)\n        --virus-type: Specify if the input sequences are DNA or RNA virus type. (Default: RNA)\n        --percentage-match: Match to reference based on percentage of nucleotide base matches by percentage (Default: 0.1)\n        --out-fasta: Output list of sequences referenced (Default: referenced.fasta) \n    e.g. genofunc reference_matcher --in-fasta tests/data/sequences/seqA.fasta --reference-sequence tests/data/reference/reference.fasta --out-fasta tests/data/output/referenced.fasta\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8892258916900597,
      "result": {
        "original_header": "group_align",
        "type": "Text_excerpt",
        "value": "Description: Split the FASTA file into groups of sequences set by a user threshold and align them in groups against reference. post group aligned sequences will be concatenated into a single alignment.  \n    e.g. genofunc group_align --in-dir tests/data/sequences/group_align/ --group-size 10 --reference-dir tests/data/reference/ --out-dir tests/data/output/ \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/xiaoyu518/genofunc/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xiaoyu518/genofunc/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "xiaoyu518/genofunc"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genofunc"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999999727065475,
      "result": {
        "original_header": "genofunc",
        "type": "Text_excerpt",
        "value": "A compiled tool for HIV sequence processing including referencing, annotation, feature extraction, filtering and merging. Installation can be done by pulling the genofunc folder and running python setup.py install or pip install genofunc.\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8462422089807217,
      "result": {
        "original_header": "concatenate_fasta",
        "type": "Text_excerpt",
        "value": "    Options:\n        --in-prefix: Input prefix within a directory for specific fasta files to be read (Required)\n        --gene: Gene regions to concatenate by which fasta file names are included in (Required)\n        --out-dir: Output directory after concatenating all fasta files with the same gene name (Default: ./)\n        --log-file: Output additional information from the program (default: stdout) \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9529803202097143,
      "result": {
        "original_header": "feature_extractor",
        "type": "Text_excerpt",
        "value": "    Options:\n        --annotated-file: Input annotated json file containing all sequences (Required)\n        --gene: Gene(s) regions to be extracted (Required)\n        --strip-gap: Strip gaps within gene regions (Default: False)\n        --filter-span: Minimum gene sequence length to be filtered (Default: 0)\n        --out-prefix: Output prefix for output sequences (Default: extracted_) \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9585257491762073,
      "result": {
        "original_header": "genome_annotator",
        "type": "Text_excerpt",
        "value": "    Options:\n        --raw-fasta: Raw sequences with reference in name tag in fasta format (Required)\n        --reference-sequence: Annotated reference sequences in json format (Required)\n        --threads: Set number of threads for multiprocessing (Default: 1)\n        --out-annotation: Output list of sequences annotated in json format (Default: referenced.json) \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9111079321187936,
      "result": {
        "original_header": "reference_matcher",
        "type": "Text_excerpt",
        "value": "    Options:\n        --in-fasta: Raw sequences needed to be referenced to reference list in fasta format (Required)\n        --reference-sequence: Reference list in fasta format (Required)\n        --virus-type: Specify if the input sequences are DNA or RNA virus type. (Default: RNA)\n        --percentage-match: Match to reference based on percentage of nucleotide base matches by percentage (Default: 0.1)\n        --out-fasta: Output list of sequences referenced (Default: referenced.fasta) \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.805055188888468,
      "result": {
        "original_header": "extract_metadata",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc extract_metadata --in-fasta tests/data/sequences/seqB.fasta --in-metadata tests/data/metadata/metadataB.tsv --column country --id-column strain --out-fasta tests/data/output/extract.fasta --out-metadata tests/data/output/extract_metadata.csv\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8220768365820975,
      "result": {
        "original_header": "gene_concatenator",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc gene_concatenator --in-fasta tests/data/sequences/gene_fasta/pol.fasta tests/data/sequences/gene_fasta/gag.fasta --out-fasta tests/data/output/gag_pol.fasta\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8529485509885629,
      "result": {
        "original_header": "name_splitter",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc name_splitter --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-metadata tests/data/output/output_metadata.csv\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.813595066774854,
      "result": {
        "original_header": "rename_fasta",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc rename_fasta --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-fasta tests/data/output/depipe.fasta\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8447384442003005,
      "result": {
        "original_header": "feature_extractor",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc feature_extractor --annotated-file tests/data/sequences/annotated.json --gene pol gag --strip-gap --filter-span 1300 --filter-coverage 0.7 --out-prefix tests/data/output/extracted_ \n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8592082960165531,
      "result": {
        "original_header": "genome_annotator",
        "type": "Text_excerpt",
        "value": "    e.g. genofunc genome_annotator --raw-fasta tests/data/sequences/referenced.fasta --reference-sequence tests/data/reference/reference.json --out-annotation tests/data/output/annotated.json\n \n"
      },
      "source": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/xiaoyu518/genofunc/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genofunc"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "xiaoyu518"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 72959,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/xiaoyu518/genofunc/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "xiaoyu518",
          "type": "User"
        },
        "date_created": "2023-06-03T11:38:34Z",
        "date_published": "2024-02-16T15:19:08Z",
        "description": "Official release version of genofunc",
        "html_url": "https://github.com/xiaoyu518/genofunc/releases/tag/v1.1.3",
        "name": "Version 1.1.3",
        "release_id": 142351302,
        "tag": "v1.1.3",
        "tarball_url": "https://api.github.com/repos/xiaoyu518/genofunc/tarball/v1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/xiaoyu518/genofunc/releases/142351302",
        "value": "https://api.github.com/repos/xiaoyu518/genofunc/releases/142351302",
        "zipball_url": "https://api.github.com/repos/xiaoyu518/genofunc/zipball/v1.1.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:18:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}