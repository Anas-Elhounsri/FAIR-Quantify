{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "AIONER"
        ],
        "type": "Text_excerpt",
        "value": "This research was supported by the Intramural Research Program of the National Library of Medicine (NLM), National Institutes of Health.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 69.16,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/AIONER"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-28T12:46:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-16T07:03:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIONER"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction of folders",
        "parent_header": [
          "AIONER"
        ],
        "type": "Text_excerpt",
        "value": "<a name=\"intro\"></a>\n\n- data\n\t- pubtator: the datasets in pubtator format\n\t- conll: the datasets in CoNLL format\n- example: input example files, BioC and PubTator formats (abstract or full text)\n- src: the codes for AIONER\n\t- AIONER_Run.py: the script for running AIONER\n\t- AIONER_Training.py: the script for training AIONER model\n\t- AIONER_FineTune.py: the script for fine-tuning AIONER model for the new NER task\n\t- Format_Preprocess.py: the preprocesing script to covert the pubtator format to conll format\n- vocab: label files for NER\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8538312930404205,
      "result": {
        "original_header": "Fine-tune for a new NER task",
        "type": "Text_excerpt",
        "value": "<a name=\"app\"></a>\nUse our pretrained AIONER models for fine-tuning a new NER task. \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9305752461444086,
      "result": {
        "original_header": "Format conversion",
        "type": "Text_excerpt",
        "value": "Note that --mapfile is a file to guide the entity type and label. For example, in the file of \"list_file.txt\": \n\"NCBIdisease.PubTator\tDisease\tDisease:DiseaseClass|SpecificDisease|CompositeMention|Modifier\" denotes the input pubtator file is \"NCBIdisease.PubTator\", the AIONER-label is \"Disease\", and the entities with entity types of \"DiseaseClass, SpecificDisease, CompositeMention, Modifier\" are used and changed to a new entity type is \"Disease\". \n    $ python Format_Preprocess.py -i ../data/pubtator/ -m ../data/list_train.txt -o ../data/conll/ \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.972886511125984,
      "result": {
        "original_header": "Disclaimer",
        "type": "Text_excerpt",
        "value": "This tool shows the results of research conducted in the Computational Biology Branch, NCBI. The information produced on this website is not intended for direct diagnostic use or medical decision-making without review and oversight by a clinical professional. Individuals should not change their health behavior solely on the basis of information produced on this website. NIH does not independently verify the validity or utility of the information produced by this tool. If you have questions about the information produced on this website, please see a health care professional. More information about NCBI's disclaimer policy is available. \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ncbi/AIONER/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/AIONER/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncbi/AIONER"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIONER"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-trained model preparation",
        "parent_header": [
          "AIONER"
        ],
        "type": "Text_excerpt",
        "value": "<a name=\"preparation\"></a>\n\nTo run this code, you need to first download the model file ([pretrained_models.zip](https://huggingface.co/lingbionlp/AIONER-0415/tree/main)) ( it includes the files for two original pre-trained models and two AIONER models), then unzip and put the model folder into the AIONER folder.\n\n- bioformer-cased-v1.0: the original bioformer model files\n- BiomedNLP-PubMedBERT-base-uncased-abstract: the original PubMedBERT model files\n- AIONER:\n\t- PubmedBERT-CRF-AIONER.h5: the PubMedBERT-CRF AIONER model\n\t- Bioformer-softmax-AIONER.h5: the Bioformer-softmax AIONER model\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8645554355420215,
      "result": {
        "original_header": "Training a new AIONER model",
        "type": "Text_excerpt",
        "value": "<a name=\"training\"></a> \n\nYou can train a new AIONER model using the *AIONER_Training.py* file. \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9144758532032712,
      "result": {
        "original_header": "Fine-tune for a new NER task",
        "type": "Text_excerpt",
        "value": "\nRun Example: \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9257850069241542,
      "result": {
        "original_header": "Training a new AIONER model",
        "type": "Text_excerpt",
        "value": "    $ python AIONER_Training.py -t ../data/conll/Merged_All-AIO.conll  -e bioformer -d softmax -o ../models/ \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8835318206938776,
      "result": {
        "original_header": "Fine-tune for a new NER task",
        "type": "Text_excerpt",
        "value": "First, you need to fine-tune the model using the new training set by *AIONER_FineTune.py* file. \n- --trainfile, -t, help=\"the training set file\"\n- --devfile, -d, help=\"the development set file\"\n- --vocabfile, -v, help=\"vocab file with BIO label\"\n- --modeltype, -m, help=\"deep learning model (bioformer or pubmedbert?)\"\n- --outpath, -o, help=\"the fine-tuned model output folder\" \n    $ python AIONER_FineTune.py -t ../data/conll/AnEM_train.conll -v ../vocab/AnEM_label.vocab -m bioformer -o ../models/ \n    $ python AIONER_Run.py -i ../example/input/ -m bioformer-softmax-es-finetune.h5 -v ../vocab/AnEM_label.vocab -e ALL -o example/output/ \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8630449044335797,
      "result": {
        "original_header": "Format conversion",
        "type": "Text_excerpt",
        "value": "\nYou can covert the pubtator format to conll format using the *Format_Preprocess.py* file. \n    $ python Format_Preprocess.py -i ../data/pubtator/ -m ../data/list_train.txt -o ../data/conll/ \n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ncbi/AIONER/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bionlp, named-entity-recognition, ner"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 NLM/NCBI BioNLP Research Group (PI: Zhiyong Lu)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AIONER"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 94893,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency package",
        "parent_header": [
          "AIONER"
        ],
        "type": "Text_excerpt",
        "value": "<a name=\"package\"></a>\nThe codes have been tested using Python 3.7 on CentOS and uses the following main dependencies on a CPU and GPU:\n- [TensorFlow 2.3.0](https://www.tensorflow.org/)\n- [Transformer 4.18.0](https://huggingface.co/docs/transformers/installation)\n- [stanza 1.4.0](stanfordnlp.github.io/stanza/)\n\n\nTo install all dependencies automatically using the command:\n\n    $ pip install -r requirements.txt\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running AIONER",
        "parent_header": [
          "AIONER"
        ],
        "type": "Text_excerpt",
        "value": "<a name=\"tagging\"></a>\nUse our trained models (i.e., PubmedBERT/Bioformer) for running AIONER by *AIONER_Run.py*.\n\nThe file has 5 parameters:\n\n- --inpath, -i, help=\"input folder\"\n- --model, -m, help=\"trained AIONER model file\"\n- --vocabfile, -v, help=\"vocab file with BIO label\"\n- --entity, -e, help=\"predict entity type (Gene, Chemical, Disease, Variant, Species, CellLine, ALL)\"\n- --outpath, -o, help=\"output folder to save the AIONER tagged results\"\n\nThe input file format is [BioC(xml)](bioc.sourceforge.net) or [PubTator](https://www.ncbi.nlm.nih.gov/CBBresearch/Lu/Demo/tmTools/Format.html) format. You can find some input examples in the /example/input/ folder .\n\n\n\nRun Example:\n\n    $ python AIONER_Run.py -i ../example/input/ -m ../pretrained_models/AIONER/Bioformer-softmax-AIONER.h5 -v ../vocab/AIO_label.vocab -e ALL -o ../example/output/\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ncbi/AIONER/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:22:11",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 40
      },
      "technique": "GitHub_API"
    }
  ]
}