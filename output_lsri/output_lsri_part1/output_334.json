{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bayesomicslab/ONT-nonb-GoFAE-DND"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-16T08:13:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-11T01:58:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Deep statistical model for predicting non-B DNA structures from ONT sequencing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.941044755374981,
      "result": {
        "original_header": "What is non-B DNA?",
        "type": "Text_excerpt",
        "value": "Non-canonical (or non-B) DNA are genomic regions whose three-dimensional conformation\ndeviates from the canonical double helix. Non-B DNA play an important role in basic cellular processes\nand are associated with genomic instability, gene regulation, and oncogenesis. Experimental methods are\nlow-throughput and can detect only a limited set of non-B DNA structures, while computational methods\nrely on non-B DNA base motifs, which are necessary but not sufficient indicators of non-B structures.\nThe [DNA conformations](https://user-images.githubusercontent.com/45966768/228634198-7f7b219d-f7bd-4272-86d9-ad3097a080a0.PNG) that we study here are the following: \nGiven the dramatic increase in genome-scale data produced using ONT platforms, and in\nparticular ultra-long sequencing data that supports telomere-to-telomere level genome \nassembly, we sought to develop a  parallel strategy for identifying non-B DNA structure by their \neffects on sequencing speeds (translocation times) in ONT devices \n(Ni et al., [2019](https://academic.oup.com/bioinformatics/article/35/22/4586/5474907), \nLiu et al., [2019](https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-018-5372-8), \nMcIntyre et al., [2019](https://www.nature.com/articles/s41467-019-08289-9), \nStoiber et al., [2017](https://www.biorxiv.org/content/10.1101/094672v2.abstract)).  \nIn SMRT technology, the sequencing speed is determined by polymerization \n(Liu et al., [2018](https://genome.cshlp.org/content/28/12/1767.short)).\nHowever, ONT devices record a measurement of current at a predefined sampling rate and then aggregate the measurements \ninto *strides*, which are the smallest length of measurement accepted by the basecaller and represent a single base translocation\n([An introduction to the concept of events and strides](http://simpsonlab.github.io/2015/04/08/eventalign/)).\n \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.982158306157199,
      "result": {
        "original_header": "1. Make simulated windows",
        "type": "Text_excerpt",
        "value": "This is an example of command that simulate\n100,000 B-DNA and 1,000 non-B DNA windows \nfor G-quadruples and Short Tandem Repeat.\nYou must have matplotlib, numpy, and pandas \ninstalled.\nIn a command line with python in your path, \nchange directory into simulator/ and then\nrun the simulator, which specifies the amount \nof non-B and B DNA samples. \nThis may take a couple minutes: \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9553955339689515,
      "result": {
        "original_header": "<a href=\"http://porecamp.github.io/2017/basecalling.html\">Albacore Basecalling</a>:",
        "type": "Text_excerpt",
        "value": "\nSubsequently, we [re-squiggle](https://nanoporetech.github.io/tombo/resquiggle.html) the FAST5  output of Albacore using [Tombo](https://nanoporetech.github.io/tombo/tutorials.html), \na statistical method that detects base modifications in nanopore current signal (Stoiber et al., [2017](https://www.biorxiv.org/content/10.1101/094672v2.abstract)). \nBriefly, the re-squiggling algorithm segments the raw current signal into events and calls nucleotide bases using the current and a reference genome for\ncorrecting spurious variation ([Figures, top](https://user-images.githubusercontent.com/45966768/228670741-a137b6bc-c7af-464e-a50e-489cc1f1fb19.PNG) and [middle](https://user-images.githubusercontent.com/45966768/228649149-8bdf2bf2-043e-4a58-bc6a-ec0264b991b5.png)). \nThe Tombo segmentation provides current measurements at the base-level, unlike Albacore, which assumes the block stride\nattribute remains fixed, which enables the computation of translocation times ([Figures, bottom](https://user-images.githubusercontent.com/45966768/228670741-a137b6bc-c7af-464e-a50e-489cc1f1fb19.PNG) and [bottom](https://user-images.githubusercontent.com/45966768/228649149-8bdf2bf2-043e-4a58-bc6a-ec0264b991b5.png)).\nFor each position on the Tombo-mapped reads, we compute the time duration in seconds as the ratio of the number of current measurements to the ONT sampling rate. \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Instructions for downloading the data and GitHub repo",
        "parent_header": [
          "ONT-nonb-GoFAE-DND",
          "Experimental data"
        ],
        "type": "Text_excerpt",
        "value": "   1) Create or change directory where you want to reproduce the results.\n\n   2) Download and extract the data.\n\n       First, we download the Nanopore fast5 file from: \n       https://trace.ncbi.nlm.nih.gov/Traces/?view=run_browser&acc=SRR15058166&display=metadata\n       ### Note: this may be slow as the FAST5 files total over 4TB \n       For convenience, we provide a download.sh script in the script folder that will \n       download, unpack, and clean up the directory.\n        \n        ```\n        $ sh download.sh\n        ```\n\n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bayesomicslab/ONT-nonb-GoFAE-DND/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/examples/experiments_setup.ipynb"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/examples/experiments_setup.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bayesomicslab/ONT-nonb-GoFAE-DND/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bayesomicslab/ONT-nonb-GoFAE-DND"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ONT-nonb-GoFAE-DND"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/scripts/download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/scripts/albacore.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/scripts/align_fastq2bam.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/scripts/filter_reads.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/scripts/tombo.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45966768/228634198-7f7b219d-f7bd-4272-86d9-ad3097a080a0.PNG"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45966768/228676731-1c8ac6a9-8221-42db-aedd-d4e8096f9331.png"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45966768/228649149-8bdf2bf2-043e-4a58-bc6a-ec0264b991b5.png"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/45966768/228670741-a137b6bc-c7af-464e-a50e-489cc1f1fb19.PNG"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9679997102622064,
      "result": {
        "original_header": "ONT-nonb-GoFAE-DND",
        "type": "Text_excerpt",
        "value": "[//]: # (**NOTE:** **_GoFAE-DND code will be released upon acceptance._**)\n \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9553734931769955,
      "result": {
        "original_header": "What is non-B DNA?",
        "type": "Text_excerpt",
        "value": "  <img width=60% height=60% src=\"https://user-images.githubusercontent.com/45966768/228634198-7f7b219d-f7bd-4272-86d9-ad3097a080a0.PNG\"> \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 1.0,
      "result": {
        "original_header": "Cloning the Project and Creating the Environment",
        "type": "Text_excerpt",
        "value": "These instructions assume that you have miniconda or anaconda installed.\nTo begin, clone the GoFAE-DND project. In a command line with git in your path:\n```\n$ git clone https://github.com/bayesomicslab/ONT-nonb-GoFAE-DND.git\n```\nThen, change directory into the ONT-nonb-GoFAE-DND/ folder and\ncreate and activate the conda environment.\n```\n$ conda env create -f GoFAE-DND/gofaednd/gofaednd_env.yml\n$ conda activate gofaednd_env\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9782760232527181,
      "result": {
        "original_header": "1. Make simulated windows",
        "type": "Text_excerpt",
        "value": "This is an example of command that simulate\n100,000 B-DNA and 1,000 non-B DNA windows \nfor G-quadruples and Short Tandem Repeat.\nYou must have matplotlib, numpy, and pandas \ninstalled.\nIn a command line with python in your path, \nchange directory into simulator/ and then\nrun the simulator, which specifies the amount \nof non-B and B DNA samples. \nThis may take a couple minutes: \n     $ cd simulator\n     $ python simulator.py -nb 10000 -b 1000000 -s ../simulated_data \n \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9553734931769955,
      "result": {
        "original_header": "Processing Reads",
        "type": "Text_excerpt",
        "value": "  <img width=60% height=60% src=\"https://user-images.githubusercontent.com/45966768/228649149-8bdf2bf2-043e-4a58-bc6a-ec0264b991b5.png\"> \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9783638340066186,
      "result": {
        "original_header": "<a href=\"http://porecamp.github.io/2017/basecalling.html\">Albacore Basecalling</a>:",
        "type": "Text_excerpt",
        "value": "```Albacore\n $ read_fast5_basecaller.py -f FLO-PRO002 -k SQK-LSK109 --input $path/na12878/fast5/single/ --save_path $path/na12878/fast5/albacore_single/ --output_format fastq,fast5 -t 48 --recursive --config r941_450bps_linear_prom.cfg\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9808907201503074,
      "result": {
        "original_header": "<a href=\"https://nanoporetech.github.io/tombo/resquiggle.html\">Tombo re-squiggle</a>:",
        "type": "Text_excerpt",
        "value": "```Tombo\n$ tombo resquiggle $path/workspace/pass/ hg38.fa --dna --overwrite --basecall-group Basecall_1D_001 --include-event-stdev --failed-reads-filename $path/workspace/pass/tombo_failed_reads.txt --processes 48\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8413435466338913,
      "result": {
        "original_header": "Step 6:",
        "type": "Text_excerpt",
        "value": "Compute translocation signal on the non-overlapping windows. \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9035279124286777,
      "result": {
        "original_header": "1. Make simulated windows",
        "type": "Text_excerpt",
        "value": "     $ cd simulator\n     $ python simulator.py -nb 10000 -b 1000000 -s ../simulated_data \n \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.815461748427344,
      "result": {
        "original_header": "<a href=\"http://porecamp.github.io/2017/basecalling.html\">Albacore Basecalling</a>:",
        "type": "Text_excerpt",
        "value": "```Albacore\n $ read_fast5_basecaller.py -f FLO-PRO002 -k SQK-LSK109 --input $path/na12878/fast5/single/ --save_path $path/na12878/fast5/albacore_single/ --output_format fastq,fast5 -t 48 --recursive --config r941_450bps_linear_prom.cfg\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bayesomicslab/ONT-nonb-GoFAE-DND/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ONT-nonb-GoFAE-DND"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bayesomicslab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 532399,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12469,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 4524,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running GoFAE-DND",
        "parent_header": [
          "ONT-nonb-GoFAE-DND"
        ],
        "type": "Text_excerpt",
        "value": "To run the GoFAE-DND, change directory and run the Main.py file.\n\n```\n$ cd GoFAE-DND/gofaednd\n$ python Main.py --help\n```\n\nThough, **to understand how to run the GoFAE-DND, we recommend \nexecuting the following code** which generates \nsimulated translocation times and then runs the GoFAE-DND method\nalong with classifiers and novelty detectors.\n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Run GoFAE-DND on simulated data",
        "parent_header": [
          "ONT-nonb-GoFAE-DND",
          "Simulations"
        ],
        "type": "Text_excerpt",
        "value": "All python dependencies for the GoFAE-DND are in [`gofaednd_env.yml`](GoFAE-DND/gofaednd/gofaednd_env.yml)\n\n```\n$ cd ../GoFAE-DND/gofaednd\n$ python Main.py --data_type=simulated --sim_data_path=../../simulated_data/ --config=1 --nonb_type=G_Quadruplex_Motif --nonb_ratio=0.1 --n_z=64 --num_projections=64 --epochs=25 --fdr_level=0.2 --discriminative_weight=35 --lambda_alpha=0.5 \n$ python Main.py --data_type=simulated --sim_data_path=../../simulated_data/ --config=2 --nonb_type=Short_tandem_repeat --nonb_ratio=0.1 --n_z=64 --num_projections=64 --epochs=25 --fdr_level=0.2 --discriminative_weight=35 --lambda_alpha=0.5 \n```\n\nNote: to get a list of all parameters, run the command:\n```\n$ python Main.py --help\n```\n\nThe results including spreadsheets of metrics and diagnostic images \nare included in the root-level results/ directory.\n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Run novelty detection methods",
        "parent_header": [
          "ONT-nonb-GoFAE-DND",
          "Simulations"
        ],
        "type": "Text_excerpt",
        "value": "To run the other methods, we will need to install seaborn and h5py first.\n\n```\n$ conda install seaborn\n$ conda install h5py\n```\nAfterwards, we can run isolation forests, local outlier factors, and one class SVMs.\n\n  ```\n  $ cd ../../novelty_detectors\n  $ python isolation_forest.py -W ignore -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000 \n  $ python local_outlier_factor.py -W ignore -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000 \n  $ python svm_one_class.py -W ignore -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000   \n  ```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Run classifiers",
        "parent_header": [
          "ONT-nonb-GoFAE-DND",
          "Simulations"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ cd ../classifiers\n$ python -W ignore svc.py -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000\n$ python -W ignore random_forest.py -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000\n$ python -W ignore nearest_neighbors.py -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000\n$ python -W ignore logistic_regression.py -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000\n$ python -W ignore gaussian_process.py -d sim -f ../simulated_data/ -r ../results/ -nb 20000 -b 200000\n```\n\nThe results for both novelty detectors and classifiers can be found in the root-level\nresults directory.\n\n[//]: # ()\n[//]: # (#### 5. Compare the methods: &#40;Reproduce Fig 6 and S4&#41;:)\n\n[//]: # ()\n[//]: # (```)\n\n[//]: # ($ cd ../)\n\n[//]: # ($ python3 plottings.py)\n\n[//]: # (```)\n\n\n[//]: # (## GoFAE-DND method:)\n\n<p align=\"center\">\n\n  <img width=60% height=60% src=\"https://user-images.githubusercontent.com/45966768/228676731-1c8ac6a9-8221-42db-aedd-d4e8096f9331.png\">\n\n</p>\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/bayesomicslab/ONT-nonb-GoFAE-DND/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:20:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}