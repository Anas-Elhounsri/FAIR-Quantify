{
  "application_domain": [
    {
      "confidence": 35.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pephco/ASDEC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-09T12:32:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-09T03:29:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9683145535912978,
      "result": {
        "original_header": "Training",
        "type": "Text_excerpt",
        "value": "Go to the root of the ASDEC repository.\nLet us train a model based on the bottleneck data-sets 1-10 using TrainCNN.py, run the following command to see all the options:\n```bash\npython3 src/TrainCNN.py -h\n```\nOnly the parameters that differ should be added otherwise the def value is taken.\nBASH2*\nHere we start with data-set 1 till and including 10 for both ms and mssel (given by the values of parameters: a, b, c, and d).\nNext, we use -e to tell ASDEC to create 10 populations per file -p gives us the location and name of the model, and lastly -o gives us the number of training epochs.\nAll other parameters can be left to their default value including -q which now uses the SweepNet CNN design/architecture.\nCheck out the 'models/TESTMODEL' directory for your model. \nWhen training a model the correct classification type should be defined (NH, NS, or NHS) this information is saved within the model for inference. The data generation only supports the classification type NH (neutral and hard selective sweep). \n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9922364697816992,
      "result": {
        "original_header": "Inference",
        "type": "Text_excerpt",
        "value": "Go to the root of the ASDEC repository.\nImportant if for any reason you would like to kill ASDEC performing inference please see the instructions given further down in the readme to do this correctly.\nLet us perform inference with our trained SweepNet model.\n```bash\npython3 src/LoadCNN.py -h\n```\nOnly the parameters that differ should be added otherwise the def value is taken.\nBASH2*\nHere we perform inference on data-set 1 with a model trained with data-set 1-10.\nHere the parameters -a,-b,-c,-d, and e have the same meaning as during training.\nNow the -o is for saving the post-processed files (postLog folder is created automatically), -p is for saving the summary-file (needed for distance error, success rate, and TPR calculations), and lastly, the -x parameter is savin the files before post-processing (preLog folder is created automatically).\nThe -t flag gives the number of threads being used by the ASDEC inference software, -u is the cleaning of the temp folders used by ASDEC, and the search flag is required because we are using search mode which includes data generation, and extra logging such as the -p and -x flag. Lastly the -v flag gives the number of populations to process per thread. \n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Trajectory files",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "If the usage of the automatic data generation is desired, please follow to steps underneath.\nTo get the trajectory files run the included bash script from the root of the repo:\n```bash\n./tools/setupTrajectoryFiles.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "VCF file parsing",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "For the VCF parsing a subset of the tool [RAiSD](https://github.com/pephco/RAiSD/) is used therefore to use the vcf parser the [GNU Scientific Library (GSL)](https://www.gnu.org/software/gsl/) needs to be installed. Otherwise, the following error can be observed.\n\n\tError message:\n\t./RAiSD_Parser/RAiSD: error while loading shared libraries: libgsl.so.23: cannot open shared object file: No such file or directory\n\trm: cannot remove 'RAiSD_Info.test_run': No such file or directory\n\trm: cannot remove 'RAiSD_Report.test_run': No such file or directory\n\n\t------STARTED RUNNING test_input.vcf.ms------\n\n\tTraceback (most recent call last):\n\t  File \"src/LoadCNN.py\", line 555, in <module>\n\t    main(sys.argv[1:])\n\t  File \"src/LoadCNN.py\", line 416, in main\n\t    openfile = open(filesFound, 'r')\n\tFileNotFoundError: [Errno 2] No such file or directory: '/home/sweepcnn/Downloads/test_input.vcf.ms'\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic test",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "After the previous steps check the setup by running the following commands from the root of the repo (always run from the root of the repo to avoid potential problems).\n```bash\npython3 src/TrainCNN.py -h\n```\nThis should give you a list of all possible options for the program. Next, run the following command (again from the root of the repo):\n```bash\npython3 src/LoadCNN.py -h\n```\nThis again should give a list with all possible options. If a package is missing please install it and when any script gives problems or are not able the run, please make them executable by running:\n```bash\nchmod +x src/scripts/*.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pephco/ASDEC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get metrics success rate, distance error, and TPR",
        "parent_header": [
          "Basic example train model and perform inference"
        ],
        "type": "Text_excerpt",
        "value": "Go to the root of the ASDEC repository.\nLastly to calculate the success rate, distance error:\n```bash\npython3 src/accuracy.py -i archive/logTraj_TEST1_summary.txt -c 500000 -r 10000 -o archive/results/acc.txt -f false -p 0\n```\nFor more information run:\n```bash\npython3 src/accuracy.py -h\n```\n**output:** \n```bash\nthe accuracy files: Path to file to score, raw distance, amount of entries correct, the total amount of entries, percentage of correct entries (success rate), raw distance  \n```\nAnd to calculate the TPR with a given 5% FPR value:\n```bash\npython3 src/TPRFPR.py -n archive/logTraj_BASE1_summary.txt -s archive/logTraj_TEST1_summary.txt -f 0.05 -o archive/results/tprfpr.txt -r false -d false\n```\nFor more information run:\n```bash\npython3 src/TPRFPR.py -h\n```\n**output:**  \n```bash\nthe TPR files: Path to file to score: the value of neutral data-set at given FPR value, given FPR, calculated TPR  \n```\nThese results are probably not usable, but give a simple introduction into how to use ASDEC.\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pephco/ASDEC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pephco/ASDEC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASDEC: Genome-wide Detection of Positive Selection using Convolutional Neural Networks"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/dataGeneration.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/generateLoad.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/makeInfoFolder.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/makeFolder.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/cleanCompleteTrain.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/pipelineLoad.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/cleanCompleteLoad.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/src/scripts/deleteFolder.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/tools/setupTrajectoryFiles.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/Img/CoalescentTable.PNG"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation dependencies",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "Use the package manager to install [tensorflow](https://www.tensorflow.org/), [keras](https://keras.io/), and following the install instructions of TensorFlow 2 and Keras. Besides python3 also python3-dev and python3-venv should be installed on the machine. Different bash files are used for automation tested version: GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu).\nFollowing Linux packages are required:\n```bash\nsudo apt update\nsudo apt install python3-pip #(version 20.0.2)\nsudo apt install unzip\t#(version 6.00)\n```\nInstall the following pip packages for python3 may require pip3 instead of pip:\n```bash\npip3 install testresources==2.0.1\npip3 install protobuf==3.9.2\npip3 install tensorflow==2.4.1\npip3 install keras==2.4.3\npip3 install numpy==1.19.5\npip3 install h5py==2.10.0\npip3 install matplotlib==3.4.1\npip3 install tensorboard==2.4.1\npip3 install pillow==7.0.0\n```\nOptional pip packages:\n```bash\npip3 install tensorboard-plugin-profile==2.4.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Trajectory files",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "If the usage of the automatic data generation is desired, please follow to steps underneath.\nTo get the trajectory files run the included bash script from the root of the repo:\n```bash\n./tools/setupTrajectoryFiles.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "VCF file parsing",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "For the VCF parsing a subset of the tool [RAiSD](https://github.com/pephco/RAiSD/) is used therefore to use the vcf parser the [GNU Scientific Library (GSL)](https://www.gnu.org/software/gsl/) needs to be installed. Otherwise, the following error can be observed.\n\n\tError message:\n\t./RAiSD_Parser/RAiSD: error while loading shared libraries: libgsl.so.23: cannot open shared object file: No such file or directory\n\trm: cannot remove 'RAiSD_Info.test_run': No such file or directory\n\trm: cannot remove 'RAiSD_Report.test_run': No such file or directory\n\n\t------STARTED RUNNING test_input.vcf.ms------\n\n\tTraceback (most recent call last):\n\t  File \"src/LoadCNN.py\", line 555, in <module>\n\t    main(sys.argv[1:])\n\t  File \"src/LoadCNN.py\", line 416, in main\n\t    openfile = open(filesFound, 'r')\n\tFileNotFoundError: [Errno 2] No such file or directory: '/home/sweepcnn/Downloads/test_input.vcf.ms'\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic test",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "After the previous steps check the setup by running the following commands from the root of the repo (always run from the root of the repo to avoid potential problems).\n```bash\npython3 src/TrainCNN.py -h\n```\nThis should give you a list of all possible options for the program. Next, run the following command (again from the root of the repo):\n```bash\npython3 src/LoadCNN.py -h\n```\nThis again should give a list with all possible options. If a package is missing please install it and when any script gives problems or are not able the run, please make them executable by running:\n```bash\nchmod +x src/scripts/*.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9274013207757394,
      "result": {
        "original_header": "ASDEC: Genome-wide Detection of Positive Selection using Convolutional Neural Networks",
        "type": "Text_excerpt",
        "value": "Authors: Matthijs Souilljee (matthijs.souilljee@gmail.com) and Nikolaos Alachiotis (n.alachiotis@gmail.com) \nVersion: 1.2\n \n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992701881071332,
      "result": {
        "original_header": "Changelog",
        "type": "Text_excerpt",
        "value": "\tv1.0 (31/07/2021): Initial release\n\tV1.1 (23/09/2021): CPU and GPU update\n\tV1.2 (09/12/2021): Added new classification handling\n \n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pephco/ASDEC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ASDEC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "pephco"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 323253,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 72219,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation dependencies",
        "parent_header": [
          "Download and Setup"
        ],
        "type": "Text_excerpt",
        "value": "Use the package manager to install [tensorflow](https://www.tensorflow.org/), [keras](https://keras.io/), and following the install instructions of TensorFlow 2 and Keras. Besides python3 also python3-dev and python3-venv should be installed on the machine. Different bash files are used for automation tested version: GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu).\nFollowing Linux packages are required:\n```bash\nsudo apt update\nsudo apt install python3-pip #(version 20.0.2)\nsudo apt install unzip\t#(version 6.00)\n```\nInstall the following pip packages for python3 may require pip3 instead of pip:\n```bash\npip3 install testresources==2.0.1\npip3 install protobuf==3.9.2\npip3 install tensorflow==2.4.1\npip3 install keras==2.4.3\npip3 install numpy==1.19.5\npip3 install h5py==2.10.0\npip3 install matplotlib==3.4.1\npip3 install tensorboard==2.4.1\npip3 install pillow==7.0.0\n```\nOptional pip packages:\n```bash\npip3 install tensorboard-plugin-profile==2.4.0\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "license",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:44:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get metrics success rate, distance error, and TPR",
        "parent_header": [
          "Basic example train model and perform inference"
        ],
        "type": "Text_excerpt",
        "value": "Go to the root of the ASDEC repository.\nLastly to calculate the success rate, distance error:\n```bash\npython3 src/accuracy.py -i archive/logTraj_TEST1_summary.txt -c 500000 -r 10000 -o archive/results/acc.txt -f false -p 0\n```\nFor more information run:\n```bash\npython3 src/accuracy.py -h\n```\n**output:** \n```bash\nthe accuracy files: Path to file to score, raw distance, amount of entries correct, the total amount of entries, percentage of correct entries (success rate), raw distance  \n```\nAnd to calculate the TPR with a given 5% FPR value:\n```bash\npython3 src/TPRFPR.py -n archive/logTraj_BASE1_summary.txt -s archive/logTraj_TEST1_summary.txt -f 0.05 -o archive/results/tprfpr.txt -r false -d false\n```\nFor more information run:\n```bash\npython3 src/TPRFPR.py -h\n```\n**output:**  \n```bash\nthe TPR files: Path to file to score: the value of neutral data-set at given FPR value, given FPR, calculated TPR  \n```\nThese results are probably not usable, but give a simple introduction into how to use ASDEC.\n"
      },
      "source": "https://raw.githubusercontent.com/pephco/ASDEC/main/README.md",
      "technique": "header_analysis"
    }
  ]
}