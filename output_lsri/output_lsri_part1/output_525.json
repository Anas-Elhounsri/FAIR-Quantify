{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DSIMB/ICARUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-10-11T10:05:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T12:54:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Flexible protein structural alignment based on Protein Units"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8986894713372755,
      "result": {
        "original_header": "Icarus: Flexible protein structural alignment based on Protein Units",
        "type": "Text_excerpt",
        "value": "\nIcarus is a method which uses the Protein Peeling algorithm (Gelly et al. (2006a), Gelly et al. (2006b), Gelly et al. (2011), Postic et al. (2017), Cretin et al. (2022)) to identify compact regions i.e Protein Units (PUs). PUs define rigid regions to be aligned to the target and delimit hinge positions in the structure.  \nProtein Peeling allows a hierarchical segmentation of a protein into compact \"independent\" domains (i.e that maximise intra-domain contact while minimizing inter-domain contact).  \nA protein can be divided into different exploration levels, each level containing more and more PUs as the level rises. The user can choose between different exploration levels:  \n| Exploration level | Max number of Protein Units to consider (up to)  |\n|:-----------------:|--------------------------------------------------|\n|         1         |        2 and/or 3                                |\n|       **2**       | **4 and/or 5 (default)**                         |\n|         3         |            6                                     |\n|         4         |            7                                     | \nIf user asks for an exploration of 4, the program will explore **up to** 7 PUs,  \nmeaning that if the best alignment is found at level 3, it will give this best alignment anyways.\nYou can set --verbose mode to have detailed output with all intermediate alignments. \nWhen given a pair of proteins to align, the program will generate several outputs:   \n* All intermediate alignments are kept, for each exploration level up to the one chosen by the user.\n* For each exploration level, the best alignments are kept in a `results_PDB` directory, containing both the PDB files of the query alone and the query aligned against the target. \n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9319529449986144,
      "result": {
        "original_header": "Verbose output",
        "type": "Text_excerpt",
        "value": "Contains results for protein1 vs. protein2 and vice versa,\nand summary.txt is the terminal textual output.\n```\nwork/results/d1adl___and_d1mup__:\n \u251c\u2500\u2500 d1adl___on_d1mup__/\n \u251c\u2500\u2500 d1mup___on_d1adl__/\n \u2514\u2500\u2500 summary.txt\n``` \nEach directory contains the TM-sup and TM-sup_all_atm output PDB files of\nthe best KPAXs done between best alignment PUs and the target to which\npreviously aligned portions of PUs were removed.\n```\nwork/results/d1ggga__and_d1wdna_/d1adl__-on-d1mup__/intermediate/alignements_level_1_3_PUs:\n \u251c\u2500\u2500 ali_d1adl__-d1adl__.ent_1_106_131-on-d1mup__/\n \u251c\u2500\u2500 ali_d1adl__-d1adl__.ent_1_1_64-on--4SF3zUEzYS/\n \u2514\u2500\u2500 ali_d1adl__-d1adl__.ent_1_65_105-on--cRHbY4G4OX/\n``` \nContains all the solutions found by ICARUS at each exploration level\nand for each number of PUs of these levels.\nAre given:\n1 - query-exploration_level_and_number_of_PUs-on-target.pdb\n2 - query-exploration_level_and_number_of_PUs.pdb\n```\nwork/results/d1ggga__and_d1wdna_/d1adl__-on-d1mup__/intermediate/result_PDBs:\n \u251c\u2500\u2500 d1adl__-level_1_3_PUs-on-d1mup__.pdb\n \u251c\u2500\u2500 d1adl__-level_1_3_PUs.pdb\n \u251c\u2500\u2500 d1adl__-level_2_4_PUs-on-d1mup__.pdb\n \u251c\u2500\u2500 d1adl__-level_2_4_PUs.pdb\n \u251c\u2500\u2500 d1adl__-level_2_5_PUs-on-d1mup__.pdb\n \u251c\u2500\u2500 d1adl__-level_2_5_PUs.pdb\n \u2514\u2500\u2500 d1adl___on_d1mup___kpax.pdb\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DSIMB/ICARUS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DSIMB/ICARUS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DSIMB/ICARUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Icarus: Flexible protein structural alignment based on Protein Units"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/549521192"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/25644865/195085445-b3af5175-8c61-4710-847c-df8907cb7617.png"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DSIMB/ICARUS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "protein, protein-structure, protein-structure-alignment"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ICARUS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "DSIMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 561560,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 261791,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 182097,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 158052,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 14520,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6078,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gabrielctn",
          "type": "User"
        },
        "date_created": "2024-06-12T16:25:13Z",
        "date_published": "2024-06-12T16:31:09Z",
        "description": "* Fix #2 : Copy and rename input filenames if they contain more than one dot `\".\"` because KPAX generates errors otherwise.\r\n* Add a `--version` CLI argument.",
        "html_url": "https://github.com/DSIMB/ICARUS/releases/tag/v1.1.1",
        "name": "ICARUS v1.1.1",
        "release_id": 160133310,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/DSIMB/ICARUS/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/DSIMB/ICARUS/releases/160133310",
        "value": "https://api.github.com/repos/DSIMB/ICARUS/releases/160133310",
        "zipball_url": "https://api.github.com/repos/DSIMB/ICARUS/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gabrielctn",
          "type": "User"
        },
        "date_created": "2023-05-08T21:23:42Z",
        "date_published": "2023-05-09T14:41:01Z",
        "description": "* Completely replaced TM-align with KPAX for intermediate alignments\r\n* Several bug fixes and general improvement\r\n* Removed Dockerfile as a conda is sufficient\r\n",
        "html_url": "https://github.com/DSIMB/ICARUS/releases/tag/1.1.0",
        "name": "ICARUS v1.1.0",
        "release_id": 102360136,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/DSIMB/ICARUS/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/DSIMB/ICARUS/releases/102360136",
        "value": "https://api.github.com/repos/DSIMB/ICARUS/releases/102360136",
        "zipball_url": "https://api.github.com/repos/DSIMB/ICARUS/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "gabrielctn",
          "type": "User"
        },
        "date_created": "2022-10-17T13:47:30Z",
        "date_published": "2022-10-17T13:49:42Z",
        "description": "First release of ICARUS.",
        "html_url": "https://github.com/DSIMB/ICARUS/releases/tag/v1.0.0",
        "name": "ICARUS v1.0.0",
        "release_id": 80090291,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/DSIMB/ICARUS/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/DSIMB/ICARUS/releases/80090291",
        "value": "https://api.github.com/repos/DSIMB/ICARUS/releases/80090291",
        "zipball_url": "https://api.github.com/repos/DSIMB/ICARUS/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Icarus: Flexible protein structural alignment based on Protein Units"
        ],
        "type": "Text_excerpt",
        "value": "First, you need to run `install.sh`.\nThis will essentially compile and install SWORD and its dependencies.\n\n```bash\n./install.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "Icarus: Flexible protein structural alignment based on Protein Units",
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Create an environment using the `environment.yml` file in the git repository which contains all dependencies.\n\n```bash\n# Create the environment\nconda env create -f environment.yml\nor\nmamba env create -f environment.yml\n# Activate the environment\nconda activate icarus\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:05:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Icarus: Flexible protein structural alignment based on Protein Units"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ ./icarus.py --help\nusage: icarus.py [-h] -p1 PROTEIN1 -p2 PROTEIN2 [-m MIN_SIZE] [-c1 CHAIN1] [-c2 CHAIN2] [-l EXPLORATION_LEVEL] [-p PRUNE] [-s | -n] [-t] [-e] [-f] [-c CPU] [-v] [-u]\n\nIcarus is a flexible structural alignment program.\nIt takes as input 2 pdb files and returns the optimal\nalignment based on different protein exploration levels.\n\nrequired arguments:\n  -p1 PROTEIN1, --protein1 PROTEIN1\n                        Path to the first protein to align\n  -p2 PROTEIN2, --protein2 PROTEIN2\n                        Path to the second protein to align\n\noptional arguments:\n  -m MIN_SIZE, --min-size MIN_SIZE\n                        Minimum size of Protein Units (PUs).\n                        Must be 15 <= min <= 99, default 15\n  -c1 CHAIN1, --chain1 CHAIN1\n                        PDB Chain of the query.\n                        Single alphabetical character [A-B].\n                        Default is chain A.\n  -c2 CHAIN2, --chain2 CHAIN2\n                        PDB Chain of the target.\n                        Single alphabetical character [A-B].\n                        Default is chain A.\n  -l EXPLORATION_LEVEL, --exploration-level EXPLORATION_LEVEL\n                        The exploration level determines up to how many PUs to\n                        consider to build the graph of solutions.\n                        A high exploration level will consider more PUs,\n                        therefore explore more possibilities and\n                        potentially find better results, but it will\n                        also increase exponentially the complexity of\n                        calculations and runtime.\n                        A low exploration level can potentially miss good results.\n                        A good trade-off is to set level 2 (default) or 3.\n                        Attention !! Levels 4 and 5 may require a high amount\n                        of memory and will run longer.\n                        Available levels and corresponding number of PUs (up to):\n                          1 -> [2, 3],\n                          2 -> [4, 5],\n                          3 -> 6,\n                          4 -> 7\n  -p PRUNE, --prune PRUNE\n                        The pruning threshold corresponds to a TM-score value\n                        used to filter the KPAX between Protein Units and the target protein.\n                        If an alignment is below this threshold, it will be pruned from the graph.\n                        A high pruning threshold (TM-score value) will filter out more solutions\n                        whereas a low one will prune less solutions.\n                        Default value is no pruning (0.).\n  -s, --seed-alignment  In the case when both input PDBs have identical amino acid sequences\n                        but differ in 3D, setting this option will make sure that\n                        all alignments by KPAX will be assigned to avoid any displacement.\n                        This is useful for instance in the case of an analysis of structures inside a\n                        dynamics simulations. Default is not set\n  -n, --no-seed-alignment\n                        Force the flexible alignment of identical amino acid sequences\n                        without setting a seed alignment for KPAX. Default is not set\n  -t, --smoothed-pu-output\n                        If this option is set, the Protein Units (PUs) that were aligned to the target protein\n                        are smoothed / trimmed to keep only the \"core\" aligned position.\n                        This option only changes the final presentation of the textual alignment for \"visual\"\n                        purposes. The output PDB files contain all the residues. Default is not set\n  -e, --sequential      If this option is set, the program considers only solutions with consecutive Protein Units.\n                        Either ascending or descending order.\n  -f, --force           Bypass asking user confirmation for exploration level >= 4\n  -c CPU, --cpu CPU     How many CPUs to use. Default all (0). Max on this computer is: 32\n  -v, --verbose         Set verbose mode: print longer output and generate\n                                          intermediate results and alignments\n  -u, --use-ramfs       Use the native TMPFS partition /dev/shm on linux systems to boost i/o perfs.\n                        This may use a large amount of RAM if proteins are large e.g. > 200 residues\n\nExplanations of ICARUS output.\n\nICARUS generates results in a directory named 'icarus_output'\nin the directory from which you launch ICARUS.\n\nNon-verbose output\n------------------\n./icarus_output/results/query_and_target:\n \u251c\u2500\u2500 solution1_query-on-target-level_X_N_PUs.pdb\n \u2514\u2500\u2500 summary.txt (terminal textual output)\n\nVerbose output\n--------------\nSee the README for detailed information on verbose output\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Toy example",
        "parent_header": [
          "Icarus: Flexible protein structural alignment based on Protein Units"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n./icarus.py -p1 data/RIPC/d1adl__.ent -p2 data/RIPC/d1mup__.ent\n```\n\n```\nClean input PDB files ... done\n\nPeel d1adl__:\n    131 aa\n    Seq: CDAFVGTWKLVSSENFDDYMKEVGVGFATRKVAGMAKPNMIISVNGDLVTIRSESTFKNTEISFKLGVEFDEITADDRKVKSIITLDGGALVQVQKWDGKSTTIKRKRDGDKLVVECVMKGVTSTRVYERA\nPeel d1mup__:\n    157 aa\n    Seq: EEASSTGRNFNVEKINGEWHTIILASDKREKIEDNGNFRLFLEQIHVLENSLVLKFHTVRDEECSELSMVADKTEKAGEYSVTYDGFNTFTIPKTDYDNFLMAHLINEKDGETFQLMGLYGREPDLSSDIKERFAQLCEEHGILRENIIDLSNANRC\n\n\nAligning d1adl__ against d1mup__\n\nSOLUTION 1: d1adl__ [level 1 => 3 PUs] vs d1mup__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\nSOLUTION 2: d1adl__ [level 2 => 4 PUs] vs d1mup__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\nSOLUTION 3: d1adl__ [level 2 => 5 PUs] vs d1mup__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\nAligning d1mup__ against d1adl__\n\nSOLUTION 4: d1mup__ [level 1 => 3 PUs] vs d1adl__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\nSOLUTION 5: d1mup__ [level 2 => 4 PUs] vs d1adl__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\nSOLUTION 6: d1mup__ [level 2 => 5 PUs] vs d1adl__\n--------------------------------------------------------\nBuild graph      [##############################] [100%]\nMerge alignments [##############################] [100%]\nCompute scores   [##############################] [100%]\n\n\n**************************************************************************************************************\n*************************************************** RESULTS **************************************************\n**************************************************************************************************************\n\n\nThere is only 1 optimal solution for this alignment:\n\n\n                                                 SOLUTION 3\n                                                 ==========\n\n *  Score: 0.719\n    Query: d1adl__\n     \u251c\u2500\u2500 PU order:     PU1 |     PU2 |     PU3 |     PU4 |     PU5 |\n     \u2514\u2500\u2500 Regions :    1-22 |   23-37 |   38-64 |  65-105 | 106-131 |\n    Target: d1mup__\n     \u2514\u2500\u2500 Sequence length : 157\n\n                                                ALIGNED PU(S)\n                                                =============\n\nPU 1     :CDAFVGTWKLVSSEN--FDDY---MKE\n          ||:||||||||||||   :.\nTARGET   :VEKINGEWHTIILASDKREKIEDNGNF\nali. pos. 12                        38\nori. pos. 1                         22\n\nPU 2     :VGVGFATRKVAGMAK\n          :|||||||||||||:\nTARGET   :PDLSSDIKERFAQLC\nali. pos. 130           144\nori. pos. 23            37\n\nPU 3     :PNMIISVNGDLVTIRSES----TFKNTEISF\n          ..:|||||||||||||:.    .:||||||:\nTARGET   :FLEQIHVLENSLVLKFHTVRDEECSELSMVA\nali. pos. 41                            71\nori. pos. 38                            64\n\nPU 4     :K-----LGVEFDEITADDRKVKSIITLDGG------ALVQVQKWDGKSTTIK\n          .      |:||||      .||||||||::      ||||||||||||||||\nTARGET   :DKTEKAGEYSVTY------DGFNTFTIPKTDYDNFLMAHLINEKDGETFQLM\nali. pos. 72                                                 123\nori. pos. 65                                                 105\n\nPU 5     :RKRDGDKLVVECVMKGVT-STRVY---ERA\n                       .: .  .||||   :|:\nTARGET   :-----------EEHGILRENIIDLSNANRC\nali. pos. 145                          174\nori. pos. 106                          131\n\n                                                BEST ALIGNMENT\n                                                ==============\n\nPUs      :                      PU1                            PU3                                      PU4\nori. pos.:           \u250c1                      22\u2510  \u250c38                         64\u2510\u250c65\nconnect  :           +-------------------------+  +-----------------------------++----------------------------\nQUERY    :           CDAFVGTWKLVSSEN--FDDY---MKE--PNMIISVNGDLVTIRSES----TFKNTEISFK-----LGVEFDEITADDRKVKSIITLDG\nmatch    :           ||:||||||||||||   :.         ..:|||||||||||||:.    .:||||||:.      |:||||      .||||||||:\nTARGET   :EEASSTGRNFNVEKINGEWHTIILASDKREKIEDNGNFRLFLEQIHVLENSLVLKFHTVRDEECSELSMVADKTEKAGEYSVTY------DGFNTFTIPK\ndist     :           112000101000001  5248   79   342111010010111024    4201110023     5121100      3000110002\nali. pos.:         10        20        30        40        50        60        70        80        90\n\nPUs      :                                  PU2                   PU5\nori. pos.:                   105\u2510      \u250c23         37\u2510\u250c106                      131\u2510\nconnect  :----------------------+      +-------------++----------------------------+\nQUERY    :G------ALVQVQKWDGKSTTIK------VGVGFATRKVAGMAKRKRDGDKLVVECVMKGVT-STRVY---ERA\nmatch    ::      ||||||||||||||||      :|||||||||||||:             .: .  .||||   :|:\nTARGET   :TDYDNFLMAHLINEKDGETFQLMGLYGREPDLSSDIKERFAQLC-----------EEHGILRENIIDLSNANRC\ndist     :2      1001100010100000      200000000001102           7532635 31111   212\nali. pos.:         110       120       130       140       150       160       170\n\nAligned distance (match <=> dist): '|' <= 1 \u00c5\n                                   ':' <= 2 \u00c5\n                                   '.' <= 3 \u00c5\n\nBest solution(s):\n--> /home/republique/cretin/PROJECTS/icarus-github/icarus_output/results/d1adl___and_d1mup__/solution_3_d1adl__-level_2_5_PUs-on-d1mup__.pdb\n\nTotal runtime: 30.0 seconds\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DSIMB/ICARUS/main/README.md",
      "technique": "header_analysis"
    }
  ]
}