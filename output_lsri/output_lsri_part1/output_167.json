{
  "application_domain": [
    {
      "confidence": 0.9479578034601039,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "Cite our paper at:\n```\n@article{wang2023,\n  title={G-Aligner: a graph-based feature alignment method for untargeted LC--MS-based metabolomics},\n  author={Wang, Ruimin and Lu, Miaoshan and An, Shaowei and Wang, Jinyin and Yu, Changbin},\n  journal={BMC bioinformatics},\n  volume={24},\n  number={1},\n  pages={431},\n  year={2023},\n  publisher={Springer},\n  doi={10.1186/s12859-023-05525-4}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Wang, Ruimin and Lu, Miaoshan and An, Shaowei and Wang, Jinyin and Yu, Changbin",
        "doi": "10.1186/s12859-023-05525-4",
        "format": "bibtex",
        "title": "G-Aligner: a graph-based feature alignment method for untargeted LC--MS-based metabolomics",
        "type": "Text_excerpt",
        "value": "@article{wang2023,\n    doi = {10.1186/s12859-023-05525-4},\n    publisher = {Springer},\n    year = {2023},\n    pages = {431},\n    number = {1},\n    volume = {24},\n    journal = {BMC bioinformatics},\n    author = {Wang, Ruimin and Lu, Miaoshan and An, Shaowei and Wang, Jinyin and Yu, Changbin},\n    title = {G-Aligner: a graph-based feature alignment method for untargeted LC--MS-based metabolomics},\n}"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSi-Studio/G-Aligner"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-01T17:26:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-25T00:54:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9990972225969281,
      "result": {
        "original_header": "Highlights",
        "type": "Text_excerpt",
        "value": "- **Novelty:** G-Aligner enables comprehensive analysis of all potential correspondences among features all runs for the first time. G-Aligner treats features and potential correspondences as nodes and edges of a multipartite graph, converts the feature matching problem as a multidimensional assignment problem (MAP), and proposes three combinatorial optimization methods to solve the MAP.\n- **Accuracy:** G-Aligner achieved the best performance in comparison with popular feature alignment methods in MZmine2, OpenMS and XCMS on two public metabolomics benchmark datasets.\n- **Reliability:** G-Aligner achieved the best performance on manually annotated feature lists and untargeted extracted features of MZmine2, OpenMS and XCMS, and helped all compared software obtaining more accurate result by integrating G-Aligner into their workflow.\n- **Open source:** We open-sourced G-Aligner under a permissive license to promote the accuracy of MS data analysis more broadly.\n- **Dataset:** We manually annotated a feature dataset for three public benchmark datasets, which contains m/z, RT, area information of library analytes and can be used in evaluations of feature detection, quantification and alignment accuracy.\n \n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/CSi-Studio/G-Aligner/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSi-Studio/G-Aligner/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CSi-Studio/G-Aligner"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "1. Prepare the python environment based on your system and hardware.\n   \n2. Install the dependencies. Here we use ROOT_PATH to represent the root path of G-Aligner.\n    \n    ```cd ROOT_PATH\\third_party\\```\n\n    ```python setup.py install```\n   \n    ```cd ROOT_PATH```\n   \n    ```pip install -r requirements.txt```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/CSi-Studio/G-Aligner/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2006, The University of Texas at Austin(\"U.T. Austin\"). All rights reserved.  \n\nSoftware by John T. Prince under the direction of Edward M. Marcotte.\n\nBy using this software the USER indicates that he or she has read, understood and will comply with the following:\n\nU. T. Austin hereby grants USER permission to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of this software and its documentation for any purpose and without fee, provided that a full copy of this notice is included with the software and its documentation.\n\nTitle to copyright to this software and its associated documentation shall at all times remain with U. T. Austin. No right is granted to use in advertising, publicity or otherwise any trademark, service mark, or the name of U. T. Austin.\n\nThis software and any associated documentation are provided \"as is,\" and U. T. AUSTIN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESSED OR IMPLIED, INCLUDING THOSE OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR THAT USE OF THE SOFTWARE, MODIFICATIONS, OR ASSOCIATED DOCUMENTATION WILL NOT INFRINGE ANY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER INTELLECTUAL PROPERTY RIGHTS OF A THIRD PARTY. U. T. Austin, The University of Texas System, its Regents, officers, and employees shall not be liable under any circumstances for any direct, indirect, special, incidental, or consequential damages with respect to any claim by USER or any third party on account of or arising from the use, or inability to use, this software or its associated documentation, even if U. T. Austin has been advised of the possibility of those damages.\n\nSubmit software operation questions to: Edward M. Marcotte, Department of Chemistry and Biochemistry, U. T. Austin, Austin, Texas 78712.\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/third_party/obiwarp/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics"
        ],
        "type": "Text_excerpt",
        "value": "G-Aligner is an open-source tool, using [***Mulan Permissive Software License\uff0cVersion 2 (Mulan PSL v2)***](http://license.coscl.org.cn/MulanPSL2)\n\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "G-Aligner"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "CSi-Studio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 181522,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 14690,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Supported formats",
        "parent_header": [
          "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics",
          "Run G-Aligner"
        ],
        "type": "Text_excerpt",
        "value": "Feature extraction rsults in csv format, containing m/z, RT and area columns.\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:37:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Demos",
        "parent_header": [
          "G-Aligner: a graph-based feature alignment method for untargeted LC-MS-based metabolomics",
          "Run G-Aligner"
        ],
        "type": "Text_excerpt",
        "value": "Our demos can help you reproduce the evaluation results.\n\nPlace the data download from the Zenodo repository as follows.\n```\nG-Aligner-master\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 MTBLS562\n\u2502   \u251c\u2500\u2500 MTBLS562_results_metapro\n\u2502   \u251c\u2500\u2500 MTBLS562_results_mzmine2\n\u2502   \u251c\u2500\u2500 MTBLS562_results_openms\n\u2502   \u251c\u2500\u2500 MTBLS562_results_xcms\n\u2502   \u251c\u2500\u2500 QE_HF\n\u2502   \u251c\u2500\u2500 QE_HF_results_metapro\n\u2502   \u251c\u2500\u2500 QE_HF_results_mzmine2\n\u2502   \u251c\u2500\u2500 QE_HF_results_openms\n\u2502   \u251c\u2500\u2500 QE_HF_results_xcms\n\u2502   \u251c\u2500\u2500 TripleTOF_6600\n\u2502   \u251c\u2500\u2500 TripleTOF_6600_results_metapro\n\u2502   \u251c\u2500\u2500 TripleTOF_6600_results_mzmine2\n\u2502   \u251c\u2500\u2500 TripleTOF_6600_results_openms\n\u2502   \u251c\u2500\u2500 TripleTOF_6600_results_xcms\n\u2502   \u251c\u2500\u2500 evaluate_metapro_galigner.py\n\u2502   \u251c\u2500\u2500 evaluate_metapro_mzmine2.java\n\u2502   \u251c\u2500\u2500 evaluate_metapro_openms.py\n\u2502   \u251c\u2500\u2500 evaluate_metapro_xcms.Rmd\n\u2502   \u251c\u2500\u2500 evaluate_mzmine2_galigner.py\n\u2502   \u251c\u2500\u2500 evaluate_openms_galigner.py\n\u2502   \u251c\u2500\u2500 evaluate_xcms_galigner.py\n\u2502   \u251c\u2500\u2500 metapro_result_comparison.py\n\u2502   \u251c\u2500\u2500 software_result_comparison.py\n```\n\n- To run the benchmark scripts:\n\n```cd ROOT_PATH```\n\n```python data/metapro_result_comparison.py```\n\n```python data/software_result_comparison.py```\n\n- To analyze with G-Aligner:\n\n```cd ROOT_PATH```\n\nChange the parameters in data/evaluate_metapro_galigner.py\n\n```python data/evaluate_metapro_galigner.py```\n\nFeature alignment results are saved in ```experiment``` folder.\n"
      },
      "source": "https://raw.githubusercontent.com/CSi-Studio/G-Aligner/master/README.md",
      "technique": "header_analysis"
    }
  ]
}