{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Please cite the following work:\n\n```\nS Riahi, J Hyeon Lee, T Sorenson, S Wei1, S Jager, R Olfati-Saber, A Park, M Wendt, H Minoux, Y Qiu;\nSurface ID: A Geometry-aware System for Protein Molecular Surface Comparison;\nBioinformatics, Volume 39, Issue 42023,btad196, 2023  \n```\n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sanofi-Public/LMR-SurfaceID"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-11T13:33:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-02T09:45:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Repo contains source code of the SurfaceID paper"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9985566448998294,
      "result": {
        "original_header": "Surface Similarity Search via Geometric Deep Learning: SurfaceID",
        "type": "Text_excerpt",
        "value": "A protein can be represented in several forms, including its 1D sequence, 3D atom coordinates, and molecular surface. A protein surface contains rich structural and chemical features directly related to the protein\u2019s function such as its ability to interact with other molecules. While many methods have been developed for comparing similarity of proteins using the sequence and structural representations, computational methods based on molecular surface representation are limited. Here, we describe \u201cSurface ID\u201d, a geometric deep learning system for high-throughput surface comparison based on geometric and chemical features.  Surface ID offers a novel grouping and alignment algorithm useful for clustering proteins by function, visualization, and in-silico screening of potential binding partners to a target molecule. Our method demonstrates top performance in surface similarity assessment, indicating great potential for protein functional annotation, a major need in protein engineering and therapeutic design. \n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9586940254643741,
      "result": {
        "original_header": "Preprocessing",
        "type": "Text_excerpt",
        "value": "MaSIF publication's original pipeline is used (with modification) \nfor generating a surface representation per moleclue. \nFor each molecule, use src/masif2npz.py to generate surface representation files. These files are \"collated\" into a  `{id}_{chain}_suface.npz` that contains the features that SurfaceID requires. \n \n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.943171402414339,
      "result": {
        "original_header": "Visualization of the SurfaceID search outputs.",
        "type": "Text_excerpt",
        "value": "Following the installation of the Pymol plugin from MaSIF, SurfaceID plugiin can be installed to visualize the search/align results \nA copy of the modified MaSIF plugin where the surfaces for target/candidate hits can be visualized is available under src/pymol_plugin. \nupon installing this plugin, sidloadply and sidloadply_ref are added to the CMD list. If not, you may need to append the path to this script to ~/.pymolpluginsrc.py (pymol.plugins.set_startup_path).  \nIf the SurfaceID search is conducted and the \"ALIGNED & SAVEPLY\" are set to \"TRUE\" in the config.yml file, the hit surface area on target and candidate protesins can be visualized with these commands in the pymol terminal:\n``` python\n# aligned candidate hit\nsidloadply <candidate.target.ply>\n\n# target surface area corresponding to each candidate hits identified by:\n# all for all candidate hits \n#[1,2,3] for candidate hitst 1, 2, 3\n#(1,10) for candidate hits 1, 2, 3,...,10\n# 1 for the first candidate hit \n\nsidloadplyref <target_ref.ply> , all   \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sanofi-Public/LMR-SurfaceID/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Sanofi-Public/LMR-SurfaceID/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sanofi-Public/LMR-SurfaceID/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Sanofi-Public/LMR-SurfaceID"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Surface Similarity Search via Geometric Deep Learning: SurfaceID"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sanofi-GitHub/LMR-SurfaceID/main/docs/toc.png"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999897306617889,
      "result": {
        "original_header": "Visualization of the SurfaceID search outputs.",
        "type": "Text_excerpt",
        "value": "Following the installation of the Pymol plugin from MaSIF, SurfaceID plugiin can be installed to visualize the search/align results \nA copy of the modified MaSIF plugin where the surfaces for target/candidate hits can be visualized is available under src/pymol_plugin. \nupon installing this plugin, sidloadply and sidloadply_ref are added to the CMD list. If not, you may need to append the path to this script to ~/.pymolpluginsrc.py (pymol.plugins.set_startup_path).  \nIf the SurfaceID search is conducted and the \"ALIGNED & SAVEPLY\" are set to \"TRUE\" in the config.yml file, the hit surface area on target and candidate protesins can be visualized with these commands in the pymol terminal:\n``` python\n# aligned candidate hit\nsidloadply <candidate.target.ply>\n\n# target surface area corresponding to each candidate hits identified by:\n# all for all candidate hits \n#[1,2,3] for candidate hitst 1, 2, 3\n#(1,10) for candidate hits 1, 2, 3,...,10\n# 1 for the first candidate hit \n\nsidloadplyref <target_ref.ply> , all   \n``` \n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Sanofi-Public/LMR-SurfaceID/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "apm-0074337, cc-6cl900"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "License Notice: Permission is hereby granted, free of charge, for academic research purposes only and for non-commercial uses only, to any person from academic research or non-profit organizations obtaining a copy of this software and associated documentation files (the \"Software\"), to use, copy, modify, or merge the Software, subject to the following conditions: this permission notice shall be included in all copies of the Software or of substantial portions of the Software. For purposes of this license, \u201cnon-commercial use\u201d excludes uses foreseeably resulting in a commercial benefit. To use this software for other purposes (such as the development of a commercial product, including but not limited to software, service, or pharmaceuticals), please contact SANOFI. All other rights are reserved. The Software is provided \u201cas is\u201d, without warranty of any kind, express or implied, including the warranties of noninfringement.\n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LMR-SurfaceID"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "Sanofi-Public"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 155893,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "requirements.",
        "parent_header": [
          "Surface Similarity Search via Geometric Deep Learning: SurfaceID",
          "Setup"
        ],
        "type": "Text_excerpt",
        "value": "Assuming that MaSIF and its packages are installed, or the surface npz files are provided, surface ID requirements can be installed with:\n\n```bash\npip install -r requirements.txt\n```\nplyfile package needs to be installed for reading/writing the surface mesh.  \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running SurfaceID",
        "parent_header": [
          "Surface Similarity Search via Geometric Deep Learning: SurfaceID"
        ],
        "type": "Text_excerpt",
        "value": "Following the MaSIF preprocessing and generation npz/*.npz, provide the library(inputs/inputs.csv) and config parameters under input/config.yml . \n\n```bash\npython main.py\n```\n\nImportant config parameters:\n* Target : target protein (if empty, an all-against-all search will be conducted)\n* CONTACT : whether the PPI interface of the complex system sould be used for search\n* RESTRICT: if contact interface is not specified , this keyword tells SurfaceID to read the XYZ coordinates of the area of interest for each library. The entire protein surface can be searched when when as region column exists in the inputs/input.csv where keywords F,C,R stands for entire protein surface, PPI area, or , restricted (with XYZ coordinates), respectively.   \n* SPATIAL_PARAMETERS: are various distance and size parameters used to define the search area or size of the hit region \n"
      },
      "source": "https://raw.githubusercontent.com/Sanofi-Public/LMR-SurfaceID/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:32:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ]
}