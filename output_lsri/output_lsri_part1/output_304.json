{
  "application_domain": [
    {
      "confidence": 0.8176931572125803,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/takaram/kofam_scan"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-19T11:18:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T23:10:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CLI tool to annotate genes with KOfam"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9822124829935382,
      "result": {
        "original_header": "KofamScan",
        "type": "Text_excerpt",
        "value": "KofamScan is a gene function annotation tool based on KEGG Orthology and hidden Markov model.\nYou need [KOfam database](ftp://ftp.genome.jp/pub/db/kofam) to use this tool.\nOnline version is available on https://www.genome.jp/tools/kofamkoala/ .\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8844626916649041,
      "result": {
        "original_header": "Query file",
        "type": "Text_excerpt",
        "value": "A query file is a FASTA file with one or more amino acid sequences. You cannot use nucleotide sequences.\nEach sequence must have a unique name. A name of a sequence is a string between the header symbol (\">\") and the first blank character (whitespace, tab, line break, etc.). Do not put a whitespace right after \">\".\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9864888820057741,
      "result": {
        "original_header": "Profiles",
        "type": "Text_excerpt",
        "value": "KOfam has `prokaryote.hal` and `eukaryote.hal` in `profiles` directory. They are lists of profiles excluding eukaryote- and prokaryote-specific KOs respectively.\nIf you are interested in only several KOs, you can make your original .hal file and use it as a database. It will reduce computation time.\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9623747364216431,
      "result": {
        "original_header": "Options",
        "type": "Text_excerpt",
        "value": "- `-o FILE`\n  - The result are output to `FILE`. It defaults to `stdout`.\n- `-p`, `--profile=PROFILE`\n  - Use `PROFILE` as a profile database. See [Profiles](#profiles)\n- `-k`, `--ko-list=FILE`\n  - Use `FILE` as a KO list.\n- `--cpu=N`\n  - Set the number of `hmmsearch` processes started simultaneously to `N`. It defaults to 1 unless it is set in `config.yml`.\n- `-c FILE`\n  - Use `FILE` as a config file instead of `config.yml` in the same directory as `exec_annotation`.\n- `--tmp-dir=DIR`\n  - Use `DIR` as a temporary directory where hmmsearch results are. It will be created if not exist. It defaults to `./tmp`.\n- `-E`, `--e-value=VALUE`\n  - Require E-value to be smaller than or equal to `VALUE`. If not, an asterisk will not be added in `detail` format or the hit will not be reported in other formats.\n- `-T`, `--threshold-scale=VALUE`\n  - The score thresholds are multiplied by `VALUE`. For example, with `-T2` option, the thresholds become twice as strict.\n- `-f`, `--format=FORMAT`\n  - Set the format of the output to `FORMAT`. Three formats below are available.\n  - `detail`\n    - Default format. Gene name, assigned K number, threshold of the KO, hmmsearch score and E-value, and the definition of KO are shown. In addition, an asterisk '*' is added to the head of the line if the score is higher than the threshold.\n  - `detail-tsv`\n    - Tab separated values for `detail` format.\n  - `mapper`\n    - Format which can be used for [KEGG Mapper](https://www.genome.jp/kegg/mapper.html) input. It includes a gene name and an assigned K number separated by a tab. Here, an assigned K number represents a hit with score above the predefined threshold. Note that for some KOs, predefined score thresholds are not available when they are represented by a very few number of sequences in KEGG GENES.\n  - `mapper-oneline`\n    - Similar to `mapper`, but when more than one KO are assigned to a gene, all assigned KO are shown in one line separated by tabs.\n- `--[no-]report-unannotated`\n  - With `--report-unannotated` option, gene names are shown even when no KO is assigned (default when `--format=mapper(-oneline)`). With `--no-report-unannotated` such genes are not shown at all (default when `--format=detail`).\n- `--create-alignment`\n  - `hmmsearch`'s normal outputs per profile are stored in the temporary directory. In addition, domain information and alignments in the outputs will be rearranged per query.\n  - Not compatible with `--reannotation`\n- `-r`, `--reannotation`\n  - Skip `hmmsearch` and assume that `hmmsearch` outputs are already in the temporary directory. This will help you to make an output in a different format or redo annotation changing thresholds.\n  - Not compatible with `--create-alignment`\n- `-h`, `--help`\n  - Show brief help message.\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/takaram/kofam_scan/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/takaram/kofam_scan/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "takaram/kofam_scan"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KofamScan"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9584163619565585,
      "result": {
        "original_header": "KofamScan",
        "type": "Text_excerpt",
        "value": "KofamScan is a gene function annotation tool based on KEGG Orthology and hidden Markov model.\nYou need [KOfam database](ftp://ftp.genome.jp/pub/db/kofam) to use this tool.\nOnline version is available on https://www.genome.jp/tools/kofamkoala/ .\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999887479127109,
      "result": {
        "original_header": "Profiles",
        "type": "Text_excerpt",
        "value": "Specify the path of the profile database you downloaded by giving `--profile` option to the command or writing it to `config.yml`. The path can be a directory, .hmm file, or .hal file.\nIf it is a directory, .hmm files in the directory will be used.\nIf a .hmm file, only the file will be used.\nIf a .hal file, files listed in the .hal file will be used. File paths in a .hal file are either absolute or relative to the directory of the file. Lines start with # are ignored. \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999992404562519,
      "result": {
        "original_header": "config.yml",
        "type": "Text_excerpt",
        "value": "The following variables can be set by `config.yml`.\n- profile\n  - Path to KOfam profiles.\n  - `--profile` option takes precedence.\n- ko_list\n  - Path to the KO list of KOfam.\n  - `--ko-list` option takes precedence.\n- cpu\n  - Number of `hmmsearch` processes started simultaneously.\n  - `--cpu` option takes precedence.\n- hmmsearch\n  - Path to `hmmsearch` executable. If not given, it will be searched for PATH.\n- parallel\n  - Path to `parallel` executable. If not given, it will be searched for PATH.\n \n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/takaram/kofam_scan/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "KofamScan"
        ],
        "type": "Text_excerpt",
        "value": "This software is released under the MIT License.\n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "kofam_scan"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "takaram"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 93529,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Emacs Lisp",
        "size": 201,
        "type": "Programming_language",
        "value": "Emacs Lisp"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "KofamScan"
        ],
        "type": "Text_excerpt",
        "value": "- Linux\n- Ruby >= 2.4\n- HMMER >= 3.1\n- GNU Parallel\n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:13:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 70
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "KofamScan"
        ],
        "type": "Text_excerpt",
        "value": "1. Download KOfam database from ftp://ftp.genome.jp/pub/db/kofam/ and decompress it. You will get profile HMMs in `profiles/` directory and `ko_list`.\n2. Create `config.yml` in the same directory as `exec_annotation` script. See below for details.\n3. Execute `exec_annotation`.\n\n```console\n$ ./exec_annotation -o result.txt query.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/takaram/kofam_scan/master/README.md",
      "technique": "header_analysis"
    }
  ]
}