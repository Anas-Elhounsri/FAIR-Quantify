{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "type": "Text_excerpt",
        "value": "Some ideas for the software were derived from the [ResFinder][resfinder-git], [PointFinder][pointfinder-git], and [PlasmidFinder][plasmidfinder-git] command-line software, as well as from [ABRicate][abricate] and from [SISTR (Salmonella In Silico Typing Resource) command-line tool ][sistr_cmd].\n\nPhenotype/drug resistance predictions are provided with support from the NARMS/CIPARS Molecular Working Group.\n\nThe Multi-locus sequence typing program is from the [MLST] Github.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "type": "Text_excerpt",
        "value": "If you find `staramr` useful, please cite the following paper:\n\n> Bharat A, Petkau A, Avery BP, Chen JC, Folster JP, Carson CA, Kearney A, Nadon C, Mabon P, Thiessen J, Alexander DC, Allen V, El Bailey S, Bekal S, German GJ, Haldane D, Hoang L, Chui L, Minion J, Zahariadis G, Domselaar GV, Reid-Smith RJ, Mulvey MR. **Correlation between Phenotypic and In Silico Detection of Antimicrobial Resistance in Salmonella enterica in Canada Using Staramr**. Microorganisms. 2022; 10(2):292. https://doi.org/10.3390/microorganisms10020292\n\nYou may also consider citing the following (databases or other resources used by `staramr`):\n\n> **Zankari E, Hasman H, Cosentino S, Vestergaard M, Rasmussen S, Lund O, Aarestrup FM, Larsen MV**. 2012. Identification of acquired antimicrobial resistance genes. J. Antimicrob. Chemother. 67:2640\u20132644. doi: [10.1093/jac/dks261][resfinder-cite]\n\n> **Zankari E, Alles\u00f8e R, Joensen KG, Cavaco LM, Lund O, Aarestrup F**. PointFinder: a novel web tool for WGS-based detection of antimicrobial resistance associated with chromosomal point mutations in bacterial pathogens. J Antimicrob Chemother. 2017; 72(10): 2764\u20138. doi: [10.1093/jac/dkx217][pointfinder-cite]\n\n> **Carattoli A, Zankari E, Garcia-Fernandez A, Voldby Larsen M, Lund O, Villa L, Aarestrup FM, Hasman H**. PlasmidFinder and pMLST: in silico detection and typing of plasmids. Antimicrob. Agents Chemother. 2014. April 28th. doi: [10.1128/AAC.02412-14][plasmidfinder-cite]\n\n>**Seemann T**, MLST Github https://github.com/tseemann/mlst\n\n>**Jolley KA, Bray JE and Maiden MCJ**. Open-access bacterial population genomics: BIGSdb software, the PubMLST.org website and their applications [version 1; peer review: 2 approved]. Wellcome Open Res 2018, 3:124. doi: [10.12688/wellcomeopenres.14826.1][mlst-cite]\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/staramr"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-03-13T15:37:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T07:32:31Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scans genome contigs against the ResFinder, PlasmidFinder, and PointFinder databases."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.921149300946068,
      "result": {
        "original_header": "`staramr`",
        "type": "Text_excerpt",
        "value": "`staramr` (*AMR) scans bacterial genome contigs against the [ResFinder][resfinder-db], [PointFinder][pointfinder-db], and [PlasmidFinder][plasmidfinder-db] databases (used by the [ResFinder webservice][resfinder-web] and other webservices offered by the Center for Genomic Epidemiology) and compiles a summary report of detected antimicrobial resistance genes. The `star|*` in `staramr` indicates that it can handle all of the ResFinder, PointFinder, and PlasmidFinder databases. \n**Note: The predicted phenotypes/drug resistances are for microbiological resistance and *not* clinical resistance. This is provided with support from the NARMS/CIPARS Molecular Working Group and is continually being improved. A small comparison between phenotype/drug resistance predictions produced by `staramr` and those available from NCBI can be found in the [tutorial][tutorial]. We welcome any feedback or suggestions.** \n| Isolate ID | Quality Module | Genotype | Predicted Phenotype | CGE Predicted Phenotype | Plasmid | Scheme | Sequence Type | Genome Length | N50 value | Number of Contigs Greater Than Or Equal To 300 bp | Quality Module Feedback |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| SRR1952908 | Passed | aadA1, aadA2, blaTEM-57, cmlA1, gyrA (S83Y), sul3, tet(A) | streptomycin, ampicillin, chloramphenicol, ciprofloxacin I/R, nalidixic acid, sulfisoxazole, tetracycline  | Spectinomycin, Streptomycin, Amoxicillin, Ampicillin, Cephalothin, Piperacillin, Ticarcillin, Chloramphenicol, Nalidixic acid, Ciprofloxacin, Sulfamethoxazole, Doxycycline, Tetracycline | ColpVC, IncFIB(S), IncFII(S), IncI1-I(Alpha) | senterica_achtman_2 | 11 | 4785500 | 250423 | 41 |\n| SRR1952926 | Passed | blaTEM-57, gyrA (S83Y), tet(A) | ampicillin, ciprofloxacin I/R, nalidixic acid, tetracycline |      Amoxicillin, Ampicillin, Cephalothin, Piperacillin, Ticarcillin, Nalidixic acid, Ciprofloxacin, Doxycycline, Tetracycline | ColpVC, IncFIB(S), IncFII(S), IncI1-I(Alpha) | senterica_achtman_2 | 11 | 4785451 | 228311 | 40 | \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9251386297508348,
      "result": {
        "original_header": "Complex Mutations",
        "type": "Text_excerpt",
        "value": "Complex mutations describe multiple point mutations that must be simultaneously present in order to confer resistance. One such example is the multiple pbp5 mutations that must be present in Enterococcus faecium in order to confer ampicillin resistance. These complex mutations may be specified by the user using a TSV-formatted file with the following format: \nWhere `positions` is all the point mutations to group into the complex mutation (optional and mandatory), `mandatory` is all the point mutations that must be present for the complex mutation to be reported (`mandatory` is a subset of `positions`), and `phenotype` is the phenotype that is conferred when this set of mutations is present. To see a specific example of this, please look at the default `complex_mutations.tsv` file [included with StarAMR](staramr/databases/resistance/pointfinder/complex/data/complex_mutations.tsv). The mutation will be reported in the `pointfinder.tsv` file similar to as follows: \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9529360175141252,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "1. `summary.tsv`:  A summary of all detected AMR genes/mutations/plasmids/sequence type in each genome, one genome per line. A series of descriptive statistics is also provided for each genome as well as feedback for whether or not the genome passes several quality metrics and if not, feedback on why the genome fails.\n2. `detailed_summary.tsv`: A detailed summary of all detected AMR genes/mutations/plasmids/sequence type in each genome, one gene per line.\n3. `resfinder.tsv`: A tabular file of each AMR gene and additional BLAST information from the **ResFinder** database, one gene per line.\n4. `pointfinder.tsv`: A tabular file of each AMR point mutation and additional BLAST information from the **PointFinder** database, one gene per line.\n5. `plasmidfinder.tsv`: A tabular file of each AMR plasmid type and additional BLAST information from the **PlasmidFinder** database, one plasmid type per line.\n6. `mlst.tsv`: A tabular file of each multi-locus sequence type (MLST) and it's corresponding locus/alleles, one genome per line.\n7. `settings.txt`: The command-line, database versions, and other settings used to run `staramr`.\n8. `results.xlsx`: An Excel spreadsheet containing the previous 6 files as separate worksheets. \nIn addition, the directory `hits/` stores fasta files of the specific blast hits.\n \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8337349321983953,
      "result": {
        "original_header": "pointfinder.tsv",
        "type": "Text_excerpt",
        "value": "* __Isolate ID__: The id of the isolate/genome file(s) passed to `staramr`.\n* __Gene__: The particular AMR gene detected, with the point mutation within.\n* __Predicted Phenotype__: The predicted AMR phenotype (drug resistances) for this gene.\n* __CGE Predicted Phenotype__: The CGE-predicted AMR phenotype (drug resistances) for this gene.\n* __Type__: The type of this mutation from PointFinder (either **codon** or **nucleotide**).\n* __Position__: The position of the mutation. For **codon** type, the position is the codon number in the gene, for **nucleotide** type it is the nucleotide number.\n* __Mutation__: The particular mutation. For **codon** type lists the codon mutation, for **nucleotide** type lists the single nucleotide mutation.\n* __%Identity__: The % identity of the top BLAST HSP to the AMR gene.\n* __%Overlap__: The % overlap of the top BLAST HSP to the AMR gene (calculated as __hsp length/total length * 100__).\n* __HSP Length/Total Length__ The top BLAST HSP length over the AMR gene total length (nucleotides).\n* __Contig__: The contig id containing this AMR gene.\n* __Start__: The start of the AMR gene (will be greater than __End__ if on minus strand).\n* __End__: The end of the AMR gene.\n* __Pointfinder Position__: The Pointfinder-adjusted position, which may be off by one from the sequence position in the case of some indels.\n* __CGE Notes__: Any CGE notes associated with the prediction.\n* __CGE Required Mutation__: Any additional mutations that CGE predicts are required to confer the CGE predicted phenotype.\n* __CGE Mechanism__: The CGE-reported mechanism.\n* __CGE PMID__: The PMID ID associated with the CGE prediction. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8976190396906267,
      "result": {
        "original_header": "settings.txt",
        "type": "Text_excerpt",
        "value": "* __command_line__: The command line used to run `staramr`.\n* __version__: The version of `staramr`.\n* __start_time__,__end_time__,__total_minutes__: The start, end, and duration for running `staramr`.\n* __resfinder_db_dir__, __pointfinder_db_dir__, __plasmidfinder_db_dir__ : The directory containing the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_url__, __pointfinder_db_url__, __plasmidfinder_db_url__: The URL to the git repository for the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_commit__, __pointfinder_db_commit__, __plasmidfinder_db_commit__: The git commit ids for the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_date__, __pointfinder_db_date__, __plasmidfinder_db_date__: The date of the git commits of the ResFinder, PointFinder, and PlasmidFinder databases.\n* __mlst_version__: The version of `MLST`.\n* __pointfinder_gene_drug_version__, __resfinder_gene_drug_version__: A version identifier for the gene/drug mapping table used by `staramr`. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9624684806176498,
      "result": {
        "original_header": "hits/",
        "type": "Text_excerpt",
        "value": "The **hits/** directory contains the BLAST HSP nucleotides for the entries listed in the **resfinder.tsv** and **pointfinder.tsv** files. There are up to two files per input genome, one for ResFinder and one for PointFinder. \nFor example, with an input genome named **SRR1952908.fasta** there would be two files `hits/resfinder_SRR1952908.fasta` and `hits/pointfinder_SRR1952908.fasta`. These files contain mostly the same information as in the **resfinder.tsv**, **pointfinder.tsv**, and **plasmidfinder.tsv** files. Additional information is the **database_gene_start** and **database_gene_end** listing the start/end of the BLAST HSP on the AMR resistance gene from the ResFinder/PointFinder/PlasmidFinder databases.  \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728704485942058,
      "result": {
        "original_header": "Caveats",
        "type": "Text_excerpt",
        "value": "This software is still a work-in-progress.  In particular, not all organisms stored in the PointFinder database are supported (only *salmonella*, *campylobacter* are currently supported). Additionally, the predicted phenotypes are for microbiological resistance and *not* clinical resistance. Phenotype/drug resistance predictions are an experimental feature which is continually being improved. \n`staramr` only works on assembled genomes and not directly on reads. A quick genome assembler you could use is [Shovill][shovill]. Or, you may also wish to try out the [ResFinder webservice][resfinder-web],  or the command-line tools [rgi][] or [ariba][] which will work on sequence reads as well as genome assemblies.  You may also wish to check out the [CARD webservice][card-web]. \n \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9426866845626831,
      "result": {
        "original_header": "Legal",
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis work except in compliance with the License. You may obtain a copy of the\nLicense at: \nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/staramr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/doc/tutorial/staramr-tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/doc/tutorial/staramr-tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/scripts/data-conversion/resfinder-drug-resistance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/scripts/data-conversion/resfinder-drug-resistance.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/scripts/data-conversion/pointfinder-drug-resistance.ipynb"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/scripts/data-conversion/pointfinder-drug-resistance.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/staramr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phac-nml/staramr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staramr"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/settings_example.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/main_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/search_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/database_build_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/database_update_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/database_info_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/images/database_restore_command.png"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Separate conda environment",
        "parent_header": [
          "Installation",
          "Bioconda"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install `staramr` is through [Bioconda][bioconda] (we recommend using [mamba](https://mamba.readthedocs.io/) as an alternative to `conda`).\n\n```bash\nconda install mamba # Install mamba to make it easier to install later dependencies\nmamba create -c conda-forge -c bioconda -c defaults --name staramr staramr\n```\n\nThis will install the `staramr` software at the most recent version within the conda environment named `staramr`. Bioconda will install all necessary dependencies and databases. Once this is complete you can run:\n\n```bash\nconda activate staramr # Activate conda environment\nstaramr --help\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Same conda environment",
        "parent_header": [
          "Installation",
          "Bioconda"
        ],
        "type": "Text_excerpt",
        "value": "If, instead, you wish to install `staramr` to the current conda environment you can run:\n\n```bash\nmamba install -c conda-forge -c bioconda -c defaults staramr\n```\n\nYou should now be able to run `staramr --help` and recieve a usage statement.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "PyPI/Pip",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can also install `staramr` from [PyPI][pypi-staramr] using `pip`:\n\n```\npip install staramr\n```\n\nHowever, you will have to install the external dependencies (listed below) separately.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Latest Code",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you wish to make use of the latest in-development version of `staramr`, you may update directly from GitHub using `pip`:\n\n```bash\npip install git+https://github.com/phac-nml/staramr\n```\n\nThis will only install the Python code, you will still have to install the dependencies listed below (or run the `pip` command from the previously installed Bioconda environment).\n\nAlternatively, if you wish to do development with `staramr` you can use a Python virtual environment (you must still install the non-Python dependencies separately).\n\n```bash\n# Clone code\ngit clone https://github.com/phac-nml/staramr.git\ncd staramr\n\n# Setup virtual environment\nvirtualenv -p /path/to/python-bin .venv\nsource .venv/bin/activate\n\n# Install staramr. Use '-e' to update the install on code changes.\npip install -e .\n\n# Now run `staramr`\nstaramr\n```\n\nDue to the way we packaged the ResFinder/PointFinder/PlasmidFinder databases, the development code will not come with a default database. You must first build the database before usage. E.g.\n\n```\nstaramr db restore-default\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9116685078665624,
      "result": {
        "original_header": "List of genes to exclude",
        "type": "Text_excerpt",
        "value": "Please make sure to include `gene_id` in the first line. The default exclusion list can also be disabled with `--no-exclude-genes`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8880161533684042,
      "result": {
        "original_header": "settings.txt",
        "type": "Text_excerpt",
        "value": "* __command_line__: The command line used to run `staramr`.\n* __version__: The version of `staramr`.\n* __start_time__,__end_time__,__total_minutes__: The start, end, and duration for running `staramr`.\n* __resfinder_db_dir__, __pointfinder_db_dir__, __plasmidfinder_db_dir__ : The directory containing the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_url__, __pointfinder_db_url__, __plasmidfinder_db_url__: The URL to the git repository for the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_commit__, __pointfinder_db_commit__, __plasmidfinder_db_commit__: The git commit ids for the ResFinder, PointFinder, and PlasmidFinder databases.\n* __resfinder_db_date__, __pointfinder_db_date__, __plasmidfinder_db_date__: The date of the git commits of the ResFinder, PointFinder, and PlasmidFinder databases.\n* __mlst_version__: The version of `MLST`.\n* __pointfinder_gene_drug_version__, __resfinder_gene_drug_version__: A version identifier for the gene/drug mapping table used by `staramr`. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9853824764288311,
      "result": {
        "original_header": "Legal",
        "type": "Text_excerpt",
        "value": "Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis work except in compliance with the License. You may obtain a copy of the\nLicense at: \nhttp://www.apache.org/licenses/LICENSE-2.0 \n[resfinder-db]: https://bitbucket.org/genomicepidemiology/resfinder_db\n[pointfinder-db]: https://bitbucket.org/genomicepidemiology/pointfinder_db\n[plasmidfinder-db]:https://bitbucket.org/genomicepidemiology/plasmidfinder_db\n[resfinder-web]: https://cge.cbs.dtu.dk/services/ResFinder/\n[resfinder-cite]: https://dx.doi.org/10.1093/jac/dks261\n[pointfinder-cite]: https://doi.org/10.1093/jac/dkx217\n[plasmidfinder-cite]: https://doi.org/10.1128/AAC.02412-14\n[mlst-cite]: https://doi.org/10.12688/wellcomeopenres.14826.1\n[Bioconda]: https://bioconda.github.io/\n[requirements.txt]: requirements.txt\n[resfinder-git]: https://bitbucket.org/genomicepidemiology/resfinder\n[pointfinder-git]: https://bitbucket.org/genomicepidemiology/pointfinder-3.0\n[plasmidfinder-git]: https://bitbucket.org/genomicepidemiology/plasmidfinder\n[abricate]: https://github.com/tseemann/abricate\n[sistr_cmd]: https://github.com/phac-nml/sistr_cmd\n[shovill]: https://github.com/tseemann/shovill\n[ariba]: https://github.com/sanger-pathogens/ariba\n[rgi]: https://github.com/arpcard/rgi\n[pypi-staramr]: https://pypi.org/project/staramr/\n[bioconda]: https://bioconda.github.io/\n[card-web]: https://card.mcmaster.ca/\n[tutorial]: doc/tutorial/staramr-tutorial.ipynb\n[genes_to_exclude.tsv]: staramr/databases/exclude/data/genes_to_exclude.tsv\n[MLST]: https://github.com/tseemann/mlst\n \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "detailed_summary.tsv",
        "type": "Text_excerpt",
        "value": "### Example \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8005839070424878,
      "result": {
        "original_header": "settings.txt",
        "type": "Text_excerpt",
        "value": "The **settings.txt** file contains the particular settings used to run `staramr`. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/staramr/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "antimicrobial-resistance, bioinformatics, genomics"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 Public Health Agency of Canada\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staramr"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phac-nml"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 562837,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 38795,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 177,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mamba.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2023-08-24T14:27:23Z",
        "date_published": "2023-08-24T21:45:12Z",
        "description": "* Updated the Plasmidfinder database to use the January 18th 2023 release.\r\n* Fixed an issue where the string \"None\" in the drug table would be parsed differently by different versions of pandas (#175).\r\n* Upgraded to pandas version 2.\r\n* Added the CGE-predicted phenotypes, PMID, Mechanism, and the Required Mutation columns to the Pointfinder output.\r\n* The resfinder.tsv and pointfinder.tsv outputs now contain a Notes column.\r\n* Updated the help description of the --mlst-scheme parameter to include a more useful link for available schemas.\r\n* Switched to only officially supporting Python 3.7+ due to recent incompatibilities with Python 3.6 and some Python packages (numpy, biopython, and others).\r\n* Adds the ability to handle \"complex\" pbp5 mutations. When appriopriate many pbp5 point mutations will be reported as a single mutation.\r\n* Resfinder CGE-predicted phenotypes are now reported in the summary and detailed summary alongside existing predictions.\r\n* Corrected a typo in the position for acrB in the PointFinder drug key table.\r\n* Removed \"enterobacteriaceae\" from the list of supported PlasmindFinder databases.\r\n* Changed the word sensitive to susceptible in outputs.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.10.0",
        "name": "0.10.0",
        "release_id": 118633226,
        "tag": "0.10.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/118633226",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/118633226",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2022-10-26T21:27:16Z",
        "date_published": "2022-10-28T21:10:52Z",
        "description": "* Fixed a bug that occured when parsing some plasmid FASTA record IDs ([PR 159](https://github.com/phac-nml/staramr/pull/159)).\r\n* Fixed issue where sometimes the extraction of error messages from `makeblastdb` was crashing leading to less useful errors ([PR 160](https://github.com/phac-nml/staramr/pull/160)).",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.9.1",
        "name": "0.9.1",
        "release_id": 81411006,
        "tag": "0.9.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/81411006",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/81411006",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2022-10-18T14:35:07Z",
        "date_published": "2022-10-18T14:52:43Z",
        "description": "* Updates to PointFinder database handling\r\n    * Adds the ability to handle promoters (regions with both promoter nucleotide information and non-promoter codon information)\r\n    * Adds handling of insertions and deletions in nucleotide and codon sequence\r\n    * Updates list of supported PointFinder species to `salmonella`, `campylobacter`, `enterococcus_faecalis`, `enterococcus_faecium`, `escherichia_coli`, `helicobacter_pylori`.\r\n* Switch name `e.coli` to `escherichia_coli` in PointFinder gene-drug key to match organism name in PointFinder database.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 80220819,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/80220819",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/80220819",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2022-05-31T19:50:38Z",
        "date_published": "2022-05-31T20:45:49Z",
        "description": "* Fixed issue when using older version of pandas (#136) (0.8.0.dev0).\r\n* Fixed up some Python warnings related to pandas (0.8.0.dev0).\r\n* Adjusted `mlst` tests to account for differences in results for newer versions (0.8.0.dev0).\r\n* Drop support for Python 3.5 as it leads to issues with managing dependency versions (0.8.0.dev0).\r\n* Switched from disallowing to generating a warning when the PointFinder organism is not one of the validated organisms (0.8.0.dev1).\r\n* Updated ResFinder and PointFinder gene drug key to `072621` (0.8.0.dev2).\r\n* Updated default database commits to those corresponding to dates used by ResFinder (2022-05-24), PointFinder (2021-02-01), and PlasmidFinder (2021-11-29) (0.8.0.dev2).\r\n* Fixed issue when multiple matches for same amino acid change to try and select the most specific amino acid change (0.8.0.dev2).\r\n* Fixed up PlasmidFinder database handling to account for changes to PlasmidFinder database structure (0.8.0.dev2).",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 68286187,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/68286187",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/68286187",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2022-01-17T22:16:18Z",
        "date_published": "2022-01-17T22:20:27Z",
        "description": "The code for this release is identical to `0.7.2` but is being re-released so it automatically integrates into [Zenodo](https://zenodo.org/).\r\n\r\nThere are a few non-code changes:\r\n\r\n* Continuous integration tests have been migrated from TravisCI to GitHub Actions\r\n* `README.md` has been updated to include more detailed installation instructions.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.7.2.zenodo0",
        "name": "Re-release of 0.7.2 for Zenodo",
        "release_id": 57325045,
        "tag": "0.7.2.zenodo0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.7.2.zenodo0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/57325045",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/57325045",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.7.2.zenodo0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2020-10-13T15:29:42Z",
        "date_published": "2020-10-13T15:46:12Z",
        "description": "* Fixed KeyError issue with later versions of pandas (#115, thanks @javiertognarelli).",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.7.2",
        "name": "0.7.2",
        "release_id": 32517572,
        "tag": "0.7.2",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/32517572",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/32517572",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Takadonet",
          "type": "User"
        },
        "date_created": "2019-12-17T22:26:30Z",
        "date_published": "2019-12-18T14:15:14Z",
        "description": "* Fix a bug so that the Sequence column in resfinder.tsv uses the isolate sequence instead of the reference sequence",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.7.1",
        "release_id": 22323948,
        "tag": "0.7.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.7.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/22323948",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/22323948",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.7.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Takadonet",
          "type": "User"
        },
        "date_created": "2019-11-21T19:19:01Z",
        "date_published": "2019-11-21T20:16:40Z",
        "description": "* Added quality module that adds PASS/Fail column and detail information in Summary.tsv\r\n* Added following new optional arguments for Search.py\r\n  - --genome-size-lower-bound\r\n  - --genome-size-upper-bound\r\n  - --minimum-N50-value\r\n  - --minimum-contig-length\r\n  - --unacceptable-number-contigs\r\n* Add DNA column in Resfinder report",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 21667088,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/21667088",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/21667088",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-09-27T19:21:26Z",
        "date_published": "2019-09-27T22:09:32Z",
        "description": "* Added `--output-mlst` in Search.py",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.6.1",
        "name": "0.6.1",
        "release_id": 20320944,
        "tag": "0.6.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/20320944",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/20320944",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-09-12T16:56:53Z",
        "date_published": "2019-09-12T18:14:32Z",
        "description": "* Added [coloredlogs](https://pypi.org/project/coloredlogs/) library to format the output\r\n* Added support for [MLST](https://github.com/tseemann/mlst)",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 19952344,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/19952344",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/19952344",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-05-09T17:59:05Z",
        "date_published": "2019-05-09T18:14:03Z",
        "description": "* Renamed the following columns for clarification:\r\n    - `Plasmid Genes` to `Plasmid` in Summary table.\r\n    - `Gene` to `Plasmid` in PlasmidFinder table.\r\n    - `Gene` to `Gene/Plasmid` in Detailed Summary table.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.5.1",
        "release_id": 17258291,
        "tag": "0.5.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/17258291",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/17258291",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-04-16T19:45:26Z",
        "date_published": "2019-04-16T20:52:58Z",
        "description": "* Add support for scanning against the PlasmidFinder database.\r\n* Upgraded the testing package to use [Green test runner](https://github.com/CleanCut/green).\r\n* Added Detailed_Summary table which combines results from Resfinder, Pointfinder (optional), and Plasmidfinder.\r\n* Added `--ignore-invalid-files` command and check for duplicate sequence ids.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.5.0",
        "release_id": 16806702,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/16806702",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/16806702",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-02-14T18:36:57Z",
        "date_published": "2019-02-14T18:52:46Z",
        "description": "* Add support for campylobacter from PointFinder database.\r\n* Fix `read_table` deprecation warnings by replacing `read_table` with `read_csv`.\r\n* Handling issue with name of `16S` gene in PointFinder database for salmonella.\r\n* Refactoring and simplifying some of the git ResFinder/PointFinder database code.\r\n* Added automated type checking with [mypy](https://mypy.readthedocs.io).",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.4.0",
        "release_id": 15567446,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/15567446",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/15567446",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2018-11-14T19:15:45Z",
        "date_published": "2018-11-14T20:27:50Z",
        "description": "* Exclusion of `aac(6')-Iaa` from results by default. Added ability to override this with `--no-exclude-genes` or pass a custom list of genes to exclude from results with `--exclude-genes-file`.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.3.0",
        "release_id": 14007772,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/14007772",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/14007772",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2018-08-13T18:56:12Z",
        "date_published": "2018-08-13T19:14:26Z",
        "description": "* Fix issue where staramr crashes if an input contig id is a number.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.2.2",
        "release_id": 12383633,
        "tag": "0.2.2",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/12383633",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/12383633",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2018-07-19T15:02:14Z",
        "date_published": "2018-07-19T17:58:53Z",
        "description": "* Minor\r\n    * Updating default ResFinder/PointFinder databases to version from July 2018.\r\n    * Fix regex extracting gene/variant/accession values from ResFinder/PointFinder databases.\r\n    * Fixing a few entries in table mapping genes to phenotypes.\r\n    * Print stderr for errors with `makeblastdb`",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.2.1",
        "release_id": 12013146,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/12013146",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/12013146",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2018-06-05T18:31:55Z",
        "date_published": "2018-06-05T19:03:02Z",
        "description": "* Major\r\n    * Inclusion of predicted resistances to antimicrobial drugs thanks to gene/drug mappings from the NARMS/CIPARS Molecular Working Group. Resistance predictions are microbiological resistances and not clinical resistances (issue #4, #6).\r\n    * Adding a `staramr db restore-default` command to restore the default `staramr` database (issue #3).\r\n    * Switched to using BLAST Tabular data + pandas to read BLAST results (issue #10).\r\n    * Inverted direction of BLAST (we now BLAST the AMR gene files against the input genomes).\r\n* Minor\r\n    * Less verbose messages when encountering errors parsing the command-line options.\r\n    * Able to support adding options after a list of files (e.g., `staramr search *.fasta -h` will print help docs).\r\n    * Switched to including negative AMR results (samples with no AMR genes) by default.  Must now use parameter `--exclude-negatives` to exclude them (issue #2).\r\n    * Only print 2 decimals in Excel output (issue #5).\r\n    * Automatically adjust Excel cells to better fit text (issue #7).\r\n    * Many other coding improvements (issue #11, #13 and others).",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.2.0",
        "release_id": 11335526,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/11335526",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/11335526",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2018-04-17T20:16:50Z",
        "date_published": "2018-04-17T22:39:48Z",
        "description": "* Initial release. Supports batch scanning against the ResFinder and PointFinder databases.",
        "html_url": "https://github.com/phac-nml/staramr/releases/tag/0.1.0",
        "release_id": 10594182,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/staramr/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/staramr/releases/10594182",
        "value": "https://api.github.com/repos/phac-nml/staramr/releases/10594182",
        "zipball_url": "https://api.github.com/repos/phac-nml/staramr/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Python 3.7+\n* BLAST+\n* Git\n* MLST\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:11:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 116
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Search contigs",
        "parent_header": [
          "Quick Usage"
        ],
        "type": "Text_excerpt",
        "value": "To search a list of contigs (in **fasta** format) for AMR genes using ResFinder please run:\n\n```bash\nstaramr search -o out *.fasta\n```\n\nOutput files will be located in the directory `out/`.\n\nTo include acquired point-mutation resistances using PointFinder, please run:\n\n ```bash\nstaramr search --pointfinder-organism salmonella -o out *.fasta\n```\n\nWhere `--pointfinder-organism` is the specific organism you are interested in (currently only *salmonella*, *campylobacter*, *enterococcus faecalis* and *enterococcus faecium* are supported).\n\nTo specify which PlasmidFinder database to use, please run:\n\n```bash\nstaramr search --plasmidfinder-database-type enterobacteriaceae -o out *.fasta\n```\nWhere `--plasmidfinder-database-type` is the specific database type you are interested in (currently only *gram_positive*, *enterobacteriaceae* are supported). By default, both databases are used.\n\nTo specify which MLST scheme to use, please run:\n\n```bash\nstaramr search -o out --mlst-scheme senterica *.fasta\n```\n\nWhere `--mlst-scheme` is the specific organism you are interested in (please visit the [scheme genus map](https://github.com/tseemann/mlst/blob/master/db/scheme_species_map.tab) to see which are available). By default, it detects the scheme automatically.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Database Info",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To print information about the installed databases, please run:\n\n```\nstaramr db info\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Update Database",
        "parent_header": [
          "Quick Usage"
        ],
        "type": "Text_excerpt",
        "value": "If you wish to update to the latest ResFinder, PointFinder, and PlasmidFinder databases, you may run:\n\n```bash\nstaramr db update --update-default\n```\n\nIf you wish to switch to specific git commits of either ResFinder, PointFinder, or PlasmidFinder databases you may also pass `--resfinder-commit [COMMIT]`, `--pointfinder-commit [COMMIT]`, and `--plasmidfinder-commit [COMMIT]`.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Restore Database",
        "parent_header": [
          "Quick Usage"
        ],
        "type": "Text_excerpt",
        "value": "If you have updated the ResFinder/PointFinder/PlasmidFinder databases and wish to restore to the default version, you may run:\n\n```\nstaramr db restore-default\n```\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "Output",
          "hits/"
        ],
        "type": "Text_excerpt",
        "value": "| Isolate ID | Quality Module | Genotype | Predicted Phenotype | CGE Predicted Phenotype | Plasmid | Scheme | Sequence Type | Genome Length | N50 value | Number of Contigs Greater Than Or Equal To 300 bp | Quality Module Feedback |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| SRR1952908 | Passed | aadA1, aadA2, blaTEM-57, cmlA1, gyrA (S83Y), sul3, tet(A) | streptomycin, ampicillin, chloramphenicol, ciprofloxacin I/R, nalidixic acid, sulfisoxazole, tetracycline  | Spectinomycin, Streptomycin, Amoxicillin, Ampicillin, Cephalothin, Piperacillin, Ticarcillin, Chloramphenicol, Nalidixic acid, Ciprofloxacin, Sulfamethoxazole, Doxycycline, Tetracycline | ColpVC, IncFIB(S), IncFII(S), IncI1-I(Alpha) | senterica_achtman_2 | 11 | 4785500 | 250423 | 41 |\n| SRR1952926 | Passed | blaTEM-57, gyrA (S83Y), tet(A) | ampicillin, ciprofloxacin I/R, nalidixic acid, tetracycline |      Amoxicillin, Ampicillin, Cephalothin, Piperacillin, Ticarcillin, Nalidixic acid, Ciprofloxacin, Doxycycline, Tetracycline | ColpVC, IncFIB(S), IncFII(S), IncI1-I(Alpha) | senterica_achtman_2 | 11 | 4785451 | 228311 | 40 |\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "type": "Text_excerpt",
        "value": "A tutorial guiding you though the usage of `staramr`, interpreting the results, and comparing with antimicrobial resistances available on NCBI can be found at [staramr tutorial][tutorial].\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Main Command",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Main `staramr` command. Can be used to set global options (primarily `--verbose`).\n\n![Main Command](images/main_command.png)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Search",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Searches input FASTA files for AMR genes.\n\n![Search Command](images/search_command.png)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Database Build",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Downloads and builds the ResFinder, PointFinder, and PlasmidFinder databases.\n\n![Database Build Command](images/database_build_command.png)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Database Update",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Updates an existing download of the ResFinder, PointFinder, and PlasmidFinder databases.\n\n![Database Update Command](images/database_update_command.png)\n\n## Database Info\n\nPrints information about an existing build of the ResFinder/PointFinder/PlasmidFinder databases.\n\n![Database Info Command](images/database_info_command.png)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Database Restore Default",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Restores the default database for `staramr`.\n\n![Database Restore Default Command](images/database_restore_command.png)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/staramr/development/README.md",
      "technique": "header_analysis"
    }
  ]
}