{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "If you find this tool useful, please cite as:\n\n.. epigraph::\n\n\tThe *Salmonella In Silico* Typing Resource (SISTR): an open web-accessible tool for rapidly typing and subtyping draft *Salmonella* genome assemblies. Catherine Yoshida, Peter Kruczkiewicz, Chad R. Laing, Erika J. Lingohr, Victor P.J. Gannon, John H.E. Nash, Eduardo N. Taboada. PLoS ONE 11(1): e0147101. doi: 10.1371/journal.pone.0147101\n\n\t-- Paper Link: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0147101\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BibTeX",
        "parent_header": [
          "Citation"
        ],
        "type": "Text_excerpt",
        "value": ".. code-block:: none\n\n\t@article{Yoshida2016,\n\t\tdoi = {10.1371/journal.pone.0147101},\n\t\turl = {http://dx.doi.org/10.1371/journal.pone.0147101},\n\t\tyear  = {2016},\n\t\tmonth = {jan},\n\t\tpublisher = {Public Library of Science ({PLoS})},\n\t\tvolume = {11},\n\t\tnumber = {1},\n\t\tpages = {e0147101},\n\t\tauthor = {Catherine E. Yoshida and Peter Kruczkiewicz and Chad R. Laing and Erika J. Lingohr and Victor P. J. Gannon and John H. E. Nash and Eduardo N. Taboada},\n\t\teditor = {Michael Hensel},\n\t\ttitle = {The Salmonella In Silico Typing Resource ({SISTR}): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies},\n\t\tjournal = {{PLOS} {ONE}}\n\t}\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Catherine E. Yoshida and Peter Kruczkiewicz and Chad R. Laing and Erika J. Lingohr and Victor P. J. Gannon and John H. E. Nash and Eduardo N. Taboada",
        "doi": "10.1371/journal.pone.0147101",
        "format": "bibtex",
        "title": "The Salmonella In Silico Typing Resource ({SISTR}): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies",
        "type": "Text_excerpt",
        "url": "http://dx.doi.org/10.1371/journal.pone.0147101",
        "value": "@article{Yoshida2016,\n    journal = {{PLOS} {ONE}},\n    title = {The Salmonella In Silico Typing Resource ({SISTR}): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies},\n    editor = {Michael Hensel},\n    author = {Catherine E. Yoshida and Peter Kruczkiewicz and Chad R. Laing and Erika J. Lingohr and Victor P. J. Gannon and John H. E. Nash and Eduardo N. Taboada},\n    pages = {e0147101},\n    number = {1},\n    volume = {11},\n    publisher = {Public Library of Science ({PLoS})},\n    month = {jan},\n    year = {2016},\n    url = {http://dx.doi.org/10.1371/journal.pone.0147101},\n    doi = {10.1371/journal.pone.0147101},\n}"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/sistr_cmd"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-03-02T09:56:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-11T01:33:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SISTR (Salmonella In Silico Typing Resource) command-line tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.86373479320678,
      "result": {
        "original_header": "cgMLST allele search results",
        "type": "Text_excerpt",
        "value": "You can produce in-depth allele search results with the ``-a``/``--alleles-output`` commandline argument.\nThese results may be useful for understanding unexpected or low confidence serovar predictions. \n.. code-block:: json\n\t\n\t{\n\t\t<genome name>: {\n\t\t\t// for each \n\t\t\t<cgMLST marker id>: {\n\t\t\t\t// top blast result on largest contig\n\t\t\t\tblast_result: {\n\t\t\t\t\t// perfect match to a previously identified allele?\n\t\t\t\t\t\"is_perfect\": boolean,\n\t\t\t\t\t// blastn subject sequence length\n\t\t\t\t\t\"slen\": integer,\n\t\t\t\t\t// blastn percent identity\n\t\t\t\t\t\"pident\": numeric,\n\t\t\t\t\t// cgMLST marker name\n\t\t\t\t\t\"marker\": string,\n\t\t\t\t\t// blastn query sequence id\n\t\t\t\t\t\"qseqid\": string,\n\t\t\t\t\t// blastn query sequence start index\n\t\t\t\t\t\"qstart\": integer,\n\t\t\t\t\t// is match truncated by end of sequence? \n\t\t\t\t\t\"is_trunc\": boolean,\n\t\t\t\t\t// number of MSA gaps in subject sequence\n\t\t\t\t\t\"sseq_msa_gaps\": integer,\n\t\t\t\t\t// blastn subject sequence\n\t\t\t\t\t\"sseq\": string,\n\t\t\t\t\t// blastn bitscore\n\t\t\t\t\t\"bitscore\": numeric,\n\t\t\t\t\t// proportion of subject sequence MSA with gaps\n\t\t\t\t\t\"sseq_msa_p_gaps\": numeric,\n\t\t\t\t\t// blastn E-value\n\t\t\t\t\t\"evalue\": numeric,\n\t\t\t\t\t// blastn gap open\n\t\t\t\t\t\"gapopen\": integer,\n\t\t\t\t\t// blastn subject sequence end index\n\t\t\t\t\t\"send\": integer,\n\t\t\t\t\t// does this allele have a perfect match?\n\t\t\t\t\t\"has_perfect_match\": boolean,\n\t\t\t\t\t// matching allele name\n\t\t\t\t\t\"allele\": integer,\n\t\t\t\t\t// subject sequence start index\n\t\t\t\t\t\"sstart\": integer,\n\t\t\t\t\t// extracted allele name (CRC32 of subject nucleotide sequence)\n\t\t\t\t\t\"allele_name\": integer,\n\t\t\t\t\t// adjusted subject sequence start index\n\t\t\t\t\t\"start_idx\": numeric,\n\t\t\t\t\t// blastn query end index\n\t\t\t\t\t\"qend\": integer,\n\t\t\t\t\t// did the extracted allele sequence need to be reverse complemented?\n\t\t\t\t\t\"needs_revcomp\": boolean,\n\t\t\t\t\t// did the extracted allele sequence need to be extended to match the length of the query sequence?\n\t\t\t\t\t\"is_extended\": boolean,\n\t\t\t\t\t// blastn number of mismatches\n\t\t\t\t\t\"mismatch\": integer,\n\t\t\t\t\t// extracted allele coverage i.e. (length of extracted allele) / (length of closest matching allele)\n\t\t\t\t\t\"coverage\": numeric,\n\t\t\t\t\t// too many gaps within the MSA of extracted allele sequence and closest matching allele?\n\t\t\t\t\t\"too_many_gaps\": boolean,\n\t\t\t\t\t// adjusted subject end index\n\t\t\t\t\t\"end_idx\": numeric,\n\t\t\t\t\t// is extracted allele truncated by end of sequence? \n\t\t\t\t\t\"trunc\": boolean,\n\t\t\t\t\t// blastn subject sequence title\n\t\t\t\t\t\"stitle\": string,\n\t\t\t\t\t// blastn query sequence length\n\t\t\t\t\t\"qlen\": integer,\n\t\t\t\t\t// valid allele match found?\n\t\t\t\t\t\"is_match\": true,\n\t\t\t\t\t// blastn alignment length\n\t\t\t\t\t\"length\": integer\n\t\t\t\t},\n\t\t\t\t// CRC32 unsigned 32-bit integer allele name from allele sequence\n\t\t\t\t\"name\": integer,\n\t\t\t\t// extracted allele sequence\n\t\t\t\t\"seq\": string\n\t\t\t}\n\t\t\t\n\t\t}} \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9912929775526654,
      "result": {
        "original_header": "cgMLST allelic profiles output (`--cgmlst-profiles cgmlst-profiles.csv`)",
        "type": "Text_excerpt",
        "value": "With the ``-p``/``--cgmlst-profiles`` commandline argument, you can output the 330 loci cgMLST allelic profiles for your input genomes (i.e. the allele designation for each cgMLST locus for each input genome). \nYou can use this information to construct phylogenetic trees from this data using a tool such as `Phyloviz Online <https://online.phyloviz.net/index>`_. \nThis type of analysis may be useful to explore why unexpected serovar prediction results were generated (e.g. your genomes are genetically very different from each other).  \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.974996485035806,
      "result": {
        "original_header": "QC by `sistr_cmd` (`--qc`)",
        "type": "Text_excerpt",
        "value": "\tFAIL: Large number of cgMLST330 loci missing (n=272 > 30)\n\tFAIL: Wzx/Wzy genes missing. Cannot determine O-antigen group/serogroup. Cannot accurately predict serovar from antigen genes.\n\tWARNING: H1 antigen gene (fliC) missing. Cannot determine H1 antigen. Cannot accurately predict serovar from antigen genes.\n\tWARNING: Input genome size (699860 bp) not within expected range of 4000000-6000000 (bp) for Salmonella\n\tWARNING: Only matched 57 cgMLST330 loci. Min threshold for confident serovar prediction from cgMLST is 297.0 \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8664797477622361,
      "result": {
        "original_header": "Galaxy workflows",
        "type": "Text_excerpt",
        "value": "\n- `Galaxy-Workflow-Assembly-Serotyping-withReport-for-SISTR_v1.1.1+galaxy1-recipe.ga <https://github.com/phac-nml/sistr_cmd/tree/master/galaxy/Galaxy-Workflow-Assembly-Serotyping-withReport-for-SISTR_v1.1.1+galaxy1-recipe.ga>`_\n\t+ Summary: Assembles genomes from raw reads, performs serotyping and generates overall report\n\t+ Uses tool dependencies: ``sistr 1.1.1+galaxy1``, ``shovill 1.0.4+galaxy1`` and ``tp_cat 0.1.0`` \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8653499974482316,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "Pull requests for feature additions and bug fixes welcome! \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9603863233749907,
      "result": {
        "type": "Text_excerpt",
        "value": "Serovar predictions from whole-genome sequence assemblies by determination of antigen gene and cgMLST gene alleles using BLAST.\n`Mash MinHash `_ can also be used for serovar prediction. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/phac-nml/sistr_cmd/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "phac-nml/sistr_cmd"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using Conda [Recommended]",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can install ``sistr_cmd`` using `Conda <https://conda.io/miniconda.html>`_ from the `BioConda channel <https://bioconda.github.io/>`_:\n\n.. code-block:: bash\n\n\t# Install conda. Miniconda is recommended if you don't have Conda installed already\n\t# see https://conda.io/miniconda.html\n\t# Add Bioconda channel and other channels https://bioconda.github.io/#set-up-channels\n\tconda config --add channels conda-forge\n\tconda config --add channels defaults\n\tconda config --add channels r\n\tconda config --add channels bioconda\n\t# Install sistr_cmd and its dependencies\n\tconda install sistr_cmd\n\t# sistr_cmd should be installed in your $PATH\n\tsistr --help\n\nInstalling ``sistr_cmd`` is recommended for the least amount of headache since Conda will ensure that all necessary external dependencies are installed along with ``sistr_cmd`` (i.e. ``blast+``, ``mafft``, ``mash``). This will also help you get ``sistr_cmd`` running on older systems (e.g. CentOS 5) or where you may not have many user privileges. \n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `pip`",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can install ``sistr_cmd`` using ``pip``:\n\n.. code-block:: bash\n\n\tpip install sistr_cmd\n\n\n``sistr_cmd`` is available from PYPI at https://pypi.python.org/pypi/sistr-cmd\n\n**NOTE:** You will need to ensure that external dependencies are installed (i.e. ``blast+``, ``mafft``, ``mash`` [optionally])\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using `setup.py`",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can install ``sistr_cmd`` directly from the source code:\n\n.. code-block:: bash\n\n\tpython setup.py install\n\n**NOTE:** If you run into ``pycurl`` library installation issues, you can try to resolve them by installing system dependencies via a package manager such as ``apt`` (``apt install python3-pycurl libcurl4-openssl-dev libssl-dev``)\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Web application",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "SISTR can be publically accessed as a web application via:\n\n- Galaxy EU instance at https://usegalaxy.eu/root?tool_id=sistr_cmd |galaxy|\n- Render.com Cloud Hosting Platform-as-a-Service (PaaS) hosts a **DEMO** SISTR web application https://sistr-app.onrender.com/ |render|\n**NOTE:** The SISTR web application hosted on Render.com might take up to 20 seconds to load on the first run and will shutdown after 15 min of inactivity\n\nSISTR web application source code is available at https://github.com/phac-nml/sistr-web-app allowing easy web interface deployment on any infrastructure types (on-premises, cloud/remote). \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.978008468416159,
      "result": {
        "original_header": "Primary results output (`-o sistr-results`)",
        "type": "Text_excerpt",
        "value": ".. code-block:: tab\n\t\n\tcgmlst_ST\tcgmlst_distance\tcgmlst_genome_match\tcgmlst_matching_alleles\tcgmlst_subspecies\tfasta_filepath\tgenome\th1\th2\to_antigen\tqc_messages\tqc_status\tserogroup\tserovar\tserovar_antigen\tserovar_cgmlst\n\t660408169\t0.00909090909091\tLT2\t327\tenterica\t/home/peter/Downloads/sistr-LT2-example/LT2.fasta\tLT2\ti\t1,2\t1,4,[5],12\t\tPASS\tB\tTyphimurium\tTyphimurium\tTyphimurium \n\tcgmlst_ST,cgmlst_distance,cgmlst_genome_match,cgmlst_matching_alleles,cgmlst_subspecies,fasta_filepath,genome,h1,h2,o_antigen,qc_messages,qc_status,serogroup,serovar,serovar_antigen,serovar_cgmlst\n\t660408169,0.00909090909091,LT2,327,enterica,/home/peter/Downloads/sistr-LT2-example/LT2.fasta,LT2,i,\"1,2\",\"1,4,[5],12\",,PASS,B,Typhimurium,Typhimurium,Typhimurium \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8970532846379856,
      "result": {
        "original_header": "QC by `sistr_cmd` (`--qc`)",
        "type": "Text_excerpt",
        "value": "The ``qc_status`` field should contain a value of ``PASS`` if your genome passes all QC checks, otherwise, it will be ``WARNING`` or ``FAIL`` if there are issues with your results and/or input genome sequence. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9436816637337566,
      "result": {
        "original_header": "Galaxy workflows",
        "type": "Text_excerpt",
        "value": "The `galaxy <https://github.com/phac-nml/sistr_cmd/tree/master/galaxy>`_ folder contains Galaxy Project SISTR workflows that allow to process samples in large batches. \n\n- `Galaxy-Workflow-Assembly-Serotyping-withReport-for-SISTR_v1.1.1+galaxy1-recipe.ga <https://github.com/phac-nml/sistr_cmd/tree/master/galaxy/Galaxy-Workflow-Assembly-Serotyping-withReport-for-SISTR_v1.1.1+galaxy1-recipe.ga>`_\n\t+ Summary: Assembles genomes from raw reads, performs serotyping and generates overall report\n\t+ Uses tool dependencies: ``sistr 1.1.1+galaxy1``, ``shovill 1.0.4+galaxy1`` and ``tp_cat 0.1.0`` \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9290575157416583,
      "result": {
        "original_header": "Issues",
        "type": "Text_excerpt",
        "value": "If you encounter any problems or have any questions feel free to create an issue anonymously or not to let us know so we can address it! \nFeature requests and pull requests are welcome! \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9642546182796281,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": ".. code-block:: bash\n\t\n\tgit clone https://github.com/phac-nml/sistr_cmd.git\n\tcd sistr_cmd/\n\texport PYTHONPATH=$(pwd)\n\t# run tests\n\tpy.test tests/ \nPull requests for feature additions and bug fixes welcome! \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9840803868612793,
      "result": {
        "original_header": "Using `sistr_cmd` in your Python application",
        "type": "Text_excerpt",
        "value": "Want to use ``sistr_cmd`` directly in your Python application? \nInstall ``sistr_cmd`` using pip or Conda. \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.994792068266967,
      "result": {
        "type": "Text_excerpt",
        "value": ".. |pypi| image:: https://badge.fury.io/py/sistr-cmd.svg\n    :target: https://pypi.python.org/pypi/sistr-cmd/\n.. |license| image:: https://img.shields.io/github/license/phac-nml/sistr_cmd\n\t:target: https://www.apache.org/licenses/LICENSE-2.0\n.. |galaxy| image:: https://img.shields.io/badge/usegalaxy-.eu-brightgreen\n\t:target: https://usegalaxy.eu/root?tool_id=sistr_cmd\t\n.. |nbsp| unicode:: 0xA0 \n   :trim:\n.. |render| image:: https://img.shields.io/badge/render.com-deployed-brightgreen\n   :target: https://sistr-app.onrender.com/\n   :alt: web app deployed on Render.com Cloud Hosting \n\t`Latest stable version `_ \n\n*Don't want to use a command-line app?* Try the `SISTR web app `_ deployed on Galaxy and Render.com platforms \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8339850757385678,
      "result": {
        "original_header": "`sistr_cmd` Output",
        "type": "Text_excerpt",
        "value": "- primary results output \n\t+ serovar prediction, cgMLST results, Mash results\n\t+ format (``-f <format>``): ``tab``, ``csv``, ``json``, ``pickle``\n\t+ ``-o sistr-results``\n- cgMLST allele results\n\t+ in-depth allele search results for each input genome for each cgMLST locus (330 loci in total)\n\t+ includes extracted allele sequences, top ``blastn`` results and summarized ``mafft`` results\n\t+ format: JSON\n\t+ ``-a allele-results.json``\n- cgMLST allelic profiles\n\t+ table of allele designations for each genome for each cgMLST locus\n\t+ row names: genome names\n\t+ column names: cgMLST marker names\n\t+ format: CSV\n\t+ ``--cgmlst-profiles cgmlst-profiles.csv`` \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8476848498688982,
      "result": {
        "original_header": "Primary results output (`-o sistr-results`)",
        "type": "Text_excerpt",
        "value": "Tab-delimited results output (``-f tab``): \nCSV results output (``-f csv``): \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8356668049458257,
      "result": {
        "original_header": "cgMLST allelic profiles output (`--cgmlst-profiles cgmlst-profiles.csv`)",
        "type": "Text_excerpt",
        "value": ".. csv-table:: \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8625315354730894,
      "result": {
        "original_header": "Primary results output (`-o sistr-results`)",
        "type": "Text_excerpt",
        "value": "\nJSON results output: \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8525802106790981,
      "result": {
        "original_header": "cgMLST allele search results",
        "type": "Text_excerpt",
        "value": "Example:\n~~~~~~~~ \nHere's some truncated example allele search results output: \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8761830702496823,
      "result": {
        "original_header": "cgMLST allelic profiles output (`--cgmlst-profiles cgmlst-profiles.csv`)",
        "type": "Text_excerpt",
        "value": "Example truncated cgMLST profiles output: \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8944791582782499,
      "result": {
        "original_header": "Using `sistr_cmd` in your Python application",
        "type": "Text_excerpt",
        "value": "\tfrom sistr.sistr_cmd import sistr_predict\n\t# create mock commandline arguments class\n\tclass SistrCmdMockArgs:\n\t    run_mash = True\n\t    no_cgmlst = False\n\t    qc = True\n\t    use_full_cgmlst_db = False\n\t# run SISTR serovar prediction\n\tsistr_results, allele_results = sistr_predict(genome_fasta_path, genome_name, keep_tmp=False, tmp_dir='/tmp/sistr_cmd', args=SistrCmdMockArgs)\n\t# use sistr_cmd results for something \n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, cgmlst, salmonella, serotyping, sistr"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   \u00a9 Copyright Government of Canada 2012-2016. Funded by the Government of Canada Genomics Research and Development Initiative\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "Copyright 2017 Public Health Agency of Canada\n\nDistributed under the Apache 2.0 license.\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sistr_cmd"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "phac-nml"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 151266,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mash.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kbessonov1984",
          "type": "User"
        },
        "date_created": "2024-03-14T16:47:11Z",
        "date_published": "2024-03-14T16:52:00Z",
        "description": "Restricted software dependencies due to them dropping used functionality.",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v1.1.2",
        "name": "sistr_cmd: v1.1.2",
        "release_id": 146629543,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/146629543",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/146629543",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2020-04-30T19:13:20Z",
        "date_published": "2020-04-30T19:42:38Z",
        "description": "* Fixed issue with sorting of BLAST results (causing cgMLST types to be different between BLAST versions). Pull request #43.",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v1.1.1",
        "name": "sistr_cmd v1.1.1",
        "release_id": 26062059,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/26062059",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/26062059",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "apetkau",
          "type": "User"
        },
        "date_created": "2019-11-28T16:01:48Z",
        "date_published": "2020-03-04T15:07:29Z",
        "description": "* Significant updates to SISTR antigen biomarker and cgMLST database",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v1.1.0",
        "name": "sistr_cmd v1.1.0",
        "release_id": 21839781,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/21839781",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/21839781",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-05-23T18:55:04Z",
        "date_published": "2017-05-23T18:56:54Z",
        "description": "Changes:\r\n\r\n- `tables` (PyTables) dependency from 3.4.2 to 3.3.0 for Conda",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v1.0.2",
        "name": "sistr_cmd v1.0.2",
        "release_id": 6480682,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6480682",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6480682",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-05-23T06:47:03Z",
        "date_published": "2017-05-23T07:02:11Z",
        "description": "Adds:\r\n\r\n- More genomes; 11k to 52790 (thanks Enterobase!)\r\n- Python tables (PyTables) dependency for HDF5 format reading\r\n- cgMLST profiles HDF5 file for faster reading and smaller file size than CSV\r\n\r\nUpdates:\r\n\r\n- cgMLST profiles and alleles databases\r\n- genome to serovar/subspecies tables\r\n- replaced two options for more verbose results with single option (`--more-output/-M`)\r\n- cleaned up and added new antigen alleles\r\n\r\nFixes:\r\n- Issue #19 \r\n- cgMLST result parsing error (`allele` variable undefined)",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v1.0.1",
        "name": "sistr_cmd v1.0.1",
        "release_id": 6471699,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6471699",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6471699",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-04-13T21:52:36Z",
        "date_published": "2017-04-13T21:53:54Z",
        "description": "Removed:\r\n\r\n- ``better_exceptions`` module since it's not available on Conda",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.6",
        "name": "sistr_cmd v0.3.6",
        "release_id": 6078259,
        "tag": "v0.3.6",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.6",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6078259",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6078259",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-04-13T21:22:20Z",
        "date_published": "2017-04-13T21:25:02Z",
        "description": "Added:\r\n\r\n- Default stdout of ``json.dumps`` of prediction results when no output dest (``-o``) specified\r\n- Optional expanded primary prediction output with more detailed results including full ``blastn`` results for antigen gene search with bool cmdline args ``--full-output`` and ``--report-blast-results``\r\n- Utility output functions for serializing arbitrarily nested objects to dicts with regular literal/scalar values ``(str, int, float, bool, None)`` so ``json.dump(s)`` doesn't produce an error\r\n- More tests\r\n- ``better_exceptions`` (>=0.1.5) module for clearer exception messages (https://github.com/qix-/better-exceptions)\r\n\r\n\r\nFixed:\r\n\r\n- #18, increments tmp dir name + \"_{count}\" until new dir success fully created\r\n- No more annoying Pandas warning messages in stderr",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.5",
        "name": "sistr_cmd v0.3.5",
        "release_id": 6077996,
        "tag": "v0.3.5",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6077996",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/6077996",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-02-23T12:50:00Z",
        "date_published": "2017-02-23T12:53:52Z",
        "description": "Changes:\n- metavar for -i opt to specify order of args\n- replace non-word/whitespace characters in filenames with underscores so that `makeblastdb` doesn't produce an error\n- using genome names instead of file paths for cgMLST results and profiles outputs\n- verbose opt default 0 or error only\n\nFixes:\n- check for no input files\n- verbose level index out of range error\n",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.4",
        "name": "sistr_cmd v0.3.4",
        "release_id": 5548115,
        "tag": "v0.3.4",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5548115",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5548115",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-02-21T15:36:11Z",
        "date_published": "2017-02-21T15:38:00Z",
        "description": "Fixes:\n- add back `--version` cmdline opt\n",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.3",
        "name": "sistr_cmd v0.3.3",
        "release_id": 5522663,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5522663",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5522663",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-02-21T05:25:22Z",
        "date_published": "2017-02-21T05:30:12Z",
        "description": "Fixes:\n- skip writing of null/None novel alleles \n\nAdds:\n- option (-i/--input-fasta-genome-name; -i /path/to/g1.fa genome1) to specify genome names along with path to fasta\n- tab-delimited results output \"-f tab\"\n",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.2",
        "name": "sistr_cmd v0.3.2",
        "release_id": 5517058,
        "tag": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5517058",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5517058",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-02-13T14:25:32Z",
        "date_published": "2017-02-13T14:27:22Z",
        "description": "Added version option\n",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.1",
        "name": "sistr_cmd v0.3.1",
        "release_id": 5440365,
        "tag": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5440365",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5440365",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "peterk87",
          "type": "User"
        },
        "date_created": "2017-02-01T20:47:22Z",
        "date_published": "2017-02-01T20:52:36Z",
        "description": "Adds:\n- O-antigen inference from overall serovar call or serogroup\n- cgMLST/Mash subspeciation\n- new antigen sequences\n- spp roman numerals and O antigen to unknown serotype determination (not in ref table)\n- more output options\n  - cgMLST profiles table\n  - cgMLST allele matching results JSON\n  - novel cgMLST alleles output\n- new genomes; 7511 -> 11840\n- MSA check for novel alleles (blastn -> extract seq -> MSA to ref allele -> trim gapped edges in ref allele MSA -> check % gaps)\n- Search against centroid cgMLST alleles\n- Scripts for adding more genomes to sistr_cmd, hierarchical cluster generation from cgMLST profiles, reduction to centroid alleles\n- option for basic QC (genome size; # missing cgMLST markers; any missing O/H antigen genes)\n- more tests\n\nFixes:\n- Removed troublesome alleles (contributing high number of gaps in MSAs)\n- null Mash spp result error\n- empty fasta entry parsing\n",
        "html_url": "https://github.com/phac-nml/sistr_cmd/releases/tag/v0.3.0",
        "name": "sistr_cmd v0.3.0",
        "release_id": 5332513,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5332513",
        "value": "https://api.github.com/repos/phac-nml/sistr_cmd/releases/5332513",
        "zipball_url": "https://api.github.com/repos/phac-nml/sistr_cmd/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "These are the external dependencies required for ``sistr_cmd``:\n\n- Python (>= v2.7 OR >= v3.4)\n- BLAST+ (>= v2.2.30)\n- MAFFT (>=v7.271 (2016/1/6))\n- `Mash v1.0+ <https://github.com/marbl/Mash/releases>`_ [optional]\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Dependencies",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "``sistr_cmd`` requires the following Python libraries:\n\n- numpy (>=1.11.1)\n- pandas (>=0.18.1)\n\n\nYou can run the following commands to get up-to-date versions of ``numpy`` and ``pandas``\n\n.. code-block:: bash\n\n\tpip install --upgrade pip\n\tpip install wheel\n\tpip install numpy pandas\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:10:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Want to help improve this tool?",
        "type": "Text_excerpt",
        "value": "Do you have any *Salmonella* genomes with trustworthy serovar info? Would you like SISTR to provide better serovar predictions? You can help by contributing those genomes along with their serovar info!\n\nSISTR relies on a database of cgMLST allelic profiles from *Salmonella* genomes with validated serovar info to make accurate serovar predictions (since antigenic determinations from a handful of genes like wzx or fliC can only get you so far). So the more genomes there are in the SISTR database, the more accurate the serovar predictions, especially if those genomes belong to uncommon or rare serovars or lineages.\n\nHelp us improve SISTR serovar predictions! Contribute *Salmonella* genomes to SISTR!\n\n\nYou can contribute by:\n\n- let us know here: https://github.com/phac-nml/sistr_cmd/issues/15\n- linking to your genome on NCBI SRA/BioSample/Assembly\n- contacting the authors of SISTR\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "If you run ``sistr -h``, you should see the following usage info:\n\n.. code-block:: none\n\n\tusage: sistr_cmd [-h] [-i fasta_path genome_name] [-f OUTPUT_FORMAT]\n\t                 [-o OUTPUT_PREDICTION] [-p CGMLST_PROFILES]\n\t                 [-n NOVEL_ALLELES] [-a ALLELES_OUTPUT] [-T TMP_DIR] [-K]\n\t                 [--use-full-cgmlst-db] [--no-cgmlst] [-m] [--qc] [-t THREADS]\n\t                 [-v] [-V]\n\t                 [F [F ...]]\n\n\tSISTR (Salmonella In Silico Typing Resource) Command-line Tool\n\t==============================================================\n\tSerovar predictions from whole-genome sequence assemblies by determination of antigen gene and cgMLST gene alleles using BLAST.\n\n\tNote about using the \"--use-full-cgmlst-db\" flag:\n\t    The \"centroid\" allele database is ~10% the size of the full set so analysis is much quicker with the \"centroid\" vs \"full\" set of alleles. Results between 2 cgMLST allele sets should not differ.\n\n\tIf you find this program useful in your research, please cite as:\n\n\tThe Salmonella In Silico Typing Resource (SISTR): an open web-accessible tool for rapidly typing and subtyping draft Salmonella genome assemblies.\n\tCatherine Yoshida, Peter Kruczkiewicz, Chad R. Laing, Erika J. Lingohr, Victor P.J. Gannon, John H.E. Nash, Eduardo N. Taboada.\n\tPLoS ONE 11(1): e0147101. doi: 10.1371/journal.pone.0147101\n\n\tpositional arguments:\n\t  F                     Input genome FASTA file\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -i fasta_path genome_name, --input-fasta-genome-name fasta_path genome_name\n\t                        fasta file path to genome name pair\n\t  -f OUTPUT_FORMAT, --output-format OUTPUT_FORMAT\n\t                        Output format (json, csv, pickle)\n\t  -o OUTPUT_PREDICTION, --output-prediction OUTPUT_PREDICTION\n\t                        SISTR serovar prediction output path\n\t  -p CGMLST_PROFILES, --cgmlst-profiles CGMLST_PROFILES\n\t                        Output CSV file destination for cgMLST allelic\n\t                        profiles\n\t  -n NOVEL_ALLELES, --novel-alleles NOVEL_ALLELES\n\t                        Output FASTA file destination of novel cgMLST alleles\n\t                        from input genomes\n\t  -a ALLELES_OUTPUT, --alleles-output ALLELES_OUTPUT\n\t                        Output path of allele sequences and info to JSON\n\t  -T TMP_DIR, --tmp-dir TMP_DIR\n\t                        Base temporary working directory for intermediate\n\t                        analysis files.\n\t  -K, --keep-tmp        Keep temporary analysis files.\n\t  --use-full-cgmlst-db  Use the full set of cgMLST alleles which can include\n\t                        highly similar alleles. By default the smaller\n\t                        \"centroid\" alleles or representative alleles are used\n\t                        for each marker.\n\t  --no-cgmlst           Do not run cgMLST serovar prediction\n\t  -m, --run-mash        Determine Mash MinHash genomic distances to Salmonella\n\t                        genomes with trusted serovar designations. Mash binary\n\t                        must be in accessible via $PATH (e.g. /usr/bin).\n\t  --qc                  Perform basic QC to provide level of confidence in\n\t                        serovar prediction results.\n\t  -t THREADS, --threads THREADS\n\t                        Number of parallel threads to run sistr_cmd analysis.\n\t  -v, --verbose         Logging verbosity level (-v == show warnings; -vvv ==\n\t                        show debug info)\n\t  -V, --version         show program's version number and exit\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By running the following command on a FASTA file of *Salmonella enterica* strain LT2 (https://www.ncbi.nlm.nih.gov/nuccore/NZ_CP014051.1):\n\n.. code-block:: bash\n\n\tsistr --qc -vv --alleles-output allele-results.json --novel-alleles novel-alleles.fasta --cgmlst-profiles cgmlst-profiles.csv -f tab -o sistr-output.tab LT2.fasta\n\n\nYou should see some log messages like so:\n\n.. code-block:: none\n\n\t<time> INFO: Running sistr_cmd 0.3.4 [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:290]\n\t<time> INFO: Serial single threaded run mode on 1 genomes [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:319]\n\t<time> INFO: Initializing temporary analysis directory \"/tmp/20170309104912-SISTR-LT2\" and preparing for BLAST searching. [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:175]\n\t<time> INFO: Temporary FASTA file copied to /tmp/20170309104912-SISTR-LT2/LT2_fasta [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:177]\n\t<time> INFO: Running BLAST on serovar predictive cgMLST330 alleles [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:319]\n\t<time> INFO: Reading BLAST output file \"/tmp/20170309104912-SISTR-LT2/cgmlst-centroid.fasta-LT2_fasta-2017Mar09_10_49_13.blast\" [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:322]\n\t<time> INFO: Found 6525 cgMLST330 allele BLAST results [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:333]\n\t<time> INFO: Marker NZ_AOXE01000081.1_201 | Recovered novel allele with gaps (n=0) of length 477 vs length 477 for ref allele NZ_AOXE01000081.1_201|2823059714. Novel allele name=3250876267 [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:181]\n\t<time> INFO: Type retrieved_marker_alleles <type 'dict'> [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:343]\n\t<time> INFO: Calculating number of matching alleles to serovar predictive cgMLST330 profiles [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:360]\n\t<time> INFO: Top subspecies by cgMLST is \"enterica\" (min dist=0.00909090909091, Counter={'enterica': 11532}) [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:369]\n\t<time> INFO: Top serovar by cgMLST profile matching: \"Typhimurium\" with 327 matching alleles, distance=0.9% [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:385]\n\t<time> INFO: cgMLST330 Sequence Type=660408169 [in /usr/lib/python2.7/site-packages/sistr/src/cgmlst/__init__.py:404]\n\t<time> INFO: LT2 | Antigen gene BLAST serovar prediction: \"Typhimurium\" serogroup=B 1,4,[5],12:i:1,2 [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:207]\n\t<time> INFO: LT2 | Subspecies prediction: enterica [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:210]\n\t<time> INFO: LT2 | Overall serovar prediction: Typhimurium [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:213]\n\t<time> INFO: Genome size=4857473 (within gsize thresholds? True) [in /usr/lib/python2.7/site-packages/sistr/src/qc/__init__.py:13]\n\t<time> INFO: Deleting temporary working directory at /tmp/20170309104912-SISTR-LT2 [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:220]\n\t<time> INFO: Writing output \"tab\" file to \"sistr-output.tab\" [in /usr/lib/python2.7/site-packages/sistr/src/writers.py:38]\n\t<time> INFO: cgMLST allelic profiles written to cgmlst-profiles.csv [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:340]\n\t<time> INFO: JSON of allele data written to allele-results.json for 1 cgMLST allele results [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:343]\n\t<time> INFO: Wrote 330 alleles to novel-alleles.fasta [in /usr/lib/python2.7/site-packages/sistr/sistr_cmd.py:346]\n\n"
      },
      "source": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/phac-nml/sistr_cmd/master/galaxy/Galaxy-Workflow-Assembly-Serotyping-withReport-for-SISTR_v1.1.1%2Bgalaxy1-recipe.ga"
      },
      "technique": "file_exploration"
    }
  ]
}