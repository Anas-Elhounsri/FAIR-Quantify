{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mdsufz/MuDoGeR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-01T12:40:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-19T20:46:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MuDoGeR makes the recovery of genomes from prokaryotes, viruses, and eukaryotes from metagenomes easy."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9378355524751463,
      "result": {
        "type": "Text_excerpt",
        "value": "\nThe **Multi-Domain Genome Recovery v1.0 (MuDoGeR v1.0)** framework ([**Figure 1**](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/figure_1_overview.jpg)) is a tool developed to help users to recover Metagenome-Assembled Genomes (MAGs as defined by [Parks et al. (2018)](https://www.nature.com/articles/s41564-017-0012-7)) and Uncultivated Viral Genomes (UViGs as defined by  [Roux (2019)](https://www.nature.com/articles/nbt.4306)) from whole-genome sequence (WGS) samples simultaneously. The **MuDoGeR v1.0** framework acts as a wrapper for several tools. It was designed to be an easy-to-use tool that outputs ready-to-use comprehensive files. \nYou should be able to run 1 simple command for each module. Therefore, you only need 5 commands to completely run MuDoGeR. After a successful run of MuDoGeR, you should have the outputs summarized in [Figure 2](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/mudoger_outputs.jpg). Please find a comprehensive description of the main outputs in the [understand outputs](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md) file. \nIn addition, MuDoGeR also sets up individual working conda environments for each of the integrated tools. Consequently, if the user wants to customize the use of any tool, you can use MuDoGeR to configure your machine and follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently) to activate the relevant environments. \n* First, read the [MuDoGeR overview](https://github.com/mdsufz/MuDoGeR#mudoger-overview) and define which modules you are interested in using.\n* Secondly, read the [System requirements](https://github.com/mdsufz/MuDoGeR#system-requirements) and make sure you have the resources for the modules you want to use.\n* Then, read the [Installation](https://github.com/mdsufz/MuDoGeR#installation) and follow its steps.\n* Read the [overview descriptions](https://github.com/mdsufz/MuDoGeR#modules-overview) of the MuDoGeR modules you intend to use.\n* If you want a quick run, read the [MuDoGeR simplified usage](https://github.com/mdsufz/MuDoGeR#mudoger-singularity-execution)\n* Read the [understanding main outputs](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md) file. To understand and find relevant outputs created by MuDoGeR.\n* Read the [MuDoGeR Manual](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md) for a more detailed description of the used modules and their output files \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9449874771518805,
      "result": {
        "original_header": "MuDoGeR Overview",
        "type": "Text_excerpt",
        "value": "**MuDoGeR** was designed to be an easy-to-use tool that outputs ready-to-use comprehensive files. You should be able to run 1 simple command for each of the following modules. \nThe **MuDoGeR** starts with Module 1: **Pre-Processing**, which covers the Raw Read Quality Control, Resources calculation, and Assembly. The assembled libraries should be used in all the other modules. \nAfter the data pre-processing, **MuDoGeR** is divided into 3 different branches:\nModule 2: **Recovery of Prokaryotic Metagenome-Assembled Genomes (pMAGs)**\nModule 3: **Recovery of Uncultivated Viral Genomes (UViGs)**\nModule 4: **Recovery of Eukaryotic Metagenome-Assembled Bins (eMABs)** \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9472443727186463,
      "result": {
        "original_header": "System requirements",
        "type": "Text_excerpt",
        "value": "**MuDoGeR makes it easy to install and run a group of complex software and dependencies.** More than 20 bioinformatics tools and several complex software dependencies are present in MuDoGeR. Hopefully, you won't have to worry too much about it. We designed an installation script that should take care of every dependency for you. You can find the **MuDoGeR** installation tutorial [here](https://github.com/mdsufz/MuDoGeR/blob/master/README.md#installation). \nKeep in mind that the MuDoGeR pipeline requires some computer power, and you probably won't be able to run it on a laptop. The complete software installation requires approximately 170 GB, but **MAKER2**, from **Module 4**, uses 99 GB of that space since it requires the database to be installed in a specific manner. See [Module 4 setup](https://github.com/mdsufz/MuDoGeR/blob/master/installation/genemark_maker2_installation.md). The complete database requirements, considering all tools, is around 439.9 GB. However, you don't need to install all of MuDoGeR's Modules to use it. \nMuDoGeR is designed to support only Linux x64 systems. As for the resource requirements, the MuDoGeR framework uses software that requires a large amount of RAM (e.g. **GDTB-Tk**, **MetaWRAP** ). Specific resource requirements vary depending on your data and its sequencing depth. We recommend the user provide at least 180 GB of RAM. \nTherefore, for the assembly process, **MuDoGeR** attempts to calculate the amount of memory necessary for **metaSPades** (on step **1.b**). The user should be aware that samples with higher expected diversity require a higher amount of memory. \nConsequently, we suggest you install and run **MuDoGeR** using your available high-performance computer or in cloud services such as [AWS](https://aws.amazon.com/ec2/?nc2=h_ql_prod_fs_ec2), [Google cloud](https://cloud.google.com/compute#section-8), or, for researchers in Germany, the [de.NBI](https://www.denbi.de/) \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9019537058441855,
      "result": {
        "original_header": "Installation using Singularity (now called Apptainer) - Recommended",
        "type": "Text_excerpt",
        "value": "**0 - Install Singularity**\nMost HPC administrators are already making Singularity available for its users. You could check if that is your case and skip this step.\nOtherwise, please follow the instructions on the official [Singularity installation guide](https://apptainer.org/admin-docs/master/installation.html) \nThe MuDoGeR required databases can vary depending on which module you plan to use. Naturally, the databases can require significant storage and are not included in the MuDoGeR container.\nIt is recommended that the user follow the instructions from the tool developer to install and update the desired database.\nThe only requirement is that all the databases use the same base folder and are installed using the name of the tool as follows: ```buscodbs/  checkm/  checkv/  eukccdb/  gtdbtk/  vibrant/  wish/```.\nTherefore, your database installation folder should look like this:\n```\nmudoger_dbs/\n\u251c\u2500\u2500 buscodbs\n\u251c\u2500\u2500 checkm\n\u251c\u2500\u2500 checkv\n\u251c\u2500\u2500 eukccdb\n\u251c\u2500\u2500 gtdbtk\n\u251c\u2500\u2500 vibrant\n\u2514\u2500\u2500 wish\n```\n \n\n4. CLICK ON ***'I agree the terms of this license agreement'*** \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9666407236219456,
      "result": {
        "type": "Text_excerpt",
        "value": "Installing MuDoGeR via conda can help the user to utilize only part of the workflow. However, it is recommended for those with a deeper understanding of how conda environments work, as manual adjustments may need to be made. If that is your case, please follow the instructions here: [MuDoGeR conda installation](conda_installation_and_usage.md). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9403575903269575,
      "result": {
        "original_header": "Module 1: Pre-Processing",
        "type": "Text_excerpt",
        "value": "The steps of Module 1 are shown in [Figure 3](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/module_1_ovrw.jpg). A detailed description of its execution and outputs are found here: [Pre-Processing description](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-1-pre-processing).\n \n When you use MuDoGeR Module 1, it will perform the following tasks: \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9432877176835119,
      "result": {
        "type": "Text_excerpt",
        "value": "* **1.a**: Raw Read Quality Control.\n* **1.b**: Calculation of memory requirements for the assembly process.\n    * **(1.b.1)** The k-mer (33-mer and 55-mer) of the quality-controlled reads produced in **1.a** is calculated.  \n    * **(1.b.2)** The calculated k-mer is used in a trained machine learning model to estimate the amount of memory that **metaSPades** uses to assemble the reads.\n* **1.c**: Assembly of the quality-controlled reads. \n### Module 2: Recovery of Prokaryotic Metagenome-Assembled Genomes (pMAGs) \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9884444613874033,
      "result": {
        "original_header": "Module 2: Recovery of Prokaryotic Metagenome-Assembled Genomes (pMAGs)",
        "type": "Text_excerpt",
        "value": "Module 2 workflow is shown in [Figure 4](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/module_2_ovrw.jpg). A detailed description of its execution and outputs are found here: [Pipeline for recovery of Prokaryotic Metagenome-Assembled Genomes](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-2-recovery-of-prokaryotic-metagenome-assembled-genomes-pmags). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9950235871361627,
      "result": {
        "type": "Text_excerpt",
        "value": "When you use MuDoGeR Module 2, it will perform the following tasks:\n \n* **2.a**: Binning and bin refinement of the Prokaryotic bins.\n     * **(2.a.1)** Binning with [**Metabat2**](https://peerj.com/articles/7359/), [**Maxbin2**](https://academic.oup.com/bioinformatics/article/32/4/605/1744462), and [**CONCOCT**](https://www.nature.com/articles/nmeth.3103).\n     * **(2.a.2)** Bacterial bins refinement and archaea bins refinement.\n     * **(2.a.3)** Dereplication of the recovered prokaryotic bins.\n* **2.b**: Taxonomic classification, quality estimation, and gene annotation.\n     * **(2.b.1)** Taxonomic classification of the prokaryotic bins produced in **(2.a.3)** using [**GTDB-tk**](https://academic.oup.com/bioinformatics/article/36/6/1925/5626182).\n     * **(2.b.2)** Generation of quality matrix of the prokaryotic bins produced in **(2.a.3)** using [**CheckM**](https://genome.cshlp.org/content/25/7/1043). \n     * **(2.b.3)** Prokaryotic MAGs gene annotation with [**Prokka**](https://academic.oup.com/bioinformatics/article/30/14/2068/2390517).\n* **2.c**: Sequence metrics calculation and selection of Prokaryotic MAGs.\n     * **(2.c.1)** Sequence metric calculation from the selected MAGs.\n     * **(2.c.2)** Selection of Prokaryotic MAGs\n    \n    \n### Module 3: Recovery of Uncultivated Viral Genomes (UViGs) \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9542880433248727,
      "result": {
        "original_header": "Module 3: Recovery of Uncultivated Viral Genomes (UViGs)",
        "type": "Text_excerpt",
        "value": "The steps of Module 3  are shown in [Figure 5](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/module_3_ovrw.jpg). A detailed description of its execution and outputs are found here: [Pipelines for viral genomes recovery](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-3-recovery-of-uncultivated-viral-genomes-uvigs). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9434996588907294,
      "result": {
        "type": "Text_excerpt",
        "value": "When you use MuDoGeR Module 3, it will perform the following tasks: \n \n* **3.a**: Recovery of Putative Viral Contigs\n    * **(3.a.1)** Recovery of putative viral contigs using [**VirSorter2**](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-020-00990-y), [**VirFinder**](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-017-0283-5), and [**VIBRANT**](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-020-00867-0).\n    * **(3.a.2)** Filtering of the putative viral contigs.\n    * **(3.a.3)** Dereplication of the putative viral contigs.\n * **3.b**: Taxonomic and Quality estimation of potential viral contigs\n    * **(3.b.1)** Taxonomic classification from the dereplicated putative viral contigs with [**Vcontact2**](https://www.nature.com/articles/s41587-019-0100-8).\n    * **(3.b.2)** Checking the quality of the dereplicated contigs with [**CheckV**](https://www.nature.com/articles/s41587-020-00774-7).\n* **3.c**: Viral-Host pair estimation using [**WIsH**](https://academic.oup.com/bioinformatics/article/33/19/3113/3964377). This step is only done automatically if you generate the prokaryotic MAGs using MuDoGeR as well. \n* **3.d**: Selection of UViGs\n    * **(3.d.1)** Selection of all viruses that yielded taxonomy when using vContact2 plus those larger than 15 Kb.\n    * **(3.d.2)** Selection based on the quality determined by [**CheckV**](https://www.nature.com/articles/s41587-020-00774-7). \n### Module 4: Recovery of Eukaryotic Metagenome-Assembled Bins (eMABs) \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9762030141718915,
      "result": {
        "original_header": "Module 4: Recovery of Eukaryotic Metagenome-Assembled Bins (eMABs)",
        "type": "Text_excerpt",
        "value": "The steps of Module 4  are shown in [Figure 6](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/module_4_ovrw.jpg). A detailed description of its execution and outputs are found here:  [Pipelines for eukaryotic bins recovery](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-4-recovery-of-eukaryotic-metagenome-assembled-bins-emabs). \n* **4.a**: Recovery and binning of Eukaryotic assemblies.\n    * **(4.a.1)** Classification of Eukaryotic assemblies and removal of prokaryotic assemblies with [**EukRep**](https://genome.cshlp.org/content/28/4/569).\n    * **(4.a.2)** Use of [**CONCOCT**](https://www.nature.com/articles/nmeth.3103) for binning the Eukaryotic assemblies. \n    * **(4.a.3)** Filtering the Eukaryotic bins, produced from [**CONCOCT**](https://www.nature.com/articles/nmeth.3103), by size. Bins with size < 1.5 Mb are removed.\n* **4.b**: Completeness and contamination estimation and annotation of Eukaryotic bins\n    * **(4.b.1)** In the filtered bins produced in **4.a**, genes are predicted using [**GeneMark**](https://academic.oup.com/nar/article/29/12/2607/1034721).\n    * **(4.b.2)** Completeness and contamination estimation of the Eukaryotic filtered bins produced in **4.a** using [**EukCC**](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02155-4).\n    * **(4.b.3)** [**MAKER2**](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-491) annotates the predicted genes produced by [**GeneMark**](https://academic.oup.com/nar/article/29/12/2607/1034721). \n    * **(4.b.4)** [**BUSCO**](https://academic.oup.com/bioinformatics/article/31/19/3210/211866) is applied to the annotated genes from [**MAKER2**](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-491), for detection of single-copy orthologous genes (SCGs) and estimation of completeness of Eukaryotic contigs. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9861472316034455,
      "result": {
        "original_header": "Module 5 Relative abundance",
        "type": "Text_excerpt",
        "value": "The steps of Module 5  are shown in [Figure 7](https://github.com/mdsufz/MuDoGeR/blob/master/flowcharts/module_5_ovrw.jpg). A detailed description of its execution and outputs are found here: [Pipelines for abundance calculation](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-5-relative-abundance).\nEssentially, module 5 maps the quality-controlled reads of your sample on the recovered pMAGs/UViGs/eMAB or annotated prokaryotic genes. We designed three possible mapping types to calculate abundance: **reduced**, **complete**, or **genes**. A detailed description of their differences can be found [here](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md#module-5-relative-abundance) \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9420095571485199,
      "result": {
        "original_header": "MuDoGeR simplified usage - with Singularity installation",
        "type": "Text_excerpt",
        "value": "Currently, MuDoGeR v1.0 only works with paired-end ILLUMINA sequences. Future updates will add tools to work with long-read sequencing samples.\nMuDoGeR was designed to work module by module, starting from pre-process (Module 1). Additional modularity will be added in future updates to allow the user to run specific parts of the pipeline. However, you can always use the tools independently by using the created conda environments by MuDoGeR. You can follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently). \n**MuDoGeR** is an easy-to-use wrapper of several tools organized within modules. The individual modules can be called independently. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9364098276264831,
      "result": {
        "type": "Text_excerpt",
        "value": "One additional point of attention. The input data is mounted in the MuDoGeR singularity container at ```/tools/data_input/```. Therefore, if your sample sequence files are in BASH16* your metadata.tsv file should look like: \n## Please note that the forward sequencing reads file must end in \"_1.fastq\" and the reverse in \"_2.fastq\"!  \nMuDoGeR is designed to run all multi-domain genome recovery pipelines entirely. In order for MuDoGeR to work automatically, from start to finish, we use a specific folder structure. Please read the [Manual_MuDoGeR](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md) if you would like to manipulate MuDoGeR.  \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8554494694600341,
      "result": {
        "original_header": "MuDoGeR Singularity Execution",
        "type": "Text_excerpt",
        "value": "When using the MuDoGeR singularity container, you have all the complex dependencies and software environments from MuDoGeR already configured.\nFor using the recommended singularity installation, please keep your metadata.tsv file in the same folder where you have your sample reads. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8838527915541058,
      "result": {
        "type": "Text_excerpt",
        "value": "Therefore, if you have your metadata.tsv and your samples reads in the ```test_data``` folder, your output folder is the BASH21*, and your databases are in the BASH22* folder, your usage commands should be:\nBASH23* \n### The result two-level folder structure after a successful run of all MuDoGeR is as follows:\n```console\n.\n\u251c\u2500\u2500 sample_1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assembly\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 eukaryotes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 khmer\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 prokaryotes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 qc\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 viruses\n\u251c\u2500\u2500 sample_2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assembly\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 eukaryotes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 khmer\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 prokaryotes\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 qc\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 viruses\n\u2514\u2500\u2500 mapping_results\n    \u251c\u2500\u2500 assembly_gene_map\n    \u251c\u2500\u2500 euk_mabs_mapping\n    \u251c\u2500\u2500 gOTUpick_results\n    \u251c\u2500\u2500 merged_reads\n    \u251c\u2500\u2500 pmags_otu_mapping\n    \u2514\u2500\u2500 uvigs_mapping\n```\n \n# MuDoGeR as Wrapper and its Critical Use \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9220815159416536,
      "result": {
        "original_header": "MuDoGeR as Wrapper and its Critical Use",
        "type": "Text_excerpt",
        "value": "MuDoGeR is a wrapper designed to streamline the genome assembly process from metagenome samples across multiple domains. While MuDoGeR accelerates metagenomics analysis, it's crucial to understand the inherent limitations of any metagenomic approach. The tools and parameters integrated into MuDoGeR are based on benchmark studies, but users should understand their dataset and tools' limitations to adapt the workflow. \n* MuDoGeR generates progress reports, intermediate files, and error logs at various stages of the assembly process, which are detailed in the [MuDoGeR Manual](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md). Users should regularly check these reports to ensure the tool works as expected for their dataset. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9706389223757141,
      "result": {
        "type": "Text_excerpt",
        "value": "* MuDoGeR aims to help provide a holistic view of all three domains simultaneously, reducing cross-domain recovery bias by initiating all genome recovery from the same assembly. However, the genome recovery approaches from different domains are at different stages of technological progress and complexity of analysis.\n* Users should be aware of potential recovery bias from a particular dataset.\n* For experienced users, MuDoGeR allows the activation of each tool separately, enabling users to adapt the process to their specific needs. follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently).\n* Users are strongly recommended to consult and check the direct links from the tools used within the wrapper for a deeper understanding of the underlying processes and optimization of parameters for their specific needs. The software used during the pipeline is detailed and described here: [Dependencies description](https://github.com/mdsufz/MuDoGeR/blob/master/dependencies_description.md). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mdsufz/MuDoGeR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mdsufz/MuDoGeR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mdsufz/MuDoGeR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-3-5_uvigs-metrics.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-8_genomics-metrics.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-4-2_genemark.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-3-2_vcontact2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-1_initial-binning.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-3-4_vcheck.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-3_bin-ref-archea.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-4_bin-dereplication.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-1_prokOTUpicking.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-2-3_BRAT_emabs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-7_prokka.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-4-5_busco.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-1-1_QC.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-1-2_kmermempred.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-4-1_eukrep-eukbin-filter.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-3_genemap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-2-2_BRAT_uvigs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-3-1_viral-investigation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-4-4_maker2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-2_BRAT.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-5-2-1_BRAT_pmags.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-6_bin-QC.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-1-3_assembly.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-2_bin-ref-bacteria.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-3-3_host-prediction.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-4-3_eukcc.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/scripts/mudoger-module-2-5_bin-taxonomy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/modules/mudoger-module-5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/modules/mudoger-module-4.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/modules/mudoger-module-2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/modules/mudoger-module-3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/src/modules/mudoger-module-1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/database-setup.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/config.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/install.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/.config_std.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_utils.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/config_bkp.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/MuDoGeR_default_parameters.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_scripts/install_module_2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_scripts/install_module_3.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_scripts/install_module_1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_scripts/install_module_5.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/installation_scripts/install_module_4.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/predict_mem_input-SLURM.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/mudoger_singularity.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/strain_differentiation_wf.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/mudoger_singularity_slurm.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/predict_mem_input.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/dependencies/otupick_dependencies/gOTUpick.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/figure_1_overview.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/mudoger_outputs.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/module_1_ovrw.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/module_2_ovrw.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/module_3_ovrw.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/module_4_ovrw.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/flowcharts/module_5_ovrw.jpg"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Installing MuDoGeR via conda can help the user to utilize only part of the workflow. However, it is recommended for those with a deeper understanding of how conda environments work, as manual adjustments may need to be made.\n\n## Installation using Conda/Mamba\n**1 - Install miniconda**\n\nThe MuDoGeR pipeline requires several tools that have multiple dependencies. More often than not, those tools require conflicting dependencies. To tackle this problem, MuDoGeR requires miniconda to be previously installed in your system. MuDoGeR will use miniconda to create multiple environments that are automatically orchestrated during the pipeline's functioning. Following you have a possible way of installing miniconda.\n\n```console\n\n#See documentation: https://docs.conda.io/en/latest/miniconda.html\n\n$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n$ chmod +x Miniconda3-latest-Linux-x86_64.sh\n\n$ ./Miniconda3-latest-Linux-x86_64.sh\n\n$ export PATH=~/miniconda3/bin:$PATH\n\n```\n\n**2 - Install MuDoGeR**\n\nOnce you have miniconda installed and on your PATH, you can properly install MuDoGeR.\nThe MuDoGeR environment can be complex, and the installation script was designed to install and set up all necessary bioinformatics tools.\n\n```console\n#clone repository\n\n$ git clone https://github.com/mdsufz/MuDoGeR.git\n\n#Go to the MuDoGeR cloned repository folder\n$ cd MuDoGeR\n\n#Make sure you have conda ready and that you are in your base environment.\n$ conda activate base\n$ echo $CONDA_PREFIX\n\n#You should see something like the following:\n/path/to/miniconda3\n\n#Install mamba in your base environment\n$ conda install -c conda-forge mamba\n\n#Run the installation script as follows\n$ bash -i installation/install.sh\n\n#Follow the instructions on the screen:\n# Enter \"y\" if you want to install all modules, otherwise enter \"n\".\n# If you entered \"n\",enter \"y\" for each of the modules you would like to install individually.\n\n\tThe MuDoGeR's installation will begin..\n\n\n\n\n\n\t      (  )   (   )  )\t\t\t\n\t       ) (   )  (  (\t\t\t\n\t       ( )  (    ) )\t\t\t\n\t       _____________\t\t\t\n\t      <_____________> ___\t\t\n\t      |             |/ _ \\\t\t\n\t      |               | | |\t\t\n\t      |               |_| |\t\t\n\t   ___|             |\\___/\t\t\n\t  /    \\___________/    \\\t\t\n\t  \\_____________________/\t\t\n\n\tThis might take a while. Time to grab a coffee...\n```\n\n**3 - Install necessary databases**\n\nSeveral bioinformatics tools used within MuDoGeR require specific databases to work. We developed a database download and set up tool to make our lives easier. Make sure to run the database setup after MuDoGeR is installed.\n\nYou can also choose to install the databases used by each module individually. You can use the flag ```--dbs``` and choose the name of the module you want to set up the databases (all \\[default], prokaryotes, viruses, eukaryotes).\n\nUse this script if you want MuDoGeR to take care of everything. \n\n```console\n#Make sure mudoger_env is activated. It should have been created when you ran 'bash -i installation/install.sh'\n$ conda activate mudoger_env\n\n#Go to MuDoGeR cloned directory\n$ cd MuDoGeR\n\n#Run database setup script\n$ bash -i installation/database-setup.sh --dbs all -o /path/to/save/databases\n\n#You can also check out the database-setup help information\n$ bash -i installation/database-setup.sh --help\n\nMuDoGeR database script v=1.0\nUsage: bash -i database-setup.sh --dbs [module] -o output_folder_for_dbs\n\n  --dbs all              \t\tdownload and install the necessaries databases for all MuDoGeR modules [default]\n  --dbs prokaryotes              \tdownload and install the necessaries databases for prokaryotes module\n  --dbs viruses              \t\tdownload and install the necessaries databases for viruses module\n  --dbs eukaryotes              \tdownload and install the necessaries databases for eukaryotes module\n  -o path/folder/to/save/dbs      \toutput folder where you want to save the downloaded databases\n  --help | -h\t\t\t\tshow this help message\n  --version | -v\t\t\tshow mudoger version\n\n\n```\n\n**3.1 - Update databases**\n\nWe plan to update the automatic database installation script at least once a year. The user can check the version of the database update script by using the ```--version``` flag. Finally, in case the user would like to manually update the databases, one should find the location of the databases used by MuDoGeR by running ```cat $CONDA_PREFIX/envs/mudoger_env/bin/database.sh```.\n\nThe user can then follow the instructions from the tool developer to update the desired database. The only requirement is that the root folder for the database uses the name of the tool as follows: ```buscodbs/  checkm/  checkv/  eukccdb/  gtdbtk/  vibrant/  wish/```.\n\n**4 - Additional module 4 (eukaryotes) installation instructions**\n\nSome tools used in module 4 (GENEMARK and MAKER2) require the user to provide information to the developers. Consequently, we could not implement an automatic installation and setup script. However, we created a tutorial to finish the module 4 setup.\n\nThe module 4 setup tutorial is found in [Module 4 setup](https://github.com/mdsufz/MuDoGeR/blob/master/installation/genemark_maker2_installation.md).\n\n# MuDoGeR simplified usage - with conda environments installation\n\nCurrently, MuDoGeR v1.0 only works with paired-end ILLUMINA sequences. Future updates will add tools to work with long-read sequencing samples.\nMuDoGeR was designed to work module by module, starting from pre-process (Module 1). Additional modularity will be added in future updates to allow the user to run specific parts of the pipeline. However, you can always use the tools independently by using the created conda environments by MuDoGeR. You can follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently).\n\n**MuDoGeR** is an easy-to-use wrapper of several tools organized within modules. The individual modules can be called independently.\n\nThe pipeline requires, as input, a metadata table in tsv format containing the samples to be processed and the path to its raw sequence reads. The metadata file should have the sample name and the path to the forward reads file from the sample in one line, followed by the same sample name and the path to the reverse reads from the sample. An example metadata file is as follows:\n```\n#Show the content of the metadata.tsv file\n$ cat metadata.tsv\n\nEA_ERX4593008   /path/to/EA_ERX4593008/raw_reads_1.fastq\nEA_ERX4593008   /path/to/EA_ERX4593008/raw_reads_2.fastq\nEA_ERX4593009   /path/to/EA_ERX4593009/raw_reads_1.fastq\nEA_ERX4593009   /path/to/EA_ERX4593009/raw_reads_2.fastq\nEA_ERX4593010   /path/to/EA_ERX4593010/raw_reads_1.fastq\nEA_ERX4593010   /path/to/EA_ERX4593010/raw_reads_2.fastq\nEA_ERX4593011   /path/to/EA_ERX4593011/raw_reads_1.fastq\nEA_ERX4593011   /path/to/EA_ERX4593011/raw_reads_2.fastq\n\n```\n\n## Please note that the forward sequencing reads file must end in \"_1.fastq\" and the reverse in \"_2.fastq\"! \n\nMuDoGeR is designed to run all multi-domain genome recovery pipelines entirely. In order for MuDoGeR to work automatically, from start to finish, we use a specific folder structure. Please read the [Manual_MuDoGeR](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md) if you would like to manipulate MuDoGeR.\n\n## MuDoGeR is installed via conda\n\nOnce MuDoGeR is installed, you can test it as follows:\n```console\n$ conda activate mudoger_env\n$ mudoger --help\n\n\n\t\u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588  \n\t\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588   \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588       \u2588\u2588      \u2588\u2588   \u2588\u2588 \n\t\u2588\u2588 \u2588\u2588\u2588\u2588 \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588   \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588   \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \n\t\u2588\u2588  \u2588\u2588  \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588   \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588    \u2588\u2588 \u2588\u2588      \u2588\u2588   \u2588\u2588 \n\t\u2588\u2588      \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588   \u2588\u2588 \n\t\t\tMulti-Domain Genome Recovery\n\t\t\t\tVersion 1.0.1\n\n\n\nMudoger v=1.0.1\nUsage: mudoger --module module_name --meta metadata_table.tsv -o output_folder [module_options]\n\n  --meta              \t\t Metadata table with your samples, as explained in the github documentation\n  --module preprocess            Run all steps from module 1 (read_qc, kmer memory prediction and assembly)\n  --module prokaryotes           Recovery of Prokaryotic Metagenome-Assembled Genomes\n  --module viruses\t\t Recovery of Uncultivated Viral Genomes\n  --module eukaryotes\t\t Recovery of Eukaryotic Metagenome-Assembled Bins\n  --module abundance_tables\t pMAGs/UViGs/eMABs coverage and abundance calculation\n          \ttype             can be --reduced (default) , --complete or --genes\n          \tmapping_type\t can be --absolute-values (default), --coverage, and --relative-abundance\n  --help | -h\t\t         show this help message\n  --version | -v\t         show mudoger version\n\n```\n\nA simplified use of MuDoGeR can be done as follows:\n\n```console\n\n$ mudoger --module preprocess --meta /path/to/metadata.tsv -o /path/to/output/folder -t 20 -m 100\n\n$ mudoger --module prokaryotes --meta /path/to/metadata.tsv -o /path/to/output/folder -t 20\n\n$ mudoger --module viruses --meta /path/to/metadata.tsv -o /path/to/output/folder -t 20\n\n$ mudoger --module eukaryotes --meta /path/to/metadata.tsv -o /path/to/output/folder -t 20\n\n$ mudoger --module abundance_tables --meta /path/to/metadata.tsv -o /path/to/output/folder -t 20 --reduced --coverage --relative-abundance\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/conda_installation_and_usage.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Finish Module 4 installation\n\n### Activate MuDoGeR environment and load config file\n\n```console\n$ conda activate mudoger_env\n$ config_file=\"$(which config.sh)\"\n$ source \"$config_file\"\n\n```\n## Complete GENEMARK installation\n\n1. ACCESS GENEMARK WEBPAGE\n\n  http://opal.biology.gatech.edu/GeneMark/license_download.cgi\n\n\n2. SELECT OPTIONS \n\n      **GeneMark-ES/ET/EP ver \\*_lic and LINUX 64**\n\n\n3. FILL IN THE CREDENTIALS WITH ***YOUR NAME, E-MAIL, INSTITUTION, ETC... ***\n\n\n4. CLICK ON ***'I agree the terms of this license agreement'***\n\n\n5. DOWNLOAD THE 64_bit key and the program files provided\n\n      It should look something like the following:\n\n        ```console\n        $ wget http://topaz.gatech.edu/GeneMark/tmp/GMtool_HZzc0/gmes_linux_64.tar.gz\n        $ wget http://topaz.gatech.edu/GeneMark/tmp/GMtool_HZzc0/gm_key_64.gz\n        ```\n\n      You should have the following files:\n      **gmes_linux_64.tar.gz** and  **gm_key_64.gz**\n\n\n6. RETRIEVE PATH TO GENEMARK ENV (this environment is already created and ready once you installed module 4 tools by running install.sh. See [Installation](https://github.com/JotaKas/MuDoGeR/blob/master/README.md#installation))\n\n```console\n$ genemarker_environment=\"$MUDOGER_DEPENDENCIES_ENVS_PATH/genemarker_env\"\n```\n\n7. COPY THE FILES TO THE FOLLOWING SPECIFIC FOLDER (remember to first run the install.sh script)\n\n```console\n$ cp /path/to/gmes_linux_64.tar.gz  $genemarker_environment/GENEMARK_MAIN\n$ cp /path/to/gm_key_64.gz  $genemarker_environment/GENEMARK_MAIN\n\n# IT SHOULD LOOK LIKE THIS:\n$ ls  $genemarker_environment/GENEMARK_MAIN\n$ gmes_linux_64.tar.gz  gm_key_64.gz\n```\n\n8. ENTER THE FOLDER AND DECOMPRESS FILES\n\n```console\n$ cd  $genemarker_environment/GENEMARK_MAIN\n$ gunzip *\n```\n\n9. COPY AND RENAME KEY FILE TO YOUR HOME FOLDER \n\n```console\n$ cp gm_key_64 ~/.gm_key\n```\n\n10. DECOMPRESS TOOL\n\n```console\n$ tar -xvf gmes_linux_64.tar\n$ rm -fr gmes_linux_64.tar # Make sure you remove the tar file once extracted\n```\n\n11. ACTIVATE THE genemark_env CONDA ENVIRONMENT (created during the installation procedure)\n\n```console\n$ conda activate $genemarker_environment\n```\n\n12. GET PERL PATH\n\n```console\n$ perl_path=\"$(which perl)\"\n$ cd - #return\n```\n\n13. CONFIGURE GENEMARK TO USE THE CORRECT PERL\n\n```console\n$ cd $genemarker_environment/GENEMARK_MAIN/gmes_linux_64\n$ perl change_path_in_perl_scripts.pl \"$perl_path\"\n$ cd - #return\n```\n\n14. Return to mudoger_env\n```console\n$ conda deactivate\n```\n\n\n## COMPLETING INSTALLATION FOR MAKER2\n\n1. DOWNLOAD MAKER (Registration required)\n\n    Go to http://weatherby.genetics.utah.edu/cgi-bin/registration/maker_license.cgi and fill out your information to download the tool\n    Copy the download link provided (Usually by Right-click -> 'Copy Link') and type:\n    ```console\n    $ wget *Download link*\n\n    #Should be something like:\n    # $ wget http://weatherby.genetics.utah.edu/maker_downloads/1BF1/66D1/3FAA/FF20FB345D6221AA8A338D1B9D8A/maker-3.01.04.tgz\n    ```\n\n\n2. RETRIEVE PATH TO MUDOGER_ENV (this environment is already created and ready once you used install.sh. See [Installation](https://github.com/JotaKas/MuDoGeR/blob/master/README.md#installation))\n\n```console\n$ maker2_environment=\"$MUDOGER_DEPENDENCIES_ENVS_PATH/maker2_env\" \n```\n\n\n3. PLACE THE DOWNLOADED MAKER FILE INSIDE SPECIFIC FOLDER created during install.sh (remember to first run the install.sh script)\n```console\n$ cp maker-3.01.04.tgz $maker2_environment/MAKER_MAIN\n```\n\n\n4. ENTER FOLDER AND DECOMPRESS FILES\n```console\n$ cd  $maker2_environment/MAKER_MAIN\n$ tar xvfz maker-3.01.04.tgz\n```\n\n\n5. CREATE A EXE FOLDER INSIDE THE MAKER EXTRACTED FOLDER\n```console\n$ mkdir $maker2_environment/MAKER_MAIN/maker/exe\n```\n\n\n6. DOWNLOAD DFAM DATABASE. You should have enough space for this database where conda is installed (~97GB)\n```console\n$ wget -P $maker2_environment/MAKER_MAIN/ https://www.dfam.org/releases/Dfam_3.5/families/Dfam.h5.gz\n$ gunzip Dfam.h5.gz\n```\n\n\n7. DOWNLOAD AND MOVE SNAP\n```console\n$ wget -P $maker2_environment/MAKER_MAIN/ http://korflab.ucdavis.edu/Software/snap-2013-11-29.tar.gz\n$ tar xvfz snap-2013-11-29.tar.gz\n$ mv snap $maker2_environment/MAKER_MAIN/maker/exe\n```\n\n\n8. COPY SOME SCRIPTS FROM YOUR GENEMARK INSTALLATION (Installation done [previously](https://github.com/JotaKas/MuDoGeR/blob/master/installation/genemark_maker2_installation.md#complete-genemark-installation), just copied the necessaries bin)\n```console\n$ cp -r $MUDOGER_DEPENDENCIES_ENVS_PATH/genemarker_env/GENEMARK_MAIN/gmes_linux_64/* $MUDOGER_DEPENDENCIES_ENVS_PATH/maker2_env/bin/\n```\n\n\n9. DOWNLOAD REPEATMASKER\n```console\n$ wget -P $maker2_environment/MAKER_MAIN/ https://www.repeatmasker.org/RepeatMasker/RepeatMasker-4.1.2-p1.tar.gz\n```\n\n\n10. EXTRACT REPEATMASKER\n```console\n$ tar xvfz RepeatMasker-4.1.2-p1.tar.gz\n```\n\n\n11. MOVE DFAM DATABASE TO LIBRARIES FOLDER IN REPEATMASKER\n```console\n$ mv -f $maker2_environment/MAKER_MAIN/Dfam.h5 $maker2_environment/MAKER_MAIN/RepeatMasker/Libraries/\n```\n\n12. MOVE REPEATMASKER TO EXE FOLDER IN MAKER\n```console\n$ mv $maker2_environment/MAKER_MAIN/RepeatMasker $maker2_environment/MAKER_MAIN/maker/exe/\n$ cd - #return\n```\n\n\n13. INSTALL REPEATMASKER\n```console\n$ conda activate $maker2_environment\n$ cd $maker2_environment/MAKER_MAIN/maker/exe/RepeatMasker/\n```\n\n   You will be prompt to enter some tools paths to configure repeatmasker.\n   Maker sure your maker2 enviroment is activated. It was created during initial [installation](https://github.com/JotaKas/MuDoGeR/blob/master/README.md#installation)\n    Ideally it should automatically find everything. If that is the case, just hit enter when prompt.\n    \n```console\n$ perl ./configure\n```\n   Hit enter if TRF path is correct\n   Select 3 (HMMER) as search engine and set as default (Y)\n   Hit 5 to be done and wait database configuration\n```console\n$ cd - #return\n```\n\n\n14. CONFIGURE MAKER\n```console\n$ cd $maker2_environment/MAKER_MAIN/maker/src\n$ perl Build.PL #(Currently answer N to set MPI)\n```\n   If any Perl dependency was not properly installed, for any reason, please run the following for the each dependency\n```console\n$ cpanm FAILED::DEPENDENCY\n$ #ex: cpanm Bit::Vector\n```\n  If that did not work, for any reason, use the maker2 solution and configure maker2 again\n  ```console\n  ./Build installdeps\n  ```\n\n\n15. INSTALL MAKER\n```console\n$ ./Build install\n\n$ export ZOE=\"$maker2_environment/MAKER_MAIN/maker/exe/snap/Zoe\"\n$ export AUGUSTUS_CONFIG_PATH=\"$maker2_environment/config\"\n```\n\n\n16. ADD MAKER TO PATH\n```console\n$ export PATH=$maker2_environment/MAKER_MAIN/maker/bin:$PATH\n$ cd - #return\n```\n\n\n17. Return to mudoger_env\n```console\n$ conda deactivate\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/installation/genemark_maker2_installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 0.9999884873449135,
      "result": {
        "type": "Text_excerpt",
        "value": "In addition, MuDoGeR also sets up individual working conda environments for each of the integrated tools. Consequently, if the user wants to customize the use of any tool, you can use MuDoGeR to configure your machine and follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently) to activate the relevant environments. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9859162440687388,
      "result": {
        "original_header": "Reading this GitHub",
        "type": "Text_excerpt",
        "value": "This Github should help you install and run the complete MuDoGeR pipeline, as well as understand all its outputs. Consequently, we suggest the following reading strategy:  \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8317307264958975,
      "result": {
        "original_header": "MuDoGeR Overview",
        "type": "Text_excerpt",
        "value": "Furthermore, in **Module 5**: **Relative Abundance**, users can automatically calculate the coverage and relative abundance tables from the recovered pMAGs/UViGs/eMABs. The users can also calculate the coverage and relative abundance tables from the prokaryotic genes annotated in assembled libraries.  \n \n* Please find a comprehensive description of the main outputs in the [understand outputs](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md) file.\n* Instructions for using the **MuDoGeR** can be found in the following hyperlink: [Manual MuDoGeR](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md).\n* Information about the system requirements of the **MuDoGeR** can be found in the following hyperlink: [System requirements](https://github.com/mdsufz/MuDoGeR/blob/master/README.md#system-requirements).\n* Detailed instructions for the installation of the **MuDoGeR** tools can be found in the following hyperlink: [Installation](https://github.com/mdsufz/MuDoGeR/blob/master/README.md#installation).\n* The simplified usage of the **MuDoGeR** can be found in the following hyperlink: [MuDoGeR simplified usage](https://github.com/mdsufz/MuDoGeR#mudoger-singularity-execution).\n* To use the individual working conda environments created by MuDoGeR for each of the used tools, go [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9796414871457719,
      "result": {
        "type": "Text_excerpt",
        "value": "\n# System requirements \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9993428680139258,
      "result": {
        "original_header": "System requirements",
        "type": "Text_excerpt",
        "value": "Keep in mind that the MuDoGeR pipeline requires some computer power, and you probably won't be able to run it on a laptop. The complete software installation requires approximately 170 GB, but **MAKER2**, from **Module 4**, uses 99 GB of that space since it requires the database to be installed in a specific manner. See [Module 4 setup](https://github.com/mdsufz/MuDoGeR/blob/master/installation/genemark_maker2_installation.md). The complete database requirements, considering all tools, is around 439.9 GB. However, you don't need to install all of MuDoGeR's Modules to use it. \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9550548396220805,
      "result": {
        "type": "Text_excerpt",
        "value": "# Installation \n## Installation using Singularity (now called Apptainer) - Recommended \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.951025414365153,
      "result": {
        "original_header": "Installation using Singularity (now called Apptainer) - Recommended",
        "type": "Text_excerpt",
        "value": "**0 - Install Singularity**\nMost HPC administrators are already making Singularity available for its users. You could check if that is your case and skip this step.\nOtherwise, please follow the instructions on the official [Singularity installation guide](https://apptainer.org/admin-docs/master/installation.html) \n**1 - Download MuDoGeR ready-to-use container** \n**Click [HERE](https://filedn.eu/lu0bWmWMIJq7wnpDlYcQ39z/mudogerV1_1.sif) to be redirected to the download page.** \nFollowing, you can click on Direct Download or right-click it and \"copy link\". Once with the copied link, you can use ```wget``` on your platform. \nTo download the ```mudoger_singularity.sh``` script to run the MuDoGeR singularity container run:\n```\nwget https://github.com/mdsufz/MuDoGeR/raw/master/installation/dependencies/mudoger_singularity.sh\n\n```\n \nIf you plan to use the script in a SLURM-based HPC, perhaps you will find the ```mudoger_singularity_slurm.sh``` script useful. This script simply wraps the mudoger command as a SLURM job and submits it for you. You can download the script by running:\n```\nwget https://github.com/mdsufz/MuDoGeR/raw/master/installation/dependencies/mudoger_singularity_slurm.sh\n```\n \n**3 - Database installation** \nThe MuDoGeR required databases can vary depending on which module you plan to use. Naturally, the databases can require significant storage and are not included in the MuDoGeR container.\nIt is recommended that the user follow the instructions from the tool developer to install and update the desired database.\nThe only requirement is that all the databases use the same base folder and are installed using the name of the tool as follows: ```buscodbs/  checkm/  checkv/  eukccdb/  gtdbtk/  vibrant/  wish/```.\nTherefore, your database installation folder should look like this:\n```\nmudoger_dbs/\n\u251c\u2500\u2500 buscodbs\n\u251c\u2500\u2500 checkm\n\u251c\u2500\u2500 checkv\n\u251c\u2500\u2500 eukccdb\n\u251c\u2500\u2500 gtdbtk\n\u251c\u2500\u2500 vibrant\n\u2514\u2500\u2500 wish\n```\n \nHowever, additionally, the user can find useful guidance by reading the automated database configuration script [here](installation/database-setup.sh).\nAn additional tutorial on how to install the databases will be available shortly.  \n**4 - Configure Genemark License if you will use Module 4** \n  http://opal.biology.gatech.edu/GeneMark/license_download.cgi \n\n3. FILL IN THE CREDENTIALS WITH ***YOUR NAME, E-MAIL, INSTITUTION, ETC... *** \n\n5. DOWNLOAD THE 64_bit key files provided \n        ```console\n        $ wget http://topaz.gatech.edu/GeneMark/tmp/GMtool_HZzc0/gm_key_64.gz\n        ``` \n      You should have the following file:  **gm_key_64.gz** \n\n6. DECOMPRESS THE KEY FILE\n```console\n$ gunzip gm_key_64.gz\n```\n \n7. COPY AND RENAME KEY FILE TO A FOLDER \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999993132932796,
      "result": {
        "type": "Text_excerpt",
        "value": "The folder you will move the renamed key file will be used as your Home during the execution of Module 4 in singularity. Please see [here](https://github.com/mdsufz/MuDoGeR#mudoger-singularity-usage-notes) to run Module 4 using the singularity container. \n```console\n$ cp gm_key_64 /path/to/folder/.gm_key\n```\n## Installation using conda environments\n \nInstalling MuDoGeR via conda can help the user to utilize only part of the workflow. However, it is recommended for those with a deeper understanding of how conda environments work, as manual adjustments may need to be made. If that is your case, please follow the instructions here: [MuDoGeR conda installation](conda_installation_and_usage.md). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9509686275692861,
      "result": {
        "original_header": "Module 4: Recovery of Eukaryotic Metagenome-Assembled Bins (eMABs)",
        "type": "Text_excerpt",
        "value": "When you use MuDoGeR Module 4, it will perform the following tasks: \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999796684906864,
      "result": {
        "original_header": "Module 5 Relative abundance",
        "type": "Text_excerpt",
        "value": "The steps of Module 5 can be summarized as follows. If you select **complete** or **genes**, the pipeline will run steps **5.a** and **5.b**. If you select **genes**, the pipeline will run **5.c**:  \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9499590955810796,
      "result": {
        "original_header": "MuDoGeR simplified usage - with Singularity installation",
        "type": "Text_excerpt",
        "value": "Currently, MuDoGeR v1.0 only works with paired-end ILLUMINA sequences. Future updates will add tools to work with long-read sequencing samples.\nMuDoGeR was designed to work module by module, starting from pre-process (Module 1). Additional modularity will be added in future updates to allow the user to run specific parts of the pipeline. However, you can always use the tools independently by using the created conda environments by MuDoGeR. You can follow the instructions [here](https://github.com/mdsufz/MuDoGeR/blob/master/understand_main_outputs.md#using-the-tools-independently). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9931625260366026,
      "result": {
        "original_header": "MuDoGeR Singularity Execution",
        "type": "Text_excerpt",
        "value": "When using the MuDoGeR singularity container, you have all the complex dependencies and software environments from MuDoGeR already configured.\nFor using the recommended singularity installation, please keep your metadata.tsv file in the same folder where you have your sample reads. \nWe have developed a MuDoGeR singularity usage script. You should have it available if you followed the [installation guide](https://github.com/mdsufz/MuDoGeR#installation) \nOnce you have the ```mudoger_singularity.sh``` script available you can see the help information by typing:\n```console\n$ /path/to/mudoger_singularity.sh -h\n\nAll options are required.\nUsage: ./mudoger_singularity.sh <module_name> -s <singularity_file_path> -o <output_path> -i <input_data_path> -d <databases_path> -h <home_path> -m <memory> -t <threads> -f <metadata_file> [abundance_tables options]\n  <module_name>         Module name (e.g., preprocess, prokaryotes, viruses, abundance_tables, eukaryotes)\nOptions:\n  -s  Path to Singularity file (.sif file)\n  -o  Path to output folder\n  -i  Path to input data (Note: the metadata file should be located in this folder)\n  -d  Path to databases folder\n  -c  Path for Singularity home directory (required for eukaryotes module)\n  -m  Memory size (for preprocess module)\n  -t  Number of threads\n  -f  Name of the metadata file (including .tsv extension)\nAbundance Tables Options (only for abundance_tables module):\n  --reduced (default), --complete, or --genes (exclusive options)\n  --absolute-values (default), --coverage, and/or --relative-abundance (can be combined)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9935318238143426,
      "result": {
        "type": "Text_excerpt",
        "value": "Therefore, if you have your metadata.tsv and your samples reads in the ```test_data``` folder, your output folder is the BASH21*, and your databases are in the BASH22* folder, your usage commands should be:\nBASH23* \n```console\n\n/path/to/mudoger_singularity.sh eukaryotes -s /path/to/mudogerV1.sif -o /path/to/test_out/ -i /path/to/test_data/ -d /path/to/mudoger_dbs -c /path/to/tmp_home/ -t 25 -f metadata.tsv\n\n``` \nIf you want to use the conda environment installation, a more detailed tutorial for the MuDoGeR can be found in [Manual_MuDoGeR](https://github.com/mdsufz/MuDoGeR/blob/master/Manual_MuDoGeR.md). \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8045318655200986,
      "result": {
        "original_header": "Installation using Singularity (now called Apptainer) - Recommended",
        "type": "Text_excerpt",
        "value": "\n5. DOWNLOAD THE 64_bit key files provided \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8051077127808566,
      "result": {
        "original_header": "MuDoGeR Singularity Execution",
        "type": "Text_excerpt",
        "value": "Once you have the ```mudoger_singularity.sh``` script available you can see the help information by typing:\n```console\n$ /path/to/mudoger_singularity.sh -h\n\nAll options are required.\nUsage: ./mudoger_singularity.sh <module_name> -s <singularity_file_path> -o <output_path> -i <input_data_path> -d <databases_path> -h <home_path> -m <memory> -t <threads> -f <metadata_file> [abundance_tables options]\n  <module_name>         Module name (e.g., preprocess, prokaryotes, viruses, abundance_tables, eukaryotes)\nOptions:\n  -s  Path to Singularity file (.sif file)\n  -o  Path to output folder\n  -i  Path to input data (Note: the metadata file should be located in this folder)\n  -d  Path to databases folder\n  -c  Path for Singularity home directory (required for eukaryotes module)\n  -m  Memory size (for preprocess module)\n  -t  Number of threads\n  -f  Name of the metadata file (including .tsv extension)\nAbundance Tables Options (only for abundance_tables module):\n  --reduced (default), --complete, or --genes (exclusive options)\n  --absolute-values (default), --coverage, and/or --relative-abundance (can be combined)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mdsufz/MuDoGeR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MuDoGeR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mdsufz"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 198222,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 35265,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 32199,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mdsufz/MuDoGeR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:45:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 86
      },
      "technique": "GitHub_API"
    }
  ]
}