{
  "application_domain": [
    {
      "confidence": 13.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies"
        ],
        "type": "Text_excerpt",
        "value": "If you have used any of the PanDelos-frags project software, please cite the following paper:\n\n     Vincenzo Bonnici, Claudia Mengoni, Manuel Mangoni, Giuditta Franco, Rosalba Giugno\n     PanDelos-frags: A methodology for discovering pangenomic content of incomplete microbial assemblies\n     Journal of Biomedical Informatics, Volume 148, December 2023. https://doi.org/10.1016/j.jbi.2023.104552\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InfOmics/PanDelos-frags"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-10T12:05:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-13T09:50:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A version of PanDelos that discovers pangenomic content in fragmented genomes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9984750013968456,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "Pangenomics was originally defined as the problem of comparing the compo-\nsition of genes into gene families within a set of bacterial isolates belonging\nto the same species. The problem requires the calculation of sequence ho-\nmology among such genes. When combined with metagenomics, namely\nfor human microbiome composition analysis, gene-oriented pangenome de-\ntection becomes a promising method to decipher ecosystem functions and\npopulation-level evolution.\nEstablished computational tools are able to investigate the genetic con-\ntent of isolates for which a complete genomic sequence is available. However,\nthere is a plethora of incomplete genomes that are available on public re-\nsources, which only a few tools may analyse. Incomplete means that the\nprocess for reconstructing their genomic sequence is not complete, and only\nfragments of their sequence are currently available. However, the information\ncontained in these fragments may play an essential role in the analyses.\nHere, we present PanDelos-frags, a computational tool which exploits and\nextends previous results in analysing complete genomes. It provides a new\nmethodology for inferring missing genetic information and thus for managing\nincomplete genomes. PanDelos-frags outperforms state-of-the-art approaches\nin reconstructing gene families in synthetic benchmarks and in a real use case\nof metagenomics \n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8939377145238478,
      "result": {
        "original_header": "Using PanDelos-frags",
        "type": "Text_excerpt",
        "value": "In order to run PanDelos-frags you can download the docker image with all required dependencies installed. \nOnce the docker is up and running there are two main steps to get ready to run the tool are:\n* download the database of reference sequences (only the first time you use the tool)\n* prepare input data  \nIn the following lines you will see an example of how to get the tool to work and what is the expected input data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8925730163399682,
      "result": {
        "original_header": "Output structure",
        "type": "Text_excerpt",
        "value": "The main output file is `output.clus`, created in the main output directory. This file is a space-separated file where each line represents a gene family. The genes are represented by a code used throughout the analysis (e.g. NC_000908.2reconstructed_45tua:101242-101644(+)) which contains the genome of belonging (e.g. NC_000908.2reconstructed_45tua) and its location on the genome (e.g. 101242-101644(+)). \nThe directories `complete/` and `fragmented/` contain all the relative intermediate file generated by PanDelos-frags.\n \n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8767002594941623,
      "result": {
        "original_header": "Supplementary files",
        "type": "Text_excerpt",
        "value": "Supplementary scripts and data used to run the analysis reported in PanDelos-frags manuscript can be found at [Cengoni/PanDelos-frags-SUPP](https://github.com/Cengoni/PanDelos-frags-SUPP)\n \n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download docker image",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`docker pull cmengoni/pandelos-frags`\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Run setup.sh script to download database",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`./PanDelos-frags/setup.sh <n_cores>`\n\nThis script downloads a database of all prokaryotes reference genomes (~18GB)\nNote that the database will persist locally even after you stop the container. This will allow you to skip this step in future PanDelos-frags runs.\nIf you have multiple cores available you can run this script in parallel by adding as `<n_cores>` a number greater than 1 (suggested 18 cores), otherwise just write 1.\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3) Download input data to run an example",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`./PanDelos-frags/examples/moraxella/prepare_ilist.sh <container_workingdir>`\n\nThis script downloads 20 Moraxella genomes from NCBI into the input directory `<container_workingdir>/data`. It also creates the input file `<container_workingdir>/ilist.csv` required to run PanDelos-frags. \nIn short the `ilist.csv` file is a comma-separated file where the first column contains all the paths to the genomes and the second column contains one of `complete` or `fragmented`, depending on whether the genome is a single-sequence fasta file (`complete`) or a multi-fasta file (`fragmented`).\n\nExample:\n```\nPanDelos-frags/examples/moraxella/input/GCF_003971285.1_ASM397128v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_003971345.1_ASM397134v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_010603965.1_ASM1060396v1_genomic.fna,fragmented\nPanDelos-frags/examples/moraxella/input/GCF_010612395.1_ASM1061239v1_genomic.fna,fragmented\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/InfOmics/PanDelos-frags/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InfOmics/PanDelos-frags/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InfOmics/PanDelos-frags"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/setup.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/PanDelosFork/pandelos.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/PanDelosFork/example/download.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/PanDelosFork/example/run_examples.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/PanDelosFork/ig/compile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/complete_genome_genes_extraction.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/get_fragment_coordinates.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/reconstruct_genes.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/align_to_reconstructed_genome.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/gene_prediction.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/align_to_candidate_genome.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/scripts/fragmented_genome_genes_extraction.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/examples/moraxella/prepare_ilist.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Cengoni/PanDelos-frags-SUPP/main/workflow.png"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9978469644215385,
      "result": {
        "original_header": "Using PanDelos-frags",
        "type": "Text_excerpt",
        "value": "In order to run PanDelos-frags you can download the docker image with all required dependencies installed. \nOnce the docker is up and running there are two main steps to get ready to run the tool are:\n* download the database of reference sequences (only the first time you use the tool)\n* prepare input data  \n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/InfOmics/PanDelos-frags/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 InfOmics\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PanDelos-frags"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "InfOmics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 64928,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 31062,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 13129,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1) Run docker",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`docker run -it --rm -v <absolute_path_db>:/PanDelos-frags/ref_prok_rep_genomes -v <absolute_path_workingdir>:/<container_workingdir> cmengoni/pandelos-frags`\n\nThis command allows you to create a running PanDelos-frags Docker container. In detail:\n* `-it`: create an interactive docker container\n* `--rm`: the running instance of the container will be removed after it is closed\n* `-v <absolute_path_db>:/PanDelos-frags/ref_prok_rep_genomes`: it creates a connection between the local directory where you want to store the database required to run PanDelos-frags (left side, before the double dots) and its corresponding location in the container (right side, after the double dots). It is mandatory that you use the as database path of the container `/PanDelos-frags/ref_prok_rep_genomes`.\n* `-v <absolute_path_workingdir>:/<container_workingdir>`: it creates a connection between the local directory where you want to store all files (input/output) related to a specific PanDelos-frags run (left side, before the double dots) and its corresponding location in the container (right side, after the double dots).\nIn this example\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Run setup.sh script to download database",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`./PanDelos-frags/setup.sh <n_cores>`\n\nThis script downloads a database of all prokaryotes reference genomes (~18GB)\nNote that the database will persist locally even after you stop the container. This will allow you to skip this step in future PanDelos-frags runs.\nIf you have multiple cores available you can run this script in parallel by adding as `<n_cores>` a number greater than 1 (suggested 18 cores), otherwise just write 1.\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3) Download input data to run an example",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`./PanDelos-frags/examples/moraxella/prepare_ilist.sh <container_workingdir>`\n\nThis script downloads 20 Moraxella genomes from NCBI into the input directory `<container_workingdir>/data`. It also creates the input file `<container_workingdir>/ilist.csv` required to run PanDelos-frags. \nIn short the `ilist.csv` file is a comma-separated file where the first column contains all the paths to the genomes and the second column contains one of `complete` or `fragmented`, depending on whether the genome is a single-sequence fasta file (`complete`) or a multi-fasta file (`fragmented`).\n\nExample:\n```\nPanDelos-frags/examples/moraxella/input/GCF_003971285.1_ASM397128v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_003971345.1_ASM397134v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_010603965.1_ASM1060396v1_genomic.fna,fragmented\nPanDelos-frags/examples/moraxella/input/GCF_010612395.1_ASM1061239v1_genomic.fna,fragmented\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4) Run PanDelos-frags",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`pandelos-frags <container_workingdir>/ilist.csv <container_workingdir>/<ouput_dir>`\n\nThis is the actual PanDelos-frags command you need to use to run the tool. The required parameters are an:\n* `ilist.csv` input file, formatted as described in the previous point\n* an output directory. It's important that the output directory is in the `<container_workingdir>` so that the output will be saved in a container folder which is linked to your local directory. In this way the ouput will persist even after you close the docker container.\n\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:35:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3) Download input data to run an example",
        "parent_header": [
          "PanDelos-frags: a methodology for discovering pangenomic content of incomplete microbial assemblies",
          "Using PanDelos-frags"
        ],
        "type": "Text_excerpt",
        "value": "`./PanDelos-frags/examples/moraxella/prepare_ilist.sh <container_workingdir>`\n\nThis script downloads 20 Moraxella genomes from NCBI into the input directory `<container_workingdir>/data`. It also creates the input file `<container_workingdir>/ilist.csv` required to run PanDelos-frags. \nIn short the `ilist.csv` file is a comma-separated file where the first column contains all the paths to the genomes and the second column contains one of `complete` or `fragmented`, depending on whether the genome is a single-sequence fasta file (`complete`) or a multi-fasta file (`fragmented`).\n\nExample:\n```\nPanDelos-frags/examples/moraxella/input/GCF_003971285.1_ASM397128v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_003971345.1_ASM397134v1_genomic.fna,complete\nPanDelos-frags/examples/moraxella/input/GCF_010603965.1_ASM1060396v1_genomic.fna,fragmented\nPanDelos-frags/examples/moraxella/input/GCF_010612395.1_ASM1061239v1_genomic.fna,fragmented\n```\n"
      },
      "source": "https://raw.githubusercontent.com/InfOmics/PanDelos-frags/main/README.md",
      "technique": "header_analysis"
    }
  ]
}