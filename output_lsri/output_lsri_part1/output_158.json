{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading the datasets and the reference genome",
        "parent_header": [
          "EMVC-2",
          "Original paper datasets information"
        ],
        "type": "Text_excerpt",
        "value": "To download a dataset you have to run the *download_files.sh* with the specific dataset name as a parameter.\nFor example, to download *ERR262997* run:\n```bash\ncd EMVC-2/datasets\n./download_files.sh ERR262997\n```\n\nTo download the human reference genome version hs37d5 run:\n```bash\ncd EMVC-2/reference\n./download_files.sh hs37d5\n```\n\nThe scripts use the command *curl* to perform the download. \nTo install *curl* on macOS run:\n ```bash\nbrew install curl\n```\nTo install *curl* on Ubuntu or CentOS run:\n ```bash\nsudo apt-get install curl\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/guilledufort/EMVC-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-06-02T10:49:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-16T00:27:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An efficient SNV variant caller based on the expectation maximization algorithm. EMVC-2 is implemented in C and uses a python wrapper."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9599618745183565,
      "result": {
        "original_header": "Alignment information",
        "type": "Text_excerpt",
        "value": "To obtain alignment information in [BAM format](https://samtools.github.io/hts-specs/SAMv1.pdf) for each pair of FASTQ files we recommend using the tool [BWA](https://github.com/lh3/bwa). \n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download repository",
        "parent_header": [
          "EMVC-2",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "```bash\ngit clone https://github.com/guilledufort/EMVC-2.git\n```"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading the datasets and the reference genome",
        "parent_header": [
          "EMVC-2",
          "Original paper datasets information"
        ],
        "type": "Text_excerpt",
        "value": "To download a dataset you have to run the *download_files.sh* with the specific dataset name as a parameter.\nFor example, to download *ERR262997* run:\n```bash\ncd EMVC-2/datasets\n./download_files.sh ERR262997\n```\n\nTo download the human reference genome version hs37d5 run:\n```bash\ncd EMVC-2/reference\n./download_files.sh hs37d5\n```\n\nThe scripts use the command *curl* to perform the download. \nTo install *curl* on macOS run:\n ```bash\nbrew install curl\n```\nTo install *curl* on Ubuntu or CentOS run:\n ```bash\nsudo apt-get install curl\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/guilledufort/EMVC-2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/guilledufort/EMVC-2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "guilledufort/EMVC-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMVC-2"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/datasets/download_files.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/reference/download_files.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install with Conda",
        "parent_header": [
          "EMVC-2"
        ],
        "type": "Text_excerpt",
        "value": "To install directly from source, follow the instructions in the next section.\n\nEMVC-2 is available on conda via the bioconda channel. See [this](https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html) page for installation instructions for conda. Once conda is installed, we recommend creating an environment with python=3.8.1:\n```bash\nconda create --name emvcEnv python=3.8.1\nconda activate emvcEnv\n```\n\nThen run the following command to install emvc-2.\n```bash\nconda install -c bioconda emvc-2\n```\nNote that if emvc-2 is installed this way, it should be invoked with the command `emvc-2` rather than `./emvc-2`. The bioconda [help page](https://bioconda.github.io/tutorials/gcb2020.html#conda-environments) shows the commands if you wish to install emvc-2 in an environment.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling the *candidate_variants_finder* and installing python dependencies",
        "parent_header": [
          "EMVC-2",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "The following instructions will create the *candidate_variants_finder* executable in the root directory, which is needed to run EMVC-2, and install the required python dependencies.\nTo compile *candidate_variants_finder* you need to have the gcc compiler. \n\nOn Linux (Ubuntu or CentOS) gcc usually comes installed by default, but if not run the following:\n```bash\nsudo apt update\nsudo apt-get install gcc\n```\n\nOn macOS, install GCC compiler:\n- Install HomeBrew (https://brew.sh/)\n- Install GCC (this step will be faster if Xcode command line tools are already installed using ```xcode-select --install```):\n```bash\nbrew update\nbrew install gcc\n```\n\nTo check if the gcc compiler is properly installed in your system run:\n\nOn Linux\n```bash\ngcc --version\n```\nThe output should be the description of the installed software.\n\nTo compile *candidate_variants_finder* and install the requiered python dependencies run:\n```bash\ncd EMVC-2/\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install samtools",
        "parent_header": [
          "EMVC-2",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "To install *samtools*, you can use *conda*:\n```bash\nconda install -c bioconda samtools==1.9\n```\nor follow the instructions in [the github repository](https://github.com/samtools/samtools).\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9812287004222735,
      "result": {
        "original_header": "Alignment information",
        "type": "Text_excerpt",
        "value": "To install bwa with conda run:\n ```bash\nconda install bwa\n``` \nTo align a pair of FASTQ files against a reference genome using BWA run:\n ```bash\nbwa mem -t  [-@THREADS] [REF] [FASTQ_R1] [FASTQ_R2] \\\n    | samtools sort [-@THREADS] -o [BAM_FILE] \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/guilledufort/EMVC-2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 guilledufort\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMVC-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "guilledufort"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 131972,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 16233,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2000,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 440,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilledufort",
          "type": "User"
        },
        "date_created": "2023-06-28T18:35:39Z",
        "date_published": "2023-06-28T18:47:29Z",
        "description": "First release.",
        "html_url": "https://github.com/guilledufort/EMVC-2/releases/tag/v1.0",
        "name": "EMVC-2 v1.0",
        "release_id": 110264794,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/guilledufort/EMVC-2/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/guilledufort/EMVC-2/releases/110264794",
        "value": "https://api.github.com/repos/guilledufort/EMVC-2/releases/110264794",
        "zipball_url": "https://api.github.com/repos/guilledufort/EMVC-2/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "EMVC-2",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "Software requirements\n1. python ( == 3.8.1 )\n2. samtools ( == 1.9 )\n\nCompiler requirement\n1. gcc ( Linux: >= 4.8.1, Mac: Apple clang version >= 14.0.0 )\n\nPython libraries requirement\n1. cython ( >=0.29.17 ),\n2. numpy ( >=1.16.6,<=1.20.3 ),\n3. argparse ( >=1.1 ),\n4. scipy ( >=1.1.0,<1.5.4 ),\n5. tqdm ( >=4.46.0 ),\n6. scikit-learn ( >=0.22.2,<=0.24.2 ),\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Compiling the *candidate_variants_finder* and installing python dependencies",
        "parent_header": [
          "EMVC-2",
          "Install from source code"
        ],
        "type": "Text_excerpt",
        "value": "The following instructions will create the *candidate_variants_finder* executable in the root directory, which is needed to run EMVC-2, and install the required python dependencies.\nTo compile *candidate_variants_finder* you need to have the gcc compiler. \n\nOn Linux (Ubuntu or CentOS) gcc usually comes installed by default, but if not run the following:\n```bash\nsudo apt update\nsudo apt-get install gcc\n```\n\nOn macOS, install GCC compiler:\n- Install HomeBrew (https://brew.sh/)\n- Install GCC (this step will be faster if Xcode command line tools are already installed using ```xcode-select --install```):\n```bash\nbrew update\nbrew install gcc\n```\n\nTo check if the gcc compiler is properly installed in your system run:\n\nOn Linux\n```bash\ngcc --version\n```\nThe output should be the description of the installed software.\n\nTo compile *candidate_variants_finder* and install the requiered python dependencies run:\n```bash\ncd EMVC-2/\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-03 23:35:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "EMVC-2"
        ],
        "type": "Text_excerpt",
        "value": "```console \n\nemvc-2 [-h] -i BAM_FILE -r REF_FILE [-p THREADS] [-t ITERATIONS] [-m LEARNERS] [-v VERBOSE] -o OUT_FILE\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i BAM_FILE, --bam_file BAM_FILE\n                        The bam file\n  -r REF_FILE, --ref_file REF_FILE\n                        The reference fasta file\n  -p THREADS, --threads THREADS\n                        The number of parallel threads (default 8)\n  -t ITERATIONS, --iterations ITERATIONS\n                        The number of EM iterations (default 5)\n  -m LEARNERS, --learners LEARNERS\n                        The number of learners (default 7)\n  -v VERBOSE, --verbose VERBOSE\n                        Make output verbose (default 0)\n  -o OUT_FILE, --out_file OUT_FILE\n                        The output file name\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage example",
        "parent_header": [
          "EMVC-2"
        ],
        "type": "Text_excerpt",
        "value": "We add an *example* folder with a test file to run a simple example of the tool. The *hs37d5* reference file must be downloaded following the instructions detailed in the following section for the example to work.\n\n\nTo run the variant caller with 8 threads on the example file *example.bam*:\n```bash\ncd EMVC-2\n./emvc-2 -i example/example.bam -r reference/hs37d5/hs37d5.fa.gz -p 8 -o example/example.vcf\n```\n"
      },
      "source": "https://raw.githubusercontent.com/guilledufort/EMVC-2/main/README.md",
      "technique": "header_analysis"
    }
  ]
}