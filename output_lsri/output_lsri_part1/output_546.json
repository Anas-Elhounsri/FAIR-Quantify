{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction"
        ],
        "type": "Text_excerpt",
        "value": "APA format:\n\nYang, E., Zhang, H., Zang, Z., Zhou, Z., Wang, S., Liu, Z., & Liu, Y. (2023). GCNfold: A novel lightweight model with valid extractors for RNA secondary structure prediction. Computers in Biology and Medicine, 107246.\n\nBibTex format:\n\n```bash\n@article{yang2023gcnfold,\n  title={GCNfold: A novel lightweight model with valid extractors for RNA secondary structure prediction},\n  author={Yang, Enbin and Zhang, Hao and Zang, Zinan and Zhou, Zhiyong and Wang, Shuo and Liu, Zhen and Liu, Yuanning},\n  journal={Computers in Biology and Medicine},\n  pages={107246},\n  year={2023},\n  publisher={Elsevier}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Yang, Enbin and Zhang, Hao and Zang, Zinan and Zhou, Zhiyong and Wang, Shuo and Liu, Zhen and Liu, Yuanning",
        "format": "bibtex",
        "title": "GCNfold: A novel lightweight model with valid extractors for RNA secondary structure prediction",
        "type": "Text_excerpt",
        "value": "@article{yang2023gcnfold,\n    publisher = {Elsevier},\n    year = {2023},\n    pages = {107246},\n    journal = {Computers in Biology and Medicine},\n    author = {Yang, Enbin and Zhang, Hao and Zang, Zinan and Zhou, Zhiyong and Wang, Shuo and Liu, Zhen and Liu, Yuanning},\n    title = {GCNfold: A novel lightweight model with valid extractors for RNA secondary structure prediction},\n}"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EnbinYang/GCNfold"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-16T10:31:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-30T10:53:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GCNfold: A novel lightweight model with valid extractors for RNA secondary structure prediction"
      },
      "technique": "GitHub_API"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data Download",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction",
          "Prepare for Experiments"
        ],
        "type": "Text_excerpt",
        "value": "All data used in the experiments have been shared to [Google Drive](https://drive.google.com/drive/folders/1xfzHKbhYtOjyO9umKbHlUH1wAwdmUPRY?usp=sharing).\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EnbinYang/GCNfold/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EnbinYang/GCNfold/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EnbinYang/GCNfold"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GCNfold: A novel lightweight model for RNA secondary structure prediction"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prepare for Experiments",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction"
        ],
        "type": "Text_excerpt",
        "value": "Let us spend some time configuring the environment that GCNfold needs.\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install RNAplfold",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction",
          "Prepare for Experiments"
        ],
        "type": "Text_excerpt",
        "value": "`RNAplfold` is an executable file in the ViennaRNA package that generates the pairing probability of each base in the RNA sequence. We need to download the installation package from ViennaRNA website, tape archive the `.tar.gz` file, and set the permission of the parent directory.\n\n```bash\nmkdir rnafold && cd rnafold\nwget https://www.tbi.univie.ac.at/RNA/download/sourcecode/2_5_x/ViennaRNA-2.5.0.tar.gz\ntar xvzf ViennaRNA-2.5.0.tar.gz\nchmod 755 -R /root/rnafold  # change to your file path\n```\n\nWe can start installing `RNAplfold` with the command below. Note that the `make` operation takes 20 minutes. The `make` process will appear many warnings. Just ignore them. This will not affect our use.\n\n```bash\ncd ViennaRNA-2.5.0\n./configure\nmake\nsudo make install\n```\n\nRun `RNAplfold`  to check whether the installation is successful. You can also find them in `/usr/local/bin`.\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configure conda environment",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction",
          "Prepare for Experiments"
        ],
        "type": "Text_excerpt",
        "value": "We provide `environment.yml` files including all the environments that GCNfold depends on.\n\n```bash\nconda env create -f environment.yml\nsource activate rna_ss\npip install -e .  # install GCNfold module\n```\n\nSome additional packages need to be installed via the `pip` command. We used the <u>Tsinghua mirror source</u> when installing the dgl module. Not sure if this is possible outside of China. However, installing the 0.4.2 version of dgl by other ways should also be suitable.\n\n```bash\npip install forgi\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple/dgl-cu100/ package/dgl_cu100-0.4.2-cp37-cp37m-manylinux1_x86_64.whl\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ArchiveII dataset testing",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction",
          "Prepare for Experiments"
        ],
        "type": "Text_excerpt",
        "value": "ArchiveII is a dataset for extrapolation prediction. You can download it via [Google Drive](https://drive.google.com/drive/folders/1xfzHKbhYtOjyO9umKbHlUH1wAwdmUPRY?usp=sharing) link. Please put it in the folder `data/archiveII_all`. Run the command below to test. The performance results will be printed on the screen. RNA secondary structures will be stored in the `ct_file` folder in `.ct` file format. You can go through [RNApdbee](http://rnapdbee.cs.put.poznan.pl/) to visualize them.\n\n```bash\npython origin_test.py -c configs/archiveii_test.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIY dataset testing",
        "parent_header": [
          "GCNfold: A novel lightweight model for RNA secondary structure prediction",
          "Prepare for Experiments"
        ],
        "type": "Text_excerpt",
        "value": "We also support you in building your own datasets. Please put your data (only `.ct` files are supported) in the `data/raw_data/diy_data` folder. We have stored 10 RNA data under this path in advance for your testing. Then go through the command below to package them into a `.pickle` file.\n\n```bash\npython preprocess_diy_data.py\n```\n\nPerhaps you need to remove duplicate data. This will generate a file called `test_no_redundant.pkl` under the `data/diy_data` file.\n\n```bash\npython filter_redundant_diy_data.py\n```\n\nPreparation is complete. Go ahead and test your DIY dataset below.\n\n```bash\npython diy_data_test.py -c configs/diy_data_test.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EnbinYang/GCNfold/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gcn, lightweight-model, rna-secondary-structure-prediction, transformer, unet"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GCNfold"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "EnbinYang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 347323,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EnbinYang/GCNfold/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:09:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ]
}