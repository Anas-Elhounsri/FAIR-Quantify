{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ecielyang/ERStruct"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-25T07:20:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-05T16:11:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The Official Python Version for Paper \"An Eigenvalue Ratio Approach to Inferring Population Structure from Whole Genome Sequencing Data\""
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9232999012319697,
      "result": {
        "original_header": "ERstruct - Official Python Implementation",
        "type": "Text_excerpt",
        "value": "A Python package for inferring the number of top informative PCs that capture population structure based on genotype information.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9280045359691577,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "**rep** *(int)* - number of simulation times for the null distribution (set to `5000` by default). We recommend to use `rep` between `2/alpha` and `5/alpha`. \n**cpu_num** *(int)* - optional, number of CPU cores to be used for parallel computing. (set to `1` by default) \n**varm** *(int)*: - Allocated memory (in bytes) of GPUs for computing. When device_idx is set to \"gpu\", the varm parameter can be specified to increase the computational speed by allocating the required amount of memory (in bytes) to the GPU.  (set to `2e+8` by default)\n \n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9559903225385552,
      "result": {
        "original_header": "Other Details",
        "type": "Text_excerpt",
        "value": "For details of the ERStruct algorithm:\n> [ERStruct: An Eigenvalue Ratio Approach to Inferring Population Structure from Sequencing Data](https://www.researchgate.net/publication/350647012_ERStruct_An_Eigenvalue_Ratio_Approach_to_Inferring_Population_Structure_from_Sequencing_Data) \n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ecielyang/ERStruct/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ecielyang/ERStruct/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ecielyang/ERStruct"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ERstruct - Official Python Implementation"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ERstruct - Official Python Implementation"
        ],
        "type": "Text_excerpt",
        "value": "Users can install `ERStruct` by running the command below in command line:\n```commandline\npip install ERStruct\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.929738373805964,
      "result": {
        "original_header": "Parameters",
        "type": "Text_excerpt",
        "value": "```\nerstruct(n, path, rep, alpha, cpu_num=1, device_idx=\"cpu\", varm=2e8, Kc=-1)\n``` \n**cpu_num** *(int)* - optional, number of CPU cores to be used for parallel computing. (set to `1` by default) \n**device_idx** *(str)* - device you are using, \"cpu\" pr \"gpu\". (set to `\"cpu\"` by default) \n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9603360792904856,
      "result": {
        "original_header": "Other Details",
        "type": "Text_excerpt",
        "value": "If you have any question, please contact the email eciel@connect.hku.hk. \n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ecielyang/ERStruct/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ERStruct"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ecielyang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9025,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements for Data File",
        "parent_header": [
          "ERstruct - Official Python Implementation"
        ],
        "type": "Text_excerpt",
        "value": "1. Data files must be of numpy array `.npy` format. Users can convert VCF (variant call format) file in to numpy array via `vcfnp` package\uff1a https://pypi.org/project/vcfnp/, and convert bgen  file in to numpy array via `bgen-reader` package\uff1a https://pypi.org/project/bgen-reader/.\n2. The data matrix must with 0,1,2 and/or NaN (for missing values) entries only. Noting that our package imputes all the missing data (NaN) by 0. Users may perform other types of imputations beforehand.\n3. The rows represent individuals and columns represent markers. If there are more than one data files, the data matrix inside must with the same number of rows.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "ERstruct - Official Python Implementation"
        ],
        "type": "Text_excerpt",
        "value": "ERStruct depends on `numpy`, `torch` and `joblib`.\n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:13:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "ERstruct - Official Python Implementation"
        ],
        "type": "Text_excerpt",
        "value": "Import ERStruct algorithm\n```\nfrom ERStruct import erstruct\n```\n\nDownload sample dataset (the dataset consists of chromosome 21 and chromosome 22 information for 500 individuals obtained \n    from sequencing data of the 1000 Genomes Project.):\n```angular2html\nfrom ERStruct import download_sample\ndownload_sample()\n```\n\nRun ERStruct algorithm on sample dataset with CPUs:\n```commandline\ntest = erstruct(500, ['chr21.npy', 'chr22.npy'], 1000, 5e-3, cpu_num=1, device_idx=\"cpu\")\nK = test.run()\n```\nRun ERStruct algorithm on sample dataset with GPUs:\n```commandline\ntest = erstruct(500, ['chr21.npy', 'chr22.npy'], 1000, 5e-3, device_idx=\"gpu\", varm=2e8)\nK = test.run()\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/ecielyang/ERStruct/main/README.md",
      "technique": "header_analysis"
    }
  ]
}