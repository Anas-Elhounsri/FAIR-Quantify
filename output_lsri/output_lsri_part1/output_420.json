{
  "application_domain": [
    {
      "confidence": 40.07,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "SELFIES"
        ],
        "type": "Text_excerpt",
        "value": "We thank Jacques Boitreaud, Andrew Brereton, Nessa Carson (supersciencegrl), Matthew Carbone (x94carbone),  Vladimir Chupakhin (chupvl), Nathan Frey (ncfrey), Theophile Gaudin,\nHelloJocelynLu, Hyunmin Kim (hmkim), Minjie Li, Vincent Mallet, Alexander Minidis (DocMinus), Kohulan Rajan (Kohulan),\nKevin Ryan (LeanAndMean), Benjamin Sanchez-Lengeling, Andrew White, Zhenpeng Yao and Adamo Young for their suggestions and bug reports,\nand Robert Pollice for chemistry advices.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aspuru-guzik-group/selfies"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-31T16:33:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-02T18:07:46Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Robust representation of semantically constrained graphs, in particular for molecules in chemistry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Very simple creation of random valid molecules:",
        "parent_header": [
          "SELFIES",
          "Usage",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "A key property of SELFIES is the possibility to create valid random molecules in a very simple way -- inspired by a tweet by [Rajarshi Guha](https://twitter.com/rguha/status/1543601839983284224):\n\n```python\nimport selfies as sf\nimport random\n\nalphabet=sf.get_semantic_robust_alphabet() # Gets the alphabet of robust symbols\nrnd_selfies=''.join(random.sample(list(alphabet), 9))\nrnd_smiles=sf.decoder(rnd_selfies)\nprint(rnd_smiles)\n```\nThese simple lines gives crazy molecules, but all are valid. Can be used as a start for more advanced filtering techniques or for machine learning models.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9886930259508218,
      "result": {
        "original_header": "SELFIES",
        "type": "Text_excerpt",
        "value": "\n**Self-Referencing Embedded Strings (SELFIES): A 100% robust molecular string representation**\\\n_Mario Krenn, Florian Haese, AkshatKumar Nigam, Pascal Friederich, Alan Aspuru-Guzik_\\\n[*Machine Learning: Science and Technology* **1**, 045024 (2020)](https://iopscience.iop.org/article/10.1088/2632-2153/aba947), [extensive blog post January 2021](https://aspuru.substack.com/p/molecular-graph-representations-and).\\\n[Talk on youtube about SELFIES](https://www.youtube.com/watch?v=CaIyUmfGXDk).\\\n[A community paper with 31 authors on SELFIES and the future of molecular string representations](https://arxiv.org/abs/2204.00056).\\\n[Blog explaining SELFIES in Japanese language](https://blacktanktop.hatenablog.com/entry/2021/08/12/115613)\\\n**[Code-Paper in February 2023](https://pubs.rsc.org/en/content/articlelanding/2023/DD/D3DD00044C)**\\\n[SELFIES in Wolfram Mathematica](https://resources.wolframcloud.com/PacletRepository/resources/WolframChemistry/Selfies/)  (since Dec 2023)\\\nMajor contributors of v1.0.n: _[Alston Lo](https://github.com/alstonlo) and [Seyone Chithrananda](https://github.com/seyonechithrananda)_\\\nMain developer of v2.0.0: _[Alston Lo](https://github.com/alstonlo)_\\\nChemistry Advisor: [Robert Pollice](https://scholar.google.at/citations?user=JR2N3JIAAAAJ) \nA main objective is to use SELFIES as direct input into machine learning models,\nin particular in generative models, for the generation of molecular graphs\nwhich are syntactically and semantically valid. \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9238618640035984,
      "result": {
        "original_header": "Tests",
        "type": "Text_excerpt",
        "value": "By default, `selfies` is tested against a random subset\n(of size ``dataset_samples=10000``) on various datasets: \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aspuru-guzik-group/selfies/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://selfiesv2.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/aspuru-guzik-group/selfies/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/docs/source/tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/docs/source/tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/examples/benchmark_v2_1_1.ipynb"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/examples/benchmark_v2_1_1.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 127
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aspuru-guzik-group/selfies"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SELFIES"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/examples/VAE_LS_Validity.png"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SELFIES"
        ],
        "type": "Text_excerpt",
        "value": "Use pip to install ``selfies``.\n\n```bash\npip install selfies\n```\n\nTo check if the correct version of ``selfies`` is installed, use\nthe following pip command.\n\n```bash\npip show selfies\n```\n\nTo upgrade to the latest release of ``selfies`` if you are using an\nolder version, use the following pip command. Please see the\n[CHANGELOG](https://github.com/aspuru-guzik-group/selfies/blob/master/CHANGELOG.md)\nto review the changes between versions of `selfies`, before upgrading:\n\n```bash\npip install selfies --upgrade\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8670244013775582,
      "result": {
        "original_header": "SELFIES",
        "type": "Text_excerpt",
        "value": "<p align=\"center\">\n   <img src=\"https://github.com/aspuru-guzik-group/selfies/blob/master/examples/VAE_LS_Validity.png\" alt=\"SELFIES validity in a VAE latent space\" width=\"666px\">\n</p>\n \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9744649741245369,
      "result": {
        "original_header": "Tests",
        "type": "Text_excerpt",
        "value": "`selfies` uses `pytest` with `tox` as its testing framework.\nAll tests can be found in  the `tests/` directory. To run the test suite for\nSELFIES, install ``tox`` and run:\n```bash\ntox -- --trials=10000 --dataset_samples=10000\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8218129785774613,
      "result": {
        "original_header": "Tests",
        "type": "Text_excerpt",
        "value": "`selfies` uses `pytest` with `tox` as its testing framework.\nAll tests can be found in  the `tests/` directory. To run the test suite for\nSELFIES, install ``tox`` and run:\n```bash\ntox -- --trials=10000 --dataset_samples=10000\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 Mario Krenn\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "SELFIES"
        ],
        "type": "Text_excerpt",
        "value": "[Apache License 2.0](https://choosealicense.com/licenses/apache-2.0/)\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "selfies"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "aspuru-guzik-group"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 306030,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://selfiesv2.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2201.12419"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2204.00056"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2012.09712"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2106.04011"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1909.11655"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2024-07-15T00:07:43Z",
        "date_published": "2024-07-15T00:16:50Z",
        "description": "v2.1.2 - 15.07.2024\r\n\r\n    Fixed recursion bug for very long molecules (thanks haydn-jones)\r\n    Added warning when dot-symbol (\".\") exists in peculiar cases (thanks vandrw)\r\n",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v2.1.2",
        "name": "SELFIES v2.1.2 - 15.07.2024",
        "release_id": 165368981,
        "tag": "v2.1.2",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/165368981",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/165368981",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2022-07-14T11:39:22Z",
        "date_published": "2022-07-14T11:40:58Z",
        "description": "Fixed index bug in attribution",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v2.1.1",
        "name": "Selfies v2.1.1 - 14.07.2022",
        "release_id": 71990634,
        "tag": "v2.1.1",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/71990634",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/71990634",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2022-05-17T16:12:00Z",
        "date_published": "2022-05-17T16:50:40Z",
        "description": "**Changed**\r\n- Dropped support for Python 3.5-3.6 and will continue to support only current Python versions.\r\n\r\n**Added:**\r\n- optional attribution to map encoder/decoder output string back to input string (Issue #48, #79)\r\n",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v2.1.0",
        "name": "Selfies v2.1.0 - 17.05.2022",
        "release_id": 67099726,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/67099726",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/67099726",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2021-10-20T22:43:44Z",
        "date_published": "2021-10-20T22:48:22Z",
        "description": "**Changed**\r\n\r\n - Improved SMILES parsing (by using adjacencey lists internally), with tighter error handling (e.g. issues #62 and #60).\r\n - Faster and improved kekulization algorithm (issue #55 fixed).\r\n - Support for symbols that are constrained to 0 bonds (e.g., [CH4]) or >8 bonds (users can now specify custon bond constraints with over 8 bonds).\r\n - New strict=True flag to selfies.encoder, which raises an error if the input SMILES violates the current bond constraints. True by default, can be False for speed-up (if SMILES are guaranteed to be correct).\r\n - Added bond constraints for B (max. 3 bonds) to the default and preset constraints.\r\n - Updated the syntax of SELFIES symbols to be cleaner and more readable. (Removing expl from atomic symbols, e.g., [C@@Hexpl] becommes [C@@H], Cleaner branch symbols, e.g., [BranchL_2] becomes [=BranchL], Cleaner ring symbols, e.g., [Expl=RingL] becomes [=RingL], If you want to use the old symbols, use the compatible=True flag to selfies.decoder, e.g., sf.decoder('[C][C][Expl=Ring1]',compatible=True) (not recommended!))\r\n - More logically consistent behaviour of [Ring] symbols.\r\n - Standardized SELFIES alphabet, i.e., no two symbols stand for the same atom/ion (issue #58), e.g., [N+1] and [N+] are equivalent now.\r\n - Indexing symbols are now included in the alphabet returned by selfies.get_semantic_robust_alphabet.\r\n\r\n**Removed**\r\n\r\n - Removed constraints flag from selfies.decoder; please use selfies.set_semantic_constraints() and pass in \"hypervalent\" or \"octet_rule\" instead.\r\n - Removed print_error flag in selfies.encoder and selfies.decoder, which now raise errors selfies.EncoderError and selfies.DecoderError, respectively.\r\n\r\n**Bug Fixes**\r\n\r\n - Potential chirality inversion of atoms making ring bonds (e.g. [C@@H]12CCC2CCNC1): fixed by inverting their chirality in selfies.encoder such that they are decoded with the original chirality preserved.\r\n - Failure to represent mismatching stereochemical specifications at ring bonds (e.g. F/C=C/C/C=C\\C): fixed by adding new ring symbols (e.g. [-/RingL], [\\/RingL], etc.).\r\n",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v2.0.0",
        "name": "Selfies v2.0.0 - 21.10.2021",
        "release_id": 51746871,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/51746871",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/51746871",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2021-03-24T02:11:49Z",
        "date_published": "2021-03-24T02:23:02Z",
        "description": "Option for using strict octet rules, and for relaxed rules that allow for hypervalence bonds",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v1.0.4",
        "name": "Selfies v1.0.4 - 23.03.2021",
        "release_id": 40265185,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/40265185",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/40265185",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2021-01-13T16:37:11Z",
        "date_published": "2021-01-13T16:46:43Z",
        "description": "### Added:\r\n\r\n - Support for aromatic Si and Al (is not officially supported by Daylight SMILES, but RDKit supports it and examples exist in PubChem).\r\n",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v1.0.3",
        "name": " Selfies v1.0.3 - 13.01.2021",
        "release_id": 36344236,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/36344236",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/36344236",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MarioKrenn6240",
          "type": "User"
        },
        "date_created": "2020-10-14T13:36:27Z",
        "date_published": "2020-10-14T13:42:17Z",
        "description": "Added:\r\n+ Support for aromatic Te and triple bonds.\r\n+ Inbuild SELFIES to 1hot encoding, and 1hot encoding to SELFIES\r\n\r\nChanged:\r\n+ Added default semantic constraints for charged atoms (single positive/negative charge of [C], [N], [O], [S], [P])\r\n+ Raised the bond capacity of P to 7 bonds (from 5 bonds).\r\n\r\nBug Fixes:\r\n+ Fixed bug: selfies.decoder did not terminate for malformed SELFIES that are missing the closed bracket ']'.\r\n",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v1.0.2",
        "name": "Selfies v1.0.2 - 14.10.2020 ",
        "release_id": 32564713,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/32564713",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/32564713",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "FlorianHase",
          "type": "User"
        },
        "date_created": "2020-08-25T13:25:59Z",
        "date_published": "2020-08-25T13:41:39Z",
        "description": "__Changed__:\r\n* Code so that is compatible with python >= 3.5.\r\n* More descriptive error messages.\r\n\r\n__Bug Fixes__:\r\n* Minor bug fixes in the encoder for SMILES ending in branches (e.g. C(Cl)(F)), and SMILES with ring numbers between branches (e.g. C(Cl)1(Br)CCCC1)\r\n* Minor bug fix with ring ordering in decoder (e.g. C1CC2CCC12 vs C1CC2CCC21).",
        "html_url": "https://github.com/aspuru-guzik-group/selfies/releases/tag/v1.0.1",
        "name": "Selfies v1.0.1 - 25.08.2020",
        "release_id": 30104932,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/30104932",
        "value": "https://api.github.com/repos/aspuru-guzik-group/selfies/releases/30104932",
        "zipball_url": "https://api.github.com/repos/aspuru-guzik-group/selfies/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 00:40:28",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 658
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Overview",
        "parent_header": [
          "SELFIES",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Please refer to the [documentation](https://selfiesv2.readthedocs.io/en/latest/),\nwhich contains a thorough tutorial  for getting started with ``selfies``\nand detailed descriptions of the functions\nthat ``selfies`` provides. We summarize some key functions below.\n\n| Function                              | Description                                                       |\n| ------------------------------------- | ----------------------------------------------------------------- |\n| ``selfies.encoder``                   | Translates a SMILES string into its corresponding SELFIES string. |\n| ``selfies.decoder``                   | Translates a SELFIES string into its corresponding SMILES string. |\n| ``selfies.set_semantic_constraints``  | Configures the semantic constraints that ``selfies`` operates on. |\n| ``selfies.len_selfies``               | Returns the number of symbols in a SELFIES string.                |\n| ``selfies.split_selfies``             | Tokenizes a SELFIES string into its individual symbols.           |\n| ``selfies.get_alphabet_from_selfies`` | Constructs an alphabet from an iterable of SELFIES strings.       |\n| ``selfies.selfies_to_encoding``       | Converts a SELFIES string into its label and/or one-hot encoding. |\n| ``selfies.encoding_to_selfies``       | Converts a label or one-hot encoding into a SELFIES string.       |\n\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Translation between SELFIES and SMILES representations:",
        "parent_header": [
          "SELFIES",
          "Usage",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "```python\nimport selfies as sf\n\nbenzene = \"c1ccccc1\"\n\n# SMILES -> SELFIES -> SMILES translation\ntry:\n    benzene_sf = sf.encoder(benzene)  # [C][=C][C][=C][C][=C][Ring1][=Branch1]\n    benzene_smi = sf.decoder(benzene_sf)  # C1=CC=CC=C1\nexcept sf.EncoderError:\n    pass  # sf.encoder error!\nexcept sf.DecoderError:\n    pass  # sf.decoder error!\n\nlen_benzene = sf.len_selfies(benzene_sf)  # 8\n\nsymbols_benzene = list(sf.split_selfies(benzene_sf))\n# ['[C]', '[=C]', '[C]', '[=C]', '[C]', '[=C]', '[Ring1]', '[=Branch1]']\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Integer and one-hot encoding SELFIES:",
        "parent_header": [
          "SELFIES",
          "Usage",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "In this example, we first build an alphabet from a dataset of SELFIES strings,\nand then convert a SELFIES string into its padded encoding. Note that we use the\n``[nop]`` ([no operation](https://en.wikipedia.org/wiki/NOP_(code) ))\nsymbol to pad our SELFIES, which is a special SELFIES symbol that is always\nignored and skipped over by ``selfies.decoder``, making it a useful\npadding character.\n\n```python\nimport selfies as sf\n\ndataset = [\"[C][O][C]\", \"[F][C][F]\", \"[O][=O]\", \"[C][C][O][C][C]\"]\nalphabet = sf.get_alphabet_from_selfies(dataset)\nalphabet.add(\"[nop]\")  # [nop] is a special padding symbol\nalphabet = list(sorted(alphabet))  # ['[=O]', '[C]', '[F]', '[O]', '[nop]']\n\npad_to_len = max(sf.len_selfies(s) for s in dataset)  # 5\nsymbol_to_idx = {s: i for i, s in enumerate(alphabet)}\n\ndimethyl_ether = dataset[0]  # [C][O][C]\n\nlabel, one_hot = sf.selfies_to_encoding(\n   selfies=dimethyl_ether,\n   vocab_stoi=symbol_to_idx,\n   pad_to_len=pad_to_len,\n   enc_type=\"both\"\n)\n# label = [1, 3, 1, 4, 4]\n# one_hot = [[0, 1, 0, 0, 0], [0, 0, 0, 1, 0], [0, 1, 0, 0, 0], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1]]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Customizing SELFIES:",
        "parent_header": [
          "SELFIES",
          "Usage",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "In this example, we relax the semantic constraints of ``selfies`` to allow\nfor hypervalences (caution: hypervalence rules are much less understood\nthan octet rules. Some molecules containing hypervalences are important,\nbut generally, it is not known which molecules are stable and reasonable).\n\n```python\nimport selfies as sf\n\nhypervalent_sf = sf.encoder('O=I(O)(O)(O)(O)O', strict=False)  # orthoperiodic acid\nstandard_derived_smi = sf.decoder(hypervalent_sf)\n# OI (the default constraints for I allows for only 1 bond)\n\nsf.set_semantic_constraints(\"hypervalent\")\nrelaxed_derived_smi = sf.decoder(hypervalent_sf)\n# O=I(O)(O)(O)(O)O (the hypervalent constraints for I allows for 7 bonds)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Explaining Translation:",
        "parent_header": [
          "SELFIES",
          "Usage",
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "You can get an \"attribution\" list that traces the connection between input and output tokens. For example let's see which tokens in the SELFIES string ``[C][N][C][Branch1][C][P][C][C][Ring1][=Branch1]`` are responsible for the output SMILES tokens.\n\n```python\nselfies = \"[C][N][C][Branch1][C][P][C][C][Ring1][=Branch1]\"\nsmiles, attr = sf.decoder(\n    selfies, attribute=True)\nprint('SELFIES', selfies)\nprint('SMILES', smiles)\nprint('Attribution:')\nfor smiles_token in attr:\n    print(smiles_token)\n\n# output\nSELFIES [C][N][C][Branch1][C][P][C][C][Ring1][=Branch1]\nSMILES C1NC(P)CC1\nAttribution:\nAttributionMap(index=0, token='C', attribution=[Attribution(index=0, token='[C]')])\nAttributionMap(index=2, token='N', attribution=[Attribution(index=1, token='[N]')])\nAttributionMap(index=3, token='C', attribution=[Attribution(index=2, token='[C]')])\nAttributionMap(index=5, token='P', attribution=[Attribution(index=3, token='[Branch1]'), Attribution(index=5, token='[P]')])\nAttributionMap(index=7, token='C', attribution=[Attribution(index=6, token='[C]')])\nAttributionMap(index=8, token='C', attribution=[Attribution(index=7, token='[C]')])\n```\n\n``attr`` is a list of `AttributionMap`s containing the output token, its index, and input tokens that led to it. For example, the ``P`` appearing in the output SMILES at that location is a result of both the ``[Branch1]`` token at position 3 and the ``[P]`` token at index 5. This works for both encoding and decoding. For finer control of tracking the translation (like tracking rings), you can access attributions in the underlying molecular graph with ``get_attribution``.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More Usages and Examples",
        "parent_header": [
          "SELFIES",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* More examples can be found in the ``examples/`` directory, including a\n[variational autoencoder that runs on the SELFIES](https://github.com/aspuru-guzik-group/selfies/tree/master/examples/vae_example) language.\n* This [ICLR2020 paper](https://arxiv.org/abs/1909.11655) used SELFIES in a\ngenetic algorithm to achieve state-of-the-art performance for inverse design,\nwith the [code here](https://github.com/aspuru-guzik-group/GA).\n* SELFIES allows for [highly efficient exploration and interpolation of the chemical space](https://chemrxiv.org/articles/preprint/Beyond_Generative_Models_Superfast_Traversal_Optimization_Novelty_Exploration_and_Discovery_STONED_Algorithm_for_Molecules_using_SELFIES/13383266), with a [deterministic algorithms, see code](https://github.com/aspuru-guzik-group/stoned-selfies).\n* We use SELFIES for [Deep Molecular dreaming](https://arxiv.org/abs/2012.09712), a new generative model inspired by interpretable neural networks in computational vision. See the [code of PASITHEA here](https://github.com/aspuru-guzik-group/Pasithea).\n* Kohulan Rajan, Achim Zielesny, Christoph Steinbeck show in two papers that SELFIES outperforms other representations in [img2string](https://link.springer.com/article/10.1186/s13321-020-00469-w) and [string2string](https://chemrxiv.org/articles/preprint/STOUT_SMILES_to_IUPAC_Names_Using_Neural_Machine_Translation/13469202/1) translation tasks, see the codes of [DECIMER](https://github.com/Kohulan/DECIMER-Image-to-SMILES) and [STOUT](https://github.com/Kohulan/Smiles-TO-iUpac-Translator).\n* Nathan Frey, Vijay Gadepally, and Bharath Ramsundar used SELFIES with normalizing flows to develop the [FastFlows](https://arxiv.org/abs/2201.12419) framework for deep chemical generative modeling.\n* An improvement to the old genetic algorithm, the authors have also released [JANUS](https://arxiv.org/abs/2106.04011), which allows for more efficient optimization in the chemical space. JANUS makes use of [STONED-SELFIES](https://pubs.rsc.org/en/content/articlepdf/2021/sc/d1sc00231g) and a neural network for efficient sampling.\n"
      },
      "source": "https://raw.githubusercontent.com/aspuru-guzik-group/selfies/master/README.md",
      "technique": "header_analysis"
    }
  ]
}