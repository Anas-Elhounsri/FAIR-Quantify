{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Dreycey/PhageBox"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-05T05:26:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-30T19:53:41Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The PhageBox is a digital microfluidics device that integrates temperature and magnetic control modules at the hardware level. This repository contains the embedded software which contains a   finite state machine for representing PCR and a graphical user interface for visual feedback and operation. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "type": "Text_excerpt",
        "value": "This repository contains a graphical user interface, arduino libraries, and modules that are used within PhageBox. Below are instructions for using this code base, as well as information for initiating the GUI.\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building the PhageBox.",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "For building the phagebox, please review the build manual for a step-by-step build process.\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Graphial User Interface.",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "Please see the [GUI diagram](figures/GUI.pdf) for more information on what the GUI looks like once opened.\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Embedded Device Software.",
        "parent_header": [
          "Description"
        ],
        "type": "Text_excerpt",
        "value": "![Software box diagram](figures/box_diagram.png)\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Dreycey/PhageBox/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/scripts/temperature_error/hysteresis_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/scripts/temperature_error/hysteresis_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/scripts/RE_PCR_analysis/PCRcheck.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/scripts/RE_PCR_analysis/PCRcheck.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Dreycey/PhageBox/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dreycey/PhageBox"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Description"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/figures/box_diagram.png"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Description",
          "Embedded Device Software."
        ],
        "type": "Text_excerpt",
        "value": "To use this library, drag the entire contents of `src/phagebox_embedded/` into your local arduino libary and import. More detailed instructions can be found in the [arduino documentation](https://docs.arduino.cc/software/ide-v1/tutorials/installing-libraries).\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage once library is installed",
        "parent_header": [
          "Description",
          "Embedded Device Software."
        ],
        "type": "Text_excerpt",
        "value": "Once installed, you can send commands through Serial/UART for controlling backlight, magnetic module and temperature modules:\n\n1. Heater 1 for 32 PCR cycles. **Cycles**: 15 seconds at 90C, 20 seconds at 50C, and 60 seconds at 72C.\n\n```\n<H,1,32,15,90,20,50,60,72>\n```\n\n2. Heater 2 for 32 PCR cycles. **Cycles**: 15 seconds at 90C, 20 seconds at 50C, and 60 seconds at 72C.\n\n```\n<H,2,32,15,90,20,50,60,72>\n```\n\n3. Toggle the LED\n\n```\n<B,0,1>\n```\n\n4. Toggle the MAGNET\n\n```\n<B,1,0>\n```\n\n5. Toggle both the MAGNET and LED\n\n```\n<B,1,1>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Dreycey/PhageBox/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "arduino, bacteriophages, biology, biology-lab-protocols, digital-microfluidics, microfluidics, phages"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Creative Commons Attribution Share Alike 4.0 International",
        "spdx_id": "CC-BY-SA-4.0",
        "type": "License",
        "url": "https://api.github.com/licenses/cc-by-sa-4.0",
        "value": "https://api.github.com/licenses/cc-by-sa-4.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PhageBox"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Dreycey"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 84686,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 57926,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 6263,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Dreycey",
          "type": "User"
        },
        "date_created": "2022-05-26T04:41:52Z",
        "date_published": "2022-05-26T04:44:54Z",
        "description": "**v1.0.0**\r\n\r\n- GUI is working off of UART serial communication\r\n- Windows and mac handle requests for the bang-bang control on separate threads\r\n- The Arduino reads simple UART commands for bang-bang control",
        "html_url": "https://github.com/Dreycey/PhageBox/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 67887912,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/Dreycey/PhageBox/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/Dreycey/PhageBox/releases/67887912",
        "value": "https://api.github.com/repos/Dreycey/PhageBox/releases/67887912",
        "zipball_url": "https://api.github.com/repos/Dreycey/PhageBox/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 01:10:58",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Starting the GUI",
        "parent_header": [
          "Description",
          "Graphial User Interface."
        ],
        "type": "Text_excerpt",
        "value": "General Usage:\n\n```\nusage: phagebox_app.py [-h] -s SERIAL_PORT [-m SLOPE] [-b INTERCEPT] [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SERIAL_PORT, --serial_port SERIAL_PORT\n                        Specify the serial port\n  -m SLOPE, --slope SLOPE\n                        Slope of (Chip Temp vs Peltier Temp) [Default 1.2]\n  -b INTERCEPT, --intercept INTERCEPT\n                        y-intercept (Chip Temp vs Peltier Temp) [Default -2]\n  -v, --verbose         prints output figures and debug info\n```\n\nExample (Mac):\n\n```\npython phagebox_app.py -s /dev/tty.usbserial-1430\n```\n\nExample (Windows):\n\n```\npython phagebox_app.py -s COM4\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Arduino sketch example",
        "parent_header": [
          "Description",
          "Embedded Device Software."
        ],
        "type": "Text_excerpt",
        "value": "This example uses an Arduino sketch to import the PhageBox library and initialize the embedded software. This sketch is also available here: `PhageBox/arduino/phagebox_controller/phagebox_controller.ino`\n\n```\n#include <PhageBox.h>\n\nvoid setup()\n{\n    Serial.begin(9600);\n    init_phagebox();\n}\n\nvoid loop()\n{\n    start_phagebox();\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage once library is installed",
        "parent_header": [
          "Description",
          "Embedded Device Software."
        ],
        "type": "Text_excerpt",
        "value": "Once installed, you can send commands through Serial/UART for controlling backlight, magnetic module and temperature modules:\n\n1. Heater 1 for 32 PCR cycles. **Cycles**: 15 seconds at 90C, 20 seconds at 50C, and 60 seconds at 72C.\n\n```\n<H,1,32,15,90,20,50,60,72>\n```\n\n2. Heater 2 for 32 PCR cycles. **Cycles**: 15 seconds at 90C, 20 seconds at 50C, and 60 seconds at 72C.\n\n```\n<H,2,32,15,90,20,50,60,72>\n```\n\n3. Toggle the LED\n\n```\n<B,0,1>\n```\n\n4. Toggle the MAGNET\n\n```\n<B,1,0>\n```\n\n5. Toggle both the MAGNET and LED\n\n```\n<B,1,1>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Dreycey/PhageBox/master/README.md",
      "technique": "header_analysis"
    }
  ]
}