{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abhisheknrl/MPRAscore"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-05T22:19:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-09-10T07:26:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MPRAscore: Robust and non-parametric analysis of massively parallel reporter assays (MPRA)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9237664924923079,
      "result": {
        "original_header": "MPRAscore",
        "type": "Text_excerpt",
        "value": "Robust and non-parametric analysis of massively parallel reporter assays (MPRA) \nMPRAscore infers allele-specific effects on transcription from MPRA data. MPRAscore uses a weighted, variance-regularized method to calculate variant effect sizes robustly, and a permutation approach to test for significance without assuming normality or independence. \nMPRAscore is implemented in C++. It can be compiled from the source code. Precompiled executables for Windows, Linux, and Mac are included in binaries/. \nData:\nRaw fastq files for the example data are available at https://www.ncbi.nlm.nih.gov/bioproject/PRJNA554195. \nNiroula A, Ajore R, Nilsson B. (2019) MPRAscore: robust and non-parametric analysis of massively parallel reporter assays. Bioinformatics. https://doi.org/10.1093/bioinformatics/btz591 \n"
      },
      "source": "https://raw.githubusercontent.com/abhisheknrl/MPRAscore/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abhisheknrl/MPRAscore/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abhisheknrl/MPRAscore/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abhisheknrl/MPRAscore"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MPRAscore"
      },
      "source": "https://raw.githubusercontent.com/abhisheknrl/MPRAscore/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9678238635260303,
      "result": {
        "original_header": "MPRAscore",
        "type": "Text_excerpt",
        "value": "MPRAscore is implemented in C++. It can be compiled from the source code. Precompiled executables for Windows, Linux, and Mac are included in binaries/. \nmprascore L363_barcode_map.txt L363_barcode_counts.txt -RNAcols:L363_RNA_1,L363_RNA_2,L363_RNA_3 -DNAcols:L363_DNA_1,L363_DNA_2,L363_DNA_3 L363_results.txt -p:1000 \nData:\nRaw fastq files for the example data are available at https://www.ncbi.nlm.nih.gov/bioproject/PRJNA554195. \n"
      },
      "source": "https://raw.githubusercontent.com/abhisheknrl/MPRAscore/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8633747010070436,
      "result": {
        "original_header": "MPRAscore",
        "type": "Text_excerpt",
        "value": "\nExample: \nExample files are included in Example/. To run MPRAscore on example data: \n"
      },
      "source": "https://raw.githubusercontent.com/abhisheknrl/MPRAscore/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abhisheknrl/MPRAscore/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mpra, mprascore"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MPRAscore"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "abhisheknrl"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 286809,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 7257,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 637,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 481,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abhisheknrl/MPRAscore/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:35:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}