{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "CREDIT",
        "parent_header": [
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "Citations are the bread and butter of Science.  If you are using this\nsoftware in your research and want to support our future work, please\ncite the following publication:\n\nPlease cite:\n\n[A spectrum of free software tools for processing the VCF variant call format: vcflib, bio-vcf, cyvcf2, hts-nim and slivar](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009123).\nGarrison E, Kronenberg ZN, Dawson ET, Pedersen BS, Prins P (2022), PLoS Comput Biol 18(5): e1009123. https://doi.org/10.1371/journal.pcbi.1009123\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bibtex reference",
        "parent_header": [
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "```bibtex\n@article{10.1371/journal.pcbi.1009123,\n    doi = {10.1371/journal.pcbi.1009123},\n    author = {Garrison, Erik AND Kronenberg, Zev N. AND Dawson, Eric T. AND Pedersen, Brent S. AND Prins, Pjotr},\n    journal = {PLOS Computational Biology},\n    publisher = {Public Library of Science},\n    title = {A spectrum of free software tools for processing the VCF variant call format: vcflib, bio-vcf, cyvcf2, hts-nim and slivar},\n    year = {2022},\n    month = {05},\n    volume = {18},\n    url = {https://doi.org/10.1371/journal.pcbi.1009123},\n    pages = {1-15}\n}\n```\n\nBelow the prepublished version of our paper\n\n```bibtex\n@article {Garrison2021.05.21.445151,\n\tauthor = {Garrison, Erik and Kronenberg, Zev N. and Dawson, Eric T. and Pedersen, Brent S. and Prins, Pjotr},\n\ttitle = {Vcflib and tools for processing the VCF variant call format},\n\telocation-id = {2021.05.21.445151},\n\tyear = {2021},\n\tdoi = {10.1101/2021.05.21.445151},\n\tpublisher = {Cold Spring Harbor Laboratory},\n\tURL = {https://www.biorxiv.org/content/early/2021/05/23/2021.05.21.445151},\n\teprint = {https://www.biorxiv.org/content/early/2021/05/23/2021.05.21.445151.full.pdf},\n\tjournal = {bioRxiv}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Garrison, Erik AND Kronenberg, Zev N. AND Dawson, Eric T. AND Pedersen, Brent S. AND Prins, Pjotr",
        "doi": "10.1371/journal.pcbi.1009123",
        "format": "bibtex",
        "title": "A spectrum of free software tools for processing the VCF variant call format: vcflib, bio-vcf, cyvcf2, hts-nim and slivar",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.1371/journal.pcbi.1009123",
        "value": "@article{10.1371/journal.pcbi.1009123,\n    pages = {1-15},\n    url = {https://doi.org/10.1371/journal.pcbi.1009123},\n    volume = {18},\n    month = {05},\n    year = {2022},\n    title = {A spectrum of free software tools for processing the VCF variant call format: vcflib, bio-vcf, cyvcf2, hts-nim and slivar},\n    publisher = {Public Library of Science},\n    journal = {PLOS Computational Biology},\n    author = {Garrison, Erik AND Kronenberg, Zev N. AND Dawson, Eric T. AND Pedersen, Brent S. AND Prins, Pjotr},\n    doi = {10.1371/journal.pcbi.1009123},\n}"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Garrison, Erik and Kronenberg, Zev N. and Dawson, Eric T. and Pedersen, Brent S. and Prins, Pjotr",
        "doi": "10.1101/2021.05.21.445151",
        "format": "bibtex",
        "title": "Vcflib and tools for processing the VCF variant call format",
        "type": "Text_excerpt",
        "url": "https://www.biorxiv.org/content/early/2021/05/23/2021.05.21.445151",
        "value": "@article{Garrison2021.05.21.445151,\n    journal = {bioRxiv},\n    eprint = {https://www.biorxiv.org/content/early/2021/05/23/2021.05.21.445151.full.pdf},\n    url = {https://www.biorxiv.org/content/early/2021/05/23/2021.05.21.445151},\n    publisher = {Cold Spring Harbor Laboratory},\n    doi = {10.1101/2021.05.21.445151},\n    year = {2021},\n    elocation-id = {2021.05.21.445151},\n    title = {Vcflib and tools for processing the VCF variant call format},\n    author = {Garrison, Erik and Kronenberg, Zev N. and Dawson, Eric T. and Pedersen, Brent S. and Prins, Pjotr},\n}"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vcflib/vcflib"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "To contribute code to vcflib send a github pull request. We may ask\nyou to add a working test case as described in 'adding tests'.\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2010-09-22T23:25:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-26T07:05:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " C++ library and cmdline tools for parsing and manipulating VCF files with python and zig bindings"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9060403556645761,
      "result": {
        "original_header": "A C++ library for parsing and manipulating VCF files.",
        "type": "Text_excerpt",
        "value": "Vcflib and related tools are the workhorses in bioinformatics for processing the VCF variant calling format. See \n(bibtex reference at the end of this page)\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9180316304599533,
      "result": {
        "original_header": "news",
        "type": "Text_excerpt",
        "value": "**January 2023**: this is vcflib's first *Humpty Dumpty* release: [vcfcreatemulti](./doc/vcfcreatemulti.md) is the natural companion to [vcfwave](./doc/vcfwave.md).\nOften variant callers are not perfect.\n**vcfwave** with its companion tool **vcfcreatemulti** can take an existing VCF file that contains multiple complex overlapping and even nested alleles and, unlike Humpty Dumpty, take them apart and put them together again.\nThereby, hopefully, creating sane VCF output that is useful for analysis and getting rid of false positives. \nWe created these tools by including the state-of-the-art [biWFA](https://github.com/smarco/WFA2-lib) wavefront aligner.\nThe tools are particularly useful for the output from structural variation callers and pangenome genotypers, such as used by the Human Pangenome Reference Consortium (HPRC) because of overlapping ALT segments. \nBy introducing the wavefront algorithm we can now realign long sequences and reduce call complexity (and FPs!) introduced by pangenome variant callers using the new [vcfwave](./doc/vcfwave.md) tool. \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9883588466054782,
      "result": {
        "original_header": "overview",
        "type": "Text_excerpt",
        "value": "The [Variant Call Format\n(VCF)](http://www.1000genomes.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-41)\nis a flat-file, tab-delimited textual format that\ndescribes reference-indexed variations between individuals.  VCF\nprovides a common interchange format for the description of variation\nin individuals and populations of samples, and has become the\n*de facto* standard reporting format for a wide array of genomic\nvariant detectors. \nvcflib provides methods to manipulate and interpret sequence variation\ndescribed by VCF.  It is both: \n * an API for parsing and operating on records of genomic variation as\n   it can be described by the VCF format\n * a collection of command-line utilities for executing complex\n   manipulations on VCF files \nvclib is both a library (with an API) and a collection of useful\ntools. The API provides a quick and extremely permissive method to\nread and write VCF files.  Extensions and applications of the library\nprovided in the included utilities (*.cpp) comprise the vast bulk of\nthe library's utility. \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9570381460808868,
      "result": {
        "original_header": "metrics",
        "type": "Text_excerpt",
        "value": "| metrics command | description |\n| :-------------- | :---------- |\n | [vcfhethomratio](./doc/vcfhethomratio.md) | Generates the het/hom ratio for each individual in the file |\n | [vcfhetcount](./doc/vcfhetcount.md) | Calculate the heterozygosity rate: count the number of alternate alleles in heterozygous genotypes in all records in the vcf file |\n | [vcfdistance](./doc/vcfdistance.md) | Adds a tag to each variant record which indicates the distance to the nearest variant. (defaults to BasesToClosestVariant if no custom tag name is given. |\n | [vcfentropy](./doc/vcfentropy.md) | Annotate VCF records with the Shannon entropy of flanking sequence. Anotates the output VCF file with, for each record, EntropyLeft, EntropyRight, EntropyCenter, which are the entropies of the sequence of the given window size to the left, right, and center of the record. Also adds EntropyRef and EntropyAlt for each alt. |\n | [vcfcheck](./doc/vcfcheck.md) | Validate integrity and identity of the VCF by verifying that the VCF record's REF matches a given reference file. |\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9466329272257309,
      "result": {
        "original_header": "phenotype",
        "type": "Text_excerpt",
        "value": "| phenotype command | description |\n| :-------------- | :---------- |\n | [permuteGPAT++](./doc/permuteGPAT++.md) | **permuteGPAT++** is a method for adding empirical p-values to a GPAT++ score. |\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9420073483011138,
      "result": {
        "original_header": "genotype",
        "type": "Text_excerpt",
        "value": "| genotype command | description |\n| :-------------- | :---------- |\n | [hapLrt](./doc/hapLrt.md) | HapLRT is a likelihood ratio test for haplotype lengths. The lengths are modeled with an exponential distribution. The sign denotes if the target has longer haplotypes (1) or the background (-1). |\n | [normalize-iHS](./doc/normalize-iHS.md) | normalizes iHS or XP-EHH scores. |\n | [abba-baba](./doc/abba-baba.md) | **abba-baba** calculates the tree pattern for four indviduals. This tool assumes reference is ancestral and ignores non **abba-baba** sites. The output is a boolian value: 1 = true , 0 = false for abba and baba. the tree argument should be specified from the most basal taxa to the most derived. |\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9723501090213054,
      "result": {
        "original_header": "transformation",
        "type": "Text_excerpt",
        "value": "| transformation command | description |\n| :-------------- | :---------- |\n | [vcfintersect](./doc/vcfintersect.md) | VCF set analysis |\n | [vcfleftalign](./doc/vcfleftalign.md) | Left-align indels and complex variants in the input using a pairwise ref/alt alignment followed by a heuristic, iterative left realignment process that shifts indel representations to their absolute leftmost (5') extent. |\n | [vcfglxgt](./doc/vcfglxgt.md) | Set genotypes using the maximum genotype likelihood for each sample. |\n | [vcfkeepsamples](./doc/vcfkeepsamples.md) | outputs each record in the vcf file, removing samples not listed on the command line |\n | [vcfallelicprimitives](./doc/vcfallelicprimitives.md) | Note that this tool is considered legacy and will emit a warning! Use [vcfwave](./doc/vcfwave.md) instead. |\n | [vcfcommonsamples](./doc/vcfcommonsamples.md) | Generates each record in the first file, removing samples not present in the second |\n | [vcfcreatemulti](./doc/vcfcreatemulti.md) | Go through sorted VCF and if overlapping alleles are represented across multiple records, merge them into a single record. Currently only for indels. |\n | [vcfld](./doc/vcfld.md) | Compute LD |\n | [vcfsamplenames](./doc/vcfsamplenames.md) | List sample names |\n | [vcfsample2info](./doc/vcfsample2info.md) | Take annotations given in the per-sample fields and add the mean, median, min, or max to the site-level INFO. |\n | [vcflength](./doc/vcflength.md) | Add length info field |\n | [vcfstreamsort](./doc/vcfstreamsort.md) | Sorts the input (either stdin or file) using a streaming sort algorithm. Guarantees that the positional order is correct provided out-of-order variants are no more than 100 positions in the VCF file apart. |\n | [dumpContigsFromHeader](./doc/dumpContigsFromHeader.md) | Dump contigs from header |\n | [vcfgeno2haplo](./doc/vcfgeno2haplo.md) | Convert genotype-based phased alleles within --window-size into haplotype alleles. Will break haplotype construction when encountering non-phased genotypes on input. |\n | [vcfinfo2qual](./doc/vcfinfo2qual.md) | Sets QUAL from info field tag keyed by [key]. The VCF file may be omitted and read from stdin. The average of the field is used if it contains multiple values. |\n | [vcfevenregions](./doc/vcfevenregions.md) | Generates a list of regions, e.g. chr20:10..30 using the variant density information provided in the VCF file to ensure that the regions have even numbers of variants. This can be use to reduce the variance in runtime when dividing variant detection or genotyping by genomic coordinates. |\n | [vcfbreakmulti](./doc/vcfbreakmulti.md) | If multiple alleles are specified in a single record, break the record into multiple lines, preserving allele-specific INFO fields. |\n | [vcfwave](./doc/vcfwave.md) | Realign reference and alternate alleles with WFA, parsing out the primitive alleles into multiple VCF records. New records have IDs that reference the source record ID. Genotypes are handled. Deletions generate haploid/missing genotypes at overlapping sites. |\n | [vcfafpath](./doc/vcfafpath.md) | Display genotype paths |\n | [vcfremoveaberrantgenotypes](./doc/vcfremoveaberrantgenotypes.md) | strips samples which are homozygous but have observations implying heterozygosity. Remove samples for which the reported genotype (GT) and observation counts disagree (AO, RO). |\n | [vcf2tsv](./doc/vcf2tsv.md) | Converts VCF to per-allelle or per-genotype tab-delimited format, using null string to replace empty values in the table. Specifying -g will output one line per sample with genotype information. When there is more than one alt allele there will be multiple rows, one for each allele and, the info will match the 'A' index |\n | [vcfqual2info](./doc/vcfqual2info.md) | Puts QUAL into an info field tag keyed by [key]. |\n | [vcfnumalt](./doc/vcfnumalt.md) | outputs a VCF stream where NUMALT has been generated for each record using sample genotypes |\n | [vcfprimers](./doc/vcfprimers.md) | For each VCF record, extract the flanking sequences, and write them to stdout as FASTA records suitable for alignment. |\n | [vcf2fasta](./doc/vcf2fasta.md) | Generates sample_seq:N.fa for each sample, reference sequence, and chromosomal copy N in [0,1... ploidy]. Each sequence in the fasta file is named using the same pattern used for the file name, allowing them to be combined. |\n | [vcffixup](./doc/vcffixup.md) | Generates a VCF stream where AC and NS have been generated for each record using sample genotypes |\n | [vcfkeepinfo](./doc/vcfkeepinfo.md) | To decrease file size remove INFO fields not listed on the command line |\n | [vcfsamplediff](./doc/vcfsamplediff.md) | Establish putative somatic variants using reported differences between germline and somatic samples. Tags each record where the listed sample genotypes differ with <tag>. The first sample is assumed to be germline, the second somatic. Each record is tagged with <tag>={germline,somatic,loh} to specify the type of variant given the genotype difference between the two samples. |\n | [vcfflatten](./doc/vcfflatten.md) | Removes multi-allelic sites by picking the most common alternate. Requires allele frequency specification 'AF' and use of 'G' and 'A' to specify the fields which vary according to the Allele or Genotype. VCF file may be specified on the command line or piped as stdin. |\n | [vcfglbound](./doc/vcfglbound.md) | Adjust GLs so that the maximum GL is 0 by dividing all GLs for each sample by the max. |\n | [vcfecho](./doc/vcfecho.md) | Echo VCF to stdout (simple demo) |\n | [vcfgeno2alleles](./doc/vcfgeno2alleles.md) | modifies the genotypes field to provide the literal alleles rather than indexes |\n | [vcf2dag](./doc/vcf2dag.md) | Modify VCF to be able to build a directed acyclic graph (DAG) |\n | [vcfannotategenotypes](./doc/vcfannotategenotypes.md) | Examine genotype correspondence. Annotate genotypes in the first file with genotypes in the second adding the genotype as another flag to each sample filed in the first file. annotation-tag is the name of the sample flag which is added to store the annotation. also adds a 'has_variant' flag for sites where the second file has a variant. |\n | [vcfremap](./doc/vcfremap.md) | For each alternate allele, attempt to realign against the reference with lowered gap open penalty. If realignment is possible, adjust the cigar and reference/alternate alleles. Observe how different alignment parameters, including context and entropy-dependent ones, influence variant classification and interpretation. |\n | [vcfremovesamples](./doc/vcfremovesamples.md) | outputs each record in the vcf file, removing samples listed on the command line |\n | [vcfcleancomplex](./doc/vcfcleancomplex.md) | Removes reference-matching sequence from complex alleles and adjusts records to reflect positional change. |\n | [vcfindex](./doc/vcfindex.md) | Adds an index number to the INFO field (id=position) |\n | [vcfannotate](./doc/vcfannotate.md) | Intersect the records in the VCF file with targets provided in a BED file. Intersections are done on the reference sequences in the VCF file. If no VCF filename is specified on the command line (last argument) the VCF read from stdin. |\n | [smoother](./doc/smoother.md) | smoothes is a method for window smoothing many of the GPAT++ formats. |\n | [vcfkeepgeno](./doc/vcfkeepgeno.md) | Reduce file size by removing FORMAT fields not listed on the command line from sample specifications in the output |\n | [vcfcombine](./doc/vcfcombine.md) | Combine VCF files positionally, combining samples when sites and alleles are identical. Any number of VCF files may be combined. The INFO field and other columns are taken from one of the files which are combined when records in multiple files match. Alleles must have identical ordering to be combined into one record. If they do not, multiple records will be emitted. |\n | [vcfcat](./doc/vcfcat.md) | Concatenates VCF files |\n | [vcfinfosummarize](./doc/vcfinfosummarize.md) | Take annotations given in the per-sample fields and add the mean, median, min, or max to the site-level INFO. |\n | [vcfclassify](./doc/vcfclassify.md) | Creates a new VCF where each variant is tagged by allele class: snp, ts/tv, indel, mnp |\n | [vcfoverlay](./doc/vcfoverlay.md) | Overlay records in the input vcf files with order as precedence. |\n | [vcfaddinfo](./doc/vcfaddinfo.md) | Adds info fields from the second file which are not present in the first vcf file. |\n | [vcfnullgenofields](./doc/vcfnullgenofields.md) | Makes the FORMAT for each variant line the same (uses all the FORMAT fields described in the header). Fills out per-sample fields to match FORMAT. Expands GT values of '.' with number of alleles based on ploidy (eg: './doc/.' for dipolid). |\n | [vcfgenosamplenames](./doc/vcfgenosamplenames.md) | Get samplenames |\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9953749202203737,
      "result": {
        "original_header": "statistics",
        "type": "Text_excerpt",
        "value": "| statistics command | description |\n| :-------------- | :---------- |\n | [permuteSmooth](./doc/permuteSmooth.md) | **permuteSmooth** is a method for adding empirical p-values smoothed wcFst scores. |\n | [plotHaps](./doc/plotHaps.md) | **plotHaps** provides the formatted output that can be used with 'bin/plotHaplotypes.R'. |\n | [pVst](./doc/pVst.md) | **pVst** calculates vst, a measure of CNV stratification. |\n | [wcFst](./doc/wcFst.md) | **wcFst** is Weir & Cockerham's Fst for two populations. Negative values are VALID, they are sites which can be treated as zero Fst. For more information see Evolution, Vol. 38 N. 6 Nov 1984. Specifically **wcFst** uses equations 1,2,3,4. |\n | [popStats](./doc/popStats.md) | General population genetic statistics for each SNP |\n | [vcfsitesummarize](./doc/vcfsitesummarize.md) | Summarize by site |\n | [vcfrandomsample](./doc/vcfrandomsample.md) | Randomly sample sites from an input VCF file, which may be provided as stdin. Scale the sampling probability by the field specified in KEY. This may be used to provide uniform sampling across allele frequencies, for instance. |\n | [vcfroc](./doc/vcfroc.md) | Generates a pseudo-ROC curve using sensitivity and specificity estimated against a putative truth set. Thresholding is provided by successive QUAL cutoffs. |\n | [vcfstats](./doc/vcfstats.md) | Prints statistics about variants in the input VCF file. |\n | [bFst](./doc/bFst.md) | **bFst** is a Bayesian approach to Fst. Importantly **bFst** accounts for genotype uncertainty in the model using genotype likelihoods. For a more detailed description see: `A Bayesian approach to inferring population structure from dominant markers' by Holsinger et al. Molecular Ecology Vol 11, issue 7 2002. The likelihood function has been modified to use genotype likelihoods provided by variant callers. There are five free parameters estimated in the model: each subpopulation's allele frequency and Fis (fixation index, within each subpopulation), a free parameter for the total population's allele frequency, and Fst. |\n | [vcfcountalleles](./doc/vcfcountalleles.md) | Count alleles |\n | [vcfparsealts](./doc/vcfparsealts.md) | Alternate allele parsing method. This method uses pairwise alignment of REF and ALTs to determine component allelic primitives for each alternate allele. |\n | [genotypeSummary](./doc/genotypeSummary.md) | Generates a table of genotype counts. Summarizes genotype counts for bi-allelic SNVs and indel |\n | [vcfgenosummarize](./doc/vcfgenosummarize.md) | Adds summary statistics to each record summarizing qualities reported in called genotypes. Uses: RO (reference observation count), QR (quality sum reference observations) AO (alternate observation count), QA (quality sum alternate observations) |\n | [vcfaltcount](./doc/vcfaltcount.md) | count the number of alternate alleles in all records in the vcf file |\n | [meltEHH](./doc/meltEHH.md) |  |\n | [iHS](./doc/iHS.md) | **iHS** calculates the integrated haplotype score which measures the relative decay of extended haplotype homozygosity (EHH) for the reference and alternative alleles at a site (see: voight et al. 2006, Spiech & Hernandez 2014). |\n | [segmentFst](./doc/segmentFst.md) | **segmentFst** creates genomic segments (bed file) for regions with high wcFst |\n | [pFst](./doc/pFst.md) | **pFst** is a probabilistic approach for detecting differences in allele frequencies between two populations. |\n | [sequenceDiversity](./doc/sequenceDiversity.md) | The **sequenceDiversity** program calculates two popular metrics of haplotype diversity: pi and extended haplotype homozygoisty (eHH). Pi is calculated using the Nei and Li 1979 formulation. eHH a convenient way to think about haplotype diversity. When eHH = 0 all haplotypes in the window are unique and when eHH = 1 all haplotypes in the window are identical. |\n | [vcfgenotypecompare](./doc/vcfgenotypecompare.md) | adds statistics to the INFO field of the vcf file describing the amount of discrepancy between the genotypes (GT) in the vcf file and the genotypes reported in the <other-genotype-tag>. use this after vcfannotategenotypes to get correspondence statistics for two vcfs. |\n | [vcfrandom](./doc/vcfrandom.md) | Generate a random VCF file |\n | [segmentIhs](./doc/segmentIhs.md) | Creates genomic segments (bed file) for regions with high wcFst |\n | [vcfgenotypes](./doc/vcfgenotypes.md) | Report the genotypes for each sample, for each variant in the VCF. Convert the numerical represenation of genotypes provided by the GT field to a human-readable genotype format. | \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9728692550720112,
      "result": {
        "original_header": "scripts",
        "type": "Text_excerpt",
        "value": "The vcflib source repository contains a number of additional scripts.\nClick on the link to see the source code.\n| script | description |\n| :-------------- | :---------- |\n| [vcfclearinfo](./scripts/vcfclearinfo) | clear INFO field |\n| [vcfqualfilter](./scripts/vcfqualfilter) | quality filter |\n| [vcfnulldotslashdot](./scripts/vcfnulldotslashdot) | rewrite null genotypes to ./. |\n| [vcfprintaltdiscrepancy.r](./scripts/vcfprintaltdiscrepancy.r) | show ALT discrepancies in a table |\n| [vcfremovenonATGC](./scripts/vcfremovenonATGC) | remove non-nucleotides in REF or ALT |\n| [plotSmoothed.R](./scripts/plotSmoothed.R) | smooth plot of wcFst, pFst or abba-baba |\n| [vcf_strip_extra_headers](./scripts/vcf_strip_extra_headers) | strip headers |\n| [plotHapLrt.R](./scripts/plotHapLrt.R) | plot results of pFst |\n| [vcfbiallelic](./scripts/vcfbiallelic) | remove anything that is not biallelic |\n| [vcfsort](./scripts/vcfsort) | sort VCF using shell script |\n| [vcfnosnps](./scripts/vcfnosnps) | remove SNPs |\n| [vcfmultiwayscripts](./scripts/vcfmultiwayscripts) | more multiway comparisons |\n| [vcfgtcompare.sh](./scripts/vcfgtcompare.sh) | annotates records in the first file with genotypes and sites from the second |\n| [plotPfst.R](./scripts/plotPfst.R) | plot pFst |\n| [vcfregionreduce_and_cut](./scripts/vcfregionreduce_and_cut) | reduce, gzip, and tabix |\n| [plotBfst.R](./scripts/plotBfst.R) | plot results of pFst |\n| [vcfnobiallelicsnps](./scripts/vcfnobiallelicsnps) | remove biallelic SNPs |\n| [vcfindels](./scripts/vcfindels) | show INDELS |\n| [vcfmultiway](./scripts/vcfmultiway) | multiway comparison |\n| [vcfregionreduce](./scripts/vcfregionreduce) | reduce VCFs using a BED File, gzip them up and create tabix index |\n| [vcfprintaltdiscrepancy.sh](./scripts/vcfprintaltdiscrepancy.sh) | runner |\n| [vcfclearid](./scripts/vcfclearid) | clear ID field |\n| [vcfcomplex](./scripts/vcfcomplex) | remove all SNPs but keep SVs |\n| [vcffirstheader](./scripts/vcffirstheader) | show first header |\n| [plotXPEHH.R](./scripts/plotXPEHH.R) | plot XPEHH |\n| [vcfregionreduce_pipe](./scripts/vcfregionreduce_pipe) | reduce, gzip and tabix in a pipe |\n| [vcfplotaltdiscrepancy.sh](./scripts/vcfplotaltdiscrepancy.sh) | plot ALT discrepancy runner |\n| [vcfplottstv.sh](./scripts/vcfplottstv.sh) | runner |\n| [vcfnoindels](./scripts/vcfnoindels) | remove INDELs |\n| [bgziptabix](./scripts/bgziptabix) | runs bgzip on the input and tabix indexes the result |\n| [plotHaplotypes.R](./scripts/plotHaplotypes.R) | plot results |\n| [vcfplotsitediscrepancy.r](./scripts/vcfplotsitediscrepancy.r) | plot site discrepancy |\n| [vcfindelproximity](./scripts/vcfindelproximity) | show SNPs around an INDEL |\n| [bed2region](./scripts/bed2region) | convert VCF CHROM column in VCF file to region |\n| [vcfplotaltdiscrepancy.r](./scripts/vcfplotaltdiscrepancy.r) | plot ALT discrepancies |\n| [plot_roc.r](./scripts/plot_roc.r) | plot ROC |\n| [vcfmultiallelic](./scripts/vcfmultiallelic) | remove anything that is not multiallelic |\n| [vcfsnps](./scripts/vcfsnps) | show SNPs |\n| [vcfvarstats](./scripts/vcfvarstats) | use fastahack to get stats |\n| [vcfregionreduce_uncompressed](./scripts/vcfregionreduce_uncompressed) | reduce, gzip and tabix |\n| [plotWCfst.R](./scripts/plotWCfst.R) | plot wcFst |\n| [vcf2bed.py](./scripts/vcf2bed.py) | transform VCF to BED file |\n| [vcfjoincalls](./scripts/vcfjoincalls) | overlay files using QUAL and GT from a second VCF |\n| [vcf2sqlite.py](./scripts/vcf2sqlite.py) | push VCF file into SQLite3 database using dbname | \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9494764344465471,
      "result": {
        "original_header": "build from source",
        "type": "Text_excerpt",
        "value": "For include files add \nAnd for some of the VCF executables \nTo use Zig compiled tools, such as vcfcreatemulti, make sure the `zig` compiler is in the `PATH`.\nThe `zig` dependency is for the recently upgraded [vcfcreatemulti](./doc/vcfcreatemulti.md) that can be run after vcfwave to combine overlapping records. It is unfortunate that zig is not part of some large Linux distributions.\nMore on `zig` can be found in the souce code [README](./src/zig/README.md).\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8963535542052987,
      "result": {
        "original_header": "Using a recent C++ compiler",
        "type": "Text_excerpt",
        "value": "You may encounter something like libstdc++.so.6: version `GLIBCXX_3.4.32' not found (required by ...vcflib/build/pyvcflib.cpython-310-x86_64-linux-gnu.so). This is caused by the python pyvcflib not running against a python interpreter compiled with the same libstdc++ dependency. That is a bit nasty to solve. For now make sure to match C++ compilers for the python module.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.96233885604719,
      "result": {
        "original_header": "Using a different htslib",
        "type": "Text_excerpt",
        "value": "Check out htslib in tabixpp (recursively) and \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9979007900559487,
      "result": {
        "original_header": "source code",
        "type": "Text_excerpt",
        "value": "See [vcfecho.cpp](./src/vcfecho.cpp) for basic usage.\n[Variant.h](./src/Variant.h) and [Variant.cpp](./src/Variant.cpp)\ndescribe methods available in the API.  vcflib is incorporated into\nseveral projects, such as\n[freebayes](https://github.com/freebayes/freebayes), which may provide\na point of reference for prospective developers.  Note vcflib contains\nsubmodules (git repositories) comprising some dependencies. A full\nGuix development environment we use is defined [here](./guix.scm).\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8181988264924507,
      "result": {
        "original_header": "adding tests",
        "type": "Text_excerpt",
        "value": "We also added support for python bindings and unit tests. See [realign.py](./test/tests/realign.py) for an example.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/vcflib/vcflib/wiki"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/vcflib/vcflib/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 220
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vcflib/vcflib/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vcflib/vcflib"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vcflib"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/src/zig/compile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/scripts/vcfprintaltdiscrepancy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/scripts/vcfplotaltdiscrepancy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/scripts/vcfplottstv.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/scripts/vcfgtcompare.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://matrix.to/img/matrix-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/./logos/humpty-dumpty.jpg"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "INSTALL",
        "parent_header": [
          "vcflib"
        ],
        "type": "Text_excerpt",
        "value": "For latest updates see [RELEASE NOTES](./RELEASE_NOTES.md).\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://bioconda.github.io/user/install.html\">Bioconda</a>",
        "parent_header": [
          "vcflib",
          "INSTALL"
        ],
        "type": "Text_excerpt",
        "value": "Conda installs in user land without root access\n\n```sh\nconda install -c bioconda vcflib\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://brew.sh\">Homebrew</a>",
        "parent_header": [
          "vcflib",
          "INSTALL"
        ],
        "type": "Text_excerpt",
        "value": "Homebrew installs on Linux and Mac OSX\n\n```sh\nbrew install brewsci/bio/vcflib\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://debian.org/\">Debian</a>",
        "parent_header": [
          "vcflib",
          "INSTALL"
        ],
        "type": "Text_excerpt",
        "value": "For Debian and Ubuntu\n\n```sh\napt-get install libvcflib-tools libvcflib-dev\n```\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "<a href=\"https://guix.gnu.org/\">GNU Guix</a>",
        "parent_header": [
          "vcflib",
          "INSTALL"
        ],
        "type": "Text_excerpt",
        "value": "We develop against guix and vcflib is packaged as\n\n```sh\nguix package -i vcflib\n```\n\nSee also the Guix shell below.\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9326307364475809,
      "result": {
        "original_header": "build from source",
        "type": "Text_excerpt",
        "value": "VCFLIB uses the cmake build system, after a recursive checkout of the sources make the files in the 'build' directory with:\n```sh\ngit clone --recursive https://github.com/vcflib/vcflib.git\ncd vcflib\nmkdir -p build && cd build\ncmake -DCMAKE_BUILD_TYPE=Debug -DZIG=OFF -DOPENMP=OFF ..\ncmake --build .\ncmake --install .\n```\nand to run the tests\n```sh\nctest . --verbose\n```\n \nExecutables are built into the `./build` directory in the repository. \nNote, if you have an existing repo update submodules with\n```sh\ngit submodule update --init --recursive --progress\ncd build\ncmake --build . --target clean\n```\nThe most interesting one, perhaps, is wfa2lib. Bundling is no longer the default, but it is a submodule that will install an optimized libwfa2.so. Set up compilation with\n```sh\ncmake -DCMAKE_BUILD_TYPE=Release -DWFA_GITMODULE=ON  ..\ncmake --build .\nctest .\ncmake --install .\n```\n \nBuild dependencies can be viewed in the github-CI scripts (see badges above), as well as [guix.scm](./guix.scm) used by us to create the build environment (for instructions see the header of guix.scm). Essentially: \n- cmake\n- C++ compiler\n- htslib\n- tabixpp\n- WFA2 (wfa2lib)\n- pybind11 (for testing) \nFor include files add \n- libhts-dev\n- libtabixpp-dev\n- libtabixpp0 \n- zig 0.10 (disable with cmake -DZIG=OFF)\n- python\n- perl \nTo use Zig compiled tools, such as vcfcreatemulti, make sure the `zig` compiler is in the `PATH`.\nThe `zig` dependency is for the recently upgraded [vcfcreatemulti](./doc/vcfcreatemulti.md) that can be run after vcfwave to combine overlapping records. It is unfortunate that zig is not part of some large Linux distributions.\nMore on `zig` can be found in the souce code [README](./src/zig/README.md).\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999952881051565,
      "result": {
        "original_header": "Using a recent C++ compiler",
        "type": "Text_excerpt",
        "value": "You may encounter something like libstdc++.so.6: version `GLIBCXX_3.4.32' not found (required by ...vcflib/build/pyvcflib.cpython-310-x86_64-linux-gnu.so). This is caused by the python pyvcflib not running against a python interpreter compiled with the same libstdc++ dependency. That is a bit nasty to solve. For now make sure to match C++ compilers for the python module.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9970332875491652,
      "result": {
        "original_header": "Using a different htslib",
        "type": "Text_excerpt",
        "value": "    cmake -DHTSLIB_LOCAL:STRING=./htslib/ ..\n    cmake --build .\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924914520387019,
      "result": {
        "original_header": "link library",
        "type": "Text_excerpt",
        "value": "The standard build creates `build/vcflib.a`. Take a hint from the\n[cmake](./CMakeLists.txt) file that builds all the vcflib tools.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9387269127263288,
      "result": {
        "original_header": "distro builds",
        "type": "Text_excerpt",
        "value": "Distros, such as Debian, should build with something like\n```\ncmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DZIG=OFF ..\n```\n \nSee the CMakeLists.txt header for more.\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9995857148141467,
      "result": {
        "original_header": "adding tests",
        "type": "Text_excerpt",
        "value": "vcflib uses different test systems. The most important one is the\n[doctest](https://docs.python.org/3/library/doctest.html) because it\ndoubles as documentation. For an example see\n[vcf2tsv.md](./test/pytest/vcf2tsv.md) which can be run from the\ncommand line with\n```sh\ncd test\npython3 -m doctest -o NORMALIZE_WHITESPACE -o REPORT_UDIFF pytest/vcf2tsv.md\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.837715315977689,
      "result": {
        "original_header": "adding tests",
        "type": "Text_excerpt",
        "value": "vcflib uses different test systems. The most important one is the\n[doctest](https://docs.python.org/3/library/doctest.html) because it\ndoubles as documentation. For an example see\n[vcf2tsv.md](./test/pytest/vcf2tsv.md) which can be run from the\ncommand line with\n```sh\ncd test\npython3 -m doctest -o NORMALIZE_WHITESPACE -o REPORT_UDIFF pytest/vcf2tsv.md\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/vcflib/vcflib/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genomics, genotyping, haplotypecaller, variant-calling, vcf-manipulation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2012-2022 Erik Garrison\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "LICENSE",
        "parent_header": [
          "Contributing"
        ],
        "type": "Text_excerpt",
        "value": "This software is distributed under the free software [MIT LICENSE](./LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "vcflib"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "vcflib"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 1385197,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 38631,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 36008,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Zig",
        "size": 30968,
        "type": "Programming_language",
        "value": "Zig"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 22664,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 17319,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 13355,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 12835,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 10333,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8027,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scheme",
        "size": 6876,
        "type": "Programming_language",
        "value": "Scheme"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2648,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 769,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2024-04-28T05:25:36Z",
        "date_published": "2024-04-28T05:56:54Z",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.11-pre2",
        "name": "Debian test release",
        "release_id": 153120638,
        "tag": "v1.0.11-pre2",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.11-pre2",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/153120638",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/153120638",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.11-pre2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2024-04-20T09:56:24Z",
        "date_published": "2024-04-20T10:07:01Z",
        "description": "## ChangeLog v1.0.10 (20240420)\r\n\r\nVcflib maintenance release\r\n\r\n+ Fixed vcfwave bugs - thanks Andrea Guarracino!\r\n+ Fixed c++17 compatability - thanks Alex Petty!\r\n+ Fixed tabixpp script - thanks Blaise Li!\r\n+ Improved for vcfwave the wfa2lib build, fixed running tests with upstream build update\r\n+ Removed deprecated binary_function\r\n+ Removed unused files from repo\r\n+ Updated README\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.10",
        "name": "vcflib 1.0.10 Humpty Dumpty2",
        "release_id": 152039551,
        "tag": "v1.0.10",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/152039551",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/152039551",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2023-02-11T16:41:26Z",
        "date_published": "2023-02-11T16:47:57Z",
        "description": "## ChangeLog v1.0.9 (20230211)\r\n\r\nVcflib maintenance release - mostly for including in Debian\r\n\r\n+ Another fix so downstream packages, such as freebayes, no longer need WFAlib.\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.9",
        "name": "vcflib 1.0.9 Humpty Dumpty",
        "release_id": 92115990,
        "tag": "v1.0.9",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/92115990",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/92115990",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2023-02-10T20:40:55Z",
        "date_published": "2023-02-10T21:32:40Z",
        "description": "Another maintenance release for distros\r\n\r\n## ChangeLog v1.0.8 (20230210)\r\n\r\nVcflib maintenance release - mostly for including in Debian\r\n\r\n+ Another fix so downstream packages, such as freebayes, no longer need WFAlib.\r\n\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.8",
        "name": "vcflib 1.0.8 Humpty Dumpty",
        "release_id": 92076269,
        "tag": "v1.0.8",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/92076269",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/92076269",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2023-02-07T17:22:46Z",
        "date_published": "2023-02-07T17:28:33Z",
        "description": "## ChangeLog v1.0.7 (20230207)\r\n\r\nVcflib maintenance release - mostly for including in Debian\r\n\r\n+ Fixed regression discovered by garguantua_kerr and atille of Debian (thanks!)\r\n+ Added note on bio-vcf in vcffilter doc\r\n+ notes on vcfcreatemulti and backtracking\r\n+ CMake: honour include(GNUInstallDirs) paths (I forgot)\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.7",
        "name": "vcflib 1.0.7 Humpty Dumpty",
        "release_id": 91636083,
        "tag": "v1.0.7",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/91636083",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/91636083",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2023-01-29T04:57:02Z",
        "date_published": "2023-01-29T04:59:01Z",
        "description": "## ChangeLog v1.0.6 (20230129)\r\n\r\nVcflib maintenance release - mostly for including in Debian\r\n\r\n+ Fixed zig complaining about leaking memory\r\n+ Added CMake Debian support with -DWFA_GITMODULE=OFF\r\n+ Introduced CMake include(GNUInstallDirs)\r\n+ Successfully built wfa2 using embedded CMakeLists.txt\r\n+ Cleaned up CMakeLists.txt removing comments etc.\r\n+ Reintroduced vcfcreatemulti in legacy mode when ZIG=OFF (for Debian)\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.6",
        "name": "vcflib 1.0.6 Humpty Dumpty",
        "release_id": 90554844,
        "tag": "v1.0.6",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/90554844",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/90554844",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2023-01-16T08:55:05Z",
        "date_published": "2023-01-16T09:12:33Z",
        "description": "Vcflib's first *Humpty Dumpty* release: [vcfcreatemulti](./doc/vcfcreatemulti.md) is the natural companion to [vcfwave](./doc/vcfwave.md).\r\n\r\nOften variant callers are not perfect.\r\n\r\n**vcfwave** with its companion tool **vcfcreatemulti** can take an existing VCF file that contains multiple complex overlapping and even nested alleles and, unlike Humpty Dumpty, take them apart and put them together again.\r\nThereby, hopefully, creating sane VCF output that is useful for analysis and getting rid of false positives.\r\n\r\nWe created these tools by including the state-of-the-art [biWFA](https://github.com/smarco/WFA2-lib) wavefront aligner.\r\nThe tools are particularly useful for the output from structural variation callers and pangenome genotypers, such as used by the Human Pangenome Reference Consortium (HPRC) because of overlapping ALT segments.\r\n\r\nImportant changes:\r\n\r\n+ vcfwave is introduced and vcfallelicprimitimes is now considered obsolete\r\n+ INFO fields output order is now the same with every tool as on input parsing\r\n+ vcfwave check merging of genotypes - write tests\r\n+ vcfwave recompute AC, AFs from merged record\r\n+ Added python bindings with pybind11\r\n+ introduced the zig compiler with vcfcreatemulti.cpp as a first target (use cmake ZIG=OFF to disable). At this point the zig version (-n switch) gives identical results.\r\n\r\nIntroduction of O(n) wavefront algorithm WF to replace O(n^2) Smith-Waterman SW. Note that the output is different from the original SW implementation. SW is still optionally available but considered obsolete. Use the bi-directional vcfwave instead of vcfallelicprimitives.\r\n\r\n+ Added realignment using the wavefront algorithm (now the default). See [vcfwave](./doc/vcfwave.md) (thank you Erik Garrison https://github.com/ekg and Santiago Marco-Sola  https://github.com/smarco).\r\n+ WFA2-lib fix is merged upstream. Fixes bleeding in of macros https://github.com/vcflib/vcflib/issues/359\r\n+ Support longer read inversions in vcfwave!\r\n+ vcfallelicprimitives now considered legacy/obsolete\r\n+ Fixed allowing for different field order - see https://github.com/vcflib/vcflib/issues/365\r\n+ Improved CMake configuration\r\n+ vcflib compiles with both gcc and clang++ and tests pass, see [guix-clang.scm](./guix-clang.scm) - mind that git submodules such as WFA2-lib still override to gcc\r\n+ Fixed local build for tabixpp+htslib - note that htslib should be an upstream released version (currently 1.15.1). Unfortunately git submodule does not handle tags.\r\n+ Fix for -L switch for vcfallelicprimitives\r\n+ Added libasan and lto support\r\n+ Removed useless googletest submodule\r\n+ Moved git submodules into ./contrib\r\n+ Added python testing framework\r\n+ Added tabixpp back in as a submodule, fixes https://github.com/vcflib/vcflib/issues/305\r\n+ Optimizations and bug fixes. (thanks @mphschmitt)\r\n+ vcfcreatemulti merge multiple rows\r\n+ rewrite of vcfcreatemulti using zig\r\n+ vcfcreatemulti merge genotypes correctly, with tests\r\n+ vcfcreatemulti adjust info and genotypes for variants that have multiple alts already (now errors)\r\n+ vcfcreatemulti handle phase\r\n+ vcfcreatemulti document building with zig\r\n+ vcfcreatemulti added progress bar to vcfwave and vcfcreatemulti with update to tabixpp\r\n+ vcfcreatemulti default vcfwave and vcfcreatemulti to nextgen mode\r\n+ vcfcreatemulti check file is sorted for vcfcreatemulti and improve suggestions\r\n\r\n## ChangeLog v1.0.4\r\n\r\nNever properly released. Merged with v1.0.5.\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.5",
        "name": "vcflib 1.0.5 Humpty Dumpty",
        "release_id": 89100226,
        "tag": "v1.0.5",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/89100226",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/89100226",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2022-01-22T07:58:11Z",
        "date_published": "2022-01-22T08:00:20Z",
        "description": "## ChangeLog v1.0.3 (20220122)\r\n\r\nThis is a maintenance release of vcflib.\r\n\r\n+ Merge intervaltree changes (thanks @jnunn and @timmassingham)\r\n+ Built with gcc-11\r\n+ Fix issue #251 hapLrt: fix segfault when accessing genotype field. (thanks @mphschmitt)\r\n+ Fix vcfflatten: fix segfault when no 'AF' field is present (#47, thanks @mphschmitt)\r\n+ Fixes on vcfnulldotslashdot #310 (thanks @WinterFor)\r\n+ Fix issue #301: Replace raw pointer usage with std::unique_ptr #306 (thanks @Glebanister)\r\n+ Fix man page installation #321 (thanks @alexreg)\r\n+ Use `guix shell` instead of `guix environment` for development\r\n+ Regenerated online docs\r\n+ README: add matrix badge (removed gitter badge)\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.3",
        "name": "vcflib 1.0.3",
        "release_id": 57741529,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/57741529",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/57741529",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjotrp",
          "type": "User"
        },
        "date_created": "2021-01-04T16:39:56Z",
        "date_published": "2021-01-04T16:42:33Z",
        "description": "## ChangeLog v1.0.2 (20210104)\r\n\r\nThis is a maintenance release of vcflib, mostly improving the build system, CI and generating markdown docs as well as man pages.\r\n\r\n+ Removed tabixpp and htslib source dependencies, i.e., we are now using the distro provided libraries and include files through pkg-config.  See also the [README](README.md#build-from-source)\r\n+ Removed the tabixpp+htslib git submodules\r\n+ Generalise and document the cmake build system\r\n+ Added tests to the cmake build system and build instructions to README\r\n+ Added support for ARM64 and PowerPC, see #292 (thanks @genisysram and @mr-c)\r\n+ Added github actions for the issue tracker\r\n+ Added githum CI\r\n+ Updated header files in src with copyright/license info, see #16\r\n+ Created markdown [docs](./doc/vcflib.md) and [man pages](./man/) for  all utilities. Created a script bin2md for markdown generation and  use pandoc for the man page generation.\r\n\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.2",
        "name": "vcflib 1.0.2",
        "release_id": 35958758,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/35958758",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/35958758",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tseemann",
          "type": "User"
        },
        "date_created": "2019-09-30T23:41:05Z",
        "date_published": "2019-09-30T23:45:21Z",
        "description": "* migrate helper scripts to python3\r\n* Improved docs\r\n* fix typos\r\n* updated makefile\r\n* promote use of brew and conda over building locally",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.1",
        "name": "Python 3 transition",
        "release_id": 20368853,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/20368853",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/20368853",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2019-09-03T11:13:46Z",
        "date_published": "2019-09-03T11:15:53Z",
        "description": "This synchronizes a number of changes that the vgteam has implemented on top of vcflib, including a new intervaltree implementation. Enjoy!",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.0",
        "name": "version 1.0!",
        "release_id": 19714544,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/19714544",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/19714544",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tseemann",
          "type": "User"
        },
        "date_created": "2019-08-07T09:55:23Z",
        "date_published": "2019-08-23T09:01:05Z",
        "description": "\ud83d\udc0d  Some of the `vcf*` tools were actually Python 2.x scripts, which is EOL soon.\r\nThese are now Python 3.x and use `#!/usr/bin/env python3` hashbangs.\r\n\r\n\u26a0\ufe0f  Please use `git clone --recursive` when building this package because it uses sub-modules \r\nwhich are not included the source tarballs below.\r\n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.0-rc3",
        "name": "Migrate to Python 3",
        "release_id": 19488999,
        "tag": "v1.0.0-rc3",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.0-rc3",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/19488999",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/19488999",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.0-rc3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ekg",
          "type": "User"
        },
        "date_created": "2016-02-08T22:25:40Z",
        "date_published": "2016-02-08T22:27:21Z",
        "description": "Resolves #131 \n",
        "html_url": "https://github.com/vcflib/vcflib/releases/tag/v1.0.0-rc1",
        "name": "bugfixes",
        "release_id": 2575616,
        "tag": "v1.0.0-rc1",
        "tarball_url": "https://api.github.com/repos/vcflib/vcflib/tarball/v1.0.0-rc1",
        "type": "Release",
        "url": "https://api.github.com/repos/vcflib/vcflib/releases/2575616",
        "value": "https://api.github.com/repos/vcflib/vcflib/releases/2575616",
        "zipball_url": "https://api.github.com/repos/vcflib/vcflib/zipball/v1.0.0-rc1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:59:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 616
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "type": "Text_excerpt",
        "value": "The developers are on the vcflib\n[matrix channel](https://matrix.to/#/#vcflib:matrix.org). Please do not use the github issue tracker for support issues!\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "USAGE",
        "parent_header": [
          "vcflib"
        ],
        "type": "Text_excerpt",
        "value": "Users are encouraged to drive the utilities in the library in a\nstreaming fashion, using Unix pipes to fully utilize resources on\nmulti-core systems.  Piping provides a convenient method to interface\nwith other libraries (vcf-tools, BedTools, GATK, htslib,\n[bio-vcf](https://github.com/vcflib/bio-vcf), bcftools,\n[freebayes](https://github.com/freebayes)) which interface via VCF\nfiles, allowing the composition of an immense variety of processing\nfunctions. Examples can be found in the scripts,\ne.g. [./scripts](./scripts/).\n\n"
      },
      "source": "https://raw.githubusercontent.com/vcflib/vcflib/master/README.md",
      "technique": "header_analysis"
    }
  ]
}