{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NarlikarLab/exoDIVERSITY"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-07T07:36:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-25T13:00:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9000017566047599,
      "result": {
        "type": "Text_excerpt",
        "value": "exoDIVERISTY is a tool that can be used to resolve diverse protein-DNA footprints from exonuclease based ChIP experiments such as ChIP-exo or ChIP-nexus \nThe core engine is written in C with a python wrapper for the parallel processing and plotting. It also uses R to plot the final heatmap images.\nThe following packages need to be installed for running exoDIVERSITY: \n * Python 2.7+ (Not compatible with Python 3.x)\n * python-numpy\n * python-ctypes\n * python-re\n * python-matplotlib\n * R >= 3.3\n * R packages: RColorBrewer and plotfunctions \nexoDIVERSITY is available at:  \nTo execute exoDIVERSITY from anywhere export the path to exoDIVERSITY to the PATH variable.\nUSAGE: exoDiveristy [options]\n\t -f: Input fasta file\n\t -r: Reads file either in BAM (sorted) or bedGraph format\n\t -format: Format of the reads file BAM or BED\n\t -g: genome file containing sizes of call chromosomes\n\t -ctrl: Control reads file in the same format as the reads file\n\t -o: Output directory (must be new)\n\t -rev: is 1 if reverse complement is to be considered; otherwise 0. Default 1\n\t -mask: is 1 if repeats are to be masked; otherwise 0. Default 0\n\t -initialWidth: The width of the motifs at starting point\n\t -minMode: Minimum number of modes in which data should be divided. Default 1\n\t -maxMode: Maximum number of modes in which the data should be divided. Default 10\n\t -rWidth: The width of the read windows for both positive and negative strand. Default 5\n\t -gobeyond: 0 or 1. 1 allows the read windows to go beyond the motif on both strands. Default 0\n\t -nproc: The number of processors to be used for computation. Default is the number of cores the system has\n\t -v: 0 or 1. 1 to save plots for the posterior scores. Default 0\n\t -bin: Binarize read counts based on median, first quartile or third quartile or keep when file is already in binary form {median,Q1,Q3,keep}. Default median\n\t -ntrials: Number of trials for each model. Default 5\n\t -pcZeros: Pseudo count for 0s in reads data. Default 1\n\t -pcOnes: Pseudo count for 1s in reads data. Default 1\n\t -twobit: 2bit file (from UCSC browser) for sequence alignment plots\nIn case sequence wise + and - ve read counts are present\n\t -p: The positive strand reads file\n\t -n: The negative strand reads file \n\nOUTPUT:\n\tThe output of exoDIVERSITY contains the following components:\n\t1) A \"reads\" directory containing the read counts for each sequence for both the positive and negative strands.\n\t   It also contains the final binarized read counts files for both the strands.\n\t2) For each mode <m> (from -minMode to -maxMode) a directory containing the model with <m> modes\n\t   In a directory <m>modes there are the following files:\n\t   For i in {0,..<m>}\n\t   a) logo_<i>.png and logo_<i>_rc.png are the motifs and their reverse complement forms\n\t   b) reads_<i>.png are the positive and negative strand read profiles for each motif\n\t   c) info.txt: This file contains information about the mode, the motif start position in the sequence, the positions                   of the positive and negative strand read windows and the strand for each sequence\n\t   d) events.bed: It contains the motif regions in each sequence in the sorted order of the modes\n\t   e) bestModelParams.txt: It contains all the parameter values for the best model learned\n\t   f) seqsInProbSpace.png: It is a plot containing the probability of a sequence belonging to each of the modes in the model for all the sequences.\n\t3) A \"settings.txt\" file containing all the values of the parameters used for the run\n\t4) \"exoDiversity.html\" contains the output for the best model identified by exoDiversity. \n\t\nEXAMPLE:\n\tAn example fasta file along with a small BAM file for the experimental reads and control reads are given in the EXAMPLE directory. One can run exoDIVERISTY as follows to get a similar output as given in the Example/out directory. \n./exoDiversity -f Example4/combined_FoxA1_CTCF.fasta -r Example4/combined_small.bam -ctrl Example4/combined_control_small.bam -o Example4/out -twobit /data/genomeData/hg19/hg19.2bit -format BAM\n \n"
      },
      "source": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/README",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NarlikarLab/exoDIVERSITY/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NarlikarLab/exoDIVERSITY"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/README",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/preRunChecks.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/weblogoMod/build_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/weblogoMod/weblogolib/htdocs/examples/build_examples.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9764181884696541,
      "result": {
        "type": "Text_excerpt",
        "value": "The core engine is written in C with a python wrapper for the parallel processing and plotting. It also uses R to plot the final heatmap images.\nThe following packages need to be installed for running exoDIVERSITY: \n * Python 2.7+ (Not compatible with Python 3.x)\n * python-numpy\n * python-ctypes\n * python-re\n * python-matplotlib\n * R >= 3.3\n * R packages: RColorBrewer and plotfunctions \nExtra tools needed:\n * bedtools v2.25.0\n * twoBitToFa: UCSC tool to extract fasta sequences from .2bit file\n   => Linux 64 bit version: http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/\n   => macOS version: http://hgdownload.cse.ucsc.edu/admin/exe/macOSX.x86_64/ \nExtra files needed:\n * .2bit file for the respective genome assembly \nINSTALLATION: \nTo install exoDIVERSITY execute the following commands:\nwget https://github.com/NarlikarLab/exoDIVERSITY/releases/download/v1.2/exoDIVERSITY.tar.gz\ntar -xvf exodiversity.tar.gz\ncd exoDIVERSITY\nmake \n"
      },
      "source": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "exoDIVERSITY"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "NarlikarLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 1285404,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 792555,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 98813,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Parrot",
        "size": 16413,
        "type": "Programming_language",
        "value": "Parrot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PostScript",
        "size": 16025,
        "type": "Programming_language",
        "value": "PostScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6678,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6438,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 1126,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 683,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NarlikarLab/exoDIVERSITY/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anushua",
          "type": "User"
        },
        "date_created": "2021-03-28T16:30:19Z",
        "date_published": "2021-03-28T16:23:31Z",
        "description": "Included new flag -gobeyond which allows the read windows to go beyond the motif start and end.\r\nIncluded -v flag which can be used to plot the posterior values.\r\nThe script also plots sequence scores in probability space for all the modes in the model.",
        "html_url": "https://github.com/NarlikarLab/exoDIVERSITY/releases/tag/v1.2",
        "name": "Revision",
        "release_id": 40600063,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/40600063",
        "value": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/40600063",
        "zipball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anushua",
          "type": "User"
        },
        "date_created": "2021-02-03T12:46:09Z",
        "date_published": "2021-02-03T12:45:04Z",
        "description": "The input Example files were changed along with the ExampleOut.",
        "html_url": "https://github.com/NarlikarLab/exoDIVERSITY/releases/tag/v1.1",
        "name": "Updated Release",
        "release_id": 37292777,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/37292777",
        "value": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/37292777",
        "zipball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "anushua",
          "type": "User"
        },
        "date_created": "2021-02-02T05:35:34Z",
        "date_published": "2021-02-02T06:25:49Z",
        "html_url": "https://github.com/NarlikarLab/exoDIVERSITY/releases/tag/v1.0",
        "release_id": 37216922,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/37216922",
        "value": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/releases/37216922",
        "zipball_url": "https://api.github.com/repos/NarlikarLab/exoDIVERSITY/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:13:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}