{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "<!DOCTYPE html>\n<html>\n\n<head>\n<link rel=stylesheet href=style.css />\n<link rel=icon href=CZI-new-logo.png />\n</head>\n\n<body>\n<main>\n<div class=\"goto-index\"><a href=\"index.html\">Table of contents</a></div>\n<h2>Acknowledgments</h2>\n\n<p>\nThe Shasta software uses the external software packages listed below.\nThis list does not include standard components of the \n<a href='https://www.ubuntu.com/'>Ubuntu</a> distribution \nof the \n<a href='https://www.linux.org/'>Linux</a> operating system.\n\n<p>\nLicensing information for each of these packages is contained in the Shasta \n<a href='https://github.com/chanzuckerberg/shasta/blob/master/LICENSE'>LICENSE</a> file.\n\n\n\n<h3> MurmurHash2</h3>\n<p>\n<a href='https://github.com/aappleby/smhasher/blob/master/src/MurmurHash2.cpp'>MurmurHash2</a>\n from GitHub repository\n<a href='https://github.com/aappleby/smhasher'>aappleby/smhasher</a>, by Austin Appleby,\nis a hash function with excellent performance and randomness properties.\nIt is used as a hash function in the Shasta software. \n\n\n\n<h3 id=Dset>Dset</h3>\n<p>\nFiles \n<a href='https://github.com/chanzuckerberg/shasta/blob/master/src/dset64.hpp'>src/dset64.hpp</a>\nand\n<a href='https://github.com/chanzuckerberg/shasta/blob/master/src/dset64-gccAtomic.hpp'>src/dset64-gccAtomic.hpp</a>\nare modified versions of file \n<a href='https://github.com/wjakob/dset/blob/master/dset.h'>dset.h</a>\nfrom GitHub repository\n<a href='https://github.com/wjakob/dset'>wjakob/dset</a> \nby Wenzel Jakob. \n\nThey are lock-free implementation in C++ of the algorithm described in <i>Wait-free Parallel Algorithms for the Union-Find Problem</i>\nby Richard J. Anderson and Heather Woll, \n<i>STOC '91 Proceedings of the twenty-third annual ACM symposium on Theory of computing</i>.\n\n<p>\nThe code was modified to support the union-find algorithm for 64-bit data \nusing 128-bit primitives for atomic memory access.\nKind assistance by Wenzel Jakob in making these changes is acknowledged.\n\n\n\n<h3> SeqAn</h3>\n<p>\nThe <a href='https://github.com/seqan/seqan'>SeqAn</a> software \nis used as an option for multiple sequence alignment\nof sequences encountered in edges of the Shasta marker graph.\nIt is not directly included in the Shasta repository.\nInstead, it is downloaded from GitHub and installed on the user's machine\nwhen the user invokes\n<a href='https://github.com/chanzuckerberg/shasta/blob/master/scripts/InstallPrerequisites-Ubuntu.sh'>\nscripts/InstallPrerequisites-Ubuntu.sh</a> or\n<a href='https://github.com/chanzuckerberg/shasta/blob/master/scripts/InstallPrerequisites-macOS.sh'>\nscripts/InstallPrerequisites-macOS.sh</a>\nIt is a header only library.\n\n\n\n<h3>Spoa</h3>\n<p>\nThe <a href='https://github.com/rvaser/spoa'>Spoa</a> software \nby Robert Vaser\nis used as an option for multiple sequence alignment\nof sequences encountered in edges of the Shasta marker graph.\nIt is not directly included in the Shasta repository.\nInstead, it is downloaded from GitHub, built, and installed on the user's machine\nwhen the user invokes\n<a href='https://github.com/chanzuckerberg/shasta/blob/master/scripts/InstallPrerequisites-Ubuntu.sh'>\nscripts/InstallPrerequisites-Ubuntu.sh</a> or\n<a href='https://github.com/chanzuckerberg/shasta/blob/master/scripts/InstallPrerequisites-macOS.sh'>\nscripts/InstallPrerequisites-macOS.sh</a>.\n\n\n<div class=\"goto-index\"><a href=\"index.html\">Table of contents</a></div>\n</main>\n</body>\n</html>\n\n"
      },
      "source": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/docs/Acknowledgments.html",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chanzuckerberg/shasta"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to shasta\n\nContributions of code, ideas, computational experiments,\nor documentation are welcome. \nTo contribute, please use the standard GitHub Pull Request process\nand take into consideration the suggestions below.\nTo facilitate integration of your code,\nuse a new branch for each Pull Request.\nYou can choose any name you like for the branch you create for this purpose,\nas long as it does not conflict with the name of an existing branch.\n\nThis project adheres to the Contributor Covenant \n[code of conduct](https://github.com/chanzuckerberg/.github/tree/master/CODE_OF_CONDUCT.md). \nBy participating, you are expected to uphold this code. \nPlease report unacceptable behavior to opensource@chanzuckerberg.com.\n\n\n#### Contributing C++ code\n\n* Add at least a minimal amount\nof comments to explain or clarify what the code does. \n* Use blank lines generously to separate code blocks.\n* Set your editor to convert tabs to 4 spaces.\n* To minimize name pollution of the global namespace,\nall code should be in the `ChanZuckerberg::shasta` namespace.\nDo not use `using` directives at global scope.\n* If you need to add a large amount of code to an existing\nfile, consider creating a new file instead.\n* Keep in mind that the code is currently compiled\nusing the C++11 standard. Use features in that standard\nliberally. However, you cannot use C++ features\nthat were introduced in the C++14 or C++17 standard.\n* For functionality not provided\nby the standard libraries, you can also use the Boost libraries.\n* If possible, avoid adding dependencies on other packages.\n\n\n\n#### Contributing ideas, computational experiments, comments, or criticism\n* Please use the GitHub \n[Wiki](https://github.com/chanzuckerberg/shasta/wiki)\nor \n[Issues](https://github.com/chanzuckerberg/shasta/issues)\nsections of the GitHub repository as appropriate.\n\n\n\n#### Contributing documentation\n\n* Put your contribution in the `docs`\ndirectory, so it becomes automatically visible in GitHub Pages.\n* Feel free to create new `.html` files, if appropriate.\n* Attempt to harmonize your new materials with the existing\ndocumentation, if possible.\n\n"
      },
      "source": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-05-07T14:10:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-11T17:43:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "[MOVED] Moved to paoloshasta/shasta. De novo assembly from Oxford Nanopore reads"
      },
      "technique": "GitHub_API"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chanzuckerberg/shasta/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chanzuckerberg/shasta/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 59
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chanzuckerberg/shasta"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Shasta long read assembler"
      },
      "source": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/scripts/TravisCheckBuildMacOS.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/scripts/InstallPrerequisites-Ubuntu.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/scripts/TravisCheckBuildUbuntu.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "assembly, de-novo, dna, long-read, nanopore, pacbio, sequencing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "LICENSE NOTICES FOR THE SHASTA GITHUB REPOSITORY AND FOR THE EXTERNAL\nSOFTWARE PACKAGES IT USES\n\nContents:\n* Licensing notice for GitHub repository chanzuckerberg/shasta.\n* Licensing notice for GitHub repository aappleby/smhasher\n* Licensing notice for GitHub repository wjakob/dset\n* Licensing notice for GitHub repository seqan/seqan.\n* Licensing notice for GitHub repository rvaser/spoa\n* Licensing notice for Lapack and Blas\n\nSee here for more details on how the Shasta software uses each\nof these packages:\n\nhttps://chanzuckerberg.github.io/shasta/Acknowledgments.html\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR GITHUB REPOSITORY chanzuckerberg/shasta\n\nMIT License\n\nCopyright (c) 2018-2022 Chan Zuckerberg Initiative \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR GITHUB REPOSITORY aappleby/smhasher\n\nFiles src/MurmurHash2.hpp and src/MurmurHash2.cpp are from GitHub\nrepository aappleby/smhasher, with a minor name change (\".hpp\" \ninstead of \"*.cpp\" for the first file). \n\nThis repository does not contain a licensing notice.\nHowever ths source code contains the following licensing statement:\n\nMurmurHash2 was written by Austin Appleby, and is placed in the public\ndomain. The author hereby disclaims copyright to this source code.\n\n\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR GITHUB REPOSITORY wjakob/dset\n\nFiles src/dset64.hpp and src/dset64-gccAtomic.hpp are modified \nversions of file dset.h from GitHub repository\nwjakob/dset by Wenzel Jakob. That GitHub repository comes with the\nfollowing license notice:\n\nCopyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\nThis software is provided 'as-is', without any express or implied\nwarranty.  In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\nclaim that you wrote the original software. If you use this software\nin a product, an acknowledgment in the product documentation would be\nappreciated but is not required.\n2. Altered source versions must be plainly marked as such, and must not be\nmisrepresented as being the original software.\n3. This notice may not be removed or altered from any source distribution.\n\n\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR GITHUB REPOSITORY seqan/seqan.\n\nCopyright (c) 2006-2018, Knut Reinert, FU Berlin\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of Knut Reinert or the FU Berlin nor the names of\n      its contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n\n\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR GITHUB REPOSITORY rvaser/spoa\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Robert Vaser\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n-------------------------------------------------------------------------------\n\nLICENSING NOTICE FOR LAPACK AND BLAS\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n .\n - Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n .\n - Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer listed\n   in this license in the documentation and/or other materials\n   provided with the distribution.\n .\n - Neither the name of the copyright holders nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n .\n The copyright holders provide no reassurances that the source code\n provided does not infringe any patent, copyright, or any other\n intellectual property rights of third parties.  The copyright holders\n disclaim any liability to any recipient for claims brought against\n recipient by any third party for infringement of that parties\n intellectual property rights.\n .\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n \n\n"
      },
      "source": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "shasta"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "chanzuckerberg"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 4617637,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 97631,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 12943,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3995,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2022-05-09T18:00:03Z",
        "date_published": "2022-05-09T20:46:25Z",
        "description": "# Additions and improvements since release 0.9.0\r\n\r\n- Phased diploid assembly improvements result in more sequence assembled diploid, with larger diploid N50: \r\n    * Algorithmic improvements.\r\n    * Bug fixes.\r\n    * New assembly configurations, listed below.\r\n\r\n- New Bayesian model `guppy-5.0.7-b` improves repeat count calls on homopolymer repeats for reads generated by the Guppy 5 base caller with \"super\" accuracy. Used in all new assembly configurations listed below.\r\n\r\n- New assembly configurations:\r\n    * For standard nanopore reads at standard coverage (40x to 80x):\r\n        * Haploid assembly: `Nanopore-May2022`\r\n        * Phased diploid assembly: `Nanopore-Phased-May2022`\r\n    * For Ultra-Long (UL) nanopore reads at standard coverage (40x to 80x):\r\n        * Haploid assembly: `Nanopore-UL-May2022`\r\n        * Phased diploid assembly: `Nanopore-UL-Phased-May2022`\r\n    * Specialized for human assemblies with one flowcell per genome (low coverage, around 30x):\r\n        * Haploid assembly: `Nanopore-Human-SingleFlowcell-May2022`\r\n        * Phased diploid assembly: `Nanopore-Human-SingleFlowcell-Phased-May2022`\r\n       \r\n- As announced with release 0.9.0, several items of obsolete functionality were removed.\r\n\r\n\r\n\r\n# Deprecated platform (macOS) that will be removed\r\n\r\nMacOS support (all versions) is deprecated and will be removed soon. It is likely that this is the last Shasta release that includes macOS support. If you would like this platform to continue to be supported, please file an issue on this repository, with motivation.\r\n\r\n\r\n\r\n# Platforms\r\n\r\n\r\n\r\n## Linux\r\n\r\n- The `shasta-Linux-0.10.0` executable will run on most current 64-bit Linux systems that use kernel version 3.2.0 or later. This includes all Ubuntu versions starting at 12.04 plus CentOS 7 and 8. \r\n\r\n- The release includes tar file `shasta-Ubuntu-20.04-0.10.0.tar` which is a complete Shasta build on Ubuntu 20.04. It will not be needed by most users.\r\n\r\n\r\n\r\n## macOS\r\n\r\nTwo macOS executables are included in this release:\r\n\r\n- `shasta-macOS-11-Intel-0.10.0`, for macOS 11.0 (*Big Sur*) on Apple systems that use Intel `x86-64` processors. \r\n\r\n- `shasta-macOS-11-ARM-0.10.0`, for macOS 11.0 (*Big Sur*) on Apple systems that use Apple ARM processors, including Apple M1 processors.\r\n\r\n\r\n\r\n\r\n\r\n## Windows\r\n\r\nAs in previous releases, the Linux executable `shasta-Linux-0.10.0` can be used on Windows under [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) (WSL).\r\n\r\n\r\n\r\n## Linux ARM\r\n\r\nThe ARM executable, `shasta-Linux-ARM-0.10.0`, can be used on 64-bit ARM version 8 platforms. It is known to work at least in the following environments:\r\n\r\n- Graviton2 processors on AWS EC2 instances.\r\n- Raspberry Pi Model 4 running 64-bit Ubuntu 20.04.\r\n\r\nIt will not work on macOS systems with ARM processors, including Apple M1 processors (use `shasta-macOS-11-ARM-0.10.0` instead).\r\n\r\n\r\n# Compatibility\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.10.0 for postprocessing of an assembly done using a previous release. \r\n\r\n\r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.10.0",
        "name": "0.10.0",
        "release_id": 66407874,
        "tag": "0.10.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/66407874",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/66407874",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "0seastar0",
          "type": "User"
        },
        "date_created": "2022-02-03T16:33:57Z",
        "date_published": "2022-02-03T19:41:12Z",
        "description": "# Additions and improvements since release 0.8.0\r\n\r\n- New implementation of phased assembly (Mode 2) improves the quality of phased assemblies with fewer artifacts (see the documentation for details).\r\n\r\n- Ability to run assemblies without using Run-Length Encoding (RLE) for the reads, especially useful for phased assemblies. RLE encoding is effective for noisy reads, less so for higher-accuracy reads, especially for phased assemblies.\r\n\r\n- New assembly configurations. Use `shasta --command listConfiguration --config ???` to list applicability and details of each.\r\n    * `Nanopore-UL-Jan2022` (Ultra-Long nanopore reads, haploid assembly).\r\n    * `Nanopore-Phased-Jan2022` (nanopore reads, phased diploid assembly).\r\n    * `Nanopore-UL-Phased-Jan2022` (Ultra-Long nanopore reads, phased diploid assembly).\r\n    \r\n- Many messages useful for performance evaluation previously written to the assembly log output (`stdout`) are now written to a new file `performance.log` in the assembly directory, improving the readability of the assembly log.\r\n\r\n- Assembly log output (`stdout`) is now duplicated to `stdout.log` in the assembly directory. Use command line option `--suppressStdoutLog` to suppress this behavior. \r\n\r\n- Several usability improvements and bug fixes.\r\n\r\n\r\n# Deprecated functionality that will be removed\r\n\r\nThe following functionality is deprecated and will be removed soon. If you would like one of these items to continue to be supported, please file an issue on this repository with motivation.\r\n\r\n- Alignment method 0 (`--Align.method 0`).\r\n\r\n- Marker graph refinement (`--MarkerGraph.refineThreshold`).\r\n\r\n- Reverse transitive reduction of the marker graph (`--MarkerGraph.reverseTransitiveReduction`).\r\n\r\n- Detangle method 1 (`--Assembly.detangleMethod 1`).\r\n\r\n- Support for macOS 10 (10.15 *Catalina* and 10.14 *Mojave*).\r\n\r\n- Ability to build a Shasta [AppImage](https://en.wikipedia.org/wiki/AppImage). \r\n\r\n\r\n\r\n\r\n# Platforms\r\n\r\n\r\n\r\n## Linux\r\n\r\n- The `shasta-Linux-0.9.0` executable will run on most current 64-bit Linux systems that use kernel version 3.2.0 or later, including all Ubuntu versions starting at 12.04 plus CentOS 7 and 8. It will not run on Linux systems with older kernels, including CentOS 6, which reached the end of support on November 30, 2020.\r\n\r\nThe release includes tar file `shasta-Ubuntu-20.04-0.9.0.tar`, a complete Shasta build on Ubuntu 20.04. Most users will not need it.\r\n\r\n\r\n\r\n## macOS\r\n\r\nThis release includes three macOS executables:\r\n\r\n- `shasta-macOS-11-Intel-0.9.0`, for macOS 11.0 (*Big Sur*) on Apple systems that use Intel `x86-64` processors. \r\n\r\n- `shasta-macOS-11-ARM-0.9.0`, for macOS 11.0 (*Big Sur*) on Apple systems that use Apple ARM processors, including Apple M1 processors.\r\n\r\n- `shasta-macOS-10-0.9.0`, for macOS 10.15 (*Catalina*). It also runs on macOS 10.14 (*Mojave*). \r\n\r\n\r\n\r\n\r\n## Windows\r\n\r\nAs in previous releases, the Linux executable `shasta-Linux-0.9.0` can be used on Windows under [Windows Subsystem for Linux](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) (WSL).\r\n\r\n\r\n\r\n## Linux ARM\r\n\r\nThe ARM executable, `shasta-Linux-ARM-0.9.0`, can be used on 64-bit ARM version 8 platforms. It is known to work at least in the following environments:\r\n\r\n- Graviton2 processors running 64-bit Ubuntu 20.04 on AWS instance types `r6g`, `m6g`, `c6g`, and `x2gd`.\r\n- Raspberry Pi Model 4 running 64-bit Ubuntu 20.04.\r\n\r\nIt will not work on macOS systems with ARM processors, including Apple M1 processors (use `shasta-macOS-11-ARM-0.9.0` instead).\r\n\r\n\r\n# Compatibility\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.9.0 for postprocessing of an assembly done using a previous release. \r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 58628725,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/58628725",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/58628725",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2021-10-07T17:08:01Z",
        "date_published": "2021-10-07T20:45:06Z",
        "description": "# Additions and improvements since release 0.7.0\r\n\r\n- Phased diploid assembly via `--Assembly.mode 2`. Two assembly configurations to facilitate phased diploid assembly for current Oxford Nanopore reads generated by the Guppy 5 base caller are also provided, and can be invoked via `--config Nanopore-Phased-Aug2021` (standard reads) or `--config Nanopore-UL-Phased-Oct20211` (Ultra-Long reads). These configurations are tentative and are subject to improvements. Please file an issue on the Shasta GitHub repository to discuss unsuccessful assemblies. The documentation page on computational methods includes a description of mode 2 assembly.\r\n\r\n- The `--config` option is now mandatory. It can specify a Shasta configuration file, as in previous releases, or one of several built-in configurations available within the Shasta executable. Shasta command `shasta --command listConfigurations` writes a list of available built-in configuration names. Use `shasta --command listConfiguration --config name` to see details of a specific built-in configuration. A new documentation page describing functionality related to built-in configurations was added.\r\n\r\n- Alignment method 4 (experimental). Selectable via `--Align.alignMethod 4`. It can be useful for assembly of centromeres.\r\n\r\n- More flexibility in reading fastq files: characters following the plus sign on the third line for each read are now accepted.\r\n\r\n- Additional configuration for assembly of plant genomes. Invoke via `--config Nanopore-Plants-Apr2021`. Use `shasta --command listConfiguration --config Nanopore-Plants-Apr2021` for details.\r\n\r\n- Bayesian consensus callers for Bonito 0.3.1 and Guppy 5.0.7 base callers.\r\n\r\n- Several usability improvements and bug fixes.\r\n\r\n\r\n\r\n\r\n# Platforms\r\n\r\n\r\n\r\n## Linux\r\n\r\n- The `shasta-Linux-0.8.0` executable will run on most current 64-bit Linux systems that use kernel version 3.2.0 or later. This includes all Ubuntu versions starting at 12.04 plus CentOS 7 and 8. It will not run on Linux systems with older kernels, including CentOS 6, which reached end of support on November 30, 2020.\r\n\r\n- The release includes tar file `shasta-Ubuntu-20.04-0.8.0.tar` which is a complete Shasta build on Ubuntu 20.04. It will not be needed by most users.\r\n\r\n\r\n\r\n## macOS\r\n\r\nTwo macOS executables are included in this release:\r\n\r\n- `shasta-macOS-11-0.8.0`, for macOS 11.0 (*Big Sur*). This will only work on Apple systems that use Intel `x86-64` processors. Systems with ARM processors, including Apple M1 processors, are not supported.\r\n\r\n- `shasta-macOS-10.15-0.8.0`, for macOS 10.15 (*Catalina*). It also runs on macOS 10.14 (*Mojave*). \r\n\r\n\r\n\r\n\r\n## Windows\r\n\r\nAs in previous releases, the Linux executable `shasta-Linux-0.8.0` can be used on Windows under *Windows Subsystem for Linux* (WSL).\r\n\r\n\r\n\r\n## ARM\r\n\r\nThe ARM executable, `shasta-Linux-ARM-0.8.0`, can be used on 64-bit ARM version 8 platforms. It is known to work at least in the following environments:\r\n\r\n- Graviton2 processors running 64-bit Ubuntu 20.04 on AWS instance types `r6g` and `m6g`.\r\n- Raspberry Pi Model 4 running 64-bit Ubuntu 20.04.\r\n\r\nIt will not work on macOS systems with ARM processors, including Apple M1 processors.\r\n\r\n\r\n# Compatibility\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.8.0 for postprocessing of an assembly done using a previous release. \r\n\r\n\r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 50990245,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/50990245",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/50990245",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bagashe",
          "type": "User"
        },
        "date_created": "2020-12-01T20:20:20Z",
        "date_published": "2020-12-01T22:58:35Z",
        "description": "# Additions and improvements since release 0.6.0\r\n\r\n- New command line options:\r\n    * `--Assembly.pruneLength` can be used to request a final pruning step on the assembly graph. This is useful with iterative assembly.\r\n\r\n- Various bug fixes, including the following which caused assembly failure or incorrect assembly results:\r\n    * #209: Incorrect CIGAR strings in single-stranded GFA output.\r\n    * #212: Bug in superbubble removal.\r\n    * #213: Assertion during detangling.\r\n    \r\n- Usability improvements in the http server.\r\n\r\n- Code cleanup and removal of obsolete code.\r\n\r\n- Platform changes (see below).\r\n\r\n\r\n\r\n# Platforms\r\n\r\n\r\n\r\n## Linux\r\n\r\n- The `shasta-Linux-0.7.0` executable will run on most current 64-bit Linux systems that use kernel version 3.2.0 or later. This includes all Ubuntu versions starting at 12.04 plus CentOS 7 and 8. It will not run on Linux systems with older kernels, including CentOS 6, which reached end of support on November 30, 2020.\r\n\r\n\r\n\r\n## macOS\r\n\r\nThe macOS executable, `shasta-macOS-0.7.0`, can be used both on macOS 10.14 (*Mojave*) and macOS 10.15 (*Catalina*). It will not run on macOS 11.0 (*Big Sur*).\r\n\r\n\r\n\r\n## Windows\r\n\r\nAs in previous releases, the Linux executable `shasta-Linux-0.7.0` can be used on Windows under *Windows Subsystem for Linux* (WSL).\r\n\r\n\r\n\r\n## ARM\r\n\r\nThe ARM executable, `shasta-Linux-ARM-0.7.0`, can be used on 64-bit ARM version 8 platforms. It is known to work at least in the following environments:\r\n\r\n- Graviton2 processors running 64-bit Ubuntu 20.04 on AWS instance types `r6g` and `m6g`.\r\n- Raspberry Pi Model 4 running 64-bit Ubuntu 20.04.\r\n\r\n\r\n\r\n# Compatibility\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.7.0 for post-processing of an assembly done using a previous release. ",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 34660291,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/34660291",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/34660291",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bagashe",
          "type": "User"
        },
        "date_created": "2020-10-05T21:28:22Z",
        "date_published": "2020-10-06T15:42:40Z",
        "description": "# Additions and improvements since release 0.5.0\r\n\r\n- Option `--ReadGraph.creationMethod 2` activates a more robust way to create the read graph. It uses the statistical distribution of various alignment metrics to select alignment criteria - see the documentation for more details. Use with one of the new sample configuration files (see below). It provides the following benefits:\r\n    * Less sensitive to choice of alignment metric thresholds, as long as those thresholds are chosen in a very permissive way.\r\n    * Improves assembly contiguity and accuracy.\r\n    * Less sensitive to the amount of available coverage. Works well down to 20X coverage using the sample configuration files provided, although assembly contiguity decreases with coverage.\r\n- Experimental iterative assembly functionality for partial haplotype separation (phased diploid assembly) and improved resolution of long repeats such as segmental duplications. It currently requires Ultra-Long (UL) reads and high coverage, 80X. Use with configuration file `Nanopore-UL-iterative-Sep2020.conf`.\r\n- Option `--MarkerGraph.minCoverage` can now be set to 0 for automatic selection of a reasonable value.\r\n- Option `--MarkerGraph.minCoveragePerStrand` can be used to specify a minimum required per-strand coverage (number of supporting reads) for a marker graph vertex to be generated. This can reduce assembly errors due to strand-dependent systematic errors.\r\n- Option `--ReadGraph.desiredCoverage` can be used to automatically increase the read length cutoff to reduce coverage to a desired value.\r\n- Option `--Assembly.detangleMethod 2` can be used to select a less conservative detangling method, which is also configurable with various new command line options.\r\n- Memory optimization results in significant reductions memory requirements. Peak virtual memory usage is now reported at the end of an assembly and in `AssemblySummary.html`.\r\n- Support for the ARM platform (see below under **Platforms** for more information).\r\n- New script `GenerateConfig.py` aids in creating a custom configuration file. \r\n- New script `GenerateFeedback.py` can be used to assess a completed assembly. When filing a Shasta issue for an unsatisfactory assembly, please include the output of this script plus `AssemblySummary.html`.\r\n- Documentation and benchmarks to permit running on machines with less than the ideal amount of memory.\r\n- New sample configuration files, all of which include `--ReadGraph.creationMethod 2`. Use with Shasta option `--config`.\r\n    * `Nanopore-Sep2020.conf` best currently known parameter set for standard nanopore reads generated by the Guppy base caller version 3.6.0 or later.\r\n    * `Nanopore-UL-Sep2020.conf` best currently known parameter set for Ultra-Long (UL) nanopore reads generated by the Guppy base caller version 3.6.0 or later. \r\n    * `Nanopore-OldGuppy-Sep2020.conf` best currently known parameter set for standard nanopore reads generated by the Guppy base caller versions 3.0 through 3.5.\r\n    * `Nanopore-UL-iterative-Sep2020.conf` experimental configuration file for iterative assembly using high coverage (80X) with Ultra-Long (UL) nanopore reads generated by the Guppy base caller version 3.6.0 or later. Provides partial haplotype separation (phased diploid assembly) and improved resolution of segmental duplications.\r\n- Usability improvements.\r\n- Improvements and additions in the HTTP server.\r\n- Documentation improvements and additions, including significant additions to the page on Shasta computational methods.\r\n\r\n\r\n\r\n# Platforms\r\n\r\n\r\n\r\n## Linux\r\n\r\n- The `shasta-Linux-0.6.0` executable will run on most current 64-bit Linux systems that use kernel version 3.2.0 or later. This includes all Ubuntu versions starting at 12.04 plus CentOS 7 and 8.\r\n\r\n- The `shasta-OldLinux-0.6.0` executable will run on most current 64-bit Linux systems that use kernel version 2.6.32 or later. This includes CentOS 6. CentOS 6 reaches end of support on November 30, 2020, and kernel versions older than 3.2.0 are aging and no longer widely used or supported. **Therefore, the `shasta-OldLinux` executable will not be included in future Shasta releases. Future Shasta releases will only run on systems that use Linux kernel 3.2.0 or later. They will not run on older systems, including CentOS 6.**\r\n\r\n\r\n\r\n## macOS\r\n\r\nIn contrast with previous Shasta releases, in this release a single macOS executable is provided, `shasta-macOS-0.6.0`. This executable can be used both on macOS 10.14 (*Mojave*) and macOS 10.15 (*Catalina*).\r\n\r\n\r\n\r\n## Windows\r\n\r\nAs in previous releases, the Linux executable `shasta-Linux-0.6.0` can be used on Windows under *Windows Subsystem for Linux* (WSL).\r\n\r\n\r\n\r\n## ARM\r\n\r\nThis Shasta release includes an ARM executable, `shasta-Linux-ARM-0.6.0`, which can be used on 64-bit ARM version 8 platforms. It is known to work at least in the following environments:\r\n\r\n- Graviton2 processors running 64-bit Ubuntu 20.04 on AWS instance types `r6g` and `m6g`.\r\n- Raspberry Pi Model 4 running 64-bit Ubuntu 20.04.\r\n\r\n\r\n\r\n# Compatibility\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.6.0 for postprocessing of an assembly done using a previous release. \r\n\r\n\r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 32189463,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/32189463",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/32189463",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bagashe",
          "type": "User"
        },
        "date_created": "2020-06-22T21:57:48Z",
        "date_published": "2020-06-23T15:09:40Z",
        "description": "This is a bug fix release which addresses [issue 157](https://github.com/chanzuckerberg/shasta/issues/157). This issue only affects the `shasta-OldLinux-0.5.0` executable and the Ubuntu 16.04 build. If you are using the `shasta-Linux-0.5.0` executable or one of the macOS executables you are not affected by this issue and you don't need to upgrade to this release.\r\n\r\nThis release is compatible with Shasta release 0.5.0. However, it is not compatible with previous Shasta releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.5.0 or 0.5.1 for post-processing of an assembly done using a previous release. \r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.5.1",
        "release_id": 27833340,
        "tag": "0.5.1",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/27833340",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/27833340",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bagashe",
          "type": "User"
        },
        "date_created": "2020-06-15T15:33:00Z",
        "date_published": "2020-06-15T17:46:49Z",
        "description": "Changes from release 0.4.0:\r\n* Performance improvements:\u200b\r\n  - A new method to compute marker alignments via SeqAn banded alignments is now the default and has improved performance and accuracy. To revert to the old marker alignment algorithm used in previous Shasta releases, use `--Align.alignMethod 0`.\r\n  - Alignments are now stored, in a highly compressed format, so they don't have to be recomputed when creating marker graph vertices using the disjoint set computation.\r\n  - Option `--Reads.noCache` can be used to bypass the Linux cache when loading reads. This can improve performance in some situations.\r\n  - Several other performance improvements, including upgrading to a new, faster release of the Spoa library. As a combined result of these and the above, a human genome assembly at coverage 60x now takes about 3 hours on a `x1.32xlarge` AWS instance.  \r\n* New functionality:\r\n  - Option `--Assembly.detangle` performs basic detangling in the assembly graph and can improve assembly contiguity.\r\n  - Option `--Assembly.writeReadsByAssembledSegment` can be used to write a csv file containing the reads and orientations that were used to assemble each segment.\r\n  - New options to generate the k-mers to be used as markers.\r\n  - Usability improvements in the Shasta http server, including improved display of a read and its markers. \u200b\r\n* New configuration files and Bayesian model for Oxford Nanopore reads created by the Guppy 3.6.0 base caller.\u200b\r\n* Fixed a long-standing bug in the computation of CIGAR strings in GFA output.\u200b\r\n* Platform changes:\r\n  - Shasta can now be built on Ubuntu 20.04, in addition to 16.04 and 18.04. As for previous releases, the static executable built on Ubuntu continues to run on most current 64-bit Linux platforms, has no dependencies, and requires no installation.\r\n  - Support for MacOS 10.15 Catalina (both build and run).\r\n  - GPU support was removed. Because of the above improvements in performance, the GPU code was no longer providing performance benefits.\r\n* Many documentation improvements which make it easier to locate the desired information.\r\n* Code reorganization and cleanup.\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.5.0 for postprocessing of an assembly done using a previous release. If you plan to build the code yourself and you have done so for previous Shasta releases, make sure to rerun `InstallPrerequisites-Ubuntu.sh` or `InstallPrerequisites-macOS.sh` in order to get updated prerequisites.\r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 27566468,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/27566468",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/27566468",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2020-01-10T16:35:03Z",
        "date_published": "2020-01-10T17:18:57Z",
        "description": "Changes from release 0.3.0:\r\n\r\n* Shasta can now read uncompressed Fastq files directly without the need to convert to Fasta first. Each read in a Fastq file must be on exactly 4 lines. \r\n\r\n* Restrictions on reading Fasta files have been removed. Input reads can now be on multiple lines. Reads containing no-calls are discarded.\r\n\r\n* GPU acceleration.\r\n\r\n* Sample configuration files for various kinds for Oxford Nanopore and Pacific Biosciences reads at coverage around 60x. These reflect best known parameter choices as of December 2019.  Default values of command line options remain mostly compatible with previous releases and are no longer recommended for any specific application.\r\n\r\n* New built-in Bayesian model for nanopore reads generated by the Guppy 3.0.5 base caller. Invoked via `--Assembly.consensusCaller Bayesian:guppy-3.0.5-a`. The default remains `--Assembly.consensusCaller Bayesian:guppy-2.3.5-a`.\r\n\r\n* New command line option `--MinHash.minBucketSize` provides more control of the MinHash/LowHash step. New output file `LowHashBucketHistogram.csv` can be used to select optimal values of `--MinHash.minBucketSize` and `--MinHash.maxBucketSize`.\r\n\r\n* Command line option `--MinHash.minHashIterationCount` can now be set to zero to adaptively select the number of MinHash iterations. Iteration stops when a specified number of alignment candidates per read\r\n(controlled by a new option `--MinHash.alignmentCandidatesPerRead`) is reached.\r\n\r\n* New command line option `--Align.sameChannelReadAlignment.suppressDeltaThreshold` can be used to suppress alignments between reads originating close in time from the same nanopore channel. This helps eliminate some assembly artifacts caused by some types of pathological reads.\r\n\r\n* New command line option `--Align.maxDrift` provides more control over the selection of marker alignments.\r\n\r\n* More options to select the k-mers to be used as markers (`--Kmers.suppressHighFrequencyMarkers`, `--Kmers.enrichmentThreshold`, `--Kmers.file`).\r\n\r\n* More flexible build system allows building Shasta as static or dynamic executable, static library (callable from C++), shared library (callable from C++ and Python), or [AppImage](https://appimage.org/). The static executable and the AppImage require no installation and run on a variety of Linux platforms.\r\n\r\n* Many usability and documentation improvements.\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.4.0 for postprocessing of an assembly done using a previous release.",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 22749555,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/22749555",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/22749555",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2019-09-12T21:19:36Z",
        "date_published": "2019-09-12T21:44:05Z",
        "description": "Changes from release 0.2.0:\r\n\r\n* Bash completion feature to simplify typing of Shasta commands - see the documentation under _About/Command line options/Saving some typing_.\r\n\r\n* Improvements to documentation and some error messages.\r\n\r\n* A new output file `ReadSummary.csv` summarizing various assembly metrics for each read used in the assembly.\r\n\r\n* A new option to suppress the usage of high frequency k-mers as markers. The effect of this option on assembly results was not tested extensively. This option in not turned on by default.\r\n\r\n* Other minor usability improvements.\r\n\r\n* Some bugs were fixed, including the following. None of the bug fixes affected assembly results.\r\n\r\n    * Issue #52: the Linux executable of release 0.2.0, `shasta-Linux-0.2.0`, had a performance problem that was particularly severe on machines with many virtual processors and was causing assemblies to slow down by as much as a factor of 2.\r\n\r\n    * Issues #49, #50: the `shasta-Linux-0.2.0` executable did not work on some older Linux kernels. Release 0.3.0 includes a new executable `shasta-OldLinux-0.3.0` which works on Linux kernels as old as 2.6, such as those used by `CentOS 6`.\r\n    * Issue #49: some binary files were always written on disk regardless of `--memoryMode` and `--memoryBacking` settings.\r\n\r\n\r\nThis release is not compatible with previous releases. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.3.0 for postprocessing of an assembly done using a previous release.\r\n\r\n\r\n\r\n\r\n ",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.3.0",
        "name": "Shasta Release 0.3.0",
        "release_id": 19957540,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/19957540",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/19957540",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2019-08-20T16:33:55Z",
        "date_published": "2019-08-20T17:08:45Z",
        "description": "**Note added 09/12/2019: The Linux version of Shasta Release 0.2.0 has a performance bug that could slow down assemblies by as much as a factor of 2. Please discontinue usage of Release 0.2.0 for large assemblies.**\r\n\r\nChanges from release 0.1.0:\r\n\r\n* The only algorithmic change is the addition of the Bayesian model for repeat counts, which results in a significant decrease of erroneous indels. This is the new default. To recover 0.1.0 behavior, use command line option `--Assembly.consensusCaller Modal`. More information is available in the documentation by navigating to `About` / `Computational methods`, see the section entitled _Assembling repeat counts_.\r\n\r\n* Http server functionality is now available directly via the Shasta executable. It allows interactive exploration of assembly results and data structures after an assembly is complete. To use it, run the assembly with `--memoryMode filesystem`, then run the Shasta assembler with `--command explore`. More information is available in the documentation by navigating to `How to` / `Explore assembly results`.\r\n\r\n* Command line option `--threads` was added to allow specifying the number of threads to be used. If omitted, Shasta uses a number of threads equal to the number of virtual processors, the same behavior as in release 0.1.0.\r\n\r\n* More informative output files in the assembly directory. See the documentation by navigating to `How to` / `Run an assembly` in the section entitled _Output files_.\r\n\r\n* Functionality to run Shasta under Docker was added. More information is available in the documentation by navigating to `How to` / `Run an assembly in Docker`.\r\n\r\n* Many error messages were improved and are now more informative and easier to interpret.\r\n\r\n* Many additions and improvements in the documentation.\r\n\r\n* Some obsolete code was removed. Some code refactoring/restructuring for readability/maintainability.\r\n\r\nThis release is not compatible with release 0.1.0. There were incompatible changes in some command line option names, the binary formats used, and the Python API. You cannot use release 0.2.0 for postprocessing of an assembly done using release 0.1.0.\r\n",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.2.0",
        "name": "Shasta Release 0.2.0",
        "release_id": 19412694,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/19412694",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/19412694",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "paoloczi",
          "type": "User"
        },
        "date_created": "2019-04-30T17:43:01Z",
        "date_published": "2019-04-30T18:25:54Z",
        "description": "This initial release of the Shasta assembler is functional but the documentation is incomplete in several areas, and lacks an evaluation of assembly accuracy.",
        "html_url": "https://github.com/chanzuckerberg/shasta/releases/tag/0.1.0",
        "name": "Shasta Release 0.1.0",
        "release_id": 17073741,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/chanzuckerberg/shasta/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chanzuckerberg/shasta/releases/17073741",
        "value": "https://api.github.com/repos/chanzuckerberg/shasta/releases/17073741",
        "zipball_url": "https://api.github.com/repos/chanzuckerberg/shasta/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:38:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 271
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "This repository is no longer in use",
        "parent_header": [
          "Shasta long read assembler"
        ],
        "type": "Text_excerpt",
        "value": "**The project has moved to\n[github.com/paoloshasta/shasta](https://github.com/paoloshasta/shasta).**\n\nShasta development continues in the\n[new repository](https://github.com/paoloshasta/shasta).\n\nNew Shasta releases will appear in the\n[Releases](https://github.com/paoloshasta/shasta/releases) page of the new repository.\n\nOld Shasta releases (up to 0.10.0) continue to be available in the\n[Releases](https://github.com/chanzuckerberg/shasta/releases) page of this repository.\n\nFor questions, issues, and discussion on any version of Shasta, please use the\n[Issues page](https://github.com/paoloshasta/shasta/issues)\nof the new repository.\n\n[Here](OLD-README.md)\nis the old README file for this repository. It is now obsolete.\n"
      },
      "source": "https://raw.githubusercontent.com/chanzuckerberg/shasta/master/README.md",
      "technique": "header_analysis"
    }
  ]
}