{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**If you use prPred, please cite:**",
        "parent_header": [
          "prPred"
        ],
        "type": "Text_excerpt",
        "value": "    (1) Wang Y, Wang P, Guo Y, et al. prPred: A Predictor to Identify Plant Resistance Proteins by Incorporating k-Spaced Amino Acid (Group) Pairs[J]. Frontiers in bioengineering and biotechnology, 2021, 8: 1593.\n    (2) Yansu Wang, Murong Zhou, Quan Zou, Lei Xu. Machine learning for phytopathology: from the molecular scale towards the network scale. Briefings in Bioinformatics. 2021, Doi: 10.1093/bib/bbab037\n    (3) Yansu Wang, Lei Xu, Quan Zou, Chen Lin. prPred-DRLF: plant R protein predictor using deep representation learning features. Proteomics. 2021. DOI: 10.1002/pmic.202100161\n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Wangys-prog/prPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-28T13:54:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-13T01:42:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Prediction plant resistance proteins (R proteins)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8470465623653439,
      "result": {
        "original_header": "prPred",
        "type": "Text_excerpt",
        "value": "prPred is a tool to identify the plant resistance proteins (R proteins)  \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8451165704828844,
      "result": {
        "original_header": "For split_fasta.py",
        "type": "Text_excerpt",
        "value": "**Analyze your sequences such as 20 sequences**  \n**Before using the script,please add prPred into into environment variables**\n**split your large fasta file into small fasta file with such as 20 sequence**\n**if you fasta has total 100 sequences,you can split you fasta into 5 small fasta files**    \n     \n     seqkit split your.fasta -p 5 \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Wangys-prog/prPred/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Wangys-prog/prPred/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Wangys-prog/prPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " Python3.7"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**prPred**",
        "parent_header": [
          "prPred",
          "**Installation**"
        ],
        "type": "Text_excerpt",
        "value": "    git clone git@github.com:Wangys-prog/prPred.git  \n\n**Add prPred into into environment variables**\n\n**(./prPred/dist/prPred)**\n\n    export PATH=$PATH:/xxxx/xxxx/xxxx/prPred/dist/prPred  \n\n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999826978013,
      "result": {
        "original_header": "prPred",
        "type": "Text_excerpt",
        "value": "prPred is an open-source Python-based toolkit, which operates depending on the Python environment (Python Version 3.0 or above). Before running prPred, user should make sure all the following packages are installed in their Python environment: subprocess, datetime, os, shutil, pandas,numpy, Biopython,sklearn,optparse \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9698617451619324,
      "result": {
        "original_header": "For split_fasta.py",
        "type": "Text_excerpt",
        "value": "     python split_fasta.py -i your split_fasta folder \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994905737076758,
      "result": {
        "original_header": "For windows 10 or later",
        "type": "Text_excerpt",
        "value": "**Download Ubuntu xx.x LTS from Microsoft Store** \n    cd ../../\n    cd mnt/x/xxxx/xxxx/\n    git clone git@github.com:Wangys-prog/prPred.git\n    cd mnt/x/xxxx/xxxx/prPred/  \n \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8970255800345311,
      "result": {
        "original_header": "For split_fasta.py",
        "type": "Text_excerpt",
        "value": "**then using split_fasta2.py to predict R protein sequences**  \n     python split_fasta.py -i your split_fasta folder \n    python merge_result.py -i split_fasta_result -o merged_result.csv\n  \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Wangys-prog/prPred/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "prPred"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Wangys-prog"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 5335588,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 2243593,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 9601,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. **HMMER**",
        "parent_header": [
          "prPred",
          "**Prerequisites**"
        ],
        "type": "Text_excerpt",
        "value": "   To obtain HMMER releases, please visit http://hmmer.org/. \n   We also provide  HMMER zipped folders for download in prPred\n   \n   \n   <**prPred need to make sure that the HMMER is in the environment variable**>\n   \n   \n   #### **Install HMMER in Ubuntu**\n    sudo apt-get install hmmer\n   \n   #### **Another way to install it**\n   **Download and build the source code release(optional)**\n   \n    wget http://eddylab.org/software/hmmer/hmmer.tar.gz\n    tar zxf hmmer.tar.gz\n    cd hmmer-3.3.2\n    ./configure --prefix /your/install/path\n    make\n    make check\n    make install  \n \n   #### **prPred need add HMMER to the environment variable (/usr/bin/;/usr/local/bin/)**\n    vim ~/.bashrc\n    i\n    export PATH=$PATH:/your/install/path\n    :wq!\n    source ~/.bashrc  \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. **phobius**",
        "parent_header": [
          "prPred",
          "**Prerequisites**"
        ],
        "type": "Text_excerpt",
        "value": "   Phobius:prediction of transmembrane topology and signal peptides from the amino acid sequence of a protein.\n   To obtain phobius releases, please visit https://phobius.sbc.su.se/data.html.  \n   \n   installation procedure  https://www.jianshu.com/p/32176552cb5c\n   \n   <**The software will be shipped immediately in the form of an attachment to the e-mail address you specify below**>\n      \n    tar -xzvf phobius101_linux.tar.gz\n    cd /xxxx/xxxx/xxxx/tmp/tmpbKioAY/phobius\n   \n    '''\n    Error - could not read provided fasta sequences\n    Modify line 24 in phobius.pl\n    my $DECODEANHMM = \"$PHOBIUS_DIR/decodeanhmm.64bit\"\n    '''\n   \n   **Add phobius into environment variables (~/.bashrc)**\n      \n    export PATH=$PATH:/xxxx/xxxx/xxxxx/tmp/tmpbKioAY/phobius  \n  \n  \n   "
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. **PFAMDB**",
        "parent_header": [
          "prPred",
          "**Prerequisites**"
        ],
        "type": "Text_excerpt",
        "value": "   To obtain Pfam database,please download from  ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz\n   \n    mkdir Pfam  \n    cd Pfam  \n    wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz  \n    gunzip Pfam-A.hmm.gz   \n    hmmpress Pfam-A.hmm  \n   \n    '''\n    After hmmpress, we will get four files: Pfam-A.hmm.h3f\uff0cPfam-A.hmm.h3i\uff0cPfam-A.hmm.h3m\uff0cPfam-A.hmm.h3p\n    '''\n   \n   **Add PFAMDB (Pfam-A.hmm.h3f\uff0cPfam-A.hmm.h3i\uff0cPfam-A.hmm.h3m\uff0cPfam-A.hmm.h3p) into environment variables** \n    \n    vim ~/.bashrc**\n    export PFAMDB=/xxxx/xxxx/xxxx/Pfam  \n   \n   \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. **iFeature**",
        "parent_header": [
          "prPred",
          "**Prerequisites**"
        ],
        "type": "Text_excerpt",
        "value": "    \n    To obtain iFeature, please download from https://github.com/Superzchen/iFeature/.\n    \n   **Add iFeature into environment variables (~/.bashrc)** \n   \n   export PATH=$PATH:/xxxx/xxxx/xxxxx/iFeature\n   \n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:32:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "usage (Python Version 3.0 or above)",
        "parent_header": [
          "prPred",
          "Input parameters"
        ],
        "type": "Text_excerpt",
        "value": "    prPred -i /xxxx/xxxx/test/test.fasta -o result  \n**or**\n**Using absolute path to invoke prPred.py (/xxxx/xxxx/prPred/prPred.py)** ,this command run using python3.7\n\n    python 3.7 xxxx/xxxx/prPred/prPred.py -i /xxxx/xxxx/test/test.fasta -o /xxxx/xxxxx/result  \n      "
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "**If you use prPred, please cite:**",
        "parent_header": [
          "prPred"
        ],
        "type": "Text_excerpt",
        "value": "    (1) Wang Y, Wang P, Guo Y, et al. prPred: A Predictor to Identify Plant Resistance Proteins by Incorporating k-Spaced Amino Acid (Group) Pairs[J]. Frontiers in bioengineering and biotechnology, 2021, 8: 1593.\n    (2) Yansu Wang, Murong Zhou, Quan Zou, Lei Xu. Machine learning for phytopathology: from the molecular scale towards the network scale. Briefings in Bioinformatics. 2021, Doi: 10.1093/bib/bbab037\n    (3) Yansu Wang, Lei Xu, Quan Zou, Chen Lin. prPred-DRLF: plant R protein predictor using deep representation learning features. Proteomics. 2021. DOI: 10.1002/pmic.202100161\n"
      },
      "source": "https://raw.githubusercontent.com/Wangys-prog/prPred/master/README.md",
      "technique": "header_analysis"
    }
  ]
}