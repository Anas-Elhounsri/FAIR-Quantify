{
  "application_domain": [
    {
      "confidence": 21.03,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BackofenLab/CRISPRidentify"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-26T10:53:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-12T02:42:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9869723897474013,
      "result": {
        "original_header": "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
        "type": "Text_excerpt",
        "value": "CRISPRidentify is a tool to search for CRISPR arrays which utilises \nmachine learning approach for distinguishing false candidates from true CRISPRS.\nCRISPRidentify, performs three steps: detection, feature extraction and \nclassification based on manually curated sets of positive and negative examples of CRISPR arrays.\nThe identified CRISPR arrays are then reported to the user accompanied by detailed annotation.\nWe demonstrate that our approach identifies not only previously detected CRISPR arrays,\nbut also CRISPR array candidates not detected by other tools. Compared to other methods,\nour tool has a drastically reduced false positive rate. In contrast to the existing tools, CRISPRidentify\napproach not only provides the user with the basic statistics on the identified CRISPR arrays\nbut also produces a certainty score as an intuitive measure of the likelihood that a given\ngenomic region is a CRISPR array.\n \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9058717895137274,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "The output folder for each input entries consist of the following files: \n* Bona-Fide_Candidates. The file will contain the representation of the found CRISPR arrays complemented with the support information. \nFor each candidate the output will contain the values for extracted features as well as the certainty score of the used classifier.\nOn top of that in the support information you can find the orientation for each array, leader and downstream regions, cas genes and IS-elements (if the corresponding flags were selected). \n* Alternative_Candidates. In this file we demonstrate alternative representations of bona-fide arrays. These alternative representations also got a high score from the classifier but this score was lower than the corresponding score of the bona-fide representation.\nAlternative representation of a CRISPR array usually corresponds to a slightly longer/shorter repeat sequence but represents the same genomic region. \nThe candidates with the certainty scores between 0.4 and 0.75 are stored in Possible_Candidates and Possible_Discarded_Candidates \n\nOn top of that the algorithm builds a csv summary.  \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9008661059691837,
      "result": {
        "original_header": "Metagenomic analysis",
        "type": "Text_excerpt",
        "value": "CRISPRidentify is suitable for easy and powerful metagenomic analysis\nWhen `--file` or `--input_folder` flag is used the pipeline with automatically generate two complete summaries \n:  \n\nOn top of that the user might use the flag: \nThis option with create three fasta files:\n1. All the array sequences with their origins in the header\n2. All the repeat sequences with their origins and locations in the arrays\n3. All the spacer sequences with their origins and locations in the arrays\n \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/BackofenLab/CRISPRidentify/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BackofenLab/CRISPRidentify/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BackofenLab/CRISPRidentify"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRISPRidentify: Identification of CRISPR arrays using machine learning approach"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional preparations",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "CRISPRidentify utilizes CRISPRcasIdentifier for the detection of the cas genes.\nIf you are interested in cas gene result please install CRISPRcasIdentifier.\n\nPlease make sure that after you downloaded CRISPRcasIdentifier its relative path is:\n\n```\ntools/CRISPRcasIdentifier/CRISPRcasIdentifier/CRISPRcasIdentifier.py\n```\n\nYou can find the CRISPRcasIdentifier tool and its description [here](https://github.com/BackofenLab/CRISPRcasIdentifier)\n\nYou need to make two steps:\n\nFirstly, you need to download the CRISPRcasIdentifier tool:\n```\nwget https://github.com/BackofenLab/CRISPRcasIdentifier/archive/v1.1.0.tar.gz\ntar -xzf v1.1.0.tar.gz\n```\nSecondly, you need to download the models:\n\nDue to GitHub's file size constraints, authors made their HMM and ML models available in Google Drive. You can download them [here](https://drive.google.com/file/d/1YbTxkn9KuJP2D7U1-6kL1Yimu_4RqSl1/view?usp=sharing) and [here](https://drive.google.com/file/d/1Nc5o6QVB6QxMxpQjmLQcbwQwkRLk-thM/view?usp=sharing). Save both tar.gz files inside CRISPRcasIdentifier's directory.\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9503876712694507,
      "result": {
        "original_header": "Improving CRISPRidentify",
        "type": "Text_excerpt",
        "value": "We are constantly working on the improvements of CRISPRidentify. If you found a bug or incorrect/missing CRISPR array representation please submit via github issue interface. \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8356668049458257,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "* Summary.csv \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/BackofenLab/CRISPRidentify/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2023 Bioinformatics Lab - Department of Computer Science - University Freiburg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CRISPRidentify"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "BackofenLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 365280,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Alexander-Mitrofanov",
          "type": "User"
        },
        "date_created": "2023-07-12T13:20:59Z",
        "date_published": "2023-07-12T13:21:41Z",
        "html_url": "https://github.com/BackofenLab/CRISPRidentify/releases/tag/v1.2.1",
        "release_id": 111950346,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/111950346",
        "value": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/111950346",
        "zipball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Alexander-Mitrofanov",
          "type": "User"
        },
        "date_created": "2023-07-03T14:03:33Z",
        "date_published": "2023-07-03T14:08:33Z",
        "html_url": "https://github.com/BackofenLab/CRISPRidentify/releases/tag/v1.2.0",
        "release_id": 110873312,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/110873312",
        "value": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/110873312",
        "zipball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "Alexander-Mitrofanov",
          "type": "User"
        },
        "date_created": "2021-06-28T11:30:46Z",
        "date_published": "2021-06-28T11:33:04Z",
        "description": "Binaries were replaced with the conda libraries\r\nCRISPRidentify now support better metagenomic analysis\r\nFixed bugs with --file input",
        "html_url": "https://github.com/BackofenLab/CRISPRidentify/releases/tag/v1.1.0",
        "release_id": 45350344,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/45350344",
        "value": "https://api.github.com/repos/BackofenLab/CRISPRidentify/releases/45350344",
        "zipball_url": "https://api.github.com/repos/BackofenLab/CRISPRidentify/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "First you need to install Miniconda\nThen create an environment and install the required libraries in it\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running CRISPRidentify",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach"
        ],
        "type": "Text_excerpt",
        "value": "We prepared the test folder which can be used for the test run.\n\nExample of running CRISPRidentify over a folder of files:\n\n```\npython CRISPRidentify.py --input_folder TestInput\n```\n\nExample of running CRISPRidentify over a single multiline fasta input:\n```\npython CRISPRidentify.py --file TestInputMultiline/MultilineFasta.fasta\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Flags",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify"
        ],
        "type": "Text_excerpt",
        "value": "You can see the help by using the `-h` option\n\n```\n\npython CRISPRidentify.py -h\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mandatory flags",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags"
        ],
        "type": "Text_excerpt",
        "value": "The only mandatory parameter which has to be specified is the input.\nOur approach has two options to handle the input. User has to specify either the path to the folder with the input fasta files\nor the full path to a single fasta input file.\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input as a folder of fasta files",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Mandatory flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--input_folder <path_to_the_folder>`\n\nSpecifies the mode where a folder with fasta files which will be used as the input for CRISPRidentify. The CRISPR array search will be\nthen conducted separately for each file in the corresponding input folder.\n\n```\npython CRISPRidentify.py --input_folder TestInput\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input as a single file",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Mandatory flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--file <path_to_the_file>`\n\nSpecifies the mode where a singe file is used as the input for the algorithm. The file might contain a single entry or multiple entries. \nThe CRISPR array search will be done for each entry independently.\n\nFor example:\n\n```\npython CRISPRidentify.py --file InputFile\n```"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input as a folder of multiline fasta files",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Mandatory flags"
        ],
        "type": "Text_excerpt",
        "value": "* `-- input_folder_multifasta <path_to_the_folder>`\n\nSpecifies the mode where a folder with fasta files which will be used as the input for CRISPRidentify. The CRISPR array search will be\nthen conducted separately for each file in the corresponding input folder. The difference between this mode and the previous one is that\nin this mode the input files can contain multiple entries.\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder_multifasta TestFolderMultiline\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--result_folder [paht_to_the_result_folder]`\n\nSpecifies the path and name of the folder with the output results. If not specified the results will appear in \"Results\" folder\n\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --result_folder Results\n```\n\n* `--pickle_report [folder_to_put_pickle_results]`\n\nSpecifies if found CRISPR arrays should be stored also as python objects. Turned off by default.\n\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --pickle_report PickleReportFolder\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Classification parameters",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--model [8/9/10/ALL]`\n\n\nTakes values: 8, 9, 10, ALL and specifies the classification model. The default value is `ALL`.\nIf the value `ALL` is picked for the flag the certainty score will be calculated as average between all three available models.\n\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --model 8\n```\n\n\n```\npython CRISPRidentify.py --input_folder TestInput --model ALL\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Performance speed",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--fast_run [True/False]`\n\nSpecifies if the repeat set enhancement step should be skipped which drastically speeds up the process but might decrease the recall quality.\nOnly matching pairs found with Vmatch will be used as repeat candidates. Automatically turns off filter approximation and start_end approximation (see enhancement_max_min and enhancement_start_end)\nTurned off by default.\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --fast_run True\n```\n\n* `--enhancement_max_min [True/False]`\n\nSpecifies if the filter approximation based on the max. and min. elements should be built\nThe default value is True \n\n* `--enhancement_start_end [True/False]`\n\nSpecifies if the start/end omitting of the repeat candidates should be done to enrich the candidate set.\nThe default value is True\n\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --enhancement_max_min True --enhancement_start_end False\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Candidate filtering criteria",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "\n* `--min_len_rep  [integer]`\n\nSpecifies the minimum length of repeats in a CRISPR array. The default value: 21\n\n* `--max_len_rep [integer]`\n\nSpecifies the maximum length of repeats in a CRISPR array. The default value: 55\n\n* `--min_len_spacer [integer]`\n\nSpecifies the minimum average length of spacers in a CRISPR array. The default value: 18\n\n* `--max_len_spacer [integer]`\n\nSpecifies the maximum average length of spacers in a CRISPR array. The default value: 78\n\n* `--min_repeats [integer]`\n\nSpecifies the minimum number of repeats in a CRISPR array. The default value: 3\n\n\nFor example:\n\n```\npython CRISPRidentify.py --input_folder TestInput --min_len_rep 25 --max_len_rep 50 --min_repeats 2 \n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Candidate Enhancement",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--degenerated' [True/False]`\n\nAllows search for degenerated repeat candidates on both ends of the CRISPR array candidate. The default value: True\n\n* `--margin_degenerated [int]`\n\nSpecifies the maximum length difference between a new spacer sequence (obtained with the search of degenerated repeats) and the average value of spacer length in the array. The default value: 30\n\n* `--max_edit_distance_enhanced [int]`\n\nSpecifies the number of editing operations for candidate enhancement. The default value: 6\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional computations",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Running CRISPRidentify",
          "Flags",
          "Optional flags"
        ],
        "type": "Text_excerpt",
        "value": "* `--strand[True/False]`\n\nSpecifies if the array orientation should be predicted. The default value is True.\n\n* `--cas [True/False]`\n\nSpecifies if cas genes should be predicted. The default value is False.\n\n* `--is_element [True/False]`\n\nSpecifies if IS-Elements should be predicted. The default value is False.\n\n\n```\npython CRISPRidentify.py --input_folder TestInput --cas True --is_element True \n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:24:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 23
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach"
        ],
        "type": "Text_excerpt",
        "value": "These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. \n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Creating a Miniconda environment",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "First we install Miniconda for python 3.\nMiniconda can be downloaded from here:\n\nhttps://docs.conda.io/en/latest/miniconda.html \n\nThen Miniconda should be installed. On a linux machine the command is similar to this one: \n\n```\nbash Miniconda3-latest-Linux-x86_64.sh\n```\n\nThen we create an environment. The necessary setup is provided in the \"environment.yml\" file.\n\nIn order to install the corresponding environment one can execute the following command.\n\n```\nconda env create -f environment.yml\n```\n\nWe recommend to install mamba package manager which is a faster alternative to conda.\n\n```\nconda install -c conda-forge mamba\n```\n\nThen we can create the environment using mamba.\n```\nmamba env create -f environment.yml\n```\n\n<sub><sub>We want to acknowledge Richard St\u00f6ckl @richardstoeckl for his contribution to the environment.yml file.</sub></sub>\n\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Activation of the environment",
        "parent_header": [
          "CRISPRidentify: Identification of CRISPR arrays using machine learning approach",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "Before running CRISPRidentify one need to activate the corresponding environment.\n\n```\nconda activate crispr_identify_env\n```\n"
      },
      "source": "https://raw.githubusercontent.com/BackofenLab/CRISPRidentify/master/README.md",
      "technique": "header_analysis"
    }
  ]
}