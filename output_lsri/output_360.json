{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/igbb-popescu-lab/NetSeekR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-06-29T22:16:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-12-06T20:53:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A networks analysis pipeline for RNASeq time series data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9278228138958858,
      "result": {
        "original_header": "NetSeekR",
        "type": "Text_excerpt",
        "value": "A networks analysis pipeline for RNASeq time series data. \nNetSeekR is a network analysis R package that includes the capacity to analyze time series of RNASeq data, perform correlation and regulatory network inferences and use network analysis methods to summarize the results of a comparative genomics study.  \nAuthors: Himangi Srivastava, Drew Ferrell, and George V. Popescu. \n3. Load packages and source functions for NetSeekR.   \n * **note** Below is a template configuration file which needs to be edited per usage.\n \n \n | analysis_type\t | custom tag | \n | --------------  |-------------| \n | design_matrix\t | path to experimental design matrix | \n | edger_adjustment_method\t | edgeR: p-value adjustment method | \n | edger_lfc\t | limma: minimum log2-fold-change that is considered scientifically meaningful | \n | edger_method\t | NOT USED | \n | feature_counts_path\t | path to feature counts software | \n | kallisto\t | Boolean value for Kallisto execution decision | \n | kallisto_bias\t | sequence based bias correction | \n | kallisto_bootstrap_samples\t | bootstrap sample number | \n | kallisto_chromosomes\t | tab separated file with chromosome names and lengths | \n | kallisto_fasta_files\t | path to genome annotation file | \n | kallisto_fastq_files\t | reads to quantify | \n | kallisto_fr_stranded\t | strand specific reads, first read forward | \n | kallisto_fragment_length\t | estimated average fragment length | \n | kallisto_fusion\t | search for fusions for Pizzly | \n | kallisto_genomebam\t | project pseudoalignments to genome sorted BAM file | \n | kallisto_gtf\t | GTF file for transcriptome information (required for --genomebam) | \n | kallisto_index\t | location to write genome index from Kallisto (required for Kallisto alignment) | \n | kallisto_kmer_size\t | k-mer (odd) length (defaut: 31, max value: 31 | \n | kallisto_make_unique\t | replace repeated target names with unique names | \n | kallisto_output_dir\t | directory to write quantification output to | \n | kallisto_path\t | path to Kallisto software | \n | kallisto_plaintext\t | output plaintext instead of HDF5 | \n | kallisto_pseudobam\t | save pseudoalignments to transcriptome to BAM file | \n | kallisto_rf_stranded\t | strand specific reads, first read reverse | \n | kallisto_sd\t | estimated standard deviation of fragment length (default: -l, -s values are estimated from paired end data, but are required when using --single) | \n | kallisto_seed\t | seed for the bootstrap sampling (default: 42) | \n | kallisto_single\t | quantify single-end reads | \n | kallisto_single_overhang\t | include reads where unobserved rest of fragment is predicted to lie outside a transcript | \n | kallisto_threads\t | number of threads to use (default: 1) | \n | sample_comparisons_file\t | path to the sample comparison file for differential gene expression testing | \n | sample_covariates\t | experimental design matrix column names to be used as covariates with Sleuth | \n | significance_cutoff\t | a cutoff value for determining significance | \n | sleuth_gene_mode\t | Boolean value for Sleuth gene mode execution decision | \n | sleuth_transcript_mode\t | Boolean value for Sleuth transcript mode execution decision | \n | star\t | Boolean value for STAR execution decision | \n | star_genomeDir\t | path to the directory where the genome indices are stored | \n | star_genomeFastaFiles\t | path to a FASTA file with the genome reference sequences | \n | star_path\t | path to STAR software | \n | star_readFilesIn\t | path to the folder containing the sequences to be mapped | \n | star_runThreadN\t | number of threads to be used for genome generation, it has to be set to the number of available cores on the server node | \n | star_sjdbGTFfile\t | path to the file with annotated transcripts in the standard GTF format | \n | star_sjdbOverhang\t | length of the genomic sequence around the annotated junction to be used in constructing the splice junctions database> |  \n5. Align batches of reads. \n * **note** An edited sample comparison matrix needs to be supplied for differential gene expression testing. An example of an edited sample comparison matrix file is below. A sample comparison matrix does not need headers, only sample identifiers. Which samples to compare in differential testing should be written row-wise. \n \n|Example | | | | | |\n| --------------  |-------------| --------------  |-------------| --------------  |-------------|\n|SL209924    |SL209925    |SL209926    |SL209921    |SL209922    |SL209923|\n|SL209927    |SL209928    |SL209937    |SL209921    |SL209922    |SL209923|\n|SL209938    |SL209939    |SL209940    |SL209921    |SL209922    |SL209923|\n|SL209944    |SL209945    |SL209946    |SL209941    |SL209942    |SL209943|\n|SL209947    |SL209948    |SL209949    |SL209941    |SL209942    |SL209943|\n|SL209950    |SL209951    |SL209952    |SL209941    |SL209942    |SL209943| \n \n`implement_differential_gene_expression(alignment_results)`\n \n 7. Network analysis is then conducted assuming sets of differentially expressed genes are available.\n \n `implement_network_analysis(alignment_tool = 'star', alignment_results = alignment_results)`\n \n The network analysis function above will produce an image of the network. The image can be saved from the \u2018Export\u2019 tab at the top of the window.\n \n"
      },
      "source": "https://raw.githubusercontent.com/igbb-popescu-lab/NetSeekR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/igbb-popescu-lab/NetSeekR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/igbb-popescu-lab/NetSeekR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "igbb-popescu-lab/NetSeekR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetSeekR"
      },
      "source": "https://raw.githubusercontent.com/igbb-popescu-lab/NetSeekR/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9227547604971058,
      "result": {
        "original_header": "NetSeekR",
        "type": "Text_excerpt",
        "value": "The NetSeekR code requires specific versions for packages that are used.  \n| Package        | Version     |\n| -------------- |-------------| \n| pacman         |0.5.1|\n| BiocManager    |1.30.10|\n| magrittr       |1.5|\n| readr          |1.3.1|\n| purrr          |0.4.2|\n| stringr        |0.3.3|\n| ggplot2        |1.4.0|\n| devtools       |3.2.1|\n| flashClust     |2.2.1|\n| tidyr          |1.01-2|\n| networkD3      |1.0.0|\n| igraph         |0.4|\n| limma          |1.2.4.2|\n| edgeR          |3.42.0|\n| topGO          |2.37.0|\n| WGCNA          |1.68|\n| biomaRt        |2.42.0|\n| Rgraphviz      |2.30.0|\n| dplyr          |0.8.3| \nBelow are the steps to run NetSeekR. \n1. Set the working directory to the NetSeekR path.  \n` setwd(<<path/to/NetSeekR>>)` \n`unzip('NetSeekR.zip')`   \n3. Load packages and source functions for NetSeekR.   \n`source('scripts/NetSeekR.R')`   \n`alignment_results <- implement_alignment(arguments_file = <<path/to/configuration file>>)` \n"
      },
      "source": "https://raw.githubusercontent.com/igbb-popescu-lab/NetSeekR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.831853872032886,
      "result": {
        "original_header": "NetSeekR",
        "type": "Text_excerpt",
        "value": "2. Unzip the NetSeekR file.   \n`unzip('NetSeekR.zip')`   \n"
      },
      "source": "https://raw.githubusercontent.com/igbb-popescu-lab/NetSeekR/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/igbb-popescu-lab/NetSeekR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NetSeekR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "igbb-popescu-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 114101,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/igbb-popescu-lab/NetSeekR/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:38:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ]
}