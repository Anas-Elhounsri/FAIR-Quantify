{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "NanoCLUST"
        ],
        "type": "Text_excerpt",
        "value": "Rodr\u00edguez-P\u00e9rez H, Ciuffreda L, Flores C. NanoCLUST: a species-level analysis of 16S rRNA nanopore sequencing data. Bioinformatics. 2021;37(11):1600-1601. doi:https://doi.org/10.1093/bioinformatics/btaa900\n\nThis work was supported by Instituto de Salud Carlos III [PI14/00844, PI17/00610, and FI18/00230] and co-financed by the European Regional Development Funds, \u201cA way of making Europe\u201d from the European Union; Ministerio de Ciencia e Innovaci\u00f3n [RTC-2017-6471-1, AEI/FEDER, UE]; Cabildo Insular de Tenerife [CGIEU0000219140]; Fundaci\u00f3n Canaria Instituto de Investigaci\u00f3n Sanitaria de Canarias [PIFUN48/18]; and by the agreement with Instituto Tecnol\u00f3gico y de Energ\u00edas Renovables (ITER) to strengthen scientific and technological education, training, research, development and innovation in Genomics, Personalized Medicine and Biotechnology [OA17/008]. \n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team on [Slack](https://nf-co.re/join/slack). The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/genomicsITER/NanoCLUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing information\nTo contribute to the NanoCLUST repository using your GitHub accout, please, follow this steps:\n\n1. Create or update content within YOUR forked repository. Use your own folders and sub-folders corresponding to your contribution:\n2. Commit all your changes.\n3. To merge your contributions and changes into the NanoCLUST repository, please, open a Pull Request from your own forked repository.\n4. The request will be reviewed and merged by the NanoCLUST developers.\n\nRemember: all changes must be made from your repository fork.\n\n5. Finally, click on the green \"Pull Request\" button.\n\nWe will verify the contribution and merge your changes into NanoCLUST.\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-02T22:00:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T07:49:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoCLUST is an analysis pipeline for UMAP-based classification of amplicon-based full-length 16S rRNA nanopore reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "NanoCLUST"
        ],
        "type": "Text_excerpt",
        "value": "The pipeline is built using [Nextflow](https://www.nextflow.io), a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It comes with docker containers making installation trivial and results highly reproducible.\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9830175123968768,
      "result": {
        "original_header": "NanoCLUST",
        "type": "Text_excerpt",
        "value": "**De novo clustering and consensus building for ONT 16S sequencing data**.\n \n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9324041521720489,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "- Using conda profile, some issues can arise due to unknown problems with the read_clustering and kmer_freq conda environments. If it is the case, we recommend using the docker profile to ensure all dependencies run in the right environments and these are tested and available in the cloud (automatically downloaded when using docker profile). \n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/genomicsITER/NanoCLUST/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/genomicsITER/NanoCLUST/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 47
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/genomicsITER/NanoCLUST/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "genomicsITER/NanoCLUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoCLUST"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/demultiplex/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/demultiplex/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/read_clustering/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/read_clustering/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/split_by_cluster/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/split_by_cluster/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/read_correction/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/read_correction/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/consensus_classification/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/consensus_classification/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/draft_selection/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/draft_selection/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/racon_pass/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/racon_pass/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/kmer_freqs/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/kmer_freqs/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/qc_fastp/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/qc_fastp/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/fastqc/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/fastqc/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/demultiplex_porechop/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/demultiplex_porechop/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/output_documentation/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/output_documentation/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/medaka_pass/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/medaka_pass/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/cluster_plot_pool/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/conda_envs/cluster_plot_pool/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9812168574682858,
      "result": {
        "original_header": "Troubleshooting",
        "type": "Text_excerpt",
        "value": "- Using conda profile, some issues can arise due to unknown problems with the read_clustering and kmer_freq conda environments. If it is the case, we recommend using the docker profile to ensure all dependencies run in the right environments and these are tested and available in the cloud (automatically downloaded when using docker profile). \n- In some machines, the read_clustering process exits with error status(_RuntimeError: cannot cache function '...'_). We have seen that this condition can be avoided running the pipeline with sudo privileges (even if Docker was previously available without sudo permissions). \n \n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/genomicsITER/NanoCLUST/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) Hector Rodriguez-Perez, Laura Ciuffreda\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NanoCLUST"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "genomicsITER"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Nextflow",
        "size": 51171,
        "type": "Programming_language",
        "value": "Nextflow"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 28292,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 5121,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2535,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 1124,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Computing requirements note",
        "parent_header": [
          "NanoCLUST"
        ],
        "type": "Text_excerpt",
        "value": "Clustering step uses up to 32-36GB RAM when working with a real dataset analysis and default parameters (umap_set_size = 100000). Setting umap_set_size to 50000, will diminish memory consumption to 10-13GB RAM. When running the pipeline, kmer_freqs or mostly read_clustering processes could be terminated with status 137 when not enough RAM.\n\nNextflow automatically uses all available resources in your machine. More cpu threads enable the pipeline to compute and classify the different clusters at the same time and hence reduces the overall execution time.\n\nUsing the -with-trace option, it is possible to get an execution trace file which includes computing times and memory consumption metrics for all pipeline processes.\n\n*The execution of the test profile (minimum testing dataset and default parameters) can be done with a regular 4 cores and 16GB RAM machine.\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:17:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 105
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributions and Support",
        "parent_header": [
          "NanoCLUST"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to contribute to this pipeline, please see the [contributing guidelines](.github/CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick Start",
        "parent_header": [
          "NanoCLUST"
        ],
        "type": "Text_excerpt",
        "value": "i. Install [`nextflow`](https://nf-co.re/usage/installation)\n\nii. Install [`docker`](https://docs.docker.com/engine/installation/) or [`conda`](https://conda.io/miniconda.html)\n\niii. Clone the NanoCLUST repository and test the pipeline on a minimal dataset with a single command and docker/conda profiles.\n\n*Download a BLAST database in the NanoCLUST dir for cluster sequence classification. For NCBI 16S rRNA database:\n\n```bash\nmkdir db db/taxdb\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/16S_ribosomal_RNA.tar.gz && tar -xzvf 16S_ribosomal_RNA.tar.gz -C db\nwget https://ftp.ncbi.nlm.nih.gov/blast/db/taxdb.tar.gz && tar -xzvf taxdb.tar.gz -C db/taxdb\n```\n\n```bash\n#Using docker profile with container-based dependencies (recommended).\nnextflow run main.nf -profile test,docker\n```\n\niv. Start running your own analysis!\n\nRun a single sample analysis inside NanoCLUST dir using default parameters:\n\n```bash\nnextflow run main.nf \\ \n             -profile docker \\ \n             --reads 'sample.fastq' \\ \n             --db \"db/16S_ribosomal_RNA\" \\ \n             --tax \"db/taxdb/\"\n```\n\nSee usage and output sections in the documentation (/docs) for all of the available options when running the pipeline.\n"
      },
      "source": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/genomicsITER/NanoCLUST/master/main.nf"
      },
      "technique": "file_exploration"
    }
  ]
}