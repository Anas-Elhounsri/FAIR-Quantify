{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite MAUDE in publications use:\")\n\ncitEntry(entry = \"Article\",\n  title        = \"MAUDE: inferring expression changes in sorting-based CRISPR screens\",\n  author       = personList(as.person(\"Carl G. de Boer\"),\n                   as.person(\"John P. Ray\"),\n                   as.person(\"Nir Hacohen\"),\n                   as.person(\"Aviv Regev\")),\n  journal      = \"Genome Biology\",\n  year         = \"2020\",\n  volume       = \"21\",\n  number       = \"1\",\n  pages        = \"134\",\n  url          = \"https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02046-8\",\n\n  textVersion  =\n  paste(\"de Boer CG, Ray JP, Hacohen N, Regev A.\",\n\t\t\"MAUDE: inferring expression changes in sorting-based CRISPR screens.\",  \n \t\t\"Genome Biol. 2020;21(1):134. Published 2020 Jun 3.\",\n\t\t\"doi:10.1186/s13059-020-02046-8\")\n)\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Please cite:\n\nCarl G de Boer*, John P Ray*, Nir Hacohen, Aviv Regev. [_MAUDE: Inferring Expression Changes in Sorting-Based CRISPR Screens_.](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-020-02046-8) 2020 Jun 3;21(1):134. doi: 10.1186/s13059-020-02046-8. PMID: [32493396](https://pubmed.ncbi.nlm.nih.gov/32493396/).\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Carldeboer/MAUDE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-16T23:41:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-26T22:46:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mean Alterations Using Discrete Expression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9962491420146077,
      "result": {
        "original_header": "MAUDE: Mean Alterations Using Discrete Expression",
        "type": "Text_excerpt",
        "value": "MAUDE is an R package for finding differences in means of normally distributed (or nearly so) data, via measuring abundances in discrete bins. For example, a pooled CRISPRi screen with expression readout by FACS sorting into discrete bins and sequencing the abundances of the guides in each bin.  Most of the documentation and examples are written with a CRISPRi-type sorting screen in mind, but there is no reason why it can't be used for any experiment where normally distributed expression values are read out via abundances in discrete expression bins. For example, MAUDE can also be used for [CRISPR base editor screens](https://de-boer-lab.github.io/MAUDE/doc/BACH2_base_editor_screen.html) where the readout is also expression. See 'Usage' below for more information. \n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Carldeboer/MAUDE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Encountering problems",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Should you encounter a problem using MAUDE:\n1. [Consult the Common Problems](CommonProblems.md)\n2. [Submit an Issue](https://github.com/Carldeboer/MAUDE/issues)\n3. Contact the authors.\n\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Carldeboer/MAUDE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Carldeboer/MAUDE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAUDE: Mean Alterations Using Discrete Expression"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "R Installation",
        "type": "Text_excerpt",
        "value": "If you don't already have `devtools`, install it:\n```\ninstall.packages(\"devtools\")\n```\n\nLoad `devtools` and install from the GitHub page:\n\n```\nlibrary(devtools)\ninstall_github(\"de-Boer-Lab/MAUDE\")\n```"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quantifying guide DNA abundance",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "After sequencing, you get fastqs, one per sorting bin and experiment.  The first step for a MAUDE analysis is to quantify the number of guides residing in each bin.  Here, we provide some guidance as to how to do this.\n\nWe have previously used the aligner [`bowtie2`](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml).\n\nTo make the bowtie2 reference `guide_seq_reference`:\n```bash\nbowtie2-build guide_seqs.fa guide_seq_reference\n\n```\nwhere `guide_seqs.fa` is a fasta file including the sequences you are mapping against, which will include the guide DNA sequence and any flanking constant regions as well. The amount of constant sequence you include in the reference should be at least as much as what was sequenced.\n\nFor example, with 20bp guides with constant flanking `GTTTAAGAGCTATGCTGGAAACAGCATAG`:\n```\n>guide1\nGTCGCATATCGCGATAGCGAGTTTAAGAGCTATGCTGGAAACAGCATAG\n>guide2\nGTCGTGAAAGTGCTGTTGAGGTTTAAGAGCTATGCTGGAAACAGCATAG\n...\n```\n\nThe following command is an example of how to quantify guide abundance into a format that can easily be input into R for MAUDE analysis:\n```bash\nbowtie2 --no-head -x guide_seq_reference -U $sample.fastq.gz -S $sample.mapped.sam\n#here, we include all mapped reads, but by using Samtools, you can filter out reads that map to the wrong strand, have indels, etc.\ncat $sample.mapped.sam | awk '{print $3}' | sort | uniq -c | sort > $sample.counts\n```\nHere, `$sample` is the sample name, with `$sample.fastq.gz` the corresponding fastq file, and `guide_seq_reference` is the `bowtie2` reference.  The file `$sample.counts` will contain guide counts that can be input into R. \n\nTo turn this into a format that can easily be used for a MAUDE analysis, you can input the data using something like the following:\n```R\n#here, allSamples is a data.frame containing one sample per row, with columns including ID, expt, and Bin.  There should be one file for every row in allSamples\nallData = data.frame();\nfor (i in 1:nrow(allSamples)){\n  curData = read.table(file=sprintf(\"%s/%s.counts\",inDir,allSamples$ID[i]), quote=\"\", header = F, row.names = NULL, stringsAsFactors = F)\n  names(curData) = c(\"count\",\"guideID\");\n  curData = curData[curData$gID!=\"*\",] # remove unmapped counts\n  curData$ID = allSamples$ID[i];\n  curData$expt = allSamples$expt[i];\n  curData$Bin = allSamples$Bin[i];\n  allData = rbind(allData, curData)\n}\n#now you have the data in a data.frame that can be reshaped to a MAUDE-compatible format:\nlibrary(reshape)\nallDataCounts = as.data.frame(cast(allData, expt + guideID ~ Bin, value=\"count\"));\nallDataCounts[is.na(allDataCounts)]=0; # fill in 0s for guides not observed at all\n#now you just need to label the non-targeting guides and this will be in the correct format\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8741679161447349,
      "result": {
        "original_header": "MAUDE: Mean Alterations Using Discrete Expression",
        "type": "Text_excerpt",
        "value": "\n<img src=\"images/logo2.png\" alt=\"Maude Flanders\" width=\"400\"/>\n \n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Carldeboer/MAUDE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Carl de Boer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/images/logo2.png"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAUDE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Carldeboer"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 225761,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 68229,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "Right now we have three main requirements: \n1. Negative control guides are included in the experiment; these are used for calibrating Z-scores and P-values.\n2. The abundance of the guides must have been measured somehow (usually by sequencing the guide DNA of unsorted cells)\n3. The fractions of cells sorted into each expression bin was quantified\n\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:57:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "We provide two tutorials on how to run a MAUDE analysis in R here:\n1. [Re-analysis of CD69 screen data](https://de-boer-lab.github.io/MAUDE/doc/CD69_tutorial.html)\n2. [Analysis of a simulated screen](https://de-boer-lab.github.io/MAUDE/doc/simulated_data_tutorial.html)\n3. [Analysis of a CRISPR base editor non-coding mutation screen](https://de-boer-lab.github.io/MAUDE/doc/BACH2_base_editor_screen.html)\n\nFor additional examples, see the [script for evaluating and comparing sorting-based CRISPR screen analysis methods.](https://de-boer-lab.github.io/MAUDE/Evaluation/method_evaluation.html)\n"
      },
      "source": "https://raw.githubusercontent.com/Carldeboer/MAUDE/master/README.md",
      "technique": "header_analysis"
    }
  ]
}