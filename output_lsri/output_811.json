{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading Samtools and reference",
        "parent_header": [
          "All2",
          "**Setup:**"
        ],
        "type": "Text_excerpt",
        "value": "1. Samtools (download and install):\n     ```\n     wget https://sourceforge.net/projects/samtools/files/samtools/1.9/samtools-1.9.tar.bz2\n    \n     tar -xvf samtools-1.9.tar.bz2\n    \n    cd samtools-1.9/\n    \n    /.configure\n    \n    make\n     ```\n1. Reference (If you want to run the examples and is not a requirement):\n\n    ```\n    wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/human_g1k_v37_decoy.fasta.gz\n    \n    wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/human_g1k_v37_decoy.fasta.fai.gz\n    \n    gunzip human_g1k_v37_decoy.fasta.gz\n    \n    gunzip human_g1k_v37_decoy.fasta.fai.gz\n   ```\n   \n ## How to use All2:\n The All2 tool has three commands for SNVs and small INDELs:\n 1. score\n 1. call\n 1. matrix\n \n And three commands for structural variants:\n 1. score_sv\n 1. call_sv\n 1. matrix_sv\n \n Note: The options and outputs for SNVs, INDELs and SV are similar, however please keep the following in mind:\n 1. For structural variants, the only accepted tool is Manta and script doesn't include 'BND' variants\n 1. Since there is no variant allele frequency available for structural variants from manta the 'call_sv' option\n is slightly different than the 'call' option.\n 1. There are no variant allele frequency and mutation spectrum plots for structural variant mode and the format\n of the output files will be slightly different from the SNV/INDEL analyses.\n ### Usage\n ```\npython ALL2.py -h\nusage:  python ALL2.py <command> [<args>]\n        Three commands to use for SNVs and small INDELS:\n                score --> Generates mosaic and germline scores.\n                call --> Based on score cut-off generates sample level files/plots for mosaic,\n                        germline mutations and plots variant allele frequency, mutation spectrum\n                matrix --> Plot the mutation matrix\n        Three commands to use for structural variants :\n                score_sv --> Generates mosaic and germline scores.\n                call_sv --> Based on score cut-off generates sample level files/plots for mosaic and \n                        germline mutations \n                matrix_sv --> Plot the mutation matrix              \n\nAll to all comparision\n\npositional arguments:\n  command     Please specify score/call/matrix as a command\n\noptional arguments:\n  -h, --help  show this help message and exit\n ```\n*note"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abyzovlab/All2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-27T20:27:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-12T02:48:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool for filtering variants from all2all comparison of multiple clones or single cells"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.916195059082945,
      "result": {
        "original_header": "All2",
        "type": "Text_excerpt",
        "value": "A tool for filtering variants from all2all comparison of multiple clones or single cells\n \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.958289796146757,
      "result": {
        "original_header": "Note:",
        "type": "Text_excerpt",
        "value": "1. The columns \"Control_in_vcf\" and \"Case_in_vcf\" are optional and can be used when the \n\"Control\" and \"Case\" name don't match the control and case inside the vcf file.\n1. Make sure to vcf files for all the combination of control and case\nspecified in the vcf.\n1. It is recommended to filter the vcf (technical artifacts) prior to running All2 to reduce \nthe processing time. If this is not performed, script will automatically \nfilter the noise, but might take longer.\n1. The script automatically used only \"PASS\" variants and if you wish to use \nall variants use the option \"-a\"\n \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9686066454207622,
      "result": {
        "original_header": "2. call:",
        "type": "Text_excerpt",
        "value": "This is next step after score to call the mosaic mutation based on user defined\nmosaic and germline score cutoff. \nAnd five optional parameter:\n1. Allele frequency cut-off for mutations (default is 35%)\n1. Mosaic score cut-off (default is 0.75)\n1. Germline score cut-off (default is 0.75)\n1. Mosaic score cut-off for germline (default is 0.20)\n1. Germline score cut-off for mosaic (default is 0.50) \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9620960215843486,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "This command creates a new annotated explanation score plot and three sets of folder in the output directory:\n1. Annotated explanation plot:\n    1. Red area is noise\n    1. Green area is mosaic mutations\n    1. Gray area is high frequency mosaic mutations\n    1. Blue are is germline mutations \n1. 'Mutation_counts'  \n    Two plots are generated under this:\n    1. 'mutation_type_count.png', which give a mutation count \n    for mosaic, germline and noisy mutation\n    \n        ![mutation_type](output_example/mutation_counts/mutation_type_count.png )    \n    1. 'per_sample_mutation_count.png', which gives a sample level \n    mutation count after filtering at the specified VAF cut-off\n    \n        ![per_sample_mutation](output_example/mutation_counts/per_sample_mutation_count.png)\n1. 'vaf_plots'  \n    For each sample three variant allele frequency plots are generated:\n    1. Mosaic mutation\n    \n        ![mosaic vaf]( output_example/vaf_plots/316-BG-cl18.Mosaic.vaf_plot.png)\n    1. Germline mutation\n    \n        ![germline vaf]( output_example/vaf_plots/316-BG-cl18.Germline.vaf_plot.png)\n    1. Noise mutation     \n     \n        ![noise vaf]( output_example/vaf_plots/316-BG-cl18.Noise.vaf_plot.png)\n1. 'mutation_spectrum'  \n    For each sample two mutation spectrum plots are generated:\n    1. 96 mutation spectrum   \n        1. Mosaic\n        \n            ![mosaic_96](output_example/mutation_spectrum/316-BG-cl18.Mosaic.mutation_spectrum.png)\n        1. Germline\n        \n            ![germ_96](output_example/mutation_spectrum/316-BG-cl18.Germline.mutation_spectrum.png)\n        1. Noise\n        \n            ![noise_96](output_example/mutation_spectrum/316-BG-cl18.Noise.mutation_spectrum.png)\n    1. 6 mutation spectrum plot:\n        1. Mosaic\n        \n            ![mosaic_6](output_example/mutation_spectrum/316-BG-cl18.Mosaic.six_mutation_spectrum.png)\n        1. Germline\n        \n            ![germ_6](output_example/mutation_spectrum/316-BG-cl18.Germline.six_mutation_spectrum.png)\n        1. Noise\n        \n            ![noise_6](output_example/mutation_spectrum/316-BG-cl18.Noise.six_mutation_spectrum.png)\n \n ### 2. matrix:\n This command lets you look at the mutation matrix to verify a certain mutation\n \n #### Input\n It takes three parameters:\n 1. The output directory from the 'score' command (GET_SCORE_DIRECTORY).\n 1. Output directory.\n 1. Mutation in the format of chr_pos_alt_ref\n \n #### Usage\n ```\n python ALL2.py matrix -h\nusage: ALL2.py [-h] -g GET_SCORE_DIRECTORY -o OUTPUT_DIR -m MUTATION\n\nPlotting mutation matrix\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GET_SCORE_DIRECTORY, --get_score_directory GET_SCORE_DIRECTORY\n                        Path to output folder of get_score\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        Path to directory where results will be written\n  -m MUTATION, --mutation MUTATION\n                        Mutation format should be chr_pos_alt_ref(eg.\n                        chr1_43504477_T_C)\n\nexample:\npython ALL2.py matrix -g output_example/ -o output_example/ -m chr15_80509588_A_C\n```\n #### Output \nIt creates a  matrix plot along with variant allele frequency\nat each sample for the given mutation. \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download",
        "parent_header": [
          "All2",
          "**Setup:**"
        ],
        "type": "Text_excerpt",
        "value": "   ```\n      git clone https://github.com/abyzovlab/All2.git    \n   ```"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Downloading Samtools and reference",
        "parent_header": [
          "All2",
          "**Setup:**"
        ],
        "type": "Text_excerpt",
        "value": "1. Samtools (download and install):\n     ```\n     wget https://sourceforge.net/projects/samtools/files/samtools/1.9/samtools-1.9.tar.bz2\n    \n     tar -xvf samtools-1.9.tar.bz2\n    \n    cd samtools-1.9/\n    \n    /.configure\n    \n    make\n     ```\n1. Reference (If you want to run the examples and is not a requirement):\n\n    ```\n    wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/human_g1k_v37_decoy.fasta.gz\n    \n    wget ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/b37/human_g1k_v37_decoy.fasta.fai.gz\n    \n    gunzip human_g1k_v37_decoy.fasta.gz\n    \n    gunzip human_g1k_v37_decoy.fasta.fai.gz\n   ```\n   \n ## How to use All2:\n The All2 tool has three commands for SNVs and small INDELs:\n 1. score\n 1. call\n 1. matrix\n \n And three commands for structural variants:\n 1. score_sv\n 1. call_sv\n 1. matrix_sv\n \n Note: The options and outputs for SNVs, INDELs and SV are similar, however please keep the following in mind:\n 1. For structural variants, the only accepted tool is Manta and script doesn't include 'BND' variants\n 1. Since there is no variant allele frequency available for structural variants from manta the 'call_sv' option\n is slightly different than the 'call' option.\n 1. There are no variant allele frequency and mutation spectrum plots for structural variant mode and the format\n of the output files will be slightly different from the SNV/INDEL analyses.\n ### Usage\n ```\npython ALL2.py -h\nusage:  python ALL2.py <command> [<args>]\n        Three commands to use for SNVs and small INDELS:\n                score --> Generates mosaic and germline scores.\n                call --> Based on score cut-off generates sample level files/plots for mosaic,\n                        germline mutations and plots variant allele frequency, mutation spectrum\n                matrix --> Plot the mutation matrix\n        Three commands to use for structural variants :\n                score_sv --> Generates mosaic and germline scores.\n                call_sv --> Based on score cut-off generates sample level files/plots for mosaic and \n                        germline mutations \n                matrix_sv --> Plot the mutation matrix              \n\nAll to all comparision\n\npositional arguments:\n  command     Please specify score/call/matrix as a command\n\noptional arguments:\n  -h, --help  show this help message and exit\n ```\n*note"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abyzovlab/All2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abyzovlab/All2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abyzovlab/All2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "All2"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Mosaic.mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/Explaination_score_scatter.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/Explanation_score_scatter_annotated.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_counts/mutation_type_count.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_counts/per_sample_mutation_count.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/vaf_plots/316-BG-cl18.Mosaic.vaf_plot.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/vaf_plots/316-BG-cl18.Germline.vaf_plot.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/vaf_plots/316-BG-cl18.Noise.vaf_plot.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Germline.mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Noise.mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Mosaic.six_mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Germline.six_mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/mutation_spectrum/316-BG-cl18.Noise.six_mutation_spectrum.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/output_example/chr15_80509588_A_C.png"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. score:",
        "parent_header": [
          "All2",
          "**Setup:**"
        ],
        "type": "Text_excerpt",
        "value": "This is the first step and the other two commands will need the output from this step."
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999313250932096,
      "result": {
        "original_header": "Control|Case|Control_in_vcf|Case_in_vcf|Filename|Inclusion_region",
        "type": "Text_excerpt",
        "value": "---|---|---|---|---|---\ncontrol_1|case_1|control_in_vcf_1|case_in_vcf_1|path/to/file_1_1.vcf|path/to/file_1.bed\ncontrol_1|case_2|control_in_vcf_1|case_in_vcf_2|path/to/file_1_2.vcf|path/to/file_2.bed\n....|....|....|....|....|....\ncontrol_n|case_m|control_in_vcf_n|case_in_vcf_m|path/to/file_n_m.vcf|path/to/file_m.bed \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8229146839827202,
      "result": {
        "original_header": "Input",
        "type": "Text_excerpt",
        "value": "This options takes in a manifest file and output directory as its input. The manifest\nfile should have the following format (see manifest_file.txt):\n \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8647548511703058,
      "result": {
        "original_header": "2. call:",
        "type": "Text_excerpt",
        "value": "#### Usage\n```\n python ALL2.py call -h\nusage: ALL2.py [-h] -g GET_SCORE_DIRECTORY -r REFERENCE -o OUTPUT_DIR\n               [-a AF_CUTOFF] [-ms MOSAIC_SCORE_CUTOFF]\n               [-gs GERMLINE_SCORE_CUTOFF]\n               [-msg MOSAIC_SCORE_CUTOFF_FOR_GERMLINE]\n               [-gsm GERMLINE_SCORE_CUTOFF_FOR_MOSAIC]\n\napply_score\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GET_SCORE_DIRECTORY, --get_score_directory GET_SCORE_DIRECTORY\n                        Path to output directory of the get_score option\n  -r REFERENCE, --reference REFERENCE\n                        Path to reference file\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        Path to directory where results will be written\n  -a AF_CUTOFF, --af_cutoff AF_CUTOFF\n                        Allele frequency cut-off for variants (default=0.35)\n  -ms MOSAIC_SCORE_CUTOFF, --mosaic_score_cutoff MOSAIC_SCORE_CUTOFF\n                        Mosaic score cut-off (default=0.75)\n  -gs GERMLINE_SCORE_CUTOFF, --germline_score_cutoff GERMLINE_SCORE_CUTOFF\n                        Germline score cut-off (default=0.75)\n  -msg MOSAIC_SCORE_CUTOFF_FOR_GERMLINE, --mosaic_score_cutoff_for_germline MOSAIC_SCORE_CUTOFF_FOR_GERMLINE\n                        Mosaic score cut-off for germline mutations\n                        (default=0.2)\n  -gsm GERMLINE_SCORE_CUTOFF_FOR_MOSAIC, --germline_score_cutoff_for_mosaic GERMLINE_SCORE_CUTOFF_FOR_MOSAIC\n                        Germline score cut-off for mosaic mutation\n                        (default=0.5)\n\nexample:\npython ALL2.py call -r human_g1k_v37_decoy.fasta -o output_example/ -g output_example/ -ms 0.75 -gs 0.75 \n\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8294892891402158,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "1. 'Mutation_counts'  \n    Two plots are generated under this:\n    1. 'mutation_type_count.png', which give a mutation count \n    for mosaic, germline and noisy mutation\n    \n        ![mutation_type](output_example/mutation_counts/mutation_type_count.png )    \n    1. 'per_sample_mutation_count.png', which gives a sample level \n    mutation count after filtering at the specified VAF cut-off\n    \n        ![per_sample_mutation](output_example/mutation_counts/per_sample_mutation_count.png)\n1. 'vaf_plots'  \n    For each sample three variant allele frequency plots are generated:\n    1. Mosaic mutation\n    \n        ![mosaic vaf]( output_example/vaf_plots/316-BG-cl18.Mosaic.vaf_plot.png)\n    1. Germline mutation\n    \n        ![germline vaf]( output_example/vaf_plots/316-BG-cl18.Germline.vaf_plot.png)\n    1. Noise mutation     \n     \n        ![noise vaf]( output_example/vaf_plots/316-BG-cl18.Noise.vaf_plot.png)\n1. 'mutation_spectrum'  \n    For each sample two mutation spectrum plots are generated:\n    1. 96 mutation spectrum   \n        1. Mosaic\n        \n            ![mosaic_96](output_example/mutation_spectrum/316-BG-cl18.Mosaic.mutation_spectrum.png)\n        1. Germline\n        \n            ![germ_96](output_example/mutation_spectrum/316-BG-cl18.Germline.mutation_spectrum.png)\n        1. Noise\n        \n            ![noise_96](output_example/mutation_spectrum/316-BG-cl18.Noise.mutation_spectrum.png)\n    1. 6 mutation spectrum plot:\n        1. Mosaic\n        \n            ![mosaic_6](output_example/mutation_spectrum/316-BG-cl18.Mosaic.six_mutation_spectrum.png)\n        1. Germline\n        \n            ![germ_6](output_example/mutation_spectrum/316-BG-cl18.Germline.six_mutation_spectrum.png)\n        1. Noise\n        \n            ![noise_6](output_example/mutation_spectrum/316-BG-cl18.Noise.six_mutation_spectrum.png)\n \n ### 2. matrix:\n This command lets you look at the mutation matrix to verify a certain mutation\n \n #### Input\n It takes three parameters:\n 1. The output directory from the 'score' command (GET_SCORE_DIRECTORY).\n 1. Output directory.\n 1. Mutation in the format of chr_pos_alt_ref\n \n #### Usage\n ```\n python ALL2.py matrix -h\nusage: ALL2.py [-h] -g GET_SCORE_DIRECTORY -o OUTPUT_DIR -m MUTATION\n\nPlotting mutation matrix\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GET_SCORE_DIRECTORY, --get_score_directory GET_SCORE_DIRECTORY\n                        Path to output folder of get_score\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        Path to directory where results will be written\n  -m MUTATION, --mutation MUTATION\n                        Mutation format should be chr_pos_alt_ref(eg.\n                        chr1_43504477_T_C)\n\nexample:\npython ALL2.py matrix -g output_example/ -o output_example/ -m chr15_80509588_A_C\n```\n #### Output \nIt creates a  matrix plot along with variant allele frequency\nat each sample for the given mutation. \n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abyzovlab/All2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Abyzov lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "All2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "abyzovlab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 78132,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "**Prerequisite:**",
        "parent_header": [
          "All2"
        ],
        "type": "Text_excerpt",
        "value": "1. Python 3.6 with the following packages\n\t1. Pandas\n\t1. Matplotlib\n\t1. Seaborn\n\t1. Numpy\n1. Other dependencies:\n    1. Samtools\n    "
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:27:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Control|Case|Control_in_vcf|Case_in_vcf|Filename|Inclusion_region",
          "2. call:"
        ],
        "type": "Text_excerpt",
        "value": "```\npython ALL2.py score -h\nusage: ALL2.py [-h] -m MANIFEST_FILE -o OUTPUT_DIR\n\nget_score\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MANIFEST_FILE, --manifest_file MANIFEST_FILE\n                        Path to manifest file\n  -o OUTPUT_DIR, --output_dir OUTPUT_DIR\n                        Path to directory where results will be written\n\nexample:\npython ALL2.py score -m manifest_file.txt -o output_example/\n```\n #### Output\n It generates three output files:\n 1. \"explanation_score.txt\" which has the following information:\n \n    Field_name|Explanation\n    ---|---\n    **Chrom**| Chromosome name \n    **Pos**| Position of the mutation\n    **Ref**| Reference allele\n    **Alt**| Alternate allele\n    **Mosaic_score**| Mosaic score for the mutation\n    **Germline_score**| Germline score for the mutation\n    **Total_samples**| Total number of samples in the study\n    **Number_of_samples_with_mutation**| Number of samples/pairs where the mutation was called\n    **Samples_with_mutation**| Name of the samples which have the mutation (comma separated values)\n    **VAF_of_samples_with_mutation**| Variant allele frequency for the mutation for each sample (comma separated values)\n    **Number_of_comparision_per_sample**| Number of comparison where this mutation was found in a sample(comma separated value)\n    **Excluded_samples**| Samples excluded because of allele drop out\n 1. \"Explanation_score_scatter.png\" which shows the distribution of \n mutations in terms of mosaic and germline scores. This plot is helpful to \n determine the mosaic and germline score to use for calling mosaic and germline \n mutations in the next 'call' step. The size of the circle denotes the number\n of mutations.\n \n    ![explanation_plot]( output_example/Explaination_score_scatter.png)\n 1. \"mutation_matrix.pkl\" is an pickle file generated to be used for matrix \n visualisation in the 'matrix' option. This in no use for the user.\n"
      },
      "source": "https://raw.githubusercontent.com/abyzovlab/All2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}