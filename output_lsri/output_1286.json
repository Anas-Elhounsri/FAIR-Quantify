{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "If you use or discuss **ToxCodAn**, its guide, or any script available at this repository, please cite:\n\nNachtigall et al. (2021) ToxCodAn: a new toxin annotator and guide to venom gland transcriptomics. Briefings in Bioinformatics. DOI:[https://doi.org/10.1093/bib/bbab095](https://doi.org/10.1093/bib/bbab095)\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pedronachtigall/ToxCodAn"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": ":bug::sos::speech_balloon:\n\nTo report bugs, to ask for help and to give any feedback, please contact **Pedro G. Nachtigall**: pedronachtigall@gmail.com\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-07T18:59:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-29T09:25:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Toxin genes annotation in venom gland transcriptome assembly"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9750134484071442,
      "result": {
        "original_header": "ToxCodAn",
        "type": "Text_excerpt",
        "value": "**ToxCodAn** is a computational tool designed to detect and annotate toxin genes in transcriptome assembly. \nThe guide for venom gland transcriptomics is available [here](https://github.com/pedronachtigall/ToxCodAn/tree/master/Guide)\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8278845195760478,
      "result": {
        "original_header": "Models",
        "type": "Text_excerpt",
        "value": "The model folder contains specific gHMM models and the toxinDB used in the ToxCodAn pipeline. \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9785067280949042,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "Description of the output files:\n```\ncds -> coding sequence of the predicted toxins\npep -> protein sequence of the predicted toxins\ncontigs -> whole contigs containing the predicted CDSs\nToxins -> sequences with very high probability of being toxins\nPutativeToxins -> sequences with medium/high probability of being toxins\nNonToxins -> sequences with very low probability of being toxins\nRedundancyFiltered -> CDSs with 100% identity filtered\nSPfiltered -> signalP filtered sequences (optional step)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/pedronachtigall/ToxCodAn/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Frequently Asked Questions (FAQ)",
        "type": "Text_excerpt",
        "value": "**[Q1]** What Operation System (OS) do I need to use ToxCodAn?\n  - We tested ToxCodAn in Linux Ubuntu 16 and 18, and macOS Mojave and Catalina. However, we believe that ToxCodAn should work on any UNIX OS able to have all dependencies of ToxCodAn installed.\n \n**[Q2]** How long will take to ToxCodAn finish the analysis?\n  - We tested ToxCodAn using a personal computer (6-Core i7 with 16Gb memory) and 6 threads (```-c 6```), it took only 55 minutes to finish the analysis by using a *de novo* dataset with 146,077 sequences. If the user has more threads available for use, the running time will decrease.\n\n**[Q3]** Is ToxCodAn only available for snake species? :snake:\n  - Unfortunately, we only acquired sufficient trainning data for snake toxins. But we are working to get more training data to other venomous taxa and make them available soon. Stay tune!\n  - If you are working with other venomous taxa and believe that your research group has enough training data to design specific models, please contact me. I will be happy to collaborate and make it happen.\n\n**[Q4]** When was the ToxCodAn's Databases last updated?\n  - Our models and databases used for annotations were last updated in September 2020.\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pedronachtigall/ToxCodAn/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pedronachtigall/ToxCodAn"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ToxCodAn"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Download the master folder and follow the steps below:\n\n```\nunzip ToxCodAn-master.zip\nexport PATH=$PATH:path/to/ToxCodAn-master/bin/\n```\nOR git clone the ToxCodAn respository and add the bin folder into your PATH:\n```\ngit clone https://github.com/pedronachtigall/ToxCodAn.git\nexport PATH=$PATH:path/to/ToxCodAn/bin/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8779850411104456,
      "result": {
        "original_header": "ToxCodAn",
        "type": "Text_excerpt",
        "value": "The guide for venom gland transcriptomics is available [here](https://github.com/pedronachtigall/ToxCodAn/tree/master/Guide)\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9842403381673409,
      "result": {
        "original_header": "Models",
        "type": "Text_excerpt",
        "value": "Download the [models.zip](https://github.com/pedronachtigall/ToxCodAn/blob/master/models.zip) file, uncompress (```unzip models.zip```) and specify it to the BASH2* option of ToxCodAn command line (BASH3*).\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9640277469392567,
      "result": {
        "original_header": "Inputs",
        "type": "Text_excerpt",
        "value": " - Transcripts in [fasta format](https://en.wikipedia.org/wiki/FASTA_format) through the ```-t``` option.\n - The uncompressed [models](https://github.com/pedronachtigall/ToxCodAn/blob/master/models.zip) folder through the BASH2* option\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999969581467,
      "result": {
        "original_header": "Outputs",
        "type": "Text_excerpt",
        "value": "ToxCodAn outputs the following files:\n```\nSampleID_Toxins_cds.fasta\nSampleID_Toxins_pep.fasta\nSampleID_Toxins_annotation.gtf\nSampleID_Toxins_contigs.fasta\nSampleID_PutativeToxins_cds.fasta\nSampleID_PutativeToxins_contigs.fasta\nSampleID_NonToxins_contigs.fasta\n\nSampleID_Toxins_cds_SPfiltered.fasta (optional step)\nSampleID_Toxins_pep_SPfiltered.fasta (optional step)\nSampleID_Toxins_contigs_SPfiltered.fasta (optional step)\nSampleID_Toxins_cds_SPfiltered_RedundancyFiltered.fasta (optional step)\n\nsignalp_annotation.gff (optional step)\nRemoveRedundancy.log\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8410040235811985,
      "result": {
        "original_header": "Models",
        "type": "Text_excerpt",
        "value": "Download the [models.zip](https://github.com/pedronachtigall/ToxCodAn/blob/master/models.zip) file, uncompress (```unzip models.zip```) and specify it to the BASH2* option of ToxCodAn command line (BASH3*).\n \n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/pedronachtigall/ToxCodAn/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "[GNU GPLv3](https://www.gnu.org/licenses/gpl-3.0.html)\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master//toxcodan_logo.png"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ToxCodAn"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "pedronachtigall"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 79510,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 19138,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "- [Python3](https://www.python.org/) and [Biopython](https://biopython.org/wiki/Download)\n  - ```apt-get install python3-biopython```\n- [Perl](https://www.perl.org/), [Bioperl](https://bioperl.org/) and [MCE](https://metacpan.org/release/MCE) (libmce-perl)\n  - ```apt-get install bioperl libmce-perl```\n- [CodAn](https://github.com/pedronachtigall/CodAn/)\n- [NCBI-BLAST](https://www.ncbi.nlm.nih.gov/books/NBK279671/) (v2.9.0 or above)\n- [SignalP-4.1](https://services.healthtech.dtu.dk/software.php)\n- [HMMER](http://hmmer.org/download.html) (used in NonToxin annotation step - which is optional)\n- [DIAMOND](https://github.com/bbuchfink/diamond) (v2.0.6 or higher) - Optional tool (to increase speed in NonToxin annotation step)\n\nEnsure that all requirements are working properly.\n\n:warning: If the user wants to install ToxCodAn and all dependencies using [Conda environment](https://docs.conda.io/projects/conda/en/latest/user-guide/concepts/environments.html), follow the steps below:\n- Create the environment:\n    - ```conda create -n toxcodan_env -c bioconda python=3.6 biopython=1.69 codan blast hmmer```\n- Git clone the ToxCodAn repository and add to your PATH:\n    - ```git clone https://github.com/pedronachtigall/ToxCodAn.git```\n    - ```export PATH=$PATH:path/to/ToxCodAn/bin/```\n- Download the SignalP-4.1, decompress and add it to your PATH:\n    - ```tar -xzf signalp-4.1g.Linux.tar.gz```\n    - ```export PATH=$PATH:path/to/signalp-4.1/```\n    - Change the line number 13 of \"signalp\" (path/to/signalp-4.1/signalp) to:\n        - ```$ENV{SIGNALP} = 'path/to/signalp-4.1/';```\n- It may be needed to apply \"execution permission\" to all bin executables in \"CodAn/bin\" and \"ToxCodAn/bin/\":\n    - ```chmod 777 path/to/ToxCodAn/bin/*```\n- Then, run ToxCodAn as described in the \"Usage\" section.\n- To activate the environment to run ToxCodAn just use the command: ```conda activate toxcodan_env```\n- To deactivate the environment just use the command: ```conda deactivate```\n\n- :warning:**Tip**:warning: Ensure that you have added all conda channels properly:\n    - ```conda config --add channels defaults && conda config --add channels bioconda && conda config --add channels conda-forge```\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 04:28:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```\nUsage: toxcodan.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -s string, --sample=string\n                        Optional - sample ID to be used in the output files\n                        [default=toxcodan]\n  -t fasta, --transcripts=fasta\n                        Mandatory - transcripts in FASTA format,\n                        /path/to/transcripts.fasta\n  -o folder, --output=folder\n                        Optional - output folder, /path/to/output_folder; if\n                        not defined, the output folder will be set in the\n                        current directory [ToxCodAn_output]\n  -m path, --model=path\n                        Mandatory - path to model folder, /path/to/models\n  -p boolean value, --signalp=boolean value\n                        Optional - turn on/off the signalP filtering step, use\n                        True to turn on or False to turn off [default=True]\n  -P boolean value, --partial=boolean value\n                        Optional - turn on/off the partial filtering step, use\n                        True to turn on or False to turn off [default=False]\n  -n path, --nontoxinannotation=path\n                        Optional - path to folder containing the protein DB\n                        and CodAn model to be used in the NonToxin Annotation\n                        pipeline [default=None]\n  -c int, --cpu=int     Optional - number of threads to be used in each step\n                        [default=1]\n  -f int, --covprefilter=int\n                        Optional - threshold value used as the minimum\n                        coverage in the pre-filter step [default=90]\n  -F int, --covtoxinfilter=int\n                        Optional - threshold value used as the minimum\n                        coverage in the toxin filter step [default=80]\n```\n\nBasic usage:\n```\ntoxcodan.py -t transcripts.fa -m path/to/models\n```\n\nCheck our [tutorial](https://github.com/pedronachtigall/ToxCodAn/tree/master/tutorial) to learn how to use ToxCodAn.\n"
      },
      "source": "https://raw.githubusercontent.com/pedronachtigall/ToxCodAn/master/README.md",
      "technique": "header_analysis"
    }
  ]
}