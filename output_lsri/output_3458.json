{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments <a name=\"ack\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis"
        ],
        "type": "Text_excerpt",
        "value": "* Jolene Goh\n* Shyam Prabhakar\n* Yun-ching Chang\n* Maurice Lee\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations and links to libraries utilized <a name=\"cite\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis"
        ],
        "type": "Text_excerpt",
        "value": "* The pixel decoding approach, in particular the use of normalized vector distances to compare pixel vectors to codewords, was originally implemented here: https://github.com/ZhuangLab/MERFISH_analysis\n\n* [ReadDax](utils/readClasses.py) and [WriteDax](utils/writeClasses.py) are modified versions of readers/writers for the `.dax` binary image format found in https://github.com/zhuanglab/storm-control, which is under the *MIT License*.\n\n* LHS implementation is from [PyDOE](https://pythonhosted.org/pyDOE/) which is under the *BSD License* (3-Clause). An unmodified version of the code for Latin-Hypercube sampling is [included in the \"external\" folder](external/doe_lhs.py) so that the user does not need to install the full PyDOE package.\n\n* The probe design script was modified from the Zhuang Lab github (https://github.com/ZhuangLab/MERFISH_analysis/blob/master/example_scripts/library_design_example.m) to 'split' the probes and attach the bridge sequences\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KHChenLab/split-fish"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-22T08:26:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-02-24T12:16:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A multiplexed FISH image analysis pipeline used to analyze split-FISH data. Publication available here:https://www.nature.com/articles/s41592-020-0858-0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9956157907327751,
      "result": {
        "original_header": "Multiplexed FISH Image Analysis",
        "type": "Text_excerpt",
        "value": "A multiplexed FISH image analysis pipeline for multi-FOV datasets using a pixel-vector decoding approach. Will work for any coding scheme. Allows for visualization of correlation to bulk FPKM counts, and stitches images and spots. \n \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9876720512567535,
      "result": {
        "original_header": "Parameter Settings <a name=\"settings\"></a>",
        "type": "Text_excerpt",
        "value": "An explanation of each of the parameters used for decoding in `MainScript.py`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9304073974209448,
      "result": {
        "original_header": "Main parameters",
        "type": "Text_excerpt",
        "value": "* **fpkm_structname**   \nIgnore. Legacy parameter for when we were reading matlab .mat files that contained FPKM values. \n* **imgcolour_to_maskcolour**   \nA dictionary that matches the corresponding colours in the image filenames to those in the correction .hdf5 file. e.g. if you choose to use washed / bleached images for correction:\n```Python\nparams[\"imgcolour_to_maskcolour\"] = {\n    \"Cy5\": \"Cy5_Bleach\",\n    \"Cy7\": \"Cy7_Bleach\",\n}\n```\n \n* **percentile_norm_high**  \nThe percentile of image intensities in a single image to use for normalization, if global normalization is **not** used. \n* **magnitude_threshold**  \nThis is the root mean square of intensities across all bits. Used to eliminate *pixels* that are too dim. Note that pixels that do not pass this threshold are not decoded. Setting this higher may slightly reduce decoding time. \n\n---\nThe following thresholds are applied after unit-normalization of each pixel (i.e. each pixel vector is normalized to 1). \n* **min_region_size**  \nset minimum size for spots (connected regions) to be greater than or equal to this number of pixels \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8956559311545423,
      "result": {
        "original_header": "File parameters",
        "type": "Text_excerpt",
        "value": "  <summary>Detailed explanations:</summary>\n  \n  * **codebook_filepath** Location of the codebook .tsv file. This should be a tab-separated text file with bit values as its first columns and gene names as its right-most column.\n  * **fpkm_filepath** Location of the FPKM values .tsv or .txt file. This should be a tab-separated text file with gene names in its first column and FPKM values as its second column. The gene names should match those in **codebook_filepath**. Only genes common to the gene name columns in both files will be used for analysis.\n  * **calibration_path** The folder where the calibration files for both field and chromatic correction are stored. Chromatic correction files are `.tsv` files. Field correction files are generated by **`fieldCorrMaskGenerator.py`**. There should only be one field correction file in the folder.\n  \n</details> \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/khchenLab/split-fish/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KHChenLab/split-fish/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KHChenLab/split-fish"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Multiplexed FISH Image Analysis"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/khchenLab/split-fish/master/images/SpotViewer_screenshot.PNG"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/khchenLab/split-fish/master/images/filter.png"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation <a name=\"install\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Getting Started <a name=\"getstart\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "1.\tDownload and install [Anaconda](https://www.anaconda.com/distribution/#download-section).\n2.\t**Spyder** and the required packages will be installed with **Anaconda**. No further library installation is required.\n3.\tInstallation of **Anaconda** typically takes less than 30 minutes. \n4.  Code has been tested to run on **Spyder** and **PyCharm** but also can also be run from command line (run `MainScript.py`) or any other Python 3 compatible IDE.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step-by-Step Guide <a name=\"sbs\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Getting Started <a name=\"getstart\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "<details><summary>follow these steps:</summary>\n\n1. Open the `MainScript.py` file in Spyder. \n \n2. Look for the `Define user\u2019s base parameters` line: fields below that need changing. Refer to parameter descriptions for more information. For the purpose of this guide we will only be exploring some basic parameters. \n \n3. `file_params[\u201cfpkm_filepath\u201d]` specifies Location of the FPKM file for the dataset. Change the file name / location accordingly. In this example, we will run the [brain dataset](ExampleDatasetBrain). \n \n4. `\u201cfovs_to_process\u201d`: Provide a list of FOVs for analysis. Four FOVs are provided in the brain dataset, from 0 to 4. You can either type in the list manually, or by using Python's `list(range())` function. \n \n5. `\u201chyb_list\u201d` and `\u201ctype_list\u201d` are important parameters that tell the script which images correspond to which bit of the codebook. The correct `\u201chyb_list\u201d` and `\u201ctype_list\u201d` for the example dataset has been provided in the `MainScript.py`, but as an example, for a dataset with **6 bits** run in **3 hybridization rounds** using only the **Cy5** and **Cy7** channel:\n```Python\nsplit_fish_params[\"hyb_list\"] = [0, 1, 2, 0, 1, 2]\nsplit_fish_params[\"type_list\"] = [\"Cy5\", \"Cy5\", \"Cy5\", \"Cy7\", \"Cy7\", \"Cy7\"]\n```\nHere, Bit 1, 2, and 3 are ran in **hybridzation rounds** 0, 1, and 2 respectively, and imaged in the **Cy5** channel. \n\n6. Run the script. A pop up window will appear behind the Spyder window asking you to select the data directory. Navigate to the location of the demo dataset and hit *select folder*.\n\n7. The code will start running the analysis. The analysis is complete when the console reports the time taken to run the whole script.\n\n8. The code will create three folders in the data directory \u2013 *output*, *data_tables*, and *filters*. The *output* folder is where you will find results \u2013 FPKM plots, gene coordinates, gene counts, and more. A `.tsv` file summary will also be generated. Example:\n\n| | **correlation** | **p_value** | **total_count** | **percent_above_blank** | **gene_blank_ratio** |\n| --- | --- | --- | --- | --- | --- |\n| split_fish_4fovs_test | 0.74 | 1.94E-3 | 14498 | 76 | 20 |\n\n#### Stitching\n\n9. Stitching can only be done after the main analysis has been completed. The script will look for the image from bit `basebit`, but the approprate bit to use can also be specified by a combination of `basetype` (referring to colour channel) and `basehyb` (referring to hybridization round) if you set `basebit = None`. For this example we use bit 14 as our `basebit`. **Important: The `basebit` must be the same as the `reference_bit` set in the main script, otherwise the spots will be offset from the image.** \n\n```Python\n\n# Define parameters\n# -----------------\n\nmicroscope_type = \"Dory\"\nbasebit = 14\nbasetype = \"Cy5\"\nbasehyb = 0\n```\n\n10. Run the code. A popup window will appear behind the Spyder window, asking you to choose the main data directory. Navigate to the folder where the images are and *select folder*. Next, a window will appear asking to choose the directory with the processed images and spots data. Navigate to the specific output folder where the hdf5 coordinates files are located. In this guide, with the provided example output, this would be the \u201c`split_fish_4FOVs_mag0_40_ssth0_80_<date>`\u201d folder. Select the folder and let the stitching program run. _**Note** For example dataset, field correction masks (estimated from all 49 FOVs) are not provided and may result in suboptimal stitcing output._\n\n#### SpotViewer\n\n11. **SpotViewer** can be used to open `.dax` and `.hdf5` image files, as well as `.hdf5` spot coordinate files for gene location visualization. Open the `spotViewer.py` script with Spyder and run the script. Click the **\u2018Raw images file\u2019** button, and select the `stitched.hdf5` file generated from the stitching code. Wait a moment for the stitched image to appear. You can then adjust the contrast of the image using the figure button. Click the **\u2018Genes file\u2019** button, and select the `coords_combined_merged_<date>.hdf5` file generated from the stitching code.\n\n12. Clicking on the **'View ALL Genes'** button will show all the genes in the `.hdf5` spot coordinate files; clicking on **'Show Genes'** will display the genes selected in the drop down menus.  Clicking on the **'Eraser'** button will remove all gene spots. Gene spot size can be adjusted in the **'SPOT SIZE'** field.\n\n13. The displayed image can be saved using the save button; hi-res images can be saved by using the **'Save Hi-res'** button. \n\n</details>\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9845701334157421,
      "result": {
        "original_header": "Main parameters",
        "type": "Text_excerpt",
        "value": "* **reference_colour**  \nThe reference colour to use for correcting distortion. All other colour channels will be distorted to match this channel. \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9889421425502538,
      "result": {
        "original_header": "Authors <a name=\"authors\"></a>",
        "type": "Text_excerpt",
        "value": "* **Nigel Chou** - *main contributor* - (https://github.com/chousn) \n* **Mike Huang** - *contributed initial stitching pipeline* - (https://github.com/mikejhuang) \n* **Vipul Singhal** - *contributed LHS implementation* - (https://github.com/vipulsinghal02) \n* **Wan Yi Seow** - *performed code testing and created documentation* - (https://github.com/seowwy) \n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KHChenLab/split-fish/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "**END-USER LICENSE AGREEMENT**\n\n**MULTIPLEXED FISH IMAGE ANALYSIS SOFTWARE**\n\nPLEASE READ THIS END-USER LICENSE AGREEMENT (\u201cEULA\u201d) CAREFULLY. BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING THE PROVIDED SOFTWARE (\u201cSOFTWARE\u201d AS DEFINED BELOW), YOU AGREE TO THE TERMS OF THIS EULA. IF YOU DO NOT AGREE, PLEASE DO NOT DOWNLOAD, INSTALL, COPY OR OTHERWISE USE THE SOFTWARE. \n\nThis EULA is a legal agreement between you (either an individual or, if acquired by or for an entity, an entity) and the Genome Institute of Singapore (\u201cGIS\u201d), for the Multiplexed FISH Image Analysis software that accompanies this EULA, which may include associated media, printed materials, \u201conline\u201d or electronic documentation, proprietary protocols and databases, and Internet-based services (\u201cSoftware\u201d).  The terms of this EULA shall govern your use of the Software, regardless of any terms that may appear in connection with your installation or use of the Software. \n\n**1.** **LICENSE GRANTS, RESTRICTIONS AND LIMITATIONS.** \n\n  **1.1**\t**Software License.**  GIS grants you a non-transferable and non-exclusive license to use the Software subject to all terms and conditions of this EULA, and to make and use an unlimited number of copies of the Software, provided that such copies shall only be used for non-commercial research purposes and are not to be republished or distributed (either in hard copy or in electronic form) beyond your academic or research institution.  You may use the Software only to reproduce the experimental results described in \u201cHighly Specific Multiplexed RNA Imaging in Tissues with Split-FISH\" Jolene Jie Lin Goh, Nigel Chou, Wan Yi Seow, Norbert Ha, Chung Pui Paul Cheng, Yun-Ching Chang, Ziqing Winston Zhao, Kok Hao Chen. Nature Methods. (2020) or to generate analysis results from your own experiments.  All rights not specifically granted to you by this EULA shall remain with GIS.  No rights are granted to you to sublicense, rent, or market the Software.  The Software is protected by copyright and other intellectual property laws and treaties. GIS or its suppliers own the title, copyright, and other intellectual property rights in the Software. The Software is licensed, not sold. No rights are granted to you under any patents, patent applications, trade secrets, or other proprietary rights.\n\n  **1.2** You may distribute the Software to faculty and staff solely for the use described in Section 1.1. You shall advise such faculty and/or staff that use of the Software is strictly governed by the terms and conditions of this EULA (regardless of any license agreement that may appear during an installation process) and is to be used solely pursuant to the use granted in Section 1.1 herein. Any faculty or staff who ceases its association with your academic or research institution shall not be permitted to use the Software without first obtaining a valid license for any such Software. \n\n  **1.3** **Open Source Software.** Certain Software products contain Open Source Software. Open Source Software is composed of a variety of individual software components, each of which has its own copyright and its own applicable license conditions. You must review the licenses within the individual packages to understand your rights under them. The relevant licenses can be found in the code repository\u2019s readme under the [citations](README.md#cite) section, together with a list of standard open-source packages used. \n\n  **1.4** **Restrictions.** Under the terms of this EULA you may not (i) rent, sell, lease, lend, license, sublicense, distribute or otherwise transfer in whole or in part the Software or accompanying documentation to any third party or to anyone who does not have its own valid license to the Software; (ii) provide, disclose, divulge or make available to, or permit use of the Software in whole or in part by, any third party without GIS\u2019s prior written consent or, to anyone who does not have its own valid license to the Software; or (iii) modify or create derivative works based upon the Software, including translating the Software into a different programming language. The Software may not be disclosed or used by anyone not affiliated with your academic or research institution, for any non-research or commercial purposes, and may not be used with any administrative computing use.  You shall not provide access, directly or indirectly, to the Software via the Web or any Internet application, or any file-sharing method or system.\n\n**2.** **EXPORT RESTRICTIONS.** You agree to comply with all applicable international and national laws that apply to the Software, including the U.S. Export Administration Regulations, as well as end-user, end-use, and destination restrictions issued by U.S. and other governments. \n\n**3.** **DISCLAIMER OF WARRANTIES.** TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, GIS AND ITS SUPPLIERS PROVIDE THE SOFTWARE AND SUPPORT SERVICES (IF ANY) AS IS AND WITH ALL FAULTS, AND HEREBY DISCLAIM ALL OTHER WARRANTIES AND CONDITIONS, WHETHER EXPRESS, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY IMPLIED WARRANTIES, DUTIES OR CONDITIONS OF MERCHANTABILITY, OF FITNESS FOR A PARTICULAR PURPOSE, OF RELIABILITY OR AVAILABILITY, OF ACCURACY OR COMPLETENESS OF RESPONSES, OF RESULTS, OF WORKMANLIKE EFFORT, OF LACK OF VIRUSES, AND OF LACK OF NEGLIGENCE, ALL WITH REGARD TO THE SOFTWARE, AND THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT OR OTHER SERVICES, INFORMATION, SOFTWARE, AND RELATED CONTENT THROUGH THE SOFTWARE OR OTHERWISE ARISING OUT OF THE USE OF THE SOFTWARE. ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION, OR NON-INFRINGEMENT WITH REGARD TO THE SOFTWARE. \n\n**4.** **EXCLUSION OF DIRECT, INCIDENTAL, CONSEQUENTIAL, AND CERTAIN OTHER DAMAGES.** TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL GIS OR ITS SUPPLIERS BE LIABLE FOR ANY DIRECT, SPECIAL, INCIDENTAL, PUNITIVE, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS OR CONFIDENTIAL OR OTHER INFORMATION, FOR BUSINESS INTERRUPTION, FOR PERSONAL INJURY, FOR LOSS OF PRIVACY, FOR FAILURE TO MEET ANY DUTY INCLUDING OF GOOD FAITH OR OF REASONABLE CARE, FOR NEGLIGENCE, AND FOR ANY OTHER PECUNIARY OR OTHER LOSS WHATSOEVER) ARISING OUT OF OR IN ANY WAY RELATED TO THE USE OF OR INABILITY TO USE THE SOFTWARE, THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT OR OTHER SERVICES, INFORMATION, SOFTWARE, AND RELATED CONTENT THROUGH THE SOFTWARE OR OTHERWISE ARISING OUT OF THE USE OF THE SOFTWARE, OR OTHERWISE UNDER OR IN CONNECTION WITH ANY PROVISION OF THIS EULA, EVEN IN THE EVENT OF THE FAULT, TORT (INCLUDING NEGLIGENCE), MISREPRESENTATION, STRICT LIABILITY, BREACH OF CONTRACT, OR BREACH OF WARRANTY OF GIS OR ANY SUPPLIER, AND EVEN IF GIS OR ANY SUPPLIER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. \n\n**5.** **GENERAL.** This EULA is governed by the laws of the Republic of Singapore. The United Nations Convention for the International Sale of Goods shall not apply. This EULA is the entire agreement between us and supersedes the terms of any purchase orders and any other communications or advertising with respect to the Software. The terms and conditions of any subsequent invoice, waiver, amendment or other such agreement used by GIS in connection with this EULA shall be considered valid and enforceable to the extent that such terms and conditions can be interpreted as consistent with this EULA. If such terms and conditions cannot be interpreted as consistent with this EULA, the terms of this EULA shall control. If any provision of this EULA is held invalid, the remainder of this EULA shall continue in full force and effect. This EULA may be modified only by written agreement signed by authorized representatives of you and GIS. \n\nAny translation of this License is done for local requirements and in the event of a dispute between the English and any non-English versions, the English version of this License shall govern.\n\n**CONTACT INFORMATION**\n\nIf you have any questions about this EULA, or if you want to contact GIS for any reason, please direct all correspondence to: **Genome Institute of Singapore, 60 Biopolis St, Singapore 138672**. E-mail: CHEN Kok Hao <chenkh@gis.a-star.edu.sg> and CHOU Shijie Nigel <Nigel_Chou@gis.a-star.edu.sg>\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/license.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License <a name=\"lic\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis"
        ],
        "type": "Text_excerpt",
        "value": "See full license [here](license.md).\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "split-fish"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "KHChenLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 480069,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 223298,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System requirements: <a name=\"sysreqs\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Prerequisites <a name=\"prereqs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "A computer that can run Python, with at least 16 GB of RAM. No non-standard hardware is required.\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Software requirements: <a name=\"softreqs\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Prerequisites <a name=\"prereqs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "1.\tSplit-FISH analysis package\n2.\tPython 3.7.3\n3.\tnumpy: 1.18.1\n4.\tpandas: 1.0.3\n5.\th5py: 2.9.0\n6.\tmatplotlib: 3.1.0\n7.\tseaborn: 0.10.0\n8.\tscikit-image: 0.16.2\n9.\tscikit-learn: 0.22.1\n10. scipy: 1.4.1\n11. probe design requires Matlab\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Specific Software Dependencies: <a name=\"depreqs\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Prerequisites <a name=\"prereqs\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "This software has been tested on the following versions of software packages:\n1.\tPython: 3.7.0, 3.7.3, 3.7.4\n2.\tSpyder: 3.3.6, 4.1.1\n3.\tnumpy: 1.15.1, 1.16.4, 1.16.5, 1.18.1\n4.\tpandas: 0.23.4, 0.24.2, 0.25.1, 1.0.3\n5.\th5py: 2.8.0, 2.9.0\n6.\tmatplotlib: 2.2.3, 3.1.0, 3.1.1\n7.\tseaborn: 0.9.0, 0.10.0\n8.\tscikit-image: 0.14.0, 0.15.0, 0.16.2\n9.\tscikit-learn: 0.19.2, 0.21.2. 0.21.3, 0.22.1\n10. scipy: 1.1.0, 1.4.1\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:49:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo <a name=\"demo\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Getting Started <a name=\"getstart\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "  \n1.\t**`MainScript.py`**   \nThis script analyzes multiplexed-FISH data. Requires example datasets <brain>.   **_Output:_**  The analysis script generates an output folder with the gene coordinates (`.hdf5` files), gene counts, and imagedata `.hdf5` files containing metadata and intermediate processing stage outputs. Plots comparing total counts to bulk FPKM values, visualizations of per-FOV FPKM correlation and counts on a grid, and tables of gene counts are saved in the `qc` folder within the `output` folder. A summary file is also generated.\n\n2.\t**`stitchMstClasses.py`**   \nThis script stitches together images and spot coordinate positions after analysis. Output from the main script is required. When run, this script will allow selection of the main data directory as well as the directory where the output of the main script is stored. The bit used for stitching should match the reference bit used for registration in the main script. **_Output:_**    A combined coordinates file of the gene spot coordinates (`coords_..._<date>.hdf5`) as well as a stitched image (`stitched.hdf5`) file. \n\n3.\t**`spotViewer.py`** \u2013 This simple GUI allows visualization of gene spot locations `coords_..._<date>.hdf5` overlaid on the stitched image `stitched.hdf5`, either for 4 genes at a time or for all genes. A stitched image file is required to view the spots.\n    \n <details><summary>click to view screenshot of SpotViewer</summary>\n   \n ![viewer](images/SpotViewer_screenshot.PNG)\n </details>\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Expected runtime <a name=\"runtime\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Getting Started <a name=\"getstart\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "`MainScript.py` took 7-8 minutes to run on the example dataset, while `stitchMstClasses.py` took less than 1 minute to run. Both analysis steps were done on a computer with Intel Core i7-6700 CPU @ 3.40GHz, 8 cores and 32GB RAM.\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Split-FISH manuscript figures <a name=\"figs\"></a>",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Getting Started <a name=\"getstart\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Scripts and data used for the manuscript figures can be found in the [splitFISH_manuscript_figures folder](splitFISH_manuscript_figures). When running the code, a dialog window will open up asking for the directory containing data. Select the main folder for each figure, e.g for Figure 1, navigate to [this folder](splitFISH_manuscript_figures/Figures/Figure1/).\n\nWhen using **Spyder** to run split-FISH_manuscript_figures:\n1. Go to tools > Preferences > Current working directory.\n2. Set the current working directory to the home folder of the split-FISH library.\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "This code uses the following packages that are included in the standard Anaconda distribution",
        "parent_header": [
          "Multiplexed FISH Image Analysis",
          "Citations and links to libraries utilized <a name=\"cite\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "* [NumPy](https://numpy.org/)\n* [Pandas](https://pandas.pydata.org/)\n* [SciPy](https://www.scipy.org/)\n* [scikit-image](https://scikit-image.org/)   \nA version of ```register_translation``` is included in the [\"utils\" folder](utils/registrationFunctions). This has been modified to output a value proportional to the size of the phase correlation peak (the original implemenation outputs a translation-invariant value). The main algorithm is unchanged. This modification is only used for stitching FOVs.\n* [scikit-learn](https://scikit-learn.org/stable/)\n* [matplotlib](https://matplotlib.org/)\n* [Seaborn](https://seaborn.pydata.org/)\n* [h5py](https://www.h5py.org/)\n* [pyQt5](https://pypi.org/project/PyQt5/)\n\n"
      },
      "source": "https://raw.githubusercontent.com/khchenLab/split-fish/master/README.md",
      "technique": "header_analysis"
    }
  ]
}