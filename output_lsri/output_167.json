{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YinanZhang522/SIEVE"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "type": "Text_excerpt",
        "value": "\tPlease contact us:\n\tYinanZhang:zhangyinan@ihcams.ac.cn\n\tPengWu:wupeng1@ihcams.ac.cn\n"
      },
      "source": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-22T02:55:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-22T04:28:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9943471976375552,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "   SIEVE is a strategy used for select highly Variable genes from single-cell RNA Seq data, based on random sampling for all single cells in a scRNA-seq dataset, SIEVE provides the reproducibility estimation for HVGs selection method and screens robust HVGs for the following analysis.\n \n"
      },
      "source": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YinanZhang522/SIEVE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YinanZhang522/SIEVE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YinanZhang522/SIEVE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Overview"
      },
      "source": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing SIEVE",
        "type": "Text_excerpt",
        "value": "\t\tif (!requireNamespace(\"devtools\", quietly = TRUE)) install.packages(\"devtools\")\n\t\tdevtools::install_github(\"YinanZhang522/SIEVE\")\n"
      },
      "source": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YinanZhang522/SIEVE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SIEVE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YinanZhang522"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8698,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:00:13",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Fetch_cells: It's a function using for fetch cell subsets with the random sampling strategy. \nUsers should provide a gene expression dataframe.Rows should be genes and columns should be cells. \n\t\tYou can choose the proportion of the cell subset.To ensure the accuracy of subsequent analysis results, \n\tyou should consider the size and the composition of your dataset, to make sure that the proportion of the cell subset can covered every cell type, \n\tthe default value of ratio is set to 0.7, but can also be set to other values between 0 to 1. \n\t        You can also choose the times of subsampling according to the size of dataset and the computing time. The default value of n is set to 50. \n   \n\t\tusage: fetch_cells(expr,ratio=0.7,n=50)\n\t\tparam expr: The expression dataframe. Rows should be genes and columns should be cells.\n\t\tparam ratio: the Proportion of cell subset.The default value of ratio is set to 0.7, but can also be set to other values between 0 to 1.\n\t\tparam n: The times of subsampling.The default value of n is set to 50.  \n\n  \nFetch_HVGs(Fetch_HVGs_seurat): It's a function using for fetch the variable genes of cell subsets by different methods.\n\t\tUsers should provide a gene expression dataframe(or a seurat object), both raw counts and normalized data are supported. \n\t\tRows should be genes and columns should be cells. \n\t\tThe feature selecting methods can be choosing from singleCellHaystack, Scmap, Scran, ROGUE, M3Drop, Seurat(vst,disp,SCTransform).\n\t\tAccording to the type of data, \n\tif your data is a raw counts matrix, method should be chosen from \"M3Drop\",\"ROGUE\",\"Scran\",\"Scmap\".\n\tIf your data is a normalized matrix, method should be chosen from \"schs\"(singleCellHaystack),\"Seurat_vst\",\"Seurat_disp\",\"Seurat_sct\",\"ROGUE\".\n\t\t\t\t\n\t\tusage fetch_HVGs(dataframe,celllist,method=method,n=50)\n\t\tparam dataframe: A gene expression dataframe, can be raw counts or normalized data, rows should be genes, columns should be cells.\n\t\tparam celllist: A matrix returned from fetch_cells\n\t\tparam method: the method used to fetch the variable genes,\n\t\t              if your data is a raw counts matrix, method should be chosen from \"M3Drop\",\"ROGUE\",\"Scran\",\"Scmap\".\n                              if your data is a normalized matrix, method should be chosen from \"schs\"(singleCellHaystack),\"Seurat_vst\",\"Seurat_disp\",\"Seurat_sct\",\"ROGUE\".\n\t\tparam n: The number of feature genes.The default value of n is set to 2000.\n\n\nSIEVE: It's a function using for find the high frequency genes of gene sets defined by different method. \n\t\tUsers should provide a genelist matrix.Rows should be genes and columns should be different batches. \n\t\tYou can set the minimum number of repetitions of a gene. \n\n\t\tusage: SIEVE(genelist,n=50)\n\t\tparam genelist The gene sets matrix. Rows should be genes and columns should be different batches.\n\t\tparam n: The minimum number of repetitions of a gene.\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/YinanZhang522/SIEVE/main/README.md",
      "technique": "header_analysis"
    }
  ]
}