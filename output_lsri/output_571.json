{
  "application_domain": [
    {
      "confidence": 15.66,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite:",
        "type": "Text_excerpt",
        "value": "Zhang, Mengqi, et al. \"Incorporating external information to improve sparse signal detection in rare\u2010variant gene\u2010set\u2010based analyses.\" Genetic epidemiology 44.4 (2020): 330-338.\n\nZhang, Mengqi, et al. \"Focused goodness of fit tests for gene set analyses.\" Briefings in bioinformatics 23.1 (2022): bbab472.\n\n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "type": "Text_excerpt",
        "value": "Berk, R. H., & Jones, D. H. (1979). Goodness-of-fit test statistics that dominate the Kolmogorov statistics. Zeitschrift F\u00fcr Wahrscheinlichkeitstheorie Und Verwandte Gebiete, 47(1), 47\u201359.\n\nDonoho, D., & Jin, J. (2004). Higher criticism for detecting sparse heterogeneous mixtures. The Annals of Statistics, 32(3), 962\u2013994. \n\nDonoho, D., & Jin, J. (2008). Higher criticism thresholding: Optimal feature selection when useful features are rare and weak. Proceedings of the National Academy of Sciences, 105(39), 14790\u201314795. \n\nEinmahl, J. H. J., & Mckeague, I. W. (2003). Empirical likelihood based hypothesis testing. Bernoulli, 9(2), 267\u2013290. \n\nStorey, J. D. (2003). The Positive False Discovery Rate: A Bayesian Interpretation and the q-Value. The Annals of Statistics, 31(6), 2013\u20132035.\n\nWellner, J. A., & Koltchinskii, V. (2003). A Note on the Asymptotic Distribution of Berk\u2014Jones Type Statistics under the Null Hypothesis. In J. Hoffmann-J\u00f8rgensen, J. A. Wellner, & M. B. Marcus (Eds.), High Dimensional Probability III (pp. 321\u2013332). \n\n\n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mqzhanglab/wHC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-27T15:12:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-22T22:06:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9900737543717959,
      "result": {
        "original_header": "weighted Goodness-of-fit tests / Higher Criticism Instruction",
        "type": "Text_excerpt",
        "value": "This package is used for the application of the weighted Goodness-of-fit tests / higher criticism on the given gene sets. It provides codes that is able to calculate the pvalues based on single fisher exact tests or the stratified CMH tests (Epstein, M. P., Allen, A. S., & Satten, G. A. ,2007). \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9131602904973642,
      "result": {
        "original_header": "2. P-value Calculation",
        "type": "Text_excerpt",
        "value": "Then pvalues is calculated based on fisher exact tests (if exact_option=TRUE) or cmh test.It can also calculated the permutated pvalues based on mismatching the phenotype labels to genotypes subjects when the parameter nperm, the number of permutation, is greater than 0. \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9396828257240161,
      "result": {
        "original_header": "3. Weight Generation",
        "type": "Text_excerpt",
        "value": "example:\n```{r w_centrality}\nlibrary(\"igraph\")\ninteract_m=matrix(rbinom(100000,1,0.3),100,100)\ndeg=get_centrality(interact_m,w_option=\"deg\",direct_option=FALSE,mode_option=\"all\") #for degree\nclosn=get_centrality(interact_m,w_option=\"closn\",direct_option=FALSE,mode_option=\"all\") #for closeness\nbetn=get_centrality(interact_m,w_option=\"betn\",direct_option=FALSE,mode_option=\"all\") # for betweenness\neigen=get_centrality(interact_m,w_option=\"eigen\",direct_option=FALSE,mode_option=\"all\") #for eigenvector centrality\npage_rank=get_centrality(interact_m,w_option=\"pagerank\",direct_option=TRUE,mode_option=\"all\") #for pagerank centrality\n``` \nTo be more specifically, we extract genes and all of their interactions reported in human beings from biogrid and gets the networks from the MSigDB (gmt format). \nGet gene expression data of specific tissues from GTEx \nAnd we can match those prior information to the given gene set from collection of [MSigDB](http://software.broadinstitute.org/gsea/msigdb) \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8907048864288477,
      "result": {
        "original_header": "4. Weighted Higher Criticism Calculation",
        "type": "Text_excerpt",
        "value": "The weight can be converted from the external information according to w=1/(a x prior_info+b x mean(prior_info)). It is then scaled into mean(w)=1. Here we take a=0.95 and b=0.05. \nThen the weighted pvalues is calculated and curved based on the cdf functions.\nexample:\n```{r cal_cdf}\npval=matrix(nrow=w0,ncol=5)\npval=as.matrix(apply(pval,2,function(x){return(runif(length(w0),0,1))}))\npwval=cal_cdf(pval,w=w0)\n``` \nFinally, the higher criticism can be applied to the pvalues. Each colum represents a set of pvalues from the corresponding set of genes, and will return a single higher criticism score through our method.\nexample:\n```{r hc_cal}\nhc_cal(pwval,t0ratio=0.4)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9314066076510297,
      "result": {
        "original_header": "5. Step-down minP calculation",
        "type": "Text_excerpt",
        "value": "The function sdminp calculates the Step Down minP method. It implement the improved step-down minP algorithm by Ge et al, 2003 (box 4)\nThe input is a vector of observed p-values ob, and a matrix with each colum is a permuated p-values.  Each row of the matrix represents the genes consistent with the observed pvalues and each column of the matrix represents the permutated iterations.\nIt returns a numeric vector adjusted pvalues.\nexample:\n```\nob=rnorm(10,2,2)\nperm=matrix(rnorm(100,2,2),ncol=10,nrow=10)\nsdminp(ob,perm)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mqzhanglab/wHC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mqzhanglab/wHC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mqzhanglab/wHC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "weighted Goodness-of-fit tests / Higher Criticism Instruction"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "0. Installation",
        "type": "Text_excerpt",
        "value": "```\n# install.packages(\"devtools\")\ndevtools::install_github(\"mqzhanglab/wHC\")\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Data Preparation",
        "type": "Text_excerpt",
        "value": "The genotype matrix has the format that each row represents a gene and each column represents a subject.The rownames can be the standard gene symbols or the Ensembl ID. Each element of the genotype matrix should be 0 (reference) or 1 (variant).\n\nThe phenotype data should be the vector which matches the order of subjects of the genotype matrix, with the element as  0 (control) or 1 (case).\n\nexample:\n```{r data_preparation}\nlibrary(\"wHC\")\npheno=rbinom(100,1,0.5)\ngeno=matrix(rbinom(2000,1,0.1),nrow=20,ncol=100)\n```\n\nIf the stratified CMH tests are applied, besides the genotype and phenotype, we still needs the external sample informations, for the population stratification estimation. This information will have each rows represents the subjects and match the order of subjects of the phenotypes. Refer (Epstein, M. P., Allen, A. S., & Satten, G. A. ,2007) for more details.\n\nexample:\n```{r data_prep}\ncur_pc=rbind(matrix(rnorm(500,0,1),ncol=10,nrow=50),matrix(rnorm(500,0.5,1),ncol=10,nrow=50))\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "2. P-value Calculation",
        "type": "Text_excerpt",
        "value": "example:\n```{r pval_strata}\nstrata=strat_score_cal_glm(pheno,cur_pc)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8356928903409743,
      "result": {
        "original_header": "3. Weight Generation",
        "type": "Text_excerpt",
        "value": "example:\n```{r w_genic_intolerance}\ngenic_intolerance=get_genic_intolerance()\n``` \nexample:\n```{r w_expression}\nprior_expression=get_gene_expression(gene_label=\"symbols\",tissue=c(\"Liver\",\"Lung\"),comb=\"mean\")\nprior_expression=get_gene_expression()\n``` \nexample:\n```{r w_gene_length}\nprior_length=get_gene_length(gene_label=\"symbols\",comb=\"median\")\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "4. Weighted Higher Criticism Calculation",
        "type": "Text_excerpt",
        "value": "example:\n```{r w_trans}\nw0=trans_w(prior_gi)\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mqzhanglab/wHC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wHC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mqzhanglab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 41160,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 4329,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mqzhanglab/wHC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 01:26:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}