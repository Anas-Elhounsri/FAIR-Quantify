{
  "application_domain": [
    {
      "confidence": 22.44,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/galaxy001/pirs"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2013-05-30T02:37:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-04T16:19:26Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "profile basd Illumina pair-end Reads Simulator"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1 Introduction",
        "type": "Text_excerpt",
        "value": "pIRS is a program for simulating paired-end reads from a reference genome.  It\nis optimized for simulating reads similar to those generated from the Illumina\nplatform.\n\nSee `INSTALL' for installation instructions.\n\nThere are two subcommands: `pirs simulate' and `pirs diploid'.  See section 3\nfor more details, or run `pirs simulate -h' or `pirs diploid -h'.\n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9542349331962061,
      "result": {
        "original_header": "2 Program framework",
        "type": "Text_excerpt",
        "value": "  2.1 Profile Generator\n    Six tools are supplied. SOAP2 or BWA, soap.coverage (http://soap.genomics.org.cn/soapaligner.html) \n  are required. The full process is shown in getprofile.sh.example as an example.\n    2.1.1 GC%-Depth Profile Stat.\n      a). Run soap and soap.coverage to get .depth single file(s). gzip is OK to over it.\n      b). Run gc_coverage_bias on all depth single files. You will get gc-depth stat by 1 GC% and other files.\n      c). Run gc_coverage_bias_plot on the gc-depth stat file. You'll get PNG plot and a .gc file by 5 GC%.\n      d). Manually check the .gc file for any abnormal levels due to the lower depth on certain GC% windows.\n    2.1.2 Base-Calling Profile Stat:\n      a). Run soap or bwa to get .{soap,single} or .sam file(s).\n      b). Run error_matrix_calculator on those file(s). You will get *.{count,ratio}.matrix .\n      c). You can use error_matrix_merger to merge several .{count,ratio}.matrix files.\n         However, it is up to you to keep the read length matches.\n    2.1.3 InDel Profile Stat:\n      a). Choose samples with NO polymorphism InDel, such as the Coliphage samples that shipped with Illumina Sequencers.\n      b). Run bwa to get .sam/.bam file.\n      c). Run indelstat_sam_bam to get the profile.\n    2.1.4 Insert size & mapping ratio stat:\n      a). Run soap or bwa to get .{soap,single} or .sam file(s).\n      b). Run alignment_stator *.\n         * alignment_stator cannot stat. mapping ratio for sam files now.\n  2.2 Simulator\n    Two commands:\n    pirs diploid: use for generating diploid genome sequence. Read the input genome sequence and \n                  then simulate SNP, InDel, SV(structure variation) on it. At last, output the \n                  result genome sequence.\n    pirs simulate: use for simulating Illumina data, output PE-read file.\n    Note:\n      a) If you only want to simulate the diploid genome sequence, \"pirs diploid\" is enough.\n      b) If you want to simulate sequencing data of haploid genome, only you need is \"pirs simulate\".\n      c) If you want to simulate sequencing data of diploid genome, you first need to run \"pirs diploid\" \n         to get the other diploid genome sequence, and then run \"pirs simulate\" using both the original \n         genome sequence and the previous output sequence as the input.\n \n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9638345155772182,
      "result": {
        "original_header": "5 Output file format",
        "type": "Text_excerpt",
        "value": "    FASTQ files containing the simulated reads.  The files are given names\n    similar to PREFIX_70_800_1.fq, where PREFIX is the prefix provided by the -o\n    option (default: \"pirs_reads\"), 70 is the read length, 800 is the mean\n    insert length, and 1 means the file for read 1 of the read pairs.  These\n    files will be written as GZIP files with the .gz suffix if you provide the\n    `-c gzip' option. \n    Information about each simulated read.\n    \n    Column 1: reads ID.\n    Column 2: Name of the reference file; this is mainly provided so that you\n              tell which chromosome set a read came from if you simulate reads\n              from a diploid genome produced with the `pirs diploid' command.\n    Column 3: FASTA/FASTQ sequence ID of the contig/scaffold/chromosome.\n    Column 4: position(1-based) in chromosome.\n    Column 5: \"+\" forward direction; \"-\" reverse direction.\n    Column 6: real insert size.\n    Column 7: length of read-end masking by EAMSS algorithm.\n    Column 8: read-position(1-based) of substitution error and raw base(->)error base.\n    Column 9: read-position(1-based) of insertion error and the base of insertion.\n    Column 10: read-position(1-based) of deletion error and the base of deletion \n  c) *_snp.lst\n    For example:\n    \n      I\t3\t3\tG\tA \n      I\t45342\t45355\tC\tT \n      I\t104775\t104680\tC\tT\n      .....\n    Column 1: chromosome sequence ID.\n    Column 2: position(1-based) of SNP in reference chromosome.\n    Column 3: position(1-based) of SNP in simulated diploid chromosome.\n    Column 4: base of reference chromosome sequence.\n    Column 5: the base of SNP. \n  d) *_indel.lst\n    For example:\n      I  - 3 1 C\n      IV + 5 2 AC\n      .....\n    Column 1: chromosomesequence ID.\n    Column 2: \"-\" Deletion; \"+\" Insertion.\n    Column 3: position(1-based) of InDel in the reference chromosome sequence.\n              For deletions, it is the position of the first deleted base.  For\n              insertions, it is the position of the reference base corresponding\n              to the base directly before the insertion. \n    Column 4: position(1-based) of InDel in the diploid sequence.  For\n              deletions, it is the position of the diploid sequence base\n              corresponding to the reference base directly before the deletion.\n              For insertions, it is the position of the first inserted base.\n    Column 5: length of InDel (always positive).\n    Column 6: sequence of the InDel. \n      I - 3 3 1 C\n      Ref: a t G c a // 3 is the position of G base in the chromosome base.\n         : a t G - a // following the G base is a deletion of \"C\" base.\n      IV + 5 5 2 A C\n      Ref: t t g c A - - g t t// 5 is the position of A base in the chromosome base.\n         : t t g c A A C g t t// following the A base is a insertion of \"AC\" bases. \n  e) *_inversion.lst\n    For example:\n      I\t50191\t50195\t100 \n      I\t948984\t948903\t200\n    Column 1: chromosome sequence ID.\n    Column 2: position(1-based) of beginning of inversion in the reference\n              chromosome sequence.\n    Column 3: position(1-based) of beginning of inversion of the diploid\n              chromosome sequence.\n    Column 3: length of inversion.\n \n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9746076583621394,
      "result": {
        "original_header": "6 Notes",
        "type": "Text_excerpt",
        "value": "  a) pIRS does not simulate reads containing \"N\" char.  If your input reference\n     contains the \"N\" character, reads generated in this in this region will be\n     discarded.\n  b) When running a simulation without the --no-subst-errors option, the maximum\n     length of the simulated reads depends on the number of cycles recorded in\n     the base-calling profile.  The user must set the read length to no more\n     than half the number of cycles recorded in the base-calling profile.\n  c) When masking quality values, the program uses the same EAMSS algorithm\n     from CASAVA v1.8.0.  This is only done if the --eamss option is supplied.\n  d) The program parses one chromosome at a time.  Reads are evenly distributed\n     among the chromosomes.\n  e) To re-do a simulation and get the exact same results, you must set the\n     random seed with the -S parameter.  In addition, you must use the\n     single-threaded version of pIRS, or else set --threads=4 (for only one\n     simulator thread).\n  f) pIRS will shift quality values when the substitution-error rate setting by\n     user is different from that in profile. The quality score in the output\n     data range from 2 to the maximum score of profile.  You can find the real\n     substitution-error rate of output data in file *.error_rate.distr.\n  \n  For update & support, please refer to http://code.google.com/p/pirs/ .\n \n \n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/galaxy001/pirs/wiki"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/galaxy001/pirs/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/galaxy001/pirs/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "galaxy001/pirs"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Contents"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/galaxy001/pirs/master/src/srclean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/galaxy001/pirs/master/src/genauto.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.90283775065794,
      "result": {
        "original_header": "5 Output file format",
        "type": "Text_excerpt",
        "value": "  a) *.fq/*.fq.gz \n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8185926691157309,
      "result": {
        "original_header": "5 Output file format",
        "type": "Text_excerpt",
        "value": "      @read_800_21/1\n      ACGGAAAAGTTACGCTATCGCATGCGTGTAAGAACACTGCTCCTACGCCCATTTTATCGATGGCGCCCAG\n      +\n      egcggdggfgfgggggfeggggYbcgegfgggbggg^e]egfegggfbSeggdggegg`^eJgggcbEeb\n      @read_800_22/1\n      CACGGGGGGACTTTATTTAATGAGCGGCTGTAACTTGGTCCGTCGTTTGAGAGGGGACACCTCATATGAT\n      +\n      gggggegcgeggggcgfcgc_gf_ggfefcgVgegcfcdgf`geggdd[ge`ggafeggggdgdgee^gg\n    \n  b) *.read.info \n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/galaxy001/pirs/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pirs"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "galaxy001"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 221432,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 108642,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 31433,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 4228,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 2414,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 974,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/galaxy001/pirs/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "galaxy001",
          "type": "User"
        },
        "date_created": "2016-08-14T05:10:03Z",
        "date_published": "2016-08-16T08:52:27Z",
        "description": "ver. 2.0.2\n\nmodified: baseCalling_Matrix_calculator.pl, add filter by min MAPQ.\n\nPlease do NOT use zip file as we use symbolic links.\n",
        "html_url": "https://github.com/galaxy001/pirs/releases/tag/v2.0.2",
        "name": "pIRS 2.0.2",
        "release_id": 3895181,
        "tag": "v2.0.2",
        "tarball_url": "https://api.github.com/repos/galaxy001/pirs/tarball/v2.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/galaxy001/pirs/releases/3895181",
        "value": "https://api.github.com/repos/galaxy001/pirs/releases/3895181",
        "zipball_url": "https://api.github.com/repos/galaxy001/pirs/zipball/v2.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "galaxy001",
          "type": "User"
        },
        "date_created": "2015-01-24T13:00:33Z",
        "date_published": "2015-01-24T13:07:40Z",
        "description": "ver. 2.0.1\n\nmodified: baseCalling_Matrix_merger.pl, now can read both pre-2.0.0 and 2.0.1 files.\n\nPlease do NOT use zip file as we use symbolic links.\n",
        "html_url": "https://github.com/galaxy001/pirs/releases/tag/v2.0.1",
        "name": "pIRS 2.0.1",
        "release_id": 880998,
        "tag": "v2.0.1",
        "tarball_url": "https://api.github.com/repos/galaxy001/pirs/tarball/v2.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/galaxy001/pirs/releases/880998",
        "value": "https://api.github.com/repos/galaxy001/pirs/releases/880998",
        "zipball_url": "https://api.github.com/repos/galaxy001/pirs/zipball/v2.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "galaxy001",
          "type": "User"
        },
        "date_created": "2014-10-11T18:43:38Z",
        "date_published": "2014-10-11T19:10:47Z",
        "description": "ver. 2.0.0\n\nPlease do NOT use zip file as we use symbolic links.\n",
        "html_url": "https://github.com/galaxy001/pirs/releases/tag/v2.0",
        "name": "pIRS 2.0.0",
        "release_id": 620067,
        "tag": "v2.0",
        "tarball_url": "https://api.github.com/repos/galaxy001/pirs/tarball/v2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/galaxy001/pirs/releases/620067",
        "value": "https://api.github.com/repos/galaxy001/pirs/releases/620067",
        "zipball_url": "https://api.github.com/repos/galaxy001/pirs/zipball/v2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "galaxy001",
          "type": "User"
        },
        "date_created": "2014-10-07T12:04:13Z",
        "date_published": "2014-10-11T19:13:31Z",
        "description": "ver. 1.1.1\n\nPlease use ONLY the tar.gz file as it contains symbolic links.\n\nAlso, backup v1.10 from Google Code site.\n",
        "html_url": "https://github.com/galaxy001/pirs/releases/tag/v1.11",
        "name": "pIRS 1.1.1",
        "release_id": 620071,
        "tag": "v1.11",
        "tarball_url": "https://api.github.com/repos/galaxy001/pirs/tarball/v1.11",
        "type": "Release",
        "url": "https://api.github.com/repos/galaxy001/pirs/releases/620071",
        "value": "https://api.github.com/repos/galaxy001/pirs/releases/620071",
        "zipball_url": "https://api.github.com/repos/galaxy001/pirs/zipball/v1.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "galaxy001",
          "type": "User"
        },
        "date_created": "2012-04-02T15:09:44Z",
        "date_published": "2014-10-12T08:40:38Z",
        "description": "ver. 1.0.1\n\nPlease use ONLY the tar.gz file as it contains symbolic links.\n",
        "html_url": "https://github.com/galaxy001/pirs/releases/tag/v1.01",
        "name": "pIRS 1.0.1",
        "release_id": 620506,
        "tag": "v1.01",
        "tarball_url": "https://api.github.com/repos/galaxy001/pirs/tarball/v1.01",
        "type": "Release",
        "url": "https://api.github.com/repos/galaxy001/pirs/releases/620506",
        "value": "https://api.github.com/repos/galaxy001/pirs/releases/620506",
        "zipball_url": "https://api.github.com/repos/galaxy001/pirs/zipball/v1.01"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 02:32:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 26
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "3 Usage",
        "type": "Text_excerpt",
        "value": " pirs <command> [option]\n    diploid     generate diploid genome.\n    simulate    simulate Illumina reads.\n\n  3.1 pirs diploid\n\tUsage: pirs diploid [OPTIONS...] REFERENCE\n\n\tSimulate a diploid genome by creating a copy of a haploid genome with\n\theterozygosity introduced.  REFERENCE specifies a FASTA file containing\n\tthe reference genome.  It may be compressed (gzip).  It may contain multiple\n\tsequences (scaffolds or chromosomes), each marked with a separate FASTA tag\n\tline.  The introduced heterozygosity takes the form of SNPs, indels, and\n\tlarge-scale structural variation (insertions, deletions and inversions).\n\tIf REFERENCE is '-', the reference sequence is read from stdin, but it must be\n\tuncompressed.\n\n\tThe probabilities of SNPs, indels, and large-scale structural variation can be\n\tspecified with the '-s', '-d', and '-v' options, respectively.  You can also\n\tset the ratio of transitions to transversions (for SNPs) with the '-R' option.\n\n\tIndels are split evenly between insertions and deletions. The length\n\tdistribution of the indels is as follows and is derived from panda\n\tre-sequencing data:\n\t\t1bp\t64.82%\n\t\t2bp\t17.17%\n\t\t3bp\t7.20%\n\t\t4bp\t7.29%\n\t\t5bp\t2.18%\n\t\t6bp\t1.34%\n\n\tLarge-scale structural variation is split evenly among large-scale insertions,\n\tdeletions, and inversions.  By default, the length distribution of these\n\tlarge-scale features is as follows:\n\t\t100bp\t70%\n\t\t200bp\t20%\n\t\t500bp\t7%\n\t\t1000bp\t2%\n\t\t2000bp\t1%\n\n\t`pirs diploid' does not use multiple threads, even if pIRS was configured with\n\t--enable-multiple threads.\n\n\tOPTIONS:\n\t  -s, --snp-rate=RATE    A floating-point number in the interval [0, 1] that\n\t\t\t\t   specifies the heterozygous SNP rate.  Default: 0.001\n\n\t  -d, --indel-rate=RATE  A floating-point number in the interval [0, 1] that\n\t\t\t\t   specifies the heterozygous indel rate.\n\t\t\t\t   Default: 0.0001\n\n\t  -v, --sv-rate=RATE     A floating-point number in the interval [0, 1] that\n\t\t\t\t specifies the large-scale structural variation\n\t\t\t\t (insertion, deletion, inversion) rate in the diploid\n\t\t\t\t   genome. Default: 0.000001\n\n\t  -R, --transition-to-transversion-ratio=RATIO\n\t\t\t\t In a SNP, a transition is when a purine or pyrimidine\n\t\t\t\t   is changed to one of the same (A <=> G, C <=> T)\n\t\t\t\t   while a transversion is when a purine is changed\n\t\t\t\t   into a pyrimidine or vice-versa.  This option\n\t\t\t\t   specifies a floating-point number RATIO that gives\n\t\t\t\t   the ratio of the transition probability to the\n\t\t\t\t   transversion probability for simulated SNPs.\n\t\t\t\t   Default: 2.0\n\n\t  -o, --output-prefix=PREFIX\n\t\t\t\t Use PREFIX as the prefix of the output file and logs.\n\t\t\t\t   Default: \"pirs_diploid\"\n\n\t  -O, --output-file=FILE\n\t\t\t\tUse FILE as the name of the output file. Use '-'\n\t\t\t\t   for standard output; this also moves the\n\t\t\t\t   informational messages from stdout to stderr.\n\n\t  -c, --output-file-type=TYPE\n\t\t\t\t The string \"text\" or \"gzip\" to specify the type of\n\t\t\t\t   the output FASTA file containing the diploid copy\n\t\t\t\t   of the genome, as well as the log files.\n\t\t\t\t   Default: \"text\"\n\n\t  -n, --no-logs          Do not write the log files.\n\n\t  -S, --random-seed=SEED Use SEED as the random seed. Default:\n\t\t\t\t   time(NULL) * getpid()\n\n\t  -q, --quiet            Do not print informational messages.\n\n\t  -h, --help             Show this help and exit.\n\n\t  -V, --version          Show version information and exit.\n\n\tEXAMPLE:\n\t  ./pirs diploid ref_sequence.fa -s 0.001 -d 0.0001 -v 0.000001\\\n\t\t\t -o ref_sequence >pirs.out 2>pirs.err\n      \n  3.2 pirs simulate\n\n\tUsage: ./pirs simulate [OPTION]... REFERENCE.FASTA...\n\n\tpIRS is a program for simulating paired-end reads from a genome.  It is\n\toptimized for simulating reads from the Illumina platform.  The input to\n\tpIRS is any number of reference sequences. Typically you would just provide\n\tone FASTA file containing your reference sequence, but you may provide two\n\tif you have generated a diploid sequence with `pirs diploid', or if you have\n\tchromosomes split up into multiple FASTA files.  The output of pIRS is two\n\tFASTQ files containing the simulated paired-end reads, as well as several log\n\tfiles.\n\n\tInput sequences are assumed to be haploid.  If you instead want to simulate\n\treads from a diploid genome, you must give the --diploid option so that\n\tthe diploidy is taken into account when computing coverage.  If you do\n\tnot do this, you will get twice as many reads as you wanted.\n\n\tpIRS simulates a normally-distributed insert (fragment) length using the\n\tBox-muller method.  Usually you want the insert length standard deviation to\n\tbe 1/20 or 1/10 of the insert length mean (see the -m and -v options).\n\tThis program also simulates Illumina sequencing error, quality score and\n\tGC bias based on empirical distribution profiles. Users may use the default\n\tprofiles in this package, which are generated by large real sequencing data,\n\tor they may generate their own profiles.\n\n\tOPTIONS:\n\t  -l LEN, --read-len=LEN\n\t\t\tGenerate reads having a length of LEN.  Default: 100\n\n\t  -x VAL, --coverage=VAL\n\t\t\t Set the average sequencing coverage (sometimes called depth).\n\t\t\t It may be either a floating-point number or an integer.\n\n\t  -m LEN, --insert-len-mean=LEN\n\t\t\t Generate inserts (fragments) having an average length of LEN.\n\t\t\t Default: 180\n\n\t  -v LEN, --insert-len-sd=LEN\n\t\t\t Set the standard deviation of the insert (fragment) length.\n\t\t\t Default: 10% of insert length mean.\n\n\t  -j, --jumping, --cyclicize\n\t\t\t Make the paired-end reads face away from either other, as\n\t\t\t in a jumping library.  Default: the reads face towards each\n\t\t\t other.\n\n\t  -d, --diploid\n\t\t\t This option asserts that reads are being simulated from a\n\t\t\t diploid genome.  It causes the program to abort if there\n\t\t\t are not exactly two reference sequences; in addition, the\n\t\t\t coverage is divided in half, since the two reference\n\t\t\t sequences are in reality the same genome.  This option\n\t\t\t is not required to simulate diploid reads, but you must\n\t\t\t set the coverage correctly otherwise (it will be half\n\t\t\t as much as you think).\n\n\t  -B FILE, --base-calling-profile=FILE, --subst-error-profile=FILE\n\t\t\t Use FILE as the base-calling profile.  This profile will be\n\t\t\t used to simulate substitution errors.  Default:\n\t\t\t PREFIX/share/pirs/Base-Calling_Profiles/humNew.PE100.matrix.gz\n\n\t  -I FILE, --indel-error-profile=FILE, --indel-profile=FILE\n\t\t\t Use FILE as the indel-error profile.  This profile will be\n\t\t\t used to simulate insertions and deletions in the reads that\n\t\t\t are artifacts of the sequencing process.  Default:\n\t\t\t PREFIX/share/pirs/InDel_Profiles/phixv2.InDel.matrix\n\n\t  -G FILE, --gc-bias-profile=FILE, --gc-content-bias-profile=FILE\n\t\t\t Use FILE as the GC content bias profile.  This profile will\n\t\t\t adjust the read coverage based on the GC content of\n\t\t\t fragments.  Defaults:\n\t\t\t PREFIX/share/pirs/GC-depth_Profiles/humNew.gcdep_100.dat,\n\t\t\t PREFIX/share/pirs/GC-depth_Profiles/humNew.gcdep_150.dat,\n\t\t\t PREFIX/share/pirs/GC-depth_Profiles/humNew.gcdep_200.dat,\n\t\t\t depending on the mean insert length.\n\n\t  -e FILE, --error-rate=RATE, --subst-error-rate=RATE\n\t\t\t Set the substitution error rate.  The base-calling profile\n\t\t\t will still be used, but the average frequency of errors will\n\t\t\t be changed to RATE.  Set to 0 to disable substitution errors\n\t\t\t completely.  In that case, the base-calling profile will not\n\t\t\t be used.  Default: default error rate of base-calling\n\t\t\t profile.\n\n\t\t\t Note: since pIRS parameterizes the error rate by\n\t\t\t several parameters, it is very difficult to determine exactly\n\t\t\t what needs to be done to make the error rate be a given\n\t\t\t value.  We try to adjust the probabilities of getting each\n\t\t\t quality score in order to accomodate the user-supplied error\n\t\t\t rate.  However, depending on your input sequences, the actual\n\t\t\t error rate simulated by pIRS could be off by 20% or more.\n\t\t\t Please check the informational output to see the final error\n\t\t\t rate that was actually simulated.\n\n\t  -A ALGO, --substitution-error-algorithm=ALGO, --subst-error-algo=ALGO\n\t\t\t Set the algorithm used for simulating substitition errors.\n\t\t\t It may be set to the string \"dist\" or \"qtrans\".  The\n\t\t\t default is \"qtrans\".\n\n\t\t\t The \"dist\" algorithm looks up the substitution error rate\n\t\t\t for each base pair based on the current cycle and the true\n\t\t\t base.  This lookup produces a quality score and a called base\n\t\t\t that may or may not be the same as the true base.  In the\n\t\t\t base-calling profile, the matrix we use is marked as the\n\t\t\t [DistMatrix].\n\n\t\t\t The \"qtrans\" algorithm is a Markov-chain model based on the\n\t\t\t previous quality score and current cycle.  The next quality\n\t\t\t score is looked up with a certain probability based on these\n\t\t\t parameters.  The matrix used for this is marked as\n\t\t\t [QTransMatrix] in the base-calling profile. Then, the the\n\t\t\t DistMatrix is used to find a called base for the quality score.\n\t\t\t The DistMatrix is also used to call the base in the first\n\t\t\t cycle.\n\n\t  -M MODE, --mask=MODE, --eamss=MODE\n\t\t\t Use the EAMSS algorithm for masking read quality.  MODE may be\n\t\t\t the string \"quality\" or \"lowercase\".  The EAMSS algorithm\n\t\t\t identifies low-quality, GC-rich regions near the ends of reads.\n\t\t\t \"quality\" mode will change the quality scores on these\n\t\t\t regions to (2 + quality_shift), while \"lowercase\" mode\n\t\t\t will change the base pairs to lower case, but not change\n\t\t\t the quality values.  Default: Do not use EAMSS.\n\n\t  -Q VAL, --quality-shift=VAL, --phred-offset=VAL\n\t\t\t Set the ASCII shift of the quality value (usually 64 or 33 for\n\t\t\t Illumina data).  Default: 33\n\n\t  --no-quality-values\n\t  --fasta\n\t\t\t Do not simulate quality values.  The simulated reads will be\n\t\t\t written as a FASTA file rather than a FASTQ file.\n\t\t\t Substitution errors may still be done; if you do not want\n\t\t\t to simulate any substition errors, provide --error-rate=0 or\n\t\t\t --no-substitution-errors.\n\n\t  --no-subst-errors\n\t  --no-substitution-errors\n\t\t\t Do not simulate substitution errors.  Equivalent to\n\t\t\t --error-rate=0.\n\n\t  --no-indels\n\t  --no-indel-errors\n\t\t\t Do not simulate indels.  The indel error profile will not be\n\t\t\t used.\n\n\t  --no-gc-bias\n\t  --no-gc-content-bias\n\t\t\t Do not simulate GC bias.  The GC bias profile will not be\n\t\t\t used.\n\n\t  -o PREFIX, --output-prefix=PREFIX\n\t\t\t Use PREFIX as the prefix of the output files.  Default:\n\t\t\t \"pirs_reads\"\n\n\t  -c TYPE, --output-file-type=TYPE\n\t\t\t The string \"text\" or \"gzip\" to specify the type of\n\t\t\t the output FASTQ files containing the simulated reads\n\t\t\t of the genome, as well as the log files.  Default: \"text\"\n\n\t  -z, --compress\n\t\t\t Equivalent to -c gzip.\n\n\t  -n, --no-logs, --no-log-files\n\t\t\t Do not write the log files.\n\n\t  -S SEED, --random-seed=SEED\n\t\t\t Use SEED as the random seed. Default:\n\t\t\t time(NULL) * getpid().  Note: If pIRS was not compiled with\n\t\t\t --disable-threads, each thread actually uses its own random\n\t\t\t number generator that is seeded by this base seed added to\n\t\t\t the thread number; also, if you need pIRS's output to be\n\t\t\t exactly reproducible, you must specify the random seed as well\n\t\t\t as use only 1 simulator thread (--threads=1, or configure\n\t\t\t with --disable-threads, or run on system with 4 or fewer\n\t\t\t processors).\n\n\t  -t, --threads=NUM_THREADS\n\t\t\t Use NUM_THREADS threads to simulate reads.  This option is\n\t\t\t not available if pIRS was compiled with the --disable-threads\n\t\t\t option.  Default: number of processors minus 2 if writing\n\t\t\t uncompressed output, or number of processors minus 3 if\n\t\t\t writing compressed output, or 1 if there are not this many\n\t\t\t processors\n\n\t  -q, --quiet    Do not print informational messages.\n\n\t  -h, --help     Show this help and exit.\n\n\t  -V, --version  Show version information and exit.\n\n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4 Examples",
        "type": "Text_excerpt",
        "value": "  4.1 Simulating a diploid genome sequence.\n    Example command line:\n    pirs diploid Human_ref.fa -s 0.001 -R 2 -d 0.00001 -v 0.000001 -o Human >simulate_seq.o 2>simulate_seq.e\n    Output files:\n      a) Human.snp.indel.invertion.fa:   another diploid genome sequence.\n      b) Human_indel.lst:                InDel information list.\n      c) Human_snp.lst:                  SNP information list.\n      d) Human_invertion.lst:            invertion information list.\n      e) simulate_seq.o, simulate_seq.e: records of the program running information.\n  4.2 Simulate Illumina paired-end reads from a haploid genome.\n    Example command line:\n    pirs simulate Human_ref.fa -m 170 -l 90 -x 5 -v 10 -o Human >simulate_170.o 2>simulate_170.e\n    Output files:\n      a) Human_90_170_1.fq, Human_90_170_2.fq:    the paired-end read files.\n      b) Human_90_170.error_rate.distr:           the error distribution file.\n      c) Human_90_170.insert_len.distr:           the insert length distribution file.\n      d) Human_90_170.read.info:                  information about every simulated reads\n      e) simulate_170.o, simulate_170.e:          records of the program running information.\n  4.3 Simulate Illumina paired-end reads from a diploid genome.\n    Example command line:\n    pirs simulate --diploid Human_ref.fa Human.snp.indel.invertion.fa.gz -m 800 -l 70 -x 5 -v 10 \n                            -o Human >simulate_800.o 2>simulate_800.e\n    Output files:\n      a) Human_70_800_1.fq, Human_70_800_2.fq:   the pair-end read files.\n      b) Human_70_800.error_rate.distr:          the error distribution file.\n      c) Human_70_800.insertsize.distr:          the insert size distribution file.\n      d) Human_70_800.read.info.gz:              record the information of every reads.\n      e) simulate_800.e, simulate_800.o:         records of the program running information.\n"
      },
      "source": "https://raw.githubusercontent.com/galaxy001/pirs/master/README",
      "technique": "header_analysis"
    }
  ]
}