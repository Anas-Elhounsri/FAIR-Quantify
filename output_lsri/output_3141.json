{
  "application_domain": [
    {
      "confidence": 12.13,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "dom2vec: Protein domain embeddings"
        ],
        "type": "Text_excerpt",
        "value": "This repository is the implementation of the research work: \"*Capturing Protein Domain Structure and Function Using Self-Supervision on Domain Architectures*\" ([link](https://www.mdpi.com/1999-4893/14/1/28)).\n\nPlease, cite as:\n```\n@article{melidis2021capturing,\n  title={Capturing Protein Domain Structure and Function Using Self-Supervision on Domain Architectures},\n  author={Melidis, Damianos P and Nejdl, Wolfgang},\n  journal={Algorithms},\n  volume={14},\n  number={1},\n  pages={28},\n  year={2021},\n  publisher={Multidisciplinary Digital Publishing Institute}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Melidis, Damianos P and Nejdl, Wolfgang",
        "format": "bibtex",
        "title": "Capturing Protein Domain Structure and Function Using Self-Supervision on Domain Architectures",
        "type": "Text_excerpt",
        "value": "@article{melidis2021capturing,\n    publisher = {Multidisciplinary Digital Publishing Institute},\n    year = {2021},\n    pages = {28},\n    number = {1},\n    volume = {14},\n    journal = {Algorithms},\n    author = {Melidis, Damianos P and Nejdl, Wolfgang},\n    title = {Capturing Protein Domain Structure and Function Using Self-Supervision on Domain Architectures},\n}"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/damianosmel/dom2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-22T20:22:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-25T06:14:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dom2vec: Protein domain embeddings"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary of approach",
        "parent_header": [
          "dom2vec: Protein domain embeddings"
        ],
        "type": "Text_excerpt",
        "value": "![Summary of approach](dom2vec_approach.png \"Summary of approach\")\nSummary of the approach/code divided in four parts, building two forms of domain architectures, training domain embeddings, performing intrinsic and extrinsic evaluation of embeddings.\n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9487558658097733,
      "result": {
        "original_header": "dom2vec: Protein domain embeddings",
        "type": "Text_excerpt",
        "value": "All protein domains analysis follows the data from [Interpro](https://www.ebi.ac.uk/interpro/) version 75.0.\nAll data associated can be found at the ftp site for the version 75.0, accessible from the general [download site](https://www.ebi.ac.uk/interpro/download/).\nAll analysis is decipted in the following image:\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8826710566500391,
      "result": {
        "original_header": "Build protein domain architectures",
        "type": "Text_excerpt",
        "value": "0. Data acquisition: \n1. Get protein lengths parsing match_complete.xml:\n* change folder/files paths appropriately in [proteinXMLHandler_run.py](code/proteinXMLHandler_run.py)\n* run `proteinXMLHandler_run.py`\n* prot_id_len tabular file will be created; a sample of the first 100 lines of the full file is saved at [sample file](domain_architecture_creation/prot_id_len_sample_100.tab) \n2. Get domains and evidence db id per protein:\n* select the output domain annotation **type**: overlap, non overlapping or non redundant. Then set if *GAP* domain is also added to annotations. \n  Change folder/files paths appropriately and uncomment the first section in [main.py](code/main.py) \n* parse domain hits per protein running `main.py`\n* id_domains_type.tab file will be created; a sample of the first 100 lines of the full file, for non overlapping with *GAP*, is saved at [sample file](domain_architecture_creation/id_domains_no_overlap_gap_sample_100.tab) \n3. Get domain architecture corpus:\n* change folder/files paths appropriately and uncomment the first section in [main.py](code/main.py)\n* run `main.py`\n* domains_corpus_type.txt file will be created; sample of the first 100 line of the full file, for non overlapping with *GAP*, is saved at [sample file](domain_architecture_creation/domains_corpus_no_overlap_gap_sample_100.txt)\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9319428372816928,
      "result": {
        "original_header": "Intrinsic evaluation",
        "type": "Text_excerpt",
        "value": "Data and example running experiments for:\n* Domain hierarchy \n* SCOPe and EC\n0. Data acquisition:\n   * For InterPro 75.0 version, download and decompress interpro.xml.gz file \n1. Parse interpro.xml:\n   * uncomment the EC & SCOPe section in [intrinsic_eval_run.py](code/intrinsic_eval_run.py)\n   * parse xml to get available SCOPe and EC labels per domain using `parse_and_save_EC_SCOP()`\n   * interpro2EC_SCOPe.tab will be created; a sample of the first 100 lines of the full file is saved at [sample file](intrinsic_evaluation/SCOPe_EC/interpro2EC_SCOPe_sample_100.tab) \nFor each **organism**: malaria, ecolik12, yeast, human follow the steps:\n1. Parse interpro2go.txt:\n   * uncomment the GOEvaluate section in [intrinsic_eval_run.py](code/intrinsic_eval_run.py)\n   * parse the txt file using `convert_go_labels()` producing:\n   * interpro2go_organism_MF.tab containing unprocessed available GO MF labels per domain; a sample of the first 100 lines of the full file for *yeast* is saved at [sample file](intrinsic_evaluation/GO_molecular_function/interpro2go_yeast_MF_sample_100.tab)\n   * interpro2go_yeast_MF_labels.csv containing GO MF labels after abstracting them; a sample of the first 100 lines of the full file for *yeast* is saved at [sample file](intrinsic_evaluation/GO_molecular_function/interpro2go_yeast_MF_labels_sample_100.csv) \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9690645330079414,
      "result": {
        "original_header": "Downstream evaluation",
        "type": "Text_excerpt",
        "value": "0. Extract non-redundant domains from proteins in data set\n   * match protein id to the tabular file with domain architectures, result of step 2 of [building domain architectures](https://github.com/damianosmel/dom2vec#build-protein-domain-architectures),\n   to get domains for each protein as shown in [fasta2csv](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/extrinsic_eval_run.py#L253)\n1. For the remaining proteins, run intreproscan and convert annotation to selected type of domain annotation:\n   * install interproscan as discussed in [interProScan Wiki](https://github.com/ebi-pf-team/interproscan/wiki)\n   * run interproscan with data set proteins as input, the output is a tsv file\n   * gzip the tsv and parse as in [parse_prot2in](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/main.py#L127), the output is a tabular file (same columns as of the previous step tabular file)\n   * run again the fasta2csv in [fasta2csv after interproscan](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/extrinsic_eval_run.py#L258)\n2. For the rest of protein without identified domains created a default domain per protein as shown in [fasta2default](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/main.py#L134)\n   * update data set protein domains running fasta2csv for last time, as shown in [fasta2csv after default domains](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/extrinsic_eval_run.py#L267) \n3. Preprocess data sets for learning:\n   * split train and test\n   * create inner cross validation from the training set\n   as shown in [create data set splits](https://github.com/damianosmel/dom2vec/blob/7a8de7994220d33577b31f74cf37ea5ed675c85b/code/extrinsic_eval_run.py#L277) \nData and example code to run cross validation and performance experiments for three data sets:\n* TargetP\n* Toxin\n* NEW\nare found at the downstream evaluation [folder](https://github.com/damianosmel/dom2vec/tree/master/downstream_evaluation)\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9219717647173022,
      "result": {
        "original_header": "Pretrained dom2vec",
        "type": "Text_excerpt",
        "value": "Pretrained dom2vec embeddings can be downloaded from the Research Data portal of Leibniz University Hannover at [dom2vec_pretrained](https://data.uni-hannover.de/dataset/dom2vec_pretrained).\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ebi-pf-team/interproscan/wiki"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/damianosmel/dom2vec/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/damianosmel/dom2vec/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "damianosmel/dom2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dom2vec: Protein domain embeddings"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/toxin/experiments/toxin_variance/seqvec/config/toxin_seqvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/toxin/experiments/toxin_variance/dom2vec_rand/config/toxin_dom2vec_rand_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/toxin/experiments/toxin_variance/protvec/config/toxin_protvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/toxin/experiments/toxin_variance/dom2vec/config/toxin_dom2vec_upd_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/toxin/experiments/toxin_3fold/dom2vec/config/toxin_kfold_dom2vec_update_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/targetp/experiments/targetp_oov/seqvec/config/targetp_oov_seqvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/targetp/experiments/targetp_oov/dom2vec_rand/config/targetp_oov_dom2vec_rand_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/targetp/experiments/targetp_oov/protvec/config/targetp_oov_protvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/targetp/experiments/targetp_oov/dom2vec/config/targetp_oov_dom2vec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/targetp/experiments/targetp_3fold/dom2vec/config/targetp_kfold_dom2vec_update_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/new/experiments/new_variance/seqvec/config/new_seqvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/new/experiments/new_variance/dom2vec_rand/config/new_dom2vec_rand_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/new/experiments/new_variance/protvec/config/new_protvec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/new/experiments/new_variance/dom2vec/config/new_dom2vec_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/downstream_evaluation/new/experiments/new_3fold/dom2vec/config/new_kfold_dom2vec_update_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/domain_embeddings_training/run_embs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/dom2vec_approach.png"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9983732022879384,
      "result": {
        "original_header": "Build protein domain architectures",
        "type": "Text_excerpt",
        "value": "   For Interpro 75.0 version download the files:\n* match_complete.xml.gz\n* protein2ipr.dat.gz \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.926012794459343,
      "result": {
        "original_header": "Train protein domain embeddings",
        "type": "Text_excerpt",
        "value": "0. Needed data:\n* the domains_corpus_type.txt from last step \n1. Train word2vec model from domain architectures corpus:\n* change folder/files paths appropriately in [word2vec_run.py](code/word2vec_run.py)\n* change the paths and the training parameters in the provided bash script [run_embs.sh](domain_embeddings_training/run_embs.sh)\n* run `run_embs.sh`\n* word2vec embedding standard txt file(s) will be created\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8981924186702741,
      "result": {
        "original_header": "Intrinsic evaluation",
        "type": "Text_excerpt",
        "value": "0. Data acquisition:\n   * For Interpro 75.0 version, download the ParentChildTreeFile.txt file \n* GO molecular function\n0. Data acquisition:\n   * For Interpro 75.0 version, download the interpro2go file and add the suffix .txt \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8484430636039081,
      "result": {
        "original_header": "Build protein domain architectures",
        "type": "Text_excerpt",
        "value": "1. Get protein lengths parsing match_complete.xml:\n* change folder/files paths appropriately in [proteinXMLHandler_run.py](code/proteinXMLHandler_run.py)\n* run `proteinXMLHandler_run.py`\n* prot_id_len tabular file will be created; a sample of the first 100 lines of the full file is saved at [sample file](domain_architecture_creation/prot_id_len_sample_100.tab) \n3. Get domain architecture corpus:\n* change folder/files paths appropriately and uncomment the first section in [main.py](code/main.py)\n* run `main.py`\n* domains_corpus_type.txt file will be created; sample of the first 100 line of the full file, for non overlapping with *GAP*, is saved at [sample file](domain_architecture_creation/domains_corpus_no_overlap_gap_sample_100.txt)\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.897049311635462,
      "result": {
        "original_header": "Train protein domain embeddings",
        "type": "Text_excerpt",
        "value": "1. Train word2vec model from domain architectures corpus:\n* change folder/files paths appropriately in [word2vec_run.py](code/word2vec_run.py)\n* change the paths and the training parameters in the provided bash script [run_embs.sh](domain_embeddings_training/run_embs.sh)\n* run `run_embs.sh`\n* word2vec embedding standard txt file(s) will be created\n \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8125513223534384,
      "result": {
        "original_header": "Intrinsic evaluation",
        "type": "Text_excerpt",
        "value": "0. Data acquisition:\n   * For Interpro 75.0 version, download the ParentChildTreeFile.txt file \n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/damianosmel/dom2vec/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, embeddings, protein-domain-architectures, protein-domains"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Damianos P. Melidis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dom2vec"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "damianosmel"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 335355,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 83094,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Main dependencies",
        "parent_header": [
          "dom2vec: Protein domain embeddings"
        ],
        "type": "Text_excerpt",
        "value": "Code was executed using a conda environment, of which the full list of dependencies is in conda_env_dependencies.txt.\n\nThe main dependencies are listed below:\n* Python 3.7.6\n* BioPython 1.74\n* Gensim 3.8.0\n* Pytorch 1.2.0\n* Torchtext 0.4.0\n* Numpy 1.18.1\n* Pandas 1.0.1\n* Scikit-learn 0.22.1\n* Matplotlib 3.1.1\n* Intervaltree 3.0.2\n* Treelib 1.5.5\n"
      },
      "source": "https://raw.githubusercontent.com/damianosmel/dom2vec/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:42:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}