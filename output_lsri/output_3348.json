{
  "application_domain": [
    {
      "confidence": 0.8641025442027871,
      "result": {
        "type": "String",
        "value": "Graphs"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "SubFeat: Feature Subspacing Ensemble Classifier for Function Prediction of DNA, RNA and Protein/Peptide Sequences"
        ],
        "type": "Text_excerpt",
        "value": "1. Jani, M.R., Mozlish, M.T.K., Ahmed, S., Tahniat, N.S., Farid, D.M., Shatabda, S.:\nirecspot-ef: Eective sequence based features for recombination hotspot prediction.\nComputers in biology and medicine 103, 17{23 (2018)\n2. Lin, H., Liang, Z.Y., Tang, H., Chen, W.: Identifying sigma70 promoters with\nnovel pseudo nucleotide composition. IEEE/ACM transactions on computational\nbiology and bioinformatics (2017)\n3. Chen, W., Feng, P., Ding, H., Lin, H.: Pai: Predicting adenosine to inosine editing\nsites by using pseudo nucleotide compositions. Scientic reports 6, 35123 (2016)\n4. Liu, B., Xu, J., Lan, X., Xu, R., Zhou, J., Wang, X., Chou, K.C.: idna-prot| dis:\nidentifying dna-binding proteins by incorporating amino acid distance-pairs and\nreduced alphabet prole into the general pseudo amino acid composition. PloS one\n9(9), e106691 (2014)\n\n\n\n\n\n\n\n\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fazlulhaquejony/SubFeat"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-12-01T05:39:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-17T04:36:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9914501101119974,
      "result": {
        "original_header": "Abstract",
        "type": "Text_excerpt",
        "value": "The information of cell is contained in biological entities and among them DNA \n(Deoxyribonucleic acid) sequence is the most fundamental. First, RNA (Ribonucleic acid) is transcribed from DNA and then protein is translated from RNA. Inside the protein are the amino acis where the cell life is described. With the advent of modern\nsequencing technologies, these sequences are now being revealed at an accelerated rate.\nHowever, the growth in known attributes or functionalities of these entities are still in\nslow progression due to the slow in vitro experimental methods. To predict biological\nentities from different datasets we have proposed an ensemble classification algorithm\nin this paper. Our model divides the full feature space into smaller subspaces. We have\nevaluated our model on four different datasets, two DNA, a RNA and a Protein dataset and\nit outperformed all the exisiting single classifiers as well as the ensemble classifiers. \nThe SubFeat is an extensive Python-based tool for generating various numerical feature representation schemes from DNA, RNA and protein primary structure sequences. It is an extension edition of the [PyFeat](https://github.com/mrzResearchArena/PyFeat). We additionally provide the feature overlapping option that user can customize it for own research purposes; we also prove an ensemble classification technique. This  After that, it can train model, to evaluate model using various machine learning techniques.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9310400362121473,
      "result": {
        "original_header": "[2]. Feature Generation:",
        "type": "Text_excerpt",
        "value": "We initially generated feature for the \n- Protein data : 24,420\n- RNA date : 212\n- DNA data : 212\n \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9195494085305692,
      "result": {
        "original_header": "Proper explanation of features:",
        "type": "Text_excerpt",
        "value": "K is an integer number representation of feature N. For example k=3 means the number of nucleotides ranging from 1 to 3 inclusive.\nkGap is an integer number representation of gap count in feature N. For example k=5 means the number of gaps ranging from 1 to 5 inclusive. \n| Features  | Type  | Number of features  | Feature Structure  | Explanation  |\n| --------- | ----- | ------------------- | ------------------ | ------------ |\n| 1 | Monomer Composition  | 20  | N | when K=1, 20 features for protein | \n| 2 | Dipeptide Composition  | 400  | NN | when K=2, 20\\*20=400 features for protein | \n| 3 | Tripeptide Composition  | 8000  | NNN | when K=3, 20\\*20\\*20=8000 features for protein | \n| 4 | K-gapped Di-mono Composition  | 8000  | NN_N | when KGap=1, 8,000 features for protein |\n| 5 | K-gapped Mono-Di Composition  | 8000  | N_NN | when KGap=1, 8,000 features for protein |\n|  | **Total**  | **24,420**  |  |  | \n| Features  | Type  | Number of features  | Feature Structure  | Explanation  |\n| --------- | ----- | ------------------- | ------------------ | ------------ |\n| 1 | Monomer Composition  | 4  | N | when K=1, 4 features for DNA/RNA | \n| 2 | Dipeptide Composition  | 16  | NN | when K=2, 4\\*4=16 features for DNA/RNA | \n| 3 | Tripeptide Composition  | 64  | NNN | when K=3, 4\\*4\\*4=64 features for DNA/RNA | \n| 4 | K-gapped Di-mono Composition  | 64  | NN_N | when KGap=1, 64 features for DNA/RNA |\n| 5 | K-gapped Mono-Di Composition  | 64  | N_NN | when KGap=1, 64 features for DNA/RNA |\n|  | **Total**  | **212**  |  |  | \n**Note:** When sequence becomes DNA, RNA, and Protein then N = {A,C,G,T}, N = {A,C,G,U}, and N = {A,C,D,E,F,G,H,I,K,L,M,N,P,Q,R,S,T,V,W,Y} respectively.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9515282469600135,
      "result": {
        "original_header": "Sub spacing (Modeling):",
        "type": "Text_excerpt",
        "value": "Here, we have divided total feature space into 3 Subspaces . \nFor protein dataset its full feature space f: 24,420 divided into f1: 0-8,420, f2: 8,420-16,420 , f3: 16,420- 24,420. For DNA and RNA dataset its full feature space f: 212 divided into f1: 0 - 84,f2: 84 -148 , f3: 148 - 212 .Here anyone can give input of the f1, f2 and f3 range. The sequence can be override. But remember, the range must be  lower bound to upper bound.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8518739427313938,
      "result": {
        "original_header": "Learning/results generate:",
        "type": "Text_excerpt",
        "value": "We use five classificatiom algorithm: Support Vector Machine, Logistic Regression, Naive Bayes, K-Nearest Neighbors, Decision Tree. Applying these algorithms on subspace dataset, we have five different results. On this result  we have  user maximum voting algorithm to generate final result. \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9913938321692153,
      "result": {
        "original_header": "[4]. Datasets:",
        "type": "Text_excerpt",
        "value": "We have used three types of datasets in this experiment; the primary structure of protein, DNA, and RNA. \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fazlulhaquejony/SubFeat/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fazlulhaquejony/SubFeat/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fazlulhaquejony/SubFeat"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SubFeat: Feature Subspacing Ensemble Classifier for Function Prediction of DNA, RNA and Protein/Peptide Sequences"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.8764906560621922,
      "result": {
        "original_header": "[1]. Read File:",
        "type": "Text_excerpt",
        "value": "All the datasets file are in `FASTA` format which can be with `.txt` or `.fasta` extension. E.g. `anyName.txt` or  `anyName.fasta`. Please know more about the FASTA file format [by clicking here!](https://en.wikipedia.org/wiki/FASTA_format).\n```\n>1AKHA|1\nKKEKSPKGKSSISPQARAFLEEVFRRKQSLNSKEKEEVAKKCGITPLQVRVWFINKRMRSK\n>1AOII|1\nATCAATATCCACCTGCAGATTCTACCAAAAGTGTATTTGGAAACTGCTCCATCAAAAGGCATGTTCAGCTGAATTCAGCTGAACATGCCTTTTGATGGAGCAGTTTCCAAATACACTTTTGGTAGAATCTGCAGGTGGATATTGAT\n>1B6WA|1\nMELPIAPIGRIIKDAGAERVSDDARITLAKILEEMGRDIASEAIKLARHAGRKTIKAEDIELAVRRFK\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fazlulhaquejony/SubFeat/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SubFeat"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fazlulhaquejony"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 13890,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mrzResearchArena",
          "type": "User"
        },
        "date_created": "2020-07-04T23:10:40Z",
        "date_published": "2020-09-13T14:05:50Z",
        "description": "We finalized the project.\r\n",
        "html_url": "https://github.com/fazlulhaquejony/SubFeat/releases/tag/Finalized",
        "name": "v1.0.0",
        "release_id": 31210409,
        "tag": "Finalized",
        "tarball_url": "https://api.github.com/repos/fazlulhaquejony/SubFeat/tarball/Finalized",
        "type": "Release",
        "url": "https://api.github.com/repos/fazlulhaquejony/SubFeat/releases/31210409",
        "value": "https://api.github.com/repos/fazlulhaquejony/SubFeat/releases/31210409",
        "zipball_url": "https://api.github.com/repos/fazlulhaquejony/SubFeat/zipball/Finalized"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "[3.1] Test Command-line #1: Without Feature Selection",
        "parent_header": [
          "SubFeat: Feature Subspacing Ensemble Classifier for Function Prediction of DNA, RNA and Protein/Peptide Sequences",
          "[3]. How to Run Package:"
        ],
        "type": "Text_excerpt",
        "value": "```console\nuser@machine:~$ python main.py -fa protein.fasta -la proteinLabel.txt -seq protein\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "[3.2] Test Command-line #2: Customize Feature Selection",
        "parent_header": [
          "SubFeat: Feature Subspacing Ensemble Classifier for Function Prediction of DNA, RNA and Protein/Peptide Sequences",
          "[3]. How to Run Package:"
        ],
        "type": "Text_excerpt",
        "value": "```console\nuser@machine:~$ python main.py -fa protein.fasta -la proteinLabel.txt -seq protein -f1 0 500 -f2 400 2400 -f3 1600 24420\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "[3.3] Test Command-line #3: Customize Feature Selection, and Classifier Selection",
        "parent_header": [
          "SubFeat: Feature Subspacing Ensemble Classifier for Function Prediction of DNA, RNA and Protein/Peptide Sequences",
          "[3]. How to Run Package:"
        ],
        "type": "Text_excerpt",
        "value": "```console\nuser@machine:~$ python main.py -fa protein.fasta -la proteinLabel.txt -seq protein \u2013m1 DT \u2013m2 SVM \u2013m3 LR -f1 0 500 -f2 400 2400 -f3 1600 24420\n```\n**Note: You can use anyone from them.**\n\n**Table 3:**  command line element\n| Symbol  | Explanation  |\n| ------- | ------------ |\n| -fa | Fasta file with .txt or .fasta format  |\n| -la | Label file with .txt extension  |\n| -seq | Represent Dataset  DNA/RNA/PROTEIN  |\n| -m1 | Algorithm which is used for first model it can be SVM,LR,DT,NB  |\n| -m2 | Algorithm which is used for second model it can be SVM,LR,DT,NB  |\n| -m3 | Algorithm which is used for third model it can be SVM,LR,DT,NB  |\n| -f1 | Input of first model first input means the starting of range and second input means finished point of range which can overlap the -f2 and -f3  |\n| -f2 | Input of second model first input means the starting of range and second input means finished point of range which can overlap the -f1 and -f3  |\n| -f3 | Input of third model first input means the starting of range and second input means finished point of range which can overlap the -f1 and -f2  |\n\n"
      },
      "source": "https://raw.githubusercontent.com/fazlulhaquejony/SubFeat/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:27:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}