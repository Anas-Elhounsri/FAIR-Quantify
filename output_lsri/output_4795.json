{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "A-Lister v1.1"
        ],
        "type": "Text_excerpt",
        "value": "The following Gene Expression Omnibus datasets are used as sample and test input \nwithin A-Lister: GSE76453, GSE116610, GSE108643, GSE75035, GSE77137, GSE126785, \nGSE101484, GSE99397, GSE114528.\nhttps://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/staslist/A-Lister"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-10T02:08:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-01T06:38:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tool for analysis of differentially expressed genes (DEGs), differentially expressed proteins (DEPs), and differentially methylated positions/regions (DMPs/DMRs). "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9929029464981807,
      "result": {
        "original_header": "A-Lister v1.1",
        "type": "Text_excerpt",
        "value": "A-Lister is a dual interface (CLI & GUI) tool that assists with analysis of differentially expressed entities (DEEs), such as differentially expressed genes (DEGs), differentially expressed proteins (DEPs), and differentially methylated positions/regions (DMPs/DMRs), across multiple pairwise comparisons. \n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9125669584114319,
      "result": {
        "original_header": "Upcoming",
        "type": "Text_excerpt",
        "value": "I will be overhauling A-Lister into a web app with complementary CL and GU interfaces. I will be starting in October of 2023.\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9860152151540694,
      "result": {
        "original_header": "Name List Mode:",
        "type": "Text_excerpt",
        "value": "In this mode A-Lister accepts files containg columns of names delimited\nby tab or comma. The header row musts contain group names for each column. \nExamples of this format can be found in Sample_Input/Name_List folder. \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9481586478767698,
      "result": {
        "original_header": "Differential Expression Mode:",
        "type": "Text_excerpt",
        "value": "In this mode, A-Lister accepts differential expression files containing a primary id\ncolumn (e.g. gene name), fold change column(s), and any other columns present.\nThe columns in these files must be delimited by tab, comma, colon, semicolon, or space.\nA-Lister supports two types of differential expression file formats described below.   \n1) *Differential Expression Sample Format (DE-Sample) (Row-Format) File*:  \nThis is a delimited text file containing a primary ID column, single Fold Change column, \none Sample1 column, and one Sample2 column. The Sample1 and Sample2 columns identify to\nwhich pairwise comparison each row belongs. This way multiple pairwise comparisons can\nbe listed within the same DE-Sample file using a *single* fold change column. \nExamples of this format can be found in Sample_Input/DE_Sample/ folder.   \n2) *Differential Expression Series Format (DE-Series) (Column-Format) File*: \nThis is a delimited text file containing a primary ID and multiple Fold Change columns. Each \nFold Change column contains data pertaining to a single pairwise comparison. This way multiple\npairwise comparisons can be listed within the same DE-Series file using *multiple* \nfold change columns. Examples of this format can be found in Sample_Input/DE_Series/ folder.   \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9806650194347293,
      "result": {
        "original_header": "2. A-Lister Functionality",
        "type": "Text_excerpt",
        "value": "A-Lister has two primary modes of operation: name list and differential expression. \nIn differential expression mode A-Lister can be used to compare and filter \nlists of differentially expressed entities (DEEs) such as DEGs, DEPs, \nand DMPs/DMRs. The input text delimited files containing differential \nexpression data can be filtered by any column. A common example is filtering \ninput data based on p-value column to only include rows with p-value <= 0.05.\nA-Lister assumes that the DEEs are listed in form of paired comparisons \nwithin the input files. That is every DEE in a given file belongs to some paired \ncomparison between two conditions (e.g., treated vs control). These \npaired comparisons can be filtered based on the directionality (sign) \nof their respective fold changes. That is, all DEEs belonging to a particular \npaired comparison can be filtered based on the sign of their fold change.   \nIn addition to column and directionality based filtering, A-Lister can \ncompare paired comparisons with one another using set operations such \nas AND (intersect), FAND (fuzzy intersect), OR (union), and DIFF (difference). \nThe combination of these filtering and set operations allows us to ask \ninteresting questions (queries) about our data.   \nFor example, suppose we have two paired comparisons in a single differential \nexpression file or across two differential expression files. Paired comparison \nnumber one has a list of differentially expressed genes (DEGs) between the \ncontrol group and group treated with drug #1. Paired comparison number two \nhas a list of DEGs between control group and group treated with drug #2. \nWe would like to know which genes were more highly expressed in control \ngroup than in groups treated with drug #1 and drug #2. This question can \nbe represented by the following A-Lister query (CNTRL\\*T1:DOWN-AND-CNTRL\\*T2:DOWN). \nMore complex queries can be constructed by comparing any number of paired \ncomparisons from across an unlimited number of files. Order of operations \ncan be enforced within the query by using parenthesis.   \nIn name-list mode you can also perform set operations on lists of names. However, \nyou cannot use any filtering operations.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.948400719967891,
      "result": {
        "original_header": "A-Lister Directional Query",
        "type": "Text_excerpt",
        "value": "A-Lister directional query is composed of pairwise comparison names, set operators, and \noptional directions. The pairwise comparison names are derived from the pairwise \ncomparison mapping. The permitted set operators are: AND, FAND, OR, and DIFF.  \n*AND* - intersection. An intersection of two sets returns a set of all \nthe elements that are present within both sets.   \n*FAND* - fuzzy intersection. A fuzzy intersection of two sets returns a \nset of all the similar elements from within both sets. A customized Jaro-Winkler algorithm \nis used to calculate similarity. To be considered similar two strings must have have \nJaro-Winkler score > 0.84.   \n*OR* - union. A union of two sets returns all the elements present \nin either set.   \n*ALL* is a special modifier that results in multiple queries. \nIn one query ALL is replaced by UP. In the other query ALL is replaced by DOWN.\nA query containing N ALL directions is transformed into 2^N queries. \nEach query is then executed and the results for each query are output into the \noutput files.   \nExample 1: CNTRL\\*T:ALL-AND-CNTRL\\*T2 -> CNTRL\\*T:UP-AND-CNTRL\\*T2 , CNTRL\\*T:DOWN-AND-CNTRL\\*T2.   \nExample 2: CNTRL\\*T:ALL-AND-CNTRL\\*T2:ALL -> CNTRL\\*T:UP-AND-CNTRL\\*T2:UP ,\nCNTRL\\*T:UP-AND-CNTRL\\*T2:DOWN , CNTRL\\*T:DOWN-AND-CNTRL\\*T2:UP , CNTRL\\*T:DOWN-AND-CNTRL\\*T2:DOWN.   \nThis is done differently depending on differential expression file type (DE-Sample or DE-Series).\nThe goal of pairwise comparison mapping is to clearly indicate the names of pairwise comparisons \nand to which pairwise comparison every entry in the file belongs.   \nFor DE-Sample files the user must map each label listed in the sample1 and sample2 columns \nto some unique, short, and descriptive new labels. For example, file\nSample_Input/DE_Sample/GSE76453_cuffdiff_E2.diff contains two labels: q1 and q2. \nThese labels are not descriptive and may conflict with labels contained in other differential \nexpression files. A good mapping for these labels would be q1->Ctl, q2->ZNF143 based on GEO GSE76453 \ndescription. This mapping more clearly indicates what each condition represents. \nThe q1\\*q2 pairwise comparison will then be named based on these new labels as Ctl\\*ZNF143.   \nFor DE-Series files the user must come up with their own pairwise comparison names and map \nthese names to all the columns that contain data pertaining to those pairwise comparisons. \nFor example, file Sample_Input/DE_Series/GSE126785_M2M4.csv contains two pairwise comparisons. \nThese pairwise comparisons can be appropriately named as M2Low\\*M2High and M4Low\\*M4High based \non the GEO GSE126785 experiment description. The correct mapping would then be \nM2Low\\*M2High->log2(FC)M2,P-valueM2,P-adjM2 and M4Low\\*M4High->log2(FC)M4,P-valueM4,P-adjM4. \nOne of the mapped columns must always be a fold change column. The ID columns belong to all \npairwise comparisons and therefore do not need to be mapped to any individual pairwise comparison.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9337243172984674,
      "result": {
        "original_header": "A-Lister Query (Non-Directional)",
        "type": "Text_excerpt",
        "value": "This is the query argument used in the name-list command. A non-directional query is\ncomposed of group names and set operators. The set operators are the same as in the\ndirectional query (i.e., AND, FAND, OR, DIFF). The group names are derived from the\nfirst (header) row of the name list files.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8823150513211098,
      "result": {
        "original_header": "3. A-Lister Output",
        "type": "Text_excerpt",
        "value": "A-Lister's output is contained within several files. The result.txt file \ncontains the name list of entities returned by the query. If an ALL direction \nquery was requested the result file will contain a name list corresponding to \neach directional query generated from the all direction query. \nThe filtered differential expression files are output in differential expression \nmode only. Additionally, a data_dump.txt file is output containing information \nabout how A-Lister executed the query. This information is primarily used for \nvalidation and or debugging.   \nFor Example 2: CNTRL\\*T:ALL-AND-CNTRL\\*T2:ALL ->   \nQuery0: CNTRL\\*T:UP-AND-CNTRL\\*T2:UP  \nQuery1: CNTRL\\*T:UP-AND-CNTRL\\*T2:DOWN  \nQuery2: CNTRL\\*T:DOWN-AND-CNTRL\\*T2:UP  \nQuery3: CNTRL\\*T:DOWN-AND-CNTRL\\*T2:DOWN   \nOutput will be:  \n1)result.txt  \n2)data_dump.txt  \n3)FilteredDEFiles  \n--a)Query0 (CNTRL\\*T:UP-AND-CNTRL\\*T2:UP)  \n--b)Query1 (CNTRL\\*T:UP-AND-CNTRL\\*T2:DOWN)  \n--c)Query2 (CNTRL\\*T:DOWN-AND-CNTRL\\*T2:UP)  \n--d)Query3 (CNTRL\\*T:DOWN-AND-CNTRL\\*T2:DOWN)  \n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9628479575834686,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Stanislav Listopad and\nTrina Norden-Krichmar\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8942270740713301,
      "result": {
        "original_header": "Apendix",
        "type": "Text_excerpt",
        "value": "Below are the help menus and partial lists of examples for name-list and diff-expression commands. \n**A-Lister Name-List Help Menu**\n```\n$ python ALister_CLI.py name-list --help\nusage:\n  ALister_CLI.py name-list <query> <input-file> [<input-file> ...] [options]\n  ALister_CLI.py name-list (-e | --examples)\n  ALister_CLI.py name-list (-h | --help)\n\n\nAnalyze name list data.\n\npositional arguments:\n  <query>               The non-directional query argument is used to perform set\n                        operations on name lists. The group names are derived\n                        from the 1st row (column headers) of the delimited text file.\n                        The following set operations are permitted: AND, FAND, DIFF, OR.\n                        AND = intersect, FAND = fuzzy intersect, DIFF = difference, and\n                        OR = union. Additionally, parenthesis can be used to set order of\n                        operations. The query argument must be surrounded by quote marks.\n                        Example: \"(CONTROL-OR-TREATED1)-AND-(TREATED2)\"\n                        Permitted characters: alphanumeric, (), and -.\n  <input-file>          Full path to the input file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e, --examples        show examples and exit\n  -id <input_delimiter> [<input_delimiter> ...]\n                        The delimiter used within the input file.\n                        List once if all input files use the same delimiter.\n                        List for every file - in the same order as that of the\n                        input files - if delimiter varies between input files.\n                        Options: tab and comma. Default: tab.\n  -o <output_directory>\n                        The output directory. Default: current working directory.\n  -od <output_delimiter>\n                        The delimiter used in the result file.\n                        Options: tab, comma-row. Default: tab.\n  -v                    Make the output more verbose.\n  ```\n  \n  **A-Lister Diff-Expression Help Menu**\n  \n  BASH2*\n  \n  **A-Lister Name-List Examples**\n  \n  BASH3*\n  \n  **A-Lister Diff-Expression Examples**\n  \n  BASH4*\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Graphical User Interface Documentation",
        "parent_header": [
          "A-Lister v1.1"
        ],
        "type": "Text_excerpt",
        "value": "This section demonstrates how to use the A-Lister graphical user interface using examples.\n\n**Name List Example**\n\nOne name-list file: Sample_Input/Name_List/names_comma.txt. There are 3 groups in this file: Control, Treated1, and Treated2.\nWe want to find entities in common between Treated1 group and a union of Control and Treated2 groups.\nThis will result in the following A-Lister query: Treated1-AND-(Control-OR-Treated2).\n\n1) Select the name list execution mode.\n2) Select Sample_Input/Name_List/names_comma.txt file using the \"Browse\" button. Then select the corresponding input file delimiter (comma). Finally, click \"Add File\" in order to add file to the file selection area. A tab will appear. You can examine file previews (1st 5 lines of the file including column headers) within this tab to assist with setting remaining parameters. \n\n![NameListGUI1](/Images/NameListGUI1.png)\n\n3) Either type the query into query input box or click \"Build Query\" and use the combination of group name and set operator buttons to \nbuild a query. Insert parenthesis into the query by typing in query box. \n4) Select the output delimiter and output directory.  \n5) Select whether to run in verbose or silent mode. Setting verbose mode results in more information regarding A-Lister's execution being output into the data_dump.txt file.  \n6) Click \"generate command\". This generates an appropriate CLI command. \n\n![NameListGUI2](/Images/NameListGUI2.png)\n\n7) You can then launch this command within GUI by clicking on the \"Launch\" button.\nWhen executing A-Lister via the GUI a box containing the results of the query will appear at the bottom of the GUI.\nAlternatively, you can copy the command from the command box and paste it into the command line. The output files will be generated \neither way.  \n\n![NameListGUI3](/Images/NameListGUI3.png)\n\n**Differential Expression Example**\n\nTwo differential expression files: Sample_Input/DE_Series/GSE114528_differential_exp_EVP_D.tsv and Sample_Input/DE_Sample/GSE99397_CreNeg-MHCPos_vs_CrePos-MHCNeg.diff. We want to find significantly differentially expressed genes in common between the EVP\\*D and CreNeg\\*CrePos pairwise comparisons. This will result in the following A-Lister query: EVP\\*D-AND-CNEG\\*CPOS.\n\n1) Select the differential expression execution mode.\n2) Select Sample_Input/DE_Series/GSE114528_differential_exp_EVP_D.tsv file using the \"browse\" button. Then select the corresponding input file delimiter (tab). Click \"Add File\" in order to add file to the file selection area. Click on \"File1\" in the file selection tab bar. \n\n![DiffExpressionGUI1](/Images/DiffExpressionGUI1.png)\n\n3) Select the differential expression file type (DE-Series). Verify that the ID Column Name is correct. In this example we want to use Gene_Name column. Click on \"Add PC Map\" in order to add a pairwise comparison mapping for this file. Name the pairwise comparison EVP\\*D. Then select the appropriate fold change column. If this file contains only a single pairwise comparison than it is not necessary to select additional columns. \n\n![DiffExpressionGUI2](/Images/DiffExpressionGUI2.png)\n\n4) Add filters. Herein, we have added fold change, adjusted p-value, and base mean based filters.  \n\n![DiffExpressionGUI3](/Images/DiffExpressionGUI3.png)\n\n5) Select Sample_Input/DE_Sample/GSE99397_CreNeg-MHCPos_vs_CrePos-MHCNeg.diff file using the \"browse\" button. Then select the corresponding input file delimiter (tab). Click \"Add File\" in order to add file to the file selection area. Click on \"File2\" in the file selection tab bar.  \n6) Select DE-Sample file type. Verify that the ID, Fold Change, Sample1, and Sample2 column names are correct. \n\n![DiffExpressionGUI4](/Images/DiffExpressionGUI4.png)\n\n7) Change the value for ID Column Name from test_id to gene. Click on \"Build PC Map\". Map the file specific sample labels to new label names of your choice. Add filters. Herein, we have added fold change and p-value filters.\n\n![DiffExpressionGUI5](/Images/DiffExpressionGUI5.png)\n\n8) Either directly enter the query or click on build query and use the pairwise comparison, set operator, and directionality buttons. You can manually insert parenthesis into the query in order to change order of operations. However, it is not necessary for this simple query.\n\n![DiffExpressionGUI6](/Images/DiffExpressionGUI6.png)\n\n9) Select the output delimiter and output directory. \n10) Select whether to run in verbose or silent mode.\n11) Click generate command. This generates an appropriate CLI command. \n\n![DiffExpressionGUI7](/Images/DiffExpressionGUI7.png)\n\n12) You can then launch this command within GUI or by pasting it into command line. Note that the output within the GUI shows the results of a single query only. The complete results can be found in output files. \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command Line Interface Documentation",
        "parent_header": [
          "A-Lister v1.1"
        ],
        "type": "Text_excerpt",
        "value": "**A-Lister Help**\n```\n$ python ALister_CLI.py --help\nusage:\n  ALister_CLI.py command\ncommands:\n  diff-expression Analyze differential expression data.\n  name-list       Analyze name list data.\n\nA-Lister v1.1: a differentially expressed entities analysis package. Namely,\nA-Lister assists in identification of top genes, proteins, and methylation\nmarkers of interest across multiple pairwise comparisons.\n\npositional arguments:\n  {name-list,diff-expression}\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n**Name List Help & Example Commands**  \n\n```\n$ python ALister_CLI.py name-list --help\n$ python ALister_CLI.py name-list --examples\n```\n\n**Differential Expression Help & Example Commands**  \n\n```\n$ python ALister_CLI.py diff-expression --help\n$ python ALister_CLI.py diff-expression --examples\n```\n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/staslist/A-Lister/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/staslist/A-Lister/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staslist/A-Lister"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A-Lister v1.1"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/NameListGUI1.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/NameListGUI2.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/NameListGUI3.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI1.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI2.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI3.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI4.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI5.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI6.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master//Images/DiffExpressionGUI7.png"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "A-Lister v1.1"
        ],
        "type": "Text_excerpt",
        "value": "Supported Operating Systems: Windows 10, Mac OS (10.10.x+), Unix (Ubuntu, Other).\n\n1) Install Python version 3.7 or higher. \nhttps://www.python.org/downloads/\n\n2) Check whether you have pip installed. Type pip (or pip3) -V in \ncommand line (Windows), terminal (Mac OS), bash shell (Unix).\nIf you do not have pip installed follow these instructions to \ninstall pip (python package management system). \nhttps://pip.pypa.io/en/stable/installing/\n\n3) Install Eel. https://github.com/ChrisKnott/Eel\n```\npip install eel \nor\npip3 install eel\n```\n4) Install Google Chrome.\n\n5) Download A-Lister from GitHub.\n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8786706803905548,
      "result": {
        "original_header": "Upcoming",
        "type": "Text_excerpt",
        "value": "I will be overhauling A-Lister into a web app with complementary CL and GU interfaces. I will be starting in October of 2023.\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9427037123788921,
      "result": {
        "original_header": "A-Lister Directional Query",
        "type": "Text_excerpt",
        "value": "Jaro-winkler algorithm: http://users.cecs.anu.edu.au/~Peter.Christen/publications/tr-cs-06-02.pdf   \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8722407532460261,
      "result": {
        "original_header": "Future Development Roadmap",
        "type": "Text_excerpt",
        "value": "1) Pip packaging. User interface update. \n2) ID validation and mapping. Genomic types integration.\n3) Web interface.\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8677982509526866,
      "result": {
        "original_header": "A-Lister Directional Query",
        "type": "Text_excerpt",
        "value": "Example: \\[FRAC10, ALOC, BRAC] FAND \\[FRAC11, ALUK, PRAT14, MRA, BRAC] = \\[FRAC10, FRAC11, BRAC]   \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8760943059567194,
      "result": {
        "original_header": "Apendix",
        "type": "Text_excerpt",
        "value": "**A-Lister Name-List Help Menu**\n```\n$ python ALister_CLI.py name-list --help\nusage:\n  ALister_CLI.py name-list <query> <input-file> [<input-file> ...] [options]\n  ALister_CLI.py name-list (-e | --examples)\n  ALister_CLI.py name-list (-h | --help)\n\n\nAnalyze name list data.\n\npositional arguments:\n  <query>               The non-directional query argument is used to perform set\n                        operations on name lists. The group names are derived\n                        from the 1st row (column headers) of the delimited text file.\n                        The following set operations are permitted: AND, FAND, DIFF, OR.\n                        AND = intersect, FAND = fuzzy intersect, DIFF = difference, and\n                        OR = union. Additionally, parenthesis can be used to set order of\n                        operations. The query argument must be surrounded by quote marks.\n                        Example: \"(CONTROL-OR-TREATED1)-AND-(TREATED2)\"\n                        Permitted characters: alphanumeric, (), and -.\n  <input-file>          Full path to the input file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e, --examples        show examples and exit\n  -id <input_delimiter> [<input_delimiter> ...]\n                        The delimiter used within the input file.\n                        List once if all input files use the same delimiter.\n                        List for every file - in the same order as that of the\n                        input files - if delimiter varies between input files.\n                        Options: tab and comma. Default: tab.\n  -o <output_directory>\n                        The output directory. Default: current working directory.\n  -od <output_delimiter>\n                        The delimiter used in the result file.\n                        Options: tab, comma-row. Default: tab.\n  -v                    Make the output more verbose.\n  ```\n  \n  **A-Lister Diff-Expression Help Menu**\n  \n  BASH2*\n  \n  **A-Lister Name-List Examples**\n  \n  BASH3*\n  \n  **A-Lister Diff-Expression Examples**\n  \n  BASH4*\n \n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/staslist/A-Lister/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 Stanislav Listopad and Trina Norden-Krichmar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A-Lister"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "staslist"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 117878,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 57773,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 23130,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running A-Lister",
        "parent_header": [
          "A-Lister v1.1"
        ],
        "type": "Text_excerpt",
        "value": "To run A-Lister using command line interface (CLI) type ```python ALister_CLI.py``` while located in A-Lister's directory. This will bring up the help menu with list of available commands. For more information please refer to command line interface documentation below. \n\nTo run A-Lister using graphical user interface (GUI) type ```python ALister_GUI.py``` while located in A-Lister's directory. For more information please refer to graphical user interface documentation below.\n\nWe recommend that new users use the GUI to become familiar with A-Lister. The GUI portion of documentation will guide you through complete examples. The CLI is available for those that prefer using command line. \n\n**Note: Depending on how python is setup on your system you may need to type python3 instead of python within the terminal.**\n"
      },
      "source": "https://raw.githubusercontent.com/staslist/A-Lister/master/ReadMe.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:42:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}