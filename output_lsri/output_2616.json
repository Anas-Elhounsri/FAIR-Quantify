{
  "application_domain": [
    {
      "confidence": 28.12,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fanzheng10/HiDeF"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-13T18:59:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-30T22:16:38Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HiDeF (Hierarchical community Decoding Framework)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)"
        ],
        "type": "Text_excerpt",
        "value": "HiDeF is a method for robustly resolving the hierarchical structures of networks based on multiscale community detection and the concepts of persistent homology. \n\nHiDeF is described in the following manuscript:  \n\nZheng, F., Zhang, S., Churas, C. et al., [HiDeF: identifying persistent structures in multiscale \u2018omics data](https://doi.org/10.1186/s13059-020-02228-4). Genome Biol 22, 21 (2021).\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9360013713170747,
      "result": {
        "original_header": "Updates",
        "type": "Text_excerpt",
        "value": "- `1.1.5` Fixed bug where ``_tmp`` edge list temp files collide if multiple instances of ``hidef_finder.py`` are run on same machine. \n          Made small fix to ``jaccard_matrix`` to handle scipy breaking [change](https://github.com/fanzheng10/HiDeF/commit/3dc6225cc67e59126b5b168996fb9718ea73d264)  \n          \n- `1.1.4` Add [Colab notebooks](https://github.com/fanzheng10/HiDeF/blob/master/analysis/protein_interaction_network_app.ipynb) allowing quick exploration of HiDeF results - now applicable to models based on protein-protein interaction network.  \n- `1.1.3` Stable release around the time of paper publication, the first version available with `pip`.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://hidef.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fanzheng10/HiDeF/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/protein_interaction_network_app.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/protein_interaction_network_app.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/simple_app.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/simple_app.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/scRNA/single_cell_analysis_demo.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/analysis/scRNA/single_cell_analysis_demo.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/docs/test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/docs/test.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fanzheng10/HiDeF/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fanzheng10/HiDeF"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HiDeF (Hierarchical community Decoding Framework)"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/examples/test2.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/examples/test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/fig1.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation (Python package)",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)"
        ],
        "type": "Text_excerpt",
        "value": "With pip:  \n`pip install hidef`\n\nFrom source:  \n`python setup.py install`\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9980983808741833,
      "result": {
        "original_header": "HiDeF (Hierarchical community Decoding Framework)",
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/fanzheng10/HiDeF/blob/master/fig1.png?raw=true\" width=\"400\">\n \n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fanzheng10/HiDeF/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2020, Fan Zheng\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "HiDeF"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fanzheng10"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 684168,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 91544,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2256,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 799,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "coleslaw481",
          "type": "User"
        },
        "date_created": "2024-01-30T23:02:24Z",
        "date_published": "2024-01-30T23:04:23Z",
        "description": "* Fixed bug where ``_tmp`` edge list temp files collide if multiple instances of ``hidef_finder.py`` are run on same machine. \r\n          Made small fix to ``jaccard_matrix`` to handle scipy breaking [change](https://github.com/fanzheng10/HiDeF/commit/3dc6225cc67e59126b5b168996fb9718ea73d264)  \r\n          ",
        "html_url": "https://github.com/fanzheng10/HiDeF/releases/tag/1.1.5",
        "name": "multi instance hidef fix",
        "release_id": 139219832,
        "tag": "1.1.5",
        "tarball_url": "https://api.github.com/repos/fanzheng10/HiDeF/tarball/1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/fanzheng10/HiDeF/releases/139219832",
        "value": "https://api.github.com/repos/fanzheng10/HiDeF/releases/139219832",
        "zipball_url": "https://api.github.com/repos/fanzheng10/HiDeF/zipball/1.1.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running HiDeF from Cytoscape",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Best for small/medium networks < 10k nodes and < 50k edges.\n\nHiDeF has been fully integrated with the [Cytoscape](https://cytoscape.org/) platform, via our recently published [Community Detection APplication and Service (CDAPS)](https://doi.org/10.1371/journal.pcbi.1008239) framework.\n\nWith this option users can access unique features in the CDAPS framework, including (1) interacting with the source network to visualize the subnetwork of any detected community (2) performing gene set enrichment analysis (when the vertices of the source network are proteins/genes) (3) sharing the models via the [NDEx](http://www.ndexbio.org/) database.\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running HiDeF as a command-line tool",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "First, install the package as instructed above.\n\nUsing the codes in this repository, HiDeF can be used as a command-line tool. There are two main components of the scripts: `hidef_finder.py` and `weaver.py`.\n\nTo sweep the resolution profile and generate an optimized hierarchy based on pan-resolution community persistence, run the following command in a terminal: \n\n`python hidef_finder.py --g $graph --maxres $n --o $out [--options]`\n\n- `$graph`: a tab delimited file with 2-3 columns: nodeA, nodeB, weight (optional).\n- `$maxres`: the upper limit of the sampled range of the resolution parameter.\n- `$out`: a prefix string for the output files.  \n\nOther auxiliary parameters are explained in the manuscript.\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Outputs",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)",
          "Usage",
          "Running HiDeF as a command-line tool"
        ],
        "type": "Text_excerpt",
        "value": "- `$out.nodes`: A TSV file describing the content (nodes in the input network) of each community. The last column of this file contains the persistence of each community.  \n- `$out.edges`: A TSV file describing the parent-child relationships of communities in the hierarchy. The parent communities are in the 1st column and the children communities are in the 2nd column.  \n- `$out.gml`: A file in the GML format that can be opened in Cytoscape to visualize the hierarchy (using \"yFiles hierarchic layout\" in Cytoscape)\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 09:34:10",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Outputs",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)",
          "Usage",
          "Running HiDeF as a command-line tool"
        ],
        "type": "Text_excerpt",
        "value": "- `$out.nodes`: A TSV file describing the content (nodes in the input network) of each community. The last column of this file contains the persistence of each community.  \n- `$out.edges`: A TSV file describing the parent-child relationships of communities in the hierarchy. The parent communities are in the 1st column and the children communities are in the 2nd column.  \n- `$out.gml`: A file in the GML format that can be opened in Cytoscape to visualize the hierarchy (using \"yFiles hierarchic layout\" in Cytoscape)\n\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using HiDeF as a python package",
        "parent_header": [
          "HiDeF (Hierarchical community Decoding Framework)",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "For documents, please see [https://hidef.readthedocs.io](https://hidef.readthedocs.io).\n\nThe following example shows how to build a hierarchical view of a network based on pre-computed communities, by using HiDeF as a Python package. This workflow only involves `weaver.py`.\n\nFirst, the user needs to provide the clustering results on these data points. These results may be obtained from any multilevel clustering algorithm of the user's choice. In this example, suppose we have 8 data points and define 7 ways of partitioning them (in a Python terminal), \n\n```\nP = ['11111111',\n  '11111100',\n  '00001111',\n  '11100000',\n  '00110000',\n  '00001100',\n  '00000011']\n```\n\nThen the hierarchical view can be obtained by\n\n```\nfrom hidef import weaver\nwv = weaver.Weaver()\nH = wv.weave(P, cutoff=1.0)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fanzheng10/HiDeF/master/README.md",
      "technique": "header_analysis"
    }
  ]
}