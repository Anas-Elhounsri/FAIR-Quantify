{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ydkondratenko/cdsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-08-15T13:30:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-06T02:29:02Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Snakemake pipeline using CD-HIT-OTU-MiSeq utilities to extract OTUs from paired-end reads"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9245914273513637,
      "result": {
        "original_header": "cdsnake",
        "type": "Text_excerpt",
        "value": "To use pipeline you need to edit Snakefile according to your starting conditions: \n1.\tPlace your paired-end 16S reads in a folder. Reads should be unzipped prior to pipeline usage (should have an extension \u201c.fastq\u201d). Forward and reverse reads should have \u201c_R1_\u201d and \u201c_R2_\u201d in filenames. Alternatively, filenames for forward and reverse reads can end with \u201c_1\u201d and \u201c_2\u201d, prior to \u201c.fastq\u201d extension.\n2.\tSpecify the name of this folder in INPUT_FOLDER parameter.\n3.\tInstall CD-HIT-OTU-Miseq as described here. Follow steps 1-4 of Installation section.\n4.\tSpecify the path to cd-hit folder in CDHIT parameter.\n5.\tSpecify the name of your 16S database in DATABASE parameter. Note, that database should be formatted as described in 4 step of Installation of CD-HIT-OTU-Miseq (this reformatting places sequences with more specific annotations are at the beginning of the file). You can download reformatted versions of Greengenes and Silva databases here.\n6.\tSpecify a path to trimmomatic.jar file in TRIMMOMATIC parameter.\n7.\tYou can specify p and q parameters to better fit your data. p and q defines length of parts of R1 and R2 reads with a decent quality. For example, you can have the quality of first 220 nucleotides of your R1 reads of about 30 with a sudden drop of quality after 220 nucleotide. In this case you should set value of p parameter equal to 220. You can examine quality of your reads using graphic reports of fastqc or use other method of quality accession. \n8.\tParameters THREADS and MINLEN specify settings for trimmomatic, which is used for data filtering. Trimmomatic will try to use THREADS number of threads and will discard cropped reads if they become shorter than 100 nucleotides. \nTo run pipeline, you need to install Snakemake. Then place your edited Snakefile in input folder containing reads and cd into this folder. To run pipeline with default Snakemake settings, use command snakemake. To modify general parameters of pipeline (such as number of cores to use) use Snakemake parameters as described here.\nResults of clustering for pooled samples will be stored in folder \u201cpooled\u201d in input folder. OTU table for all samples will be saved in file \u201cOTU.txt\u201d in \u201cpooled\u201d folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydkondratenko/cdsnake/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ydkondratenko/cdsnake/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ydkondratenko/cdsnake/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ydkondratenko/cdsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cdsnake"
      },
      "source": "https://raw.githubusercontent.com/ydkondratenko/cdsnake/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9856092986602252,
      "result": {
        "original_header": "cdsnake",
        "type": "Text_excerpt",
        "value": "To use pipeline you need to edit Snakefile according to your starting conditions: \nTo run pipeline, you need to install Snakemake. Then place your edited Snakefile in input folder containing reads and cd into this folder. To run pipeline with default Snakemake settings, use command snakemake. To modify general parameters of pipeline (such as number of cores to use) use Snakemake parameters as described here.\nResults of clustering for pooled samples will be stored in folder \u201cpooled\u201d in input folder. OTU table for all samples will be saved in file \u201cOTU.txt\u201d in \u201cpooled\u201d folder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ydkondratenko/cdsnake/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ydkondratenko/cdsnake/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cdsnake"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ydkondratenko"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11836,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ydkondratenko/cdsnake/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:34:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}