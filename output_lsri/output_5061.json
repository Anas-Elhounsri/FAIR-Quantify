{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dpchris/MLVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-24T13:45:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-17T20:11:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9873190671518629,
      "result": {
        "original_header": "goal",
        "type": "Text_excerpt",
        "value": "\r\nMLVA_finder.py is a python script designed to do Multi loci VNTR analysis\r\n(VNTR stands for Variable Number of Tandem Repeats ).\r\nMLVA_finder.py performs an in silico PCR to extract sequences of tandem repeat from submitted fasta file(s)  \r\nand call VNTR alleles.\r\nThis script use a list of primers to recover sequences from the VNTRs.\r\nThe number of allowed mismatches can be set in the command line. \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9798645957793313,
      "result": {
        "original_header": "input",
        "type": "Text_excerpt",
        "value": "\r\n-i or --input takes the path of the directory containing all fasta file which will be used by the script \r\n-o or --output takes the path of the results directory where results will be saved\r\n-p or --primer takes the path of the primers list in a csv file (delimited by '\\t', \";\" or \",\")\r\n[options]\r\n-m or --mismatch takes the number of mismatches allowed for each primer (default = 2)\r\n-c or --contig : necessary if fasta files contain contigs\r\n-r or --round : rounds MLVA allele values, take float, default is 0.25 (meaning that an allele value of an integer +- 0.25 will be rounded to this integer; larger deviations from this value will be called as \"intermediate size alleles\" i.e. all alleles between 1.26 and 1.74 will be called 1.5)\r\n-b or --binning : corrects MLVA allele calls for primers present in binning_file.csv \r\n(default binning_file contains Brucella MLVA assay corrections as indicated in published allele numbering system version 3.6 (http://mlva.u-psud.fr/brucella/spip.php?article93) \r\nRules are defined by adding primers with insert_size and number of pattern repetitions in binning_file.csv. Binning file must be located in the same directory as MLVA_finder.py)\r\n--mixte : a fasta file with a single sequence will be considered as \"chromosome\" and fasta files with multiple sequences as contigs\r\n(insert size for \"chromosome\" is calculated for circular chromosome) \r\n--full-locus-name : header will be full locus name instead of reduced locus name\r\n--predicted-PCR-size-table : output a supplementary table with all predicted PCR sizes\r\n--flanking-seq <int>: add flanking column in <output.csv>, flanking are the sequences before and after the insert (primers inculded), you can chose the size of flanking sequences <int>\r\n\r\nprimers format : primers name must be written as shown below in primers_file :\r\n<locus_name>_<pattern_size>bp_<insert_size_in_reference_genome>bp_<corresponding allele coding convention>U\tforward_primer\treverse_primer\r\n\r\nexample : Lp03_96bp_941bp_8U\tCAACCAATGAAGCAAAAGCA\tAGGGGTTGATGGTCTCAATG\r\n\r\n(mind that indicated insert size contains both primers) \r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9228240978918465,
      "result": {
        "original_header": "output ###",
        "type": "Text_excerpt",
        "value": "\r\nMLVA_analysis_xxx.csv : csv file containing all MLVA values for each fasta file and all loci from the MLVA analysis \r\n\t    this csv file is designed to be uploaded on http://microbesgenotyping.i2bc.paris-saclay.fr\r\noutput file : csv file containing All informations from the MLVA analysis such as primers positions of match(s), size of insert, number of mismatches etc\r\nmismatch file : txt file containing all different mismatches for each locus (only locus with mismatches) found during MLVA analysis on input fasta sequence\r\npredicted-pcr-size-table.csv : optional csv file containing predicted PCR size\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dpchris/MLVA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dpchris/MLVA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dpchris/MLVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9999893129685025,
      "result": {
        "original_header": "with different number of mismatch allowed :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -m 1\t#1 mismatch allowed\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -m 4\t#4 mismatches allowed\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999893129685025,
      "result": {
        "original_header": "If fasta files contains contigs (and only contigs) :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -c\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -c -m 0\t#0 mismatches allowed\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9998767151818466,
      "result": {
        "original_header": "Using binning option :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Brucella -p data_test/primers/Brucella_primers.txt -o . -b data_test/Brucella_binning_file.csv \r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Brucella -p data_test/primers/Brucella_primers.txt -o . -b data_test/Brucella_binning_file.csv --predicted-PCR-size-table --flanking-seq 200 \r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8335528191056333,
      "result": {
        "type": "Text_excerpt",
        "value": "MLVA_finder.py README \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8348157526073275,
      "result": {
        "original_header": "output ###",
        "type": "Text_excerpt",
        "value": "\r\nMLVA_analysis_xxx.csv : csv file containing all MLVA values for each fasta file and all loci from the MLVA analysis \r\n\t    this csv file is designed to be uploaded on http://microbesgenotyping.i2bc.paris-saclay.fr\r\noutput file : csv file containing All informations from the MLVA analysis such as primers positions of match(s), size of insert, number of mismatches etc\r\nmismatch file : txt file containing all different mismatches for each locus (only locus with mismatches) found during MLVA analysis on input fasta sequence\r\npredicted-pcr-size-table.csv : optional csv file containing predicted PCR size\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.87687191634252,
      "result": {
        "original_header": "with different number of mismatch allowed :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -m 1\t#1 mismatch allowed\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -m 4\t#4 mismatches allowed\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.87687191634252,
      "result": {
        "original_header": "If fasta files contains contigs (and only contigs) :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -c\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt -c -m 0\t#0 mismatches allowed\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9232313353394103,
      "result": {
        "original_header": "Using binning option :",
        "type": "Text_excerpt",
        "value": "python3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Brucella -p data_test/primers/Brucella_primers.txt -o . -b data_test/Brucella_binning_file.csv \r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Brucella -p data_test/primers/Brucella_primers.txt -o . -b data_test/Brucella_binning_file.csv --predicted-PCR-size-table --flanking-seq 200 \r\n\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9019229624171622,
      "result": {
        "type": "Text_excerpt",
        "value": "MLVA_finder.py README \n"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dpchris/MLVA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MLVA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dpchris"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24655,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "\r\npython3\r\npython-dev (sudo apt-get install python-dev), \r\nregex (https://launchpad.net/ubuntu/+archive/primary/+files/python-regex_0.1.20170117.orig.tar.gz)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:39:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "command line examples",
        "type": "Text_excerpt",
        "value": "\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py -i data_test/assemblies/Legionella_pneumophila/ -o . -p data_test/primers/Legionella_pneumophila_primers.txt\r\npython3.6 [/path/to]/MLVA/MLVA_finder.py --input data_test/assemblies/Legionella_pneumophila/ --output [/path/to]/results/ --primer data_test/primers/Legionella_pneumophila_primers.txt (equivalent to the previous one)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/dpchris/MLVA/master/README.txt",
      "technique": "header_analysis"
    }
  ]
}