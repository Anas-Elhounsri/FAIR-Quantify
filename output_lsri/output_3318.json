{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZhangZhang89/DeepCLA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-11T10:59:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-23T02:53:51Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9300413819744234,
      "result": {
        "original_header": "DeepCLA",
        "type": "Text_excerpt",
        "value": "DeepCLA uses a deep learning apprach to predict clathrin, which is implemented by deep learning library Tensorflow backend. It allows users to run programs using specified protein sequences for clathrin prediction.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ZhangZhang89/DeepCLA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZhangZhang89/DeepCLA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ZhangZhang89/DeepCLA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCLA"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "* Install [python 3.6](https://www.python.org/downloads/) in Linux and Windows.\n* Since the program is written in python 3.6, python 3.6 with pip tool must be installed first. DeepCLA uses the following dependencies: numpy, pandas, matplotlib, and scikit-learn. You can install these packages first, by the following commands:\n\n```\npip install numpy\npip install pandas\npip install matplotlib\npip install scikit-learn\npip install tensorflow\n```\n* If you want to run on a GPU, you will need to install [CUDA](https://developer.nvidia.com/cuda-downloads) and [cuDNN](https://developer.nvidia.com/cudnn), please refer to their websites for corresponding versions. Then, you need to uninstall the previous version of Tensorflow and install the corresponding Tensorflow-GPU version, the installation form as follows:\n```\npip install tensorflow-gpu == 'your version'\n```\n* If you meet an error after operating import tensorflow, the specific contents are as follows:\n\nFutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'._np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)]). That's probably because the version of numpy is too high and not compatible with Tensorflow, you need to uninstall numpy and reinstall the lower version.\n"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999049662812999,
      "result": {
        "original_header": "Announcements",
        "type": "Text_excerpt",
        "value": "* If the best_model fails to be unzipped after downloading, it can be downloaded separately and then unzipped into the folder which contains predict.py.\n* If you want to use the model to predict your test data, you must prepare the test data as a txt format. Users can refer to the Example.txt under the Codes folder. Also of note, each protein name should be added by '>', otherwise the program will occur error.\n* To save the prediction results, the -output should be saved as a csv file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8228543515625172,
      "result": {
        "original_header": "Announcements",
        "type": "Text_excerpt",
        "value": "* If the best_model fails to be unzipped after downloading, it can be downloaded separately and then unzipped into the folder which contains predict.py.\n* If you want to use the model to predict your test data, you must prepare the test data as a txt format. Users can refer to the Example.txt under the Codes folder. Also of note, each protein name should be added by '>', otherwise the program will occur error.\n* To save the prediction results, the -output should be saved as a csv file.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ZhangZhang89/DeepCLA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DeepCLA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ZhangZhang89"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 11543,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "type": "Text_excerpt",
        "value": "```\nnumpy>=1.14.5\nbackend==tensorflow\n```"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running DeepCLA",
        "type": "Text_excerpt",
        "value": "Open cmd in windows or terminal in Linux, then cd to the DeepCLA-master/Codes folder which contains predict.py\n</br>**For clathrin prediction using our model, run:**\n</br>`python predict.py  -input [custom predicting data in txt format]  -threshold [threshold value]  -output [predicting results in csv format]`  \n\n</br>**Example:**\n</br>`python predict.py -input ../Data/Example.txt -threshold 0.5 -output ../Data/Results.csv`\n</br>-input and -threshold are required parameters, while -output is optional parameter. Prediction results will show in the cmd or terminal. If you don't want to save results, you need not input -output.\n</br>**Example:**\n</br>`python predict.py -input ../Data/Example.txt -threshold 0.5`\n\n</br>**For details of -input,-threshold and -output, run:**\n</br>`python predict.py -h`\n"
      },
      "source": "https://raw.githubusercontent.com/ZhangZhang89/DeepCLA/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 12:22:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}