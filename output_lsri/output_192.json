{
  "application_domain": [
    {
      "confidence": 35.77,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": "Ruth P Lim and Stefan Kachel and Adriana DM Villa and Leighton Kearney and Nuno Bettencourt and Alistair A Young and Amedeo Chiribiri and Cian M Scannell",
        "format": "bibtex",
        "title": "CardiSort: a convolutional neural network for cross vendor automated sorting of cardiac MR images",
        "type": "Text_excerpt",
        "value": "@misc{lim2021cardisort,\n    primaryclass = {eess.IV},\n    archiveprefix = {arXiv},\n    eprint = {2109.08479},\n    year = {2021},\n    author = {Ruth P Lim and Stefan Kachel and Adriana DM Villa and Leighton Kearney and Nuno Bettencourt and Alistair A Young and Amedeo Chiribiri and Cian M Scannell},\n    title = {CardiSort: a convolutional neural network for cross vendor automated sorting of cardiac MR images},\n}"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/q-cardIA/cardisort"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-28T13:29:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-07-31T14:50:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9466765922533559,
      "result": {
        "original_header": "cardisort",
        "type": "Text_excerpt",
        "value": "CardiSort: a convolutional neural network for cross vendor automated sorting of cardiac MR images \nThis is a deep learning network which was developed to sort cardiac MRI images by sequence type and imaging plane, facilitating efficient and fully automated post-processing pipelines. \n\nIf you find this code helpful in your research please cite the following [paper](https://arxiv.org/abs/2109.08479): \n"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8570316452579466,
      "result": {
        "type": "Text_excerpt",
        "value": "Ruth P Lim, Stefan Kachel, Adriana DM Villa, Leighton Kearney, Nuno Bettencourt, Alistair A Young, Amedeo Chiribiri, and Cian M Scannell. CardiSort: a convolutional neural network for cross vendor automated sorting of cardiac MR images. arXiv preprint\narXiv:2109.08479, 2021. \n"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cianmscannell/cardisort/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/q-cardIA/cardisort/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "q-cardIA/cardisort"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cardisort"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/run_multiple.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9281757167359634,
      "result": {
        "original_header": "cardisort",
        "type": "Text_excerpt",
        "value": "    >> python cardisort_inference.py [INPUT_FOLDER] \nor     \n    >> python cardisort_inference.py [INPUT_FOLDER] [OUTPUT_FOLDER]\n**This assumes that the input folder contains only one CMR study from one patient.** For an idea of how to run on multiple input folders from multiple patients see `run_multiple.sh`. You will need to update the path to the python environment to fit your own setup. \n"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8447143496306051,
      "result": {
        "original_header": "cardisort",
        "type": "Text_excerpt",
        "value": "The model can be run to sort a folder of DICOM images as: \n    >> python cardisort_inference.py [INPUT_FOLDER] \nor     \n"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/q-cardIA/cardisort/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cardisort"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "q-cardIA"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7665,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 113,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2109.08479"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/2109.08479, 2021.\n\n```\n@misc{lim2021cardisort,\n      title={CardiSort: a convolutional neural network for cross vendor automated sorting of cardiac MR images"
      },
      "source": "https://raw.githubusercontent.com/cianmscannell/cardisort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 00:06:15",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}