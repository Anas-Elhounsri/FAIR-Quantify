{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KrishnaswamyLab/AAnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-31T00:04:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-24T20:09:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Archetypal Analysis network (AAnet)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Archetypal Analysis network (AAnet)"
        ],
        "type": "Text_excerpt",
        "value": "AAnet is a tool for scalable Archetypal Analysis of large and potentially non-linear datasets. A full description of the algorithm is available in our manuscript on ArXiv.\n\n[D. van Dijk, D. Burkhardt, et al. Finding Archetypal Spaces for Data Using Neural Networks. 2019. arXiv](https://arxiv.org/abs/1901.09078)\n\n![alt text](https://github.com/KrishnaswamyLab/AAnet/blob/master/AAnet.png)\n\nArchetypal analysis is a data decomposition method that describes each observation in a dataset as a convex combination of \"pure types\" or archetypes. Existing methods for archetypal analysis work well when a linear relationship exists between the feature space and the archetypal space. However, such methods are not applicable to systems where the feature space is generated non-linearly from the combination of archetypes, such as in biological systems or image transformations. Here, we propose a reformulation of the problem such that the goal is to learn a non-linear transformation of the data into a latent archetypal space. To solve this problem, we introduce Archetypal Analysis network (AAnet), which is a deep neural network framework for learning and generating from a latent archetypal representation of data. We demonstrate state-of-the-art recovery of ground-truth archetypes in non-linear data domains, show AAnet can generative from data geometry rather than from data density, and use AAnet to identify biologically meaningful archetypes in single-cell gene expression data.\n"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.995066534825777,
      "result": {
        "original_header": "Using this repository",
        "type": "Text_excerpt",
        "value": "Currently, AAnet is not a full Python package, but all of the code you need to run the algorithm is in this repo. For convenience, we've organized code into folders for AAnet proper and for other algorithms to which we compared AAnet in our manuscript. \nThe most updated version of AAnet (08/01/2022) is implemented in torch. \n \n"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.958179016044587,
      "result": {
        "original_header": "File list",
        "type": "Text_excerpt",
        "value": "* `AAnet_torch/models`- Includes most recent iteration of AAnet model\n* `AAnet_torch/data` - Includes helper functions for generating curved simplices for testing\n* `AAnet_torch/simulated_data_example` - Includes Jupyter notebook and helper functiosn to run AAnet\n \n"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KrishnaswamyLab/AAnet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/notebooks/AAnet_tutorial_MNIST.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/notebooks/AAnet_tutorial_MNIST.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/AAnet_torch/simulated_data_example/AAnet_vs_other_methods_on_tetrahedron.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/AAnet_torch/simulated_data_example/AAnet_vs_other_methods_on_tetrahedron.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KrishnaswamyLab/AAnet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KrishnaswamyLab/AAnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Archetypal Analysis network (AAnet)"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KrishnaswamyLab/AAnet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "----------------------------------\n\nNon-Commercial License\nYale Copyright \u00a9 2024 Yale University. \n \nPermission is hereby granted to use, copy, modify, and distribute this Software for any non-commercial purpose. Any distribution or modification or derivations of the Software (together \u201cDerivative Works\u201d) must be made available on GitHub and shall include this copyright notice and this permission notice in all copies or substantial portions of the Software.  For the purposes of this license, \"non-commercial\" means not intended for or directed towards commercial advantage or monetary compensation either via the Software itself or Derivative Works or uses of either which lead to or generate any commercial products. In any event, the use and modification of the Software or Derivative Works shall remain governed by the terms and conditions of this Agreement; Any commercial use of the Software requires a separate commercial license from the copyright holder at Yale University. Direct any requests for commercial licenses to Yale Ventures at yaleventures@yale.edu.\n \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \n\n----------------------------------\n"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/AAnet.png"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AAnet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KrishnaswamyLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 807059,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 337155,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_papers": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://arxiv.org/abs/1901.09078"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-05 23:58:49",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 28
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "Archetypal Analysis network (AAnet)"
        ],
        "type": "Text_excerpt",
        "value": "* [Guided tutorial in Python](https://nbviewer.jupyter.org/github/KrishnaswamyLab/AAnet/blob/master/AAnet_torch/simulated_data_example/AAnet_vs_other_methods_on_tetrahedron.ipynb)\n\n"
      },
      "source": "https://raw.githubusercontent.com/KrishnaswamyLab/AAnet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}