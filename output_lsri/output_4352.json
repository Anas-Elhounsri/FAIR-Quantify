{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hsinnan75/GSAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-05-19T06:05:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-30T16:11:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GSAlign: an ultra-fast sequence alignment algorithm for intra-species genome comparison"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "Personal genomics and comparative genomics are two fields that are more and more important in clinical practices and genome researches. Both fields require sequence alignment to discover sequence conservation and structural variation. Though many methods have been developed to handle genome sequence alignment, some are designed for small genome comparison while some are not efficient for large genome comparison. Here, we present GSAlign to handle large genome comparison efficiently. GSAlign includes three unique features: 1) it is the first attempt to use Burrows-Wheeler Transform on genome sequence alignment; 2) it supports parallel computing; 3) it adopts a divide-and-conquer strategy to separate a query sequence into regions that are easy to align and regions that require gapped alignment. With all these features, we demonstrated GSAlign is very efficient and sensitive in finding both the exact matches and differences between two genome sequences and it is much faster than existing state-of-the-art methods. \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9578275806510966,
      "result": {
        "original_header": "GSAlign: an ultra-fast sequence alignment algorithm for intra-species genome comparison",
        "type": "Text_excerpt",
        "value": "Developers: Dr. Hsin-Nan Lin and Dr. Wen-Lian Hsu Institute of Information Science, Academia Sinica, Taiwan.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8164781613121703,
      "result": {
        "original_header": "Compiling",
        "type": "Text_excerpt",
        "value": "To compile GSAlign and the index tool, please change to GSAlign's folder and just type 'make' to compile GSAlign and bwt_index. If the compilation or the programs fail, please contact me (arith@iis.sinica.edu.tw), Thanks. \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8003154256473419,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "To align two genome sequences, GSAlign requires two genome files (in fasta format) \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9360571767223708,
      "result": {
        "original_header": "File formats",
        "type": "Text_excerpt",
        "value": "- Reference and query genome files \n    Both the reference genome and query genome files should be in FASTA format. \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "Download"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ conda install gsalign\n```\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Github",
        "parent_header": [
          "Download"
        ],
        "type": "Text_excerpt",
        "value": "  $ git clone https://github.com/hsinnan75/GSAlign.git\n  ```\nto download the package of GSAlign.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/hsinnan75/GSAlign/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hsinnan75/GSAlign/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "hsinnan75/GSAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GSAlign: an ultra-fast sequence alignment algorithm for intra-species genome comparison"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/run_test.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameter setting",
        "type": "Text_excerpt",
        "value": " ```\n-t INT number of threads [8]\n\n-i STR index prefix [BWT based (BWA)]\n\n-r STR reference genome filename [fasta]\n\n-q STR query genome filename [fasta]\n\n-o STR prefix of output files [output]\n\n-sen Sensitive mode [False]\n\n-dp Output Dot-plots [false]. It may not work on MacOS.\n\n-gp STR specify the path of gnuplot, ex: -gp /usr/bin/gnuplot\n\n-fmt INT Set the output format [1]: 1:maf, 2:aln\n\n-idy set the minimal sequnce identity [70]\n\n-one set one on one aligment mode [false] (This option forces the query\nsequence is only allowed to be aligned at most one position).\n\n-unique Only output unique alignment [false]\n\n-slen set the minimal seed length [15]. To compare two sequences of less similarity, please use smaller size seed length.\n\n-alen set the minimal alignment length [5000]\n\n-ind set the maximal indel size [25]. The maximal sigle indel size allowed in an alignment.\n\n-clr set the minimal cluster size [250]. A cluster is a group of seeds, and  cluster size is the total length of its seeds. This value can filter out random clusters.\n\n-no_vcf No VCF output [false]. Do not identify sequence variations.\n\n  ```\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.992526262652233,
      "result": {
        "original_header": "Compiling",
        "type": "Text_excerpt",
        "value": "To compile GSAlign and the index tool, please change to GSAlign's folder and just type 'make' to compile GSAlign and bwt_index. If the compilation or the programs fail, please contact me (arith@iis.sinica.edu.tw), Thanks. \nYou may run ./run_test.sh to test GSAlign with two E.coli strains.\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8227923671075711,
      "result": {
        "original_header": "Instructions",
        "type": "Text_excerpt",
        "value": "  ```\n  $ bin/bwt_index ref_file[ex.ecoli.fa] index_prefix[ex. Ecoli]\n  ```\nor \nTo align two genome sequences, GSAlign requires two genome files (in fasta format) \n  ```\n  $ bin/GSAlign -i idx_prefix -q fa2 -o output\n  ```\n \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.890524980376392,
      "result": {
        "original_header": "File formats",
        "type": "Text_excerpt",
        "value": "- Output file \n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/hsinnan75/GSAlign/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 hsinnan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GSAlign"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "hsinnan75"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 113822,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 113058,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1204,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 436,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/hsinnan75/GSAlign/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:08:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 51
      },
      "technique": "GitHub_API"
    }
  ]
}