{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/axbazin/panrgp_supdata"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-02-25T16:56:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-26T13:03:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scripts and final prediction for each genomic island prediction tool used in the benchmark for the panRGP paper"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9737579343180245,
      "result": {
        "original_header": "Supplementary data of panRGP publication",
        "type": "Text_excerpt",
        "value": "This repository is related to the following paper: [Bazin et. al. 2020](https://doi.org/10.1093/bioinformatics/btaa792)\n \n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8628756477084831,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "Files with the \u2018all_gis\u2019 prefix list all genomic islands predicted for each tool. They have the following format :\n- Accession_number : indicates the contig ID (NC_XXX)\n- Start : the start position  of the genomic island\n- End : the end (or stop) position of the genomic island\n- Prediction_method : the software, or method, used to predict this genomic island \nFiles with the \u201c*_dataset.txt\u201d suffix contains data of the reference dataset downloaded from  [here](http://www.pathogenomics.sfu.ca/islandviewer/download/) \nThe 'software_info.tsv' file provides all software versions and modes of installation. \nThe 'Strains_RefSeqID.tsv' file lists all genome accession numbers along with strain names and taxids of the benchmark dataset. Only genomes flagged as true in the \u201cuse\u201d field were considered for the benchmark. \n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/axbazin/panrgp_supdata/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/axbazin/panrgp_supdata/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "axbazin/panrgp_supdata"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Supplementary data of panRGP publication"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9491561031904824,
      "result": {
        "original_header": "Supplementary data of panRGP publication",
        "type": "Text_excerpt",
        "value": "The panRGP method is available in the PPanGGOLiN software suite : https://github.com/labgem/PPanGGOLiN \n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9564732018764001,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "The  'compare-tools.py' script (python>=3.6) computes benchmark metrics using the \u201call_gis*\u201d files and the \u201c*_dataset.txt\u201d files. \n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8001406277601512,
      "result": {
        "original_header": "Benchmark",
        "type": "Text_excerpt",
        "value": "The  'compare-tools.py' script (python>=3.6) computes benchmark metrics using the \u201call_gis*\u201d files and the \u201c*_dataset.txt\u201d files. \n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/axbazin/panrgp_supdata/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "panrgp_supdata"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "axbazin"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 7940,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:48:17",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "leuX hotspot study",
        "parent_header": [
          "Supplementary data of panRGP publication"
        ],
        "type": "Text_excerpt",
        "value": "The leuX hotspot was studied from E. coli  MAGs of [pasolli et. al. 2019](https://doi.org/10.1016/j.cell.2019.01.001).\n\nIn the leuX directory :\n\n'Organisms_statistics.tsv' file  lists the MAGs used along with statistics for each MAG.\n\n'spots_summary.tsv' file lists all the predicted spots among the MAGs of E. coli.\n\n'border_leuX.fasta' file lists the fasta sequences used to find the leuX hotspot. The following command was used :\n\n`ppanggolin align --pangenome pangenome.h5 --getinfo --draw_related --proteins border_leuX.fasta --output leuX`\n\n'spot_leuX.gexf' is the GEXF file of the studied spot graph.\n\u2018Info_input_prot.tsv\u2019 file lists all the RGPs and spots where the aligned proteins are found. Both of those files were generated with the previous command.\n"
      },
      "source": "https://raw.githubusercontent.com/axbazin/panrgp_supdata/master/README.md",
      "technique": "header_analysis"
    }
  ]
}