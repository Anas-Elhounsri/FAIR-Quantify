{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxiaopeng/dualmarker"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-14T06:47:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-21T11:33:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R package for data visulization and exploration of dual biomarkers"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9997864362381269,
      "result": {
        "original_header": "dualmarker",
        "type": "Text_excerpt",
        "value": "*Dualmarker* is designed for data exploration and hypothesis generation\nfor dual biomarkers. It provides intuitive visualizations and extensive\nassessment of two marker combinations using logistic regression model\nfor binary outcome (response analysis) and Cox regression for\ntime-to-event outcome (survival analysis).  \nIt performs dual marker analysis via two distinct modules:  \n\\- One module is evaluation of specific biomarker pair through\n*dm\\_pair* function, which comprehensively reveals the correlation among\ntwo markers, response and survival using over 14 sub-plots,such as\nboxplots, scatterplots, ROCs, and Kaplan-Meier plots.  \n\\- Another module is de-novo identification and prioritization of\nmarker2 among candidate markers in combination with known marker1 to\npredict response and survival through *dm\\_searchM2\\_cox* and\n*dm\\_searchM2\\_logit* function, its expansion version works for all\nbiomarker combination to prioritize the most significant pair through\n*dm\\_combM\\_cox* and *dm\\_combM\\_logit* function.  \nIt is applicable for both response and survival analyses and compatible\nwith both continuous and categorical variables. This figure illustrates\nthe framework of this package. \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8876980759688605,
      "result": {
        "original_header": "Key functions",
        "type": "Text_excerpt",
        "value": "Plenty of commands and functions are wrapped into five main functions: \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9469757048909123,
      "result": {
        "original_header": "*dm_pair*",
        "type": "Text_excerpt",
        "value": "*dm\\_searchM2\\_cox* and *dm\\_searchM2\\_logit* for de novo identification\nof novel marker2 to combine with marker1 using Cox survival model and\nlogistic regression model; *dm\\_combM\\_cox* and *dm\\_combM\\_logit* for\nde novo identification of marker pairs among all dual marker\ncombinations. \n**dm\\_pair** is the main function for visualization and statistics of\none pair of specific biomarkers. It takes the marker1, marker2,\ncovariates (optional), binary outcome(response) or time-to-event\noutcome(survival) variable as input, and returns list of comprehensive\nplots (in *response.plot*, *survival.plot* object) and statistic results\n(in *response.stats*, *survival.stats* object) from logistic regression\nfor binary outcome(response) and Cox regression for time-to-event\noutcome(survival) . The result is a *list* object with the following\nstructure: \nAll visualizations are shown in this overall plot\n![dualmarker\\_plot](man/figures/dualmarker_pair_plot.png)\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9682785266537937,
      "result": {
        "original_header": "*dm_searchM2_cox/logit*",
        "type": "Text_excerpt",
        "value": "The main functions for do novo identification of marker2 from candidates\n(m2.candidates) to combine with marker1. It takes marker1, and\nm2.candidates, covariates (optional), binary outcome(response) or\ntime-to-event outcome(survival) variables as input and returns the\nstatistical result of logistic or Cox regression model. Four regression\nmodels are built using single marker and dual marker w/ or w/o\ninteraction term: \n  - model1: Surv/Resp \\~ marker1 + covariates, labeled as \u2018SM1\u2019 for\n    short  \n  - model2: Surv/Resp \\~ marker2 + covariates , labeled as \u2018SM2\u2019 for\n    short  \n  - model3: Surv/Resp \\~ marker1 + marker2 + covariates, labeled as \u2018DM\u2019\n    for short, i.e.\u00a0dual-marker  \n  - model4: Surv/Resp \\~ marker1 \\* marker2 (with interaction term) +\n    covariates, labeled as \u2018DMI\u2019 for short, i.e.\u00a0dual-marker with\n    interaction \nModel comparison is performed between dual-marker and single-marker\nmodels by Likihood ratio test(LRT) using *anova* function.\n*dm\\_searchM2\\_topPlot* can facilitate the glance of top candidate\nmarker2s for both logistic and Cox regression.  \nThe statistics of regression include the basic information of marker1,\nmarker2, covariates, response, time, event; the estimate and p-values\nfrom 4 models, ROC/AUC(for binary outcome), concordant probability\nestimate(CPE, for survival analysis), AIC, p-values of model\ncomparisons. Users can filter and get interesting dual-marker pairs\nusing the statistics and model performance metrics. Here is an example\nof logistic regression: \n| colnames             | example values | description                          |\n| -------------------- | -------------- | ------------------------------------ |\n| response             | binaryResponse | response variable                    |\n| response\\_pos        | CR, PR         | positive response                    |\n| response\\_neg        | SD, PD         | negative response                    |\n| m1                   | TMB            | marker1 variable                     |\n| m2                   | gepscore\\_TGFb | marker2 variable                     |\n| covariates           | \"\"             | covariates variable                  |\n| cutpoint\\_m1         | NA             | cutpoint if m1 is numeric            |\n| cutpoint\\_m2         | NA             | cutpoint if m2 is numeric            |\n| m1\\_cat\\_pos         | \"\"             | positive values if m1 is categorical |\n| m1\\_cat\\_neg         | \"\"             | negative values if m1 is categorical |\n| m2\\_cat\\_pos         | \"\"             | positive values if m2 is categorical |\n| m2\\_cat\\_neg         | \"\"             | negative values if m2 is categorical |\n| SM1\\_m1\\_estimate    | 0.09963989     | estimate of marker1 in SM1 model     |\n| SM1\\_m1\\_p.value     | 1.395883e-06   | pvalue of marker1 in SM1 model       |\n| SM2\\_m2\\_estimate    | \\-0.1199803    | estimate of marker2 in SM2 model     |\n| SM2\\_m2\\_p.value     | 0.02516686     | pvalue of marker2 in SM2 model       |\n| DM\\_m1\\_estimate     | 0.09663392     | estimate of marker1 in DM model      |\n| DM\\_m1\\_p.value      | 2.582342e-06   | pvalue of marker1 in DM model        |\n| DM\\_m2\\_estimate     | \\-0.08748326   | estimate of marker2 in DM model      |\n| DM\\_m2\\_p.value      | 0.135587       | pvalue of marker2 in DM model        |\n| DMI\\_m1\\_estimate    | 0.119926       | estimate of marker1 in DMI model     |\n| DMI\\_m1\\_p.value     | 1.162081e-06   | pvalue of marker1 in DMI model       |\n| DMI\\_m2\\_estimate    | \\-0.2967303    | estimate of marker2 in DMI model     |\n| DMI\\_m2\\_p.value     | 0.003635338    | pvalue of marker2 in DMI model       |\n| DMI\\_m1:m2\\_estimate | 0.0182465      | estimate of interaction m1:m2        |\n| DMI\\_m1:m2\\_p.value  | 0.007925505    | pvalue of interaction m1:m2          |\n| SM1\\_auc             | 0.728          | AUC of SM1 model                     |\n| SM2\\_auc             | 0.591          | AUC of SM2 model                     |\n| DM\\_auc              | 0.747          | AUC of DM model                      |\n| DMI\\_auc             | 0.754          | AUC of DMI model                     |\n| SM1\\_AIC             | 239.2481       | AIC of SM1 model                     |\n| SM2\\_AIC             | 267.3176       | AIC of SM2 model                     |\n| DM\\_AIC              | 238.98         | AIC of DM model                      |\n| DMI\\_AIC             | 233.9904       | AIC of DMI model                     |\n| pval\\_SM1\\_vs\\_NULL  | 7.993656e-09   | pvalue of SM1-vs-NULL model          |\n| pval\\_SM2\\_vs\\_NULL  | 0.02249407     | pvalue of SM2-vs-NULL model          |\n| pval\\_SM1\\_vs\\_DM    | 0.1320594      | pvalue of SM1-vs-DM model            |\n| pval\\_SM2\\_vs\\_DM    | 3.630161e-08   | pvalue of SM2-vs-DM model            |\n| pval\\_SM1\\_vs\\_DMI   | 0.009765815    | pvalue of SM1-vs-DMI model           |\n| pval\\_SM2\\_vs\\_DMI   | 7.84323e-09    | pvalue of SM2-vs-DMI model           |\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9690063256300093,
      "result": {
        "original_header": "*dm_combM_cox/logit*",
        "type": "Text_excerpt",
        "value": "two functions for de novo identification of biomarker pairs from all\ndual-marker combinations. They use the similar input and get same output\nas *dm\\_searchM2\\_cox/logit*.\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9992246918687013,
      "result": {
        "original_header": "dataset",
        "type": "Text_excerpt",
        "value": "We demonstrate the package using\n[Imvigor210](http://research-pub.gene.com/IMvigor210CoreBiologies)\nbiomarker data. This dataset includes the baseline characterization of\nPDL1 protein level(IHC), gene expression profiling(GEP) and mutations on\n348 advanced UC patients as well as response and Overall survival(OS)\ndata treated by Atezolizumab.  \nThe demographic info, clinical efficacy and biomarker data is stored in\n**clin\\_bmk\\_IMvigor210** dataframe, with gene expression variables\ncontaining \u2018gep\\_\u2019 prefix, gene signature score variables containing\n\u2018gepscore\\_\u2019 prefix and mutation variables containing \u2018mut\\_\u2019 prefix.\nThe GEP data and gene signature score is processed according to the\nIMvigor210CoreBiologies package and gene signature score is calculated\nusing *hallmark* genesets from MsigDBv7.0 as well as signatures from the\nIMvigor210CoreBiologies package.\n``` r\nlibrary(dualmarker)\nlibrary(stringr)\nlibrary(dplyr)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9580988759755091,
      "result": {
        "original_header": "Example1: marker pair of TMB + TGF-beta signature",
        "type": "Text_excerpt",
        "value": "Here we demonstrate the binary outcome (drug response) analysis of TMB +\nTGF-beta gene signature(gepscore\\_TGFb.19gene) using *dm\\_pair*\nfunction. This pair of biomarker is studied in [Nature.2018\nFeb 22;554(7693):544-548](https://pubmed.ncbi.nlm.nih.gov/29443960/).\nThe *response* variable should be dichotomized by setting *response.pos*\nand *response.neg* values.\n``` r\nres.pair <- dm_pair(\n   data = clin_bmk_IMvigor210, \n   # response info\n   response = \"binaryResponse\", \n   response.pos = \"CR/PR\", \n   response.neg = \"SD/PD\", \n   label.response.pos = \"R\",\n   label.response.neg = \"NR\",\n   # marker1\n   marker1 = \"TMB\", \n   m1.num.cut = \"median\",  # default median cut for continuous variable\n   label.m1 = \"TMB\",\n   label.m1.pos = \"TMB_hi\",\n   label.m1.neg = \"TMB_lo\",\n   # marker2\n   marker2 = \"gepscore_TGFb.19gene\", \n   m2.num.cut = \"median\", \n   label.m2 = \"TGF_beta\", \n   label.m2.pos = \"TGFb_hi\",\n   label.m2.neg = \"TGFb_lo\",\n   # others\n   na.rm.response = F, # show NA for response variable\n   na.rm.marker = F,  # show NA from marker variable\n   # palette\n   palette.4quadrant = \"default\", \n   palette.other = \"default\"\n)\n```\n \n  - plot-1: \\[response analysis\\] Single marker  \n    The correlation between single marker and drug response is shown in\n    boxplot, labeled with p-values of Wilcoxon test between positive and\n    negative outcome(response). \n  - plot-2: \\[response analysis\\] Scatter chart  \n    The correlation between marker1, maker2 and drug response is shown\n    in scatter-chart with color indicating response status. If marker1\n    and/or marker2 is categorical, the jitter plot will be shown. \n  - plot-3: \\[response analysis\\] Four-quadrant chart  \n    Samples are split into four groups/quadrants(R1-R4), according to\n    cutoffs for continuous markers, default using \u2018median\u2019. The\n    independence of each group/quadrant is tested by Fisher exact test.\n    Response rate, sample size and confidence interval are shown in\n    matrix, doughnut chart and line chart. For the doughnut chart,\n    response rate is corresponding to red arc fraction and sample size\n    to width of ring, and the line chart reveals the response rate and\n    potential statistical interaction from two markers if lines are\n    crossed. \n  - plot-4: \\[response analysis\\] ROC curve  \n    The single and dual marker prediction of drug response is also shown\n    on ROC curve. Logistics regression model is applied w/ or w/o\n    interaction term between two biomarkers. AUC value and its\n    confidence interval is also drawn on the plot \n  - stats-1: \\[response analysis\\] Four-quadrant statistics  \n    *\\(response.stats\\)four.quadrant* contains four-quadrant statistics\n    of response, in the following 2 objects:\n    \n      - *param* contains the information of marker1,marker2, et al.\n      - *stats* contains the sample number, response rate and its\n        confidence interval in each quadrant, R1-R4 \n  - stats-2: \\[response analysis\\] Logistic regression result  \n    Four logistic regression models are built. Model comparison between\n    dual-marker and single-marker models is performed by Likelihood\n    ratio test(LRT) using *anova* function::\n    \n      - model1: Resp \\~ marker1 + covariates, labeled as \u2018M1\u2019 for\n        short  \n      - model2: Resp \\~ marker2 + covariates, labeled as \u2018M2\u2019 for\n        short  \n      - model3: Resp \\~ marker1 + marker2 + covariates, labeled as \u2018MD\u2019\n        for short, i.e.\u00a0dual-marker  \n      - model4: Resp \\~ marker1 \\* marker2 + covariates (with\n        interaction term), labeled as \u2018MDI\u2019 for short, i.e.\u00a0dual-marker\n        with interaction \n1.  basic parameters: time, event, m1(marker1), m2(marker2), cut point\n    of m1/m2 if m1/m2 are continuous, positive/negative values if m1/m2\n    is categorical  \n2.  logistic regression parameters: estimate(weight) and p-value(Wald\n    test) of each predictive variable in model1(SM1), model2(SM2),\n    model3(DM), model4(DMI). \u2018MDI\\_.m1:.m2\\_estimate\u2019 and\n    \u2018MDI\\_m1:m2\\_pval\u2019 is estimate and p-value of the interaction term\n    of marker1 and marker2  \n3.  AIC: AIC of SM1,SM2,DM and DMI models  \n4.  model comparison: p-values of Likelihood Ratio Test(LRT) for\n    SM1-vs-NULL(null model, no marker), SM2-vs-NULL, SM1-vs-DM,\n    SM2-vs-DM, SM1-vs-DMI, SM2-vs-DMI \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9769380939501147,
      "result": {
        "original_header": "Example2: marker pair of ARID1A mutation + CXCL13 expression",
        "type": "Text_excerpt",
        "value": "Here we demonstrate the visualization of CXCL13 expression and ARID1A\nmutation , this biomarker pair is studied by [Sci Transl Med. 2020\nJun 17;12(548):eabc4220](https://pubmed.ncbi.nlm.nih.gov/32554706/), we\nshowed the same result here.\n``` r\nres.pair <- dm_pair(\n   data = clin_bmk_IMvigor210, \n   # response (optional)\n   response = \"binaryResponse\",\n   response.pos = \"CR/PR\", \n   response.neg = \"SD/PD\",\n   label.response.pos = \"R\", \n   label.response.neg = \"NR\",\n   # survival info\n   time = \"os\", \n   event = \"censOS\",\n   # marker1\n   marker1 = \"mut_ARID1A\",  \n   label.m1 = \"ARID1A-mut\",\n   m1.cat.pos = \"YES\", \n   m1.cat.neg = \"NO\",\n   label.m1.pos = \"Mut\", \n   label.m1.neg = \"Wt\",\n   # marker2\n   marker2 = \"gep_CXCL13\",\n   m2.num.cut = \"median\", \n   label.m2 = \"CXCL13 expression\",\n   label.m2.pos = \"Hi\", \n   label.m2.neg = \"Lo\",\n   # palette\n   palette.4quadrant = \"jco\", # color scheme for four-quadrants\n   palette.other = \"jco\",  # color scheme for others\n   # others\n   na.rm.response = T, # show NA in response variable\n   na.rm.marker = T # show NA in biomarker variable: mut_ARID1A, gep_CXCL13\n)\n```\n \n  - plot-5: \\[survival analysis\\] survival plot of single marker\n    \n      - *survival.plot$km.m1m1*: KMplot of marker1 and marker2 on two\n        parallel sub-plots\n      - *survival.plot$scatter.m1m2*: scatter-plot of survival\n        time(y-axis) and marker1/marker2(x-axis) on two parallel\n        sub-plots, response status(if provided) is shown as color.\n        Nominal survival time is shown and labeled with different shape\n        for the censored data point. \n  - plot-6: \\[survival analysis\\] survival plot of dual marker\n    \n      - *km.dualmarker*: KMplot of dual marker, corresponding to four\n        quadrants in the scatter plot scenario.\n      - *km.dualmarker.facet*: conditional KMplot of dual marker. The\n        conditional KMplot represents the survival curve of marker1 on\n        condition of marker2-level (+/hi or -/lo), and marker2 on\n        condition of marker1 level. It reveals the association between\n        survival and marker1 on the context of marker2 level and vice\n        verse. P-values of log-rank test and adjusted p-values by\n        \u2018Bonferroni\u2019 method are shown on each sub-plot.\n      - *scatter.dualmarker*: scatter-plot of marker1 and marker2 with\n        survival time shown as the size of dot and response (if\n        provided) as color. Nominal survival time is shown and labeled\n        with different shape for the censored data point. \n  - plot-7: \\[survival analysis\\] Four-quadrant chart  \n    Like response analysis, four-quadrant plots for survival also\n    contains 4 sub-figures.\n    \n    1.  Area proportion chart: shows the sample size in each quadrant,\n        this chart may be different from counterpart in response\n        analysis owning to different missing samples of survival and\n        response data.  \n    2.  Statistic matrix: median survival time and confidence interval  \n    3.  KMplot of four quadrants  \n    4.  Line chart of median survival time for each quadrant \n  - stats-3: \\[survival analysis\\] Four-quadrant statistics  \n    *\\(survival.stats\\)four.quadrant* contains four-quadrant statistics\n    of survival in the following 2 objects:\n    \n      - *param* contains the note of marker1,marker2, cutoff methods et\n        al.\n      - *stats* contains the sample number, median survival and\n        confidence interval in each quadrant, R1-R4 \n  - stats-4: \\[survival analysis\\] Cox regression result  \n    Like binary outcome (response) analysis, four Cox regression models\n    are built. Model comparison between dual-marker and single-marker\n    models is performed by Likelihood ratio test(LRT) using *anova*\n    function:\n    \n      - model1: Surv \\~ marker1 + covariates, labeled as \u2018SM1\u2019 for\n        short  \n      - model2: Surv \\~ marker2 + covariates, labeled as \u2018SM2\u2019 for\n        short  \n      - model3: Surv \\~ marker1 + marker2 + covariates, labeled as \u2018DM\u2019\n        for short, i.e.\u00a0dual-marker  \n      - model4: Surv \\~ marker1 \\* marker2 + covariates (with\n        interaction term), labeled as \u2018DMI\u2019 for short, i.e.\u00a0dual-marker\n        with interaction \n1.  basic parameters: time, event, m1(marker1), m2(marker2), cut point\n    of m1/m2 if m1/m2 are continuous, positive/negative values if m1/m2\n    is categorical  \n2.  Cox regression parameters: estimate(weight) and p-value(Wald test)\n    of each predictive variable in model1(SM1), model2(SM2), model3(DM),\n    model4(DMI). \u2018DMI\\_m1:m2\\_estimate\u2019 and \u2018DMI\\_m1:m2\\_pval\u2019 is\n    estimate and p-value of the interaction term of marker1 and\n    marker2.  \n3.  AIC: AIC of SM1, SM2, DM, DMI model  \n4.  CPE: concordant probability estimate to evaluate the performance of\n    Cox model using *CPE* package  \n5.  model comparison: p-values of Likelihood Ratio Test(LRT) for\n    SM1-vs-NULL(R \\~ 1, no marker), SM2-vs-NULL, SM1-vs-MD, SM2-vs-DM,\n    SM1-vs-DMI, SM2-vs-DMI \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9687377918926406,
      "result": {
        "original_header": "Example3: search GEP candidates marker2 to combine with mut_ARID1A for survival analysis",
        "type": "Text_excerpt",
        "value": "Search among gene expression candidates to combine with ARID1A mutation\nusing *dm\\_searchM2\\_cox*\n``` r\nm2.candidates <- stringr::str_subset(colnames(clin_bmk_IMvigor210),\"gep_\")\nres.m2.cox <- dm_searchM2_cox(\n   data = clin_bmk_IMvigor210, \n   # survival\n   time = \"os\", \n   event = \"censOS\",\n   # marker1\n   marker1 = \"mut_ARID1A\", \n   m1.binarize = T, \n   m1.cat.pos = \"YES\", \n   m1.cat.neg = \"NO\", \n   # marker2\n   m2.candidates = m2.candidates, \n   m2.binarize = F, # as continuous variables\n   p.adjust.method = \"BH\"\n)\n```\n \nGlance of the top candidates gene: *dm\\_searchM2\\_topPlot* takes the\nresult of either *dm\\_searchM2\\_cox* or *dm\\_searchM2\\_logit* as input,\nand returns following figures: \n  - *$m2\\_effect* dot-chart showing top significant marker2s using model\n    comparison dual-vs-marker1  \n  - *$interact* dot-chart showing top significant marker2s having\n    statistical interaction with marker1  \n  - *$m1\\_m2\\_effect* scatter-plot showing log10-p-value of all marker2s\n    in model comparison of dual-vs-marker1 and dual-vs-marker2 \n  - plot-1: marker2 effect  \n    \u2018m2\\_effect\u2019 is dot-chart, showing the top significant marker2s,\n    whose introduction to dual-maker model(w/ or w/o interaction)\n    significantly increase the prediction of survival or response.\n    Likelihood ratio test(LRT) is carried out to compare dual-marker\n    model and marker1 single model, the signed log10-pValue is shown on\n    x-axis, and \u2018sign\u2019 indicates the effect direction of marker2(single\n    marker) to survival. i.e.\u00a0genes with negative values on the left are\n    positive survival predictors. \n  - plot-2: marker2\u2019s interaction  \n    \u2018interaction\u2019 is dot-chart, showing the top significant marker2s,\n    which has statistical interaction with marker1. Signed log10-pValue\n    is shown like \u2018m2\\_effect\u2019 \n  - plot-3: m1 and m2 effect  \n    \u2018m1\\_m2\\_effect\u2019 is scatter-plot, showing the -log10-pValue of model\n    comparison, i.e.\u00a0dual-vs-marker1 and dual-vs-marker2. Dual model\n    that superior to both marker1 and marker2 single marker model is\n    preferred, located top-right on the figure. \n  - plot-4: CPE \u2018CPE\u2019 is concordant probability estimate to evaluate the\n    performance of Cox model using *CPE* package \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9601929584900709,
      "result": {
        "original_header": "Example4: evaluation for all combinations",
        "type": "Text_excerpt",
        "value": "*dm\\_combM\\_logit* and *dm\\_combM\\_cox* will evaluate all combinations\nof dual-markers.Searching all biomarker pairs is time-consuming for\nthousands of gene expression biomarker. Here we demonstrate with only 4\nbiomarkers.\n``` r\nm.candidates <- c(\"TMB\", \"gep_CD274\",\"gep_CXCL13\", \"gepscore_TGFb.19gene\", \"mut_ARID1A\")\nres.combM.logit <- dm_combM_logit(\n   data = clin_bmk_IMvigor210, \n   response = \"binaryResponse\", \n   response.pos = \"CR/PR\",\n   response.neg = \"SD/PD\", \n   candidates = m.candidates,\n   m.binarize = F # don't dichotomize marker\n   )\n```\n \n  - glimpse of the result \nUsers can filter and get interesting dual-marker pairs using plenty of\nstatistics and model performance metrics, for example, AUC for response\nanalysis (logistic regression), concordant probability CPE for survival\nanalysis (Cox regression), p-value of dual-vs-single model comparison\nand statistical interaction of two markers.  \nTop 2 dual-marker pairs with the highest AUC\n``` r\nres.combM.logit %>% \n   arrange(desc(DM_auc)) %>%\n   dplyr::select(m1, m2, DM_auc) %>%\n   head(2) %>% \n   knitr::kable()\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/maxiaopeng/dualmarker/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxiaopeng/dualmarker/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "maxiaopeng/dualmarker"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dualmarker"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/dualmarker_pair_plot.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-4-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-5-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-6-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-7-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-11-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-11-2.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-12-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-12-2.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-12-3.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-13-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-18-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-19-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-20-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/README-unnamed-chunk-21-1.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "dualmarker"
        ],
        "type": "Text_excerpt",
        "value": "Install the latest developmental version from\n[GitHub](https://github.com/maxiaopeng/dualmarker) as follow:\n\n``` r\nif(!require(devtools)) install.packages(\"devtools\")\ndevtools::install_github(\"maxiaopeng/dualmarker\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9999999919848506,
      "result": {
        "original_header": "Example3: search GEP candidates marker2 to combine with mut_ARID1A for survival analysis",
        "type": "Text_excerpt",
        "value": "``` r\ndplyr::glimpse(res.m2.cox)\n#> Rows: 1,268\n#> Columns: 52\n#> $ time                 <chr> \"os\", \"os\", \"os\", \"os\", \"os\", \"os\", \"os\", \"os\", \u2026\n#> $ even                 <chr> \"censOS\", \"censOS\", \"censOS\", \"censOS\", \"censOS\"\u2026\n#> $ m1                   <chr> \"mut_ARID1A\", \"mut_ARID1A\", \"mut_ARID1A\", \"mut_A\u2026\n#> $ m2                   <chr> \"gep_ADA\", \"gep_AKT3\", \"gep_CD24\", \"gep_BCL2L11\"\u2026\n#> $ covariates           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \u2026\n#> $ cutpoint_m1          <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \u2026\n#> $ cutpoint_m2          <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \u2026\n#> $ m1_cat_pos           <chr> \"YES\", \"YES\", \"YES\", \"YES\", \"YES\", \"YES\", \"YES\",\u2026\n#> $ m1_cat_neg           <chr> \"NO\", \"NO\", \"NO\", \"NO\", \"NO\", \"NO\", \"NO\", \"NO\", \u2026\n#> $ m2_cat_pos           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \u2026\n#> $ m2_cat_neg           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \u2026\n#> $ SM1_m1_estimate      <dbl> -0.3931839, -0.3931839, -0.3931839, -0.3931839, \u2026\n#> $ SM1_m1_p.value       <dbl> 0.04572493, 0.04572493, 0.04572493, 0.04572493, \u2026\n#> $ SM1_m1_p.adj         <dbl> 0.04572493, 0.04572493, 0.04572493, 0.04572493, \u2026\n#> $ SM2_m2_estimate      <dbl> 0.020472278, -0.088602489, -0.040055394, -0.1144\u2026\n#> $ SM2_m2_p.value       <dbl> 0.7921732808, 0.2316870325, 0.5845798870, 0.1387\u2026\n#> $ SM2_m2_p.adj         <dbl> 0.90686960, 0.48881723, 0.79339732, 0.37478179, \u2026\n#> $ DM_m1_estimate       <dbl> -0.3925669, -0.3902232, -0.3992445, -0.3964988, \u2026\n#> $ DM_m1_p.value        <dbl> 0.04608730, 0.04740445, 0.04273637, 0.04396925, \u2026\n#> $ DM_m1_p.adj          <dbl> 0.07226057, 0.07226057, 0.07226057, 0.07226057, \u2026\n#> $ DM_m2_estimate       <dbl> 0.018169157, -0.086696989, -0.048006083, -0.1165\u2026\n#> $ DM_m2_p.value        <dbl> 0.815536324, 0.243180093, 0.514144401, 0.1321049\u2026\n#> $ DM_m2_p.adj          <dbl> 0.92247998, 0.51861521, 0.75506892, 0.39294519, \u2026\n#> $ DMI_m1_estimate      <dbl> -0.4642526, -0.3999853, -0.4101674, -0.3948740, \u2026\n#> $ DMI_m1_p.value       <dbl> 0.02572344, 0.04411029, 0.03869969, 0.04542806, \u2026\n#> $ DMI_m1_p.adj         <dbl> 0.08066473, 0.08066473, 0.08066473, 0.08066473, \u2026\n#> $ DMI_m2_estimate      <dbl> 0.094208982, -0.069846691, -0.092351419, -0.1520\u2026\n#> $ DMI_m2_p.value       <dbl> 0.284405899, 0.402004262, 0.263768116, 0.0785384\u2026\n#> $ DMI_m2_p.adj         <dbl> 0.60572337, 0.72716320, 0.58779960, 0.33195570, \u2026\n#> $ `DMI_m1:m2_estimate` <dbl> -0.37225167, -0.08245620, 0.22222076, 0.17555057\u2026\n#> $ `DMI_m1:m2_p.value`  <dbl> 0.05473952, 0.65399403, 0.23758675, 0.35539251, \u2026\n#> $ `DMI_m1:m2_p.adj`    <dbl> 0.9961319, 0.9961319, 0.9961319, 0.9961319, 0.99\u2026\n#> $ SM1_AIC              <dbl> 1695.692, 1695.692, 1695.692, 1695.692, 1695.692\u2026\n#> $ SM2_AIC              <dbl> 1699.937, 1698.583, 1699.707, 1697.803, 1697.684\u2026\n#> $ DM_AIC               <dbl> 1697.637, 1696.336, 1697.266, 1695.415, 1695.912\u2026\n#> $ DMI_AIC              <dbl> 1695.951, 1698.136, 1697.843, 1696.573, 1697.739\u2026\n#> $ SM1_CPE              <dbl> 0.535011, 0.535011, 0.535011, 0.535011, 0.535011\u2026\n#> $ SM2_CPE              <dbl> 0.5059344, 0.5255417, 0.5106205, 0.5308784, 0.53\u2026\n#> $ DM_CPE               <dbl> 0.5386091, 0.5507807, 0.5433692, 0.5559563, 0.55\u2026\n#> $ DMI_CPE              <dbl> 0.5580672, 0.5493288, 0.5512611, 0.5600019, 0.55\u2026\n#> $ pval_SM1_vs_NULL     <dbl> 0.03779216, 0.03779216, 0.03779216, 0.03779216, \u2026\n#> $ padj_SM1_vs_NULL     <dbl> 0.03779216, 0.03779216, 0.03779216, 0.03779216, \u2026\n#> $ pval_SM2_vs_NULL     <dbl> 0.792048437, 0.232822940, 0.584731219, 0.1377636\u2026\n#> $ padj_SM2_vs_NULL     <dbl> 0.90684524, 0.48877399, 0.79468294, 0.37566516, \u2026\n#> $ pval_SM1_vs_DM       <dbl> 0.815428198, 0.244342092, 0.514221058, 0.1313353\u2026\n#> $ padj_SM1_vs_DM       <dbl> 0.92235768, 0.52008877, 0.75466702, 0.39462852, \u2026\n#> $ pval_SM2_vs_DM       <dbl> 0.03812741, 0.03933856, 0.03508215, 0.03618768, \u2026\n#> $ padj_SM2_vs_DM       <dbl> 0.06163704, 0.06163704, 0.06163704, 0.06163704, \u2026\n#> $ pval_SM1_vs_DMI      <dbl> 0.154071909, 0.459326828, 0.396740154, 0.2102864\u2026\n#> $ padj_SM1_vs_DMI      <dbl> 0.5613885, 0.7924169, 0.7408932, 0.6386168, 0.73\u2026\n#> $ pval_SM2_vs_DMI      <dbl> 0.01844880, 0.10824010, 0.05327299, 0.07316198, \u2026\n#> $ padj_SM2_vs_DMI      <dbl> 0.1545506, 0.1545506, 0.1545506, 0.1545506, 0.15\u2026\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8565215496810603,
      "result": {
        "original_header": "Example3: search GEP candidates marker2 to combine with mut_ARID1A for survival analysis",
        "type": "Text_excerpt",
        "value": "``` r\nplot.m2.cox <- dm_searchM2_topPlot(res.m2.cox, top.n = 20, \n                                   show.padj = F, palette = \"jco\")\n``` \n``` r\nplot.m2.cox$m2_effect\n``` \n``` r\nplot.m2.cox$m1_m2_effect\n``` \n``` r\nplot.m2.cox$CPE\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/maxiaopeng/dualmarker/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2020\nCOPYRIGHT HOLDER: dualmarker\n"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/man/figures/dualmarker_overview.png"
      },
      "source": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dualmarker"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "maxiaopeng"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 178748,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/maxiaopeng/dualmarker/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:14:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}