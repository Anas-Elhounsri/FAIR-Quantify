{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Columba"
        ],
        "type": "Text_excerpt",
        "value": "Columba was first introduced in our [paper](https://doi.org/10.1016/j.isci.2021.102687). If you find this code useful in your research, please cite:\n\n```bibtex\n@article{RENDERS2021102687,\ntitle = {Dynamic partitioning of search patterns for approximate pattern matching using search schemes},\njournal = {iScience},\nvolume = {24},\nnumber = {7},\npages = {102687},\nyear = {2021},\nissn = {2589-0042},\ndoi = {https://doi.org/10.1016/j.isci.2021.102687},\nurl = {https://www.sciencedirect.com/science/article/pii/S2589004221006556},\nauthor = {Luca Renders and Kathleen Marchal and Jan Fostier},\nkeywords = {Algorithms, Bioinformatics, Computer science, High-performance computing in bioinformatics},\n```\n\nColumba 1.1 was introduced in a [conference paper](https://doi.org/10.1007/978-3-031-07802-6_36). If you use version 1.1 in your research please cite both versions:\n\n```bibtex\n@InProceedings{10.1007/978-3-031-07802-6_36,\nauthor=\"Renders, Luca\nand Depuydt, Lore\nand Fostier, Jan\",\neditor=\"Rojas, Ignacio\nand Valenzuela, Olga\nand Rojas, Fernando\nand Herrera, Luis Javier\nand Ortu{\\~{n}}o, Francisco\",\ntitle=\"Approximate Pattern Matching Using Search Schemes and In-Text Verification\",\nbooktitle=\"Bioinformatics and Biomedical Engineering\",\nyear=\"2022\",\npublisher=\"Springer International Publishing\",\naddress=\"Cham\",\npages=\"419--435\",\nisbn=\"978-3-031-07802-6\"\n}\n```\n\nColumba 1.2 was introduced in our newest paper \"Automated design of efficient search schemes for lossless approximate pattern matching\", accepted at RECOMB 2024.\n\n```bibtex\n@unpublished{renders2023,\n  author = {Renders, L. and Depuydt, L. and Rahmann, S. and Fostier, J.},\n  title = {Automated design of efficient search schemes for lossless approximate pattern matching},\n  year = {2023},\n  note = {Submitted to RECOMB 2024}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Renders, Luca\nand Depuydt, Lore\nand Fostier, Jan",
        "format": "bibtex",
        "title": "Approximate Pattern Matching Using Search Schemes and In-Text Verification",
        "type": "Text_excerpt",
        "value": "@inproceedings{10.1007/978-3-031-07802-6_36,\n    isbn = {978-3-031-07802-6},\n    pages = {419--435},\n    address = {Cham},\n    publisher = {Springer International Publishing},\n    year = {2022},\n    booktitle = {Bioinformatics and Biomedical Engineering},\n    title = {Approximate Pattern Matching Using Search Schemes and In-Text Verification},\n    editor = {Rojas, Ignacio\nand Valenzuela, Olga\nand Rojas, Fernando\nand Herrera, Luis Javier\nand Ortu{\\~{n}}o, Francisco},\n    author = {Renders, Luca\nand Depuydt, Lore\nand Fostier, Jan},\n}"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Renders, L. and Depuydt, L. and Rahmann, S. and Fostier, J.",
        "format": "bibtex",
        "title": "Automated design of efficient search schemes for lossless approximate pattern matching",
        "type": "Text_excerpt",
        "value": "@unpublished{renders2023,\n    note = {Submitted to RECOMB 2024},\n    year = {2023},\n    title = {Automated design of efficient search schemes for lossless approximate pattern matching},\n    author = {Renders, L. and Depuydt, L. and Rahmann, S. and Fostier, J.},\n}"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biointec/columba"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Columba"
        ],
        "type": "Text_excerpt",
        "value": "Questions and suggestions can be directed to:\n\n- [Luca.Renders@UGent.be](mailto:Luca.Renders@UGent.be)\n- [Jan.Fostier@UGent.be](mailto:Jan.Fostier@UGent.be)\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-10-23T12:31:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-25T19:23:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast Approximate Pattern Matching using Search Schemes"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9985805947523446,
      "result": {
        "original_header": "Columba",
        "type": "Text_excerpt",
        "value": "Columba is a powerful open-source read-mapper developed to significantly enhance the performance of lossless approximate pattern matching. This README provides an overview of the [key features and benefits](#key-features-and-benefits) of Columba, along with instructions for [installation](#installation), [usage](#usage), [result reproduction](#result-reproduction) and [citation](#citation).\nFinally, [contact information](#contact) is provided.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9923269865211539,
      "result": {
        "original_header": "Key features and benefits",
        "type": "Text_excerpt",
        "value": "- Columba is a **lossless** read-mapper, meaning that **all** occurrences up to the provided distance are found. Both the edit distance and the hamming distance are supported.\n- Columba can handle any valid search scheme, so if new search schemes are discovered no update is needed. See [custom search schemes](#custom-search-schemes) below.\n- Columba supports a dynamic selection of search schemes, where the search scheme best suited for the current read and reference text is chosen, resulting in faster runtimes! More info [here](#dynamic-selection---multiple-search-schemes).\n- Columba supports dynamic partitioning of the read, boosting the performance!\n- Columba comes with tunable in-text verification, which improves runtimes significantly. More info [here](#in-text-verification).\n- Columba is **fast**, outperforming other lossless aligners, thanks to all kinds of algorithmic tricks like an interleaved bit-vector representation and redundancy avoidance for the edit distance metric.\n \n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biointec/columba/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biointec/columba/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biointec/columba"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Columba"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biointec/columba/main/search_schemes/make_sub_folders.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Columba"
        ],
        "type": "Text_excerpt",
        "value": "The following instructions will get you a copy of the project up and running on your local machine.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing Columba",
        "parent_header": [
          "Columba",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The installation is now simple. First, clone columba from the Github address\n\n```terminal\n    git clone \"https://github.com/biointec/columba.git\"\n```\n\nFrom this directory, run the following commands to install columba:\n\n```bash\nmkdir build\ncd build\ncmake ..\nmake \n```\n\n---\n**NOTE!**\n\nIf your reference genome is longer than 4.29M characters, you need to compile Columba in 64-bit mode. To do so use these commands instead:\n\n```bash\nmkdir build\ncd build\ncmake -DTHIRTY_TWO=OFF ..\nmake \n```\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biointec/columba/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Affero General Public License v3.0",
        "spdx_id": "AGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/agpl-3.0",
        "value": "https://api.github.com/licenses/agpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "columba"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "biointec"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 372665,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8022,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2891,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 72,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biointec/columba/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrenders",
          "type": "User"
        },
        "date_created": "2023-11-02T15:04:21Z",
        "date_published": "2023-11-02T15:07:36Z",
        "description": "Columba 1.2 comes with small quality of life updates, as well as these extra features:\r\n\r\n* Output to SAM format\r\n* Support for dynamic selection of search schemes",
        "html_url": "https://github.com/biointec/columba/releases/tag/v1.2",
        "name": "Columba 1.2",
        "release_id": 127712037,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/biointec/columba/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/biointec/columba/releases/127712037",
        "value": "https://api.github.com/repos/biointec/columba/releases/127712037",
        "zipball_url": "https://api.github.com/repos/biointec/columba/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrenders",
          "type": "User"
        },
        "date_created": "2022-01-31T13:03:40Z",
        "date_published": "2022-01-31T14:37:04Z",
        "description": "Columba 1.1 introduces in-text verification, which can reduce the runtime by almost half.\r\nAdditionally, this release contains the sampled dataset used in our experiments.",
        "html_url": "https://github.com/biointec/columba/releases/tag/v1.1",
        "name": "Columba 1.1",
        "release_id": 58340842,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/biointec/columba/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/biointec/columba/releases/58340842",
        "value": "https://api.github.com/repos/biointec/columba/releases/58340842",
        "zipball_url": "https://api.github.com/repos/biointec/columba/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "lrenders",
          "type": "User"
        },
        "date_created": "2021-08-30T07:45:17Z",
        "date_published": "2021-03-15T13:39:29Z",
        "description": "This release contains four extra files. Two of the files relate to the 21st chromosome of the human genome: genome.hs.chr_21.txt and genome.hs.chr_21.reads.fasta. The former contains the 21st chromosome of the human genome from which all non-ACTG characters were subsituted and where to a single sentinel character was added at the end of the text. The latter contains 100 000 reads of length 100 sampled from the reference text. These reads are written in fasta format and the identifiers are equal to the position of the sampled read in the reference genome.\r\n\r\nThe second two files are two datasets that were used in the paper: `sampled_illumina_reads.fastq` and `sampled_pacbio_seeds.fastq`.\r\n",
        "html_url": "https://github.com/biointec/columba/releases/tag/v1.0",
        "name": "Extra files for example",
        "release_id": 39818480,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/biointec/columba/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/biointec/columba/releases/39818480",
        "value": "https://api.github.com/repos/biointec/columba/releases/39818480",
        "zipball_url": "https://api.github.com/repos/biointec/columba/zipball/v1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "Columba",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This package requires a number of packages to be install on your system. Required: CMake (3.0 or higher); Google's Sparsehash; gcc (tested on 8.3.0 and more recent compilers).\n\nHow to install these packages:\n\nAs a root, execute the following commands:\n\non Redhat / Fedora distributions\n\n```bash\nyum install cmake\nyum install sparsehash-devel\n```\n\non Ubuntu / Debian distributions\n\n```bash\napt-get install cmake\napt-get install libsparsehash-dev\n```  \n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:20:19",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Columba"
        ],
        "type": "Text_excerpt",
        "value": "Columba aligns reads to a bidirectional FM-index. To do this you need to build the FM-index based on the input data. Currently we only support input data with an alphabet of length 5 (e.g. for DNA A, C, G, T + $).\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building the index",
        "parent_header": [
          "Columba",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To build the bidirectional FM-index the text and the suffix arrays of the text and reverse text are required.\nTo reverse a text you can use the commando `rev`:\n\n```bash\nrev [basefile].txt > [basefile].rev.txt\n```\n\nThis commando will create the reverse text and store it in `[basefile].rev.txt`\nWe recommend the use of [radixSA64](https://github.com/mariusmni/radixSA64) for building the suffix arrays.\n\n```bash\n# make SA for original text\n[pathToRadixSA]/radixSA [basefile].txt [basefile].sa\n# make SA for reversed text\n[pathToRadixSA]/radixSA [basefile].rev.txt [basefile].rev.sa\n```\n\nTo build the FM-index run the following command in the `build` folder.\n\n```bash\n./columba-build [basefile]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 1",
        "parent_header": [
          "Columba",
          "Usage",
          "Building the index"
        ],
        "type": "Text_excerpt",
        "value": "After installing columba, the columba directory should look like this:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 cmake\n    \u251c\u2500\u2500 build\n    \u251c\u2500\u2500 search_schemes\n    \u2514\u2500\u2500 src\n```\n\nIn this example we will build the FM index for the 21st chromosome of the human genome. In order to do this we will create an `example` folder.\n    To create this folder navigate to the columba folder. Here enter the following command\n\n```bash\nmkdir example\n```\n\nTo this new directory, copy the example file found [here](https://github.com/biointec/columba/releases/download/v1.0/genome.hs.chr_21.txt). This is the 21st chromosome of the human genome where all non-ACGT character were removed. A sentinel character was also appended to this file.\n\nReverse the text using the `rev` command:\n\n```bash\nrev genome.hs.chr_21.txt > genome.hs.chr_21.rev.txt\n```\n\nAfter reversing the text your directory structure should look like:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 cmake\n    \u251c\u2500\u2500 build\n    \u251c\u2500\u2500 example\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.txt\n    |   \u2514\u2500\u2500 genome.hs.chr_21.txt\n    \u251c\u2500\u2500 search_schemes\n    \u2514\u2500\u2500 src\n```\n\nNow we need to create the suffix arrays. To do this enter the following commands:\n\n```bash\n# make SA for original text\n[pathToRadixSA64]/radixSA64 genome.hs.chr_21.txt genome.hs.chr_21.sa\n# make SA for reversed text\n[pathToRadixSA64]/radixSA64 genome.hs.chr_21.rev.txt genome.hs.chr_21.rev.sa\n```\n\nWhere `[pathToRadixSA64]` is the path to where you installed radixSA64.\n\nAfter this operation your directory structure will look like:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 cmake\n    \u251c\u2500\u2500 build\n    \u251c\u2500\u2500 example\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.sa\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.txt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa    \n    |   \u2514\u2500\u2500 genome.hs.chr_21.txt\n    \u251c\u2500\u2500 search_schemes\n    \u2514\u2500\u2500 src\n```\n\nFinally, everything is in place to build the FM-index!\nTo build the FM-index, navigate to the `build` folder and run the following command:\n\n```bash\n./columba-build ../example/genome.hs.chr_21\n```\n\nThe index files are then written to the same folder. Your directory structure will now look like:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 cmake\n    \u251c\u2500\u2500 build\n    \u251c\u2500\u2500 example \n    |   \u251c\u2500\u2500 genome.hs.chr_21.brt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.bwt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.cct\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.brt   \n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.sa\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.txt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.1 \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.128 \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.16      \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.2\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.32\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.4   \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.64\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.8\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.1  \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.128\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.16\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.2\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.32\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.4\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.64\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.bv.8\n    |   \u2514\u2500\u2500 genome.hs.chr_21.txt\n    \u251c\u2500\u2500 search_schemes\n    \u2514\u2500\u2500 src\n```\n\nCongratulations! You have used columba to build the FM-index of the 21st chromosome of the human genome!\n\nNote that the suffix array is created with different sparseness factors. This gives the user the option to choose any sparseness factor, depending on the amount of available RAM.\n\n---\n**CAUTION!**\n\nIf you have used an older version of Columba to build your index files you will have to rerun the build process to work with the newest version (and vice versa)!\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using the index",
        "parent_header": [
          "Columba",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This section explains how to use a built index for a reference genome. First a general overview is given.\nFinally, the details on how to use [custom search schemes](#custom-search-schemes) and [dynamic selection of search schemes](#dynamic-selection---multiple-search-schemes) are provided.\n\nColumba can align reads in a fasta (`.FASTA`, `.fasta`, `.fa`) or fastq (`.fq`, `.fastq`) format.\nTo align your reads use the following format:\n\n```bash\n./columba [options] basefile readfile.[ext]\n```\n\noptions:\n\n```plaintext\n [options]\n  -e  --max-ed          maximum edit distance [default = 0]\n  -s  --sa-sparseness   suffix array sparseness factor [default = 1]\n  -p  --partitioning    Add flag to do uniform/static/dynamic partitioning [default = dynamic]\n  -m   --metric         Add flag to set distance metric (editnaive/editopt/hamming) [default = editopt]\n  -i  --in-text         The tipping point for in-text verification [default = 5]\n  -ks --kmer-size       The size of the seeds for dynamic partitioning [default = 10]\n  -o  --output          The name of the outputfile. This file will be in .sam format. [default = ColumbaOutput.sam]\n  -ss --search-scheme   Choose the search scheme\n  options:\n        kuch1           Kucherov k + 1\n        kuch2           Kucherov k + 2\n        kianfar         Optimal Kianfar scheme\n        manbest         Manual best improvement for kianfar scheme (only for ed = 4)\n        pigeon          Pigeon hole scheme\n        01*0            01*0 search scheme\n        custom          custom search scheme, the next parameter should be a path to the folder containing this search scheme\n        multiple        multiple search scheme, the next parameter should be a path to the folder containing the different search schemes to choose from with dynamic selection.\n\n[ext]\n        one of the following: fq, fastq, FASTA, fasta, fa\nFollowing input files are required:\n        <base filename>.txt: input text T\n        <base filename>.cct: character counts table\n        <base filename>.sa.[saSF]: suffix array sample every [saSF] elements\n        <base filename>.bwt: BWT of T\n        <base filename>.brt: Prefix occurrence table of T\n        <base filename>.rev.brt: Prefix occurrence table of the reverse of T\n    \n```\n\nThe number of nodes, duration, and number of reported/unique matches will be printed to stdout, as well as the number of matches found entirely in the index, the number of unique matches found via in-text verification, the number of started and failed in-text verification procedures and the number of searches that started in the index.\nThe matches will be written in SAM format to the given output file (default = ColumbaOutput.sam).\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example 2",
        "parent_header": [
          "Columba",
          "Usage",
          "Using the index"
        ],
        "type": "Text_excerpt",
        "value": "Consider the final directory structure from [example 1](#example-1).\nCopy this [file](https://github.com/biointec/columba/releases/download/v1.0/genome.hs.chr_21.reads.fasta) to this directory.\nThis file contains 100 000 reads of length 100 all sampled from the reference text. Thus, each read will have at least one exact occurrence.\nIf you want to align these reads using the Pigeonhole scheme with k = 3 and using the edit distance and optimal static partitioning to our reference text, run the following command in the `build` folder:\n\n```bash\n./columba -e 3 -ss pigeon -m editopt -p static -o ../example/output.sam ../example/genome.hs.chr_21 ../example/genome.hs.chr_21.reads.fasta\n```\n\nAfter this operation your directory structure will look like:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 cmake\n    \u251c\u2500\u2500 build\n    \u251c\u2500\u2500 example \n    |   \u251c\u2500\u2500 genome.hs.chr_21.brt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.bwt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.cct    \n    |   \u251c\u2500\u2500 genome.hs.chr_21.reads.fasta\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.brt   \n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.sa\n    |   \u251c\u2500\u2500 genome.hs.chr_21.rev.txt\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.1    \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.2\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.4   \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.8\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.16    \n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.32\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.64\n    |   \u251c\u2500\u2500 genome.hs.chr_21.sa.128\n    |   \u251c\u2500\u2500 genome.hs.chr_21.txt\n    |   \u2514\u2500\u2500 output.sam\n    \u2514\u2500\u2500 src\n```\n\nThe results can be found in `output.sam`.\n\nTo align the reads with maximal hamming distance 2, dynamic partitioning, in-text verification at 5, and the Kucherov K + 1 search scheme run\n\n```bash\n./columba -m hamming -e 2 -ss kuch1 -p dynamic -i 5 -o output2.sam ../example/genome.hs.chr_21 ../example/genome.hs.chr_21.reads.fasta\n```\n\nThe results are in file `output2.Sam`.\n\nCongratulations! You are now able to use Columba to align reads to the 21st chromosome of the human genome!\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "In-text verification",
        "parent_header": [
          "Columba",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To speed up the read-mapper, we introduced in-text verification in Columba 1.1. Using this technique the potential in-index matches are looked up using the suffix array and verified directly in the text if the number of potential in-index matches falls below or equals some threshold `t`. This can reduce runtimes by  up to 50%!\n\nWe advise to use a threshold of 5.\nHowever, if you need to use a very sparse suffix array due to memory constraints, a lower value could perform better.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Custom Search Schemes",
        "parent_header": [
          "Columba",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The search scheme can either be one of the hardcoded search schemes present in Columba or you can provide a custom search scheme. In the [search_schemes](./search_schemes/) folder a number of search schemes is already present. Including the search schemes created by Hato.\n\nTo make your own search scheme you need to create a folder containing at least a file called `name.txt`, which contains the name of your search scheme on the first line.\nFor every maximum edit/hamming distance a subfolder should be present, which contains at least the file `searches.txt`. In this file the searches of your scheme are written line per line. Each line contains of three space-separated arrays: pi, L and U. Each array is written between curly braces {} and the values are comma-separated.\n\n---\n**NOTE!**\n\nThe pi array should be zero-based! The connectivity property should always be satisfied. The L and U array cannot decrease. All error distributions should be covered! To check if your search scheme is valid you can use a python script provided [in this directory](./validitychecker/).\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Static Partitioning",
        "parent_header": [
          "Columba",
          "Usage",
          "Custom Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "If you want to provide optimal static partitioning you can create a file named `static_partitioning.txt` in the folder of the maximum edit/hamming distance this partitioning is for. This file should contain one line with percentages (values between 0 and 1) separated by spaces. The ith percentage corresponds to the starting position (relative to the size of the pattern) of the (i + 1)th part (again this is zero based). The starting position of the first part is always zero and should **not** be provided.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dynamic Partitioning",
        "parent_header": [
          "Columba",
          "Usage",
          "Custom Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "Similarly, to provide values for dynamic partitioning you can create a file called `dynamic_partitioning.txt`. This file should contain two lines. The first line are percentages (again between 0 and 1) that correspond to the seeding positions, relative to the size of the pattern, of all parts, except the first and last part.\nThe second line should contain space-separated integers corresponding to the weights of each part.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Folder Structure Example",
        "parent_header": [
          "Columba",
          "Usage",
          "Custom Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "Consider a search scheme which supports maximal edit/hamming distances 1, 2 and 4. For distance 1 no static or dynamic partitioning values are known. For distance 2 only static partitioning values are known and for distance 4 both static and dynamic partitioning values are known. The folder structure of this search scheme should look like this:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 1\n    |   \u251c\u2500\u2500 searches.txt\n    \u251c\u2500\u2500 2 \n    |   \u251c\u2500\u2500 searches.txt\n    |   \u251c\u2500\u2500 static_partitioning.txt\n    \u251c\u2500\u2500 4\n    |   \u251c\u2500\u2500 dynamic_partitioning.txt\n    |   \u251c\u2500\u2500 searches.txt\n    |   \u251c\u2500\u2500 static_partitioning.txt\n    \u2514\u2500\u2500 name.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example `searches.txt`",
        "parent_header": [
          "Columba",
          "Usage",
          "Custom Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "Consider the pigeon hole search scheme for maximum edit distance 4. The `searches.txt` file should look like:\n\n```plaintext\n{0,1,2,3,4} {0,0,0,0,0} {0,4,4,4,4}\n{1,2,3,4,0} {0,0,0,0,0} {0,4,4,4,4}\n{2,3,4,1,0} {0,0,0,0,0} {0,4,4,4,4}\n{3,4,2,1,0} {0,0,0,0,0} {0,4,4,4,4}\n{4,3,2,1,0} {0,0,0,0,0} {0,4,4,4,4}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Other examples",
        "parent_header": [
          "Columba",
          "Usage",
          "Custom Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "In the [`search_schemes` directory](./search_schemes), a number of search schemes are available as custom search schemes.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dynamic Selection - Multiple Search Schemes",
        "parent_header": [
          "Columba",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To use dynamic selection you can provide a set of search schemes to be used.\nFor this you need to create a folder with a file called `name.txt` in it and for all values of `k`, where you want to provide multiple search schemes you need to create a directory.\nThe files in these subdirectory are named `scheme<x>.txt`, where `<x>` is the number of the search scheme (starting from 1).\nEach file contains the searches from one of the search schemes and the file needs to be structured like the `searches.txt` file of a custom search strategy (see [above](#custom-search-schemes)).\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Folder Structure",
        "parent_header": [
          "Columba",
          "Usage",
          "Dynamic Selection - Multiple Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "Consider a strategy where multiple search schemes are used which supports maximal edit/hamming distances  2, 4 and 6. For these values of `k` there exist respectively 2, 3 and 4 search schemes. The folder structure then should look like this:\n\n```plaintext\n    .\n    \u251c\u2500\u2500 2\n    |   \u251c\u2500\u2500 scheme1.txt\n    |   \u251c\u2500\u2500 scheme2.txt\n    \u251c\u2500\u2500 4 \n    |   \u251c\u2500\u2500 scheme1.txt\n    |   \u251c\u2500\u2500 scheme2.txt\n    |   \u251c\u2500\u2500 scheme3.txt\n    \u251c\u2500\u2500 6\n    |   \u251c\u2500\u2500 scheme1.txt\n    |   \u251c\u2500\u2500 scheme2.txt\n    |   \u251c\u2500\u2500 scheme3.txt\n    |   \u251c\u2500\u2500 scheme4.txt\n    \u2514\u2500\u2500 name.txt\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MinU search schemes",
        "parent_header": [
          "Columba",
          "Usage",
          "Dynamic Selection - Multiple Search Schemes"
        ],
        "type": "Text_excerpt",
        "value": "The minU search schemes, introduced in our paper \"Automated design of efficient search schemes for lossless approximate pattern matching\" are available [here](./search_schemes/multiple_opt).\nIn this directory there are folders made for dynamic selection for even values of `k`. It also contains a subdirectory `individual_schemes`, where each (co-)optimal scheme is presented.\n"
      },
      "source": "https://raw.githubusercontent.com/biointec/columba/main/README.md",
      "technique": "header_analysis"
    }
  ]
}