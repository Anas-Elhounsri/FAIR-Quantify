{
  "application_domain": [
    {
      "confidence": 28.57,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite the ncGTW package in publications use:\")\n\ncitEntry(entry=\"article\",\n    author=c(person(\"Chiung-Ting\", \"Wu\"),\n            person(\"David\", \"Herrington\", \"M.\"),\n            person(\"Yizhi\", \"Wang\"),\n            person(\"Timothy\", \"Ebbels\"),\n            person(\"Ibrahim\", \"Karaman\"),\n            person(\"Yue\", \"Wang\"),\n            person(\"Guoqiang\", \"Yu\")),\n    title=\"Alignment of LC-MS Profiles by Neighbor-wise Compound-specific Graphical Time Warping with Misalignment Detection\",\n    journal=\"bioRxiv\",\n    pages={715334},\n    year=\"2019\",\n    doi=\"10.1101/715334\",\n    textVersion = paste(\"Wu, Chiung-Ting, et al.\",\n    \"Alignment of LC-MS Profiles by Neighbor-wise Compound-specific Graphical Time Warping with Misalignment Detection.\", \"bioRxiv, 2019, 715334.\"))\n"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChiungTingWu/ncGTW"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-04-02T22:16:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-10-20T03:47:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Profile Alignment by Neighbor-wise Compound-specific Graphical Time Warping with Misalignment Detection"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.998854039453876,
      "result": {
        "original_header": "ncGTW",
        "type": "Text_excerpt",
        "value": "The purpose of ncGTW is to detect and fix the bad alignments in the\nLC-MS data. Currently, ncGTW is implemented in a R-package as a plug-in\nfor XCMS. That is, ncGTW can detect the misaligned feature groups from\nXCMS and realign them. After that, XCMS can use the realigned data from\nXCMS for more accurate grouping and peak-filling. \n"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9804664734808657,
      "result": {
        "original_header": "Algorithm overview",
        "type": "Text_excerpt",
        "value": "ncGTW detects the misaligned features with two criterions. First, ncGTW\nalgorithm estimates the p-value of each feature using higher resolution\nalignment result, where the p-value is given by the null hypothesis with\naccurate alignment. Second, we identifies all features with sufficiently\nsmall p-values and disjoint sample subsets. Then, ncGTW algorithm\nmatches the neighboring features to the corresponding features produced\nby lower resolution alignment, and consider realigning these features. \nTo realign the misaligned features, we proposed a new multiple alignment\nmethod, which is reference free and can incorporate the structure\ninformation in the dataset. There are two core ideas. First, instead of\nset a certain reference, ncGTW performs all possible pairwise alignments\nbetween each two sample with the structure information in the dataset.\nSecond, with all the pairwise alignment as constraints, ncGTW estimates\nthe warping functions for all sample to a coordinate. \n"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ChiungTingWu/ncGTW/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChiungTingWu/ncGTW/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ChiungTingWu/ncGTW"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncGTW"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/img/mis_det.png"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/img/ncGTW.png"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ncGTW"
        ],
        "type": "Text_excerpt",
        "value": "You can install the latest version of ncGTW from GitHub by\n\n``` r\ndevtools::install_github(\"ChiungTingWu/ncGTW\")\n```\n\nor from Bioconductor by\n\n``` r\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\n# The following initializes usage of Bioc devel\nBiocManager::install(version='devel')\n\nBiocManager::install(\"ncGTW\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ChiungTingWu/ncGTW/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/img/XCMS_ncGTW.png"
      },
      "source": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncGTW"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ChiungTingWu"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 120026,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 26274,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ChiungTingWu/ncGTW/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 11:05:24",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ]
}