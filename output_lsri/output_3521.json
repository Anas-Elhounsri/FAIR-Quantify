{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "Edwards DJ, Duch\u00eane S, Pope B, and Holt KE. \"SNPPar: identifying convergent evolution and other homoplasies from microbial whole-genome alignments\" _Microbial Genomics_ 2021 [doi:10.1101/2020.07.08.194480v1](https://doi.org/10.1099/mgen.0.000694)\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/d-j-e/SNPPar"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-07-11T02:06:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-14T08:24:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parallel/Homoplasic SNP Finder"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9478653267129964,
      "result": {
        "original_header": "SNPPar",
        "type": "Text_excerpt",
        "value": "SNPPar is designed to find homoplasic SNPs based on a user-defined phylogenetic tree - more specifically, it searches for those SNPs that are: parallel - same mutation (eg. A \\~> T) @ same position in two (or more) unrelated groups/isolates; convergent - different mutation in resulting in same base (eg. A \\~> T, C \\~> T) @ same position in two (or more) unrelated groups/isolates; and/or revertant - mutation back to ancestral state (eg. A \\~> T \\~> A) \nBy default, SNPPar uses TreeTime for ancestral state reconstruction (ASR), but using FastML for ASR is also available if FastML is installed (though much, much slower) \nCurrent Version: V1.2 (released 20 March 2023). Includes:\n* March 2023 fix, contributed by Anna Green & Roger Vargas (many thanks!), which changes the default behaviour to skip analysis of sites with missing calls as this can slow things down and cause crashes if there is a lot of missing data (you can switch back to the old behaviour or analysing and reporting these sites, if needed, using the --include_missing flag)\n* Feb 2022 bug fix affecting how nodes were labelled (previously resulted in some SNPs being reported on the wrong node in the output table, relative to how nodes were labelled in the output tree)\n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9628453835726695,
      "result": {
        "original_header": "Dedication",
        "type": "Text_excerpt",
        "value": "This software was developed by David Edwards, who tragically passed away on October 1, 2020. He was a wonderful and generous colleague who will be sorely missed by the rest of the Holt lab, of which he was an integral part for 10 years. We, his colleagues, have done our best to continue David's work by resolving issues with the SNPPar code and finalising the SNPPar publication, and we will continue to respond to issues as much as possible. \n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.992223507543392,
      "result": {
        "original_header": "Home:",
        "type": "Text_excerpt",
        "value": "Also available: [SNPPar_test](https://github.com/d-j-e/SNPPar_test) - a git with all the data, code, instructions and outputs for testing SNPPar with simulated and empirical data as found in the citation below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8924191029536331,
      "result": {
        "original_header": "SNPPar sorting",
        "type": "Text_excerpt",
        "value": "Three versions of the SNP sorting are available when using TreeTime for ASR   \n                            Filtered out before ASR  \n     \n    complex                 singletons and monophyletic SNPs \n                            (tested against tree)  \n     \n    intermediate (default)  same as complex except non-singleton SNPs\n                            with missing calls sent to ASR ()\n     \n    simple                  singletons only \nComplex sorting is the most memory efficient of the three, with simple being about twice as costly (estimate!); intermediate sits somewhere in between (though closer to complex).  \n  \nRun time is more dependant on missing calls; complex and intermediate sorting are quicker than simple sorting when there are no missing calls. When missing calls are present, complex sorting can be much slower than either simple or intermediate sorting. Intermediate sorting is typically faster than simple.  \n  \nComplex sorting may be useful when memory is a problem; simple sorting can be used to if you would prefer all the internal SNPs (i.e. non-singletons) to be mapped using ASR.  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9635512503115445,
      "result": {
        "original_header": "Outputs (default)",
        "type": "Text_excerpt",
        "value": "* Sequence calls at the internal nodes (MFASTA)\n* Mutation tables\n  * One with all mutation event calls\n  * Another with all mutation events at SNP positions found to be homoplasic\n* Tree in NHX (extended Newick) and NEXUS formats\n  * Internal node labels (same as found in mutation event tables)\n  * Total number of mutation events (SNPs) and homoplasic mutation events on each branch (but see **Important Note** below)\n  * NEXUS tree can be read into [FigTree](http://tree.bio.ed.ac.uk/software/figtree/) and [iToL](https://itol.embl.de/)\n  * NHX tree can be read by [ggtree](https://bioconductor.org/packages/release/bioc/html/ggtree.html)\n* Log file\n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8989588848380566,
      "result": {
        "original_header": "Explanation of header in mutation event files",
        "type": "Text_excerpt",
        "value": "* Common results\n  * Position: Position of mutation event in reference seqeunce\n  * Type: Intragenic or Intergenic\n  * Ancestor_Node: Internal node that is the parent node of the derived node\n  * Derived_Node: Node that has mutation - can be internal node or leaf\n  * Ancestor_Call: Base call found at the ancestor node\n  * Derived_Call: Base call found at derived node - indicates mutation \n* Intragenic\n  * Gene: Gene where mutation event is found (identifier: GenBank tag)\n  * Strand: Strand which the gene occurs on - 1: Forward Strand, -1: Reverse Strand\n  * Codon: Codon in CDS that has mutation\n  * Codon_Position: Position within codon that has mutation\n  * Ancestor_Codon: Codon found at the ancestor node\n  * Derived_Codon: Codon found at the derived node\n  * Ancestor_A.A.: Translated amino acid at the ancestor node\n  * Derived_A.A.: Translated amino acid at the derived node\n  * Change: With regard to A.A. -> S: synonymous; NS: nonsynonymous; Ambiguous\n* Intergenic \n  * Up_Gene: Nearest gene upstream (5') of mutation event\n  * Up_Gene_Strand: Strand on which upstream gene occurs (same as Strand)\n  * Up_Gene_Distance: Base pair distance from mutation event to upstream gene\n  * Down_Gene: Nearest gene downstream (3') of mutation event\n  * Down_Gene_Strand: Strand on which downstream gene occurs (same as Strand)\n  * Down_Gene_Distance: Base pair distance from mutation event to downstream gene\n   \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9380775509054315,
      "result": {
        "original_header": "Logging",
        "type": "Text_excerpt",
        "value": "SNPPar now includes logging of all (expected) events to a log file. There are three levels of messages; 'INFO' (Information), 'WARNING', and 'CRITICAL'. All three are *always* reported in the log file.  \n* 'INFO' are regular runtime messages.  \n* 'WARNING' are for problems such as invariant SNP calls or split genes in the GenBank reference which do not affect the running of SNPPar. However, these are excluded in either case, which may affect the user experience(!)  \n* 'CRITICAL' are for problems which result in the immediate termination of the program. These need to be resolved before SNPPar will run successfully.  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.941751936660325,
      "result": {
        "original_header": "Test Data",
        "type": "Text_excerpt",
        "value": "In the folder 'test_data' is a SNP table and phylogenetic tree from the simulated data set. These, along with the genbank reference 'NC_00962_3_1.gbk', can be used to test your installation. The expected outputs are included in the subfolder 'test_data/test_outputs'.  \n   \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9614270800977244,
      "result": {
        "original_header": "Important Note",
        "type": "Text_excerpt",
        "value": "SNPPar is very accurate, BUT calls where the ancestor is the root node ('N1') are arbituarly assigned (as with any ASR approach). As such, the output trees have no homoplasic events (parallel, convergent, or revertant) mapped to root node, though the total number of SNPs on each branch is estimated using the ratio of the distance to the child nodes of 'N1'. \nWhen a homoplasic event does occur at the root node and is removed, if there is only one other mutation event at the same SNP position, that mutation event is *not* removed from the tree. Keep this in mind when interpreting the tree output.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/d-j-e/SNPPar/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "d-j-e/SNPPar"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNPPar"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/example_node_labelled_nexus.tre.jpg"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing SNPPar",
        "type": "Text_excerpt",
        "value": "* pip install git+https://github.com/d-j-e/SNPPar\n\nThis will also install the requirements above (not FastML).\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9532355579786744,
      "result": {
        "original_header": "Home:",
        "type": "Text_excerpt",
        "value": "Please use the SNPPar 'Issues' page on GitHub if you have any problems or find any errors in the output.  \nAlso available: [SNPPar_test](https://github.com/d-j-e/SNPPar_test) - a git with all the data, code, instructions and outputs for testing SNPPar with simulated and empirical data as found in the citation below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ancestral-state-reconstruction, asr, convergent-snps, homoplasic-snps, parallel-snps, phylogenetics, revertant-snps, treetime"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License:",
        "type": "Text_excerpt",
        "value": "[GNU General Public License v3.0](https://github.com/d-j-e/SNPPar/blob/master/LICENSE)\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/SNPPar.png"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SNPPar"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "d-j-e"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 118535,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "katholt",
          "type": "User"
        },
        "date_created": "2023-03-20T10:30:47Z",
        "date_published": "2023-03-20T10:32:06Z",
        "description": "This includes a fix contributed by Anna Green & Roger Vargas (many thanks!), which changes the default behaviour to skip analysis of sites with missing calls as this can slow things down and cause crashes if there is a lot of missing data. \r\n\r\nIf needed, you can switch back to the old behaviour or analysing and reporting these sites, using the --include_missing flag.\r\n",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/v1.2",
        "name": "v1.2",
        "release_id": 96183277,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/96183277",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/96183277",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "katholt",
          "type": "User"
        },
        "date_created": "2022-02-08T15:01:18Z",
        "date_published": "2022-02-08T17:03:14Z",
        "description": "This release fixes a major bug that arose due to differences in how SNPPar labelled tree nodes internally vs how treetime labels tree nodes. This resulted in some SNPs being reported on the wrong node/branch numbers, relative to how the nodes were labelled in the output tree.\r\nThis problem is now fixed and the issue should no longer arise.\r\nPlease do post issues if you continue to encounter problems.",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/v1.1",
        "name": "Version 1.1",
        "release_id": 59019800,
        "tag": "v1.1",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/v1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/59019800",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/59019800",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/v1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "d-j-e",
          "type": "User"
        },
        "date_created": "2020-07-11T07:48:23Z",
        "date_published": "2020-07-11T07:58:15Z",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/V1.0",
        "name": "Release version",
        "release_id": 28464675,
        "tag": "V1.0",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/V1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/28464675",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/28464675",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/V1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "d-j-e",
          "type": "User"
        },
        "date_created": "2020-05-14T00:01:58Z",
        "date_published": "2020-05-14T00:04:53Z",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/v0.4.2dev",
        "name": "copy recursion fix",
        "release_id": 26489954,
        "tag": "v0.4.2dev",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/v0.4.2dev",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/26489954",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/26489954",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/v0.4.2dev"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "d-j-e",
          "type": "User"
        },
        "date_created": "2020-05-05T05:11:23Z",
        "date_published": "2020-05-05T05:13:12Z",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/v0.4.1dev",
        "name": "fastml fix",
        "release_id": 26168434,
        "tag": "v0.4.1dev",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/v0.4.1dev",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/26168434",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/26168434",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/v0.4.1dev"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "d-j-e",
          "type": "User"
        },
        "date_created": "2020-01-10T21:58:44Z",
        "date_published": "2020-01-13T23:47:17Z",
        "html_url": "https://github.com/d-j-e/SNPPar/releases/tag/v0.4dev",
        "release_id": 22808238,
        "tag": "v0.4dev",
        "tarball_url": "https://api.github.com/repos/d-j-e/SNPPar/tarball/v0.4dev",
        "type": "Release",
        "url": "https://api.github.com/repos/d-j-e/SNPPar/releases/22808238",
        "value": "https://api.github.com/repos/d-j-e/SNPPar/releases/22808238",
        "zipball_url": "https://api.github.com/repos/d-j-e/SNPPar/zipball/v0.4dev"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements:",
        "type": "Text_excerpt",
        "value": "* [BioPython](https://biopython.org/) (v1.66+)\n* [ETE3](http://etetoolkit.org/)\n* [TreeTime](https://github.com/neherlab/treetime) (<v0.8.6, incompatible files introduced in later versions)\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional Requirement:",
        "parent_header": [
          "Requirements:"
        ],
        "type": "Text_excerpt",
        "value": "[FastML](http://fastml.tau.ac.il/)\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input requirements:",
        "type": "Text_excerpt",
        "value": "The input tree needs to be bifurcating, rooted (midpoint is fine, but an outgroup is much better...), and in Newick format. Also, the branch lengths in the tree should be substitutions/site not, for example, no. of SNPs on each branch. (Note: you can divide the number of SNPs by the total no. of sites tested to get substitutions/site)\n\nSNPPar takes either a SNP table (a small example is provided below) or a MFASTA file with a second file with the SNP positions (in same order). Suitable reference-based SNP calls can be achieved using a variety of tools such as [Parsnp](https://github.com/marbl/parsnp) (working from assemblies) or [snippy](https://github.com/tseemann/snippy) (working from reads).\n\nSNP table\n\n    Pos,IsolateA,IsolateB,IsolateC\n    10,A,A,C\n    21,T,C,T\n    36,T,T,G\n    47,T,-,C\n\nAs MFASTA\n\n    >IsolateA\n    ATTT\n    >IsolateB\n    ACT-\n    >IsolateC\n    CTGC\n\nAnd a SNP Position file\n\n    10\n    21\n    36\n    47\n\nNote that any ambiguous and missing calls should be indicated by a '-'.\n\nFinally, SNPPar currently requires the GenBank version of the reference genome (same sequence as used to map the reads!). Whilst most annotations include gene tags, if your GenBank reference lacks these, you can either add tags prior to using SNPPar, or (crude) tags will be applied by the program. These will start at \"Tag_00001\" (number of \"0\"s depends on number of genes); they are not applied to the GenBank file!\n\nNote: If any gene is split in the reference (including across the origin of the reference), the program will ingnore this gene, but will give a warning to user (see **Logging** below).\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running SNPPar",
        "type": "Text_excerpt",
        "value": "    snppar -h\n    usage: snppar [-h] [-s SNPTABLE] [-m MFASTA] [-l SNP_POSITION_LIST]\n                  [-t TREE] [-g GENBANK] [-E SORTING] [-M MUTATION_EVENTS]\n                  [-d DIRECTORY] [-p PREFIX] [-P] [-S] [-C] [-R] [-A] [-a] [-n]\n                  [-e] [-u] [-f] [-x FASTML_EXECUTE]\n        SNPPar: Parallel/homoplasic SNP Finder V1.0\n    optional arguments:\n    -h, --help            show this help message and exit\n    -s SNPTABLE, --snptable SNPTABLE\n                        SNP table (i.e. RedDog output)\n    -m MFASTA, --mfasta MFASTA\n                        SNPs in MFASTA format\n    -l SNP_POSITION_LIST, --snp_position_list SNP_POSITION_LIST\n                        SNP position list (required for MFASTA input)\n    -t TREE, --tree TREE  Phylogenetic tree (required)\n    -g GENBANK, --genbank GENBANK\n                        Genbank reference (required)\n    -E SORTING, --sorting SORTING\n                        Type of sorting (options: \"complex\" - slower, less\n                        memory; \"simple\" - faster, more memory; default -\n                        intermediate)\n    -M MUTATION_EVENTS, --mutation_events MUTATION_EVENTS\n                        Mutation events file (previous results)\n    -d DIRECTORY, --directory DIRECTORY\n                        Output directory\n    -p PREFIX, --prefix PREFIX\n                        Prefix to add to output files\n    -P, --parallel        Flag for reporting of parallel calls\n    -S, --strict          Flag to output strict parallel calls (for testing,\n                        sets '-P' to True\")\n    -C, --convergent      Flag for reporting of convergent calls\n    -R, --revertant       Flag for reporting of revertant calls\n    -A, --all_homoplasic_types\n                        Flag for reporting of all three homoplasic types\n    -a, --no_all_calls    Flag to turn off reporting of all events at each call\n                        position (homoplasic reporting)\n    -n, --no_homoplasic   Flag to turn off homoplasic calls output\n    -e, --no_all_events   Flag to turn off reporting of all mutation events\n    -u, --no_clean_up     Flag to turn off deletion of intermediate files on\n                        completion of run\n    -f, --fastml          Flag to use fastML for ASR (default ASR: TreeTime)\n    -i, --include_missing\tTurn on analysis of sites with missing calls (otherwise these are excluded, as can cause problems and extend runtime)\n    -x FASTML_EXECUTE, --fastml_execute FASTML_EXECUTE\n                        Command to execute fastML (default command: \"fastml\"\n                        i.e. on PATH)\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command to run test data",
        "parent_header": [
          "Test Data"
        ],
        "type": "Text_excerpt",
        "value": "Navigate from the SNPPar github folder to test_data:  \n  \n    cd test_data\n  \nThen to run SNPPar:\n  \n    snppar \u2013s MTB_Global_L2_alleles.csv -t MTB_Global_L2.tre -g NC_00962_3_1.gbk -d testing\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 13:04:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To report only parallel events:",
        "parent_header": [
          "Example Commands"
        ],
        "type": "Text_excerpt",
        "value": "\t\n    snppar -s <alleles.csv> -t <tree.tre> -g <genbank.gbk> -P -a -n -e\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To report all three kinds of the homoplasic events:",
        "parent_header": [
          "Example Commands"
        ],
        "type": "Text_excerpt",
        "value": "\t\n    snppar -s <alleles.csv> -t <tree.tre> -g <genbank.gbk> -A\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "To get homoplasic SNPs including all events reported for each (i.e. default settings):",
        "parent_header": [
          "Example Commands"
        ],
        "type": "Text_excerpt",
        "value": "    snppar -s <alleles.csv> -t <tree.tre> -g <genbank.gbk>\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To only map the SNPs back to the tree:",
        "parent_header": [
          "Example Commands"
        ],
        "type": "Text_excerpt",
        "value": "\t\n    snppar -s <alleles.csv> -t <tree.tre> -g <genbank.gbk> -n \n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "To get only the homoplasic events (e.g. to remove them)",
        "parent_header": [
          "Example Commands"
        ],
        "type": "Text_excerpt",
        "value": "    snppar -s <alleles.csv> -t <tree.tre> -g <genbank.gbk> -a\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SNPPar can also use previous output (mutation events)",
        "type": "Text_excerpt",
        "value": "A prefix must be added to the run - SNPPar will overwrite results if not careful. Note: SNPPar does not work with the trees it produces, use the original tree\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example to call the three types of homoplasic SNPs post-run",
        "parent_header": [
          "SNPPar can also use previous output (mutation events)"
        ],
        "type": "Text_excerpt",
        "value": "    snppar -M <all_mutation_events.tsv> -p Run_1_ -t <tree.tre> -P -C -R\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example tree from test_data (using <a href=\"http://tree.bio.ed.ac.uk/software/figtree/\">FigTree</a>)",
        "parent_header": [
          "Test Data"
        ],
        "type": "Text_excerpt",
        "value": "<p align=\"left\"> \n<img src=\"https://github.com/d-j-e/SNPPar/blob/master/example_node_labelled_nexus.tre.jpg\" width=\"800\">\n</p>\n"
      },
      "source": "https://raw.githubusercontent.com/d-j-e/SNPPar/master/README.md",
      "technique": "header_analysis"
    }
  ]
}