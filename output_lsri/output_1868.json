{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MAT<sup>2</sup>"
        ],
        "type": "Text_excerpt",
        "value": "    @article{\n        title={MAT2: manifold alignment of single-cell transcriptomes with cell triplets}, \n        volume={37}, \n        ISSN={1367-4803}, \n        DOI={10.1093/bioinformatics/btab250}, \n        number={19}, \n        journal={Bioinformatics}, \n        author={Zhang, Jinglong and Zhang, Xu and Wang, Ying and Zeng, Feng and Zhao, Xing-Ming}, \n        year={2021}, \n        pages={3263\u20133269} \n    }\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Zhang-Jinglong/MAT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-21T04:28:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-09-11T02:10:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Manifold alignment of single-cell transcriptomes with cell triplets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.971798007975027,
      "result": {
        "original_header": "MAT<sup>2</sup>",
        "type": "Text_excerpt",
        "value": "**M**anifold **A**lignment of Single-Cell **T**ranscriptomes with Cell **T**riplets \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9966863469813984,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "MAT<sup>2</sup> is designed to align multiple single-cell transcriptome datasets. The operation steps include:\n1. **Manifold alignment based on contrastive learning**: For a cell of interest *C*, MAT<sup>2</sup> will select a cell *C<sub>p</sub>* from the same cell type but a different dataset and a cell *C<sub>n</sub>* from a different cell type to form a cell triplet (*C*, *C<sub>p</sub>*, *C<sub>n</sub>*). With contrastive learning, the distance between *C* and *C<sub>p</sub>* in the latent manifold space will be much smaller than that between *C* and *C<sub>n</sub>*, so as to achieve the alignment of single-cell transcriptome.\n2. **Reconstruction of gene expression profile**: With neural network decoders, consensus gene expression and batch-specific deviation will be reconstructed. Among them, consensus gene expression can be used for downstream analysis such as differential expression analysis and lineage tracing.\n \n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/Zhang-Jinglong/MAT2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/demo/test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/demo/test.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Zhang-Jinglong/MAT2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Zhang-Jinglong/MAT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAT2"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MAT<sup>2</sup>"
        ],
        "type": "Text_excerpt",
        "value": "Firstly, please use git to clone the MAT<sup>2</sup> repository.\n\n```\ngit clone https://github.com/Zhang-Jinglong/MAT2.git\ncd MAT2/\n```\n\nThe Python packages that MAT<sup>2</sup> depends on can be installed through conda. Run **setup.py** on the command line to install MAT<sup>2</sup>.\n```\nconda install --file requirements.txt --yes\npython setup.py install\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/Zhang-Jinglong/MAT2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Zhang-Jinglong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MAT2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "Zhang-Jinglong"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 26777,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:40:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "MAT<sup>2</sup>"
        ],
        "type": "Text_excerpt",
        "value": "There is an example jupyter notebook [`demo/test.ipynb`](demo/test.ipynb) in the source code of MAT<sup>2</sup>, which demonstrates the method of aligning single-cell transcriptome datasets using MAT<sup>2</sup>.\n\nThe following is a brief description of the usage of MAT<sup>2</sup> in Python:\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Loading datasets",
        "parent_header": [
          "MAT<sup>2</sup>",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The test data can be found in the [`demo/`](demo/) folder in the MAT<sup>2</sup> repository.\n\n```Python\nimport pandas as pd\nfrom MAT2 import *\n\n# MAT2 receives pandas DataFrame as input data.\n# Multiple batches of data are concated into a matrix of size gene_num * cell_num.\ndata = pd.read_csv('data.csv', header=0, index_col=0)\n\n# The row name of metadata should correspond to the cell name in data.\n# Metadata must contain the 'batch' column, and must also contain the 'type' column when supervised.\nmetadata = pd.read_csv('metadata.csv', header=0, index_col=0)\n\n# Anchor needs to be loaded only in unsupervised situations.\n# Each record contains two cell numbers (cell in [0,cell_num-1]) and a score (score in [0.0,1.0]).\nanchor = pd.read_csv('anchor.csv', header=0, index_col=0)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Building model &amp; training",
        "parent_header": [
          "MAT<sup>2</sup>",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "When providing cell type annotations for model building:\n\n```Python\nmodel = BuildMAT2(\n    data=data,\n    metadata=metadata,\n    num_workers=2,\n    use_gpu=True,\n    mode='supervised',\n    dropout_rate=0.3)\nmodel.train(epochs=30)\n```\n\nWhen there is no cell type annotation but anchor is provided:\n\n```Python\nmodel = BuildMAT2(\n    data=data,\n    metadata=metadata,\n    anchor=anchor,\n    num_workers=2,\n    use_gpu=True,\n    mode='manual')\nmodel.train(epochs=30)\n```\n\nWhen providing part of cell type annotations, run in semi-supervised mode:\n\n```Python\nmodel = BuildMAT2(\n    data=data,\n    metadata=metadata,\n    anchor=anchor,\n    num_workers=2,\n    use_gpu=True,\n    mode='semi-supervised')\nmodel.train(epochs=30)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing",
        "parent_header": [
          "MAT<sup>2</sup>",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "```Python\n# test_data = data\n# Calculate the reconstructed consensus gene expression.\nrec = model.evaluate(test_data)\n# Your own downstream analysis.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/Zhang-Jinglong/MAT2/master/README.md",
      "technique": "header_analysis"
    }
  ]
}