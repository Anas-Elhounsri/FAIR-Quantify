{
  "application_domain": [
    {
      "confidence": 53.22,
      "result": {
        "type": "String",
        "value": "Reinforcement Learning"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MolecularAI/Lib-INVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-09T14:35:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-25T21:49:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9280018852951132,
      "result": {
        "original_header": "Implementation of the Lib-INVENT decorator model",
        "type": "Text_excerpt",
        "value": "This repository holds the code used in the publication [Lib-INVENT: Reaction Based Generative Scaffold Decoration for in silico Library Design](https://chemrxiv.org/articles/preprint/Lib-INVENT_Reaction_Based_Generative_Scaffold_Decoration_for_in_silico_Library_Design/14473980). It holds the code needed to use the tool for chemical library generation as well as the initial training of the generative model.\nThe code for preprocessing of the dataset is contained in a separate project called Library Design Datasets.  \n(1) running modes: A folder containing the core python scripts. These include the key functionalities as well as additional inference modes.\n- transfer learning: The teacher forcing used for pretraining of the prior.\n- reinforcement learning: The RL loop used for focused library generation. This includes the four different learning strategies as described in the manuscriped. The DAP strategy is currently recommended for use in practical applications.\n- scaffold decorating: A sampling mode proposing decorations for a list of input scaffolds, given a trained decorator.\n- scoring: Assigns scores to input scaffolds based on a user-specified scoring function.\n- tuples likelihood computation: Calculates the likelihoods of scaffold-decoration pairs according to a given model. <br> \n(2) training_sets: The [datasets](https://doi.org/10.5281/zenodo.6627127) used for training of the prior.\n- purged_chembl_sliced.smi.gz: The CHEMBl 27 compounds, filtered according to the rules described in the manuscript and sliced according to the reaction rules.\n- chembl_train.smi.gz: The purged, sliced dataset used for model training. The DRD2 compounds are removed as described in the manuscript. \n(5) configurations: Setup of local paths and licenses. The paths within the JSON file are to be updated as appropriate for the user. \n(6) diversity_filters and reaction_filters: The various filters used in training of the reinforcement learning model. \n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9327635345992664,
      "result": {
        "type": "Text_excerpt",
        "value": "**Please note: this repository is no longer being maintained.** \n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MolecularAI/Lib-INVENT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL3%20-%20ROCS.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL3%20-%20ROCS.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL2%20-%20QSAR%20%2B%20RF.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL2%20-%20QSAR%20%2B%20RF.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20Teachers%20Forcing%20Tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20Teachers%20Forcing%20Tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL1%20-%20QSAR.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/Lib-INVENT%20RL1%20-%20QSAR.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/.ipynb_checkpoints/Lib-INVENT%20RL2%20-%20QSAR%20%2B%20RF-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/.ipynb_checkpoints/Lib-INVENT%20RL2%20-%20QSAR%20%2B%20RF-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/.ipynb_checkpoints/Lib-INVENT%20RL1%20-%20QSAR-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/tutorial/.ipynb_checkpoints/Lib-INVENT%20RL1%20-%20QSAR-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MolecularAI/Lib-INVENT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MolecularAI/Lib-INVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Implementation of the Lib-INVENT decorator model"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model"
        ],
        "type": "Text_excerpt",
        "value": "A [Conda](https://conda.io/miniconda.html) `environment.yml` is supplied with all the required libraries.\n\n~~~~\n$> git clone <repo url>\n$> cd <repo folder>\n$> conda env create -f environment.yml\n$> conda activate lib-invent\n(lib-invent) $> ...\n~~~~\nNOTE: Sometimes issues with the installation of tensorflow appear. It may need to be reinstalled manually.\nFrom here the general usage applies.\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9102007898537896,
      "result": {
        "original_header": "Implementation of the Lib-INVENT decorator model",
        "type": "Text_excerpt",
        "value": "The scripts are organised in the following folder structure: \n(4) examples: example JSON configuration files for the running modes. \n(5) configurations: Setup of local paths and licenses. The paths within the JSON file are to be updated as appropriate for the user. \n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9266214653868364,
      "result": {
        "original_header": "Implementation of the Lib-INVENT decorator model",
        "type": "Text_excerpt",
        "value": "(4) examples: example JSON configuration files for the running modes. \n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MolecularAI/Lib-INVENT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Lib-INVENT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "MolecularAI"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 3137565,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 161622,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model"
        ],
        "type": "Text_excerpt",
        "value": "The repository includes a Conda `environment.yml` file with the required libraries to run all the scripts. All models were tested on Linux with both a Tesla V-100 and a Geforce 2070. It should work just fine with other Linux setups and a mid-high range GPU.\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:41:41",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 55
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "General Usage",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model"
        ],
        "type": "Text_excerpt",
        "value": "The functionality of the model is separated into distinct mutually independent running modes. \nThey are called through the `input.py` file and corresponding JSON configuration files specifying the parameters necessary to execute the given running mode. An example configuration is provided for each running mode in the `examples` folder.\nTo run, type:\n\n`python <path/to/input.py> <path/to/configuration.json>`\n\nAll output files are in tsv format (the separator is \\t). This is also the expected format of the input files where these correspond to a dataset.\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configurations",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model",
          "General Usage"
        ],
        "type": "Text_excerpt",
        "value": "The second field is called `\"parameters\"` and takes a dictionary as an input. This dictionary contains all the arguments specified by the configuration of the appropriate running mode - these are defined in the `running_modes/configurations` folder.\nIn this way, any Lib-INVENT functionality can be run from the command line with a single command containing only two arguments: the path to the input.py file and to the JSON configuration.\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Overview",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model",
          "General Usage"
        ],
        "type": "Text_excerpt",
        "value": "The first running mode to run. It takes a training dataset and initiates an empty model with the appropriate vocabulary and architecture specified by the configuration file. This model is then typically passed to the transfer learning mode to be trained to produce valid smiles. \n\n2) Transfer learning: <br>\nThis mode corresponds to training a decorator model to maximise the likelihood of scaffold-decoration pairs produced by it. The decorator can be initiated as an empty model (in which case the training essentially amounts to teacher's forcing) or a pretrained decorator (the transfer learning case). In either case, the vocabulary has to correspond to the vocabulary present in the trained and validation datasets.\n\n3) Reinforcement learning: <br>\nThis mode takes a pretrained decorator model and attempts to adapt it to a specific task using reinforcement learning. Essentially, policy iterations are performed and the reward contains scores computed by the scoring function.\n\n4) Scaffold decorating (called sampling in previous versions of the project): <br>\nAs opposed to the previous running modes, no model is trained here. Instead, this running produces decorations for scaffolds passed to an already trained model. It is useful for evaluation purposes and for practical usage of the models.\n\n5) Scoring: <br>\nA running mode used to compute the scores given by a scoring function for a set of input smiles. It is used to evaluate the utility of compounds proposed by the generative models.\n\n6) Tuples likelihood computation: <br>\nComputes the likelihood of scaffold-decoration pairs passed to a trained model. This is useful for evaluation purposes.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage examples",
        "parent_header": [
          "Implementation of the Lib-INVENT decorator model"
        ],
        "type": "Text_excerpt",
        "value": "To download the [datasets](https://doi.org/10.5281/zenodo.6627127) from [Zenodo](https://zenodo.org/): `python download_training_datasets.py`\n\nTo run with a single line command from the command line (provided the paths in the configuration JSON file are adapted as required):\n`python input.py examples/scoring.json`\n\nTesting:\n`python main_test.py`\n\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/MolecularAI/Lib-INVENT/main/README.md",
      "technique": "header_analysis"
    }
  ]
}