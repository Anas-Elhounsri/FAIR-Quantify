{
  "application_domain": [
    {
      "confidence": 22.49,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fahadahaf/satori"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-07T22:17:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-02-16T09:44:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A new and revamped implementation of SATORI. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9897041002599353,
      "result": {
        "original_header": "SATORI v0.2",
        "type": "Text_excerpt",
        "value": "**SATORI** is a **S**elf-**AT**tenti**O**n based deep learning model that captures **R**egulatory element **I**nteractions in genomic sequences. It can be used to infer a global landscape of interactions in a given genomic dataset, with a minimal post-processing step.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.929388242725539,
      "result": {
        "original_header": "Manuscript",
        "type": "Text_excerpt",
        "value": "Fahad Ullah, Asa Ben-Hur, A self-attention model for inferring cooperativity between regulatory features, Nucleic Acids Research, 2021;, gkab349, [https://doi.org/10.1093/nar/gkab349](https://doi.org/10.1093/nar/gkab349)\n \n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fahadahaf/SATORI/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_TAL-GATA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_TAL-GATA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Motif_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Motif_Analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Generate_attn_dist_figures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Generate_attn_dist_figures.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Interact_Distance_Dist_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Interact_Distance_Dist_Analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Scores_Distribution_Analysis_fltr-individual.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Scores_Distribution_Analysis_fltr-individual.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_Human_Promoter.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_Human_Promoter.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_Arabidopsis-Genome.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_Arabidopsis-Genome.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Redundancy_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Redundancy_Analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_TAL-GATA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Post_Process_TAL-GATA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_Arabidopsis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_Arabidopsis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Scores_Distribution_Analysis_fltr-pairs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/Attention_Scores_Distribution_Analysis_fltr-pairs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_Human.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/analysis/DFIM-vs-ATTN_Human.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fahadahaf/satori/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fahadahaf/satori"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SATORI v0.2"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "SATORI v0.2"
        ],
        "type": "Text_excerpt",
        "value": "1. Download SATORI (via git clone):\n```\ngit clone git@github.com:fahadahaf/satori.git satori\n```\n2. Navigate to the cloned directory:\n```\ncd satori\n```\n3. Install SATORI:\n```\npython setup.py install\n```\n4. Make the main script (satori.py) executable:\n```\nchmod +x satori.py\n```\n5. (Optional) To execute the script everywhere, update the PATH and PYTHONPATH environment variables:\n```\nexport PATH=path-to-satori:$PATH\nexport PYTHONPATH=path-to-satori/satori:$PYTHONPATH\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fahadahaf/satori/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Fahad Ullah\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "satori"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fahadahaf"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 2693444,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1276669,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 150589,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependency",
        "parent_header": [
          "SATORI v0.2"
        ],
        "type": "Text_excerpt",
        "value": "**SATORI** is written in python 3. The following python packages are required:  \n[biopython (version 1.75)](https://biopython.org)  \n[captum (version 0.2.0)](https://captum.ai)  \n[fastprogress (version 0.1.21)](https://github.com/fastai/fastprogress)  \n[matplotlib (vresion 3.1.3)](https://matplotlib.org)  \n[numpy (version 1.17.2)](www.numpy.org)   \n[pandas (version 0.25.1)](www.pandas.pydata.org)  \n[pytorch (version 1.2.0)](https://pytorch.org)  \n[scikit-learn (vresion 0.24)](https://scikit-learn.org/stable/)  \n[scipy (version 1.4.1)](www.scipy.org)  \n[seaborn (version 0.9.0)](https://seaborn.pydata.org)  \n[statsmodels (version 0.9.0)](http://www.statsmodels.org/stable/index.html)  \n\nand for motif analysis:  \n[MEME suite](http://meme-suite.org/doc/download.html)  \n[WebLogo](https://weblogo.berkeley.edu)\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:16:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "SATORI v0.2"
        ],
        "type": "Text_excerpt",
        "value": "```\nusage: satori.py [-h] [-v] [-o DIRECTORY] [-m MODE] [--deskload]\n                 [-w NUMWORKERS] [--splitperc SPLITPERC] [--motifanalysis]\n                 [--scorecutoff SCORECUTOFF] [--tomtompath TOMTOMPATH]\n                 [--database TFDATABASE] [--annotate ANNOTATETOMTOM] [-i]\n                 [-b INTBACKGROUND] [--attncutoff ATTNCUTOFF]\n                 [--fiscutoff FISCUTOFF] [--intseqlimit INTSEQLIMIT] [-s]\n                 [--numlabels NUMLABELS] [--tomtomdist TOMTOMDIST]\n                 [--tomtompval TOMTOMPVAL] [--testall] [--useall]\n                 [--precisionlimit PRECISIONLIMIT]\n                 [--attrbatchsize ATTRBATCHSIZE] [--method METHODTYPE]\n                 inputprefix hparamfile\n\nMain SATORI script.\n\npositional arguments:\n  inputprefix           Input file prefix for the bed/text file and the\n                        corresponding fasta file (sequences).\n  hparamfile            Name of the hyperparameters file to be used.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         verbose output [default is quiet running]\n  -o DIRECTORY, --outDir DIRECTORY\n                        output directory\n  -m MODE, --mode MODE  Mode of operation: train or test.\n  --deskload            Load dataset from desk. If false, the data is\n                        converted into tensors and kept in main memory (not\n                        recommended for large datasets).\n  -w NUMWORKERS, --numworkers NUMWORKERS\n                        Number of workers used in data loader. For loading\n                        from the desk, use more than 1 for faster fetching.\n  --splitperc SPLITPERC\n                        Pecentages of test, and validation data splits, eg. 10\n                        for 10 percent data used for testing and validation.\n  --motifanalysis       Analyze CNN filters for motifs and search them against\n                        known TF database.\n  --scorecutoff SCORECUTOFF\n                        In case of binary labels, the positive probability\n                        cutoff to use.\n  --tomtompath TOMTOMPATH\n                        Provide path to where TomTom (from MEME suite) is\n                        located.\n  --database TFDATABASE\n                        Search CNN motifs against known TF database. Default\n                        is Human CISBP TFs.\n  --annotate ANNOTATETOMTOM\n                        Annotate tomtom motifs. The value of this variable\n                        should be path to the database file used for\n                        annotation. Default is None.\n  -i, --interactions    Self attention based feature(TF) interactions\n                        analysis.\n  -b INTBACKGROUND, --background INTBACKGROUND\n                        Background used in interaction analysis: shuffle (for\n                        di-nucleotide shuffled sequences with embedded\n                        motifs.), negative (for negative test set). Default is\n                        not to use background (and significance test).\n  --attncutoff ATTNCUTOFF\n                        Attention cutoff value. For a given interaction, it\n                        should have an attention value at least as high as\n                        this value across all examples.\n  --fiscutoff FISCUTOFF\n                        FIS score cutoff value. For a given interaction, it\n                        should have an FIS score at least as high as this\n                        value across all examples.\n  --intseqlimit INTSEQLIMIT\n                        A limit on number of input sequences to test. Default\n                        is -1 (use all input sequences that qualify).\n  -s, --store           Store per batch attention and CNN outpout matrices. If\n                        false, the are kept in the main memory.\n  --numlabels NUMLABELS\n                        Number of labels. 2 for binary (default). For multi-\n                        class, multi label problem, can be more than 2.\n  --tomtomdist TOMTOMDIST\n                        TomTom distance parameter (pearson, kullback, ed etc).\n                        Default is euclidean (ed). See TomTom help from MEME\n                        suite.\n  --tomtompval TOMTOMPVAL\n                        Adjusted p-value cutoff from TomTom. Default is 0.05.\n  --testall             Test on the entire dataset (default False). Useful for\n                        interaction/motif analysis.\n  --useall              Use all examples in multi-label problem instead of\n                        using precision based example selection. Default is\n                        False.\n  --precisionlimit PRECISIONLIMIT\n                        Precision limit to use for selecting examples in case\n                        of multi-label problem.\n  --attrbatchsize ATTRBATCHSIZE\n                        Batch size used while calculating attributes for FIS\n                        scoring. Default is 12.\n  --method METHODTYPE   Interaction scoring method to use; options are:\n                        SATORI, FIS, or BOTH. Default is SATORI.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-processing",
        "parent_header": [
          "SATORI v0.2",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "TO-DO\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example: binary classification",
        "parent_header": [
          "SATORI v0.2",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "For the TAL-GATA experiment:  \n```\nsatori.py data/TAL-GATA_ChIPSeq/Final_dataset_combined_uniq_neg80k_binaryFeat modelsparam/CNN-RNN-MH-noEmbds_hyperParams.txt -w 8 --outDir results/TAL-GATA_Analysis --mode train -v -s --background negative --intseqlimit 5000 --numlabels 2 --motifanalysis --interactions --method BOTH --attrbatchsize 18 --deskload --tomtompath PATH-TO-TOMTOM-TOOL --database PATH-TO-MEME-TF-DATABASE\n```"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example: multi-label classification",
        "parent_header": [
          "SATORI v0.2",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "For the arabidopsis genomewide chromatin accessibility dataset:  \n```\nsatori.py data/Arabidopsis_ChromAccessibility/atAll_m200_s600 modelsparam/CNN-RNN-MH-noEmbds_hyperParams.txt -w 8 --outDir results/Arabidopsis_GenomeWide_Analysis --mode train -v -s --background shuffle --intseqlimit 5000 --numlabels 36 --motifanalysis --interactions --method BOTH --attrbatchsize 32 --deskload --tomtompath PATH-TO-TOMTOM-TOOL --database PATH-TO-MEME-TF-DATABASE\n```\n**Note:** make sure to specify path to the TomTom tool and the corresponding motif database.  \n```PATH-TO-TOMTOM-TOOL``` path to TomTom tool in the MEME suite.  \n```PATH-TO-MEME-TF-DATABASE``` path to the TF database to use (MEME suite comes with different databases).\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Post-processing",
        "parent_header": [
          "SATORI v0.2",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "The resutls are processed in separate Jupyter notebooks in the `analysis` directory. The notebooks assume that the results are in ``results`` folder, at the root (top level) directory of the repository.\n"
      },
      "source": "https://raw.githubusercontent.com/fahadahaf/SATORI/master/README.md",
      "technique": "header_analysis"
    }
  ]
}