{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing TPOT",
        "type": "Text_excerpt",
        "value": "If you use TPOT in a scientific publication, please consider citing at least one of the following papers:\n\nTrang T. Le, Weixuan Fu and Jason H. Moore (2020). [Scaling tree-based automated machine learning to biomedical big data with a feature set selector](https://academic.oup.com/bioinformatics/article/36/1/250/5511404). *Bioinformatics*.36(1): 250-256.\n\nBibTeX entry:\n\n```bibtex\n@article{le2020scaling,\n  title={Scaling tree-based automated machine learning to biomedical big data with a feature set selector},\n  author={Le, Trang T and Fu, Weixuan and Moore, Jason H},\n  journal={Bioinformatics},\n  volume={36},\n  number={1},\n  pages={250--256},\n  year={2020},\n  publisher={Oxford University Press}\n}\n```\n\n\nRandal S. Olson, Ryan J. Urbanowicz, Peter C. Andrews, Nicole A. Lavender, La Creis Kidd, and Jason H. Moore (2016). [Automating biomedical data science through tree-based pipeline optimization](http://link.springer.com/chapter/10.1007/978-3-319-31204-0_9). *Applications of Evolutionary Computation*, pages 123-137.\n\nBibTeX entry:\n\n```bibtex\n@inbook{Olson2016EvoBio,\n    author={Olson, Randal S. and Urbanowicz, Ryan J. and Andrews, Peter C. and Lavender, Nicole A. and Kidd, La Creis and Moore, Jason H.},\n    editor={Squillero, Giovanni and Burelli, Paolo},\n    chapter={Automating Biomedical Data Science Through Tree-Based Pipeline Optimization},\n    title={Applications of Evolutionary Computation: 19th European Conference, EvoApplications 2016, Porto, Portugal, March 30 -- April 1, 2016, Proceedings, Part I},\n    year={2016},\n    publisher={Springer International Publishing},\n    pages={123--137},\n    isbn={978-3-319-31204-0},\n    doi={10.1007/978-3-319-31204-0_9},\n    url={http://dx.doi.org/10.1007/978-3-319-31204-0_9}\n}\n```\n\nRandal S. Olson, Nathan Bartley, Ryan J. Urbanowicz, and Jason H. Moore (2016). [Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science](http://dl.acm.org/citation.cfm?id=2908918). *Proceedings of GECCO 2016*, pages 485-492.\n\nBibTeX entry:\n\n```bibtex\n@inproceedings{OlsonGECCO2016,\n    author = {Olson, Randal S. and Bartley, Nathan and Urbanowicz, Ryan J. and Moore, Jason H.},\n    title = {Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science},\n    booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference 2016},\n    series = {GECCO '16},\n    year = {2016},\n    isbn = {978-1-4503-4206-3},\n    location = {Denver, Colorado, USA},\n    pages = {485--492},\n    numpages = {8},\n    url = {http://doi.acm.org/10.1145/2908812.2908918},\n    doi = {10.1145/2908812.2908918},\n    acmid = {2908918},\n    publisher = {ACM},\n    address = {New York, NY, USA},\n}\n```\n\nAlternatively, you can cite the repository directly with the following DOI:\n\n[![DOI](https://zenodo.org/badge/20747/rhiever/tpot.svg)](https://zenodo.org/badge/latestdoi/20747/rhiever/tpot)\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Le, Trang T and Fu, Weixuan and Moore, Jason H",
        "format": "bibtex",
        "title": "Scaling tree-based automated machine learning to biomedical big data with a feature set selector",
        "type": "Text_excerpt",
        "value": "@article{le2020scaling,\n    publisher = {Oxford University Press},\n    year = {2020},\n    pages = {250--256},\n    number = {1},\n    volume = {36},\n    journal = {Bioinformatics},\n    author = {Le, Trang T and Fu, Weixuan and Moore, Jason H},\n    title = {Scaling tree-based automated machine learning to biomedical big data with a feature set selector},\n}"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Olson, Randal S. and Urbanowicz, Ryan J. and Andrews, Peter C. and Lavender, Nicole A. and Kidd, La Creis and Moore, Jason H.",
        "doi": "10.1007/978-3-319-31204-0_9",
        "format": "bibtex",
        "title": "Applications of Evolutionary Computation: 19th European Conference, EvoApplications 2016, Porto, Portugal, March 30 -- April 1, 2016, Proceedings, Part I",
        "type": "Text_excerpt",
        "url": "http://dx.doi.org/10.1007/978-3-319-31204-0_9",
        "value": "@inbook{Olson2016EvoBio,\n    url = {http://dx.doi.org/10.1007/978-3-319-31204-0_9},\n    doi = {10.1007/978-3-319-31204-0_9},\n    isbn = {978-3-319-31204-0},\n    pages = {123--137},\n    publisher = {Springer International Publishing},\n    year = {2016},\n    title = {Applications of Evolutionary Computation: 19th European Conference, EvoApplications 2016, Porto, Portugal, March 30 -- April 1, 2016, Proceedings, Part I},\n    chapter = {Automating Biomedical Data Science Through Tree-Based Pipeline Optimization},\n    editor = {Squillero, Giovanni and Burelli, Paolo},\n    author = {Olson, Randal S. and Urbanowicz, Ryan J. and Andrews, Peter C. and Lavender, Nicole A. and Kidd, La Creis and Moore, Jason H.},\n}"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Olson, Randal S. and Bartley, Nathan and Urbanowicz, Ryan J. and Moore, Jason H.",
        "doi": "10.1145/2908812.2908918",
        "format": "bibtex",
        "title": "Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science",
        "type": "Text_excerpt",
        "url": "http://doi.acm.org/10.1145/2908812.2908918",
        "value": "@inproceedings{OlsonGECCO2016,\n    address = {New York, NY, USA},\n    publisher = {ACM},\n    acmid = {2908918},\n    doi = {10.1145/2908812.2908918},\n    url = {http://doi.acm.org/10.1145/2908812.2908918},\n    numpages = {8},\n    pages = {485--492},\n    location = {Denver, Colorado, USA},\n    isbn = {978-1-4503-4206-3},\n    year = {2016},\n    series = {GECCO '16},\n    booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference 2016},\n    title = {Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science},\n    author = {Olson, Randal S. and Bartley, Nathan and Urbanowicz, Ryan J. and Moore, Jason H.},\n}"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EpistasisLab/tpot"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contribution Guide\n\nWe welcome you to [check the existing issues](https://github.com/EpistasisLab/tpot/issues/) for bugs or enhancements to work on. If you have an idea for an extension to TPOT, please [file a new issue](https://github.com/EpistasisLab/tpot/issues/new) so we can discuss it.\n\n## Project layout\n\nThe latest stable release of TPOT is on the [master branch](https://github.com/EpistasisLab/tpot/tree/master), whereas the latest version of TPOT in development is on the [development branch](https://github.com/EpistasisLab/tpot/tree/development). Make sure you are looking at and working on the correct branch if you're looking to contribute code.\n\nIn terms of directory structure:\n\n* All of TPOT's code sources are in the `tpot` directory\n* The documentation sources are in the `docs_sources` directory\n* Images in the documentation are in the `images` directory\n* Tutorials for TPOT are in the `tutorials` directory\n* Unit tests for TPOT are in the `tests.py` file\n\nMake sure to familiarize yourself with the project layout before making any major contributions, and especially make sure to send all code changes to the `development` branch.\n\n## How to contribute\n\nThe preferred way to contribute to TPOT is to fork the\n[main repository](https://github.com/EpistasisLab/tpot/) on\nGitHub:\n\n1. Fork the [project repository](https://github.com/EpistasisLab/tpot):\n   click on the 'Fork' button near the top of the page. This creates\n   a copy of the code under your account on the GitHub server.\n\n2. Clone this copy to your local disk:\n\n          $ git clone git@github.com:YourUsername/tpot.git\n          $ cd tpot\n\n3. Create a branch to hold your changes:\n\n          $ git checkout -b my-contribution\n\n4. Make sure your local environment is setup correctly for development. Installation instructions are almost identical to [the user instructions](installing.md) except that TPOT should *not* be installed. If you have TPOT installed on your computer then make sure you are using a virtual environment that does not have TPOT installed. Furthermore, you should make sure you have installed the `nose` package into your development environment so that you can test changes locally.\n\n          $ conda install nose\n\n5. Start making changes on your newly created branch, remembering to never work on the ``master`` branch! Work on this copy on your computer using Git to do the version control.\n\n6. Once some changes are saved locally, you can use your tweaked version of TPOT by navigating to the project's base directory and running TPOT directly from the command line:\n\n          $ python -m tpot.driver\n\n    or by running script that imports and uses the TPOT module with code similar to `from tpot import TPOTClassifier`\n\n7. To check your changes haven't broken any existing tests and to check new tests you've added pass run the following (note, you must have the `nose` package installed within your dev environment for this to work):\n\n          $ nosetests -s -v\n\n8. When you're done editing and local testing, run:\n\n          $ git add modified_files\n          $ git commit\n\n   to record your changes in Git, then push them to GitHub with:\n\n          $ git push -u origin my-contribution\n\nFinally, go to the web page of your fork of the TPOT repo, and click 'Pull Request' (PR) to send your changes to the maintainers for review. Make sure that you send your PR to the `development` branch, as the `master` branch is reserved for the latest stable release. This will start the CI server to check all the project's unit tests run and send an email to the maintainers.\n\n(If any of the above seems like magic to you, then look up the\n[Git documentation](http://git-scm.com/documentation) on the web.)\n\n## Before submitting your pull request\n\nBefore you submit a pull request for your contribution, please work through this checklist to make sure that you have done everything necessary so we can efficiently review and accept your changes.\n\nIf your contribution changes TPOT in any way:\n\n* Update the [documentation](https://github.com/EpistasisLab/tpot/tree/master/docs_sources) so all of your changes are reflected there.\n\n* Update the [README](https://github.com/EpistasisLab/tpot/blob/master/README.md) if anything there has changed.\n\nIf your contribution involves any code changes:\n\n* Update the [project unit tests](https://github.com/EpistasisLab/tpot/tree/master/tests) to test your code changes.\n\n* Make sure that your code is properly commented with [docstrings](https://www.python.org/dev/peps/pep-0257/) and comments explaining your rationale behind non-obvious coding practices.\n\n* If your code affected any of the pipeline operators, make sure that the corresponding [export functionality](https://github.com/EpistasisLab/tpot/blob/master/tpot/export_utils.py) reflects those changes.\n\nIf your contribution requires a new library dependency:\n\n* Double-check that the new dependency is easy to install via `pip` or Anaconda and supports both Python 2 and 3. If the dependency requires a complicated installation, then we most likely won't merge your changes because we want to keep TPOT easy to install.\n\n* Add the required version of the library to [.travis.yml](https://github.com/EpistasisLab/tpot/blob/master/.travis.yml#L7)\n\n* Add a line to pip install the library to [.travis_install.sh](https://github.com/EpistasisLab/tpot/blob/master/ci/.travis_install.sh#L46)\n\n* Add a line to print the version of the library to [.travis_install.sh](https://github.com/EpistasisLab/tpot/blob/master/ci/.travis_install.sh#L63)\n\n* Similarly add a line to print the version of the library to [.travis_test.sh](https://github.com/EpistasisLab/tpot/blob/master/ci/.travis_test.sh#L13)\n\n## After submitting your pull request\n\nAfter submitting your pull request, [Travis-CI](https://travis-ci.com/) will automatically run unit tests on your changes and make sure that your updated code builds and runs on Python 2 and 3. We also use services that automatically check code quality and test coverage.\n\nCheck back shortly after submitting your pull request to make sure that your code passes these checks. If any of the checks come back with a red X, then do your best to address the errors.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/docs_sources/contributing.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing to TPOT",
        "type": "Text_excerpt",
        "value": "We welcome you to [check the existing issues](https://github.com/EpistasisLab/tpot/issues/) for bugs or enhancements to work on. If you have an idea for an extension to TPOT, please [file a new issue](https://github.com/EpistasisLab/tpot/issues/new) so we can discuss it.\n\nBefore submitting any contributions, please review our [contribution guidelines](http://epistasislab.github.io/tpot/contributing/).\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-11-03T21:08:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-10-05T06:32:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9686966964682278,
      "result": {
        "type": "Text_excerpt",
        "value": "**TPOT** stands for **T**ree-based **P**ipeline **O**ptimization **T**ool. Consider TPOT your **Data Science Assistant**. TPOT is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming. \nTPOT will automate the most tedious part of machine learning by intelligently exploring thousands of possible pipelines to find the best one for your data. \nOnce TPOT is finished searching (or you get tired of waiting), it provides you with the Python code for the best pipeline it found so you can tinker with the pipeline from there. \nTPOT is built on top of scikit-learn, so all of the code it generates should look familiar... if you're familiar with scikit-learn, anyway. \n**TPOT is still under active development** and we encourage you to check back on this repository regularly for updates. \n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EpistasisLab/tpot/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/EpistasisLab/tpot/wiki"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EpistasisLab/tpot/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Higgs_Boson.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Higgs_Boson.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Digits.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Digits.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/IRIS.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/IRIS.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Titanic_Kaggle.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Titanic_Kaggle.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/cuML_Regression_Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/cuML_Regression_Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/cuML_Classification_Example.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/cuML_Classification_Example.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/MAGIC%20Gamma%20Telescope/MAGIC%20Gamma%20Telescope.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/MAGIC%20Gamma%20Telescope/MAGIC%20Gamma%20Telescope.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Portuguese%20Bank%20Marketing/Portuguese%20Bank%20Marketing%20Strategy.ipynb"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/tutorials/Portuguese%20Bank%20Marketing/Portuguese%20Bank%20Marketing%20Strategy.ipynb",
      "technique": "file_exploration"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Having problems or have questions about TPOT?",
        "type": "Text_excerpt",
        "value": "Please [check the existing open and closed issues](https://github.com/EpistasisLab/tpot/issues?utf8=%E2%9C%93&q=is%3Aissue) to see if your issue has already been attended to. If it hasn't, [file a new issue](https://github.com/EpistasisLab/tpot/issues/new) on this repository so we can review your issue.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1566
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EpistasisLab/tpot"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/ci/.travis_test.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/ci/.travis_install.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/20747/rhiever/tpot"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/b7bmpwpkjhifrm7v/branch/master?svg=true"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/b7bmpwpkjhifrm7v/branch/development?svg=true"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/images/NEW-small.gif"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/images/tpot-demo.gif"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/images/tpot-ml-pipeline.png"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/images/tpot-pipeline-example.png"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\nTPOT is built on top of several existing Python libraries, including:\n\n* [NumPy](http://www.numpy.org/)\n\n* [SciPy](https://www.scipy.org/)\n\n* [scikit-learn](http://www.scikit-learn.org/)\n\n* [DEAP](https://github.com/DEAP/deap)\n\n* [update_checker](https://github.com/bboe/update_checker)\n\n* [tqdm](https://github.com/tqdm/tqdm)\n\n* [stopit](https://github.com/glenfant/stopit)\n\n* [pandas](http://pandas.pydata.org)\n\n* [joblib](https://joblib.readthedocs.io/en/latest/)\n\n* [xgboost](https://xgboost.readthedocs.io/en/latest/)\n\nMost of the necessary Python packages can be installed via the [Anaconda Python distribution](https://www.anaconda.com/products/individual), which we strongly recommend that you use. **Support for Python 3.4 and below has been officially dropped since version 0.11.0.**\n\n\nYou can install TPOT using `pip` or `conda-forge`.\n\n## pip\n\nNumPy, SciPy, scikit-learn, pandas, joblib, and PyTorch can be installed in Anaconda via the command:\n\n```Shell\nconda install numpy scipy scikit-learn pandas joblib pytorch\n```\n\nDEAP, update_checker, tqdm, stopit and xgboost can be installed with `pip` via the command:\n\n```Shell\npip install deap update_checker tqdm stopit xgboost\n```\n\n**Windows users: pip installation may not work on some Windows environments, and it may cause unexpected errors.** If you have issues installing XGBoost, check the [XGBoost installation documentation](http://xgboost.readthedocs.io/en/latest/build.html).\n\nIf you plan to use [Dask](http://dask.pydata.org/en/latest/) for parallel training, make sure to install [dask[delay] and dask[dataframe]](https://docs.dask.org/en/latest/install.html) and [dask_ml](https://dask-ml.readthedocs.io/en/latest/install.html). **It is noted that dask-ml>=1.7 requires distributed>=2.4.0 and scikit-learn>=0.23.0.**\n\n```Shell\npip install dask[delayed] dask[dataframe] dask-ml fsspec>=0.3.3 distributed>=2.10.0\n```\n\nIf you plan to use the [TPOT-MDR configuration](https://arxiv.org/abs/1702.01780), make sure to install [scikit-mdr](https://github.com/EpistasisLab/scikit-mdr) and [scikit-rebate](https://github.com/EpistasisLab/scikit-rebate):\n\n```Shell\npip install scikit-mdr skrebate\n```\n\nTo enable support for [PyTorch](https://pytorch.org/)-based neural networks (TPOT-NN), you will need to install PyTorch. TPOT-NN will work with either CPU or GPU PyTorch, but we strongly recommend using a GPU version, if possible, as CPU PyTorch models tend to train very slowly.\n\nWe recommend following [PyTorch's installation instructions](https://pytorch.org/get-started/locally/) customized for your operating system and Python distribution.\n\nFinally to install TPOT itself, run the following command:\n\n```Shell\npip install tpot\n```\n\n## conda-forge\n\nTo install tpot and its core dependencies you can use:\n\n```Shell\nconda install -c conda-forge tpot\n```\n\nTo install additional dependencies you can use:\n\n```Shell\nconda install -c conda-forge tpot xgboost dask dask-ml scikit-mdr skrebate\n```\n\nAs mentioned above, we recommend following [PyTorch's installation instructions](https://pytorch.org/get-started/locally/) for installing it to enable support for [PyTorch](https://pytorch.org/)-based neural networks (TPOT-NN).\n\n## Installation for using TPOT-cuML configuration\n\nWith \"TPOT cuML\" configuration (see <a href=\"../using/#built-in-tpot-configurations\">built-in configurations</a>), TPOT will search over a restricted configuration using the GPU-accelerated estimators in [RAPIDS cuML](https://github.com/rapidsai/cuml) and [DMLC XGBoost](https://github.com/dmlc/xgboost). **This configuration requires an NVIDIA Pascal architecture or better GPU with [compute capability 6.0+](https://developer.nvidia.com/cuda-gpus), and that the library cuML is installed.** With this configuration, all model training and predicting will be GPU-accelerated. This configuration is particularly useful for medium-sized and larger datasets on which CPU-based estimators are a common bottleneck, and works for both the `TPOTClassifier` and `TPOTRegressor`.\n\nPlease download this conda environment <a href=\"https://github.com/EpistasisLab/tpot/blob/master/tpot-cuml.yml\">yml file</a></td> to install TPOT for using TPOT-cuML configuration.\n\n```\nconda env create -f tpot-cuml.yml -n tpot-cuml\nconda activate tpot-cuml\n```\n\n\n## Installation problems\n\nPlease [file a new issue](https://github.com/EpistasisLab/tpot/issues/new) if you run into installation problems.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/docs_sources/installing.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "We maintain the [TPOT installation instructions](http://epistasislab.github.io/tpot/installing/) in the documentation. TPOT requires a working installation of Python.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "adsp, ag066833, aiml, alzheimer, alzheimers, automated-machine-learning, automation, automl, data-science, feature-engineering, gradient-boosting, hyperparameter-optimization, machine-learning, model-selection, nia, parameter-tuning, python, random-forest, scikit-learn, u01ag066833"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Lesser General Public License v3.0",
        "spdx_id": "LGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/lgpl-3.0",
        "value": "https://api.github.com/licenses/lgpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "Please see the [repository license](https://github.com/EpistasisLab/tpot/blob/master/LICENSE) for the licensing and usage information for TPOT.\n\nGenerally, we have licensed TPOT to make it as widely usable as possible.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/images/tpot-logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tpot"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "EpistasisLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 448453,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 139415,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3355,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jay-m-dev",
          "type": "User"
        },
        "date_created": "2024-02-23T19:03:07Z",
        "date_published": "2024-02-23T19:05:48Z",
        "description": "## What's Changed\r\n* estimator type by @perib in https://github.com/EpistasisLab/tpot/pull/1319\r\n* Update requirements by @gatl in https://github.com/EpistasisLab/tpot/pull/1335\r\n* Bump torch from 1.3.1 to 1.13.1 by @dependabot in https://github.com/EpistasisLab/tpot/pull/1336\r\n* update sklearn version to 1.1.3 by @perib in https://github.com/EpistasisLab/tpot/pull/1337\r\n* remove deprecated imp, fix docstring warning by @perib in https://github.com/EpistasisLab/tpot/pull/1331\r\n* update compatibility with scikitlearn 1.4 by @perib in https://github.com/EpistasisLab/tpot/pull/1343\r\n* Improve error message by @gatl in https://github.com/EpistasisLab/tpot/pull/1338\r\n* Mate operator fix by @perib in https://github.com/EpistasisLab/tpot/pull/1268\r\n\r\n## New Contributors\r\n* @gatl made their first contribution in https://github.com/EpistasisLab/tpot/pull/1335\r\n* @dependabot made their first contribution in https://github.com/EpistasisLab/tpot/pull/1336\r\n\r\n**Full Changelog**: https://github.com/EpistasisLab/tpot/compare/v0.12.1...v0.12.2",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.12.2",
        "name": "v0.12.2",
        "release_id": 143404062,
        "tag": "v0.12.2",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.12.2",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/143404062",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/143404062",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.12.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jay-m-dev",
          "type": "User"
        },
        "date_created": "2023-08-15T18:20:37Z",
        "date_published": "2023-08-15T18:21:39Z",
        "description": "Fixes issue with runs terminating too early\r\n## What's Changed\r\n* Early crash fix by @perib in https://github.com/EpistasisLab/tpot/pull/1315\r\n**Full Changelog**: https://github.com/EpistasisLab/tpot/compare/v0.12.0...v0.12.1",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.12.1",
        "name": "v0.12.1",
        "release_id": 117347137,
        "tag": "v0.12.1",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.12.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/117347137",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/117347137",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.12.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "nickotto",
          "type": "User"
        },
        "date_created": "2023-05-25T22:11:55Z",
        "date_published": "2023-05-25T22:44:19Z",
        "description": "- Fix numpy compatibility \r\n- Dask optimizations\r\n- Minor bug fixes",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.12.0",
        "name": "v0.12.0 release",
        "release_id": 104327538,
        "tag": "v0.12.0",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/104327538",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/104327538",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2021-01-06T15:17:46Z",
        "date_published": "2021-01-06T15:19:33Z",
        "description": "- Fix compatibility issue with scikit-learn 0.24 and xgboost 1.3.0\r\n- Fix a bug causing that TPOT does not work when classifying more than 50 classes\r\n- Add initial support `Resampler` from `imblearn`\r\n- Fix minor bugs",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.7",
        "name": "v0.11.7 minor release ",
        "release_id": 36051517,
        "tag": "v0.11.7",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.7",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/36051517",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/36051517",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-12-14T15:04:13Z",
        "date_published": "2020-12-14T15:07:26Z",
        "description": "- A patch to fix compatibility issues with the latest version of xgboost (v1.3.0)",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/0.11.6.post3",
        "name": "0.11.6.post3",
        "release_id": 35240924,
        "tag": "0.11.6.post3",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/0.11.6.post3",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/35240924",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/35240924",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/0.11.6.post3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-11-30T16:22:30Z",
        "date_published": "2020-11-30T16:31:53Z",
        "description": "- make XGBoost as a required dependency ",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.6.post2",
        "name": "v0.11.6.post2",
        "release_id": 34586602,
        "tag": "v0.11.6.post2",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.6.post2",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/34586602",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/34586602",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.6.post2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-11-05T15:43:03Z",
        "date_published": "2020-11-05T15:52:25Z",
        "description": "- Refine the logic of checking the type of an operator.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.6.post1",
        "name": "v0.11.6.post1",
        "release_id": 33512424,
        "tag": "v0.11.6.post1",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.6.post1",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/33512424",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/33512424",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.6.post1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-10-26T14:43:57Z",
        "date_published": "2020-10-26T15:09:32Z",
        "description": "- Fix a bug causing point mutation function does not work properly with using `template` option\r\n- Add a new built configuration called \"TPOT cuML\" which TPOT will search over a restricted configuration using the GPU-accelerated estimators in [RAPIDS cuML](https://github.com/rapidsai/cuml) and [DMLC XGBoost](https://github.com/dmlc/xgboost). **This configuration requires an NVIDIA Pascal architecture or better GPU with [compute capability 6.0+](https://developer.nvidia.com/cuda-gpus), and that the library cuML is installed.**\r\n- Add string path support for log/log_file parameter\r\n- Fix a bug in version 0.11.5 causing no update in stdout after each generation\r\n- Fix minor bugs\r\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/0.11.6",
        "name": "Version 0.11.6",
        "release_id": 33062824,
        "tag": "0.11.6",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/0.11.6",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/33062824",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/33062824",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/0.11.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-09-02T20:34:45Z",
        "date_published": "2020-09-02T20:35:20Z",
        "description": "- Development branch based on TPOT 0.11.1 for adjusting covariate without data leakage.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.1-resAdj",
        "name": "Covariate adjustments branch",
        "release_id": 27644317,
        "tag": "v0.11.1-resAdj",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.1-resAdj",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/27644317",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/27644317",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.1-resAdj"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-06-01T22:06:57Z",
        "date_published": "2020-06-01T22:10:38Z",
        "description": "- Make `Pytorch` as an optional dependency\r\n- Refine installation documentation ",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.5",
        "name": "v0.11.5",
        "release_id": 27113885,
        "tag": "v0.11.5",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.5",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/27113885",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/27113885",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-05-29T15:59:33Z",
        "date_published": "2020-05-29T16:12:58Z",
        "description": "- Add a new built configuration \"TPOT NN\" which includes all operators in \"Default TPOT\" plus additional neural network estimators written in PyTorch (currently `tpot.builtins.PytorchLRClassifier` and `tpot.builtins.PytorchMLPClassifier` for classification tasks only)\r\n- Refine `log_file` parameter's behavior",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.4",
        "name": "TPOT v0.11.4 minor release",
        "release_id": 27038582,
        "tag": "v0.11.4",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.4",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/27038582",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/27038582",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-05-18T16:43:00Z",
        "date_published": "2020-05-14T13:16:28Z",
        "description": "- Fix a bug in TPOTRegressor in v0.11.2\r\n- Add `-log` option in command line interface to save process log to a file.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.3",
        "name": "TPOT v0.11.3 minor release",
        "release_id": 26510992,
        "tag": "v0.11.3",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.3",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/26510992",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/26510992",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-05-13T14:48:35Z",
        "date_published": "2020-05-13T14:49:49Z",
        "description": "- Fix `early_stop` parameter does not work properly\r\n- TPOT built-in `OneHotEncoder` can refit to different datasets\r\n- Fix the issue that the attribute `evaluated_individuals_` cannot record correct generation info.\r\n- Add a new parameter `log_file` to output logs to a file instead of `sys.stdout`\r\n- Fix some code quality issues and mistakes in documentations\r\n- Fix minor bugs",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.2",
        "name": "TPOT v0.11.2 Minor Release",
        "release_id": 26471461,
        "tag": "v0.11.2",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.2",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/26471461",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/26471461",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2020-01-03T17:56:21Z",
        "date_published": "2020-01-03T18:04:20Z",
        "description": "- Fix compatibility issue with scikit-learn v0.22\r\n- `warm_start` now saves both Primitive Sets and evaluated_pipelines_ from previous runs;\r\n- Fix the error that TPOT assign wrong fitness scores to non-evaluated pipelines (interrupted by `max_min_mins` or `KeyboardInterrupt`) ;\r\n- Fix the bug that mutation operator cannot generate new pipeline when template is not default value and `warm_start` is True;\r\n- Fix the bug that `max_time_mins` cannot stop optimization process when search space is limited.  \r\n- Fix a bug in exported codes when the exported pipeline is only 1 estimator \r\n- Fix spelling mistakes in documentations \r\n- Fix some code quality issues ",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.1",
        "name": "TPOT v0.11.1 Minor Release",
        "release_id": 22582704,
        "tag": "v0.11.1",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/22582704",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/22582704",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2019-11-05T21:03:54Z",
        "date_published": "2019-11-05T21:04:49Z",
        "description": "- **Support for Python 3.4 and below has been officially dropped.** Also support for scikit-learn 0.20 or below has been dropped.\r\n- The support of a metric function with the signature `score_func(y_true, y_pred)` for `scoring parameter` has been dropped.\r\n- Refine `StackingEstimator` for not stacking NaN/Infinity predication probabilities.\r\n- Fix a bug that population doesn't persist even `warm_start=True` when `max_time_mins` is not default value.\r\n- Now the `random_state` parameter in TPOT is used for pipeline evaluation instead of using a fixed random seed of 42 before. The `set_param_recursive` function has been moved to `export_utils.py` and it can be used in exported codes for setting `random_state` recursively in scikit-learn Pipeline. It is used to set `random_state` in `fitted_pipeline_` attribute and exported pipelines.\r\n- TPOT can independently use `generations` and `max_time_mins` to limit the optimization process through using one of the parameters or both.\r\n- `.export()` function will return string of exported pipeline if output filename is not specified.\r\n- Add [`SGDClassifier`](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html) and [`SGDRegressor`](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDRegressor.html) into TPOT default configs.\r\n- Documentation has been updated.\r\n- Fix minor bugs.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.11.0",
        "name": "Version 0.11.0",
        "release_id": 21236472,
        "tag": "v0.11.0",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/21236472",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/21236472",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2019-07-16T16:16:39Z",
        "date_published": "2019-07-16T17:29:50Z",
        "description": "- **TPOT v0.10.2 is the last version to support Python 2.7 and Python 3.4.**\r\n- Minor updates for fixing compatibility issues with the latest version of scikit-learn (version > 0.21) and xgboost (v0.90)\r\n- Default value of `template` parameter is changed to `None` instead.\r\n- Fix errors in documentation\r\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.10.2",
        "name": "TPOT v0.10.2 minor release",
        "release_id": 18652190,
        "tag": "v0.10.2",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.10.2",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/18652190",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/18652190",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.10.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2019-04-19T15:18:14Z",
        "date_published": "2019-04-19T15:19:09Z",
        "description": "- Add `data_file_path` option into `expert` function for replacing `'PATH/TO/DATA/FILE'` to customized dataset path in exported scripts. (Related issue #838)\r\n- Change python version in CI tests to 3.7\r\n- Add CI tests for macOS.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.10.1",
        "name": "TPOT v0.10.1 minor release",
        "release_id": 16870793,
        "tag": "v0.10.1",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.10.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/16870793",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/16870793",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.10.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2019-04-12T14:46:44Z",
        "date_published": "2019-04-12T14:48:07Z",
        "description": "- Add a new `template` option to specify a desired structure for machine learning pipeline in TPOT. Check [TPOT API](https://epistasislab.github.io/tpot/api/) (it will be updated once it is merge to master branch).\r\n- Add `FeatureSetSelector` operator into TPOT for feature selection based on *priori* export knowledge. Please check our [preprint paper](https://www.biorxiv.org/content/10.1101/502484v1.article-info) for more details (*Note: it was named `DatasetSelector` in 1st version paper but we will rename to FeatureSetSelector in next version of the paper*)\r\n- Refine `n_jobs` parameter to accept value below -1. For n_jobs below -1, (n_cpus + 1 + n_jobs) are used. Thus for n_jobs = -2, all CPUs but one are used. It is related to the issue #846.\r\n- Now `memory`  parameter can create memory cache directory if it does not exist. It is related to the issue #837.\r\n- Fix minor bugs.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.10.0",
        "name": "TPOT 0.10.0 Release",
        "release_id": 16729203,
        "tag": "v0.10.0",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/16729203",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/16729203",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2019-03-01T18:29:58Z",
        "date_published": "2019-03-01T18:30:35Z",
        "description": "- Fix a bug causing that `max_time_mins` parameter doesn't work when `use_dask=True` in TPOT 0.9.5\r\n- Now TPOT saves best pareto values best pareto pipeline s in checkpoint folder\r\n- TPOT raises `ImportError` if operators in the TPOT configuration are not available when `verbosity>2`\r\n- Thank @PGijsbers for the suggestions. Now TPOT can save scores of individuals already evaluated in any generation even the evaluation process of that generation is interrupted/stopped. But it is noted that, in this case, TPOT will raise this **warning message**: `WARNING: TPOT may not provide a good pipeline if TPOT is stopped/interrupted in a early generation.`, because the pipelines in early generation, e.g. 1st generation, are evolved/modified very limited times via evolutionary algorithm. \r\n- Fix bugs in configuration of `TPOTRegressor`\r\n- Error fixes in documentation ",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.9.6",
        "name": "TPOT 0.9.6 Minor Release",
        "release_id": 15864910,
        "tag": "v0.9.6",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.9.6",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/15864910",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/15864910",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.9.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "weixuanfu",
          "type": "User"
        },
        "date_created": "2018-08-31T04:38:29Z",
        "date_published": "2018-09-04T16:41:09Z",
        "description": "- **TPOT now supports integration with Dask for parallelization + smart caching**. Big thanks to the Dask dev team for making this happen!\r\n\r\n- TPOT now supports for imputation/sparse matrices into `predict` and `predict_proba` functions. \r\n\r\n- `TPOTClassifier` and `TPOTRegressor` now follows scikit-learn estimator API.\r\n\r\n- We refined scoring parameter in TPOT API for accepting [`Scorer` object](http://jaquesgrobler.github.io/online-sklearn-build/modules/generated/sklearn.metrics.Scorer.html).\r\n\r\n- We refined parameters in VarianceThreshold and FeatureAgglomeration.\r\n\r\n- TPOT now supports using memory caching within a Pipeline via a optional `memory` parameter.\r\n\r\n- We improved documentation of TPOT.\r\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.9.5",
        "name": "TPOT now supports integration with Dask for parallelization",
        "release_id": 12724260,
        "tag": "v0.9.5",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/12724260",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/12724260",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2017-09-27T17:41:37Z",
        "date_published": "2017-09-27T17:56:34Z",
        "description": "* **TPOT now supports sparse matrices** with a new built-in TPOT configurations, \"TPOT sparse\". We are using a custom OneHotEncoder implementation that supports missing values and continuous features.\r\n\r\n* We have added an \"early stopping\" option for stopping the optimization process if no improvement is made within a set number of generations. Look up the `early_stop` parameter to access this functionality.\r\n\r\n* TPOT now reduces the number of duplicated pipelines between generations, which saves you time during the optimization process.\r\n\r\n* TPOT now supports custom scoring functions via the command-line mode.\r\n\r\n* We have added a new optional argument, `periodic_checkpoint_folder`, that allows TPOT to periodically save the best pipeline so far to a local folder during optimization process.\r\n\r\n* TPOT no longer uses `sklearn.externals.joblib` when `n_jobs=1` to avoid the potential freezing issue [that scikit-learn suffers from](http://scikit-learn.org/stable/faq.html#why-do-i-sometime-get-a-crash-freeze-with-n-jobs-1-under-osx-or-linux).\r\n\r\n* We have added `pandas` as a dependency to read input datasets instead of `numpy.recfromcsv`. NumPy's `recfromcsv` function is unable to parse datasets with complex data types.\r\n\r\n* Fixed a bug that `DEFAULT` in the parameter(s) of nested estimator raises `KeyError` when exporting pipelines.\r\n\r\n* Fixed a bug related to setting `random_state` in nested estimators. The issue would happen with pipeline with `SelectFromModel` (`ExtraTreesClassifier` as nested estimator) or `StackingEstimator` if nested estimator has `random_state` parameter.\r\n\r\n* Fixed a bug in the missing value imputation function in TPOT to impute along columns instead rows.\r\n\r\n* Refined input checking for sparse matrices in TPOT.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.9",
        "name": "Sparse matrix support, early stopping, and checkpointing",
        "release_id": 7914275,
        "tag": "v0.9",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/7914275",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/7914275",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2017-06-01T22:09:48Z",
        "date_published": "2017-06-01T22:16:40Z",
        "description": "* **TPOT now detects whether there are missing values in your dataset** and replaces them with the median value of the column.\r\n\r\n* TPOT now allows you to set a `group` parameter in the `fit` function so you can use the [GroupKFold](http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GroupKFold.html) cross-validation strategy.\r\n\r\n* TPOT now allows you to set a subsample ratio of the training instance with the `subsample` parameter. For example, setting `subsample`=0.5 tells TPOT to create a fixed subsample of half of the training data for the pipeline optimization process. This parameter can be useful for speeding up the pipeline optimization process, but may give less accurate performance estimates from cross-validation.\r\n\r\n* **TPOT now has more [built-in configurations](http://rhiever.github.io/tpot/using/#built-in-tpot-configurations)**, including TPOT MDR and TPOT light, for both classification and regression problems.\r\n\r\n* `TPOTClassifier` and `TPOTRegressor` now expose three useful internal attributes, `fitted_pipeline_`, `pareto_front_fitted_pipelines_`, and `evaluated_individuals_`. These attributes are described in the [API documentation](http://rhiever.github.io/tpot/api/).\r\n\r\n* Oh, **TPOT now has [thorough API documentation](http://rhiever.github.io/tpot/api/)**. Check it out!\r\n\r\n* Fixed a reproducibility issue where setting `random_seed` didn't necessarily result in the same results every time. This bug was present since TPOT v0.7.\r\n\r\n* Refined input checking in TPOT.\r\n\r\n* Removed Python 2 uncompliant code.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.8",
        "name": "More built-in configurations, missing data support, and detailed API documentation",
        "release_id": 6579186,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/6579186",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/6579186",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2017-03-22T20:43:15Z",
        "date_published": "2017-03-22T20:49:21Z",
        "description": "TPOT 0.7 is now out, featuring multiprocessing support for Linux and macOS, customizable operator configurations, and more.\r\n\r\n* **TPOT now has multiprocessing support (Linux and macOS only).** TPOT allows you to use multiple processes for accelerating pipeline optimization in TPOT with the `n_jobs` parameter in both TPOTClassifier and TPOTRegressor.\r\n\r\n* TPOT now allows you to **customize the operators and parameters explored during the optimization process.** TPOT allows you to customize the list of operators and parameters in optimization process of TPOT with the `config_dict` parameter. The format of this customized dictionary can be found in the [online documentation](/using/#tpot-with-code).\r\n\r\n* TPOT now allows you to **specify a time limit for evaluating a single pipeline**  (default limit is 5 minutes) in optimization process with the `max_eval_time_mins` parameter, so TPOT won't spend hours evaluating overly-complex pipelines.\r\n\r\n* We tweaked TPOT's underlying evolutionary optimization algorithm to work even better, including using the [mu+lambda algorithm](http://deap.readthedocs.io/en/master/api/algo.html#deap.algorithms.eaMuPlusLambda). This algorithm gives you more control of how many pipelines are generated every iteration with the `offspring_size` parameter.\r\n\r\n* Fixed a reproducibility issue where setting `random_seed` didn't necessarily result in the same results every time. This bug was present since version 0.6.\r\n\r\n* Refined the default operators and parameters in TPOT, so TPOT 0.7 should work even better than 0.6.\r\n\r\n* TPOT now supports sample weights in the fitness function if some if your samples are more important to classify correctly than others. The sample weights option works the same as in scikit-learn, e.g., `tpot.fit(x_train, y_train, sample_weights=sample_weights)`.\r\n\r\n* The default scoring metric in TPOT has been changed from balanced accuracy to accuracy, the same default metric for classification algorithms in scikit-learn. Balanced accuracy can still be used by setting `scoring='balanced_accuracy'` when creating a TPOT instance.",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/0.7",
        "name": "Multiprocessing support and custom operator configurations ",
        "release_id": 5837090,
        "tag": "0.7",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/5837090",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/5837090",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2016-09-02T19:50:21Z",
        "date_published": "2016-09-02T19:52:19Z",
        "description": "- **TPOT now supports regression problems!** We have created two separate `TPOTClassifier` and `TPOTRegressor` classes to support classification and regression problems, respectively. The [command-line interface](http://rhiever.github.io/tpot//using/#tpot-on-the-command-line) also supports this feature through the `-mode` parameter.\n- TPOT now allows you to **specify a time limit** for the optimization process with the `max_time_mins` parameter, so you don't need to guess how long TPOT will take any more to recommend a pipeline to you.\n- Added a new operator that performs feature selection using [ExtraTrees](http://scikit-learn.org/stable/modules/ensemble.html#extremely-randomized-trees) feature importance scores.\n- **[XGBoost](https://github.com/dmlc/xgboost) has been added as an optional dependency to TPOT.** If you have XGBoost installed, TPOT will automatically detect your installation and use the `XGBoostClassifier` and `XGBoostRegressor` in its pipelines.\n- TPOT now offers a verbosity level of 3 (\"science mode\"), which outputs the entire Pareto front instead of only the current best score. This feature may be useful for users looking to make a trade-off between pipeline complexity and score.\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.6",
        "name": "Support for regression problems",
        "release_id": 4041996,
        "tag": "v0.6",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/4041996",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/4041996",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2016-08-20T02:50:50Z",
        "date_published": "2016-08-20T03:06:30Z",
        "description": "After a couple months hiatus in refactor land, we're excited to release the latest and greatest version of TPOT v0.5. For the past couple months, we worked on heavily refactoring TPOT's code base from a hacky research demo into a more elegant code base that will be easier to maintain in the long run. As an added bonus, TPOT now directly optimizes over and exports to scikit-learn [Pipeline objects](http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.Pipeline.html), so your auto-generated code should be _much_ more readable.\n\nMajor changes in v0.5:\n- Major refactor: Each operator is defined in a separate class file. Hooray for easier-to-maintain code!\n- TPOT now **exports directly to scikit-learn Pipelines** instead of hacky code.\n- Internal representation of individuals now uses scikit-learn pipelines.\n- Parameters for each operator have been optimized so TPOT spends less time exploring useless parameters.\n- We have removed pandas as a dependency and instead use numpy matrices to store the data.\n- TPOT now uses **k-fold cross-validation** when evaluating pipelines, with a default k = 3. This k parameter can be tuned when creating a new TPOT instance.\n- Improved **scoring function support**: Even though TPOT uses balanced accuracy by default, you can now have TPOT use [any of the scoring functions](http://scikit-learn.org/stable/modules/model_evaluation.html#common-cases-predefined-values) that `cross_val_score` supports.\n- Added the scikit-learn [Normalizer](http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.Normalizer.html) preprocessor.\n- Minor text fixes.\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.5",
        "name": "Full support for scikit-learn Pipelines",
        "release_id": 3931265,
        "tag": "v0.5",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/3931265",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/3931265",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2016-06-22T19:54:49Z",
        "date_published": "2016-06-23T13:01:58Z",
        "description": "In TPOT 0.4, we've made some major changes to the internals of TPOT and added some convenience functions. We've summarized the changes below.\n\n<ul>\n<li>Added new sklearn models and preprocessors\n<ul>\n<li>AdaBoostClassifier</li>\n<li>BernoulliNB</li>\n<li>ExtraTreesClassifier</li>\n<li>GaussianNB</li>\n<li>MultinomialNB</li>\n<li>LinearSVC</li>\n<li>PassiveAggressiveClassifier</li>\n<li>GradientBoostingClassifier</li>\n<li>RBFSampler</li>\n<li>FastICA</li>\n<li>FeatureAgglomeration</li>\n<li>Nystroem</li>\n</ul></li>\n<li>Added operator that inserts virtual features for the count of features with values of zero</li>\n<li>Reworked parameterization of TPOT operators\n<ul>\n<li>Reduced parameter search space with information from a scikit-learn benchmark</li>\n<li>TPOT no longer generates arbitrary parameter values, but uses a fixed parameter set instead</li>\n</ul></li>\n<li>Removed XGBoost as a dependency\n<ul>\n<li>Too many users were having install issues with XGBoost</li>\n<li>Replaced with scikit-learn's GradientBoostingClassifier</li>\n</ul></li>\n<li>Improved descriptiveness of TPOT command line parameter documentation</li>\n<li>Removed min/max/avg details during fit() when verbosity &gt; 1\n<ul>\n<li>Replaced with tqdm progress bar</li>\n<li>Added tqdm as a dependency</li>\n</ul></li>\n<li>Added <code>fit_predict()</code> convenience function</li>\n<li>Added <code>get_params()</code> function so TPOT can operate in scikit-learn's <code>cross_val_score</code> & related functions</li>\n</ul>\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/0.4",
        "name": "Major upgrade",
        "release_id": 3508182,
        "tag": "0.4",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/3508182",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/3508182",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2016-03-06T03:11:48Z",
        "date_published": "2016-03-06T17:02:56Z",
        "description": "Zenodo requires me to make a new release to assign a DOI, so here's that release. This is not a full release.\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.2.8",
        "name": "Zenodo release",
        "release_id": 2754532,
        "tag": "v0.2.8",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.2.8",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/2754532",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/2754532",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.2.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2016-02-01T20:51:53Z",
        "date_published": "2016-02-03T13:35:23Z",
        "description": "This is the version of TPOT that was used in the GECCO 2016 paper, \"Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science.\"\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/0.2.1",
        "name": "GECCO 2016 paper release",
        "release_id": 2544690,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/2544690",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/2544690",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2015-12-07T18:35:26Z",
        "date_published": "2015-12-07T18:52:50Z",
        "description": "New in v0.2.0:\n- TPOT now has the ability to export the optimized pipelines to sklearn code. See the [documentation](http://rhiever.github.io/tpot/examples/Using_TPOT_via_code/) for more information.\n- Logistic regression, SVM, and k-nearest neighbors classifiers were added as pipeline operators. Previously, TPOT only included decision tree and random forest classifiers.\n- TPOT can now use arbitrary scoring functions for the optimization process. See the [scoring function documentation](http://rhiever.github.io/tpot/examples/Custom_Scoring_Functions/) for more information.\n",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.2.0",
        "name": "Export functionality and more ML models",
        "release_id": 2246676,
        "tag": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/2246676",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/2246676",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rhiever",
          "type": "User"
        },
        "date_created": "2015-11-17T04:02:27Z",
        "date_published": "2015-11-18T14:33:38Z",
        "html_url": "https://github.com/EpistasisLab/tpot/releases/tag/v0.1.3",
        "name": "EvoBIO paper release",
        "release_id": 2146406,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/EpistasisLab/tpot/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/EpistasisLab/tpot/releases/2146406",
        "value": "https://api.github.com/repos/EpistasisLab/tpot/releases/2146406",
        "zipball_url": "https://api.github.com/repos/EpistasisLab/tpot/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 03:32:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9690
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support for TPOT",
        "type": "Text_excerpt",
        "value": "TPOT was developed in the [Computational Genetics Lab](http://epistasis.org/) at the [University of Pennsylvania](https://www.upenn.edu/) with funding from the [NIH](http://www.nih.gov/) under grant R01 AI117694. We are incredibly grateful for the support of the NIH and the University of Pennsylvania during the development of this project.\n\nThe TPOT logo was designed by Todd Newmuis, who generously donated his time to the project.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "TPOT can be used [on the command line](http://epistasislab.github.io/tpot/using/#tpot-on-the-command-line) or [with Python code](http://epistasislab.github.io/tpot/using/#tpot-with-code).\n\nClick on the corresponding links to find more information on TPOT usage in the documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Classification",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Below is a minimal working example with the optical recognition of handwritten digits dataset.\n\n```python\nfrom tpot import TPOTClassifier\nfrom sklearn.datasets import load_digits\nfrom sklearn.model_selection import train_test_split\n\ndigits = load_digits()\nX_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target,\n                                                    train_size=0.75, test_size=0.25, random_state=42)\n\ntpot = TPOTClassifier(generations=5, population_size=50, verbosity=2, random_state=42)\ntpot.fit(X_train, y_train)\nprint(tpot.score(X_test, y_test))\ntpot.export('tpot_digits_pipeline.py')\n```\n\nRunning this code should discover a pipeline that achieves about 98% testing accuracy, and the corresponding Python code should be exported to the `tpot_digits_pipeline.py` file and look similar to the following:\n\n```python\nimport numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import make_pipeline, make_union\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom tpot.builtins import StackingEstimator\nfrom tpot.export_utils import set_param_recursive\n\n# NOTE: Make sure that the outcome column is labeled 'target' in the data file\ntpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)\nfeatures = tpot_data.drop('target', axis=1)\ntraining_features, testing_features, training_target, testing_target = \\\n            train_test_split(features, tpot_data['target'], random_state=42)\n\n# Average CV score on the training set was: 0.9799428471757372\nexported_pipeline = make_pipeline(\n    PolynomialFeatures(degree=2, include_bias=False, interaction_only=False),\n    StackingEstimator(estimator=LogisticRegression(C=0.1, dual=False, penalty=\"l1\")),\n    RandomForestClassifier(bootstrap=True, criterion=\"entropy\", max_features=0.35000000000000003, min_samples_leaf=20, min_samples_split=19, n_estimators=100)\n)\n# Fix random state for all the steps in exported pipeline\nset_param_recursive(exported_pipeline.steps, 'random_state', 42)\n\nexported_pipeline.fit(training_features, training_target)\nresults = exported_pipeline.predict(testing_features)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Regression",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Similarly, TPOT can optimize pipelines for regression problems. Below is a minimal working example with the practice Boston housing prices data set.\n\n```python\nfrom tpot import TPOTRegressor\nfrom sklearn.datasets import load_boston\nfrom sklearn.model_selection import train_test_split\n\nhousing = load_boston()\nX_train, X_test, y_train, y_test = train_test_split(housing.data, housing.target,\n                                                    train_size=0.75, test_size=0.25, random_state=42)\n\ntpot = TPOTRegressor(generations=5, population_size=50, verbosity=2, random_state=42)\ntpot.fit(X_train, y_train)\nprint(tpot.score(X_test, y_test))\ntpot.export('tpot_boston_pipeline.py')\n```\n\nwhich should result in a pipeline that achieves about 12.77 mean squared error (MSE), and the Python code in `tpot_boston_pipeline.py` should look similar to:\n\n```python\nimport numpy as np\nimport pandas as pd\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom tpot.export_utils import set_param_recursive\n\n# NOTE: Make sure that the outcome column is labeled 'target' in the data file\ntpot_data = pd.read_csv('PATH/TO/DATA/FILE', sep='COLUMN_SEPARATOR', dtype=np.float64)\nfeatures = tpot_data.drop('target', axis=1)\ntraining_features, testing_features, training_target, testing_target = \\\n            train_test_split(features, tpot_data['target'], random_state=42)\n\n# Average CV score on the training set was: -10.812040755234403\nexported_pipeline = make_pipeline(\n    PolynomialFeatures(degree=2, include_bias=False, interaction_only=False),\n    ExtraTreesRegressor(bootstrap=False, max_features=0.5, min_samples_leaf=2, min_samples_split=3, n_estimators=100)\n)\n# Fix random state for all the steps in exported pipeline\nset_param_recursive(exported_pipeline.steps, 'random_state', 42)\n\nexported_pipeline.fit(training_features, training_target)\nresults = exported_pipeline.predict(testing_features)\n```\n\nCheck the documentation for [more examples and tutorials](http://epistasislab.github.io/tpot/examples/).\n"
      },
      "source": "https://raw.githubusercontent.com/EpistasisLab/tpot/master/README.md",
      "technique": "header_analysis"
    }
  ]
}