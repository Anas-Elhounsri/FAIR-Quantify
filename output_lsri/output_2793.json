{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "Recognizing off-sample mass spectrometry images with machine and deep learning"
        ],
        "type": "Text_excerpt",
        "value": "We thank the contributors of all public data to METASPACE and particularly those whose data was selected for the gold standard: Sarah Aboulmagd, Michael Becker, Dhaka Bhandari, Mark Bokhart, Berin Boughton, Shane Ellis, Mathieu Gaudin, Erin Gemperline, Cristina Gonzalez Lopez, Richard Goodwin, Anne Mette Handler, Bram Heijs, Sophie Jacobsen, Christian Janfelt, Emrys Jones, Patrik Kadesch, Pegah Khamehgir-Silz, Mario Kompauer, Lingjun Li, Manuel Liebeke, Michael Linscheid, James McKenzie, David Muddiman, Andrew Palmer, J\u00f3zsef P\u00e1ncz\u00e9l, Marina Reuter, Livia S. Eberlin, Veronika Saharuka, Marta Sans, Julian Schneemann, Kumar Sharma, Bernhard Spengler, Nicole Strittmatter, Zoltan Takats, Dusan Velickovic, Eric Weaver, Guanshi Zhang. The work was supported by the funding from the EU Horizon2020 project METASPACE (No. 634402), NIH NIDDK project KPMP, ERC Consolidator project METACELL (No. 773089).\n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 54.58,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Recognizing off-sample mass spectrometry images with machine and deep learning"
        ],
        "type": "Text_excerpt",
        "value": "Would like to cite this project in a scientific publication? Please cite [Ovchinnikova et al. (2020) BMC Bioinformatics](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-020-3425-x).\n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/metaspace2020/offsample"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-16T04:27:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-14T17:57:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Project to develop methods to recognize off-sample mass spectrometry images"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.967618851413236,
      "result": {
        "original_header": "Recognizing off-sample mass spectrometry images with machine and deep learning",
        "type": "Text_excerpt",
        "value": "This repository is devoted to a computational project on recognizing so-called off-sample images in imaging mass spectrometry data. The project is carried out by the [Alexandrov team](https://www.embl.de/research/units/scb/alexandrov/) at EMBL Heidelberg. We used public data from [METASPACE](http://metaspace2020.eu) to create a gold standard set of ion images, as well as developed and evaluated several methods for recognizing off-sample ion images. \nTeam:\n- [Katja Ovchinnikova](http://ovchinnikova.me/): biclustering and molecular co-localization method development, gold standard preparation\n- [Vitaly Kovalev](https://github.com/intsco): deep learning method development\n- [Lachlan Stuart](https://github.com/LachlanStuart): development of the TagOff web app\n- [Theodore Alexandrov](https://www.embl.de/research/units/scb/alexandrov/members/index.php?s_personId=CP-60020464): supervision, gold standard preparation\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9329989620144802,
      "result": {
        "original_header": "Using public METASPACE datasets",
        "type": "Text_excerpt",
        "value": "We used public datasets from [METASPACE](http://metaspace2020.eu), a community-populated knowledge base of metabolite images. Please see the section Acknowledgements acknowledging contributors of the used data.\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9216014339183256,
      "result": {
        "original_header": "Web app for tagging ion images",
        "type": "Text_excerpt",
        "value": "It can be run by [starting the METASPACE webapp](./TagOff/metaspace/webapp/README.md),\nthen navigating to http://localhost:8999/#/imageclassifier?db=HMDB-v4&user=your_name&max=10000&ds=2016-12-07_07h59m24s.\nThe querystring of the URL encodes the filter criteria used to select the annotations.\nNew criteria can be created and copied from [the Annotations page of METASPACE](https://metaspace2020.eu/annotations).\nTwo other parameters exist: `max` and `user`. `max` limits the number of annotations shown, and `user` accepts a name\nwhich is added to the image labels, allowing multiple people to independently label the same image. \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8038669154171312,
      "result": {
        "original_header": "CNN methods",
        "type": "Text_excerpt",
        "value": "We trained Convolutional Neural Networks using Fastai and PyTorch libraries.\nThe best performance we achieved using Resnet50 CNN pretrained on Imagenet. More details [here](CNN/README.md)\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9887804577999615,
      "result": {
        "original_header": "Model REST API Implementation",
        "type": "Text_excerpt",
        "value": "The model was wrapped into a web service and deployed as a part of [Metaspace](https://metaspace2020.eu).\nThe service implementation is available on [GitHub](https://github.com/metaspace2020/metaspace/tree/master/metaspace/off-sample)\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9207789715643783,
      "result": {
        "original_header": "DHB matrix clusters",
        "type": "Text_excerpt",
        "value": "We have generated DHB matrix clusters according to [(Keller and Li, 2000)](./DHB%20matrix%20clusters/Keller%20and%20Li%2C%202000.pdf). This resulted in 353 molecular formulas available [here](./DHB%20matrix%20clusters/DHB%20mc%20mol%20formulas%2C%20predicted.csv).\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/metaspace2020/offsample/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/molecular_similarity/generate_colloc_sim_vectors.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/molecular_similarity/generate_colloc_sim_vectors.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/molecular_similarity/ion_classification_mol_sim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/molecular_similarity/ion_classification_mol_sim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/biclustering/ion_classification_biclustering.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/biclustering/ion_classification_biclustering.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/api_examples.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/api_examples.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/Top%20hits.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/Top%20hits.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/metadata_access.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/metadata_access.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/compare-reference-engine-results.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/compare-reference-engine-results.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/simple_database_queries.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/simple_database_queries.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/iso_img_retrieval.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/iso_img_retrieval.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/access_change_PI_names.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/python-client/example/access_change_PI_names.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/CNN/off-sample-formula-frequencies.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/CNN/off-sample-formula-frequencies.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/CNN/train_fastai_on_gs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/CNN/train_fastai_on_gs.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/metaspace2020/offsample/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metaspace2020/offsample"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Recognizing off-sample mass spectrometry images with machine and deep learning"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/engine/docker/sm_engine/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/engine/docker/sm_engine/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/webapp/ci/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/webapp/ci/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-webapp/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-webapp/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-graphql/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-graphql/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-mol-db/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-mol-db/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/mol-db/scripts/import_hmdb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/engine/scripts/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/engine/docker/env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/webapp/analyze-size.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/metaspace/webapp/ci/populate_pg_es.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/ansible/roles/base/files/increase_swap.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/setup-dev-env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/fetch-mol-images.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/rebuild-es-index.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/start-annotate-daemon.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/start-api.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/start-common.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-engine/start-update-daemon.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-webapp/docker-entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-graphql/docker-entrypoint.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-mol-db/install-dbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/docker/sm-mol-db/docker-entrypoint.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9992247757036351,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "Copy and paste the commands below into a terminal  \n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999984119717414,
      "result": {
        "original_header": "Gold standard ion images",
        "type": "Text_excerpt",
        "value": "To download and unpack an archive with the images\n```\nwget -qO - https://github.com/metaspace2020/offsample/releases/download/0.2/GS.tar.gz | tar -xvz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999775378239877,
      "result": {
        "original_header": "Gold standard ion images predictions",
        "type": "Text_excerpt",
        "value": "To download and unpack an archive with the images grouped by a predicted class as well as predicted probabilities\n```\nwget -qO - https://github.com/metaspace2020/offsample/releases/download/0.2/gs_predictions.tar.gz | tar -xvz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9999992955427567,
      "result": {
        "original_header": "METASPACE knowledge base",
        "type": "Text_excerpt",
        "value": "```\nwget -qO - https://s3-eu-west-1.amazonaws.com/sm-off-sample/pixel-annot-export-v0.10.tar.gz | tar -xvz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8629126635288419,
      "result": {
        "original_header": "Web app for tagging ion images",
        "type": "Text_excerpt",
        "value": "After annotations have been made, the data can be exported with:\n```sh\nsqlite3 -header -csv ./metaspace/webapp/imageclassification.sqlite \"select * from imageclassifications\" > ./metaspace/webapp/dist/results.csv\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/metaspace2020/offsample/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/TagOff/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Recognizing off-sample mass spectrometry images with machine and deep learning"
        ],
        "type": "Text_excerpt",
        "value": "Unless specified otherwise in file headers or LICENSE files present in subdirectories, all files in this repository are licensed under the [Apache 2.0 license](LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "offsample"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "metaspace2020"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1669608,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 416690,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Vue",
        "size": 271120,
        "type": "Programming_language",
        "value": "Vue"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 124455,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TypeScript",
        "size": 51629,
        "type": "Programming_language",
        "value": "TypeScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 12657,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 7999,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 6212,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 5570,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SCSS",
        "size": 559,
        "type": "Programming_language",
        "value": "SCSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/metaspace2020/offsample/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "intsco",
          "type": "User"
        },
        "date_created": "2019-11-11T07:38:46Z",
        "date_published": "2019-05-27T12:55:29Z",
        "html_url": "https://github.com/metaspace2020/offsample/releases/tag/0.2",
        "name": "Pretrained Off-sample model and train data images",
        "release_id": 17606838,
        "tag": "0.2",
        "tarball_url": "https://api.github.com/repos/metaspace2020/offsample/tarball/0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/metaspace2020/offsample/releases/17606838",
        "value": "https://api.github.com/repos/metaspace2020/offsample/releases/17606838",
        "zipball_url": "https://api.github.com/repos/metaspace2020/offsample/zipball/0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:20:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ]
}