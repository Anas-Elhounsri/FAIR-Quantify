{
  "application_domain": [
    {
      "confidence": 48.06,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/csudre/NMJ_Analyser"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-05-04T07:02:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-13T13:09:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Performs analysis of NMJ data "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8030564859972428,
      "result": {
        "original_header": "NMJ_Analyser",
        "type": "Text_excerpt",
        "value": "The code was created using python 3.7 and the following version of packages \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9522134130320765,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": " For each subject the following parameters are calculated for each RED connected component and intersection of GREEN on RED component\n  \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8757151203829526,
      "result": {
        "original_header": "Comparison Properties",
        "type": "Text_excerpt",
        "value": " - 'green volume': (self.n_pos_ref, 'Volume_(Green)'),\n - 'red volume': (self.n_pos_seg, 'Volume_(Red)'),\n - 'n_intersection': (self.n_intersection, 'Intersection'),\n - 'n_union': (self.n_union, 'Union'),\n - 'IoU': Intersection of union\n - 'coverage': Overlap        \n - 'vol_diff': Volume difference\n - 'ave_dist': Average distance\n - 'haus_dist': Hausdorff distance\n - 'haus_dist95': 95% HD\n - 'com_dist': distance between centre of mass\n - 'com_ref': centre of mass RED\n - 'com_seg': centre of mass GREEN\n \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/csudre/NMJ_Analyser/wiki"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/csudre/NMJ_Analyser/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/csudre/NMJ_Analyser/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "csudre/NMJ_Analyser"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NMJ_Analyser"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "NMJ_Analyser"
        ],
        "type": "Text_excerpt",
        "value": "Python3 is required for NMJ-Analyser installation and won't work with Python2 \n\nBefore attempting to install NMJ-Analyser, do make sure the following packages are installed\n\u2022\tSciPy, for multidimensional image processing: https://www.scipy.org/install.html\n\u2022\tpillow, for reading images: https://pillow.readthedocs.io/en/stable/installation.html\n\u2022\tglob, for finding the pathnames: https://docs.python.org/3/library/glob.html\n\u2022\tos: https://pypi.org/project/os-sys/\n\u2022\tnumpy: https://numpy.org/install/\n\u2022\targparse: https://pypi.org/project/argparse/\n\u2022\tpandas: https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html\n\u2022\tsys: https://docs.python.org/3/install/\n\u2022\tScikit-image:https://scikit-image.org/docs/dev/install.html#install-via-pip \n\nWith pip3 installed, type\npip3 install nmjanalyzer to install the NMJ-Analyzer package\n\nOnce the other required packages are installed, type nmj_analyzer on the command line\nA window appears that will allow for the different parameters to be entered"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.97468524868424,
      "result": {
        "original_header": "NMJ_Analyser",
        "type": "Text_excerpt",
        "value": "The code was created using python 3.7 and the following version of packages \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9996781155368729,
      "result": {
        "original_header": "RegionProperties",
        "type": "Text_excerpt",
        "value": " - 'centre of mass': (self.centre_of_mass, ['CoMx',\n                                                     'CoMy',\n                                                     'CoMz']),\n - 'centre_abs': (self.centre_abs, ['Truex, Truey, Truez']),\n - 'volume': (self.volume,\n                       ['NVoxels', 'NVolume']),\n - 'fragmentation': (self.fragmentation, ['Fragmentation']),\n - 'mean_intensity': (self.mean_int, ['MeanIntensity']),\n - 'surface': (self.surface, ['NSurface', 'Nfaces_surf',\n                                       'NSurf_ext', 'Nfaces_ext']),\n - 'surface_dil': (self.surface_dil, ['surf_dil', 'surf_ero']),\n - 'surface volume ratio': (self.sav, ['sav_dil', 'sav_ero']),\n - 'compactness': (self.compactness, ['CompactNumbDil'\n                                               ]),\n - 'eigen': (self.eigen, ['eigenvalues']),\n - 'std': (self.std_values, ['std']),\n - 'quantiles': (self.quantile_values, ['quantiles']),\n - 'bounds': (self.bounds, ['bounds']),\n - 'cc': (self.connect_cc, ['N_CC']),\n - 'cc_dist': (self.dist_cc, ['MeanDistCC']),\n - 'cc_size': (self.cc_size, ['MinSize', 'MaxSize', 'MeanSize']),\n - 'max_extent': (self.max_extent, ['MaxExtent']),\n - 'shape_factor': (self.shape_factor, ['ShapeFactor',\n                                                 'shapefactor_surfcount']),\n - 'skeleton_length': (self.skeleton_length, ['SkeletonLength'])\n  \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/csudre/NMJ_Analyser/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NMJ_Analyser"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "csudre"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 48786,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pillow.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "NMJ_Analyser"
        ],
        "type": "Text_excerpt",
        "value": " - scipy 1.5.3\n - Pillow 7.2.0\n - numpy 1.19.1\n - pandas 1.1.0\n - nibabel 3.1.1\n \nIn addition, the following modules are imported\n - glob\n - os\n - argparse\n - sys\n - Tinker\nPerforms analysis of NMJ data \n"
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 10:55:00",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "NMJ_Analyser"
        ],
        "type": "Text_excerpt",
        "value": "NMJ-Analyser requires NMJs to be separated by at least 20um. Images which contain superimposed NMJs are not ideal for analysis.\nThe NMJ Analyser takes as input directories where jpg or png files have been stored \n\nFor each subject, the input is presented as \nSUBJ/*jpg or png\nThe ..... files must contain the keyword red or RED\nThe ..... files must contain the keyword green or GREEN\nThe slices should ordered numerically ex Mouse1_GREEN_0001.jpg.... Mouse1_GREEN_0010.jpg\n\nThe following parameters are given to the system:\n - -p regular expression of the subject path\n - -dx planar resolution\n - -dz slice thickness\n - -t threshold for voxels to be considered as positives\n "
      },
      "source": "https://raw.githubusercontent.com/csudre/NMJ_Analyser/master/README.md",
      "technique": "header_analysis"
    }
  ]
}