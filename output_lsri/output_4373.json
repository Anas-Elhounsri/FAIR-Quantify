{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AlgoLab/gpps"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-07-29T09:21:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-12T01:34:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9083099173641621,
      "result": {
        "original_header": "ILP step",
        "type": "Text_excerpt",
        "value": "```\nusage: gpps_ilp.py [-h] -f FILE -k K [-t TIME] -o OUTDIR [-d MAXDEL]\n                   [-c CORES] -b FALSEPOSITIVE -a FALSENEGATIVE [--mps]\n\ngpps- ILP\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILE, --file FILE  path of the input file.\n  -k K                  k-value of the selected model. Eg: Dollo(k)\n  -t TIME, --time TIME  maximum time allowed for the computation (in seconds).\n                        Type 0 to not impose a limit (default 300).\n  -o OUTDIR, --outdir OUTDIR\n                        output directory.\n  -d MAXDEL, --maxdel MAXDEL\n                        maximum number of deletion allowed\n  -c CORES, --cores CORES\n                        Total number of cores (default 4).\n  -b FALSEPOSITIVE, --falsepositive FALSEPOSITIVE\n                        set -b False positive probability.\n  -a FALSENEGATIVE, --falsenegative FALSENEGATIVE\n                        set -a False negative probability.\n  --mps                 This will output the model in MPS format instead of\n                        running the solver\nusage: gpps_hc.py [-h] -i ILPFILE -s SCSFILE -k K -o OUTDIR -b FALSEPOSITIVE\n                  -a FALSENEGATIVE [--ns NS] [--mi MI] [--names NAMES]\n\n``` \nWhere `-a` and `-b` are respectively the false negative and false positive rates for the\nSingle Cell Sequencing. \n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/AlgoLab/gpps/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AlgoLab/gpps/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AlgoLab/gpps"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gpps: An ILP-based approach for inferring cancer progression with mutation losses from single cell data"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9764807929906353,
      "result": {
        "original_header": "ILP step",
        "type": "Text_excerpt",
        "value": "Running the example `python3 gpps_ilp.py -f data/examples/ex_scs.txt -a 0.1 -b 10e-4 -k 1 -d 4 -t 3600 -o example`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9185961403421994,
      "result": {
        "original_header": "Hill Climbing step",
        "type": "Text_excerpt",
        "value": "Running the example `python3 gpps_hc.py -s data/examples/ex_scs.txt -i example/ex_scs.ilp.extended.out -k 1 -a 0.1 -b 10e-4 -k 1 -o example`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9103887589020616,
      "result": {
        "original_header": "ILP step",
        "type": "Text_excerpt",
        "value": "```\nusage: gpps_ilp.py [-h] -f FILE -k K [-t TIME] -o OUTDIR [-d MAXDEL]\n                   [-c CORES] -b FALSEPOSITIVE -a FALSENEGATIVE [--mps]\n\ngpps- ILP\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILE, --file FILE  path of the input file.\n  -k K                  k-value of the selected model. Eg: Dollo(k)\n  -t TIME, --time TIME  maximum time allowed for the computation (in seconds).\n                        Type 0 to not impose a limit (default 300).\n  -o OUTDIR, --outdir OUTDIR\n                        output directory.\n  -d MAXDEL, --maxdel MAXDEL\n                        maximum number of deletion allowed\n  -c CORES, --cores CORES\n                        Total number of cores (default 4).\n  -b FALSEPOSITIVE, --falsepositive FALSEPOSITIVE\n                        set -b False positive probability.\n  -a FALSENEGATIVE, --falsenegative FALSENEGATIVE\n                        set -a False negative probability.\n  --mps                 This will output the model in MPS format instead of\n                        running the solver\nusage: gpps_hc.py [-h] -i ILPFILE -s SCSFILE -k K -o OUTDIR -b FALSEPOSITIVE\n                  -a FALSENEGATIVE [--ns NS] [--mi MI] [--names NAMES]\n\n``` \nRunning the example `python3 gpps_ilp.py -f data/examples/ex_scs.txt -a 0.1 -b 10e-4 -k 1 -d 4 -t 3600 -o example`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9146627094482458,
      "result": {
        "original_header": "Hill Climbing step",
        "type": "Text_excerpt",
        "value": "```\nusage: gpps_hc.py [-h] -i ILPFILE -s SCSFILE -k K -o OUTDIR -b FALSEPOSITIVE\n                  -a FALSENEGATIVE [--ns NS] [--mi MI] [--names NAMES]\n\ngpps- Hill Climber\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i ILPFILE, --ilpfile ILPFILE\n                        path of the ILP output file.\n  -s SCSFILE, --scsfile SCSFILE\n                        path of the SCS input file. (same input feeded to the\n                        ILP)\n  -k K                  k-value of the selected model. Eg: Dollo(k)\n  -o OUTDIR, --outdir OUTDIR\n                        output directory.\n  -b FALSEPOSITIVE, --falsepositive FALSEPOSITIVE\n                        set -b False positive probability.\n  -a FALSENEGATIVE, --falsenegative FALSENEGATIVE\n                        set -a False negative probability.\n  --ns NS               Hill climbing neighborhood size.(default 30)\n  --mi MI               Hill climbing maximum iterations. (default 100)\n  --names NAMES         Mutation names.\n``` \nRunning the example `python3 gpps_hc.py -s data/examples/ex_scs.txt -i example/ex_scs.ilp.extended.out -k 1 -a 0.1 -b 10e-4 -k 1 -o example`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/AlgoLab/gpps/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gpps"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "AlgoLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 33129,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 7482,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 2870,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites necessary to run the tool",
        "parent_header": [
          "`gpps`: An ILP-based approach for inferring cancer progression with mutation losses from single cell data",
          "Hill Climbing step"
        ],
        "type": "Text_excerpt",
        "value": "- Python 3.6+\n- Ruby 2.5+\n- Gurobi 8.0+ [ A free academic license can be obtained at https://www.gurobi.com/ ]"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the entire `gpps` pipeline",
        "parent_header": [
          "`gpps`: An ILP-based approach for inferring cancer progression with mutation losses from single cell data"
        ],
        "type": "Text_excerpt",
        "value": "We provide `gpps`,\nthat can be used to infer cancer progressions from single cell data.\nDifferently from the previous tool.\n`gpps` employs a maximum likelihood search\nto find the best tree that explain the input, starting from single cell data.\n\n\n\n\nThe tool can be run with the following arguments:\n\n```\nUsage: gpps [-h] -f FILE -a FALSENEGATIVE -b FALSEPOSITIVE -k K -o OUTDIR\n\t\t [-d MAXDEL] [-n NAMES] [-c CORES] [-t TIME] \n\t\t [-N HC_NeighborSize] [-M HC_MaximumIteration]\n```\n\nMore details are described in the following sections. This script merges the two parts of the \nmethods (ILP and Hill Climbing) in a single pipeline. The usage of the two sub-modules,\nthat can be run independently, is described below.\n\nThe entire workflow can be run on the example files using all the arguments with:\n`./gpps -f data/examples/ex_scs.txt -a 0.1 -b 10e-4 -k 1 -o example -c 16 -t 100 -d 4 -N 50 -M 200 -n data/examples/ex_names.txt`\n\nAlternatively it can be run only with the required arguments:\n`./gpps -f data/examples/ex_scs.txt -a 0.1 -b 10e-4 -k 1 -o example`\n\nThe method will produce in the folder `example` the files:\n- `ex_scs.ilp.extended.out` produced by `gpps_ilp` is the expected extended matrix.\n- `ex_scs.ilp.log` produced by `gpps_ilp` contains the optimal likelihood computed by the ILP.\n- `ex_scs.ilp.tree.gv` produced by `gpps_hc` is the tree computed by the ILP.\n- `ex_scs.hc.expected.scs.out` produced by `gpps_hc` is the optimal expected matrix computed by the HC.\n- `ex_scs.hc.expected.tree.gv` produced by `gpps_hc` is the optimal tree computed by the HC.\n"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites necessary to run the tool",
        "parent_header": [
          "`gpps`: An ILP-based approach for inferring cancer progression with mutation losses from single cell data",
          "Hill Climbing step"
        ],
        "type": "Text_excerpt",
        "value": "- Python 3.6+\n- Ruby 2.5+\n- Gurobi 8.0+ [ A free academic license can be obtained at https://www.gurobi.com/ ]"
      },
      "source": "https://raw.githubusercontent.com/AlgoLab/gpps/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:12:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ]
}