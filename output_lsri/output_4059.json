{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DecodeGenetics/read_haps"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-31T15:47:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-07-28T03:18:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Detects human contamination in bam files"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8878143368118732,
      "result": {
        "original_header": "read_haps",
        "type": "Text_excerpt",
        "value": "Program to estimate human contamination in Illumina WGS files\n \n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DecodeGenetics/read_haps/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DecodeGenetics/read_haps/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DecodeGenetics/read_haps"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "read_haps"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Compilation",
        "parent_header": [
          "read_haps",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can also compile from source if you have the following:\n * C++ compiler with C++11 support\n * Boost >=1.52\n * zlib\n * bz2\n\nDownload or clone this repository and type `make` to build.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing",
        "parent_header": [
          "read_haps",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "You can test your `read_haps` compilation using\n\n```sh\nmake test\n```\n\nThe test runs on a 10 MB region test using a subsampled (~6x coverage) HG002 BAM file and compares output to expected results. You can also find genome-wide tests in the [test/ directory](https://github.com/DecodeGenetics/read_haps/tree/add_test/test).\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DecodeGenetics/read_haps/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "read_haps"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "DecodeGenetics"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 18796,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3746,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1075,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hannespetur",
          "type": "User"
        },
        "date_created": "2020-09-10T14:31:03Z",
        "date_published": "2020-09-10T15:26:35Z",
        "description": "## Install\r\nFetch a static binary (Linux 64bit) using\r\n\r\n```sh\r\nwget https://github.com/DecodeGenetics/read_haps/releases/download/v0.3/read_haps\r\nchmod a+x read_haps\r\n```",
        "html_url": "https://github.com/DecodeGenetics/read_haps/releases/tag/v0.3",
        "name": "Version 0.3",
        "release_id": 31065426,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/31065426",
        "value": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/31065426",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/zipball/v0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hannespetur",
          "type": "User"
        },
        "date_created": "2020-06-04T10:51:38Z",
        "date_published": "2020-06-04T10:55:29Z",
        "description": "## Install\r\nFetch a static binary (Linux 64bit) using\r\n\r\n```sh\r\nwget https://github.com/DecodeGenetics/read_haps/releases/download/v0.2/read_haps\r\nchmod a+x read_haps\r\n```",
        "html_url": "https://github.com/DecodeGenetics/read_haps/releases/tag/v0.2",
        "name": "Version 0.2",
        "release_id": 27216169,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/27216169",
        "value": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/27216169",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "hannespetur",
          "type": "User"
        },
        "date_created": "2020-02-20T13:41:07Z",
        "date_published": "2020-02-20T13:47:42Z",
        "html_url": "https://github.com/DecodeGenetics/read_haps/releases/tag/v0.1.1",
        "name": "Version 0.1.1",
        "release_id": 23841624,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/23841624",
        "value": "https://api.github.com/repos/DecodeGenetics/read_haps/releases/23841624",
        "zipball_url": "https://api.github.com/repos/DecodeGenetics/read_haps/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:01:03",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get binary",
        "parent_header": [
          "read_haps",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Fetch a static binary (Linux 64bit) using\n\n```sh\nwget https://github.com/DecodeGenetics/read_haps/releases/download/v0.2/read_haps\nchmod a+x read_haps\n```\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "read_haps"
        ],
        "type": "Text_excerpt",
        "value": " read_haps [OPTIONS] \"BAMFILE\" \"RELIABLE_SNP_FILE\" \"VCF_FILE\"\n\nSYNOPSIS\n    read_haps [OPTIONS] \"BAMFILE\" \"RELIABLE_SNP_FILE\" \"VCF_FILE\"\n\nDESCRIPTION\n    Determines evidence for DNA contamination in a bam file\n    in a diploid individual (human) using evidence of three haplotypes\n    between sets read-pair adjacent SNPs using a set of SNPs that\n    have been shown to give reliable genotypes on a population scale and a VCF file\n\n    BAMFILE - The (sorted) bam file being consider, along with bai\n    RELIABLE_SNP_FILE - List of chromosome and position with positions ordered (Provided file high_quality_markers_deCODE_2015.txt), only biallelic SNPs are used.\n    VCF_FILE - A file containing genotype calls\n\n    -h, --help\n          Display the help message.\n    -q, --qual INT\n          Minimum bp quality Default: 30.\n    -pl, --phred INT\n          Minimum phred likelihood Default: 40.\n    -c, --cigarlen INT\n          Max cigar len Default: 1.\n    -w, --window INT\n          Read pair window Default: 1000.\n    -mq, --mapq INT\n          Min mapping quality Default: 30.\n    -np, --npairs INT\n          Min number of SNP pairs Default: 10000.\n    -e, --error DOUBLE\n          Max double error pair fraction Default: 0.002.\n    -fa, --fa FA\n          Fasta file Default: genome.fa.\n    -v, --verbose\n          verbose\n    -p, --pairs\n          Output SNP pairs\n    -i, --indels\n          Use indels\n\nDETAILS\n  read_haps takes as input a bam file, a set of reliable markers and a VCF file. It starts by finding all heterozygous reliable markers in the VCF file.  Only biallelic\n  markers are considered and  marker is assumed to have alleles 0 and 1. Two heterozygous markers can have phase 00-11 (parity) or 01-10 (non-parity), i.e. for parity \n  phasing the individual has two haplotypes one with allele 0 on both markers and the other with allele 1 on both markers.  Observing both parity and non-parity \n  suggests the presence of three haplotypes between the two markers, but can also be explained by genotyping error and sequencing error.  To limit genotyping error\n  the marker set is limited to markers that have been extensively verified to not have genotyping errors at deCODE genetics and markers that the genotyping software \n  has made high confidence calls.  To limit sequencing errors only reads with high mapQ and bases with high bp quality.  Three haplotypes should generally not be \n  observed for a sample from a single diploid individual (human), but may occur in regions of structural variation.  Three haplotypes will be commonly observed in \n  a sample that contains the mixture of the DNA of two individuals. Pairs of heterozygous markers overlapped by two read pairs in parity and two reads pairs in \n  non-parity are considered evidence for three haplotypes at the marker pair.  Samples with multiple such pairs are considered contaminated.\n\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example output",
        "type": "Text_excerpt",
        "value": "SNP_PAIRS ERROR_PAIRS DOUBLE_ERROR_PAIR_COUNT DOUBLE_ERROR_FRACTION REL_ERROR_FRACTION NONSENSE_FRACTION PASS_FAIL REASON\n\n905879 955 18 1.98702e-05 0.000490452 0.00196273 PASS -\n\nSNP_PAIRS - Number of marker pairs that are connnected by at least one haplotype\n\nERROR_PAIRS - Number of markers pairs where there is evidence of both parity and non-parity haplotypes\n\nDOUBLE_ERROR_PAIR_COUNT - Number of marker pairs where there are two read pairs evidencing both parity and non-parity\n\nDOUBLE_ERROR_FRACTION - Fraction of marker pairs with two read pairs evidencing parity and non-parity\n\nREL_ERROR_FRACTION - Average fraction of reads from the smaller group (parity, non-parity)\n\nNONSENSE_FRACTION - Fraction of read pairs reporting neither of the two alleles at the markers considered.\n\nPASS_FAIL - PASS or FAIL\n\nREASON - \"-\" for PASS, FAIL can be READ_PAIR_COUNT, which will occur if a low coverage sample is used or CONTAMINATION\n\nto further investigate the contamination the -pu option can be used, reporting the location of all read pairs showing evidence of three haplotypes.\n"
      },
      "source": "https://raw.githubusercontent.com/DecodeGenetics/read_haps/master/README.md",
      "technique": "header_analysis"
    }
  ]
}