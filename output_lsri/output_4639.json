{
  "application_domain": [
    {
      "confidence": 12.16,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mlbendall/telescope"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-18T19:23:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-17T02:52:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Quantification of transposable element expression using RNA-seq"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9809583777790519,
      "result": {
        "original_header": "*Single locus resolution of* **T***ransposable* **ELE***ment expression.*",
        "type": "Text_excerpt",
        "value": "**Table of Contents:** \n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9336479175150612,
      "result": {
        "original_header": "Output",
        "type": "Text_excerpt",
        "value": "Telescope has three main output files: the transcript counts estimated via EM (`telescope-TE_counts.tsv`), \na statistical report of the run containing model parameters and additional information\n(`telescope-stats_report.tsv`), and an updated SAM file (optional). \nThe count file is most important for downstream differential\nexpression analysis. The updated SAM file is useful for downstream locus-specific analyses. \n \n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9701944020869152,
      "result": {
        "original_header": "Updated SAM file",
        "type": "Text_excerpt",
        "value": "+ `ZF:Z` Assigned Feature - The name of the feature that alignment is assigned to.\n+ `ZT:Z` Telescope tag - A value of `PRI` indicates that this alignment is the\n     best hit for the feature and is used in the likelihood calculations. \n     Otherwise the value will be `SEC`, meaning that another alignment to the\n     same feature has a higher score.\n+ `ZB:Z` Best Feature = The name(s) of the highest scoring feature(s) for the fragment.          \n+ `YC:Z` Specifies color for alignment as R,G,B.\nUCSC sanctioned tag, see documentation\n[here.](http://genome.ucsc.edu/goldenpath/help/hgBamTrackHelp.html)\n+ `XP:Z` Alignment probability - estimated posterior probability for this alignment. \n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/mlbendall/telescope/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mlbendall/telescope/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mlbendall/telescope"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Telescope "
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "**Stable version:**\n\nInstall Telescope using [bioconda](https://bioconda.github.io):\n\n[![install with bioconda](https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat)](http://bioconda.github.io/recipes/telescope/README.html) \n\n```bash\nconda install -c bioconda telescope\n```\n\nSee [Getting Started](https://bioconda.github.io/user/install.html) for\ninstructions on setting up bioconda.\n\n\n**Latest version:**\n\nUse conda/mamba package manager to install dependencies, then \nuse `pip` to install Telescope.\n\nThe following has been testing using miniconda3 on macOS and Linux (CentOS 7):\n\n```bash\nmamba env create -n telescope https://github.com/mlbendall/telescope/raw/main/environment.yml\nconda activate telescope\npip install git+https://github.com/mlbendall/telescope.git\ntelescope --version\n```\n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9645224054984393,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "A BAM file (`alignment.bam`) and annotation (`annotation.gtf`) are included in\nthe telescope package for testing. The files are installed in the `data` \ndirectory of the package root. We've included a subcommand, `telescope test`,\nto generate an example command line with the correct paths. \nFor example, to generate an example command line:\n```\ntelescope test\n```\nThe command can be executed using `eval`:\n```\neval $(telescope test)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8648275135021345,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "A BAM file (`alignment.bam`) and annotation (`annotation.gtf`) are included in\nthe telescope package for testing. The files are installed in the `data` \ndirectory of the package root. We've included a subcommand, `telescope test`,\nto generate an example command line with the correct paths. \nFor example, to generate an example command line:\n```\ntelescope test\n```\nThe command can be executed using `eval`:\n```\neval $(telescope test)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/mlbendall/telescope/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (C) 2017 Matthew L. Bendall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "telescope"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "mlbendall"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 230449,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 2786,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mlbendall",
          "type": "User"
        },
        "date_created": "2019-05-08T19:24:14Z",
        "date_published": "2019-05-08T19:31:21Z",
        "description": "  + Added cimport statements to calignment.pyx (MacOS bug fix)\r\n  + Fixed warning about deprecated PyYAML yaml.load\r\n  + Compatibility with intervaltree v3.0.2",
        "html_url": "https://github.com/mlbendall/telescope/releases/tag/v1.0.3",
        "release_id": 17231311,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/mlbendall/telescope/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mlbendall/telescope/releases/17231311",
        "value": "https://api.github.com/repos/mlbendall/telescope/releases/17231311",
        "zipball_url": "https://api.github.com/repos/mlbendall/telescope/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mlbendall",
          "type": "User"
        },
        "date_created": "2018-12-18T16:37:17Z",
        "date_published": "2018-12-21T15:59:29Z",
        "description": "+ Default value for `theta_prior` is 200,000\r\n+ Temporary output files are written as BAM instead of SAM",
        "html_url": "https://github.com/mlbendall/telescope/releases/tag/v1.0.2",
        "release_id": 14662416,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/mlbendall/telescope/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/mlbendall/telescope/releases/14662416",
        "value": "https://api.github.com/repos/mlbendall/telescope/releases/14662416",
        "zipball_url": "https://api.github.com/repos/mlbendall/telescope/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mlbendall",
          "type": "User"
        },
        "date_created": "2018-11-01T15:15:31Z",
        "date_published": "2018-11-21T17:15:53Z",
        "description": "+ Production release",
        "html_url": "https://github.com/mlbendall/telescope/releases/tag/v1.0",
        "release_id": 13797922,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/mlbendall/telescope/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/mlbendall/telescope/releases/13797922",
        "value": "https://api.github.com/repos/mlbendall/telescope/releases/13797922",
        "zipball_url": "https://api.github.com/repos/mlbendall/telescope/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mlbendall",
          "type": "User"
        },
        "date_created": "2016-10-07T21:46:57Z",
        "date_published": "2016-10-07T21:52:01Z",
        "description": "Release for manuscript.",
        "html_url": "https://github.com/mlbendall/telescope/releases/tag/v0.3",
        "release_id": 4337588,
        "tag": "v0.3",
        "tarball_url": "https://api.github.com/repos/mlbendall/telescope/tarball/v0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/mlbendall/telescope/releases/4337588",
        "value": "https://api.github.com/repos/mlbendall/telescope/releases/4337588",
        "zipball_url": "https://api.github.com/repos/mlbendall/telescope/zipball/v0.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:11:12",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 62
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Telescope statistics report",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>",
          "Output"
        ],
        "type": "Text_excerpt",
        "value": "In addition to outputting transcript counts, `telescope assign`\nprovides a more detailed \nstatistical report of each read assignment run. \nThe first line in the  report is a comment (starting with a \u201c#\u201d) that\ncontains information about the run such as the number of fragments processed,\nnumber of mapped fragments, number of uniquely and ambiguously mapped \nfragments, and number of fragments mapping to the annotation. The total number\nof mapped fragments may be useful for normalization. \n\nThe rest of the report is a table with expression values for \nindividual transposable element locations calculated using a variety of\nreassignment methods, as well as estimated and initial model parameters.\nComparing the results from different assignment methods may shed light on the \nmodel's behaviour. The columns of the table are: \n\n+ `transcript` - Transcript ID, by default from \"locus\" field. See --attribute argument to use a different attribute.\n+ `transcript_length` - Approximate length of transcript. This is calculated from the annotation, not the data, and is equal to the spanning length of the annotation minus any non-model regions.\n+ `final_count` - Total number of fragments assigned to transcript after fitting the Telescope model. This is the column to use for downstream analysis that models data as negative binomial, i.e. DESeq2.\n+ `final_conf` - Final confident fragments. The number of fragments assigned to transcript whose posterior probability exceeds a cutoff, 0.9 by default. Set this using the --conf_prob argument.\n+ `final_prop` - Final proportion of fragments represented by transcript. This is the final estimate of the \u03c0 parameter.\n+ `init_aligned` - Initial number of fragments aligned to transcript. A given fragment will contribute +1 to each transcript that it is aligned to, thus the sum of this will be greater than the number of fragments if there are multimapped reads.\n+ `unique_count` - Unique count. Number of fragments aligning uniquely to this transcript.\n+ `init_best` - Initial number of fragments aligned to transcript that have the \"best\" alignment score for that fragment. Fragments that have the same best alignment score to multiple transcripts will contribute +1 to each transcript.\n+ `init_best_random` - Initial number of fragments aligned to transcript that have the \"best\" alignment score for that fragment. Fragments that have the same best alignment score to multiple transcripts will be randomly assigned to one transcript.\n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "`telescope assign`",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The `telescope assign` program finds overlapping reads between an alignment\n(SAM/BAM) and an annotation (GTF) then reassigns reads using a statistical\nmodel. This algorithm enables locus-specific quantification of transposable\nelement expression.\n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic usage",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>",
          "Usage",
          "`telescope resume`"
        ],
        "type": "Text_excerpt",
        "value": "Basic usage requires a file containing read alignments to the genome and an \nannotation file with the transposable element gene model.\n\n```\ntelescope assign [samfile] [gtffile]\n```\n\nAlignments in the BAM file must be ordered so that all alignments for a read\npair appear sequentially in the file - coordinate-sorted BAMs do not work. \nThe default SAM/BAM output for many aligners is in the correct order, or BAM\nfiles can be sorted by read name (`samtools sort -n`). A faster alternative\nto a full read name sort is [`samtools collate`](http://www.htslib.org/doc/samtools-collate.html).\nReads should be aligned and be permitted to map to multiple locations (i.e. `-k` option in `bowtie2`).\n\nThe annotation file must be in GTF format and indicate the genomic regions that\nrepresent transposable element transcripts. The transcripts are permitted to be\ndisjoint in order to exclude insertions of other element types. A collection of\nvalid transposable element gene models are available for download at \n[mlbendall/telescope_annotation_db](https://github.com/mlbendall/telescope_annotation_db).\n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced usage",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>",
          "Usage",
          "`telescope resume`"
        ],
        "type": "Text_excerpt",
        "value": "```\nInput Options:\n\n  samfile               Path to alignment file. Alignment file can be in SAM\n                        or BAM format. File must be collated so that all\n                        alignments for a read pair appear sequentially in the\n                        file.\n  gtffile               Path to annotation file (GTF format)\n  --attribute ATTRIBUTE\n                        GTF attribute that defines a transposable element\n                        locus. GTF features that share the same value for\n                        --attribute will be considered as part of the same\n                        locus. (default: locus)\n  --no_feature_key NO_FEATURE_KEY\n                        Used internally to represent alignments. Must be\n                        different from all other feature names. (default:\n                        __no_feature)\n  --ncpu NCPU           Number of cores to use. (Multiple cores not supported\n                        yet). (default: 1)\n  --tempdir TEMPDIR     Path to temporary directory. Temporary files will be\n                        stored here. Default uses python tempfile package to\n                        create the temporary directory. (default: None)\n\nReporting Options:\n\n  --quiet               Silence (most) output. (default: False)\n  --debug               Print debug messages. (default: False)\n  --logfile LOGFILE     Log output to this file. (default: None)\n  --outdir OUTDIR       Output directory. (default: .)\n  --exp_tag EXP_TAG     Experiment tag (default: telescope)\n  --updated_sam         Generate an updated alignment file. (default: False)\n  \n  Run Modes:\n\n  --reassign_mode {exclude,choose,average,conf,unique}\n                        Reassignment mode. After EM is complete, each fragment\n                        is reassigned according to the expected value of its\n                        membership weights. The reassignment method is the\n                        method for resolving the \"best\" reassignment for\n                        fragments that have multiple possible reassignments.\n                        Available modes are: \"exclude\" - fragments with\n                        multiple best assignments are excluded from the final\n                        counts; \"choose\" - the best assignment is randomly\n                        chosen from among the set of best assignments;\n                        \"average\" - the fragment is divided evenly among the\n                        best assignments; \"conf\" - only assignments that\n                        exceed a certain threshold (see --conf_prob) are\n                        accepted; \"unique\" - only uniquely aligned reads are\n                        included. NOTE: Results using all assignment modes are\n                        included in the Telescope report by default. This\n                        argument determines what mode will be used for the\n                        \"final counts\" column. (default: exclude)\n  --use_every_reassign_mode (single-cell only)\n                        Whether to output count matrices using every reassign mode. \n                        If specified, six output count matrices will be generated, \n                        corresponding to the six possible reassignment methods (all, exclude, \n                        choose, average, conf, unique). (default: False)\n  --conf_prob CONF_PROB\n                        Minimum probability for high confidence assignment.\n                        (default: 0.9)\n  --overlap_mode {threshold,intersection-strict,union}\n                        Overlap mode. The method used to determine whether a\n                        fragment overlaps feature. (default: threshold)\n  --overlap_threshold OVERLAP_THRESHOLD\n                        Fraction of fragment that must be contained within a\n                        feature to be assigned to that locus. Ignored if\n                        --overlap_method is not \"threshold\". (default: 0.2)\n  --annotation_class {intervaltree,htseq}\n                        Annotation class to use for finding overlaps. Both\n                        htseq and intervaltree appear to yield identical\n                        results. Performance differences are TBD. (default:\n                        intervaltree)                    \n  --stranded_mode {None, RF, R, FR, F}\n                        Options for considering feature strand when assigning reads. \n                        If None, for each feature in the annotation, returns counts \n                        for the positive strand and negative strand. If not None, \n                        this argument specifies the orientation of paired end reads \n                        (RF - read 1 reverse strand, read 2 forward strand) and\n                        single end reads (F - forward strand) with respect to the \n                        generating transcript. (default: None)\n  --barcode_tag (single-cell only)\n                        String specifying the name of the field in the BAM/SAM \n                        file containing the barcode for each read. (default: CB)\nModel Parameters:\n\n  --pi_prior PI_PRIOR   Prior on \u03c0. Equivalent to adding n unique reads.\n                        (default: 0)\n  --theta_prior THETA_PRIOR\n                        Prior on \u03b8. Equivalent to adding n non-unique reads.\n                        (default: 200000)\n  --em_epsilon EM_EPSILON\n                        EM Algorithm Epsilon cutoff (default: 1e-7)\n  --max_iter MAX_ITER   EM Algorithm maximum iterations (default: 100)\n  --use_likelihood      Use difference in log-likelihood as convergence\n                        criteria. (default: False)\n  --skip_em             Exits after loading alignment and saving checkpoint\n                        file. (default: False)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "`telescope resume`",
        "parent_header": [
          "Telescope <a href=\"http://bioconda.github.io/recipes/telescope/README.html\"><img alt=\"install with bioconda\" src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" /></a>",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The `telescope resume` program loads the checkpoint from a previous run and \nreassigns reads using a statistical model.\n\n#### Basic usage\n\nBasic usage requires a checkpoint file created by an earlier run of \n`telescope assign`. Useful if the run fails after the initial load:\n\n```\ntelescope resume [checkpoint]\n```\n\n#### Advanced usage\n\nOptions are available for tuning the EM optimization, similar to \n`telescope assign`.\n\n```\nInput Options:\n\n  checkpoint            Path to checkpoint file.\n\nReporting Options:\n\n  --quiet               Silence (most) output. (default: False)\n  --debug               Print debug messages. (default: False)\n  --logfile LOGFILE     Log output to this file. (default: None)\n  --outdir OUTDIR       Output directory. (default: .)\n  --exp_tag EXP_TAG     Experiment tag (default: telescope)\n\nRun Modes:\n\n  --reassign_mode {exclude,choose,average,conf,unique}\n                        Reassignment mode. After EM is complete, each fragment\n                        is reassigned according to the expected value of its\n                        membership weights. The reassignment method is the\n                        method for resolving the \"best\" reassignment for\n                        fragments that have multiple possible reassignments.\n                        Available modes are: \"exclude\" - fragments with\n                        multiple best assignments are excluded from the final\n                        counts; \"choose\" - the best assignment is randomly\n                        chosen from among the set of best assignments;\n                        \"average\" - the fragment is divided evenly among the\n                        best assignments; \"conf\" - only assignments that\n                        exceed a certain threshold (see --conf_prob) are\n                        accepted; \"unique\" - only uniquely aligned reads are\n                        included. NOTE: Results using all assignment modes are\n                        included in the Telescope report by default. This\n                        argument determines what mode will be used for the\n                        \"final counts\" column. (default: exclude)\n  --use_every_reassign_mode \n                        Whether to output count matrices using every reassign mode. \n                        If specified, six output count matrices will be generated, \n                        corresponding to the six possible reassignment methods (all, exclude, \n                        choose, average, conf, unique). (default: False)\n  --conf_prob CONF_PROB\n                        Minimum probability for high confidence assignment.\n                        (default: 0.9)\n\nModel Parameters:\n\n  --pi_prior PI_PRIOR   Prior on \u03c0. Equivalent to adding n unique reads.\n                        (default: 0)\n  --theta_prior THETA_PRIOR\n                        Prior on \u03b8. Equivalent to adding n non-unique reads.\n                        (default: 0)\n  --em_epsilon EM_EPSILON\n                        EM Algorithm Epsilon cutoff (default: 1e-7)\n  --max_iter MAX_ITER   EM Algorithm maximum iterations (default: 100)\n  --use_likelihood      Use difference in log-likelihood as convergence\n                        criteria. (default: False)\n```\n                        "
      },
      "source": "https://raw.githubusercontent.com/mlbendall/telescope/main/README.md",
      "technique": "header_analysis"
    }
  ]
}