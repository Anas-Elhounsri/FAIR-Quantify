{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YidingZhang117/CIPHER-SC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-03T04:52:30Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-18T15:13:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9934393584242781,
      "result": {
        "original_header": "CIPHER-SC",
        "type": "Text_excerpt",
        "value": "CIPHER-SC is the latest version of CIPHER. It is a complete end-to-end prediction algorithm based on a context-aware network including single-cell data.  \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9687457061559122,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "Then the final result (0.9501 of AUC) in our paper is obtained. \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/YidingZhang117/CIPHER-SC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YidingZhang117/CIPHER-SC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "YidingZhang117/CIPHER-SC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CIPHER-SC"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9945205940392695,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "To train and test with CIPHER-SC, we should run preprocess first. The first step is to run `generate_edgelist.py` under `preprocess/edgelist_result`. Then follow the step 1-4 in `process` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9847220086181521,
      "result": {
        "original_header": "Train",
        "type": "Text_excerpt",
        "value": "For training Cipher-SC with default setting, you can directly run as follows:\n```\npython train.py \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9859878706599686,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "We provide the checkpoint of Cipher-SC under the `checkpoint` folder, directly run the following code:\n```\npython test.py\n``` \n \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.800470374940304,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "To train and test with CIPHER-SC, we should run preprocess first. The first step is to run `generate_edgelist.py` under `preprocess/edgelist_result`. Then follow the step 1-4 in `process` folder. \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9212362039984529,
      "result": {
        "original_header": "Train",
        "type": "Text_excerpt",
        "value": "For training Cipher-SC with default setting, you can directly run as follows:\n```\npython train.py \n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.843703878457862,
      "result": {
        "original_header": "Test",
        "type": "Text_excerpt",
        "value": "We provide the checkpoint of Cipher-SC under the `checkpoint` folder, directly run the following code:\n```\npython test.py\n``` \n \n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/YidingZhang117/CIPHER-SC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CIPHER-SC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "YidingZhang117"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 62305,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisite",
        "parent_header": [
          "CIPHER-SC"
        ],
        "type": "Text_excerpt",
        "value": "Cipher-SC is implemented mainly based on PyTorch and PyTorch Geometric (PyG). So please install these two libraries first.\n\n* [PyTorch Installation](https://pytorch.org/)\n* [PyG installation](https://github.com/rusty1s/pytorch_geometric)\n"
      },
      "source": "https://raw.githubusercontent.com/YidingZhang117/CIPHER-SC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 14:10:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ]
}