{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "parent_header": [
          "iMUBAC: Integration of Multi-Batch Cytometry Datasets"
        ],
        "type": "Text_excerpt",
        "value": "Ogishi, M et al. (2020) \"Multibatch Cytometry Data Integration for Optimal Immunophenotyping.\" *The Journal of Immunology*.  https://www.jimmunol.org/content/early/2020/11/20/jimmunol.2000854  \nKrieg, C et al. (2018) \"High-dimensional Single-Cell Analysis Predicts Response to anti-PD-1 Immunotherapy.\" *Nature Medicine*. https://pubmed.ncbi.nlm.nih.gov/29309059/\n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/casanova-lab/iMUBAC"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-10T11:27:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-31T18:22:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Integration of multi-batch cytometry datasets"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9939890763420925,
      "result": {
        "original_header": "iMUBAC: Integration of Multi-Batch Cytometry Datasets",
        "type": "Text_excerpt",
        "value": "The 'iMUBAC' package provides a structured framework for objective inter-batch comparisons and unbiased immunophenotyping of high-dimentional cytometry datasets.\n \n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/casanova-lab/iMUBAC/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/casanova-lab/iMUBAC/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "casanova-lab/iMUBAC"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMUBAC: Integration of Multi-Batch Cytometry Datasets"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "iMUBAC: Integration of Multi-Batch Cytometry Datasets"
        ],
        "type": "Text_excerpt",
        "value": "Install the latest version as follows:\n``` r\nif(!require(devtools)) install.packages(\"devtools\")\ndevtools::install_github(\"VPetukhov/ggrastr\")\ndevtools::install_github(\"immunogenomics/harmony\")\ndevtools::install_github(\"casanova-lab/iMUBAC\")\ndevtools::install_github(\"masato-ogishi/plotUtility\")\n```\n- \u00a0You may be prompted to install some packages before installing iMUBAC. Follow the messages.\n- \u00a0This package depends on some packages in the [*Bioconductor*](https://www.bioconductor.org/) (e.g., flowCore) that may not be automatically installed. Please check the DESCRIPTION file for more details on required packages and install them manually as required.\n-  You need an appropriate rJava setting beforehand.\n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/casanova-lab/iMUBAC/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cytof, cytometry, flowsom, immunophenotyping, machine-learning, r"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Masato Ogishi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iMUBAC"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "casanova-lab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 42626,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "System Requirements",
        "parent_header": [
          "iMUBAC: Integration of Multi-Batch Cytometry Datasets"
        ],
        "type": "Text_excerpt",
        "value": "iMUBAC has been tested on R versions >= 4.0 on Windows platform. \n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:06:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "iMUBAC: Integration of Multi-Batch Cytometry Datasets"
        ],
        "type": "Text_excerpt",
        "value": "0. Working environment\n``` r\noptions(java.parameters=\"-Xmx60G\")  ## allow JAVA to use large memory space\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(SingleCellExperiment)\nlibrary(iMUBAC)\n```\n1. Data\n- \u00a0For demonstration, previously published CyTOF datasets from Krieg et al. (Pre-treatment datasets stained with the Panel 3, a myeloid-specific panel, from two different batches) are included.\n``` r\n# Sample metadata\nmd <- data.table::fread(system.file(\"Metadata.csv\", package=\"iMUBAC\"))\nmd[,full_path:=file.path(system.file(package=\"iMUBAC\"),file_name)]\nmd[,batch:=factor(batch, levels=c(\"Data23\",\"Data29\"))]\nmd[,group:=factor(group, levels=c(\"HD\",\"R\",\"NR\"))]\n\n# Panel design\npd <- list(\n  data.table::fread(system.file(\"PanelInfo_Data23_Panel3.csv\", package=\"iMUBAC\")),\n  data.table::fread(system.file(\"PanelInfo_Data29_Panel3.csv\", package=\"iMUBAC\"))\n) %>% magrittr::set_names(c(\"Data23\",\"Data29\"))\n\n# Preprocessing\nsce <- iMUBAC::prepSCE(\n  md=md[panel==\"Panel3\"],\n  pd=pd,\n  channel_length=NULL,      ## Doublet detection by event length is disabled.\n  channel_DNA=c(\"Ir191Di\",\"Ir193Di\"),\n  channel_LD=\"Pt198Di\",\n  type=\"CyTOF\"\n)\ncolData(sce) <- colData(sce)[c(\"file_name\",\"panel\",\"batch\",\"donor_id\",\"group\",\"treatment\")]\nsaveRDS(sce, \"CyTOF_SCE_Merged_Panel3.rds\")\n```\n2. Batch-correction\n- \u00a0Here, only control samples (in this case, \"HD\") are used for batch-correction. However, this is the users' call.\n-  The harmonization step takes some time, depending on the number of batches and cells per batch to be integrated.\n\n``` r\n# Load the preprocessed data\nsce <- readRDS(\"CyTOF_SCE_Merged_Panel3.rds\")\n\n# Take the subset of data from healthy donors\nsce_down <- sce[,sce$\"group\"==\"HD\"]\n\n# Batch-correction\nsce_down <- iMUBAC::batchCorrection(\n  sce_down,\n  maxN=50000, ## A maximum of 50000 cells are randomly selected from each batch.\n  seed=12345  ## a random seed\n)\n```\n- \u00a0Optionally, we can explore the impact of batch-correction through UMAP.\n``` r\n# UMAP\nsce_down <- iMUBAC::runUMAP(\n  sce_down,\n  by_exprs_values=\"exprs\",\n  name=\"UMAP\",\n  n_neighbors=25,\n  min_dist=0.4,\n  scale=T,\n  n_threads=4, ## the number of threads for parallel computing\n  seed=12345\n)\nsce_down <- iMUBAC::runUMAP(\n  sce_down,\n  by_exprs_values=\"normexprs\",\n  name=\"UMAPnorm\",\n  n_neighbors=25,\n  min_dist=0.4,\n  scale=T,\n  n_threads=4,\n  seed=12345\n)\n\n# Plot\nplt1 <- ggpubr::ggarrange(\n  iMUBAC::plotDR(\n    sce_down,\n    dimred=\"UMAP\",\n    colour_by=\"batch\"\n  ) +\n    scale_colour_brewer(palette=\"Dark2\"),\n  iMUBAC::plotDR(\n    sce_down,\n    dimred=\"UMAPnorm\",\n    colour_by=\"batch\"\n  ) +\n    scale_colour_brewer(palette=\"Dark2\"),\n  ncol=2, nrow=1, common.legend=T, legend=\"right\"\n)\nplotUtility::savePDF(plt1, o=\"Plt1.pdf\", w=15, h=6)\n```\n3. Unsupervised clustering\n- \u00a0Currently two methods are implemented. \n-  The first approach groups cells into \\code{xdim}x\\code{ydim} clusters using \\pkg{FlowSOM}, and then performs metaclustering with \\pkg{ConsensusClusterPlus} into \\code{maxK} clusters. \n-  The second approach performs dimention reduction through UMAP, constructs shared nearest-neighbor graphs using \\pkg{scran}, and then performs community detection using the Leuvein algorithm in \\pkg{igraph}.\n``` r\n# FlowSOM-guided clustering & ConsensusClusterPlus-guided metaclustering\nsce_down <- iMUBAC::clustering(\n  sce_down,\n  features=rownames(sce_down), ## Using all markers for clustering\n  by_exprs_values=\"normexprs\",\n  method=\"FlowSOM\",\n  xdim=20,\n  ydim=20,\n  maxK=40, ## the number of metaclusters returned\n  seed=12345\n)\n\n# Alternatively, SNN-graph-guided clustering\n## Not used in this demonstration\nsce_down_snn <- iMUBAC::clustering(\n  sce_down,\n  features=rownames(sce_down), ## Using all markers for clustering\n  by_exprs_values=\"normexprs\",\n  method=\"SNNGraph\",\n  n_components=10, ## the number of reduced dimentions for constructing the SNN graph\n  n_neighbors=25,  ## the parameters for UMAP-based dimention reduction\n  min_dist=0.4,    ## the parameters for UMAP-based dimention reduction\n  seed=12345\n)\n``` \n- \u00a0We can explore the clusters through the median expression heatmap and UMAP plots.\n``` r\n# Median expression heatmap\nplt2 <- iMUBAC::plotClusterHeatmap(\n  sce_down,\n  features=rownames(sce_down),\n  clusters=sce_down$\"cluster_id\",\n  by_exprs_values=\"normexprs\",\n  fun=\"median\",\n  scale=T,\n  cluster_rows=T,\n  cluster_anno=T,\n  draw_dend=T,\n  draw_freqs=T\n)\nplotUtility::savePDF(plt2, o=\"Plt2.pdf\", w=12, h=8)\n\n# UMAP plot\nplt3 <- iMUBAC::plotDR(\n  sce_down,\n  dimred=\"UMAPnorm\",\n  colour_by=\"cluster_id\",\n  text_by=\"cluster_id\"    ## to overlay cluster ids on each of the clusters\n) +\n  ggpubr::rremove(\"legend\")\nplotUtility::savePDF(plt3, o=\"Plt3.pdf\", w=10, h=6)\n```\n\n4. Batch-specific cluster propagation through machine learning\n- \u00a0Classifiers are trained for each batch utilizing the Extreme Randomized Trees algorithm.\n-  There are both abundant and rare clusters. To mitigate the class imbalance problem and also to reduce the computational burden, here a maximum of 100 cells are randomly selected for each of the clusters before classifier training.\n``` r\nsce <- iMUBAC::clusterPropagation(\n  sce,           ## the original data containing cells from controls and patients (non-batch-corrected)\n  sce_down,      ## down-sampled data containing cells from controls (batch-corrected and clustered)\n  by_exprs_values=\"exprs\", ## Non-batch-corrected expression values are used for classifier training.\n  maxN=100,\n  numThreads=4,  ## the number of threads for parallel computing\n  seed=12345\n)\n```\n5. Manual cell-type identification\n- \u00a0Users can provide cell-type annotations for each cluster. The data.frame should contain four columns: \"cluster_id\", \"celltype\", \"celltype_detailed\", and \"order\". \n-  The \"celltype\" and \"celltype_detailed\" columns can be identical but may be useful to provide different layers of annotation (e.g., \"CD4 T\" and \"CD4 TEMRA\").\n-  The \"order\" column will be used to define the order of factor levels for cell types. Expected to be filled with integers.\n``` r\n# Annotation\ndf_celltype <- readxl::read_excel(\"CyTOF_ClusterCellTypes_Panel3.xlsx\")\nsce <- clusterAnnotation(sce, df_celltype)\nsce_down <- clusterAnnotation(sce_down, df_celltype)\nsaveRDS(sce, \"CyTOF_SCE_Cluster_Panel3.rds\")\nsaveRDS(sce_down, \"CyTOF_SCE_Cluster_Panel3_Down.rds\")\n\n# Median expression heatmap\n## Removing unnecessary clusters\nsce_down <- sce_down[,!sce_down$\"celltype_detailed\" %in% c(\"Basophil\",\"Unidentified\")]\nsce_down$\"celltype_detailed\" <- droplevels(sce_down$\"celltype_detailed\")\nplt4 <- iMUBAC::plotClusterHeatmap(\n  sce_down,\n  features=rownames(sce_down),\n  clusters=sce_down$\"celltype_detailed\",\n  by_exprs_values=\"normexprs\",\n  fun=\"median\",\n  scale=T,\n  cluster_rows=F,\n  cluster_anno=F,\n  draw_dend=T,\n  draw_freqs=T\n)\n\n# UMAP\n## Recompute UMAP coordinates after removing unnecessary clusters\nsce_down <- sce_down[,!sce_down$\"celltype_detailed\" %in% c(\"Basophil\",\"Unidentified\")]\nsce_down$\"celltype_detailed\" <- droplevels(sce_down$\"celltype_detailed\")\nsce_down <- iMUBAC::runUMAP(\n  sce_down,\n  by_exprs_values=\"normexprs\",\n  name=\"UMAP\",\n  n_neighbors=25,\n  min_dist=0.4,\n  scale=T,\n  n_threads=4,\n  seed=12345\n)\nplt5 <- iMUBAC::plotDR(\n  sce_down,\n  dimred=\"UMAP\",\n  colour_by=\"celltype_detailed\",\n  text_by=\"celltype_detailed\",\n  point_size=1.5\n) +\n  theme(legend.position=\"right\",\n        legend.direction=\"vertical\") +\n  ggpubr::rremove(\"legend.title\")\n```\n6. Differential abundance analysis\n- A number of workflows are available for differential abundance (DA) analysis. Here, we use the QLF test in edgeR to detect DA subsets between non-responders and responders to PD-1 blockade immunotherapy.\n``` r\nlibrary(edgeR)\nsce <- readRDS(\"CyTOF_SCE_Cluster_Panel3.rds\")\ndt_da <- colData(sce) %>%\n  as.data.frame() %>%\n  dplyr::group_by(donor_id, batch, group, celltype_detailed) %>%\n  dplyr::tally() %>%\n  dplyr::mutate(percent=n/sum(n)*100) %>%\n  tidyr::complete(tidyr::nesting(donor_id, batch, group), celltype_detailed, fill=list(n=0, percent=0)) %>%\n  data.table::as.data.table()\ndt_da[,batch:=factor(batch, levels=c(\"Data23\",\"Data29\"), labels=c(\"Batch1\",\"Batch2\"))]\ndt_da[,variable:=paste0(group,\"_\",batch)]\ndt_da[,variable:=factor(variable, levels=c(\"HD_Batch1\", \"HD_Batch2\", \"R_Batch1\", \"R_Batch2\", \"NR_Batch1\", \"NR_Batch2\"))]\ndt_da[,label:=paste0(group,\"_\",batch,\"_\",donor_id)]\ndt_da_wide <- data.table::dcast(dt_da, celltype_detailed~label, value.var=\"n\")\ncelltypeLabels <- dt_da_wide$\"celltype_detailed\"\ndt_da_wide[,celltype_detailed:=NULL]\nmat <- as.matrix(dt_da_wide)\nrownames(mat) <- celltypeLabels\ngroups <- factor(\n  colnames(mat),\n  levels=unique(dt_da, by=\"label\")$\"label\",\n  labels=unique(dt_da, by=\"label\")$\"group\"\n)\nbatches <- factor(\n  colnames(mat),\n  levels=unique(dt_da, by=\"label\")$\"label\",\n  labels=unique(dt_da, by=\"label\")$\"batch\"\n)\nd <- edgeR::DGEList(counts=mat, lib.size=colSums(mat), group=groups, remove.zeros=T)\ndesign <- model.matrix(~0+groups+batches, data=d$samples)\nd <- edgeR::estimateDisp(d, design)\nfit <- edgeR::glmQLFit(d, design, robust=T)\ndt_da_qlf <- edgeR::glmQLFTest(\n  fit, \n  contrast=makeContrasts(NRvsR=groupsNR-groupsR, levels=design)\n) %>%\n  edgeR::topTags(n=Inf) %>%\n  as.data.frame() %>%\n  dplyr::transmute(\n    celltype_detailed=rownames(.),\n    log2FC=logFC, \n    PValue=PValue,\n    AdjPValue=FDR\n  ) %>%\n  data.table::as.data.table()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/casanova-lab/iMUBAC/master/README.md",
      "technique": "header_analysis"
    }
  ]
}