{
  "application_domain": [
    {
      "confidence": 0.8529760037880335,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biocom-uib/AligNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-25T07:27:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-04-16T04:31:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R-package AligNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biocom-uib/AligNet/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biocom-uib/AligNet/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biocom-uib/AligNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A global alignment example M. Musculus versus  C. Elegants"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install AligNet from github",
        "parent_header": [
          "A global alignment example M. Musculus versus  C. Elegants"
        ],
        "type": "Text_excerpt",
        "value": "```{r loadData}\nlibrary(devtools)\ninstall_github(\"biocom-uib/AligNet\",upgrade_dependencies=TRUE,force=TRUE)\nlibrary(AligNet)\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biocom-uib/AligNet/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "AligNet"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biocom-uib"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 45109,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:35:22",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A global alignment example M. Musculus versus  C. Elegants",
        "type": "Text_excerpt",
        "value": "How to install AligNet and run M. Musculus versus C. Elegants ppin's.\n\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Load data",
        "parent_header": [
          "A global alignment example M. Musculus versus  C. Elegants"
        ],
        "type": "Text_excerpt",
        "value": "First we load the data. To do this vignette you can load data available in `bioinfo.uib.es/~recerca/AlgNet/Data`\n\n```{r}\nmus_blast=read.matrix(\"http://bioinfo.uib.es/~recerca/AligNet/Data/mus-blast.tab\",mode=\"col3\")\ncel_blast=read.matrix(\"http://bioinfo.uib.es/~recerca/AligNet/Data/cel-blast.tab\",mode=\"col3\")\nmus_cel_blast=read.matrix(\"http://bioinfo.uib.es/~recerca/AligNet/Data/mus-cel-blast.tab\",mode=\"col3\")\nmus_net=read.network(\"http://bioinfo.uib.es/~recerca/AligNet/Data/mus-net.tab\",mode=\"edges\",sep=\"\\t\")\ncel_net=read.network(\"http://bioinfo.uib.es/~recerca/AligNet/Data/cel-net.tab\",mode=\"edges\",sep=\"\\t\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Some auxiliar functions",
        "parent_header": [
          "A global alignment example M. Musculus versus  C. Elegants"
        ],
        "type": "Text_excerpt",
        "value": "\n```{r}\n\nmake.clusters <- function(net, blast.net) {\n  ## ----matrices------------------------------------------------------------\n  blast = matrix(0, nrow = vcount(net), ncol = vcount(net))\n\n  ## ----adapt---------------------------------------------------------------\n  dimnames(blast) = list(V(net)$name,V(net)$name)\n  protsr = intersect(V(net)$name, rownames(blast.net))\n  protsc = intersect(V(net)$name, colnames(blast.net))\n  for(p in protsr){\n    blast[p,protsc] = blast.net[p,protsc]\n  }\n  rm(protsr)\n  rm(protsc)\n  rm(blast.net)\n\n  ## ----clusters------------------------------------------------------------\n  blast = blast/max(blast)\n  sigma = (as.matrix(blast) + compute.matrix(net))/2\n  rm(blast)\n  q3 = fivenum(sigma)[3]\n  clust = cluster.network(sigma,q3,20)\n  rm(sigma)\n  clusters = extract.clusters(net,clust)\n  rm(clust)\n  names(clusters)=V(net)$name\n\n  return(clusters)\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clusters and global alignement",
        "parent_header": [
          "A global alignment example M. Musculus versus  C. Elegants"
        ],
        "type": "Text_excerpt",
        "value": "```{r}\n## ----clusters networks------------------------------------------------------------\nclusters1 = make.clusters(mus_net, mus_blast)\nrm(mus_blast)\n\nclusters2 = make.clusters(cel_net, cel_blast)\nrm(cel_blast)\n\n## ----localalign----------------------------------------------------------\n\nblast = matrix(0, nrow = vcount(mus_net), ncol = vcount(cel_net))\ndimnames(blast) = list(V(mus_net)$name,V(cel_net)$name)\nprots1 = intersect(V(mus_net)$name, rownames(mus_cel_blast))\nprots2 = intersect(V(cel_net)$name, colnames(mus_cel_blast))\nfor(p1 in prots1){\n  blast[p1,prots2] = mus_cel_blast[p1,prots2]\n}\nrm(prots1)\nrm(prots2)\nrm(mus_cel_blast)\n\nblast = blast/max(blast)\n\nmultithread.enable = Sys.getenv('ALIGNET_LOCAL_MULTITHREADED') == '1'\nnumCores =\n  if (multithread.enable) {\n    library(parallel)\n    detectCores()-1\n  } else {\n    1\n  }\nlocalAligns = align.local.all(clusters1,clusters2,blast,0,cores=numCores,1-blast)\n\nrm(clusters1)\nrm(clusters2)\n\n## ----globalalign---------------------------------------------------------\nglobal = align.global(localAligns,blast)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Save alignement and EC and FC scores",
        "parent_header": [
          "A global alignment example M. Musculus versus  C. Elegants",
          "Clusters and global alignement"
        ],
        "type": "Text_excerpt",
        "value": "```{r}\n#save(global, file='global.Rdata')\nwrite.table(global[[2]], file='net1-net2-alignment.tab', col.names=FALSE, sep='\\t')\ndata(go)\n\n## ----scores--------------------------------------------------------------\nec = EC.score(global[[2]], mus_net, cel_net)\nfc = FC.score(global[[2]], go)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biocom-uib/AligNet/master/README.md",
      "technique": "header_analysis"
    }
  ]
}