{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing falco",
        "type": "Text_excerpt",
        "value": "============\n\nIf `falco` was helpful for your research, you can cite us as follows:\n\n*de Sena Brandine G and Smith AD. Falco: high-speed FastQC emulation for\nquality control of sequencing data. F1000Research 2021, 8:1874\n(https://doi.org/10.12688/f1000research.21142.2)*\n\n**Please do not cite this manuscript if you used FastQC directly and not falco!**\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smithlabcode/falco"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-11T17:56:11Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T15:34:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A C++ drop-in replacement of FastQC to assess the quality of sequence read data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9964121452732518,
      "result": {
        "original_header": "Falco: FastQC Alternative Code",
        "type": "Text_excerpt",
        "value": "This program is an emulation of the popular\n[FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc)\nsoftware to check large sequencing reads for common problems.\n \n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smithlabcode/falco/tree/master/documentation/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/smithlabcode/falco/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/smithlabcode/falco/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "smithlabcode/falco"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Falco: FastQC Alternative Code"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/benchmark/run_all_fastqc_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/benchmark/run_all_fastp_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/benchmark/run_all_htqc_tests.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/benchmark/download_files.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/benchmark/run_all_falco_tests.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/214499063"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing through conda",
        "parent_header": [
          "Installing falco"
        ],
        "type": "Text_excerpt",
        "value": "If you use [anaconda](https://anaconda.org) to manage your packages,\nand the `conda` binary is in your path, you can install the most\nrecent release of `falco` by running\n```\n$ conda install -c bioconda falco\n```\n\n`falco` can be found inside the `bin` directory of your anaconda\ninstaller.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing from source (code release)",
        "parent_header": [
          "Installing falco"
        ],
        "type": "Text_excerpt",
        "value": "Compilation from source can be done by downloading a `falco` release\nfrom the [releases](https://github.com/smithlabcode/falco/releases)\nsection above. Upon downloading the release (in `.tar.gz` or `.zip`\nformat), and inflating the downloaded file to a directory\n(e.g. `falco`), move to the target directory the file was inflated\n(e.g. `cd falco`). You should see a `configure` file in it. In this\ndirectory, run\n\n```\n$ ./configure CXXFLAGS=\"-O3 -Wall\"\n$ make all\n$ make install\n```\nif you wish to install the falco binaries on a specific directory, you can use\nthe `--prefix` argument when running `./configure`, for instance:\n\n```\n$ ./configure CXXFLAGS=\"-O3 -Wall\" --prefix=/path/to/installation/directory\n```\n\nThe `falco` binary will be found in the `bin` directory inside the\nspecified prefix.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing from a cloned repository",
        "parent_header": [
          "Installing falco"
        ],
        "type": "Text_excerpt",
        "value": "We strongly recommend using `falco` through stable releases as\ndescribed above, as the latest commits might contain undocumented\nbugs. For the more advanced users who wish to test the most recent\ncode, `falco` can be installed by first cloning the repository\n\n```\n$ git clone https://github.com/smithlabcode/falco.git\n$ cd falco\n```\n\nOnce inside the generated repsotory directory, run\n```\n$ make all\n$ make install\n```\n\nThis should create a `bin` directory inside the cloned repository\ncontaining `falco`.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/smithlabcode/falco/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copyright and License Information",
        "type": "Text_excerpt",
        "value": "=================================\n\nCopyright (C) 2019-2022 Guilherme de Sena Brandine and\n                        Andrew D. Smith\n\nAuthors: Guilherme de Sena Brandine and Andrew D. Smith\n\nThis is free software: you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThis software is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "falco"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "smithlabcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 790001,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 270136,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 27679,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4222,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3522,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewdavidsmith",
          "type": "User"
        },
        "date_created": "2024-09-25T20:21:08Z",
        "date_published": "2024-09-25T20:34:14Z",
        "description": "**The correct files to download are either falco-1.2.4.zip or falco-1.2.4.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by GitHub, as they do not contain all files necessary for compilation.**\r\n\r\n## What's Changed\r\n* Changing adapter matching so that self-overlapping patterns are only matched once per read by @andrewdavidsmith in https://github.com/smithlabcode/falco/pull/71\r\n* Fixing bug in adapter identification for BAM format by @andrewdavidsmith in https://github.com/smithlabcode/falco/pull/72\r\n\r\n**Full Changelog**: https://github.com/smithlabcode/falco/compare/v1.2.3...v1.2.4",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.2.4",
        "name": "v1.2.4 - 9/25/2024",
        "release_id": 176933196,
        "tag": "v1.2.4",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/176933196",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/176933196",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewdavidsmith",
          "type": "User"
        },
        "date_created": "2024-08-10T00:51:30Z",
        "date_published": "2024-08-11T21:35:41Z",
        "description": "**The correct files to download are either falco-1.2.3.zip or falco-1.2.3.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by GitHub, as they do not contain all files necessary for compilation.**\r\n\r\n## What's Changed\r\n* Fixed a bug that caused access past ends of adapters in some situations\r\n* Removed progress bar for BAM input because we can't be sure it's accurate\r\n* Fixed a bug involving wrong strands for reads in BAM files (issue #59)\r\n* Fixed a bug that attempted to build for BAM support even when HTSLib was not available\r\n* Updated adapter and contaminant files from FastQC v0.12.0 (issue #64)\r\n",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.2.3",
        "name": "v1.2.3 - 8/11/2024 ",
        "release_id": 169600495,
        "tag": "v1.2.3",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/169600495",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/169600495",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewdavidsmith",
          "type": "User"
        },
        "date_created": "2024-03-15T18:12:54Z",
        "date_published": "2024-03-15T18:43:35Z",
        "description": "**The correct files to download are either falco-1.2.2.zip or falco-1.2.2.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by GitHub, as they do not contain all files necessary for compilation.**\r\n\r\n## What's Changed\r\n* Fix error in parsing gzip file by @y9c in https://github.com/smithlabcode/falco/pull/48\r\n* Added direct support for reading BAM files to improve efficiency in some situations by @masarunakajima in https://github.com/smithlabcode/falco/pull/53\r\n\r\n## New Contributors\r\n* @y9c made their first contribution in https://github.com/smithlabcode/falco/pull/48\r\n* @masarunakajima made their first contribution in https://github.com/smithlabcode/falco/pull/53\r\n\r\n**Full Changelog**: https://github.com/smithlabcode/falco/compare/v1.2.1...v1.2.2",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.2.2",
        "name": "v1.2.2 - 3/15/2024",
        "release_id": 146821627,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/146821627",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/146821627",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2022-09-15T20:59:51Z",
        "date_published": "2022-09-15T21:07:20Z",
        "description": "**The correct files to download are either falco-1.2.1.zip or falco-1.2.1.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nThis is a quality-of-life release that fixes two serious bugs in 1.2.0\r\n\r\nbug 1 (from issue #40) : falco stalls if the default configuration files are not used (e.g. when using conda)\r\nbug 2: the file format type was not being recognized properly when using multiple inputs of different file types.\r\n\r\n",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.2.1",
        "name": "v1.2.1 - 9/15/2022",
        "release_id": 77338408,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/77338408",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/77338408",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2022-09-11T15:43:22Z",
        "date_published": "2022-09-11T15:51:56Z",
        "description": "**The correct files to download are either falco-1.2.0.zip or falco-2.1.0.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nNew in v1.2.0:\r\n - Custom file names for summary, data and HTML reports can be provided by users\r\n - More detailed documentation of parameters. Much of it was directly copied from FastQC v0.11.9, with flags that are not yet implemented being specifically stated as such\r\n\r\nBugfixes:\r\n#39 : We fixed a bug where reads of length >1M were crashing falco. The program now allows reads of about 64M bases, but note that, since falco collects data for every read position, memory will scale accordingly. Plan the computing resources ahead!\r\n\r\nOther changes:\r\n- The Conda release now contains the default contaminants, adapters and limit files under the `opt/falco-1.2.0/Configuration` directory when installing through it, consistently with FastQC.",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.2.0",
        "name": "v1.2.0 - 9/11/2022",
        "release_id": 76834135,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/76834135",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/76834135",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "andrewdavidsmith",
          "type": "User"
        },
        "date_created": "2022-09-03T01:56:56Z",
        "date_published": "2022-09-03T02:12:44Z",
        "description": "**The correct files to download are either falco-1.1.0.zip or falco-1.1.0.tar.gz**\r\n\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nNew in v1.1.0:\r\n - Subsampling reads to improve speed for large files\r\n\r\nBugfixes:\r\n#37 : adapter plot now shows range corresponding to max read length\r\n#36 : support for multiple fastq files in a directory\r\n#23 : html report for k-mers had a bug that is fixed\r\n\r\nOther changes:\r\n- modified code so falco can build with older compilers still common on some systems\r\n- fixing a bug where the output directory was being duplicated if file is within a directory\r\n- fixing a bug where quiet falco still displayed full progress bar\r\n- less frequent updates to progress bar make the code faster\r\n\r\nThe added functionality is the \"subsample\" option, which uses every k-th read. For large files, this will give the same results (converging at the usual rate), but is faster. Thanks to @y9c for the suggestion (Issue #35).",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.1.0",
        "name": "v1.1.0 - 09/02/2022",
        "release_id": 76191283,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/76191283",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/76191283",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2022-05-24T21:43:16Z",
        "date_published": "2022-05-24T22:23:37Z",
        "description": "**The correct files to download are either falco-1.0.0.zip or falco-1.0.0.tar.gz**\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nNew features in 1.0.0:\r\n - Progress bar for FASTQ, gzipped FASTQ and SAM inputs. \r\n - Falco now runs in less than 100 MB for SAM input\r\n\r\nBugfixes\r\n#18 : falco now automatically identifies quality encoding with an identical approach to FastQC\r\n#20 : falco now recognizes filenames independent of lower/uppercase\r\n#23 : falco can now handle adapters of varying sizes\r\n#25 : consistency with FastQC by rounding per base sequence quality distribution to double\r\n#24 : falco can now handle different types of newline\r\n#26 : falco no longer crashes if a read is empty or too short\r\n#6 and #33 : Major fixes in BAM and SAM input processing\r\n\r\nMajor thanks to @Shelestova-Anastasia for bringing up the problem and contributing to the fixes for #23 , #24 , #25 and #26 !!",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v1.0.0",
        "name": "v1.0.0 - 05/24/2022",
        "release_id": 67744760,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/67744760",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/67744760",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2021-09-09T23:10:45Z",
        "date_published": "2021-09-09T23:18:50Z",
        "description": "**The correct files to download are either `falco-0.3.0.zip` or `falco-0.3.0.tar.gz`**\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nThis release adds new functionality to `falco` and addresses several bugs reported in the issues section, listed below\r\n\r\n#14 : When using the `--nano` flag, the basic statistics file will display \"Oxford Nanopore\" instead of Illumina. Analysis is still done for Illumina sequences. We need a fast5 parser in C++ (or write one from scratch) to allow fast5 support, which is not yet available\r\n\r\n#15 : The k-mer content module was implemented, but is still missing p-value calculations. For now it approximates FastQC behavior, and in the next release it will be identical. We also show 10 k-mers instead of 6 in FastQC since we can erase some of them through plotly to not make the plot so dense\r\n\r\n#16 : Fixed a bug where, if the adapters file was not provided (which is the case in the Conda release), adapters were not being counted.\r\n\r\n#17 : Fixed several bugs in the overrepresented sequence \"hits\" comparison with the contaminant list, including allowing partial overlap between sequence and contaminant.",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.3.0",
        "name": "v0.3.0 - 9/9/2021",
        "release_id": 49315421,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/49315421",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/49315421",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2021-01-09T02:34:16Z",
        "date_published": "2021-01-09T02:39:26Z",
        "description": "**The correct files to download are either falco-0.2.4.zip or falco-0.2.4.tar.gz**\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nThis release resolves the following issues:\r\n - Memory usage for uncompressed FASTQ files has been drastically reduced by replacing memory mapping with standard C IO. versions <= 0.2.3 use most of the available memory in the system, whereas this version only uses about 92 MB for short reads and under 400 MB for long reads\r\n - Base groupping has been implemented for per base sequence content and per sequence N content modules, which also drastically reduced the output size of the HTML file and the text report, especially in long-read files. We opted to leave sequence length distribution without base groupping. \r\n - Fixed a bug in adapter content where certian long-read datasets were outputting nonsensical values. ",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.2.4",
        "name": "v0.2.4 - 1/8/2021",
        "release_id": 36169941,
        "tag": "v0.2.4",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/36169941",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/36169941",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2020-12-22T19:13:57Z",
        "date_published": "2020-12-22T19:26:38Z",
        "description": "**The correct files to download are either falco-0.2.3.zip or falco-0.2.3.tar.gz**\r\n**Please do not download the \"Source code\" files automatically generated by github, as they do not contain all files necessary for compilation**\r\n\r\nThis release resolves the following issues:\r\n - HTML reports were fixed in cases where certain positions in the tile x position matrix did not contain any values. Their z-scores are defaulted to zero\r\n - When multiple files are given as input, previous versions were causing problems where only the last given dataset had output files generated. This release resolves this issue\r\n - Color heatmaps in HTML the \"per tile sequence quality\" are now more consistent with FastQC, where red and blue shading only depend on the absolute z-score value, and not on the z-score value distribution within the dataset. This makes the meaning of \"red\" or \"blue\" clearer, and consistent with whether the file passes or fails the module assessment. ",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.2.3",
        "name": "v0.2.3 - 2020/12/22",
        "release_id": 35629650,
        "tag": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/35629650",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/35629650",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2020-09-14T02:11:08Z",
        "date_published": "2020-09-14T02:32:27Z",
        "description": "**The correct files to download are either v0.2.2.zip or v0.2.2.tar.gz**\r\n**Please do not download the \"Source code\" files automatically generated by github!**\r\n\r\nThis release addresses some issues found on verision 0.2.1 that were reported by users:\r\n\r\nIssues #4 and #7 : The format of `fastqc_data.txt` was corrected to be parsable by MultiQC version 1.9\r\n\r\nIssue #8 : Falco now displays a hot-cold heatmap with absolute color values that do not depend on the z-score distribution of the samples: tile-position qualities will be shown as light blue when quality is around 0, dark blue when quality approaches +10, and red when it approaches -10. This allows the heatmap to be usable in highlighting the specific tiles that failed the QC test (i.e. the ones closest to the red color)\r\n\r\nIssue #9 : A bug was fixed where falco would crash if a larger read was shown later in a dataset with the same tile value as a previous shorter read.\r\n\r\nThis release will soon be added to bioconda. ",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.2.2",
        "name": "v0.2.2 -2020/09/13",
        "release_id": 31227617,
        "tag": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/31227617",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/31227617",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2019-12-13T02:30:43Z",
        "date_published": "2019-12-13T02:35:43Z",
        "description": "This release gets rid of the `template.html` file in the Configuration directory. An html template is no longer required for the program to run. Major changes in the source code also make it more readable. All \"magic\" constants used throughout the program are centralized in the `Constants` namespace in the `FalcoConfig.hpp` file. ",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.2.1",
        "name": "v0.2.1 - 2019/12/12",
        "release_id": 22198291,
        "tag": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/22198291",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/22198291",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2019-11-27T01:26:17Z",
        "date_published": "2019-11-27T01:45:43Z",
        "description": "Changes in version 0.2:\r\n - Fixed several problems in per tile sequence quality. Visualization in the html report also shows the y axis in heatmap as categorical instead of numeric.\r\n - Fixed bugs in adapter content. We now give an exact percentage of adapters in each position, and output is consistent with FastQC.\r\n - Base groups in per base sequence quality are more consistent with FastQC. We now use linear base groups instead of exponential base groups from previous version.\r\n - Added a `-B` or `--bisulfite` flag, not included in fastqc, to test for Whole Genome Bisulfite Sequencing data. When the `-B` flag is raised, per base sequence content will only compare A with G and (A+T) with (G+C) as pass/warn/fail criteria. It will also display two extra columns in the text output with A+T and G+C percentages for each base position.\r\n - Added a `-v` or `--version` flag similar to FastQC, which simply prints the program version.",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.2",
        "name": "v0.2 - 2019/11/26",
        "release_id": 21786743,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/21786743",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/21786743",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2019-11-21T19:40:57Z",
        "date_published": "2019-11-21T19:49:45Z",
        "description": "Changelog:\r\n - Updated documentation, `-O3` flag is instructed to be default when running `./configure`\r\n - benchmark directory no longer added to the tarball",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.1.1",
        "name": "v0.1.1 - 2019/11/21",
        "release_id": 21666227,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/21666227",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/21666227",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "guilhermesena1",
          "type": "User"
        },
        "date_created": "2019-10-28T22:14:19Z",
        "date_published": "2019-10-28T18:41:19Z",
        "html_url": "https://github.com/smithlabcode/falco/releases/tag/v0.1",
        "name": "v0.1 - 2019/10/28",
        "release_id": 21032248,
        "tag": "v0.1",
        "tarball_url": "https://api.github.com/repos/smithlabcode/falco/tarball/v0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/smithlabcode/falco/releases/21032248",
        "value": "https://api.github.com/repos/smithlabcode/falco/releases/21032248",
        "zipball_url": "https://api.github.com/repos/smithlabcode/falco/zipball/v0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Required C++ dependencies",
        "parent_header": [
          "Installing falco",
          "Installing from a cloned repository"
        ],
        "type": "Text_excerpt",
        "value": "[zlib](https://zlib.net) is required to read gzip compressed FASTQ\nfiles. It is usually installed by default in most UNIX computers and\nis part of the htslib setup, but it can also be installed with\nstandard package managers like apt, brew or conda.\n\nOn Ubuntu, zlib C++ libraries can be installed with `apt`:\n```\n$ sudo apt install zlib1g zlib1g-dev\n```\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional C++ dependencies",
        "parent_header": [
          "Installing falco",
          "Installing from a cloned repository"
        ],
        "type": "Text_excerpt",
        "value": "[htslib](https://github.com/samtools/htslib) is required to process\nbam files. If not provided, bam files will be treated as unrecognized\nfile formats.\n\nIf htslib is installed, falco can be compiled with it by simply replacing the\nconfigure command above with the `--enable-hts` flag:\n\n```\n$ ./configure CXXFLAGS=\"-O3 -Wall\" --enable-hts\n```\n\nIf `falco` was cloned from the repository, run the following commands\nto allow BAM file reading:\n\n```\n$ make HAVE_HTSLIB=1 all\n$ make HAVE_HTSLIB=1 install\n```\n\nIf successfully compiled, `falco` can be used in BAM files the same way as it is\nused with fastq and sam files.\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running falco",
        "type": "Text_excerpt",
        "value": "=============\n\nRun falco in with the following command, where the `example.fq` file\nprovided can be replaced with the path to any FASTQ file you want to run\n`falco`\n```\n$ falco example.fq\n```\n\nThis will generate three files in the same directory as the input fastq file:\n\n* `fastqc_data.txt` is a text file with a summary of the QC metrics\n\n* `fastqc_report.html` is the visual HTML report showing plots of the\n   QC metrics summarized in the text summary.\n\n* `summary.txt`: A tab-separated file describing whether the\n  pass/warn/fail result for each module. If multiple files are\n  provided, only one summary file is generated, with one of the\n  columns being the file name associated to each module result.\n\nThe full list of arguments and options can be seen by running `falco`\nwithout any arguments, as well as `falco -?` or `falco --help`. This\nwill print the following list:\n\n```\nUsage: falco [OPTIONS] <seqfile1> <seqfile2> ...\nOptions:\n  -h, --help               Print this help file and exit  \n  -v, --version            Print the version of the program and exit  \n  -o, --outdir             Create all output files in the specified \n                           output directory. FALCO-SPECIFIC: If the \n                           directory does not exists, the program will \n                           create it. If this option is not set then \n                           the output file for each sequence file is \n                           created in the same directory as the \n                           sequence file which was processed.  \n      --casava             [IGNORED BY FALCO] Files come from raw \n                           casava output. Files in the same sample \n                           group (differing only by the group number) \n                           will be analysed as a set rather than \n                           individually. Sequences with the filter flag \n                           set in the header will be excluded from the \n                           analysis. Files must have the same names \n                           given to them by casava (including being \n                           gzipped and ending with .gz) otherwise they \n                           won't be grouped together correctly.  \n      --nano               [IGNORED BY FALCO] Files come from nanopore \n                           sequences and are in fast5 format. In this \n                           mode you can pass in directories to process \n                           and the program will take in all fast5 files \n                           within those directories and produce a \n                           single output file from the sequences found \n                           in all files.  \n      --nofilter           [IGNORED BY FALCO] If running with --casava \n                           then don't remove read flagged by casava as \n                           poor quality when performing the QC \n                           analysis.  \n      --extract            [ALWAYS ON IN FALCO] If set then the zipped \n                           output file will be uncompressed in the same \n                           directory after it has been created. By \n                           default this option will be set if fastqc is \n                           run in non-interactive mode.  \n  -j, --java               [IGNORED BY FALCO] Provides the full path to \n                           the java binary you want to use to launch \n                           fastqc. If not supplied then java is assumed \n                           to be in your path.  \n      --noextract          [IGNORED BY FALCO] Do not uncompress the \n                           output file after creating it. You should \n                           set this option if you do not wish to \n                           uncompress the output when running in \n                           non-interactive mode.  \n      --nogroup            Disable grouping of bases for reads >50bp. \n                           All reports will show data for every base in \n                           the read. WARNING: When using this option, \n                           your plots may end up a ridiculous size. You \n                           have been warned!  \n      --min_length         [NOT YET IMPLEMENTED IN FALCO] Sets an \n                           artificial lower limit on the length of the \n                           sequence to be shown in the report. As long \n                           as you set this to a value greater or equal \n                           to your longest read length then this will \n                           be the sequence length used to create your \n                           read groups. This can be useful for making \n                           directly comaparable statistics from \n                           datasets with somewhat variable read \n                           lengths.  \n  -f, --format             Bypasses the normal sequence file format \n                           detection and forces the program to use the \n                           specified format. Valid formats are bam, sam, \n                           bam_mapped, sam_mapped, fastq, fq, fastq.gz \n                           or fq.gz.  \n  -t, --threads            [NOT YET IMPLEMENTED IN FALCO] Specifies the \n                           number of files which can be processed \n                           simultaneously. Each thread will be \n                           allocated 250MB of memory so you shouldn't \n                           run more threads than your available memory \n                           will cope with, and not more than 6 threads \n                           on a 32 bit machine [1] \n  -c, --contaminants       Specifies a non-default file which contains \n                           the list of contaminants to screen \n                           overrepresented sequences against. The file \n                           must contain sets of named contaminants in \n                           the form name[tab]sequence. Lines prefixed \n                           with a hash will be ignored. Default: \n                           Configuration/contaminant_list.txt \n  -a, --adapters           Specifies a non-default file which contains \n                           the list of adapter sequences which will be \n                           explicity searched against the library. The \n                           file must contain sets of named adapters in \n                           the form name[tab]sequence. Lines prefixed \n                           with a hash will be ignored. Default: \n                           Configuration/adapter_list.txt \n  -l, --limits             Specifies a non-default file which contains \n                           a set of criteria which will be used to \n                           determine the warn/error limits for the \n                           various modules. This file can also be used \n                           to selectively remove some modules from the \n                           output all together. The format needs to \n                           mirror the default limits.txt file found in \n                           the Configuration folder. Default: \n                           Configuration/limits.txt \n  -k, --kmers              [IGNORED BY FALCO AND ALWAYS SET TO 7] \n                           Specifies the length of Kmer to look for in \n                           the Kmer content module. Specified Kmer \n                           length must be between 2 and 10. Default \n                           length is 7 if not specified.  \n  -q, --quiet              Supress all progress messages on stdout and \n                           only report errors.  \n  -d, --dir                [IGNORED: FALCO DOES NOT CREATE TMP FILES] \n                           Selects a directory to be used for temporary \n                           files written when generating report images. \n                           Defaults to system temp directory if not \n                           specified.  \n  -s, -subsample           [Falco only] makes falco faster (but \n                           possibly less accurate) by only processing \n                           reads that are multiple of this value (using \n                           0-based indexing to number reads). [1] \n  -b, -bisulfite           [Falco only] reads are whole genome \n                           bisulfite sequencing, and more Ts and fewer \n                           Cs are therefore expected and will be \n                           accounted for in base content.  \n  -r, -reverse-complement  [Falco only] The input is a \n                           reverse-complement. All modules will be \n                           tested by swapping A/T and C/G  \n      -skip-data           [Falco only] Do not create FastQC data text \n                           file.  \n      -skip-report         [Falco only] Do not create FastQC report \n                           HTML file.  \n      -skip-summary        [Falco only] Do not create FastQC summary \n                           file  \n  -D, -data-filename       [Falco only] Specify filename for FastQC \n                           data output (TXT). If not specified, it will \n                           be called fastq_data.txt in either the input \n                           file's directory or the one specified in the \n                           --output flag. Only available when running \n                           falco with a single input.  \n  -R, -report-filename     [Falco only] Specify filename for FastQC \n                           report output (HTML). If not specified, it \n                           will be called fastq_report.html in either \n                           the input file's directory or the one \n                           specified in the --output flag. Only \n                           available when running falco with a single \n                           input.  \n  -S, -summary-filename    [Falco only] Specify filename for the short \n                           summary output (TXT). If not specified, it \n                           will be called fastq_report.html in either \n                           the input file's directory or the one \n                           specified in the --output flag. Only \n                           available when running falco with a single \n                           input.  \n  -K, -add-call            [Falco only] add the command call call to \n                           FastQC data output and FastQC report HTML \n                           (this may break the parse of fastqc_data.txt \n                           in programs that are very strict about the \n                           FastQC output format).  \n\nHelp options:\n  -?, -help                print this help message  \n      -about               print about message  \n\nPROGRAM: falco\nA high throughput sequence QC analysis tool\n```\n"
      },
      "source": "https://raw.githubusercontent.com/smithlabcode/falco/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 18:47:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 96
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}