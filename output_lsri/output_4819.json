{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCUT-CCNL/PipeMEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-02-02T10:32:36Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-21T22:17:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool that run BWA-MEM in Spark"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8416009078493775,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "After setting ```pipemem.env```, you can run PreProcess.py with:\nBASH2*\nPlease change the fastqfile to where you saved these input files. \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9554592294610659,
      "result": {
        "original_header": "Main Computation",
        "type": "Text_excerpt",
        "value": "Please make sure that the ```execute_pair_end_mem.sh.sample```(for paired end) or BASH5*(for single end) file is putted in a location that every nodes are able to access, and change BASH2* or BASH3* accordingly. \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download, Compile and comfigure",
        "type": "Text_excerpt",
        "value": "git clone https://github.com/neozhang307/pipeMEM.git\n\n1. Install Anaconda and load requirements.txt in the root directory.\n\nRun\n```bash graddlew build ```\nto build file \n\n2. Install ```bwa``` and save it in a directory that can be access by all nodes.\n\n3. Use ```bwa``` to generate indexes and save them in a directory that can be access by all nodes.\n\n4. Move ```execute_pair_end_mem.sh.sample```(for paired end) or ```execute_single_end_mem.sh.sample ```(for single end) to the the directory that can be access by all nodes. And change the ```bwa``` program location and indexes file location inside.\n\n5. Change the ```pipemem.env``` file according to the system environment. \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCUT-CCNL/PipeMEM/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCUT-CCNL/PipeMEM/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCUT-CCNL/PipeMEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PipeMEM"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/pre.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/pres.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.8241270192309884,
      "result": {
        "original_header": "PipeMEM",
        "type": "Text_excerpt",
        "value": "A tool that run BWA-MEM in Spark\n \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9997565573544367,
      "result": {
        "original_header": "Pre-Request",
        "type": "Text_excerpt",
        "value": "```\nAnaconda 2018.12\nlibffi 3.2.1\nlibgcc-ng 8.2.0\nlibgcrypt 1.8.4\nlibgpg-error 1.32\nlibgsasl 1.8.0\nlibhdfs3 2.3.0\nlibntlm 1.4\nlibprotobuf 3.6.0\nlibssh2 1.8.0\nlibstdcxx-ng 8.2.0\nlibuuid 1.0.3\nlibxml2 2.9.9\nncurses 6.1\nopenssl 1.1.1a\npip 18.1\npython 2.7.15\nreadline 7.0\nsetuptools 40.6.3\nsqlite 3.26.0\ntk 8.6.8\nwheel 0.32.3\nxz 5.2.4\nzlib 1.2.11\nbwa\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9469432154471059,
      "result": {
        "original_header": "Preprocess",
        "type": "Text_excerpt",
        "value": "After setting ```pipemem.env```, you can run PreProcess.py with:\nBASH2*\nPlease change the fastqfile to where you saved these input files. \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9495717827937981,
      "result": {
        "original_header": "Main Computation",
        "type": "Text_excerpt",
        "value": "You can either run \n```\npython GenerateSparkScript.py\n```\nTo generate script based on the BASH2* file or edit the BASH3* file directly.  \nRun\n```bash runspark.sh```\nto start the main computation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8651624030313125,
      "result": {
        "original_header": "Main Computation",
        "type": "Text_excerpt",
        "value": "You can either run \n```\npython GenerateSparkScript.py\n```\nTo generate script based on the BASH2* file or edit the BASH3* file directly.  \nRun\n```bash runspark.sh```\nto start the main computation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCUT-CCNL/PipeMEM/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PipeMEM"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SCUT-CCNL"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 4099,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 2243,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 157,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 17:47:26",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "create a cluster",
        "parent_header": [
          "Use AWS with pipeMEM"
        ],
        "type": "Text_excerpt",
        "value": "You can create a spark cluster in the following address\n\nhttps://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-spark-launch.html\n\nFor software configuration, choose Spark\n\nFor instance setting, we recommend m5.xlarge\n\nYou can use default setting for other part. "
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use Elastic Storage",
        "parent_header": [
          "Use AWS with pipeMEM"
        ],
        "type": "Text_excerpt",
        "value": "You can create an elastic storage in the following address.\n\nhttps://aws.amazon.com/efs/\n\nMake sure that the EFS is in the same security group as cluster nodes.\n\nYou can mount EFS to every node and access it, following the instructions of Amazon. \n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Create user file in HDFS",
        "parent_header": [
          "Use AWS with pipeMEM"
        ],
        "type": "Text_excerpt",
        "value": "There is no user directory by default. So please create it with the following command:\n```\nsudo -u hdfs hadoop fs -mkdir /user/ec2-user\nsudo -u hdfs hadoop fs -chown ec2-user /user/ec2-user\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SCUT-CCNL/PipeMEM/master/README.md",
      "technique": "header_analysis"
    }
  ]
}