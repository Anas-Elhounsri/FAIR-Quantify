{
  "application_domain": [
    {
      "confidence": 13.48,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ewodac/PortaDrop"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-07-20T19:33:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-07-15T09:33:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.906865392433057,
      "result": {
        "original_header": "PortaDrop",
        "type": "Text_excerpt",
        "value": "PortaDrop is a portable digital microfluidic system. \n \n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ewodac/PortaDrop/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ewodac/PortaDrop/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ewodac/PortaDrop"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PortaDrop"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Raspberry Pi OS (from Windows)",
        "parent_header": [
          "PortaDrop"
        ],
        "type": "Text_excerpt",
        "value": "- Install [Win32DiskImager](https://sourceforge.net/projects/win32diskimager/)\n- Download [Raspberry Pi OS](https://www.raspberrypi.org/downloads/raspberry-pi-os/)\n- Write Raspberry Pi OS Image to SD Card using Win32DiskImager\n- Plugin SD Card into the Raspberry Pi and launch Raspberry Pi\n- Finish Raspberry Pi OS installation\n\nIf you wish to control your Raspberry Pi from remote, open the terminal and install the necassary package. \n\n\tsudo apt-get update\n\tsudo apt-get install xrdp\n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2) Install GNU Image Manipulation Program Toolkit, GTK minus minus and Glade",
        "parent_header": [
          "PortaDrop",
          "Installation-Guide (on Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "gtkmm is a library which is used to build graphical user interfaces (GUI). glade can be used to design the interface.\n\n  \tsudo apt-get update\n\tsudo apt-get install libgtkmm-3.0-dev\n\tsudo apt-get install glade\n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3) Install \"Seabreeze\" for Ocean Optics HR2000+ (takes a few minutes)",
        "parent_header": [
          "PortaDrop",
          "Installation-Guide (on Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "Download and install \"Seabreeze\" library\n\n\tsudo apt-get install unzip libusb-dev\n\tcd ~\n\twget https://downloads.sourceforge.net/project/seabreeze/SeaBreeze/source/seabreeze-3.0.11.zip\n\tunzip seabreeze-3.0.11.zip -d ./seabreeze/\n\tcd seabreeze/seabreeze-3.0.11/SeaBreeze/\n\nUncomment line from common.mk -> Add \"#\" in front of line containing \"-Werror \\\" and save\n\t\n\tnano common.mk\n\nContinue installation\t\n\t\n\tmake\n\tsudo cp ./lib/libseabreeze.so /usr/local/lib/libseabreeze.so\n\tsudo cp -r ./include/api /usr/local/include/api\n\tsudo cp -r ./include/common /usr/local/include/common\n\tsudo cp -r ./include/native /usr/local/include/native\n\tsudo cp -r ./include/vendors /usr/local/include/vendors\n\tsudo ldconfig -v\n\tsudo cp ./os-support/linux/10-oceanoptics.rules /etc/udev/rules.d/10-oceanoptics.rules\n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4) Install NI GPIB (sudo ./configure might take long)",
        "parent_header": [
          "PortaDrop",
          "Installation-Guide (on Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "\tsudo apt-get install bc libncurses5-dev tk-dev build-essential texinfo texi2html libcwidget-dev libncurses5-dev libx11-dev binutils-dev bison flex libusb-1.0-0 libusb-dev libmpfr-dev libexpat1-dev tofrodos subversion autoconf automake libtool mercurial\n\tsudo wget https://raw.githubusercontent.com/notro/rpi-source/master/rpi-source -O /usr/bin/rpi-source && sudo chmod +x /usr/bin/rpi-source && /usr/bin/rpi-source -q --tag-update\n\tsudo rpi-source\n\tcd ~\n\tmkdir linux-gpib\n\tcd linux-gpib\n\twget https://sourceforge.net/projects/linux-gpib/files/linux-gpib%20for%203.x.x%20and%202.6.x%20kernels/4.2.0/linux-gpib-4.2.0.tar.gz/download -O linux-gpib.tar.gz\n\ttar -xvzf linux-gpib.tar.gz\n\tcd linux-gpib-4.2.0/\n\ttar -xvzf linux-gpib-kernel-4.2.0.tar.gz\n\ttar -xvzf linux-gpib-user-4.2.0.tar.gz\n\tcd ./linux-gpib-kernel-4.2.0/\n\tmkdir m4\n\tsudo ./bootstrap\n\tsudo ./configure\n\tsudo make\n\tsudo make install\n\tcd ../linux-gpib-user-4.2.0/\n\tsudo ./bootstrap\n\tsudo ./configure --sysconfdir=\"/etc\"\n\tsudo make\n\tsudo make install\n\tsudo addgroup gpib\n\tsudo usermod -aG gpib pi\n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "5) Install \"opencv\" (takes a few hours)",
        "parent_header": [
          "PortaDrop",
          "Installation-Guide (on Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "\tcd ~\n\tsudo apt-get update\n\tsudo apt-get install build-essential cmake unzip pkg-config libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libcanberra-gtk* libatlas-base-dev gfortran python3-dev\n\tgit clone https://github.com/Itseez/opencv.git && cd opencv && git checkout 3.4\n\tgit clone https://github.com/opencv/opencv_contrib.git && cd opencv && git checkout 3.4\n\tcd ~ && wget https://bootstrap.pypa.io/get-pip.py && sudo python3 get-pip.py\n\tcd ~/opencv && mkdir build && cd build\n\tcmake -D CMAKE_BUILD_TYPE=RELEASE \\ -D CMAKE_INSTALL_PREFIX=/usr/local \\ -D INSTALL_PYTHON_EXAMPLES=OFF \\ -D INSTALL_C_EXAMPLES=OFF \\ -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \\ -D ENABLE_PRECOMPILED_HEADERS=OFF \\ -D BUILD_EXAMPLES=OFF ..\n\nChange size of the swapfile to avoid issues during compilation. Change value to 2048 MB and remember the old value (normally 100MB) \n\n\tsudo nano /etc/dphys-swapfile\n\nSave file and restart the service\n\n\tsudo /etc/init.d/dphys-swapfile restart\n\nContinue installation (this step takes a few hours)\n\t\n\tcd ~/opencv/build\n\tmake -j4\n\tsudo make install && sudo ldconfig\n\nReset size of the swapfile (normally 100MB) \n\n\tsudo nano /etc/dphys-swapfile\n\nSave file and restart the service\n\n\tsudo /etc/init.d/dphys-swapfile restart\n\nLoad drivers\n\n\tsudo modprobe bcm2835-v4l2\n\tsudo sh -c 'echo bcm2835-v4l2 >> /etc/modules-load.d/modules.conf' \n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install PortaDrop Software (on Raspberry Pi)",
        "parent_header": [
          "PortaDrop",
          "Installation-Guide (on Raspberry Pi)"
        ],
        "type": "Text_excerpt",
        "value": "The installation of PortaDrop requires the previously described installation steps.\n\nChange size of the swapfile to avoid issues during compilation. Change value to 2048 MB and remember the old value (normally 100MB) \n\n\tsudo nano /etc/dphys-swapfile\n\nSave file and restart the service\n\n\tsudo /etc/init.d/dphys-swapfile restart\n\t\nContinue installation\t\n\n\tcd ~\n\tgit clone https://github.com/ewodac/PortaDrop.git\n\tcd PortaDrop\n\tmkdir BUILD\n\tcd BUILD\n\tcmake ../ -D CMAKE_INSTALL_PREFIX=~/portaDrop\n\tmake\n\tmake install\n\nReset size of the swapfile (normally 100MB) \n\n\tsudo nano /etc/dphys-swapfile\n\nSave file and restart the service\n\n\tsudo /etc/init.d/dphys-swapfile restart\n\nStarting the appication can be done via terminal by\n\n\tcd ~/portaDrop/bin\n\t./ewodInterface\n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9890059408962916,
      "result": {
        "original_header": "1) Activate communication protocols",
        "type": "Text_excerpt",
        "value": "Activate CSI, I2C and UART using raspi-config \n\tsudo raspi-config\n \n"
      },
      "source": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ewodac/PortaDrop/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PortaDrop"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ewodac"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 591628,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 2568,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2552,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 595,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ewodac/PortaDrop/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 16:17:50",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ]
}