{
  "application_domain": [
    {
      "confidence": 0.9595078016975981,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DanielPreciado-Marquez/Mainzelhandler"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-12T20:02:16Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-02T19:47:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9950012942757674,
      "result": {
        "original_header": "Mainzelhandler",
        "type": "Text_excerpt",
        "value": "Mainzelhandler is a library for an easy integration of the [Mainzelliste](https://www.unimedizin-mainz.de/imbei/informatik/ag-verbundforschung/mainzelliste.html) into a web application.\n \n"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/DanielPreciado-Marquez/MainzelHandler/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DanielPreciado-Marquez/Mainzelhandler/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DanielPreciado-Marquez/Mainzelhandler"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mainzelhandler"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/db/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/db/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/app/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/mainzelhandler-demonstrator/app/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/DanielPreciado-Marquez/Mainzelhandler/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2020 Daniel Preciado-Marquez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mainzelhandler"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "DanielPreciado-Marquez"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 612771,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 58192,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 8301,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 7314,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 426,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the Demonstrator",
        "parent_header": [
          "Mainzelhandler",
          "Demonstrator"
        ],
        "type": "Text_excerpt",
        "value": "Currently, there are two ways to run the Demonstrator.\nBoth methods require the following parameters to be defined in the environment.\n\nParemeter | Desription\n------------- | -------------\nspring.datasource.url | URL of the database\nmainzelhandler.mainzelliste.url | URL of the Mainzelliste\nmainzelhandler.mainzelliste.api.key | API key of the Mainzelliste\nmainzelhandler.url | URL of the Demonstrator, used for the callback request from the Mainzelliste\n"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IDE",
        "parent_header": [
          "Mainzelhandler",
          "Demonstrator",
          "Running the Demonstrator"
        ],
        "type": "Text_excerpt",
        "value": "You can run the application directly in your IDE. You need a running instance of the Mainzelliste and a database. The SQL file for the database can be found [here](/mainzelhandler-demonstrator/db/demonstrator.sql).\nYou can define the mentioned parameters for example in the application.yml.\n"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "Mainzelhandler",
          "Demonstrator",
          "Running the Demonstrator"
        ],
        "type": "Text_excerpt",
        "value": "You can also run the Demonstrator via docker-compose. A docker-compose file containing the web application and the database can be found [here](/mainzelhandler-demonstrator/docker-compose.yml). There is also a completely configured docker-compose file containing the Demonstrator and the Mainzelliste [here](/mainzelhandler-demonstrator/docker-compose-example.yml).\n"
      },
      "source": "https://raw.githubusercontent.com/DanielPreciado-Marquez/MainzelHandler/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 06:43:34",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ]
}