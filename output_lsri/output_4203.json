{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MicroPhen/pyFOOMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-11-02T08:46:47Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-20T04:51:59Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Framework for Object Oriented Modelling of Bioprocesses"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9996702705517997,
      "result": {
        "original_header": "pyFOOMB",
        "type": "Text_excerpt",
        "value": "\r\n__*Py*thon *F*ramework for *O*bject *O*riented *M*odelling of *B*ioprocesses__\r\n\r\nIntented application is the acessible modelling of simple to medium complex bioprocess models, by programmatic means. In contrast to 'full-blown' software suites, `pyFOOMB` can be used by scientists with little programming skills in the easy-access language Python.\r\n`pyFOOMB` comes with a MIT license, and anyone interested in using, understanding, or contributing to pyFOOMB is happily invited to do so.\r\n\r\n`pyFOOMB` relies on the `assimulo` package (<https://jmodelica.org/assimulo>), providing an interface to the SUNDIALS CVode integrator for systems of differential equations, as well as event handling routines. For optimization, i.e. model calibration from data, the `pygmo` package is used, which provides Python bindings for the `pagmo2` package implementing the Asynchronous Generalized Islands Model.\r\n\r\nTo faciliate rapid starting for new users, a continously growing collection of Jupyter notebooks is provided. These serve to demonstrate basic and advanced concepts and functionalities (also beyond the pure functions of the `pyFOOMB` package). Also, the examples can be used as building blocks for developing own bioprocess models and corresponding workflows. \r\n\r\nCheck also our open access [publication](https://onlinelibrary.wiley.com/doi/full/10.1002/elsc.202000088) at Engineering in Life Sciences introducing `pyFOOMB` with two more elaborated application examples that reproduce real-world data from literature.\r\n\r\nLiterature:\r\n\r\n* Andersson C, F\u00fchrer C, and Akesson J (2015). Assimulo: A unified framework for ODE solvers. _Math Comp Simul_ __116__:26-43\r\n* Biscani F, Izzo D (2020). A parallel global multiobjective framework for optimization: pagmo. _J Open Source Softw_ __5__:2338\r\n* Hindmarsh AC, _et al_ (2005). SUNDIALS: Suite of nonlinear and differential/algebraic equation solvers. _ACM Trans Math Softw_ __31__:363-396\r\n\r \n"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/MicroPhen/pyFOOMB/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example05_Sensitivities.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example05_Sensitivities.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example07_FedBatchModels.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example07_FedBatchModels.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example10_ParallelizedParameterEstimation_OptimizerComparison.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example10_ParallelizedParameterEstimation_OptimizerComparison.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example14_TrackingSpecificRatesDuringIntegration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example14_TrackingSpecificRatesDuringIntegration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example06_BioprocessModels.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example06_BioprocessModels.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example17_IrregularEventsForSamplingEtc.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example17_IrregularEventsForSamplingEtc.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example01_Modelling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example01_Modelling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example15_NonNegativeStates.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example15_NonNegativeStates.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example04_ParameterEstimation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example04_ParameterEstimation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example13_ParallelizedConstrainedParameterEstimation_MonteCarloSampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example13_ParallelizedConstrainedParameterEstimation_MonteCarloSampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example12_ParallelizedParameterEstimation_MonteCarloSampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example12_ParallelizedParameterEstimation_MonteCarloSampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example08_MeasurementDataFromFiles.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example08_MeasurementDataFromFiles.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example03_ObservationFunctions.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example03_ObservationFunctions.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example02_Events.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example02_Events.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example09_ParallelizedParameterEstimation_BasicUsage.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example09_ParallelizedParameterEstimation_BasicUsage.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example16_SpecificRatesFromMonteCarloSampling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example16_SpecificRatesFromMonteCarloSampling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example11_ParallelizedParameterEstimation_HyperparameterAdjustment.ipynb"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/examples/Example11_ParallelizedParameterEstimation_HyperparameterAdjustment.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MicroPhen/pyFOOMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyFOOMB"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/309308898"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Easy installation",
        "parent_header": [
          "pyFOOMB"
        ],
        "type": "Text_excerpt",
        "value": "\r\n1) Open a terminal / shell\r\n2) Optional: Create a new environment with `conda env create -n my-pyfoomb-env python=3.9` and activate it with `conda activate my-pyfoomb-env`\r\n3) Install `pyFOOMB` by executing `conda install -c conda-forge pyfoomb`\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Development installation",
        "parent_header": [
          "pyFOOMB"
        ],
        "type": "Text_excerpt",
        "value": "\r\n1) Download the code repository to your computer, this is done the best way using `git clone`: In a shell, navigate to the folder where you want the repository to be located.\r\n2) Open a terminal / shell and clone the repository\r\nvia `git clone https://github.com/MicroPhen/pyFOOMB.git`\r\n3) cd (*change directory*) into the newly cloned repository : `cd pyfoomb`\r\n4) Verify that you are in the repo folder, where the file `environment.yml` is found (`dir` for Windows, `ls` for Linux/Mac).\r\n5) Exceute `conda env create -f environment.yml`.\r\nThis will create a conda environment named `pyfoomb`, with the current version of the just cloned git repository.\r\n6) Don't forget to activate the newly created environment to install the `pyFOOMB` package in the next step\r\n7) To make sure, your environment will refer always the state of your git repo (i.e., after own code modifications or after pulling from remote), run `pip install -e ../pyfoomb`. \r\n"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pyFOOMB"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "MicroPhen"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 398184,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-02-18T12:08:48Z",
        "date_published": "2021-02-18T12:22:04Z",
        "description": "* Improved auto-detection of number of events \r\n* New example notebook 17 on implementation of irregular events\r\n* All example notebooks were re-run using the current `pyFOOMB` version",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.7",
        "name": "v2.17.7",
        "release_id": 38225281,
        "tag": "v2.17.7",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.7",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/38225281",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/38225281",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-01-27T13:23:35Z",
        "date_published": "2021-01-28T06:55:55Z",
        "description": "* Fixed using visualization methods `compare_estimates_many()` and `show_kinetic_data_many()` for caretakters when no replicate ids were explicitly given\r\n* Minor changes w.r.t. use of to be deprecated methods from other packages",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.6",
        "name": "v2.17.6",
        "release_id": 37010987,
        "tag": "v2.17.6",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.6",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/37010987",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/37010987",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-01-21T13:13:57Z",
        "date_published": "2021-01-21T13:16:55Z",
        "description": "* fix to use `agg` plotting backend only in tests",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.5",
        "name": "v2.17.5",
        "release_id": 36712410,
        "tag": "v2.17.5",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.5",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36712410",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36712410",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-01-21T10:46:00Z",
        "date_published": "2021-01-21T10:49:06Z",
        "description": "* Archipelago creation for `estimate_parallel()` method runs now in a parallelized fashion\r\n* Some improvements for the testing workflow",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.4",
        "name": "v2.17.4",
        "release_id": 36705401,
        "tag": "v2.17.4",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.4",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36705401",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36705401",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-01-19T15:02:03Z",
        "date_published": "2021-01-19T15:05:12Z",
        "description": "* adds instructions for installation orm conda-forge\r\n* revised package dependencies",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.3",
        "name": "v2.17.3",
        "release_id": 36604127,
        "tag": "v2.17.3",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.3",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36604127",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36604127",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2021-01-14T12:45:53Z",
        "date_published": "2021-01-14T12:51:28Z",
        "description": "* Method `show_kinetic_data_many()` can handle many versions of a time series data but with time vectors of different lengths\r\n* Improves getting joint time vector from different `TimeSeries` datatypes",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.2",
        "name": "v2.17.2",
        "release_id": 36386956,
        "tag": "v2.17.2",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.2",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36386956",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/36386956",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MicroPhen",
          "type": "User"
        },
        "date_created": "2020-11-09T11:23:39Z",
        "date_published": "2020-11-10T14:35:01Z",
        "html_url": "https://github.com/MicroPhen/pyFOOMB/releases/tag/v2.17.0",
        "name": "Release for publication",
        "release_id": 33723037,
        "tag": "v2.17.0",
        "tarball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/tarball/v2.17.0",
        "type": "Release",
        "url": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/33723037",
        "value": "https://api.github.com/repos/MicroPhen/pyFOOMB/releases/33723037",
        "zipball_url": "https://api.github.com/repos/MicroPhen/pyFOOMB/zipball/v2.17.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements (provided as environment.yml)",
        "parent_header": [
          "pyFOOMB"
        ],
        "type": "Text_excerpt",
        "value": "\r\n* python 3.7, 3.8 or 3.9\r\n* numpy\r\n* scipy\r\n* joblib\r\n* pandas\r\n* openpyxl\r\n* matplotlib(-base)\r\n* seaborn(-base)\r\n* psutil\r\n* assimulo (via conda-forge)\r\n* pygmo (via conda-forge)\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/MicroPhen/pyFOOMB/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 15:34:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ]
}