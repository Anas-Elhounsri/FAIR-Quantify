{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite",
        "type": "Text_excerpt",
        "value": "If you use CyAnno for your research. Please [cite](https://www.biorxiv.org/content/10.1101/2020.08.28.272559v1)\n\n```\nCyAnno: A semi-automated approach for cell type annotation of mass cytometry datasets\nAbhinav Kaushik, Diane Dunham, Ziyuan He, Monali Manohar, Manisha Desai, Kari C Nadeau, Sandra Andorf\n\nbioRxiv 2020.08.28.272559; doi: https://doi.org/10.1101/2020.08.28.272559 \n```\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abbioinfo/CyAnno"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-08-24T17:47:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-15T02:34:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9939299794431943,
      "result": {
        "original_header": "CyAnno (Version 1.0)",
        "type": "Text_excerpt",
        "value": "**About CyAnno**\nThe 'ungated' cells represent the undefined cells after all mutually exclusive series of \u2018gating\u2019 events are performed. These \u2018ungated\u2019 cells are present in a substantially large number within the pool of live cells generated by CyTOF. The primary reason that makes the identification of the \u2018ungated\u2019 class of cells difficult is their ambiguous marker expression profile that mimics the expression profile of gated cell types.\nCyAnno (*Cy*ToF *Anno*tator) is a novel semi-automated Machine Learning (ML) based computational framework that can effectively classify live cells to one of the gated cell types. The unique approach includes a systematic way for incorporating the marker expression level features of 'ungated' cells for building an optimized ML classification model. By accounting for the \u2018ungated\u2019 class of cells in the datasets, CyAnno can predict cell labels with high accuracy. \n**Applications**\n1. CyAnno is especially designed to analyze large scale immunological studies to predict cell labels of closely related (but mutually exclusive) cell types, after manually gating only a few samples.\n2. CyAnno is especially useful for large scale studies in which it can be used to label the cell type of every single live cell. To do that, CyAnno needs training data to first learn the features/properties of each cell type. For this training, CyAnno requires hand-gated cell types as FCS or CSV files from only a small number of samples. Once it learned the features of the provided cell types, it can predict which cells of an ungated FCS file (only gated for live cells) belong to what cell type.\n3. CyAnno can be used to train and predict even a single cell type, irrespective of its population size. This unique feature of CyAnno can be useful for a broad range of studies; e.g. when only one (or few) cell types are of clinical interest, especially those rare cell types that cannot be clustered with unsupervised clustering.\n4. CyAnno performed exceptionally good in the identification of rare cells or cell types which are very small in terms of population size.\n5. CyAnno can be used for cell label prediction of 'gated' cell type even in the datasets with more than 20 cell types, including closely related cell types.  \n**Other important considerations**\n1. CyAnno is _not_ an alterative of unsupervised clustering, rather it learns the features of manually gated and mutually exclusive cell types from few training samples and predicts the cell type(s) of live cells from unlabelled FCS file(s).\n2. To identify novel cell subet, we recommend \"unsupervised\" clustering. However, cell subset predicted by \"unsupervised\" clustering can be used as training dataset to predicted those clusters in unlabelled live cells. To do so, provide one or more CSV file for each cluster (predicted by unsupervised clustering; instead of handgated cell subset) as training dataset.\n3. Cell types must be mutually exclusive and both parent and child gated cell types can _not_ be used together for cell type prediction.\n4. For each training sample all the given cell types must be hand-gated and exported. \n5. The prediction accuracy of the algorithm may depend upon the choice of training set, and we recommend the inclusion of samples processed under different batches or stimulation for training the models, to keep the overall training unbiased for any given batch or stimulation. \n6. CyAnno prediction accuracy has not been tested on samples with strong stimulation that can lead to aberrant marker expression profile.\n7. Another factor that can affect the prediction accuracy includes the ambiguity in marker expression profile of different cell types.\n \n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8537417071754336,
      "result": {
        "original_header": "Step-by-Step instructions",
        "type": "Text_excerpt",
        "value": "The complete user guide with all the details for running the CyAnno along with the different parameters and input/output file formats are available in [wiki page](https://github.com/abbioinfo/CyAnno/wiki/CyAnno). \n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/abbioinfo/CyAnno/wiki/CyAnno"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/abbioinfo/CyAnno/wiki"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/abbioinfo/CyAnno/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abbioinfo/CyAnno/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "abbioinfo/CyAnno"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CyAnno (Version 1.0)"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and dependencies",
        "type": "Text_excerpt",
        "value": "CyAnno does not require any installation and can be executed with Command Line Interface (CLI). However, python (3.6 or above) is required with following packages:\n\n```\nSession information\n-------------\npackage             version\n-------------\nnumpy               1.18.1\npandas              0.25.3\nsklearn             0.20.1\nfaiss(CPU version)  1.5.1\nscipy               1.4.1\nxgboost             0.90\npickle\nfcsparser           0.2.0  \njoblib              0.13.0\n-------------\nPython 3.7.1 (default, Dec 14 2018, 13:28:58) [Clang 4.0.1 (tags/RELEASE_401/final)]\nDarwin-18.7.0-x86_64-i386-64bit\n4 logical CPU cores, i386\n-------------\n```\nFor convinience, we recommend [anaconda](https://anaconda.org/anaconda/python) for python and library installation, as it comes with most of the libraries preloaded. \n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/abbioinfo/CyAnno/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "CyAnno"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "abbioinfo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 113496,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and dependencies",
        "type": "Text_excerpt",
        "value": "CyAnno does not require any installation and can be executed with Command Line Interface (CLI). However, python (3.6 or above) is required with following packages:\n\n```\nSession information\n-------------\npackage             version\n-------------\nnumpy               1.18.1\npandas              0.25.3\nsklearn             0.20.1\nfaiss(CPU version)  1.5.1\nscipy               1.4.1\nxgboost             0.90\npickle\nfcsparser           0.2.0  \njoblib              0.13.0\n-------------\nPython 3.7.1 (default, Dec 14 2018, 13:28:58) [Clang 4.0.1 (tags/RELEASE_401/final)]\nDarwin-18.7.0-x86_64-i386-64bit\n4 logical CPU cores, i386\n-------------\n```\nFor convinience, we recommend [anaconda](https://anaconda.org/anaconda/python) for python and library installation, as it comes with most of the libraries preloaded. \n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Multi-center dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "An example utilizing the Multi-Center dataset can be executed via CLI (provided all prerequisite libraries are installed):\n```\ngit clone https://github.com/abbioinfo/CyAnno.git\ncd CyAnno\npython CyAnno.py\n```\nThe expected output of the above code is available [here](https://github.com/abbioinfo/ExpectedOutputs/tree/master/Multi_center_Expected_output).\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Samusik dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "The following project allows you to download and process the Samusik dataset (10 samples) from public domain in a format required by CyAnno. Total three training samples are used and cell label prediction is performed on the remaining seven samples.\n\n```\ngit clone https://github.com/abbioinfo/CyAnnoSamusik.git\ncd CyAnnoSamusik\nRscript Process.R\npython CyAnno.py\nRscript plotsamusik.R  PATH_TO_SAMUSIK_OUPUT_DIRECTORY\n```\nYou can find all the F1 score and accuracy table (as reported in the orignal article) as file **Method_x__Acc_stats.csv** within the output directory 'SAMUSIK_XXXXXXX' created by CyAnno. Details can be found [here](https://github.com/abbioinfo/CyAnnoSamusik)\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "POISED dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "The detailed step-by-step guide to process POISED dataset is available [here](https://github.com/abbioinfo/runPOISED). Briefly, the following set of codes allows you to download POISED dataset, execute CyAnno and compute F1 score of each sample and cell type, as published in the orignal article.\n\n```\npip install gdown ## or conda install -c conda-forge gdown\ngit clone https://github.com/abbioinfo/runPOISED.git\ncd runPOISED\npython Download.py\npython CyAnno.py\nRscript plot.py [PATH TO POISED PROJECT DIRECTORY]\n\n```\n\nFor details please follow step-by-step instruction [here](https://github.com/abbioinfo/runPOISED). \n\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-06 07:27:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "All the required parameters and arguments, including path to the input files can be specified together in 'CyAnno.py' file using any text editor or CLI based editor like nano or vim. Finally, CyAnno can be executed as:\n\n```\npython CyAnno.py\n```\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Multi-center dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "An example utilizing the Multi-Center dataset can be executed via CLI (provided all prerequisite libraries are installed):\n```\ngit clone https://github.com/abbioinfo/CyAnno.git\ncd CyAnno\npython CyAnno.py\n```\nThe expected output of the above code is available [here](https://github.com/abbioinfo/ExpectedOutputs/tree/master/Multi_center_Expected_output).\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Samusik dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "The following project allows you to download and process the Samusik dataset (10 samples) from public domain in a format required by CyAnno. Total three training samples are used and cell label prediction is performed on the remaining seven samples.\n\n```\ngit clone https://github.com/abbioinfo/CyAnnoSamusik.git\ncd CyAnnoSamusik\nRscript Process.R\npython CyAnno.py\nRscript plotsamusik.R  PATH_TO_SAMUSIK_OUPUT_DIRECTORY\n```\nYou can find all the F1 score and accuracy table (as reported in the orignal article) as file **Method_x__Acc_stats.csv** within the output directory 'SAMUSIK_XXXXXXX' created by CyAnno. Details can be found [here](https://github.com/abbioinfo/CyAnnoSamusik)\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "POISED dataset",
        "parent_header": [
          "Running example"
        ],
        "type": "Text_excerpt",
        "value": "The detailed step-by-step guide to process POISED dataset is available [here](https://github.com/abbioinfo/runPOISED). Briefly, the following set of codes allows you to download POISED dataset, execute CyAnno and compute F1 score of each sample and cell type, as published in the orignal article.\n\n```\npip install gdown ## or conda install -c conda-forge gdown\ngit clone https://github.com/abbioinfo/runPOISED.git\ncd runPOISED\npython Download.py\npython CyAnno.py\nRscript plot.py [PATH TO POISED PROJECT DIRECTORY]\n\n```\n\nFor details please follow step-by-step instruction [here](https://github.com/abbioinfo/runPOISED). \n\n"
      },
      "source": "https://raw.githubusercontent.com/abbioinfo/CyAnno/master/README.md",
      "technique": "header_analysis"
    }
  ]
}