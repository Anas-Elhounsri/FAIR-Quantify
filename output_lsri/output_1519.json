{
  "application_domain": [
    {
      "confidence": 8.51,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fpy94/DBT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-04-27T08:39:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-25T00:00:18Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "differential boundary tree"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9454297674630343,
      "result": {
        "original_header": "DBT",
        "type": "Text_excerpt",
        "value": "Differential boundary tree implemented in pytorch.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fpy94/DBT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fpy94/DBT/master/data_process/datagenerate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/data_process/datagenerate.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fpy94/DBT/master/data_process/.ipynb_checkpoints/datagenerate-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/data_process/.ipynb_checkpoints/datagenerate-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fpy94/DBT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fpy94/DBT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DBT"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fpy94/DBT/master/query_tree_alldata.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fpy94/DBT/master/data_process/datapreprocess.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Test in independent set",
        "parent_header": [
          "Usage and hyper-parameters:"
        ],
        "type": "Text_excerpt",
        "value": "We have provided a well-trained model for testing in the independent testset.<br>\nTo test the independent testset, you need to first preprocess the test data as in test_data_process do then run:<br>\nsh query_tree_alldata.sh<br>\nThis script will predict the test data for each boundary tree, the final prediction is the average of the prediction on each tree.\n"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9987989439989852,
      "result": {
        "original_header": "Requiements:",
        "type": "Text_excerpt",
        "value": "python3<br>\npytorch >1.1.0<br>\nnumpy >1.17.2<br>\nete3 >3.1.1<br>\nscipy >1.3.1<br>\n \n"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fpy94/DBT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DBT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fpy94"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 102592,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 44462,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 673,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-06 05:18:09",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pretrain",
        "parent_header": [
          "Usage and hyper-parameters:"
        ],
        "type": "Text_excerpt",
        "value": "To pretrian the model, run: <br>\npython pretrain.py<br>\nWe only pretrin one epoch using backbone model, the pretrain model will be saved in pretrain/ dir.<br> "
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train DBT",
        "parent_header": [
          "Usage and hyper-parameters:"
        ],
        "type": "Text_excerpt",
        "value": "python train_cv.py -lr 0.001 -bs 1000 -nfor 5 -eps 0.1 -maxepoch 25 -bs 1000<br>\n-lr learning rate <br>\n-bs batch size, 1000 as recomand, in which 500 are used to build tree and the other are used to query the tree and train the model <br>\n-nfor number of trees in each mini-batch. Generally, each mini-batch will randomly build several trees to train the model, default 1<br>\n-maxepoch max epochs<br>\n-eps the absolute distance threshold of label between query node and its nearest node in tree<br>\n-savedir the output directory of trained model<br>\n-mpath continuning training model file<br>"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build boundary tree using trained model",
        "parent_header": [
          "Usage and hyper-parameters:"
        ],
        "type": "Text_excerpt",
        "value": "python build_tree.py -cv 0 -datadir ./data_process/cvdata.pkl -rep 0 -eps 0.05 -mpath MODEL_PATH -savedir SAVE_PATH<br>\n-cv cross_validation index<br>\n-savedir the output directory of built boundary tree<br>\n-mpath the trained model used to build boundary tree<br>\n-rep specify the tree index, we recommend five trees for one model<br>"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Query the boundary tree",
        "parent_header": [
          "Usage and hyper-parameters:"
        ],
        "type": "Text_excerpt",
        "value": "python query_tree.py -cv 0 -eps 0.05 -rep 0 -mpath MODEL_PATH -datadir ./data_process/cvdata.pkl -tpath TREE_PATH -savedir SAVE_PATH <br>\n-rep the tree index<br>"
      },
      "source": "https://raw.githubusercontent.com/fpy94/DBT/master/README.md",
      "technique": "header_analysis"
    }
  ]
}