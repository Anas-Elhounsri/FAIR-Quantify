{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Disclaimer and Acknowledgements",
        "type": "Text_excerpt",
        "value": "<font color = 'orange' ><b>StoryboardR</b></font> is for research purposes only. No clinical decisions should be made with the information obtained from its output.\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TheMillerLab/StoryboardR"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-01-09T20:16:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-05T21:10:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9598846693392095,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "<font color = 'orange' ><b>StoryboardR</b></font> (pronounced \"Story Boarder\") an R package and Shiny application designed to visualize Real-World Data (RWD) from clinical tumor registries. Cancer registries are a rich source of RWD which can be used to test important hypotheses that inform clinical care. Exploratory data analysis (EDA) at the level of individual subjects, when enhanced by interactive data visualizations, has the potential to provide novel insights and generate new hypothesis. <font color = 'orange' ><b>StoryboardR</b></font> facilitates the data visualization of real-world data from tumor registries captured in REDCap<sup>\u00ae</sup>. StoryboardR is freely available under the Massachusetts Institute of Technology license and can be obtained from GitHub. StoryboardR is executed in R and deployed as a Shiny application for non-R users. It produces data visualizations of patient journeys from tumor registries. \nA video demonstration of <font color = 'orange' ><b>StoryboardR</b></font> can be seen [here](https://github.com/TheMillerLab/StoryboardR/blob/main/Video_Demo.md). \n<font color = 'orange' ><b>StoryboardR</b></font> provides a set of verbs that wrangle, process and graph clinical tumor characteristics from structured data:   \n  | Verbs | Function |\n  | :---        |    :---   |\n  |diagnosis() |wrangles data from a tumor registry regarding date of initial histological confirmation of the diagnosis, which can then be incorporated into a Patient Storyboard|\n  |ss() |wrangles data from the Subject Status form of tumor registries to produce a dataframe of details about the Subject Status of subjects|\n  |clinical_staging() |wrangles data from the Presentation and Initial Staging form of tumor registries to produce a dataframe of details about the initial clinical staging, which can then be incorporated into a Patient Storyboard|\n  |pathological_staging() |wrangles data from the Presentation and Initial Staging form of tumor registries to produce a dataframe of details about the initial pathological staging, which can then be incorporated into a Patient Storyboard|\n  |lesion() |wrangles data from the Lesion form of tumor registries to produce a dataframe of details about the individual tumors, which can then be incorporated into a Patient Storyboard|\n  |surgery() |wrangles data from the Surgery form of tumor registries to produce a dataframe of details about surgical therapy, which can then be incorporated into a Patient Storyboard|\n  |xrt() |wrangles data from the Radiotherapy form of tumor registries to produce a dataframe of details about radiation therapy, which can then be incorporated into a Patient Storyboard|\n  |systemic_therapy() |wrangles data from the Systemic Antineoplastic Therapy form of tumor registries to produce a dataframe of details about systemic therapy, which can then be incorporated into a Patient Storyboard|\n  |genomics() |wrangles data from the Genomics form of tumor registries to produce a dataframe of details about genomic data from tumors or blood, which can then be incorporated into a Patient Storyboard|\n  |adverse_events() |wrangles data from the Adverse Events form of tumor registries to produce a dataframe of details about adverse events of systemic therapy, which can then be incorporated into a Patient Storyboard|\n  |combine_storyboard_dfs() |integrates the various storyboards across the patient journey into one final data frame|\n  |storyboard_plot() |takes the aggregated data frames from `combine_storyboards_dfs` to produce a plotly data visualization of a patient journey|\n  |date.shift.df()\t|shifts the dates a unified random number of weeks either forward or back between 1 and 52|\n  |launch_StoryboardR()\t|launches the StoryboardR shiny application|)\n \n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/TheMillerLab/StoryboardR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TheMillerLab/StoryboardR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TheMillerLab/StoryboardR"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Development version",
        "parent_header": [
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "To get a bug fix or to use a feature from the development version, you can install \nthe development version of <font color = 'orange' ><b>StoryboardR</b></font> from GitHub.\n\n`devtools::install_github(\"TheMillerLab/StoryboardR\")`\n\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/TheMillerLab/StoryboardR/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 TheMillerLab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/img src='man/figures/StoryboardR_Logo.png' align="
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "StoryboardR"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "TheMillerLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 418818,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Software Dependencies",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "<font color = 'orange' ><b>StoryboardR</b></font> is written in R (version 4.0.0), organized using roxygen2, and utilizes the following packages dplyr, tidyr, readr, stringr, TimeWarp, magrittr, plotly,  splitstackshape, Shinydashboard, and Shiny. For full details, instructions and examples refer to the [video demonstration](https://github.com/TheMillerLab/StoryboardR/blob/main/Video_Demo.md).\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Clinical Informatics Dependencies",
        "parent_header": [
          "Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "StoryboardR facilitates data visualizations of patient data from the Merkel Cell Carcinoma Tumor Registry electronic data capture (EDC) system, a REDCap<sup>\u00ae</sup>-based EDC. The data dictionary for this platform is available [here](https://github.com/TheMillerLab/StoryboardR/data-raw/registry_data_dictionary.csv). While this platform is currently being used by the Merkel Cell Carcinoma Tumor Registry, the fields are generalizable to most solid tumors. Potential customizations of the platform are described below.\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 08:58:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "type": "Text_excerpt",
        "value": "If you encounter a clear bug, please file an issue with a minimal reproducible example on [GitHub](https://github.com/TheMillerLab/StoryboardR/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "`library(StoryboardR)`\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "StoryboardR Input",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "<font color = 'orange' ><b>StoryboardR</b></font> takes data from a REDCap<sup>\u00ae</sup> project that has incorporated the instruments found in the data dictionary. The StoryboardR Shiny application is launched via the function `launch_StoryboardR()`. This function takes two arguments: \"Data\" and \"DateShift\". The \"Data\" argument is a data frame that contains the raw data from the desired REDCap<sup>\u00ae</sup> project. \"DateShift\", which defaults to `FALSE`, will generate a random and uniform shift of all the dates in the data frame if `TRUE` is used. `launch_StoryboardR()` is the only function required to execute and utilize StorybaordR. Once `launch_StoryboardR()` is called, end users interface with StoryboardR in a web browser.\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "StoryboardR Output",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The <font color = 'orange' ><b>StoryboardR</b></font> shiny application returns two outputs: a subject Dashboard and Storyboard. The subject Dashboard centralizes high-yield data from the tumor registry in tabular form. This provides an important overview of patient-level information and is fully customizable by the end user. To visualize the temporal relationship between patient-level data elements, StoryboardR generates an interactive timeline. This creates a method of EDA to allow for a visual interpretation of the relationship between certain potential prognostic and/or predictive biomarkers (e.g., tumor genetics) and outcomes (e.g., overall survival, response to therapy).\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "type": "Text_excerpt",
        "value": "If you encounter a clear bug, please file an issue with a minimal reproducible example on [GitHub](https://github.com/TheMillerLab/StoryboardR/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/TheMillerLab/StoryboardR/main/README.md",
      "technique": "header_analysis"
    }
  ]
}