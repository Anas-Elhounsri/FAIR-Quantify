{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NWPU-903PR/PDGPCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-01T11:55:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-04T10:07:48Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PDPCST is a personalized driver genes prediction method"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9726961642366988,
      "result": {
        "original_header": "PDGPCS",
        "type": "Text_excerpt",
        "value": "PDGPCS is a driver genes prediction method;\nPDGPCS uesd gene expression data, gene mutation data and pathway data to predict driver genes.\nWe obtained the source C code of PCST from M.Bailly-Bechet et al(M.Bailly-Bechet, C. Borgs, A. Braunstein, J. Chayes, \nA. Dagkessamanskaia, J.-M.Fran\u00e7ois, and R. Zecchina. Finding undetected protein associations in \ncellsignaling by belief propagation. Proc Natl Acad Sci U S A 2011;108(2):882-887.).\nThe matlab fronted (\"MsgSteriner.mexa64\") is compiled by Visual Studio Code. \nInput:\n1. Gene expression data: tumor and normal expression data, the data format is same as example\n                        ('example_tumor.txt' and 'example_normal.txt' ,the  patient's id in the two files must correspond).\n2. Gene mutation data: the data format is same as example ('example_snp.txt' or 'example_cnv.txt' )\n3. Pathway data: the data format is same as example ('KEGG_pathways_network.xlsx' ). \n                 \nRun:\n   run main_PDGPCS.m. \n"
      },
      "source": "https://raw.githubusercontent.com/NWPU-903PR/PDGPCS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/NWPU-903PR/PDGPCS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NWPU-903PR/PDGPCS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NWPU-903PR/PDGPCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PDGPCS"
      },
      "source": "https://raw.githubusercontent.com/NWPU-903PR/PDGPCS/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8352883159252344,
      "result": {
        "original_header": "PDGPCS",
        "type": "Text_excerpt",
        "value": "Input:\n1. Gene expression data: tumor and normal expression data, the data format is same as example\n                        ('example_tumor.txt' and 'example_normal.txt' ,the  patient's id in the two files must correspond).\n2. Gene mutation data: the data format is same as example ('example_snp.txt' or 'example_cnv.txt' )\n3. Pathway data: the data format is same as example ('KEGG_pathways_network.xlsx' ). \n                 \nRun:\n   run main_PDGPCS.m. \n"
      },
      "source": "https://raw.githubusercontent.com/NWPU-903PR/PDGPCS/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/NWPU-903PR/PDGPCS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PDGPCS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "NWPU-903PR"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 19221,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/NWPU-903PR/PDGPCS/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:15:31",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "non-software"
      },
      "technique": "software_type_heuristics"
    }
  ]
}