{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citations",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`"
        ],
        "type": "Text_excerpt",
        "value": "In general, if you use the software, please cite\n\n[R. de Vlaming, E.A.W. Slob, P.R. Jansen, A. Dagher, P.D. Koellinger, P.J.F. Groenen, and C.A. Rietveld (2021). Multivariate analysis reveals shared genetic architecture of brain morphology and human behavior. *Commun Biol* **4**, 1180](https://doi.org/10.1038/s42003-021-02712-y)\n\nIf you use the options to estimate customised factor structures, such as `--genetic-model`, please also cite\n\n[R. de Vlaming, E.A.W. Slob, P.J.F. Groenen, and C.A. Rietveld (2022). Multivariate estimation of factor structures of complex traits using SNP-based genomic relationships. *BMC Bioinform* **23**, 305](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-022-04835-3)\n\nIf you use the `--mediation` option, please also cite\n\n[C.A. Rietveld, R. de Vlaming, and E.A.W. Slob (2023). The identification of mediating effects using genome-based restricted maximum likelihood estimation. *PLOS Genet* **19**, e1010638](https://journals.plos.org/plosgenetics/article?id=10.1371/journal.pgen.1010638)\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/devlaming/mgreml"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Support"
        ],
        "type": "Text_excerpt",
        "value": "In case you have a question that is not resolved by going over the preceding two steps, or in case you have encountered a bug, please send an e-mail to r\\[dot\\]devlaming\\[at\\]vu\\[dot\\]nl.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-20T16:22:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-17T07:06:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Efficient multivariate GREML analysis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9006380283823163,
      "result": {
        "original_header": "MGREML (Multivariate GREML) `beta v1.1.1`",
        "type": "Text_excerpt",
        "value": "`mgreml` is a command-line tool for rapid estimation of SNP-based heritability and genetic correlations for (nearly) balanced data on many traits in a single analysis, using a genomic-relatedness matrix (GRM) derived from SNP data on unrelated individuals. `mgreml` can easily estimate the full genetic correlation matrix for up to 100 traits in a sample of 20,000 individuals. Moreover, `mgreml` can handle a considerable number of fixed-effect covariates and a minor degree of phenotypic missingness (De Vlaming et al. 2021; see [Citations](#citations)). \nThe `mgreml` tool also allows users to specify structural models and test hypotheses regarding nested models, for instance regarding the absence of genetic correlations or specific shared genetic factors between traits (De Vlaming et al. 2022; see [Citations](#citations)). \nThe tool has built-in options to return the full set of factor coefficients and variance components, as well as the complete covariance matrix of those estimates. \nFinally, `mgreml` can be used to estimate the degree to which the genetic variance of one trait is mediated by another trait (Rietveld et al. 2023; see [Citations](#citations)).\n \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9834204051399006,
      "result": {
        "original_header": "Overview of commands",
        "type": "Text_excerpt",
        "value": "An overview of all `mgreml` commands is listed below: \n| Command | Usage |\n| --- | --- |\n| `-h`, `--help` | show help message and exit |\n| `--grm PREFIX` | prefix of binary GRM |\n| `--grm-cutoff THRESHOLD` | option to drop individuals using a greedy algorithm, such that there is no relatedness in GRM in excess of threshold for remaining individuals |\n| `--adjust-pcs INTEGER [INTEGER]` | option to specify for how many leading principal components (PCs) from genetic data to adjust (to control for population stratification) and for how many trailing PCs to adjust (for computational efficiency); if just one non-negative integer is specified this is taken as the number of leading PCs to adjust for |\n| `--pheno FILENAME [nolabelpheno]` | phenotype file: should be comma-, space-, or tab-separated, with one row per individual, with FID and IID as first two fields, followed by a field per phenotype; can be followed by optional flag `nolabelpheno`, e.g. `--pheno` `mypheno.txt nolabelpheno`, but we recommend to label phenotypes |\n| `--mediation` | option to perform mediation analysis using GREML (MA-GREML) based on estimates from a saturated bivariate model, in line with the structural equation model proposed by Rietveld et al. (2023); the second phenotype in the phenotype file is assumed to act as mediator for (part of) the genetic component of the first phenotype in the phenotype file; all further phenotypes are ignored; this flag cannot be combined with `--(restricted-)genetic-model`, `--(restricted-)rho-genetic`, `--(restricted-)no-var-genetic`, `--(restricted-)environment-model`, `--(restricted-)rho-environment`, `--(restricted-)reinitialise`, and `--store-iter` |\n| `--drop-missings` | option to drop all observations from data with at least one missing phenotype or at least one missing covariate |\n| `--no-intercept` | option to indicate an intercept should not be included automatically as covariate |\n| `--covar FILENAME [nolabelcovar]` | optional covariate file: should be comma-, space-, or tab- separated, with one row per individual, with FID and IID as first two fields, followed by a field per covariate; can be followed by optional flag `nolabelcovar`, e.g. `--covar mycovar.txt nolabelcovar`, but we recommend to label covariates; :warning: do not include principal components from genetic data as covariates, use `--adjust-pcs` instead |\n| `--covar-model FILENAME [nolabelpheno] [nolabelcovar]` | optional covariate model file: should be comma-, space-, or tab-separated, with one row per phenotype and one column per covariate; can be followed by optional flags `nolabelpheno` and/or `nolabelcovar`, but we recommend to label phenotypes and covariates; without `--covar-model`, all covariates are assumed to apply to all traits |\n| `--genetic-model FILENAME [nolabelpheno] [nolabelfactor]` |  optional genetic model file: should be comma-, space-, or tab- separated, with one row per phenotype and one column per genetic factor; can be followed by optional flags `nolabelpheno` and/or `nolabelfactor`, but we recommend to label phenotypes and genetic factors |\n| `--rho-genetic 0`, `1`  | option followed by `0` or `1`, forcing all genetic correlations to take on the specified value; this flag cannot be combined with `--genetic-model` |\n| `--no-var-genetic` | option to force all genetic variances to equal zero; this flag cannot be combined with `--genetic-model` and/or `--rho-genetic` |\n| `--restricted-genetic-model FILENAME [nolabelpheno] [nolabelfactor]` | optional restricted genetic model file: should be comma-, space-, or tab-separated, with one row per phenotype and one column per genetic factor; can be followed by optional flags `nolabelpheno` and/or `nolabelfactor`, but we recommend to label phenotypes and genetic factors |\n| `--restricted-rho-genetic 0`, `1` | option followed by `0` or `1`, forcing all genetic correlations in the restricted model to take on the specified value; this flag cannot be combined with `--restricted-genetic-model` |\n| `--restricted-no-var-genetic` | option to force all genetic variances in the restricted model to equal zero; this flag cannot be combined with `--restricted-genetic-model` and/or `--restricted-rho-genetic` |\n| `--environment-model FILENAME [nolabelpheno] [nolabelfactor]` |  optional environment model file: should be comma-, space-, or tab-separated, with one row per phenotype and one column per environment factor; can be followed by optional flags `nolabelpheno` and/or `nolabelfactor`, but we recommend to label phenotypes and environment factors |\n| `--rho-environment 0`  | option followed by `0`, forcing all environment correlations to zero; this flag cannot be combined with `--environment-model` |\n| `--restricted-environment-model FILENAME [nolabelpheno] [nolabelfactor]` | optional restricted environment model file: should be comma-, space-, or tab-separated, with one row per phenotype and one column per environment factor; can be followed by optional flags `nolabelpheno` and/or `nolabelfactor`, but we recommend to label phenotypes and environment factors |\n| `--restricted-rho-environment 0` | option followed by `0`, forcing all environment correlations in the restricted model to zero; this flag cannot be combined with `--restricted-environment-model` |\n| `--no-se` | option to skip calculation of standard errors and covariance matrix of estimates |\n| `--factor-coefficients` | option to report estimated factor coefficients |\n| `--variance-components` | option to report estimated variance components |\n| `--newton` | option to use Newton method instead of BFGS; not recommended, unless the model is well-defined, starting values are of good quality, and the number of traits is small |\n| `--grad-tol THRESHOLD` | option to set convergence threshold on the length of the gradient vector per parameter, per observation, different from the default value of `1E-5` |\n| `--store-iter INTEGER` | option to specify every how many iterations you want to store results |\n| `--reinitialise FILENAME` | option to reinitialise `mgreml` for a model and its estimates from a `.pkl` file stored by `--store-iter` |\n| `--restricted-reinitialise FILENAME` | option to reinitialise `mgreml` for a restricted model and its estimates from a `.pkl` file generated by `--store-iter` |\n| `--pairwise` | option to perform pairwise bivariate estimation instead of multivariate estimation; cannot be combined with `--mediation`, `--(restricted-)genetic-model`, `--(restricted-)no-var-genetic`, `--(restricted-)environment-model`, `--factor-coefficients`, `--variance-components`, `--store-iter`, and/or `--(restricted-)reinitialise`; :warning: the number of output files can be very large |\n| `--ignore-collinearity` | option to ignore multicollinearity between phenotypes; please use this option only as a last resort; model may be poorly identified when your phenotype data is perfectly collinear; preferred route to solve collinearity is to consider e.g. a subset of phenotypes |\n| `--out PREFIX` |  prefix of output files |\n \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8780156163408981,
      "result": {
        "original_header": "Derivations",
        "type": "Text_excerpt",
        "value": "For full details on the derivation of the `mgreml` method, see the [Supplementary Information](https://static-content.springer.com/esm/art%3A10.1038%2Fs42003-021-02712-y/MediaObjects/42003_2021_2712_MOESM2_ESM.pdf) of the work by De Vlaming et al. (2021). \nFor derivations of the structural model used in the mediation analysis, see the [Supplementary Information](https://doi.org/10.1371/journal.pgen.1010638.s001) of the work by Rietveld et al. (2023).\n \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9206764341316463,
      "result": {
        "original_header": "Authors",
        "type": "Text_excerpt",
        "value": "Eric Slob (University of Cambridge)\n \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/devlaming/mgreml/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Standard errors",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "In addition to reporting the heritabilities, and genetic and environment correlations, `mgreml` also automatically reports the standard errors of all estimates.\n\nIn case you do not wish `mgreml` to compute standard errors after model estimation, you can use the `--no-se` option. Especially for a large number of traits, computing the standard errors is computationally demanding, as this requires calculating the average information matrix, which has a computational complexity of the order *NT*<sup> 4</sup>, where *T* denotes the number of traits and *N* the number of observations.\n\n`mgreml` also automatically reports the fixed-effect estimates (a.k.a. GLS estimates), including the covariance matrix of those estimates, and their standard errors. If the `--no-se` option is used, the estimated covariance matrix and standard errors of the GLS estimates will not be included either.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/devlaming/mgreml/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "devlaming/mgreml"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MGREML (Multivariate GREML) beta v1.1.1"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/master/simulations_mediation/run.1.limitedmediation.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/master/simulations_mediation/run.1.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/master/simulations/run1.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/176773372"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/master/tutorial/rhoG_estimates_true.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/development/tutorial/sem.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`"
        ],
        "type": "Text_excerpt",
        "value": ":warning: Before downloading `mgreml`, please make sure [Git](https://git-scm.com/downloads) and [Anaconda](https://www.anaconda.com/) with **Python 3.x** are installed.\n\nIn order to download `mgreml`, open a command-line interface by starting [Anaconda Prompt](https://docs.anaconda.com/anaconda/user-guide/getting-started/), navigate to your working directory, and clone the `mgreml` repository using the following command:\n\n```  \ngit clone https://github.com/devlaming/mgreml.git\n```\n\nNow, enter the newly created `mgreml` directory using:\n\n```\ncd mgreml\n```\n\nThen run the following commands to create a custom Python environment which has all of `mgreml`'s dependencies (i.e. an environment that has packages such as `numpy` and `pandas` pre-installed):\n\n```\nconda env create --file mgreml.yml\nconda activate mgreml\n```\n\n(or `activate mgreml` instead of `conda activate mgreml` on some machines).\n\nIn case you cannot create a customised conda environment (e.g. because of insufficient user rights) or simply prefer to use Anaconda Navigator or `pip` to install packages e.g. in your base environment rather than a custom environment, please note that `mgreml` only requires Python 3.x with the packages `networkx`, `numpy`, `pandas`, `psutil`, `scipy`, and `tqdm` installed. To all [SURFsara](https://userinfo.surfsara.nl/) users: please note that the default Python 3.x environment already has all necessary packages [pre-installed](https://userinfo.surfsara.nl/systems/shared/software/python).\n\nOnce the above has completed, you can now run\n\n```\npython ./mgreml.py -h\n```\n\nto print a list of all command-line options. If this command fails, something has gone wrong during installation.\n\n:warning: **Windows users**: in case the preceding command fails, try replacing slashes (i.e. `/`) in all `mgreml` commands by backslashes (i.e. `\\`), so e.g. try\n\n```\npython .\\mgreml.py -h\n```\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9998796769416723,
      "result": {
        "original_header": "Updating `mgreml`",
        "type": "Text_excerpt",
        "value": "You can update to the newest version of `mgreml` using `git`. First, navigate to your `mgreml` directory (e.g. `cd mgreml`), then run\n```\ngit pull\n```\nIf `mgreml` is up to date, you will see \nBASH2*\notherwise, you will see `git` output similar to \nBASH3*\nwhich tells you which files were changed. \nIf you have modified the `mgreml` source code yourself, `git pull` may fail with an error such as `error: Your local changes [...] would be overwritten by merge`.  \nIn case the Python dependencies have changed, you can update the `mgreml` environment with\n```\nconda env update --file mgreml.yml\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/devlaming/mgreml/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`"
        ],
        "type": "Text_excerpt",
        "value": "This project is licensed under GNU GPL v3.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mgreml"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "devlaming"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 276140,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 8118,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "devlaming",
          "type": "User"
        },
        "date_created": "2021-09-10T09:03:59Z",
        "date_published": "2021-09-10T09:06:44Z",
        "description": "First stable release of MGREML",
        "html_url": "https://github.com/devlaming/mgreml/releases/tag/v1.0.0",
        "name": "MGREML v1.0.0",
        "release_id": 49333966,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/devlaming/mgreml/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/devlaming/mgreml/releases/49333966",
        "value": "https://api.github.com/repos/devlaming/mgreml/releases/49333966",
        "zipball_url": "https://api.github.com/repos/devlaming/mgreml/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contributors",
    "documentation",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:37:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`"
        ],
        "type": "Text_excerpt",
        "value": "Before contacting us, please try the following:\n\n1. Go over the tutorial in this `README.md` file\n2. Go over the method, described in detail in the supplementary information of the relevant papers (see [Citations](#citations))\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`"
        ],
        "type": "Text_excerpt",
        "value": "In this tutorial, you will learn how to use `mgreml`. Before you start using `mgreml`, please go over the steps under [Installation](#installation). The following topics will be covered in this tutorial:\n\n1. [Tutorial data](#tutorial-data)\n2. [Basic estimation](#basic-estimation)\n3. [Controlling for covariates](#controlling-for-covariates)\n4. [Population stratification](#population-stratification)\n5. [Standard errors](#standard-errors)\n6. [Different traits with different covariates](#different-traits-with-different-covariates)\n7. [Specifying structural models](#specifying-structural-models)\n8. [Factor coefficients](#factor-coefficients)\n9. [Variance components](#variance-components)\n10. [Nested models and likelihood-ratio tests](#nested-models-and-likelihood-ratio-tests)\n11. [Estimation reinitialisation](#estimation-reinitialisation)\n12. [Mediation analysis using GREML](#mediation-analysis-using-greml)\n13. [Data formats and management](#data-formats-and-management)\n14. [Missing data and unbalancedness](#missing-data-and-unbalancedness)\n15. [Advanced options](#advanced-options)\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial data",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Now that you have cloned the `mgreml` repository, and `mgreml` is up-and-running, the main directory of `mgreml` should contain a subdirectory called `tutorial`. This directory in turn contains several files, including `pheno.txt` and `covar.txt`. Details on how this dataset has been generated using simulation can be found in the python script in `./tutorial/simulate.py`.\n\nLet us first inspect the `pheno.txt` file. This file contains data in tab-separated format on ten phenotypes observed in a set of 5,000 individuals. The first two columns list family and individual ID, followed by the phenotypes:\n\n| FID | IID | Some pheno 101 | Some pheno 102 | ... | Some pheno 109 | Some pheno 110 |\n| --- | --- | --- | --- | --- | --- | --- |\n| FID 1 | IID 5001 | 3.738 | 1.447 | ... | 0.585 | 1.848 |\n| FID 2 | IID 5002 | -3.667 | -1.704 | ... | 0.317 | -0.946 |\n| FID 3 | IID 5003 | -2.644 | -0.737 | ... | -2.647 | 0.093 |\n| ... | ... |  |  | ... |  |  |\n| FID 4998 | IID 9998 | -2.487 | 0.550 | ... | 2.467 | -2.093 |\n| FID 4999 | IID 9999 | -2.460 | -2.980 | ... | 6.344 | -0.201 |\n| FID 5000 | IID 10000 | -2.192 | -3.691 | ... | 0.024 | -0.906 |\n\nAlthough `mgreml` in principle can handle phenotype data without header (using a modifier that we discuss later on), we recommend always including headers in your data, so e.g. your phenotypes are labelled, allowing `mgreml` output to refer to specific phenotype names rather than ambiguous indices such as `1`, `2`, `3` etc.\n\nFor the same set of individuals, you have a binary genomic-relatedness matrix (a.k.a. GRM) e.g. computed using [LDAK](https://dougspeed.com/ldak/), [PLINK](https://www.cog-genomics.org/plink/), or [GCTA](https://cnsgenomics.com/software/gcta/). In this case, the set of binary GRM files comprises `data.grm.bin`, `data.grm.N.bin`, and `data.grm.id` (`mgreml` ignores whether or not the `.grm.N.bin` file is present). We refer to this set of binary GRM files by its prefix, i.e. `data`.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic estimation",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "The command for running an `mgreml` analysis on this data without correcting for any covariates at all is as follows:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\ \n                   --no-intercept --out ./tutorial/nocovs\n```\n\n:warning: The phenotypic data itself may only be numerical. E.g. values such as `yes` and `no` are not permitted as phenotypic values. Instead, please use values such as `1` and `0`.\n\nPlease notice that the labels of the phenotypes (i.e, in the header row) do **not** need to be numerical, of course. Also, missing values can be encoded non-numerically (e.g. as `NA` or `NaN`), see [Missing data and unbalancedness](#missing-data-and-unbalancedness) for more details.\n\nWhen carrying out this command, `mgreml` will first show the welcome screen and directly after that summarise the input options that you specified:\n\n```\nYour call:\n./mgreml.py \\\n--grm ./tutorial/data \\\n--pheno ./tutorial/pheno.txt \\\n--no-intercept \\\n--out ./tutorial/nocovs\n```\n\nAfter a few hundred BFGS iterations, `mgreml` will have finished, and have written e.g. heritability estimates to `./tutorial/nocovs.HSq.out` and genetic correlation estimates to `./tutorial/nocovs.RhoG.out`.\n\nThe estimated heritabilities are as follows:\n\n| trait | heritability | standard error |\n| --- | --- | --- |\n| Some pheno 101 | 0.088 | 0.016 |\n| Some pheno 102 | 0.063 | 0.016 |\n| Some pheno 103 | 0.088 | 0.016 |\n| Some pheno 104 | 0.064 | 0.016 |\n| Some pheno 105 | 0.059 | 0.016 |\n| Some pheno 106 | 0.063 | 0.016 |\n| Some pheno 107 | 0.085 | 0.016 |\n| Some pheno 108 | 0.145 | 0.017 |\n| Some pheno 109 | 0.037 | 0.015 |\n| Some pheno 110 | 0.154 | 0.017 |\n\nComparing these estimates to the true values in `./tutorial/true.HSq.txt`, printed below, we see that our estimates seem to be biased.\n\n| trait | heritability |\n| --- | --- |\n| Some pheno 101 | 0.249 |\n| Some pheno 102 | 0.252 |\n| Some pheno 103 | 0.248 |\n| Some pheno 104 | 0.249 |\n| Some pheno 105 | 0.253 |\n| Some pheno 106 | 0.252 |\n| Some pheno 107 | 0.248 |\n| Some pheno 108 | 0.250 |\n| Some pheno 109 | 0.249 |\n| Some pheno 110 | 0.249 |\n\nThe simple reason for this bias is that we did not control for any fixed-effect covariates.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Controlling for covariates",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "By removing the `--no-intercept` option, `mgreml` automatically adds one fixed effect per phenotype, namely a fixed effect that controls for differences in mean across phenotypes:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --out ./tutorial/intercept\n```\n\nResulting SNP heritability estimates in `./tutorial/intercept.HSq.out`, however, show our estimates still seem to be biased:\n\n| trait | heritability | standard error |\n| --- | --- | --- |\n| Some pheno 101 | 0.084 | 0.016 |\n| Some pheno 102 | 0.083 | 0.016 |\n| Some pheno 103 | 0.088 | 0.016 |\n| Some pheno 104 | 0.076 | 0.016 |\n| Some pheno 105 | 0.058 | 0.016 |\n| Some pheno 106 | 0.072 | 0.016 |\n| Some pheno 107 | 0.088 | 0.016 |\n| Some pheno 108 | 0.151 | 0.017 |\n| Some pheno 109 | 0.055 | 0.016 |\n| Some pheno 110 | 0.159 | 0.017 |\n\nThe reason that this bias persists is that more fixed-effect covariates are at play than just the intercept. The file `./tutorial/covar.txt` contains the other covariates that affect the traits of interest. So we need to use the `--covar` option to specify these additional fixed-effect covariates. This boils down to the following `mgreml` command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt --out ./tutorial/covs\n```\n\n:warning: As with the phenotypic data, the actual data on the covariates may also only be numerical. E.g. values such as `female` and `male` are not permitted as values of covariates. Instead, please use values such as `1` and `0`.\n\nPlease notice that the labels of the covariates (i.e. in the header row) do **not** need to be numerical, of course. Also, missing values can be encoded non-numerically (e.g. as `NA` or `NaN`), see [Missing data and unbalancedness](#missing-data-and-unbalancedness) for more details.\n\nNotice that analyses including covariates are computationally slightly more demanding per BFGS iteration. E.g. in this case we have 10 covariates (i.e. the intercept + 9 additional covariates in `./tutorial/covar.txt`), each of which is allowed to have a different effect on each trait. As we have 10 traits, this means we have 100 fixed effects in total, which our model needs to take into account.\n\nIf we compare the new SNP-based heritability estimates in file `./tutorial/covs.HSq.out` to the true values, taking the standard errors of the estimates into account, we see the strong bias is gone:\n\n| trait | heritability | standard error |\n| --- | --- | --- |\n| Some pheno 101 | 0.253 | 0.017 |\n| Some pheno 102 | 0.260 | 0.017 |\n| Some pheno 103 | 0.251 | 0.017 |\n| Some pheno 104 | 0.258 | 0.017 |\n| Some pheno 105 | 0.236 | 0.017 |\n| Some pheno 106 | 0.247 | 0.017 |\n| Some pheno 107 | 0.269 | 0.017 |\n| Some pheno 108 | 0.246 | 0.017 |\n| Some pheno 109 | 0.255 | 0.017 |\n| Some pheno 110 | 0.267 | 0.017 |\n\nMoreover, when looking at the heatmaps of the genetic correlations as estimated by `mgreml` and the true genetic correlations, we see that `mgreml` provides highly accurate estimates in this simulation:\n\n![Comparison of `mgreml` estimates of genetic correlations and true genetic correlations](https://github.com/devlaming/mgreml/blob/master/tutorial/rhoG_estimates_true.png?raw=true)\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Population stratification",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "In the previous part, you may have noticed that `covar.txt` does not include any principal components (PCs) from the genetic data as fixed-effect covariates. Perhaps surprisingly, this is perfectly normal for an `mgreml` analysis.\n\nIn fact, in `mgreml`, the file with your covariates should **NEVER** contain PCs from your genetic data, as `mgreml` already removes the effects of population stratification in the so-called canonical transformation. By default, `mgreml` removes the effects of 20 leading PCs from your genetic data. The effective sample size is reduced by 20 as a result of this correction for PCs.\n\nIn case you want to change the number of PCs you control for, do **NOT** add these PCs to your file with covariate data. Instead, use the `--adjust-pcs` option, followed by the total number of leading PCs you want to control for. E.g. `--adjust-pcs 20` is equivalent to the default setting, `--adjust-pcs 40` controls for the 40 leadings PCs, and `--adjust-pcs 0` controls for no PCs at all (not recommended). In these three cases, the sample size is reduced by 20, 40, and zero respectively.\n\nFor instance, the command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --adjust-pcs 1000 --out ./tutorial/many_pcs\n```\n\nmakes `mgreml` adjust for 1000 leading PCs from the genetic data.\n\nAs there is no population stratification in our data (by virtue of our simulation design), this means adjusting for that many PCs will just reduce precision of our estimates, without eliminating any bias. If we look at `many_pcs.HSq.out` we see that our estimates indeed have considerably higher standard errors:\n\n| trait | heritability | standard error |\n| --- | --- | --- |\n| Some pheno 101 | 0.230 | 0.032 |\n| Some pheno 102 | 0.252 | 0.032 |\n| Some pheno 103 | 0.262 | 0.031 |\n| Some pheno 104 | 0.298 | 0.029 |\n| Some pheno 105 | 0.235 | 0.032 |\n| Some pheno 106 | 0.258 | 0.032 |\n| Some pheno 107 | 0.274 | 0.031 |\n| Some pheno 108 | 0.245 | 0.031 |\n| Some pheno 109 | 0.230 | 0.032 |\n| Some pheno 110 | 0.311 | 0.030 |\n\nFor advanced users, the `--adjust-pcs` option can also be followed by a second number, indicating the number of trailing eigenvectors from your GRM to adjust for. E.g. `--adjust-pcs 100 1000` controls for 100 leading eigenvectors from your GRM and 1000 trailing eigenvectors. Doing this decreases the overall sample size by 100 + 1000 = 1100.\n\nBy default no trailing eigenvectors are adjusted for. However, if the trailing eigenvalues are sufficiently small, we may adjust for a considerable number of them, reducing CPU time (as the overall sample size becomes smaller), without diminishing statistical efficiency of the analysis too much (as effectively only less informative bits of data are ignored).\n\nPlease notice that adjusting for trailing eigenvectors may require you to use `--no-intercept`, as the last eigenvector from the GRM tends to be highly multicollinear with the intercept for technical reasons.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Different traits with different covariates",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Now, suppose each trait has a different set of covariates, `mgreml` can easily handle this using the `--covar-model` option. This option should be followed by a filename which contains a binary table, indicating which covariate affects which phenotype. E.g. the `tutorial` folder contains `covar_model.txt`, of which the content is shown below:\n\n|  | my covar 301 | my covar 302 | my covar 303 | my covar 304 | my covar 305 | my covar 306 | my covar 307 | my covar 308 | my covar 309 |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Some pheno 101 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 102 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 103 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 104 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 105 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 106 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 |\n| Some pheno 107 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 |\n| Some pheno 108 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 |\n| Some pheno 109 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 |\n| Some pheno 110 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 |\n\nClearly, each covariate affects a different trait. We can now perform `mgreml` estimation under this model for the fixed effects using the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt --covar-model ./tutorial/covar_model.txt \\\n                   --out ./tutorial/different_covs\n```\n\nNotice here that we did not use `--no-intercept`. This means `mgreml` (1) adds the intercept to the set of covariates and (2) assumes the intercept applies to all phenotypes.\n\nSo in total, we have 10 fixed effects for the intercept (i.e. one fixed effect per trait), and 9 additional fixed effects for `my covar 301` up until `my covar 309`.\n\nNow, `different_covs.GLS.est.out`, in the folder `tutorial`, shows the fixed-effect estimates for the intercept affecting all traits and for the covariates that affect a given trait according to `covar_model.txt`:\n\n| trait | covariate | beta hat | standard error |\n| --- | --- | --- | --- |\n| Some pheno 101 | intercept | -0.328 | 0.047 |\n| Some pheno 102 | intercept | -1.063 | 0.045 |\n| Some pheno 102 | my covar 301 | 1.646 | 0.011 |\n| Some pheno 103 | intercept | -0.307 | 0.054 |\n| ... | ... | ... | ... |\n| Some pheno 109 | intercept | 1.184 | 0.109 |\n| Some pheno 109 | my covar 308 | 5.766 | 0.013 |\n| Some pheno 110 | intercept | 0.684 | 0.035 |\n| Some pheno 110 | my covar 309 | 1.398 | 0.005 |\n\nE.g. `my covar 301` does not affect `Some pheno 101` in this case.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Specifying structural models",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Analogous to `--covar-model`, users can also specify which genetic factor affects which trait and which environment factor affects which trait. Such specifications can be passed to `mgreml` using the `--genetic-model` and `--environment-model` options. For a full description of the underlying methodology, please see our work on this extension of `mgreml` in *BMC Bioinformatics* (De Vlaming et al. 2022; see [Citations](#citations)).\n\nThese specifications are effectively binary tables with factor labels in the header row and traits labels in the column header. In case a given factor is permitted to have an effect on a given trait, the corresponding element is set equal to one and otherwise that element is set to zero. An element equal to one is, thus, a free coefficient.\n\nFor instance, `block_model.txt` (found in the `tutorial` folder) is a factor model where factors 0 &ndash; 4 constitute a saturated model for Some pheno 101 &ndash; 105 (Block 1) and factors 5 &ndash; 9 a saturated model Some pheno 106 &ndash; 110 (Block 2), without any overlap (i.e. there are no factors that affect traits from both Block 1 and Block 2):\n\n|  | factor 0 | factor 1 | factor 2 | factor 3 | factor 4 | factor 5 | factor 6 | factor 7 | factor 8 | factor 9 |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Some pheno 101 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 102 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 103 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 104 | 1 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 105 | 1 | 1 | 1 | 1 | 1 | 0 | 0 | 0 | 0 | 0 |\n| Some pheno 106 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 0 |\n| Some pheno 107 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 0 | 0 |\n| Some pheno 108 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 0 | 0 |\n| Some pheno 109 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 0 |\n| Some pheno 110 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |\n\nThis block model actually aligns with the way in which the genetic components of these traits were simulated! We will use this factor model specification later on, in [Nested models and likelihood-ratio tests](#nested-models-and-likelihood-ratio-tests).\n\nImportantly, any such user-specified structural model must be identified. `mgreml` performs only one superficial tests on identification: the tool checks if there are at most *T*(*T*+1)/2 free genetic coefficients and at most *T*(*T*+1)/2 free environment coefficients (this is the so-called *t*-rule). Satisfying the *t*-rule is a minimum but not (!) sufficient condition for model identification.\n\n:warning: Responsibility for formulating a proper, identified model lies with you, the user.\n\nTo given another example of a user-specified model: we could impose a factor structure such that there is only one genetic factor, where that genetic factor affects all traits, and such that there are *T*=10 environment factors, each affecting only a single trait, and no trait being affected by two distinct environment factors.\n\nEffectively, this boils down to a model with genetic correlations all equal to plus or minus one and environment correlations all equal to zero. These specifications of the genetic and environmental factor models are stored in the files `gen_model.txt` and `env_model.txt` respectively, both found in the `tutorial` folder. Both files contain a binary table, with elements equal to one, where a given factor is permitted to affect the given phenotype, and equal to zero otherwise.\n\nTo estimate this structural model, we can simply carry out the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --genetic-model ./tutorial/gen_model.txt \\\n                   --environment-model ./tutorial/env_model.txt \\\n                   --out ./tutorial/custom_model\n```\n\nThe estimates in the resulting file, `custom_model.RhoG.out`, reveal that all genetic correlations are estimated at either zero or one, as expected under this model:\n\n|  | Some pheno 101 | Some pheno 102 | Some pheno 103 | ... | Some pheno 108 | Some pheno 109 | Some pheno 110 |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| Some pheno 101 | 1 | 1 | -1 | ... | 1 | 1 | -1 |\n| Some pheno 102 | 1 | 1 | -1 | ... | 1 | 1 | -1 |\n| Some pheno 103 | -1 | -1 | 1 | ... | -1 | -1 | 1 |\n| ... | ... | ... | ... | ... | ... | ... | ... |\n| Some pheno 108 | 1 | 1 | -1 | ... | 1 | 1 | -1 |\n| Some pheno 109 | 1 | 1 | -1 | ... | 1 | 1 | -1 |\n| Some pheno 110 | -1 | -1 | 1 | ... | -1 | -1 | 1 |\n\nSimilarly, the estimates of environment correlations, in `custom_model.RhoE.out`, show these are all estimated at zero, also as expected under this model.\n\nNotice that in `mgreml`, specifying `--genetic-model` does not require you to also specify `--environment-model` (nor the other way around).\n\nFor the specific cases of genetic correlations all equal to one or all equal to zero, and environment correlations all equal to zero, `mgreml` has two custom options that can be used for such cases instead of `--genetic-model` and `--environment-model`, namely `--rho-genetic 0` or `--rho-genetic 1` and `--rho-environment 0`.\n\nSo, effectively, we could have also estimated the last model using the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --rho-genetic 1 \\\n                   --rho-environment 0 \\\n                   --out ./tutorial/rhoG1_rhoE0\n```\n\nInspection of the log-likelihoods in `custom_model.loglik.out` and `rhoG1_rhoE0.loglik.out` indeed reveal that these models yield an identical fit to the data:\n\n```\nLog-likelihood of model = -103463.59457446574,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 1 genetic factors and 10 environment factors,\ncomprising 10 free genetic factor coefficients and 10 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 31 BFGS iterations.\n```\n\nNotice that the option `--rho-genetic` cannot be combined with `--genetic-model` and, similarly, that `--rho-environment` cannot be combined with `--environment-model`.\n\nIn addition, for the specific case of no genetic variance at all, `mgreml` also has the custom option `--no-var-genetic`. This enforces genetic variance to be absent for all traits in your data. E.g. the following command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --no-var-genetic \\\n                   --out ./tutorial/novarG\n```\n\nyields heritability estimates all equal to zero, as expected, in `novarG.HSq.out`.\n\nNotice that the option `--no-var-genetic` cannot be combined with `--rho-genetic` and/or `--genetic-model`.\n\nFinally, please note that for models constraining correlations and genetic variances in such fashion, the standard errors can be highly misguiding! E.g. if genetic variance is constrained to be equal to zero so then is the resulting heritability estimate, which then in turn has a standard error of zero. But this zero standard error has little practical meaning. Intuitively: if we force the estimator of heritability to equal zero, the estimator will always yield zero with no sampling variability. More formally: so-called regularity conditions break down, messing up the asymptotic theory.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Factor coefficients",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "In case you estimate a model using `mgreml`, either according to some specific structural model (e.g. using `--genetic-model`) or the default saturated model we started with, `mgreml` can report the factor coefficients (i.e. the estimated effect of each factor on each trait) by using the `--factor-coefficients` option.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Poor identification diagnostic",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial",
          "Factor coefficients"
        ],
        "type": "Text_excerpt",
        "value": "In addition to the estimated coefficients, the `--factor-coefficients` also reports the standard error of each estimated coefficients, as well as a diagnostic indicating if the standard error of that coefficient is unreasonably high, which is indicative of poor model identification. Unreasonably high is here defined as a standard error in excess of the standard deviation of the corresponding trait (after correcting for the relevant fixed-effect covariates). \n\nTo put this diagnostic into perspective: in an ordinary least squares context where we are interested in the effect of some regressor *X* on outcome *Y*, the estimated coefficient for that regressor only has such an extreme standard error if *X* (after partialling out the other regressors) is highly unstable (i.e. with a squared sum less than or equal to one), thus constituting a poorly identified coefficient.\n\nAlthough we here look at latent factors rather than observed regressors, in our experience, such a high standard error of an estimated path coefficient in `mgreml` is typically also indicative of poor model identification, in which case you should consider reformulating your model (e.g. with fewer factors and/or fewer free path coefficients).\n\n:warning: please keep in mind that this diagnostic does not necessarily flag all cases of poor identification. E.g. there may be models that are poorly identified, were the standard error falls only marginally below the threshold that our diagnostic uses. In the end, model identification is the responsibility of you, the user. The diagnostic just provides some small guidance in that process.\n\nIn addition to standard errors,  `--factor-coefficients` also returns the complete covariance matrix of those estimates in a separate file. :warning: This covariance matrix may grow very large for large *T*.\n\nPlease notice that if `--factor-coefficients` is combined with `--no-se`, the standard errors, diagnostic for large standard erros, and the covariance matrix of estimated coefficients are all NOT reported.\n\nE.g. the command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --factor-coefficients \\\n                   --out ./tutorial/factors\n```\n\ngenerates, amongst others, the file `factors.coeff.out`, which contains 110 estimated factor coefficients in this case, of which a few lines are shown below:\n\n| trait | factor | estimate | standard error | large (1=yes) |\n| --- | --- | --- | --- | --- |\n| Some pheno 101 | genetic factor 0 | 1.005 | 0.039 | 0 |\n| Some pheno 102 | genetic factor 0 | -0.197 | 0.056 | 0 |\n| Some pheno 103 | genetic factor 0 | 0.285 | 0.056 | 0 |\n| Some pheno 104 | genetic factor 0 | -0.341 | 0.054 | 0 |\n| ... | ... | ... | ... | ... |\n| Some pheno 110 | environment factor 7 | 0.034 | 0.005 | 0 |\n| Some pheno 109 | environment factor 8 | 0.929 | 0.013 | 0 |\n| Some pheno 110 | environment factor 8 | 0.230 | 0.004 | 0 |\n| Some pheno 110 | environment factor 9 | 0.106 | 0.001 | 0 |\n\nFor these estimates, the standard errors are all relatively small (largest standard error is 0.205). In line with this observation, the diagnostic in the last column does not flag any of the standard errors as suspiciously high.\n\nThe file `factors.coeff.var.out` contains a 110-by-110 matrix representing the covariance matrix of those estimates. \n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Variance components",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Similarly, `mgreml` can also return the estimated variance components (again either based on some structural model, or just the saturated model), also including the covariance matrix of those estimated variance components (unless `--no-se` is used). To get these results, use the `--variance-components` option. E.g. the command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --variance-components \\\n                   --out ./tutorial/components\n```\n\ngenerates, amongst others, the file `components.VCs.out`, which contains 110 estimated covariance components in this case, of which a few lines are shown below:\n\n| component type | first trait | second trait | estimate | standard error |\n| --- | --- | --- | --- | --- |\n| genetic covariance | Some pheno 101 | Some pheno 101 | 1.010 | 0.078 |\n| genetic covariance | Some pheno 101 | Some pheno 102 | -0.198 | 0.055 |\n| genetic covariance | Some pheno 101 | Some pheno 103 | 0.286 | 0.055 |\n| genetic covariance | Some pheno 101 | Some pheno 104 | -0.343 | 0.055 |\n| ... | ... | ... | ... | ... |\n| environment covariance | Some pheno 108 | Some pheno 110 | 0.006 | 0.054 |\n| environment covariance | Some pheno 109 | Some pheno 109 | 2.977 | 0.076 |\n| environment covariance | Some pheno 109 | Some pheno 110 | 0.985 | 0.057 |\n| environment covariance | Some pheno 110 | Some pheno 110 | 2.959 | 0.076 |\n\nThe file `components.VCs.var.out` contains a 110-by-110 matrix representing the covariance matrix of those estimates. \n\n:warning: please notice that `--variance-components` does NOT have a diagnostic for unreasonably large standard errors: that diagnostic is only reported for factor coefficients (i.e. when using `--factor-coefficients`).\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Nested models and likelihood-ratio tests",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "`mgreml` can also be used to specify two models at once, to compare them using a likelihood-ratio test, provided the null model is nested with respect to the alternative. E.g. one can use the following command to compare the saturated model to the previously considered model assuming perfect genetic correlations and no environment correlations at all:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-rho-genetic 1 \\\n                   --restricted-rho-environment 0 \\\n                   --out ./tutorial/restricted_rhoG1_rhoE0\n```\n\nInspection of `restricted_rhoG1_rhoE0.loglik.out` reveals that the saturated model fits the data significantly better than this restricted model:\n\n```\nLog-likelihood of nested model (null hypothesis) = -103463.59457446574,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 1 genetic factors and 10 environment factors,\ncomprising 10 free genetic factor coefficients and 10 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 31 BFGS iterations.\n\nLog-likelihood of parent model (alternative hypothesis) = -85227.36758415299,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 10 genetic factors and 10 environment factors,\ncomprising 55 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 53 BFGS iterations.\n\nResults of likelihood-ratio test with 90 degrees of freedom:\nChi-square test statistic is 36472.45398062549\nwith P-value = 0.0\n```\n\nNotice that `--no-var-genetic`, `--genetic-model`, and `--environment-model` also have their restricted counterparts, i.e. `--restricted-no-var-genetic`, `--restricted-genetic-model`, and `--restricted-environment-model`. This means we could have also carried out the preceding comparison of the two models using the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-genetic-model ./tutorial/gen_model.txt \\\n                   --restricted-environment-model ./tutorial/env_model.txt \\\n                   --out ./tutorial/restricted_custom_model\n```\n\nAs expected, the file `restricted_custom_model.loglik.out` contains results that are identical to those found in `restricted_rhoG1_rhoE0.loglik.out`. \n\nAs a further example, to test if the genetic components even improve the fit of the model in the first place, we could carry out the command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-no-var-genetic \\\n                   --out ./tutorial/restricted_novarG\n```\n\nwhere output file `restricted_novarG.loglik.out` reveals that allowing for genetic variance significantly improves the fit of the model:\n\n```\nLog-likelihood of nested model (null hypothesis) = -94524.01375204933,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 1 genetic factors and 10 environment factors,\ncomprising 0 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 20 BFGS iterations.\n\nLog-likelihood of parent model (alternative hypothesis) = -85227.36758415299,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 10 genetic factors and 10 environment factors,\ncomprising 55 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 53 BFGS iterations.\n\nResults of likelihood-ratio test with 55 degrees of freedom:\nChi-square test statistic is 18593.292335792677\nwith P-value = 0.0\n```\n\nAs before, `--restricted-no-var-genetic`, `--restricted-rho-genetic`, and/or `--restricted-genetic-model` cannot be combined with one another. Similarly, `--restricted-rho-environment` and `--restricted-environment-model` cannot be combined with each other.\n\n:warning: **when using options such as `--restricted-genetic-model` and `--genetic-model`, it is your own responsibility to ensure the restricted model is nested with respect to the other model.** `mgreml` only inspects nestedness superficially. The best way to allow `mgreml` to assert nestedness is to appropriately label the factors in both models.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "A further example of estimating factor structures",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial",
          "Nested models and likelihood-ratio tests"
        ],
        "type": "Text_excerpt",
        "value": "As indicated previously, the genetic components of the traits in truth follow the block structure shown in `block_model.txt`, where there at two blocks of five traits, where each block has its own block-specific genetic factors, ensuring genetic correlations within each block and no genetic correlation between the blocks.\n\nThus, an interesting sequence of analyses would be to estimate and compare three models. Model I: no genetic variance at all, Model II: a genetic factor model in accordance with `block_model.txt`, and Model III: a saturated genetic factor model. In all three models we then assume the environmental model is saturated.\n\nFirst, let's compare Model I (restricted) and Model II (main) using the following `mgreml` command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-no-var-genetic \\\n                   --genetic-model ./tutorial/block_model.txt \\\n                   --out ./tutorial/restricted_novarG_main_blockG\n```\n\nOutput in `restricted_novarG_main_blockG.loglik.out` reveals that the genetic factor model in accordance with `block_model.txt` fits the data far better than the model with no genetic variance:\n\n```\nLog-likelihood of nested model (null hypothesis) = -94524.01375204933,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 1 genetic factors and 10 environment factors,\ncomprising 0 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 20 BFGS iterations.\n\nLog-likelihood of parent model (alternative hypothesis) = -85233.78515817931,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 10 genetic factors and 10 environment factors,\ncomprising 30 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 54 BFGS iterations.\n\nResults of likelihood-ratio test with 30 degrees of freedom:\nChi-square test statistic is 18580.457187740045\nwith P-value = 0.0\n```\n\nSecond, let's compare Model II (restricted) and Model III (main) using the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-genetic-model ./tutorial/block_model.txt \\\n                   --out ./tutorial/restricted_blockG_main_satG\n```\n\nNow, the output in `restricted_blockG_main_satG.loglik.out` reveals that Model III does not yield a better fit than Model II (i.e. comparison of the models yields a likehood-ratio test statistic equals 12.8, which under the 25 additional degrees of freedom that Model III has over Model II, gives an insignificant *p*-value):\n\n```\nLog-likelihood of nested model (null hypothesis) = -85233.78515817931,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 10 genetic factors and 10 environment factors,\ncomprising 30 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 54 BFGS iterations.\n\nLog-likelihood of parent model (alternative hypothesis) = -85227.36758415299,\nbased on data on 10 traits and 4980 observations,\nwith a model consisting of 10 genetic factors and 10 environment factors,\ncomprising 55 free genetic factor coefficients and 55 free environment factor coefficients in turn.\nControlled for 100 fixed-effect covariates in total in this model.\nEstimates converged after 53 BFGS iterations.\n\nResults of likelihood-ratio test with 25 degrees of freedom:\nChi-square test statistic is 12.835148052632576\nwith P-value = 0.9784583536238805\n```\n\nAlso, notice how close the estimated genetic correlations in `restricted_blockG_main_satG.RhoG.null.out` (i.e. from Model II) are to the true genetic correlations. Finally, observe that the standard errors for the non-zero genetic correlations in Model II are considerably smaller than those in Model III (i.e. comparing `restricted_blockG_main_satG.RhoG.null.SE.out` and `restricted_blockG_main_satG.RhoG.alt.SE.out`).\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Estimation reinitialisation",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "By default, `mgreml` will not store any intermediate results. However, using the `--store-iter` option, users can specify every how many iterations they want the current parameter estimates to be stored. E.g. `--store-iter 10` will make `mgreml` store estimates every ten iterations. The estimates will be stored in a so-called `.pkl` with a prefix a set by the `--out` option. This `.pkl` file contains the model specification as well as the estimates of that model in a given iteration.\n\nSuch a `.pkl` file can also be used to reinitialise `mgreml` e.g. if you accidentally switched off your computer halfway through an analysis. For instance\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --store-iter 50 \\\n                   --out ./tutorial/covar\n```\n\nmakes `mgreml` store results every 50 iterations. Then, if the preceding analysis has reached e.g. up until iteration 52 before a power outage, we could reinitialise later on using the following command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --reinitialise ./tutorial/covar.estimates.iter.50.bfgs.pkl \\\n                   --out ./tutorial/covar_reinitialised\n```\n\nNotice that as such `.pkl` files already implicitly contain the full model specification, the option `--reinitialise` cannot be combined with options such as `--genetic-model`, `--rho-environment`, `--no-var-genetic`, and so on.\n\nIn case `--store-iter` is used when estimating a nested versus alternative model (i.e. in conjunction with one of the `--restricted-...` options), `--store-iter` stores two sets of `.pkl` files, namely one set with filenames containing `.estimates.` (denoting the alternative model) and the other containing `.estimates0.` (denoting the nested model).\n\n`.pkl` files can also be used to reinitialise a restricted model, using the `--restricted-reinitialise` option. E.g. the command\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --restricted-rho-genetic 1 \\\n                   --restricted-rho-environment 0 \\\n                   --store-iter 10 \\\n                   --out ./tutorial/restricted_rhoG1_rhoE0\n```\nmakes `mgreml` store two sets of `.pkl` files (i.e. a file for every ten iterations, for both the restricted and alternative model) and\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --reinitialise ./tutorial/restricted_rhoG1_rhoE0.estimates.iter.30.bfgs.pkl \\\n                   --restricted-reinitialise ./tutorial/restricted_rhoG1_rhoE0.estimates0.iter.30.bfgs.pkl \\\n                   --out ./tutorial/restricted_rhoG1_rhoE0_reinitialised\n```\nreinitialises estimation for the null and alternative model from appropriate `.pkl` files. Notice that analogous to `--reinitialise`, the `--restricted-reinitialise` option cannot be combined with options such as `--restricted-environment-model` and `--restricted-rho-genetic`, as the `.pkl` file already contains the full model specification.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Mediation analysis using GREML",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Rietveld et al. (2023; see [Citations](#citations)) propose a structural equation model (SEM), which can be used to answer the question to which degree the genetic variance of outcome *Y* is mediated by supposed mediator *M*. This approach is referred to as Mediation Analysis using GREML (MA-GREML).\n\n`mgreml` has a `--mediation` option which estimates the relevant parameters from this SEM by, first, fitting a bivariate saturated model for *Y* and *M* and, second, by transforming the estimated variance components and their sampling variance matrix to estimates and standard errors of the parameters in the SEM.\n\nThe `--mediation` option forces `mgreml` to only consider the first two phenotypes in your phenotype file, where the first phenotype is treated as outcome *Y* and the second phenotype as mediator *M*. Any subsequent phenotypes will be ignored.\n\nIn case you do not wish standard errors to be reported, you can combine `--mediation` with the `--no-se` option. Please note that `--mediation` cannot be combined with any of the following options: `--(restricted-)genetic-model`, `--(restricted-)rho-genetic`, `--(restricted-)no-var-genetic`, `--(restricted-)environment-model`, `--(restricted-)rho-environment`, `--(restricted-)reinitialise`, and `--store-iter`.\n\nThe resulting SEM estimates will be stored in an output file ending in `.mediation.out`.\n\nAs an example, consider `mediation.txt` in the subdirectory `tutorial`. This file comprises two phenotypes, labelled `Outcome` and `Mediator`. A few lines from this file are shown below:\n\n| FID | IID | Outcome | Mediator |\n| --- | --- | --- | --- |\n| FID 1 | IID 5001 | -11.437 | -10.670 |\n| FID 2 | IID 5002 | 2.618 | 1.947 |\n| FID 3 | IID 5003 | 10.586 | 5.800 |\n| ... | ... | ... | ... |\n| FID 4998 | IID 9998 | -11.536 | -12.892 |\n| FID 4999 | IID 9999 | -3.536 | -2.089 |\n| FID 5000 | IID 10000 | -9.323 | -13.177 |\n\nAn overview of the SEM that underlies this data is shown in the figure below:\n\n![Structural equation model used to generate phenotypes `mediation.txt`](https://github.com/devlaming/mgreml/blob/development/tutorial/sem.png?raw=true)\n\nThis SEM for *M* and *Y* is equivalent to the following two equations: (1) *M* = 3*G* + 4*G*<sup>\\*</sup> + 5*E*<sup>\\*</sup> and (2) *Y* = *M* + 2*G* + 4*E* = 5*G* + 4*G*<sup>\\*</sup> + 5*E*<sup>\\*</sup> + 4*E*. The last expression in Equation (2) is found by substituting *M* by its underlying terms.\n\nIn this model, *M* has a genetic variance of 25, of which 9 is caused by a genetic factor that also has a direct effect on the outcome *Y*. The remaining genetic variance is caused by a genetic factor that has no direct bearing on *Y*. In addition, *M* has an environment variance of 25. Thus, the SNP-based heritability of *M* is 50%. Finally, *M* is affected by the fixed-effect covariates in `covariates.txt`.\n\nUnder this model, *M* has an effect on *Y* equal to 1. Moreover, the aforementioned genetic factor *G* that directly affects both *M* and *Y*, has a direct effect of 2 on *Y*. In addition, *Y* has an idiosyncratic environment factor, which adds 16 to its variance. The total genetic variance and environment variance of *Y* are both equal 41, putting the SNP-based heritability of *Y* also at 50%. Finally, *Y* is also affected by the fixed-effect covariates in `covariates.txt`.\n\nUnder this model, the genetic variance of *Y* that is mediated by *M* equals 25. This we refer to as the indirect effect (analogous to the mediation literature). If we now consider *R* = *Y* - *Mb*, where *b* is the true effect of *M* on *Y* (here, *b* = 1) and, thus, *R* is the part of *Y* that is free from the true contribution of *M* to *Y*, then *R* = 2*G* + 4*E*. In other words, *R* has an idiosyncratic genetic variance equal to four. Put differently, out of the full genetic variance of *Y* (which equals 41), only 4 is truly non-mediated. This non-mediated genetic variance we refer to as the direct effect. Thus, the direct effect here equals 4, and the proportion of genetic variance of *Y* that is not mediated by *M* then equals 4/41 = 9.76%.\n\nBearing these considerations, let's run the following `mgreml` command:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/mediation.txt \\\n                   --covar ./tutorial/covar.txt --mediation \\\n                   --out ./tutorial/try_mediation\n```\n\nNow, let's have a look at the output file `try_mediation.mediation.out`:\n\n```\nMA-GREML (Rietveld et al., 2023) results:\nMediator M = Mediator; Outcome Y = Outcome\nGenetic variance M (S.E.) = 24.842148570667977 (1.196723311443547)\nGenetic variance Y (S.E.) = 42.45409805220828 (2.0056705514777766)\nEffect M on Y (S.E.; Wald test statistic; asymptotic P value)* = 0.9852851661820797 (0.015112075740820264; 4250.848682017674; 0.0)\nIndirect effect (S.E.; Wald test statistic; asymptotic P value)* = 24.116431374238918 (1.3575738009054434; 315.57252934910156; 0.0)\nDirect effect (S.E.; Wald test statistic; asymptotic P value)* = 4.465297347901618 (0.4541251486913681; 96.68289860365418; 0.0)\nProportion of genetic variance Y not mediated by M (S.E.) = 0.10517941854306695 (0.009209180342654846)\n* Wald test statistic and P value under null hypothesis that parameter of interest = 0\nLog-likelihood restricted model where M has no genetic variance = -31083.96823086367\nLog-likelihood restricted model where M has no effect on Y = -32233.66196536825\nSupremum restricted models is achieved when M has no genetic variance: test has 2 degrees of freedom \nLog-likelihood unrestricted model with indirect effect = -30531.931576827894\nChi-square test statistic for presence of indirect effect = 1104.0733080715509\nwith P-value = 0.0\n```\n\nEstimates are all less than two standard errors away from the true parameters of the structural model. Moreover, estimates in `try_mediation.HSq.out` also show that the estimated heritabilities are less than two standard errors removed from the true value (50% for both). In addition, according to the Wald test, the estimated effect of *M* on *Y* is significant, the indirect effect of genes on *Y* via *M* is significant, and the direct effect of genes on *Y* is also significant. Finally, observe that the likelihood-ratio test (more reliable than the Wald test) also finds the estimated indirect genetic effect on *Y* (i.e. mediated by *M*) to be highly significant.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Data formats and management",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "The input files that follow the options `--pheno`, `--covar`, `--covar-model`, `--genetic-model`, `--environment-model`, `--restricted-genetic-model`, `--restricted-environment-model` can be comma-, tab-, or space-separated. Just make sure to be completely consistent within each file. :warning: Please make sure your labels (e.g. phenotype labels, covariate labels, etc.) do not contain commas.\n\nThe options `--pheno`, `--covar`, `--covar-model`, `--genetic-model`, `--environment-model`, `--restricted-genetic-model`, `--restricted-environment-model` have modifiers `nolabelpheno`, `nolabelcovar`, and `nolabelfactor` to indicate when headers (e.g. phenotype labels) are absent. E.g. the following options are possible in `mgreml`: `--pheno myphen.txt nolabelpheno` and `--covar-model mycovmodel.txt nolabelpheno nolabelcovar`). However, as `mgreml` is a multivariate method, we strongly recommend always providing headers to `mgreml`, so everything is labelled in terms of input as well as output.\n\nNaturally, `mgreml` performs basic data management, e.g. in terms of figuring out for which individuals we have phenotypic data as well as GRM data (and data on covariates, if applicable). In case `--covar-model` is used, `mgreml` also tests if there are any covariates that affect no phenotype at all, and if so, excludes such covariates.\n\nFinally, `mgreml` can also perform relatedness pruning when using the `--grm-cutoff` option. E.g. the following command selects a subset of individuals such that relatedness in the GRM is nowhere in excess of 0.1:\n\n```\npython ./mgreml.py --grm ./tutorial/data --pheno ./tutorial/pheno.txt \\\n                   --covar ./tutorial/covar.txt \\\n                   --grm-cutoff 0.1 \\\n                   --out ./tutorial/pruned\n```\n\nwhich, in this case, causes the sample size to decrease by 44, as in shown in part of the log-file below:\n\n```\n2. CLEANING YOUR DATA\n[...]\nAPPLYING RELATEDNESS CUTOFF\nCurrent memory usage is 284MB\nRemoving individuals such that there is no relatedness in excess of 0.1 in GRM\nFirst pass: dropped 40 individuals with only one relatedness value in excess of 0.1\nSecond pass: dropped 4 individuals with relatedness values in excess of 0.1\nRelatedness cutoff has been applied\nRemaining sample size is 4956\n[...]\n```\n\nHere, `mgreml` follows the greedy algorithm developed by Boppana and Halld\u00f3rsson (1992); [doi:10.1007/BF01994876](https://link.springer.com/article/10.1007/BF01994876). Importantly, `mgreml` does this pruning at such a stage and in such a manner that sample size is maximised. E.g. for a pair of individuals with a relatedness in excess of the threshold, we try to keep the observation with the lowest missingness in terms of phenotypes and covariates.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Missing data and unbalancedness",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "In general, `mgreml` simply tries to preserve sample size at each turn. E.g. if an individual has missing values only for a subset of the phenotypes, `mgreml` keeps that individual in the data, by introducing phenotype-by-individual-specific dummies (i.e. dummies that control for individual *i* having a missing value for trait *t*). Even when a covariate is missing, sometimes parts of that observation can still be salvaged (i.e. if the missing covariate does not affect all phenotypes according to `--covar-model`).\n\nIntroducing dummies to control for gaps in the data can become computationally highly demanding. Controlling for fixed-effect covariates has a computational complexity of the order *NT*<sup> 2</sup> provided the number of unique covariates is of the order 1. However, if the missingness in each trait is on average proportional to sample size (*N*), then the total number of unique covariates needed to control for this missingness becomes of the order *NT*, and thereby the computational complexity of controlling for this missingness of the order *N*<sup> 3</sup>*T*<sup> 2</sup>, which is prohibitively complex for large *N* and *T*.\n\nTherefore, `mgreml` has a `--drop-missings` option, whereby all individuals are dropped that have at least one missing phenotype and/or at least one missing covariate that is relevant (either because `--covar-model` has not been used, or because the file following `--covar-model` indicates the covariate with a missing value for a given individual affects at least one trait).\n\n`mgreml` can handle missing values in the phenotype and/or covariate file when encoded using one of the following formats (comma-separated list of formats, with each format between single quotation marks):\n\n\u2018\u2019, \u2018-999\u2019, \u2018#N/A\u2019, \u2018#N/A N/A\u2019, \u2018#NA\u2019, \u2018-1.#IND\u2019, \u2018-1.#QNAN\u2019, \u2018-NaN\u2019, \u2018-nan\u2019, \u20181.#IND\u2019, \u20181.#QNAN\u2019, \u2018\u2019, \u2018N/A\u2019, \u2018NA\u2019, \u2018NULL\u2019, \u2018NaN\u2019, \u2018n/a\u2019, \u2018nan\u2019, \u2018null\u2019.\n\nThis list is based on https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html, which is the reference manual of the pandas function that `mgreml` uses to read in phenotype and covariate data.\n\n:warning: Your phenotypes and covariates should not contain non-numeric stuff other than missing values!\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Advanced options",
        "parent_header": [
          "MGREML (Multivariate GREML) `beta v1.1.1`",
          "Tutorial"
        ],
        "type": "Text_excerpt",
        "value": "Note that `mgreml` has a few advanced options regarding the estimation algorithm. First, `--newton` forces `mgreml` to use a Newton algorithm for solving the optimisation problem instead of BFGS. Although in theory this approach requires fewer iterations than BFGS to converge, we recommend using BFGS: especially for large *T*, single BFGS iterations are so much faster than single Newton iterations, that the overall runtime of the BFGS algorithm is much lower than the runtime of the Newton algorithm.\n\nIn addition, `mgreml` considers the estimates to have converged if the root mean squared sum of the gradient vector (taking scale of traits and sample size into account) is below 10<sup>&minus;5</sup>. For conceptual ease, we refer to this criterion as length of the gradient. The option `--grad-tol` can be used to specify a different treshold.\n\n:warning: We do **NOT** recommend deviating from 10<sup>&minus;5</sup> by more than one order of magnitude. E.g. you could use `--grad-tol 5E-5` or `--grad-tol 1e-6`. However, we de **NOT** recommend e.g. `--grad-tol 1E-9`, as such a threshold requires a degree of convergence that is often beyond numerical precision, nor do we recommend e.g. `--grad-tol 0.01`, as this is too lenient; the optimisation procedure simply has not converged when the latter convergence criterion is met.\n\nWhen `mgreml` finds there to be strong multicollinearity in your phenotypes when controlling for the fixed-effect covariates, `mgreml` will return an error. In general, models with very high collinearity between phenotypes are poorly identified. Thus, in case `mgreml` returns this error, we recommend you consider a modified set of phenotypes (e.g. a strict subset of your phenotypes, or at least one phenotype defined slightly differently). In case you want to override this error, please use the `--ignore-collinearity` option. However, when using this option, `mgreml` may fail to converge at all, and should `mgreml` converge, the resulting estimates should be interpreted with great caution. Therfore, this option should only be used as a last resort.\n\nFinally, `mgreml` also provides the option to perform pairwise bivariate estimation when analysing three or more traits. Such pairwise estimation is performed by using the `--pairwise` option. In case of strong multicollinearity between your phenotypes, this option can sometimes be helpful. However, in general, we would recommend figuring out what exactly causes the multicollinearity and whether it can be resolved in some other fashion (e.g. by analysing a slightly different subset of phenotypes), rather than switchting from multivariate estimation to pairwise bivariate estimation. Also, note that `--pairwise` cannot be combined with the following options: `--mediation`, `--(restricted-)genetic-model`, `--(restricted-)no-var-genetic`, `--(restricted-)environment-model`, `--factor-coefficients`, `--variance-components`, `--store-iter`, and/or `--(restricted-)reinitialise`. :warning: The `--pairwise` option generates *T*\u00d7(*T*\u22121)/2 sets of output files (one set for each unique combination of two traits). Thus, **the number of output files can be very large**.\n"
      },
      "source": "https://raw.githubusercontent.com/devlaming/mgreml/master/README.md",
      "technique": "header_analysis"
    }
  ]
}