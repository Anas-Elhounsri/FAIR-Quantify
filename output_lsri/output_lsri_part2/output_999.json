{
  "application_domain": [
    {
      "confidence": 21.99,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cistrome/MIRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-10-15T14:16:24Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-24T10:45:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python package for analysis of multiomic single cell RNA-seq and ATAC-seq."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "**Multimodal models for Integrated Regulatory Analysis**, or MIRA,  is a python package for analyzing\nthe dynamic processes of gene regulation using single-cell multiomics datasets. \n\nMIRA works on top of `Scanpy <https://scanpy.readthedocs.io/en/stable/>`_ and `Anndata <https://anndata.readthedocs.io/en/latest/>`_\nto provide a rich, comprehensive framework integrating accessibility and expression data for more insights\ninto your data. MIRA includes methods for:\n\n* Multimodal topic modeling\n* Construction a joint representation of cells\n* Regulator and functional enrichment\n* Pseudotime trajectory inference\n* *Cis*-regulatory modeling\n* Finding divergences between local chromatin accessibility and gene expression\n\n\\.\\.\\. And more! For mora, check out the `MIRA preprint <https://www.biorxiv.org/content/10.1101/2021.12.06.471401v1.full.pdf>`_ on bioarxiv. \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9581563624978996,
      "result": {
        "original_header": "CODAL",
        "type": "Text_excerpt",
        "value": "`CODAL <https://rdcu.be/dgCQF>`_ is our new algorithm for batch effect correction. All MIRA topic models use the new CODAL algorithm for inference.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9902883356428526,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "MIRA takes count matrices from scRNA-seq, scATAC-seq, or scRNA-seq+scATAC-seq from a single-cell multiomics experiment,\nwhere each cell is measured using both assays, and measurements are linked by a shared cell\nbarcode. We demonstrated MIRA using SHARE-seq data and commercial 10X genomics multiome data, \nbut MIRA's assumptions and models are extensible to other multiome protocols. \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9934090613312132,
      "result": {
        "original_header": "Learning Curve",
        "type": "Text_excerpt",
        "value": "If you have experience with Scanpy, we structured MIRA to follow similar conventions \nso that it would feel familiar and intuitive. In fact, most MIRA analyses\nseamlessly weave between MIRA and Scanpy functionalities for cleaning, slicing,\nand plotting the data. In general, the first positional argument of a MIRA \nfunction is an AnnData object, and the following keyword arguments change \nhow the function transforms that object.  \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "See `MIRA's website <https://mira-multiome.readthedocs.io/>`_ for tutorials and API reference.\n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cistrome/MIRA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_atlas_integration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_atlas_integration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_streamgraphs.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_streamgraphs.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_joint_representation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_joint_representation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_NITE_LITE_modeling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_NITE_LITE_modeling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/code_ocean_figure_generation_notebook.nbconvert.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/code_ocean_figure_generation_notebook.nbconvert.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_mouse_brain.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_mouse_brain.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_topic_analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_topic_analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_cisregulatory_modeling.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_cisregulatory_modeling.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_assemble_gene_annotations.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_assemble_gene_annotations.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_cellrank.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_cellrank.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_CODAL.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_CODAL.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_mira.time.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_mira.time.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_topic_model_tuning_full.ipynb"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/docs/source/notebooks/tutorial_topic_model_tuning_full.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cistrome/MIRA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cistrome/MIRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Kladi\n\nTo install Kladi's dependencies, I've included an environment.yaml with the repository. If you haven't already, install miniconda on your system:\n\n```\n$ wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n$ bash Miniconda3-latest-Linux-x86_64.sh\n```\n\nThen, create a directory to work in and move to that directory:\n\n```\n$ mkdir ~/kladi && cd ~/kladi\n```\n\nClone the repository:\n\n```\n$ git clone <url>\n```\n\nThen install dependencies using:\n\n```\n$ conda env create -f environment.yaml\n```\n\nOnce, created, use:\n\n```\n$ conda activate kladi\n```\n\nTo enter the environment. For analysis, I recommend adding jupyter and scanpy. If you will be working with a GPU, also install the requesite CUDA toolkit:\n\n```\n(kladi) $ conda install jupyter scanpy\n(kladi) $ conda install cudatoolkit==<version>\n```\n\nLastly, install a kernel for your environment:\n\n```\n(kladi) $ python -m ipykernel install --user --name kladi\n```\n\nAnd start the notebook server:\n\n```\n(kladi) $ jupyter notebook\n```"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/miscdocs/github_install_tutorial.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "MIRA can be installed from `PyPI <https://pypi.org/project/mira-multiome>`_:\n\n.. code-block:: bash\n\n    pip3 install mira-multiome\n\n\nInstallation will take about a minute. To set up an a new analysis, we recommend starting with a fresh environment:\n\n.. code-block:: bash\n\n    conda create --name mira-env -c conda-forge -c pytorch -c bioconda scanpy jupyter leidenalg\n    conda activate mira-env\n    pip3 install mira-multiome\n    python -m ipykernel install --user --name mira-env\n\nTo use the environment in a jupyter notebook, start the notebook server, then go to Kernel > Change kernel > mira-env.\n\n**A conda distribution is coming soon.**\n\n\nInstalling with GPU support\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTraining on a GPU reduces the training time of MIRA topic models.\nTo install MIRA with PyTorch compiled with GPU support, first install MIRA, as above. Then, follow instructions \nat `pytorch.org <https://pytorch.org/get-started/locally/>`_ to find the version of PyTorch that suits your system.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9972469503552395,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": ".. image:: https://raw.githubusercontent.com/AllenWLynch/MIRA/main/docs/source/_static/data_example.png\n    :width: 350\n    :align: center \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9964425977409258,
      "result": {
        "original_header": "Learning Curve",
        "type": "Text_excerpt",
        "value": ".. image:: https://raw.githubusercontent.com/AllenWLynch/MIRA/main/docs/source/_static/code_example.png\n    :width: 600\n    :align: center \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9958866431442935,
      "result": {
        "type": "Text_excerpt",
        "value": ".. image:: https://raw.githubusercontent.com/AllenWLynch/MIRA/main/docs/source/_static/mira_logo.png\n  :width: 400\n  :alt: MIRA\n  :align: center \n.. image:: https://badge.fury.io/py/mira-multiome.svg\n          :target: https://badge.fury.io/py/mira-multiome \n.. image:: https://readthedocs.org/projects/mira-multiome/badge/?version=latest&style=plastic \n.. image:: https://codeocean.com/codeocean-assets/badge/open-in-code-ocean.svg\n    :target: https://codeocean.com/capsule/6761625/tree \n.. image:: https://img.shields.io/conda/pn/liulab-dfci/mira-multiome\n    :target: https://anaconda.org/bioconda/mira-multiome \n.. image:: https://zenodo.org/badge/DOI/10.1101/2021.12.06.471401.svg\n    :target: https://www.nature.com/articles/s41592-022-01595-z \n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cistrome/MIRA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MIRA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cistrome"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 3801162,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 568742,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://mira-multiome.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://scanpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://anndata.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cistrome",
          "type": "User"
        },
        "date_created": "2023-01-10T21:18:32Z",
        "date_published": "2023-05-16T19:20:33Z",
        "description": "**Multi-batch Single Cell Comparative Atlas Construction by Deep Learning Disentanglement**\r\nAllen W. Lynch<sup>1,2</sup>, Myles Brown<sup>3,4</sup>, and Clifford A. Meyer<sup>2,3,5,*</sup>\r\n_Nature Communications_, 2023\r\n\r\n<sup>1</sup> Department of Biomedical Informatics, Harvard Medical School, Boston MA, USA \r\n<sup>2</sup> Department of Data Science, Dana-Farber Cancer Institute, Boston MA, USA. \r\n<sup>3</sup> Center for Functional Cancer Epigenetics, Dana-Farber Cancer Institute, Boston, MA, USA.\r\n<sup>4</sup> Department of Medical Oncology, Dana-Farber Cancer Institute, Brigham and Women's Hospital, and Harvard Medical School, Boston, MA, USA.\r\n<sup>5</sup> Department of Biostatistics, Harvard T.H. Chan School of Public Health, Boston, MA, USA.\r\n\r\n<sup>*</sup>Correspondence to: cliff_meyer@ds.dfci.harvard.edu\r\n\r\n**Abstract**\r\n\r\nCell state atlases constructed through single cell RNA-seq and ATAC-seq analysis are powerful tools for analyzing the effects of genetic and drug treatment-induced perturbations on complex cell systems. Comparative analysis of such atlases can yield new insights into cell state and trajectory alterations. Perturbation experiments often require that single cell assays be carried out in multiple batches, which can introduce technical distortions that confound the comparison of biological quantities between different batches. Here we propose CODAL, a variational autoencoder-based statistical model which uses a novel mutual information regularization technique to explicitly disentangle factors related to technical and biological effects. We demonstrate CODAL\u2019s capacity for batch-confounded cell type discovery when applied to simulated datasets and embryonic development atlases with gene knockouts. CODAL improves the representation of RNA-seq and ATAC-seq modalities, yields interpretable modules of biological variation, and enables the generalization of other count-based generative models to multi-batched data.\r\n\r\n",
        "html_url": "https://github.com/cistrome/MIRA/releases/tag/1.0.0a1",
        "name": "CODAL Nature Communications, 2023",
        "release_id": 103213498,
        "tag": "1.0.0a1",
        "tarball_url": "https://api.github.com/repos/cistrome/MIRA/tarball/1.0.0a1",
        "type": "Release",
        "url": "https://api.github.com/repos/cistrome/MIRA/releases/103213498",
        "value": "https://api.github.com/repos/cistrome/MIRA/releases/103213498",
        "zipball_url": "https://api.github.com/repos/cistrome/MIRA/zipball/1.0.0a1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AllenWLynch",
          "type": "User"
        },
        "date_created": "2023-01-10T18:40:34Z",
        "date_published": "2023-05-25T19:48:32Z",
        "description": "Version 1 of MIRA, as originally released. Version 2, which will be released upon publication of \"CODAL\", will supplant version 1 with extensions and improvements to many core features.",
        "html_url": "https://github.com/cistrome/MIRA/releases/tag/1.0",
        "name": "MIRA version 1",
        "release_id": 104313047,
        "tag": "1.0",
        "tarball_url": "https://api.github.com/repos/cistrome/MIRA/tarball/1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cistrome/MIRA/releases/104313047",
        "value": "https://api.github.com/repos/cistrome/MIRA/releases/104313047",
        "zipball_url": "https://api.github.com/repos/cistrome/MIRA/zipball/1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "AllenWLynch",
          "type": "User"
        },
        "date_created": "2021-12-02T15:59:14Z",
        "date_published": "2021-12-02T18:04:35Z",
        "html_url": "https://github.com/cistrome/MIRA/releases/tag/0.0.0a1",
        "name": "0.0.0a1",
        "release_id": 54520810,
        "tag": "0.0.0a1",
        "tarball_url": "https://api.github.com/repos/cistrome/MIRA/tarball/0.0.0a1",
        "type": "Release",
        "url": "https://api.github.com/repos/cistrome/MIRA/releases/54520810",
        "value": "https://api.github.com/repos/cistrome/MIRA/releases/54520810",
        "zipball_url": "https://api.github.com/repos/cistrome/MIRA/zipball/0.0.0a1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "* pytorch\n* pyro-ppl\n* tqdm\n* moods\n* pyfaidx\n* matplotlib\n* lisa2\n* requests\n* networkx\n* numpy\n* scipy\n* optuna\n* anndata\n"
      },
      "source": "https://raw.githubusercontent.com/cistrome/MIRA/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:46:25",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 56
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}