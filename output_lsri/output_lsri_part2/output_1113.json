{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "@article{10.1093/bioinformatics/btac564,\n    author = {Kazemi, Parham and Wong, Johnathan and Nikoli\u0107, Vladimir and Mohamadi, Hamid and Warren, Ren\u00e9 L and Birol, Inan\u00e7},\n    title = \"{ntHash2: recursive spaced seed hashing for nucleotide sequences}\",\n    journal = {Bioinformatics},\n    volume = {38},\n    number = {20},\n    pages = {4812-4813},\n    year = {2022},\n    month = {08},\n    issn = {1367-4803},\n    doi = {10.1093/bioinformatics/btac564},\n    url = {https://doi.org/10.1093/bioinformatics/btac564},\n    eprint = {https://academic.oup.com/bioinformatics/article-pdf/38/20/4812/46535020/btac564.pdf},\n}\n\n@article{doi:10.1093/bioinformatics/btw397,\nauthor = {Mohamadi, Hamid and Chu, Justin and Vandervalk, Benjamin P. and Birol, Inanc},\ntitle = {ntHash: recursive nucleotide hashing},\njournal = {Bioinformatics},\nvolume = {32},\nnumber = {22},\npages = {3492},\nyear = {2016},\ndoi = {10.1093/bioinformatics/btw397},\nURL = { + http://dx.doi.org/10.1093/bioinformatics/btw397},\neprint = {/oup/backfile/Content_public/Journal/bioinformatics/32/22/10.1093_bioinformatics_btw397/3/btw397.pdf}\n}\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/CITATION.bib",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcgsc/ntHash"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-05-15T18:44:10Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T15:11:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Fast hash function for DNA/RNA sequences"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8701489285774573,
      "result": {
        "original_header": "Publications",
        "type": "Text_excerpt",
        "value": "Parham Kazemi, Johnathan Wong, Vladimir Nikoli\u0107, Hamid Mohamadi, Ren\u00e9 L Warren, Inan\u00e7 Birol, ntHash2: recursive spaced seed hashing for nucleotide sequences, Bioinformatics, 2022;, btac564, [https://doi.org/10.1093/bioinformatics/btac564](https://doi.org/10.1093/bioinformatics/btac564) \nHamid Mohamadi, Justin Chu, Benjamin P Vandervalk, and Inanc Birol.\nntHash: recursive nucleotide hashing.\n*Bioinformatics* (2016) 32 (22): 3492-3494.\n[doi:10.1093/bioinformatics/btw397](http://dx.doi.org/10.1093/bioinformatics/btw397)\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9904517386653604,
      "result": {
        "type": "Text_excerpt",
        "value": "ntHash is an efficient rolling hash function for k-mers and spaced seeds. \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcgsc/ntHash/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/bcgsc/ntHash/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 13
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcgsc/ntHash/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bcgsc/ntHash"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Installation"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/ntHash/master/update-docs.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "Make sure [Meson](https://mesonbuild.com/) is installed on the system.\n\nDownload the repo (either from the releases section or close using `git clone https://github.com/bcgsc/ntHash`). Setup meson in an arbitrary directory (e.g. `build`), by running the following command in the project's root (include `--prefix=PREFIX` set the installation prefix to `PREFIX`):\n\n```shell\nmeson setup --buildtype=release --prefix=PREFIX build\n```\n\nThen, install the project and its dependencies using:\n\n```shell\nmeson install -C build \n```\n\nThis will install `include/nthash` and `lib/libnthash.a` to the installation prefix.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9747440390137215,
      "result": {
        "original_header": "For developers",
        "type": "Text_excerpt",
        "value": "If you would like to contribute to the development of ntHash, after forking/cloning the repo, create the `build` directory without the release flag:\n```\nmeson setup build\n```\nCompile the code, tests, and benchmarking script using:\n```\nmeson compile -C build\n```\n \nIf compilation is successful, `libnthash.a` will be available in the `build` folder. The benchmarking script is also compiled as the `bench` binary file in `build`. \nBefore sending a PR, make sure that: \n- tests pass by running `meson test` in the project directory\n- code is formatted properly by running `ninja clang-format` in the `build` folder (requires `clang-format` to be available)\n- coding standards have been met by making sure running `ninja clang-tidy-check` in `build` returns no errors (requires `clang-tools` to be installed)\n- documentation is up-to-date by running `ninja docs` in `build` (requires [doxygen](https://www.doxygen.nl/))\n \n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/bcgsc/ntHash/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics, bloom-filter, genomics, hash, hash-algorithm, hash-methods, k-mer-hashing"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Hamid Mohamadi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://raw.githubusercontent.com/bcgsc/ntHash/master/nthash-logo.png"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ntHash"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "bcgsc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 97122,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Meson",
        "size": 1262,
        "type": "Programming_language",
        "value": "Meson"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 194,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mohamadi",
          "type": "User"
        },
        "date_created": "2022-09-01T19:49:04Z",
        "date_published": "2022-09-04T18:42:21Z",
        "description": "- ntHash2 paper just published: \r\n[https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac564/6674501](https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/btac564/6674501) \r\n\r\n- The hash values produced by version 2.3.0 of ntHash differ from version 2.2.0. in The new version the computation of canonical hash value is changed to provide better uniformity: \r\n\r\n```\r\n// Version 2.3.0 \r\ncanonical_hash = (forward_hash + reverse_complement_hash) % 2^64\r\n```\r\n```\r\n// Version 2.2.0 \r\ncanonical_hash = min(forward_hash, reverse_complement_hash)\r\n```",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/v2.3.0",
        "name": "ntHash v2.3.0",
        "release_id": 76238083,
        "tag": "v2.3.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/v2.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/76238083",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/76238083",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/v2.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2020-08-14T17:03:47Z",
        "date_published": "2020-08-14T17:10:11Z",
        "description": "Release version 2.2.0\r\nAdded support to begin rolling hash on any viable kmer instead of only the first\r\nImprove ntBase runtime operations which will mostly affect projects that cannot capitalize on ntHash rolling capabilities",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/2.2.0",
        "name": "ntHash v2.2.0",
        "release_id": 29709413,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/29709413",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/29709413",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jwcodee",
          "type": "User"
        },
        "date_created": "2020-01-22T00:02:49Z",
        "date_published": "2020-01-22T00:04:48Z",
        "description": "* Release version 2.1.0\r\n* Added support for RNA sequences\r\n* stHashIterator is now able to produce multiple hashes for each seed",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/2.1.0",
        "name": "ntHash v2.1.0",
        "release_id": 23023522,
        "tag": "2.1.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/23023522",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/23023522",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mohamadi",
          "type": "User"
        },
        "date_created": "2018-09-05T18:52:20Z",
        "date_published": "2018-09-12T16:34:05Z",
        "description": "The hash values produced by version 2 of ntHash differ from version 1.\r\nThe periodicity of the base hash function is increased. In the older versions, we had the periodicity of 64 due to the 64-bit word length of modern computer systems.",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/v2.0.0",
        "name": "ntHash v2.0.0",
        "release_id": 12864183,
        "tag": "v2.0.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/v2.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/12864183",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/12864183",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/v2.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mohamadi",
          "type": "User"
        },
        "date_created": "2018-09-05T18:52:20Z",
        "date_published": "2018-01-29T15:40:56Z",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/v1.0.4",
        "name": "ntHash v1.0.4",
        "release_id": 9430952,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/9430952",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/9430952",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mohamadi",
          "type": "User"
        },
        "date_created": "2017-03-08T18:27:53Z",
        "date_published": "2017-03-08T18:30:58Z",
        "html_url": "https://github.com/bcgsc/ntHash/releases/tag/1.0.0",
        "name": "ntHash v1.0.0",
        "release_id": 5680483,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/bcgsc/ntHash/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/bcgsc/ntHash/releases/5680483",
        "value": "https://api.github.com/repos/bcgsc/ntHash/releases/5680483",
        "zipball_url": "https://api.github.com/repos/bcgsc/ntHash/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:14:40",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 96
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "To use ntHash in a C++ project:\n- Import ntHash in the code using `#include <nthash/nthash.hpp>`\n- Access ntHash classes from the `nthash` namespace\n- Add the `include` directory (pass `-IPREFIX/include` to the compiler)\n- Link the code with `libnthash.a` (i.e. pass `-LPREFIX/lib -lnthash` to the compiler, where `PREFIX` is the installation prefix)\n- Compile your code with `-std=c++17` (and preferably `-O3`) enabled\n\nRefer to [docs](https://bcgsc.github.io/ntHash/) for more information.\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "Generally, the `nthash::NtHash` and `nthash::SeedNtHash` classes are used for hashing sequences:\n\n```C++\nnthash::NtHash nth(\"TGACTGATCGAGTCGTACTAG\", 1, 5);  // 1 hash per 5-mer\nwhile (nth.roll()) {\n    // use nth.hashes() for canonical hashes\n    //     nth.get_forward_hash() for forward strand hashes\n    //     nth.get_reverse_hash() for reverse strand hashes\n}\n```\n\n```C++\nstd::vector<std::string> seeds = {\"10101\", \"11011\"};\nnthash::SeedNtHash nth(\"TGACTGATCGAGTCGTACTAG\", seeds, 3, 5);\nwhile (nth.roll()) {\n    // nth.hashes()[0] = \"T#A#T\"'s first hash\n    // nth.hashes()[1] = \"T#A#T\"'s second hash\n    // nth.hashes()[2] = \"T#A#T\"'s third hash\n    // nth.hashes()[3] = \"TG#CT\"'s first hash\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/bcgsc/ntHash/master/README.md",
      "technique": "header_analysis"
    }
  ]
}