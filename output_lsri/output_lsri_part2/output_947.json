{
  "application_domain": [
    {
      "confidence": 17.76,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8871697108267881,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "cff",
        "type": "File_dump",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Liyanage\"\n  given-names: \"Isuru\"\n  orcid: \"https://orcid.org/0000-0002-4839-5158\"\n- family-names: \"Burdett\"\n  given-names: \"Tony\"\n  orcid: \"https://orcid.org/0000-0002-2513-5396\"\n- family-names: \"Droesbeke\"\n  given-names: \"Bert\"\n  orcid: \"https://orcid.org/0000-0003-0522-5674\"\n- family-names: \"Erdos\"\n  given-names: \"Karoly\"\n  orcid: \"https://orcid.org/0000-0003-3063-8745\"\n- family-names: \"Fernandez\"\n  given-names: \"Rolando\"\n  orcid: \"https://orcid.org/0000-0002-6186-1133\"\n- family-names: \"Gray\"\n  given-names: \"Alasdair\"\n  orcid: \"https://orcid.org/0000-0002-5711-4872\"\n- family-names: \"Haseeb\"\n  given-names: \"Muhammad\"\n  orcid: \"https://orcid.org/0000-0003-4427-4700\"\n- family-names: \"Penim\"\n  given-names: \"Flavia\"\n  orcid: \"https://orcid.org/0000-0001-7192-5279\"\n- family-names: \"Pommier\"\n  given-names: \"Cyril\"\n  orcid: \"https://orcid.org/0000-0002-9040-8733\"\n- family-names: \"Rocca-Serra\"\n  given-names: \"Philippe\"\n  orcid: \"https://orcid.org/0000-0001-9853-5668\"\n- family-names: \"Welter\"\n  given-names: \"Danielle\"\n  orcid: \"https://orcid.org/0000-0003-1058-2668\"\n- family-names: \"Courtot\"\n  given-names: \"M\u00e9lanie\"\n  orcid: \"https://orcid.org/0000-0002-9551-6370\"\n- family-names: \"Coppens\"\n  given-names: \"Frederik\"\n  orcid: \"https://orcid.org/0000-0001-6565-5145\"\ntitle: \"ELIXIR biovalidator for semantic validation of life science metadata\"\nversion: 1.9.1\ndoi: 10.5281/zenodo.5608384\ndate-released: 2021-10-28\nurl: \"https://github.com/elixir-europe/biovalidator\"\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/elixir-europe/biovalidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-03-15T10:12:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T15:27:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JSON validator derived from AJV supporting ontology and taxonomy validation. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9960379080600279,
      "result": {
        "original_header": "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation",
        "type": "Text_excerpt",
        "value": "ELIXIR biovalidator is a [JSON Schema](http://json-schema.org/) validator extended from popular javascript library [AJV](https://ajv.js.org/). \nIn addition to standard JSON Schema validation, the biovalidator covers many validation use cases related life sciences, including ontology validation and taxonomy validation. \nFurthermore, the biovalidator is capable of running as a server or in CLI mode.  \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8956069145602178,
      "result": {
        "original_header": "Breaking changes in recent releases",
        "type": "Text_excerpt",
        "value": "- graphRestrictions\n  - `graph_restriction` renamed to `graphRestriction` to be consistent with other keywords\n  - Remove unused `relations` keyword inside `graphRestrictions`\n  - Remove unused `direct` keyword inside `graphRestrictions`\n  - Rename `include_self` to `includeSelf` keyword inside `graphRestrictions` to be consistent with camel case naming convention\n- Merged `validator-cli.js` with `src/server.js`. Now one entry point to the application: `src/biovalidator.js`\n- Changes to arguments accepted at the startup\n  - `--json` renamed to `--data`\n  - Added `--ref`, `--port`, `--baseUrl`, `pidPath`\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9793051048231196,
      "result": {
        "original_header": "Notable features in recent releases",
        "type": "Text_excerpt",
        "value": "- Support for new keyword `isValidIdentifier`. Validate accessions/IDs using identifiers.org API. \n- Add `queryFields` keyword inside `graphRestrictions` to query for either obo_id or label\n- Add caching library improve memory consumption and auto cache evictions\n- Fix a bug related to OLS API call in graphRestrictions\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9509837454946224,
      "result": {
        "original_header": "Using biovalidator as a server",
        "type": "Text_excerpt",
        "value": "Once the server is up and running it can be accessed in your browser at [http://localhost:3020/](http://localhost:3020/). \nThe biovalidator also exposes an endpoint for validation: [http://localhost:3020/validate](http://localhost:3020/validate). \nThe `/validate` POST endpoint accepts JSON as data and has the following structure.\n```json\n{\n  \"schema\": {},\n  \"data\": {}\n}\n```\n- schema: JSON Schema to validate the data\n- data: data to be validated using given JSON Schema \nHTTP status code `200`\n```json\n[]\n```\nAn example of a validation response with errors: \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9913636797594053,
      "result": {
        "original_header": "Interacting with biovalidator cache",
        "type": "Text_excerpt",
        "value": "In server mode, biovalidator caches referenced schema to minimise network time for repeated schema lookups. \n`/cache` `GET` and `DELETE` endpoints can be used to retrieve and clear cached schema. \nPlease note that these endpoints are not protected and anyone with access can use them. \n- GET /cache\n- DELETE /cache\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.824325758387274,
      "result": {
        "original_header": "Using biovalidator as a CLI command",
        "type": "Text_excerpt",
        "value": "The biovalidator can also be run as a CLI application. If you provide `--schema` and `--data` as parameters to the application, it will execute in CLI mode. \nTo see all the available options, run `node ./src/biovalidator --help`\n```\n$ node ./src/biovalidator --help\n\nELIXIR biovalidator: JSON Schema validator with ontology extension\nusage: node ./src/biovalidator.js [--schema=path/to/schema.json]\n[--data=path/to/data.json] [--ref=path/to/ref/dir]\n\nOptions:\n      --help     Show help                                             [boolean]\n      --version  Show version number                                   [boolean]\n      --baseUrl  base URL for the server. Only valid in server mode.\n      --pidPath  PID file name and path. Only valid in server mode.\n  -s, --schema   path to the schema file.\n  -d, --data     path to the data file.\n  -r, --ref      path to referenced schema directory/file/glob pattern.\n  -p, --port     exposed port in server mode. Only valid in server mode.\n\nExamples:\n  node ./src/biovalidator.js                Runs in CLI mode to validate\n  --data=test_data.json                     'test_data.json' with\n  --schema=test_schema.json                 'test_schema.json'\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8904767226333137,
      "result": {
        "original_header": "Startup arguments",
        "type": "Text_excerpt",
        "value": "- `--ref`:\nIf you have a set of local schemas that will be used as `$ref` in your validating schema, these can be passed to biovalidator using `--ref` argument.\nThe `--ref` argument can be used in both server and CLI mode. `--ref` accepts file path, directory and glob patterns as values. \nWhen parsing glob patterns, it is better to wrap with `'` to avoid parsing them by command line. \n```\nnode src/biovalidator --ref=/path/to/reference/schema/dir/*.json\nnode src/biovalidator --ref '/path/to/reference/schema/dir/*.json'\n``` \n- `--logDir`\nThis should be added as an environment variable. Can be provided to specify the directory of the log files. \nLog files will be rotated every 24 hours. Only works in server mode.\n```\nnode src/biovalidator --logDir=/log/directory/path\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9833141516673748,
      "result": {
        "original_header": "Extended keywords for ontology and taxonomy validation",
        "type": "Text_excerpt",
        "value": "The biovalidator supports four extended keywords for ontology and taxonomy validation: `graphRestriction`, `isChildTermOf`, `isValidTerm` and `isValidTaxonomy`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.93566412830023,
      "result": {
        "original_header": "graphRestriction",
        "type": "Text_excerpt",
        "value": "This custom keyword *evaluates if an ontology term is child of another*. This keyword is applied to a string (CURIE) and **passes validation if the term is a child of the term defined in the schema**.\nThe keyword requires one or more **parent terms** *(classes)* and **ontology ids** *(ontologies)*, both of which should exist in [OLS - Ontology Lookup Service](https://www.ebi.ac.uk/ols). \n* **ontologies** should be present in EBI OLS and are case-sensitive (most of the OLS ontologies are in lower case) \nThis keyword works by doing an asynchronous call to the [OLS API](https://www.ebi.ac.uk/ols/api/) that will respond with the required information to know if a given term is child of another.\nBeing an async validation step, whenever used in a schema, the schema must have the flag: `\"$async\": true` in its object root. \nSchema:\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"http://schema.dev.data.humancellatlas.org/module/ontology/5.3.0/organ_ontology\",\n    \"$async\": true,\n    \"properties\": {\n        \"ontology\": {\n            \"description\": \"A term from the ontology [UBERON](https://www.ebi.ac.uk/ols/ontologies/uberon) for an organ or a cellular bodily fluid such as blood or lymph.\",\n            \"type\": \"string\",\n            \"graphRestriction\":  {\n                \"ontologies\" : [\"obo:hcao\", \"obo:uberon\"],\n                \"classes\": [\"UBERON:0000062\",\"UBERON:0000179\"],\n                \"includeSelf\": false\n            }\n        }\n    }\n}\n```\nData:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9924790519547892,
      "result": {
        "original_header": "isChildTermOf",
        "type": "Text_excerpt",
        "value": "This custom keyword also *evaluates if an ontology term is child of another* and is a simplified version of the graphRestriction keyword. This keyword is applied to a string (url) and **passes validation if the term is a child of the term defined in the schema**.\nThe keyword requires the **parent term** and the **ontology id**, both of which should exist in [OLS - Ontology Lookup Service](https://www.ebi.ac.uk/ols). \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9474611915811807,
      "result": {
        "original_header": "isValidTerm",
        "type": "Text_excerpt",
        "value": "This custom keyword *evaluates if a given ontology term url exists in OLS* ([Ontology Lookup Service](https://www.ebi.ac.uk/ols)). It is applied to a string (url) and **passes validation if the term exists in OLS**. It can be applied to any string defined in the schema. \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9627702900978312,
      "result": {
        "original_header": "isValidTaxonomy",
        "type": "Text_excerpt",
        "value": "This custom keyword evaluates if a given *taxonomy* exists in ENA's Taxonomy Browser. It is applied to a string (url) and **passes validation if the taxonomy exists in ENA**. It can be applied to any string defined in the schema. \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9343911885969143,
      "result": {
        "original_header": "isValidIdentifier",
        "type": "Text_excerpt",
        "value": "Evaluates if a given *identifier* has a correct format using identifiers.org resolution API. The keyword is applicable to the `string` data type.  \nThe keyword has two properties: `prefixes` and `prefix`. Only one of them is allowed in a block and `prefix` will take the priority in case both are provided. \n- `prefix` define one namespace/prefix for the expected identifier/accession. In the data, field should only contain the ID/accession without the namespace. \n- `prefixes` define a set of allowed namespaces/prefixes. In the data, field should contain a valid CURIE (namespace:id format) \n:warning: At the moment only the format of the identifier/accession is checked against the identifier.org. Therefore, this does not guarantee the existence of the data record.\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9730533365333327,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "For development purposes using [nodemon](https://nodemon.io/) is useful. It reloads the application every time something has changed on save time.\n```\nnodemon src/biovalidator\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/elixir-europe/biovalidator/wiki"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/elixir-europe/biovalidator/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 6
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "elixir-europe/biovalidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/start.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- Install Node.js: https://nodejs.org/en/ (v10.19.1.0+)\n- Check node and npm version\n```shell\nnode -v\nnpm -v\n```\n- Clone project and install dependencies:\n```\ngit clone https://github.com/elixir-europe/biovalidator.git\ncd biovalidator\nnpm install\n```\n- Run test cases to see everything is in order\n```\nnpm test\n```\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9135416264866658,
      "result": {
        "original_header": "Breaking changes in recent releases",
        "type": "Text_excerpt",
        "value": "- graphRestrictions\n  - `graph_restriction` renamed to `graphRestriction` to be consistent with other keywords\n  - Remove unused `relations` keyword inside `graphRestrictions`\n  - Remove unused `direct` keyword inside `graphRestrictions`\n  - Rename `include_self` to `includeSelf` keyword inside `graphRestrictions` to be consistent with camel case naming convention\n- Merged `validator-cli.js` with `src/server.js`. Now one entry point to the application: `src/biovalidator.js`\n- Changes to arguments accepted at the startup\n  - `--json` renamed to `--data`\n  - Added `--ref`, `--port`, `--baseUrl`, `pidPath`\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8382818148040176,
      "result": {
        "original_header": "Notable features in recent releases",
        "type": "Text_excerpt",
        "value": "- Support for new keyword `isValidIdentifier`. Validate accessions/IDs using identifiers.org API. \n- Add `queryFields` keyword inside `graphRestrictions` to query for either obo_id or label\n- Add caching library improve memory consumption and auto cache evictions\n- Fix a bug related to OLS API call in graphRestrictions\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9585558719732787,
      "result": {
        "original_header": "Using biovalidator as a server",
        "type": "Text_excerpt",
        "value": "By default, biovalidator will start as a server. Read [startup arguments](#startup-arguments) section for more server options. \n```\nnode src/biovalidator\n``` \nMake sure to add content-type header if there are any problems using the API.\n```\nContent-Type: application/json\n``` \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.99999157269836,
      "result": {
        "original_header": "Changing the logging directory",
        "type": "Text_excerpt",
        "value": "By default, biovalidator will log to the console and `./log` directory. Log files are daily rotated. \nYou can change the default logging directory by specifying an environment variable `BIOVALIDATOR_LOG_DIR`. \nExample in linux environment:\n```shell\nexport BIOVALIDATOR_LOG_DIR=./new_log_dir\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.999999999849706,
      "result": {
        "original_header": "Using biovalidator as a CLI command",
        "type": "Text_excerpt",
        "value": "The biovalidator can also be run as a CLI application. If you provide `--schema` and `--data` as parameters to the application, it will execute in CLI mode. \nTo see all the available options, run `node ./src/biovalidator --help`\n```\n$ node ./src/biovalidator --help\n\nELIXIR biovalidator: JSON Schema validator with ontology extension\nusage: node ./src/biovalidator.js [--schema=path/to/schema.json]\n[--data=path/to/data.json] [--ref=path/to/ref/dir]\n\nOptions:\n      --help     Show help                                             [boolean]\n      --version  Show version number                                   [boolean]\n      --baseUrl  base URL for the server. Only valid in server mode.\n      --pidPath  PID file name and path. Only valid in server mode.\n  -s, --schema   path to the schema file.\n  -d, --data     path to the data file.\n  -r, --ref      path to referenced schema directory/file/glob pattern.\n  -p, --port     exposed port in server mode. Only valid in server mode.\n\nExamples:\n  node ./src/biovalidator.js                Runs in CLI mode to validate\n  --data=test_data.json                     'test_data.json' with\n  --schema=test_schema.json                 'test_schema.json'\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.998889317391389,
      "result": {
        "original_header": "Startup arguments",
        "type": "Text_excerpt",
        "value": "- `--ref`:\nIf you have a set of local schemas that will be used as `$ref` in your validating schema, these can be passed to biovalidator using `--ref` argument.\nThe `--ref` argument can be used in both server and CLI mode. `--ref` accepts file path, directory and glob patterns as values. \nWhen parsing glob patterns, it is better to wrap with `'` to avoid parsing them by command line. \n```\nnode src/biovalidator --ref=/path/to/reference/schema/dir/*.json\nnode src/biovalidator --ref '/path/to/reference/schema/dir/*.json'\n``` \n- `--port`:\nBy default server will run on port 3020. To change the exposed port `--port` can be provided as an argument. Only works in server mode. \n```\nnode src/biovalidator --port=8080\n``` \n- `--pidPath`:\n  Path to the PID file. Application will run the PID to the given file. The default is `./server.pid`. Only works in server mode.\n  Also note that, this is the path to the file and not the directory it will be written to.\n```\nnode src/biovalidator --pidPath=/pid/file/path/server.pid\n``` \n- `--logDir`\nThis should be added as an environment variable. Can be provided to specify the directory of the log files. \nLog files will be rotated every 24 hours. Only works in server mode.\n```\nnode src/biovalidator --logDir=/log/directory/path\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9833506890587858,
      "result": {
        "original_header": "Most of the arguments can be provided as environment variables as well",
        "type": "Text_excerpt",
        "value": "Example:\n```\nexport BIOVALIDATOR_LOG_DIR=./new_log_dir\nexport BIOVALIDATOR_PORT=3020\nnode src/biovalidator\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8189969607455152,
      "result": {
        "original_header": "graphRestriction",
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"http://schema.dev.data.humancellatlas.org/module/ontology/5.3.0/organ_ontology\",\n    \"$async\": true,\n    \"properties\": {\n        \"ontology\": {\n            \"description\": \"A term from the ontology [UBERON](https://www.ebi.ac.uk/ols/ontologies/uberon) for an organ or a cellular bodily fluid such as blood or lymph.\",\n            \"type\": \"string\",\n            \"graphRestriction\":  {\n                \"ontologies\" : [\"obo:hcao\", \"obo:uberon\"],\n                \"classes\": [\"UBERON:0000062\",\"UBERON:0000179\"],\n                \"includeSelf\": false\n            }\n        }\n    }\n}\n```\nData:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9743087889852773,
      "result": {
        "original_header": "isChildTermOf",
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$async\": true,\n  \"properties\": {\n    \"term\": {\n      \"type\": \"string\",\n      \"format\": \"uri\",\n      \"isChildTermOf\": {\n        \"parentTerm\": \"http://purl.obolibrary.org/obo/PATO_0000047\",\n        \"ontologyId\": \"pato\"\n      }\n    }\n  }\n}\n```\nData:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8628122334090718,
      "result": {
        "original_header": "Using biovalidator as a CLI command",
        "type": "Text_excerpt",
        "value": "The biovalidator can also be run as a CLI application. If you provide `--schema` and `--data` as parameters to the application, it will execute in CLI mode. \nTo see all the available options, run `node ./src/biovalidator --help`\n```\n$ node ./src/biovalidator --help\n\nELIXIR biovalidator: JSON Schema validator with ontology extension\nusage: node ./src/biovalidator.js [--schema=path/to/schema.json]\n[--data=path/to/data.json] [--ref=path/to/ref/dir]\n\nOptions:\n      --help     Show help                                             [boolean]\n      --version  Show version number                                   [boolean]\n      --baseUrl  base URL for the server. Only valid in server mode.\n      --pidPath  PID file name and path. Only valid in server mode.\n  -s, --schema   path to the schema file.\n  -d, --data     path to the data file.\n  -r, --ref      path to referenced schema directory/file/glob pattern.\n  -p, --port     exposed port in server mode. Only valid in server mode.\n\nExamples:\n  node ./src/biovalidator.js                Runs in CLI mode to validate\n  --data=test_data.json                     'test_data.json' with\n  --schema=test_schema.json                 'test_schema.json'\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8207752924068002,
      "result": {
        "original_header": "isChildTermOf",
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$async\": true,\n  \"properties\": {\n    \"term\": {\n      \"type\": \"string\",\n      \"format\": \"uri\",\n      \"isChildTermOf\": {\n        \"parentTerm\": \"http://purl.obolibrary.org/obo/PATO_0000047\",\n        \"ontologyId\": \"pato\"\n      }\n    }\n  }\n}\n```\nData:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8731564377594968,
      "result": {
        "original_header": "isValidTerm",
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$async\": true,\n  \"properties\": {\n    \"url\": {\n      \"type\": \"string\",\n      \"format\": \"uri\",\n      \"isValidTerm\": true\n    }\n  }\n}\n```\nData:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                                Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2017 EMBL-EBI\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation"
        ],
        "type": "Text_excerpt",
        "value": " For more details about licensing see the [LICENSE](LICENSE.md).\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/./media/20240216_Biovalidator_logo.png"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biovalidator"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "elixir-europe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 70873,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 19143,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1999,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 179,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theisuru",
          "type": "User"
        },
        "date_created": "2024-02-27T15:51:43Z",
        "date_published": "2024-02-27T16:19:55Z",
        "description": "## What's Changed\r\n* Dev by @theisuru in https://github.com/elixir-europe/biovalidator/pull/62\r\n* Merging master to dev release 2.1.1 by @theisuru in https://github.com/elixir-europe/biovalidator/pull/64\r\n* Make the biovalidator executable by @tcezard in https://github.com/elixir-europe/biovalidator/pull/70\r\n* Dev by @theisuru in https://github.com/elixir-europe/biovalidator/pull/71\r\n* Feature request - Addition of GH issue template by @M-casado in https://github.com/elixir-europe/biovalidator/pull/67\r\n* Added Biovalidator logo by @M-casado in https://github.com/elixir-europe/biovalidator/pull/72\r\n\r\n## New Contributors\r\n* @tcezard made their first contribution in https://github.com/elixir-europe/biovalidator/pull/70\r\n\r\n**Full Changelog**: https://github.com/elixir-europe/biovalidator/compare/v2.1.1...v2.2.1",
        "html_url": "https://github.com/elixir-europe/biovalidator/releases/tag/v2.2.1",
        "name": "v2.2.1",
        "release_id": 143840929,
        "tag": "v2.2.1",
        "tarball_url": "https://api.github.com/repos/elixir-europe/biovalidator/tarball/v2.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/elixir-europe/biovalidator/releases/143840929",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/releases/143840929",
        "zipball_url": "https://api.github.com/repos/elixir-europe/biovalidator/zipball/v2.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theisuru",
          "type": "User"
        },
        "date_created": "2023-03-28T08:49:42Z",
        "date_published": "2023-03-28T08:54:23Z",
        "description": "Removes depricated and vulnerable packages: replace `request`, `request-promise` and `bluebird` with `axios`",
        "html_url": "https://github.com/elixir-europe/biovalidator/releases/tag/v2.1.1",
        "name": "v2.1.1",
        "release_id": 97134771,
        "tag": "v2.1.1",
        "tarball_url": "https://api.github.com/repos/elixir-europe/biovalidator/tarball/v2.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/elixir-europe/biovalidator/releases/97134771",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/releases/97134771",
        "zipball_url": "https://api.github.com/repos/elixir-europe/biovalidator/zipball/v2.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theisuru",
          "type": "User"
        },
        "date_created": "2023-02-20T15:32:29Z",
        "date_published": "2023-02-20T16:06:43Z",
        "description": "Release v2.1.0\r\n- Introduce new keyword `isValidIdentifier`.\r\n- Introduce cache hadnling API and improvements to caching.\r\n- General code improvements. ",
        "html_url": "https://github.com/elixir-europe/biovalidator/releases/tag/v2.1.0",
        "name": "v2.1.0",
        "release_id": 93045868,
        "tag": "v2.1.0",
        "tarball_url": "https://api.github.com/repos/elixir-europe/biovalidator/tarball/v2.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/elixir-europe/biovalidator/releases/93045868",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/releases/93045868",
        "zipball_url": "https://api.github.com/repos/elixir-europe/biovalidator/zipball/v2.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theisuru",
          "type": "User"
        },
        "date_created": "2022-06-07T08:46:42Z",
        "date_published": "2022-06-07T08:50:16Z",
        "description": "## v1.10.0\r\nThis release contain new features and performance enhancements.\r\n### New features\r\n- Add --ref argument to include local schema directory\r\n- Add option to have a base_path when running as a server\r\n- Draft 2019-09 support",
        "html_url": "https://github.com/elixir-europe/biovalidator/releases/tag/v1.10.0",
        "name": "v1.10.0",
        "release_id": 68800444,
        "tag": "v1.10.0",
        "tarball_url": "https://api.github.com/repos/elixir-europe/biovalidator/tarball/v1.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/elixir-europe/biovalidator/releases/68800444",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/releases/68800444",
        "zipball_url": "https://api.github.com/repos/elixir-europe/biovalidator/zipball/v1.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "theisuru",
          "type": "User"
        },
        "date_created": "2021-10-28T13:15:48Z",
        "date_published": "2021-10-28T13:33:26Z",
        "description": "This release is the first major release after deprecating the [previous repository](https://github.com/elixir-europe/json-schema-validator) and moving code to the current repository. This repository contains a deployable and/or executable JSON Schema validator service. This validator can run as a standalone node server or as a command line application that receives validation requests and gives back it's results.\r\n\r\nThe server supports `graph_restriction`, `isChildTermOf`, `isValidTerm` and `isValidTaxonomy` keywords for ontology and taxonomy validation. Please refer to the README file for more details.\r\n\r\n## What's Changed After Repository Move\r\n* Merge elixir validator dependency by @ke4 in https://github.com/elixir-europe/biovalidator/pull/4\r\n* Update AJV library to the latest stable version (7.2.1) by @ke4 in https://github.com/elixir-europe/biovalidator/pull/5\r\n* Add command line interface by @ke4 in https://github.com/elixir-europe/biovalidator/pull/6\r\n* Add utility function for logging to console by @ke4 in https://github.com/elixir-europe/biovalidator/pull/9\r\n* Update README file by @ke4 in https://github.com/elixir-europe/biovalidator/pull/10\r\n* add correct dockerfile and start script by @theisuru in https://github.com/elixir-europe/biovalidator/pull/12\r\n* Merge changes from DEV to MASTER by @ke4 in https://github.com/elixir-europe/biovalidator/pull/13\r\n* add biosamples test schema for docker quickstart by @theisuru in https://github.com/elixir-europe/biovalidator/pull/14\r\n* Improving the html of the server by @bedroesb in https://github.com/elixir-europe/biovalidator/pull/16\r\n* Some documentation suggestions by @bedroesb in https://github.com/elixir-europe/biovalidator/pull/15\r\n* Fixing some typos by @bedroesb in https://github.com/elixir-europe/biovalidator/pull/17\r\n* Release before publication by @bedroesb in https://github.com/elixir-europe/biovalidator/pull/22\r\n* add graph_restriction custom keyword to bio-validator by @theisuru in https://github.com/elixir-europe/biovalidator/pull/21\r\n* Preparing for the release v1.9.1 by @theisuru in https://github.com/elixir-europe/biovalidator/pull/23\r\n\r\n**Full Changelog**: https://github.com/elixir-europe/biovalidator/commits/v1.9.1",
        "html_url": "https://github.com/elixir-europe/biovalidator/releases/tag/v1.9.1",
        "name": "v1.9.1",
        "release_id": 52236440,
        "tag": "v1.9.1",
        "tarball_url": "https://api.github.com/repos/elixir-europe/biovalidator/tarball/v1.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/elixir-europe/biovalidator/releases/52236440",
        "value": "https://api.github.com/repos/elixir-europe/biovalidator/releases/52236440",
        "zipball_url": "https://api.github.com/repos/elixir-europe/biovalidator/zipball/v1.9.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisites",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation",
          "Getting Started"
        ],
        "type": "Text_excerpt",
        "value": "- [Node.js](https://nodejs.org/en/about/) - v10.19.1.0+\n- [npm](https://www.npmjs.com/) \nYou can also run the [biovalidator using docker](#running-in-docker) without installing node or npm. \n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running in Docker",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation"
        ],
        "type": "Text_excerpt",
        "value": "A Dockerized version of biovalidator is available on [quay.io](https://quay.io/repository/ebi-ait/biovalidator). \nThis image can be used to run the validator without cloning this repository. \n\nPull docker image from [quay.io](https://quay.io/repository/ebi-ait/biovalidator)\n```shell\ndocker pull quay.io/ebi-ait/biovalidator:2.2.2\n```\nRun in server mode\n```shell\ndocker run -p 3020:3020 -d quay.io/ebi-ait/biovalidator:2.2.2\n```\nRun in onetime CLI mode\n```shell\ndocker run quay.io/ebi-ait/biovalidator:2.2.2 --schema /path/to/schema.json --data /path/to/data.json\n```\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:36:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 19
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "isValidIdentifier example 1",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation",
          "Extended keywords for ontology and taxonomy validation",
          "isValidIdentifier"
        ],
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$async\": true,\n  \"properties\": {\n    \"SampleId\": {\n      \"type\": \"string\",\n      \"isValidIdentifier\": {\n        \"prefix\": \"biosample\"\n      }\n    }\n  }\n}\n```\nData:\n```json\n{\n  \"SampleId\": \"SAMEA2397676\"\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "isValidIdentifier example 2",
        "parent_header": [
          "ELIXIR biovalidator - Extended JSON Schema validator with ontology validation",
          "Extended keywords for ontology and taxonomy validation",
          "isValidIdentifier"
        ],
        "type": "Text_excerpt",
        "value": "Schema:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$async\": true,\n  \"properties\": {\n    \"resourceId\": {\n      \"type\": \"string\",\n      \"isValidIdentifier\": {\n        \"prefixes\": [\"biosample\", \"arrayexpress\"]\n      }\n    }\n  }\n}\n```\nData:\n```json\n{\n  \"resourceId\": \"biosample:SAMEA2397676\"\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/elixir-europe/biovalidator/main/README.md",
      "technique": "header_analysis"
    }
  ]
}