{
  "application_domain": [
    {
      "confidence": 16.62,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SimCab-CHU/ifCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-08-10T13:26:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-20T20:34:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9965031143056411,
      "result": {
        "original_header": "ifCNV workflow",
        "type": "Text_excerpt",
        "value": "ifCNV is a CNV detection tool based on read-depth distribution obtained from targeted NGS data (A). It integrates a pre-processing step to create a read-depth matrix using as input the aligned .bam files and a corresponding .bed file. This reads matrix is composed of the samples as columns and the targets as rows. Next, it uses an IF machine learning algorithm to detect the samples with a strong bias between the 99th percentile and the mean (for amplifications, B, top plot), and the 1st percentile and the mean (for deletions, B, bottom plot). These samples are assumed to be CNVpos. The samples with no bias, and therefore not detected by the IF as outliers, are considered as CNVneg samples. The reads matrix is normalized by dividing each column (i.e., the reads distribution of each sample) by its median. Then, ifCNV creates a mean normalized normal sample by averaging all the CNVneg samples. It is used as a reference to detect the outlying targets in each normalized CNVpos sample with a second IF (C). These assumed altered targets, are then used to compute the localization score per region of interest. Finally, a threshold is applied on this score to select the significantly altered regions that are compiled in an html report containing a table and a graph for easy user interpretation.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SimCab-CHU/ifCNV/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SimCab-CHU/ifCNV/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SimCab-CHU/ifCNV/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SimCab-CHU/ifCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets."
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/docs/img/figure_1.png"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/docs/img/output_example_2.png"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/docs/img/output_example_4.png"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/docs/img/equation_loc.jpeg"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/docs/img/figure_5.jpg"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "From Conda (recommended)",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "1. Install Conda : [documentation here](https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html)\n1. Create an envrionment : `conda create -n ifcnv`\n1. Activate the environment : `conda activate ifcnv`\n1. Install the package : `conda install -c conda-forge -c bioconda ifcnv`\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From PyPi",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Make sure you have python >= 3.6\n\n```sh\npython --version\nPython 3.X.X\n```\n\nInstall pip : [documentation here](https://pip.pypa.io/en/stable/installation/).\n\n```sh\npython -m ensurepip --upgrade\n```\n\nInstall [ifCNV](https://pypi.org/project/ifCNV/)\n\n```sh\npip install ifCNV\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "More specific commands",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide"
        ],
        "type": "Text_excerpt",
        "value": "- if you want ifCNV to stop talking\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -v ''\n```\n- if you don't want ifCNV to automatically open the report\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -a ''\n```\n- if you don't want to re-create the reads matrix of your run at each\nutilisation (ie. to rerun ifCNV with different parameters)\n    - First, run ifCNV and write the reads matrix\n    - Then, run ifCNV and tell it to take the reads matrix (it will skip its\n    creation)\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -rm /path/to/readsMatrix/file\n\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -s /path/to/readsMatrix/file\n```\n- if you want to save the output in a .tsv file (it will be written in the\noutput directory)\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sv True\n```\n- changing mode from 'fast' (default) to 'extensive'. In 'fast' mode, ifCNV tests the CNVpos samples against the intrarun reference created from all the CNVneg samples. In 'extensive' mode, ifCNV tests all the samples of the run against the reference.\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -m 'extensive'\n```\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Changing the resolution",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide",
          "Exploring different scenari"
        ],
        "type": "Text_excerpt",
        "value": "The resolution of ifCNV is set in the .bed file. So, by changing he 4th column of the .bed file the user can easily change the resolution of ifCNV. \nifCNV splits this name on the \"\\_\" character and regroups whats on the left of it as the **region of interest**.\n\n**A**:\n\n```tsv\nchr4\t55155143\t55155306\t4q12_PDGFRA_E21_STA101436\t0\t+\t55155159\t55155287\t113,255,0\nchr4\t55156535\t55156697\t4q12_PDGFRA_E22_STA101437\t0\t+\t55156551\t55156681\t113,255,0\nchr4\t55161233\t55161388\t4q12_PDGFRA_E23_STA101438\t0\t+\t55161253\t55161366\t113,255,0\nchr4\t55524153\t55524297\t4q12_KIT_E1_STA101439\t0\t+\t55524170\t55524281\t85,255,0\nchr4\t55561669\t55561832\t4q12_KIT_E2_STA101440\t0\t+\t55561686\t55561810\t85,255,0\nchr4\t55564526\t55564689\t4q12_KIT_E3_STA101441\t0\t+\t55564544\t55564675\t85,255,0\n```\nIn this .bed file, the 4th column (ie the name of the target) is composed of 4 elements separated by a \"\\_\". The first one (4q12) is the chromosome arm;\nthe second one (PDGRA & KIT) is the gene name; the third one is the exon number and the forth one is the target name.\nUsing this .bed file, the resolution will be at the chromosome arm level, meaning the six\ntargets will be considered as belonging to the same **region of interest** (4q12) in the calculus of the localisation score and in the output. \n\n**B**:\n\nThe user can increase the resolution by changing the separating character. For example:\n```tsv\nchr4\t55155143\t55155306\t4q12-PDGFRA_E21_STA101436\t0\t+\t55155159\t55155287\t113,255,0\nchr4\t55156535\t55156697\t4q12-PDGFRA_E22_STA101437\t0\t+\t55156551\t55156681\t113,255,0\nchr4\t55161233\t55161388\t4q12-PDGFRA_E23_STA101438\t0\t+\t55161253\t55161366\t113,255,0\nchr4\t55524153\t55524297\t4q12-KIT_E1_STA101439\t0\t+\t55524170\t55524281\t85,255,0\nchr4\t55561669\t55561832\t4q12-KIT_E2_STA101440\t0\t+\t55561686\t55561810\t85,255,0\nchr4\t55564526\t55564689\t4q12-KIT_E3_STA101441\t0\t+\t55564544\t55564675\t85,255,0\n```\n\nUsing this .bed file, the resolution will be at the gene level, meaning the 3\nfirst targets will be considered as belonging to the same region (4q12-PDGFRA) and the 3\nlast to another **region of interest** (4q12-KIT) in the calculus of the localization score and in the output.\n\n**C**:\n\nAgain, in this example, the user can increase the resolution by changing the separating character:\n\n```tsv\nchr4\t55155143\t55155306\t4q12-PDGFRA-E21_STA101436\t0\t+\t55155159\t55155287\t113,255,0\nchr4\t55156535\t55156697\t4q12-PDGFRA-E22_STA101437\t0\t+\t55156551\t55156681\t113,255,0\nchr4\t55161233\t55161388\t4q12-PDGFRA-E23_STA101438\t0\t+\t55161253\t55161366\t113,255,0\nchr4\t55524153\t55524297\t4q12-KIT-E1_STA101439\t0\t+\t55524170\t55524281\t85,255,0\nchr4\t55561669\t55561832\t4q12-KIT-E2_STA101440\t0\t+\t55561686\t55561810\t85,255,0\nchr4\t55564526\t55564689\t4q12-KIT-E3_STA101441\t0\t+\t55564544\t55564675\t85,255,0\n```\nUsing this .bed file, the resolution will be at the exon level, meaning each target will be considered as belonging to a single **region of interest** (ie 4q12-PDGFRA-E21).\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Localization score",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide",
          "Exploring different scenari",
          "Changing the resolution"
        ],
        "type": "Text_excerpt",
        "value": "Specific regions of biological significance (gene or exon) can be covered by several targets. In the event that a region is altered, all the targets in the region should be modified. By contrast, if only one target in the region is modified, it is likely to be a FP. We integrated this reasoning to develop a localisation score in order to reduce the number of FPs. The localisation score depends on the number of modified targets in the region, the number of targets in the region and the total number of targets in the panel. A semi-open log scale incorporating the ratio of modified targets in the region was chosen. It is calculated as follows:\n\n<p align=\"center\"><img src=\"docs/img/equation_loc.jpeg\" alt=\"drawing\" width=\"350\"/></p>\n\n*whith k the number of modified targets on the region, n the number of targets on the region, N the total number of targets.*\n\nThis score is thresholded to keep only the significant regions, by default the threshold is 10. However, it can be useful for the user to change that threshold regarding the design of the experiment. \n\nFor example, in the first case (**A**), 6 targets are on the same region, this means that with a panel of 1000 targets the score will range from 0.86 to 30.7 depending on the number of outlying targets detected:\n\n|Number of outlying targets|Localization score|\n|--------------------------|------------------|\n|0|0|\n|1|0.87|\n|2|3.42|\n|3|7.68|\n|4|13.65|\n|5|21.32|\n|6|30.7|\n\nWith a score threshold (-sT) at 10, ifCNV will consider the region significantly altered if 4 targets are.\n\nIn the second case (**B**), 3 targets are in the same region, for the same panel (1000 targets) the score will range from 1.94 to 17.42:\n\n|Number of outlying targets|Localization score|\n|--------------------------|------------------|\n|0|0|\n|1|1.94|\n|2|7.75|\n|3|17.42|\n\nWhich means that the region will be considered altered if all three regions are detected as outliers.\n\nIn the third case (**C**), there is only one target per region, meaning that the localisation score will be either 0 or 6.91.\n\nifCNV will never consider the regions as altered if the user doesn't change the score threshold (-sT flag).\n\nThe command in this case will be:\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sT 6\n```\nThen, if an exon is detected as an outlier it will be considered as altered.\n\nTherefore, there is no longer a control of false positives when looking for CNVs on regions covered with only one target (typically exons in capture experiments). To recover some control over the false positive rate, the user can change the contamination parameters.\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contamination parameters",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide",
          "Exploring different scenari"
        ],
        "type": "Text_excerpt",
        "value": "ifCNV uses 2 Isolation forests (IF), one to detect the outlying samples (considered\nas CNV positives) and another to detect the outlying targets. The\n_contamination_ is a parameter of the isolation forest that sets a seed value for the\nproportion of outliers in the data set. It is set for both IF as \"auto\" by\ndefault but can be changed by the user.\n\nChanging the -ct parameter of ifCNV can be useful but a careful consideration\nmust be taken on the score threshold (-sT). For example, if the user sets the\n-ct parameter to a small value (\\~ \\]0,0.01\\]), less targets will be considered\nas outliers and so the localisation scores will be lower. Therefore the user will have to lower the score threshold (-sT):\n\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sT 0 -ct 0.01\n```\n\n\nOn the other hand, if the user sets the -ct parameter to a high value (\\~ \\]0.1,0.5\\]), more targets\nwill be considered as outliers and so the localisation scores will be higher. Therefore the user will have to increase the score threshold (-sT):\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sT 30 -ct 0.2\n```\n\n\nAn example is provided in the paper describing ifCNV using the ICR96 dataset, a case similar to **C**, when there is only one target per **region of interest**. It is summarized in the figure below that can be used to set up the appropriate contamination (-ct) parameter:\n\n<img src=\"docs/img/figure_5.jpg\" alt=\"drawing\" width=\"450\"/>\n\nIn the case the user wants a lot of potential candidates, capturing all the true positives but taking the risk of having false positives:\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sT 0 -ct 0.15\n```\n\nIn the case the user wants only true positives and no false positives but taking the risk to miss some true positives:\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/ -sT 0 -ct 0.01\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8089368490510835,
      "result": {
        "original_header": "ifCNV workflow",
        "type": "Text_excerpt",
        "value": "<img src=\"docs/img/figure_1.png\" alt=\"drawing\" width=\"800\"/> \n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SimCab-CHU/ifCNV/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ifCNV"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SimCab-CHU"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 9911830,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 21029,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:57:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Interpretation of the html report:",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"docs/img/output_example_2.png\" alt=\"drawing\" width=\"800\"/>\n\n- The 1st column is the run name (default is ifCNV, but it can be specified with the -r flag).\n- The 2nd column is the sample name (by default the table is sorted by this column).\n- The 3rd column is the name of the region (here a gene).\n- The 4th column is the reads ratio (1<reads_ratio<2: gain, reads_ratio>2: amplification, reads_ratio<1: loss).\n- The 5th column is the localization score.\n\nThe user can click on each line to visualize a graph of the normalized log ratio for the region of interest where each point represents a target.\n\n<img src=\"docs/img/output_example_4.png\" alt=\"drawing\" width=\"800\"/>\n\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic usage",
        "parent_header": [
          "ifCNV : a novel isolation-forest-based package to detect copy number variations from various targeted NGS datasets.",
          "Users Guide"
        ],
        "type": "Text_excerpt",
        "value": "ifCNV stands for **i**solation **f**orest based **C**opy **N**umber **V**ariation detection. \n\nIts usage is meant to be approachable for entry-level users. ifCNV can be run on germline or somatic samples indifferently. It runs on the aligned files (.bam or .cram) of an entire targeted (capture or amplicon) sequencing run at once and requires at least three samples to be accurate.\n\n```sh\nifCNV -i /path/to/bam/directory/ -b /path/to/bed/file -o /path/to/output/directory/\n```\n\n\n```\nifCNV -h\nusage: ifCNV [-h] -i INPUT -b BED -o OUTPUT [-s SKIP] [-m MODE] [-rm READSMATRIXOUPTUT] [-min MINREADS] [-cs CONTASAMPLES] [-ct CONTATARGETS]\n             [-sT SCORETHRESHOLD] [-rS REGSAMPLE] [-rT REGTARGETS] [-v VERBOSE] [-a AUTOOPEN] [-r RUN] [-sv SAVE] [-l LIB_RESSOURCES]\n\nifCNV\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SKIP, --skip SKIP  A path to the reads matrix\n  -m MODE, --mode MODE  fast or extensive\n  -rm READSMATRIXOUPTUT, --readsMatrixOuptut READSMATRIXOUPTUT\n                        A path to a file to export the reads matrix as a .tsv file\n  -min MINREADS, --minReads MINREADS\n                        Min mean reads per target\n  -cs CONTASAMPLES, --contaSamples CONTASAMPLES\n                        Contamination parameter for the AberrantSamples function\n  -ct CONTATARGETS, --contaTargets CONTATARGETS\n                        Contamination parameter for the AberrantTargets function\n  -sT SCORETHRESHOLD, --scoreThreshold SCORETHRESHOLD\n                        Threshold on the localisation score\n  -rS REGSAMPLE, --regSample REGSAMPLE\n                        A pattern for removing controls\n  -rT REGTARGETS, --regTargets REGTARGETS\n                        A pattern for removing targets\n  -v VERBOSE, --verbose VERBOSE\n                        A boolean\n  -a AUTOOPEN, --autoOpen AUTOOPEN\n                        A boolean\n  -r RUN, --run RUN     The name of the experiment\n  -sv SAVE, --save SAVE\n                        A boolean, if True, saves the results in a .tsv file\n  -l LIB_RESSOURCES, --lib-ressources LIB_RESSOURCES\n                        Path where lib to import for report.\n\nMandatory:\n  -i INPUT, --input INPUT\n                        Path to the input bam folder\n  -b BED, --bed BED     Path to the bed file\n  -o OUTPUT, --output OUTPUT\n                        Path to the output report\n```\n\n\n\n\n**ifCNV** input: \n- the aligned sequences (.bam or .cram files and their associated indexes)\n- the genomic coordinates of the region of interest (a .bed file, see \nhttp://genome.cse.ucsc.edu/FAQ/FAQformat.html#format1 and below for more information).\n\n\n**ifCNV** ouput:\n- An html report\n\nSome **BED file** informations:\n\nThe BED (Browser Extensible Data) format is a text file format used to store genomic regions as coordinates and associated annotations. The data are presented in the form of columns separated by spaces or tabs. This format was developed during the Human Genome Project and then adopted by other sequencing projects (source: wikipedia). For targeted sequencing, it is supposed to be provided by the vendor.\n\nAs it is of great importance for **ifCNV** let's see some key points:\n- the BED file must have (at least) 4 columns, the three first are the coordinates of the baited genomic regions and the forth one is a string describing these regions.\n- The forth column is the name of the targeted region and it must be set carefully as it will be used to compute the localization score (see the **Resolution** paragraph)\n\nIf you don\u2019t have the capture regions BED file, but you do know which commercial exome capture kit was used to prepare your samples, you might find the file you need in Astra-Zeneca\u2019s reference data repository. Otherwise, try searching the vendor\u2019s website or contacting their customer support to obtain the right file.\n"
      },
      "source": "https://raw.githubusercontent.com/SimCab-CHU/ifCNV/main/README.md",
      "technique": "header_analysis"
    }
  ]
}