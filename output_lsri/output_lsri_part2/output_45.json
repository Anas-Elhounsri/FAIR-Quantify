{
  "application_domain": [
    {
      "confidence": 23.51,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidemms/OrthoFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-06-29T09:03:34Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-29T08:07:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Phylogenetic orthology inference for comparative genomics"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9150009755082684,
      "result": {
        "original_header": "Interested in a single gene? Try SHOOT.bio, the phylogenetic search engine: https://SHOOT.bio",
        "type": "Text_excerpt",
        "value": "SHOOT.bio searches your query sequence against a database of gene families and instantly provides you with a phylogenetic tree with your query sequence grafted into it.  \nOr, if you want to run an orthology analysis for all genes in multiple species then keep reading about OrthoFinder. \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9434020366342551,
      "result": {
        "original_header": "What does OrthoFinder do?",
        "type": "Text_excerpt",
        "value": "OrthoFinder is a fast, accurate and comprehensive platform for comparative genomics. It finds **orthogroups** and **orthologs**, infers **rooted gene trees** for all orthogroups and identifies all of the **gene duplication events** in those gene trees. It also infers a **rooted species tree** for the species being analysed and maps the gene duplication events from the gene trees to branches in the species tree. OrthoFinder also provides **comprehensive statistics** for comparative genomic analyses. OrthoFinder is simple to use and all you need to run it is a set of protein sequence files (one per species) in FASTA format. \nThanks to Rosa Fern\u00e1ndez & Jesus Lozano-Fernandez for organising this excellent conference. \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8061329364686101,
      "result": {
        "original_header": "Table of Contents",
        "type": "Text_excerpt",
        "value": "*generated with [DocToc](https://github.com/thlorenz/doctoc)* \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.967519270235825,
      "result": {
        "original_header": "OrthoFinder Results Files",
        "type": "Text_excerpt",
        "value": "A standard OrthoFinder run produces a set of files describing the orthogroups, orthologs, gene trees, resolve gene trees, the rooted species tree, gene duplication events and comparative genomic statistics for the set of species being analysed. These files are located in an intuitive directory structure.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9224065166694602,
      "result": {
        "original_header": "Phylogenetic Hierarchical Orthogroups Directory",
        "type": "Text_excerpt",
        "value": "From version 2.4.0 onwards OrthoFinder infers HOGs, orthogroups at each hierarchical level (i.e. at each node in the species tree) by analysing the rooted gene trees. This is a far more accurate orthogroup inference method than the gene similarity/graph based approach used by all other methods and used previously by OrthoFinder (the deprecated Orthogroups/Orthogroups.tsv file). According to the Orthobench benchmarks, these new orthogroups are 12% more accurate than the OrthoFinder 2 orthogroups (Orthogroups/Orthogroups.tsv). The accuracy can be increased still further (20% more accurate on Orthobench) by including outgroup species, which help with the interpretation of the rooted gene trees.  \nIt is important to ensure that the species tree OrthoFinder is using is accurate so as to maximise the accuracy of the HOGs. To reanalyse with a different species tree use the options `-ft PREVIOUS_RESULTS_DIR -s SPECIES_TREE_FILE`. This runs just the final analysis steps \"from trees\" and is relatively quick. If outgroup species are used, refer to \"Species_Tree/SpeciesTree_rooted_node_labels.txt\" to determine which N?.tsv file that contains the orthogroups you require.  \n1. **N0.tsv** is a tab separated text file. Each row contains the genes belonging to a single orthogroup. The genes from each orthogroup are organized into columns, one per species. Additional columns give the HOG (Hierarchical Orthogroup) ID and the node in the gene tree from which the HOG was determined (note, this can be above the root of the clade containing the genes). **This file effectively replaces the orthogroups in Orthogroups/Orthogroups.tsv** from Markov clustering using MCL.  \n2. **N1.txt, N2.tsv, ...**: Orthogroups inferred from the gene trees corresponding to the clades of species in the species tree N1, N2, etc. Because OrthoFinder now infers orthogroups at every hierarchical level within the species tree, it is now possible to include outgroup species within the analysis and then use the HOG files to get the orthogroups defined for your chosen clade within the species tree.  \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9431796096467223,
      "result": {
        "original_header": "Orthologues Directory",
        "type": "Text_excerpt",
        "value": "The Orthologues directory contains one sub-directory for each species that in turn contains a file for each pairwise species comparison, listing the orthologs between that species pair. Orthologues can be one-to-one, one-to-many or many-to-many depending on the gene duplication events since the orthologs diverged (see Section \"Orthogroups, Orthologues & Paralogues\" for more details). Each row in a file contains the gene(s) in one species that are orthologues of the gene(s) in the other species and each row is cross-referenced to the orthogroup that contains those genes. \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9387020970103228,
      "result": {
        "original_header": "Orthogroups Directory (deprecated)",
        "type": "Text_excerpt",
        "value": "1. **Orthogroups.tsv (deprecated)** is a tab separated text file. Each row contains the genes belonging to a single orthogroup. The genes from each orthogroup are organized into columns, one per species. **The orthogroups in Phylogenetic_Hierarchical_Orthogroups/N0.tsv should be used instead.**  \n2. **Orthogroups_UnassignedGenes.tsv** is a tab separated text file that is identical in format to Orthogroups.csv but contains all of the genes that were not assigned to any orthogroup. \n4. **Orthogroups.GeneCount.tsv** is a tab separated text file that is identical in format to Orthogroups.csv but contains counts of the number of genes for each species in each orthogroup. \n5. **Orthogroups_SingleCopyOrthologues.txt** is a list of orthogroups that contain exactly one gene per species i.e. they contain one-to-one orthologues. They are ideally suited to between-species comparisons and to species tree inference. \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9656225753241812,
      "result": {
        "original_header": "Gene Trees Directory",
        "type": "Text_excerpt",
        "value": "1. A rooted phylogenetic tree inferred for each orthogroup with 4 or more sequences (4 sequences is the mimimum number required for tree inference with most tree inference programs).\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9325619544022204,
      "result": {
        "original_header": "Resolved Gene Trees Directory",
        "type": "Text_excerpt",
        "value": "1. A rooted phylogenetic tree inferred for each orthogroup with 4 or more sequences and resolved using the OrthoFinder hybrid species-overlap/duplication-loss coalescent model.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8747280424705476,
      "result": {
        "original_header": "Species Tree Directory",
        "type": "Text_excerpt",
        "value": "2. **SpeciesTree_rooted_node_labels.txt** The same tree as above but with the nodes given labels (instead of support values) to allow other results files to cross-reference branches/nodes in the species tree (e.g. location of gene duplication events).\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9345684929791389,
      "result": {
        "original_header": "Comparative Genomics Statistics Directory",
        "type": "Text_excerpt",
        "value": "1. **Duplications_per_Orthogroup.tsv** is a tab separated text file that gives the number of duplications identified in each orthogroup. This master file for this data is Gene_Duplication_Events/Duplications.tsv. \n2. **Duplications_per_Species_Tree_Node.tsv** is a tab separated text file that gives the number of duplications identified as occurring along each branch of the species tree. This master file for this data is Gene_Duplication_Events/Duplications.tsv. \n3. **Orthogroups_SpeciesOverlaps.tsv** is a tab separated text file that contains the number of orthogroups shared between each species-pair as a square matrix. \n4. **OrthologuesStats_*.tsv files** are tab separated text files containing matrices giving the numbers of orthologues in one-to-one, one-to-many and many-to-many relationships between each pair of species. \n    * ***OrthologuesStats_one-to-one.tsv*** is the number of one-to-one orthologues between each species pair.  \n    * ***OrthologuesStats_many-to-many.tsv*** contains the number of orthologues in a many-to-many relationship for each species pair (due to gene duplication events in both lineages post-speciation). Entry (i,j) is the number of genes in species i that are in a many-to-many orthology relationship with genes in species j. \n    * ***OrthologuesStats_one-to-many.tsv***: entry (i,j) gives the number of genes in species i that are in a one-to-many orthology relationship with genes from species j. There is a walk-through of an example results file here: https://github.com/davidemms/OrthoFinder/issues/259. \n    * ***OrthologuesStats_many-to-one.tsv***: entry (i,j) gives the number of genes in species i that are in a many-to-one orthology relationship with a gene from species j. There is a walk-through of an example results file here: https://github.com/davidemms/OrthoFinder/issues/259. \n    * ***OrthologuesStats_Total.tsv*** contains the totals for each species pair of orthologues of whatever multiplicity. Entry (i,j) is the total number of genes in species i that have orthologues in species j. \n5. **Statistics_Overall.tsv** is a tab separated text file that contains general statistics about orthogroup sizes and proportion of genes assigned to orthogroups. \n6. **Statistics_PerSpecies.tsv** is a tab separated text file that contains the same information as the Statistics_Overall.csv file but for each individual species. \nMost of the terms in the files 'Statistics_Overall.csv' and 'Statistics_PerSpecies.csv' are self-explanatory, the remainder are defined below. \n- Species-specific orthogroup: An orthogroups that consist entirely of genes from one species.\n- G50: The number of genes in the orthogroup such that 50% of genes are in orthogroups of that size or larger.\n- O50: The smallest number of orthogroups such that 50% of genes are in orthogroups of that size or larger.\n- Single-copy orthogroup: An orthogroup with exactly one gene (and no more) from each species. These orthogroups are ideal for inferring a species tree and many other analyses. \n- Unassigned gene: A gene that has not been put into an orthogroup with any other genes.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9249224514789129,
      "result": {
        "original_header": "Gene Duplication Events Directory",
        "type": "Text_excerpt",
        "value": "1. **Duplications.tsv** is a tab separated text file that lists all the gene duplication events identified by examining each node of each orthogroup gene tree. The columns are \"Orthogroup\", \"Species Tree node\" (branch of the species tree on which the duplication took place, see Species_Tree/SpeciesTree_rooted_node_labels.txt), \"Gene tree node\" (node corresponding to the gene duplication event, see corresponding orthogroup tree in Resolved_Gene_Trees/); \"Support\" (proportion of expected species for which both copies of the duplicated gene are present); \"Type\" (\"Terminal\": duplication on a terminal branch of the species tree, \"Non-Terminal\": duplication on an internal branch of the species tree & therefore shared by more than one species, \"Non-Terminal: STRIDE\": Non-Terminal duplication that also passes the very stringent [STRIDE](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5850722/) checks for what the topology of the gene tree should be post-duplication); \"Genes 1\" (the list of genes descended from one of the copies of the duplicate gene), \"Genes 2\" (the list of genes descended from the other copy of the duplicate gene. \n2. **SpeciesTree_Gene_Duplications_0.5_Support.txt** provides a summation of the above duplications over the branches of the species tree. It is a text file in newick format. The numbers after each node or species name are the number of gene duplication events with at least 50% support that occurred on the branch leading to the node/species. The branch lengths are the standard branch lengths, as give in Species_Tree/SpeciesTree_rooted.txt.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.830725273926368,
      "result": {
        "original_header": "Orthogroup Sequences",
        "type": "Text_excerpt",
        "value": "1. A FASTA file for each orthogroup giving the amino acid sequences for each gene in the orthogroup.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9406987780361376,
      "result": {
        "original_header": "WorkingDirectory",
        "type": "Text_excerpt",
        "value": "This contains all the files necessary for orthofinder to run. You can ignore this.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9607678779723676,
      "result": {
        "original_header": "Orthogroups, Orthologs &amp; Paralogs",
        "type": "Text_excerpt",
        "value": "Figure 2A shows an example gene tree for three species: human, mouse and chicken. Orthologs are pairs of genes that descended from a single gene in the last common ancestor (LCA) of two species (Fig. 2B). They can be thought of as 'equivalent genes' between two species. An orthogroup is the extension of this concept to groups of species. An orthogroup is the group of genes descended from a single gene in the LCA of a group of species (Figure 2A). Genes within an orthogroup may be orthologs of one another or they may be paralogs, as explained below. \nThe tree shows the evolutionary history of a gene. First, there was a speciation event where the chicken lineage diverged from the human-mouse ancestor. In the human-mouse ancestor, there was a gene duplication event at X producing two copies of the gene in that ancestor, Y & Z. When human and mouse diverged they each inherited gene Y (becoming HuA & MoA) and gene Z (HuB & MoB). In general, we can identify a gene duplication event because it creates two copies of a gene in a species (e.g. HuA & HuB). \nTo tell which genes are orthologs and which genes are paralogs we need to identify the gene duplciation events in the tree. Orthologs are gene that diverged at a speciation event (e.g HuA & MoA) while paralogs diverged at a gene duplication event (e.g. HuA & MoB, and others: Fig 2C). Because orthologs only diverged at the point when the species diverged, they are as closely related as any gene can be between the two species. Paralogs are more distantly related, they diverged at a gene duplication event in a common ancestor. Such a gene duplication event must have occurred further back in time than when the species diverged and so paralogs between a pair of species are always less closely related than orthologs between that pair of species. Paralogs are also possible within a species (e.g. HuA & HuB). \nThe chicken gene diverged from the other genes when the lineage leading to chicken split from the lineage leading to human and mouse. Therefore, the chicken gene ChC is an ortholog of HuA & HuB in human and an ortholog of MoA & MoB in mouse. Depending on what happend after the genes diverged, orthologs can be in one-to-one relationships (HuA - MoA), many-to-one (HuA & HuB - ChC), or many-to-many (no examples in this tree, but would occur if there were a duplication in chicken). All of these relationships are identified by OrthoFinder.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9957205120153493,
      "result": {
        "original_header": "Orthogroups allow you to analyse all of your data",
        "type": "Text_excerpt",
        "value": "All of the genes in an orthogroup are descended from a single ancestral gene. Thus, all the genes in an orthogroup started out with the same sequence and function. As gene duplication and loss occur frequently in evolution, one-to-one orthologs are rare and limitation of analyses to on-to-one orthologs limits an analysis to a small fraction of the available data. By analysing orthogroups you can analyse all of your data. \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.988401230687566,
      "result": {
        "original_header": "Orthogroups allow you to define the unit of comparison",
        "type": "Text_excerpt",
        "value": "It is important to note that with orthogroups you choose where to define the limits of the unit of comparison. For example, if you just chose to analyse human and mouse in the above figure then you would have two orthogroups. \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9963099852554022,
      "result": {
        "original_header": "Orthogroups are the only way to identify orthologs",
        "type": "Text_excerpt",
        "value": "Orthology is defined by phylogeny. It is not definable by amino acid content, codon bias, GC content or other measures of sequence similarity. Methods that use such scores to define orthologs in the absence of phylogeny can only provide guesses. The only way to be sure that the orthology assignment is correct is by conducting a phylogenetic reconstruction of all genes descended from a single gene the last common ancestor of the species under consideration. This set of genes is an orthogroup. Thus, the only way to define orthology is by analysing orthogroups.   \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9951190863294483,
      "result": {
        "original_header": "Trees from MSA: `\"-M msa\"`",
        "type": "Text_excerpt",
        "value": "The following is not required for the standard OrthoFinder use cases and are only needed if you want to infer maximum likelihood trees from multiple sequence alignments (MSA). This is more costly computationally but more accurate. By default, MAFFT is used for the alignment and FastTree for the tree inference. The option for this is, \"-M msa\". You should be careful using any other tree inference programs, such as IQTREE or RAxML, since inferring the gene trees for the complete set of orthogroups using anything that is not as quick as FastTree will require significant computational resources/time. The executables you wish to use should be in the system path. \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9247299024285849,
      "result": {
        "original_header": "Methods",
        "type": "Text_excerpt",
        "value": "The orthogroup inference stage of OrthoFinder is described in the first paper: https://genomebiology.biomedcentral.com/articles/10.1186/s13059-015-0721-2 \nThe workflow figure at the top of this page summarises this. \nThe rooting of the unrooted species tree is described in the STRIDE paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5850722/ \nSpecies tree inference is described in the second OrthoFinder paper and in the STAG paper: <https://www.biorxiv.org/content/10.1101/267914v1>. A summary is provided below.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9936765228293251,
      "result": {
        "original_header": "Species Tree Inference",
        "type": "Text_excerpt",
        "value": "OrthoFinder infers orthologs from rooted gene trees. Since tree inference methods return unrooted gene trees, OrthoFinder requires a rooted species tree in order to root the gene trees before ortholog inference can take place. There are two methods that can be used for unrooted species tree inference (plus a fallback method that is employed in rare circumstances when there is insufficient data for the other methods). Additionally, if the user knows the topology of the rooted species tree they can provide it to OrthoFinder (the branch lenghts aren't required). The rooted species tree is only required in the final step of the OrthoFinder analysis, the rooting of the gene trees and the inference of orthologs and gene duplication events. This step is comparitively fast and so it is easy to run just this last step using the '-ft' option and a corrected species tree if you want to use a different species tree to the one OrthoFinder used.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9955708105845745,
      "result": {
        "original_header": "Default species tree method",
        "type": "Text_excerpt",
        "value": "The default species tree method is STAG, described here: <https://www.biorxiv.org/content/10.1101/267914v1>\n1. The set of all orthogroups with all species present (regardless of gene copy number) is identified: X\n2. For each orthogroup x in X, a matrix of pairwise species distances is calculated. For x, the distance between each species pair is the tree distance for the closest pair of genes from that species pair in the gene tree for x.\n3. For each orthogroup x in X, a species tree is inferred from the distance matrix.\n4. A consensus tree of all these individual species trees is calculated as the final species tree\n5. The support value for each bipartition is the number of individual  species trees that contained that bipartition. \n6. When it is run, OrthoFinder outputs how many orthogroups it has identified with all species present. E.g. for the example dataset: \n> 269 trees had all species present and will be used by STAG to infer the species tree\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9984027629563632,
      "result": {
        "original_header": "Multiple Sequence Alignment species tree method (-M msa)",
        "type": "Text_excerpt",
        "value": "The MSA species tree method is also described in the STAG paper: <https://www.biorxiv.org/content/10.1101/267914v1>, it is used whenever the MSA method is used for tree inference using the '-M msa' option. It infers the species tree from a concatenated MSA of single-copy genes. For many datasets there will not be many orthogroups that have exactly one gene in every species since gene duplication and loss events make such orthogroups rare. For this reason, OrthoFinder will identify orthogroups that are single-copy in a proportion (p%) of species and use the single-copy genes from these orthogroups as additional data to infer the species tree. This is standard practice in most papers in which a species tree is inferred. OrthoFinder provides a formalised procedure for determining a suitable value of p. Let S be the number of species.\n1. Identify n, the number of orthogroups with exactly one gene in s species, where s is initially equal to S, the number of species in the analysis. If n >= 1000 stop here and use these orthogroups\n2. While n < 1000\n * set s = s-1\n * recalculate n, number of orthogroups with at least s species single-copy\n * If n >= 100 and the proportional increase in the number of orthogroups, n, is less than two times the proportional decrease in s then stop here and use the n orthogroups. Reducing the minimum threshold for single-copy species is not giving a large amount of extra data and so it's not worth reducing this threshold further. if s<0.5xS then require a 4 times proportional increase in the number of orthogroups to for each decrement in s to avoid lowering s too far.\n3. Create a concatenated species MSA from the single-copy genes in the selected orthogroups.\n4. Trim the MSA of any column that has more than (S - 0.5s) gaps. (I.e. S-s species could be gaps anyway because of the inclusion threshold that was determined and then at most 50% gaps in a particular column for the s genes represented for that column).\n5. When it is run, OrthoFinder outputs how many orthogroups it has identified and with what minimum threshold percentage of species single-copy in each orthogroup (100*s/S). E.g. for the example dataset: \n> Species tree: Using 246 orthogroups with minimum of 100.0% of species having single-copy genes in any orthogroup\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9932155795766374,
      "result": {
        "original_header": "Falback species tree method",
        "type": "Text_excerpt",
        "value": "In most datasets there will be thousands of genes present in all species and so the default species tree inference method can be used. In some extreme cases there may not be any such orthogroups. In these cases, instead of the default method, the pairwise distances are calculated in each tree for each species pair that is present in that tree. A single distance matrix is then calculated for the species tree rather than one distance matrix per orthogroup. The distance between each species pair is this matrix is the median of all the closest distances across all the orthogroup gene trees. The species trees is inferred from this distance matrix.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9362558006509974,
      "result": {
        "original_header": "Options controlling the programs used",
        "type": "Text_excerpt",
        "value": "**-S** \\<opt\\>: Sequence search program opt=blast,diamond,mmseqs,... user-extendable [Default = diamond]   \n**-A** \\<opt\\>: MSA program opt=mafft,muscle,... user-extendable (requires '-M msa') [Default = mafft]   \n**-T** \\<opt\\>: Tree inference program opt=fasttree,raxml,iqtree,... user-extendable (requires '-M msa') [Default = fasttree]    \n \n ### Further options\n**-d**: Input is DNA sequences \n**-t** \\<int\\>: Number of threads for sequence search, MSA & tree inference [Default is number of cores on machine]  \n**-a** \\<int\\>: Number of parallel analysis threads for internal, RAM intensive tasks [Default = 1]  \n**-s** \\<file\\>: User-specified rooted species tree  \n**-I** \\<int\\>: MCL inflation parameter [Default = 1.5]  \n**-x** \\<file\\>: Info for outputting results in OrthoXML format  \n**-p** \\<dir\\>:  Write the temporary pickle files to \\<dir\\>  \n**-1**: Only perform one-way sequence search  \n**-X**: Don't add species names to sequence IDs in output files  \n**-y**: Split paralogous clades below root of a HOG into separate HOGs  \n**-z**: Don't trim MSAs (columns>=90% gap, min. alignment length 500)  \n**-n** \\<txt\\>: Name to append to the results directory  \n**-o** \\<txt\\>: Non-default results directory  \n**-h**: Print this help text  \n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/davidemms/OrthoFinder/wiki"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/davidemms/OrthoFinder/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 186
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "davidemms/OrthoFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/assets/Workflow.png"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/assets/youtube_title_slide.jpg"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/assets/Orthogroups_Orthologues_Paralogues_v2.png"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "In addition to this README there is a set of OrthoFinder tutorials here: https://davidemms.github.io/",
        "type": "Text_excerpt",
        "value": "1. Downloading and running OrthoFinder\n2. Running an example OrthoFinder analysis\n3. Exploring OrthoFinder's results\n4. OrthoFinder best practices\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing OrthoFinder on Linux",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Getting started with OrthoFinder"
        ],
        "type": "Text_excerpt",
        "value": "You can install OrthoFinder using Bioconda or download it directly from GitHub. These are the instructions for direct download, see the tutorials for other methods.\n\n1. Download the latest release from github: https://github.com/davidemms/OrthoFinder/releases \n    * If you have python installed and the numpy and scipy libraries then download **OrthoFinder_source.tar.gz**.\n    * If not then download the larger bundled package, **OrthoFinder.tar.gz**.\n\n2. In a terminal, 'cd' to where you downloaded the package \n\n3. Extract the files: `tar xzf OrthoFinder_source.tar.gz`  or `tar xzf OrthoFinder.tar.gz`\n\n4. Test you can run OrthoFinder: `python OrthoFinder_source/orthofinder.py -h` or `./OrthoFinder/orthofinder -h`. OrthoFinder should print its 'help' text. \n\n5. That's it! You can now run OrthoFinder on a directory of protein sequence fasta files: e.g. `./OrthoFinder/orthofinder -f /OrthoFinder/ExampleData/`\n\nIf you want to move the orthofinder executable to another location then you must also place the accompanying config.json file and bin/ directory in the same directory as the orthofinder executable.\n\nOrthoFinder is written in python, but the bundled version does not require python to be installed on your computer. Both versions contain the programs OrthoFinder needs in order to run (in bin/), it will use these copies in preference to any of the same programs in your system path. You can delete the individual executables if you would prefer it not to do this. \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing OrthoFinder on Mac &amp; Windows",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Getting started with OrthoFinder"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install OrthoFinder on Mac is using Bioconda:\n\nvia bioconda: `conda install orthofinder`\n\nThe easiest way to run OrthoFinder on Windows is using the Windows Subsystem for Linux or Docker: [davidemms/orthofinder](https://hub.docker.com/r/davidemms/orthofinder): \n\n```\ndocker pull davidemms/orthofinder\ndocker run -it --rm davidemms/orthofinder orthofinder -h\ndocker run --ulimit nofile=1000000:1000000 -it --rm -v /full/path/to/fastas:/input:Z davidemms/orthofinder orthofinder -f /input\n```\n\nA more complete guide can be found here: <https://davidemms.github.io/orthofinder_tutorials/alternative-ways-of-getting-OrthoFinder.html>. Note that running OrthoFinder on Windows in a docker containner will not be as fast as running it natively.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Manually Installing Dependencies",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "To perform an analysis OrthoFinder requires some dependencies. The OrthoFinder release package now contains these so you should just be able to download it and run. \n\nHere are some brief instructions if you do need to download them manually. They will need to be in the system path, which you can check by using the 'which' command, e.g. `which diamond`. Each of these packages also contains more detailed installation instructions on their websites if you need them.\n\n**Standard workflow:**\n\n1. DIAMOND **or** MMseqs2 (recommended, although BLAST+ can be used instead) \n\n2. The MCL graph clustering algorithm \n\n3. FastME (The appropriate version for your system, e.g. 'fastme-2.1.5-linux64', should be renamed `fastme', see instructions below.) \n\n**MSA workflow:**\n\n4. Multiple sequence alignment program: MAFFT recommended\n\n5. Tree inference program: FastTree* recommended\n\n* FastTree is highly recommended, especially for a first analysis. Note that even a program as fast as IQTREE will take a very large amount of time to run on a reasonable sized dataset. If you intend to do this, it is recommended to try a faster method first (e.g. the standard workflow). Once you've confirmed everything is ok, you can restart the previous analysis from the point where these workflows diverge using the `-M msa` option.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIAMOND",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/bbuchfink/diamond/releases\n\nDownload the latest release, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/bbuchfink/diamond/releases/latest/download/diamond-linux64.tar.gz`\n- `tar xzf diamond-linux64.tar.gz`\n- `sudo cp diamond /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable. \nE.g. \n- `mkdir ~/bin`\n- `cp diamond ~/bin`\n- ``export PATH=$PATH:~/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MCL",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "The mcl clustering algorithm is available in the repositories of some Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install mcl`\n\nAlternatively, it can be built from source which will likely require the 'build-essential' or equivalent package on the Linux distribution being used. Instructions are provided on the MCL webpage, http://micans.org/mcl/.  \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "FastME",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "FastME can be obtained from http://www.atgc-montpellier.fr/fastme/binaries.php. The package contains a 'binaries/' directory. Choose the appropriate one for your system and copy it to somewhere in the system path e.g. '/usr/local/bin'** and name it 'fastme'. I.e.:\n\n- `sudo cp fastme-2.1.5-linux64 /usr/local/bin/fastme`\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: BLAST+",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "BLAST may give 1-2% accuracy increase over DIAMOND, but with a runtime of approximately 20x longer. NCBI BLAST+ is available in the repositories from most Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install ncbi-blast+`\n\nAlternatively, instructions are provided for installing BLAST+ on Mac and various flavours of Linux on the \"Standalone BLAST Setup for Unix\" page of the BLAST+ Help manual currently at http://www.ncbi.nlm.nih.gov/books/NBK1762/. Follow the instructions under \"Configuration\" in the BLAST+ help manual to add BLAST+ to the PATH environment variable.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: MMseqs2",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/soedinglab/MMseqs2/releases\n\nDownload the appropriate version for your machine, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/soedinglab/MMseqs2/releases/download/3-be8f6/MMseqs2-Linux-AVX2.tar.gz`\n- `tar xzf MMseqs2-Linux-AVX2.tar.gz`\n- `sudo cp mmseqs2/bin/mmseqs /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable \n- ``export PATH=$PATH:`pwd`/mmseqs2/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.846212071812464,
      "result": {
        "original_header": "What does OrthoFinder do?",
        "type": "Text_excerpt",
        "value": "For more details see the OrthoFinder papers below. \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9400926473703921,
      "result": {
        "original_header": "WorkingDirectory",
        "type": "Text_excerpt",
        "value": "This contains all the files necessary for orthofinder to run. You can ignore this.\n \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "gene-duplication, gene-trees, orthogroup, orthologs"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/License.md",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "OrthoFinder"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "davidemms"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 688490,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2023-05-15T07:25:14Z",
        "date_published": "2023-05-15T17:21:58Z",
        "description": "# New in this release\r\n- Reduce number of open files when writing orthologs to approximately one per species instead of one per species-pair, this should **resolve issues related to ulimit**.\r\n- Added option `--fewer-files`: Requests that OrthoFinder only write one orthologs file per species. This file will list all orthologs in all other species (the default is one file of orthologs for each species pair, listing only the orthologs between those two species).\r\n-- Added script `scripts_of/split_ortholog_files.py` to recreate one file of orthologs per species-pair from a OrthoFinder results directory produced with the `--fewer-files` option.\r\n- Dependency checks: Print debug info & preserve test files if dependency checks fail for tools that OrthoFinder calls.\r\n\r\n\r\n# Fixes:\r\n- 'U' file opening mode deprecated, removed\r\n- Use fork for multiprocessing on linux, resolves #663\r\n- Report top-level exceptions, resolves #673\r\n- Fix `tools/create_files_for_hogs.py` input arguments, resolves #647\r\n- Warn specifically if no self-hits, resolves #611\r\n- Fix HOGs when species removed, resolves #602",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.5.5",
        "name": "OrthoFinder v2.5.5",
        "release_id": 103040190,
        "tag": "2.5.5",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/103040190",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/103040190",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2021-07-08T09:55:25Z",
        "date_published": "2021-07-08T10:06:51Z",
        "description": "## New in this release\r\n* Add tool **create_files_for_hogs.py** for creating sequence fasta files for HOGs\r\n* Extend **primary_transcripts.py** script to interpret NCBI files\r\n* Reduce RAM usage when trimming for very large alignments\r\n* Resolve #526: Handle multiprocessing error occurring only in old versions of glibc\r\n* Resolve #557: Progress reports were sometimes reported out of order\r\n* Resolve #567: Check that the requested number of threads is positive\r\n* Resolve #570: Use fork instead of spawn on Mac\r\n* Resolve #580: Fix to allow primary transcripts script to work for NCBI isoforms labelled with letters\r\n* Resolve #586: Use tempfile library to handle tmp folders\r\n* Fix a problem with overwriting MSA files",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.5.4",
        "name": "OrthoFinder v2.5.4",
        "release_id": 45893540,
        "tag": "2.5.4",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/45893540",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/45893540",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2021-01-06T14:38:19Z",
        "date_published": "2021-01-06T15:26:21Z",
        "description": "## New in this release\r\nAdded option to use DIAMOND ultra-sensitive: \"-S diamond_ultra_sens\". This identifies homologs for approximately 2% more genes, depending on how closely the input species are related.",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.5.2",
        "name": "OrthoFinder v2.5.2",
        "release_id": 36050434,
        "tag": "2.5.2",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/36050434",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/36050434",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-11-30T15:08:23Z",
        "date_published": "2020-11-30T15:44:41Z",
        "description": "## New in this release\r\n* **Significant speed improvements for large analyses**\r\n  * For analyses of ~200 species total run times are 2-4x faster\r\n  * Parallelisation of final ortholog inference stage of algorithm (number of threads is controlled using \"-a\" option)\r\n  * For MSA tree inference OrthoFinder performs light trimming of the MSA. This prevents the runtime being dominated by tree inference for the largest orthogroups with very gappy MSAs.\r\n  * The tree inference using multiple sequence alignments option (\"-M msa\") is now comparable in speed to the default DendroBLAST method.\r\n\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.5.1",
        "name": "OrthoFinder v2.5.1",
        "release_id": 34582882,
        "tag": "2.5.1",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/34582882",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/34582882",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-11-06T16:12:23Z",
        "date_published": "2020-11-06T16:51:37Z",
        "description": "## New in this release\r\n* **Improvements to the accuracy of phylogenetically inferred hierarchical orthogroups (HOGs)**\r\n* Allow `config_orthofinder_user.json` as an extra config file in user's home directory to allow user-specific options and carrying user options between releases\r\n* Allow analysis of nucleotide sequences with `-d` option\r\n* Resolve #453 \r\n* Resolve #475 \r\n* Resolve #476 \r\n\r\n### Details\r\n* Orthogroups are now inferred using gene trees and are found in Phylogenetic_Hierarchical_Orthogroups/N0.tsv etc. The original OGs inferred using clustering are still in Orthogroups/Orthogroups.tsv, but the N0.tsv orthgroups are ~12% more accurate and should be used instead. \r\n* The accuracy can be increased still further (20% more accurate on Orthobench) by including outgroup species, which help with the interpretation of the rooted gene trees. The species tree should then be used to identify the correct HOG file, N??.tsv according to the correct node of the species tree.\r\n* It is important to ensure that the species tree OrthoFinder is using is accurate so as to maximise the accuracy of the HOGs. To reanalyse with a different species tree use the options `-ft PREVIOUS_RESULTS_DIR -s SPECIES_TREE_FILE`. This runs just the final analysis steps \"from trees\" and is relatively quick. \r\n* Further accuracy increases can be obtained by using a lower MCL inflation value (e.g. `-I 1.3`) since this brings more genes into the gene trees, and the HOG algorithm will split the hierarchical orthogroups if required. On Orthobench this gives ~2% increase in accuracy. \r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.4.1",
        "name": "OrthoFinder v2.4.1",
        "release_id": 33574303,
        "tag": "2.4.1",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/33574303",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/33574303",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-07-15T17:29:04Z",
        "date_published": "2020-07-15T17:30:50Z",
        "description": "### New in this release\r\n**Phylogenetically inferred orthogroups**: OrthoFinder now creates a new directory that contains orthogroups defined at each level in the species tree. These orthogroups are inferred by examining the gene trees using the same algorithm that OrthoFinder uses to infer orthologs. Because they are inferred by analysing gene trees they are substantially more accurate than any other method available (and give an approximately 10% relative increase in accuracy on the Orthobench benchmarks compared to OrthoFinder version 2). These files are in the new results directory **Phylogenetic_Hierarchical_Orthogroups/**.\r\n\r\nBecause OrthoFinder now infers orthogroups at each phylogenetic level within the species tree it is now possible to **include outgroup species** in your analysis. Then, to see the orthogroups for just your species of interest just use the corresponding file from the Phylogenetic_Hierarchical_Orthogroups/. The clade names N1, N2, etc. can be found in Species_Tree/SpeciesTree_rooted_node_labels.txt. The use of outgroup species can further increase accuracy (~13% relative increase compared to OrthoFinder v2). \r\n\r\nHierarchical orthogroups are useful because, due to gene duplication events, orthogroups become more fine grained as the species become more closely related:\r\n![Hierarchical Orthogroups](https://raw.githubusercontent.com/davidemms/OrthoFinder/master/assets/Hierarchical_Orthogroups.png)\r\n\r\nThis is the first of a two part series of developments to increase OrthoFinder orthogroup accuracy using the analysis of gene trees.\r\n\r\n### Which package to download:\r\n* On **Linux** download **OrthoFinder.tar.gz**. This bundles all the required external dependencies (mcl, diamond, fastme) and python libraries and so should run immediately, without any installation being required.\r\n* On **Mac** the bioconda package is probably the easiest method: See [Bioconda getting started](https://bioconda.github.io/) and, once bioconda is set up, run `conda install orthofinder`\r\n* On either platform you can run the source code version but you will need to have python and the numpy & scipy libraries installed.\r\n* On **Windows** the best way is to install the Windows Subsystem for Linux and then use the linux version\r\nMore detailed instructions here: <https://davidemms.github.io/orthofinder_tutorials/alternative-ways-of-getting-OrthoFinder.html>",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.4.0",
        "name": "OrthoFinder v2.4.0",
        "release_id": 28594491,
        "tag": "2.4.0",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/28594491",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/28594491",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-07-15T14:08:44Z",
        "date_published": "2020-07-15T15:52:20Z",
        "description": "This is a stable release that fixes any known issues in the previous release.\r\n\r\n### Which package to download:\r\n* On **Linux** download **OrthoFinder.tar.gz**. This bundles all the required external dependencies (mcl, diamond, fastme) and python libraries and so should run immediately, without any installation being required.\r\n* On **Mac** the bioconda package is probably the easiest method: See [Bioconda getting started](https://bioconda.github.io/) and, once bioconda is set up, run `conda install orthofinder`\r\n* On either platform you can run the source code version but you will need to have python and the numpy & scipy libraries installed.\r\n* On **Windows** the best way is to install the Windows Subsystem for Linux and then use the linux version\r\nMore detailed instructions here: <https://davidemms.github.io/orthofinder_tutorials/alternative-ways-of-getting-OrthoFinder.html>\r\n\r\n### Issues resolved\r\n* 'taskset' was previously used to resolve a problem with CPU affinity affecting python multiprocessing. This should no longer be an issue and has been removed.\r\n* Issue warning and continue if MSA fails, resolves #407\r\n* Fix to allow new directory in current directory, resolves #403\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.14",
        "name": "OrthoFinder v2.3.14 (stable)",
        "release_id": 28590352,
        "tag": "2.3.14",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.14",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/28590352",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/28590352",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-05-07T13:49:19Z",
        "date_published": "2020-05-07T16:21:02Z",
        "description": "This is a stable release that fixes any known issues in the previous release.\r\n\r\n### Which package to download:\r\n* On **Linux** download **OrthoFinder.tar.gz**. This bundles all the required external dependencies (mcl, diamond, fastme) and python libraries and so should run immediately, without any installation being required.\r\n* On **Mac** the bioconda package is probably the easiest method: See [Bioconda getting started](https://bioconda.github.io/) and, once bioconda is set up, run `conda install orthofinder`\r\n* On either platform you can run the source code version but you will need to have python and the numpy & scipy libraries installed.\r\n* On **Windows** the best way is to install the Windows Subsystem for Linux and then use the linux version\r\nMore detailed instructions here: <https://davidemms.github.io/orthofinder_tutorials/alternative-ways-of-getting-OrthoFinder.html>\r\n\r\n### Issues resolved\r\n* Update primary_transcript.py for python3, resolves #345\r\n* Vectorise alignment trimming, 45mins->1.5s on 6 species x 3 million base alignment\r\n* Updates to Manual & README\r\n* Set OPENBLAS_NUM_THREADS=1, resolves #356\r\n* Fix reporting of external program error messages\r\n* Exception.message deprecated in python3, resolves #375\r\n* Correct handling of species tree without support values, resolves #379\r\n* Improve handling of commented out species\r\n* Check at start if open file limit is too low and inform user, resolves #384",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.12",
        "name": "OrthoFinder v2.3.12 (stable)",
        "release_id": 26279521,
        "tag": "2.3.12",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.12",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/26279521",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/26279521",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-02-10T17:15:13Z",
        "date_published": "2020-02-11T11:04:09Z",
        "description": "### Which version to download:\r\n* On Linux download **OrthoFinder.tar.gz**. This bundles all the required external dependencies (mcl, diamond, fastme) and python libraries and so should run immediately, without any installation being required.\r\n* On Mac the bioconda package is probably the easiest method: See [Bioconda getting started](https://bioconda.github.io/) and, once bioconda is set up, run `conda install orthofinder`\r\n* On either platform you can run the source code version but you will need to have python and the numpy & scipy libraries installed.\r\n\r\n### New in this release\r\n* Resolve an issue in some situations when using OrthoFinder on Mac using bioconda. OrthoFinder would find mcl/diamond but would then be unable to call them when required. \r\n* Binary package (OrthoFinder.tar.gz) is now built for glibc versions 2.15 onwards for wider compatibility",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.11",
        "name": "OrthoFinder v2.3.11",
        "release_id": 23563234,
        "tag": "2.3.11",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.11",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/23563234",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/23563234",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2020-02-06T14:44:06Z",
        "date_published": "2020-02-06T15:33:58Z",
        "description": "* Bug fixes for upgrade to Python 3\r\n* Default package is now built for glibc versions 2.15 onwards for wider compatibility ",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.10",
        "name": "OrthoFinder v2.3.10",
        "release_id": 23450032,
        "tag": "2.3.10",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.10",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/23450032",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/23450032",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2019-11-28T12:21:31Z",
        "date_published": "2019-11-28T12:54:20Z",
        "description": "- Add support for Python 3 (continues to support Python 2.7)",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.8",
        "name": "OrthoFinder v2.3.8",
        "release_id": 21830188,
        "tag": "2.3.8",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/21830188",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/21830188",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2019-10-22T14:03:12Z",
        "date_published": "2019-10-22T16:47:06Z",
        "description": "Improvements:\r\n- OrthoFinder now includes all it's dependencies so you should be able to just download it, unpack it and run\r\n- Identify species-specific orthogroups\r\n- Automatically root trees in 'Gene_Trees' directory and include support values if available (trees in 'Resolved_Gene_Trees' directory were already rooted)  \r\n\r\nFixes:\r\n- **Resolve issue with Sophos causing final ortholog inference step to take a very long time (Issue <https://github.com/davidemms/OrthoFinder/issues/294>)**\r\n- Resolve MMseqs issue with long sequences (>65535 AA) (Issue <https://github.com/davidemms/OrthoFinder/issues/269>)\r\n- Improve parallelisation of DendroBLAST gene trees\r\n- Fix writing of phylogenetically misplaced genes to file (Issue <https://github.com/davidemms/OrthoFinder/issues/288>)\r\n- Skip missing trees for STAG (Issue <https://github.com/davidemms/OrthoFinder/issues/293>)",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.7",
        "name": "OrthoFinder v2.3.7",
        "release_id": 20889543,
        "tag": "2.3.7",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/20889543",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/20889543",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2019-04-29T14:21:49Z",
        "date_published": "2019-04-30T11:21:26Z",
        "description": "- **New, redesigned and clearer results directory structure**\r\n- **Bug fixes for previous beta release**\r\n\r\nThe results directory created by OrthoFinder has been redesigned to make it a lot clearer to see where all the results files, there are a lot of them now! \r\n```\r\nResults_Nov08/\r\n  Comparative_Genomics_Statistics/\r\n  Gene_Duplication_Events/\r\n  Gene_Trees/\r\n  Orthogroups/\r\n  Orthogroup_Sequences/\r\n  Orthologues/\r\n  Resolved_Gene_Trees/\r\n  Single_Copy_Orthologue_Sequences/\r\n  Species_Tree/\r\n  Log.txt\r\n```\r\n\r\nThe binary package OrthoFinder-2.3.3.tar.gz has been built to use GLIBC 2.27. If you have an older system it may not support this, in which case you can use OrthoFinder-2.3.3_glibc-2.19.tar.gz, which should work on any current Linux distribution.\r\n\r\nFixes:\r\n- Fix labelling of nodes in resolved gene trees so that they correctly correspond to gene duplication events listed in the Duplications.tsv file.\r\n- Add option '-X' to deactivate inclusion of species name in the gene IDs.\r\n- Print any error messages from DIAMOND/BLAST to enable identification of problems in input FASTA files.\r\n- Use a larger test alignment file to prevent errors from raxml-ng.\r\n- If extending a previous analysis, make no changes to files in previous directory.",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.3.3",
        "name": "OrthoFinder v2.3.3",
        "release_id": 17063522,
        "tag": "2.3.3",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/17063522",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/17063522",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-11-08T10:49:21Z",
        "date_published": "2018-11-08T17:40:57Z",
        "description": "**New, redesigned and clearer results directory structure**\r\n\r\nThe results directory created by OrthoFinder has been redesigned to make it a lot clearer to see where all the results files, there are a lot of them now! \r\n\r\n```\r\nResults_Nov08/\r\n  Comparative_Genomics_Statistics/\r\n  Gene_Duplication_Events/\r\n  Gene_Trees/\r\n  Orthogroups/\r\n  Orthogroup_Sequences/\r\n  Orthologues/\r\n  Resolved_Gene_Trees/\r\n  Single_Copy_Orthologue_Sequences/\r\n  Species_Tree/\r\n  Log.txt\r\n```\r\n\r\n**DIAMOND is now the default for the all-v-all search, replacing BLAST. It is many times faster with little change in accuracy.**\r\n\r\nThis is a beta release. The latest stable release is v2.2.7 below.\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/v2.3.1-beta",
        "name": "OrthoFinder v2.3.1 (beta)",
        "release_id": 13903707,
        "tag": "v2.3.1-beta",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/v2.3.1-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/13903707",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/13903707",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/v2.3.1-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-08-30T15:34:54Z",
        "date_published": "2018-08-31T14:07:41Z",
        "description": "**New to this release**\r\n- Added support for [MMseqs2](https://github.com/soedinglab/MMseqs2), use '-S mmseqs' for faster all-versus-all sequence search\r\n- Added support for [RAxML-NG](https://github.com/amkozlov/raxml-ng), use '-M msa -T raxml-ng'\r\n\r\n**OrthoFinder version 2** \r\nThe next paper describing the new functionality will be out soon. \r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- The species tree inference method has been updated, \"STAG: Species Tree Inference from All Genes\"\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/v2.2.7",
        "name": "OrthoFinder v2.2.7",
        "release_id": 12675345,
        "tag": "v2.2.7",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/v2.2.7",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/12675345",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/12675345",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/v2.2.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-05-21T16:08:24Z",
        "date_published": "2018-05-21T16:18:08Z",
        "description": "**OrthoFinder version 2** \r\nThe next paper describing the new functionality will be out soon. \r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- The species tree inference method has been updated, \"STAG: Species Tree Inference from All Genes\"\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n\r\n**New to this release**\r\n- Fix for resolving of non-binary gene trees\r\n- Detect if lack of RAM has caused parallel OrthoFinder processes to be killed\r\n- Fix to only check for required species in user species tree (don't check for excluded species)",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/v2.2.6",
        "name": "OrthoFinder v2.2.6",
        "release_id": 11098087,
        "tag": "v2.2.6",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/v2.2.6",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/11098087",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/11098087",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/v2.2.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-04-06T14:07:47Z",
        "date_published": "2018-04-11T11:07:56Z",
        "description": "**OrthoFinder version 2** \r\nThe next paper describing the new functionality will be out soon. \r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- The species tree inference method has been updated, \"STAG: Species Tree Inference from All Genes\"\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n\r\n**New to this release**\r\n- Fixes to allow resolving of non-binary gene trees",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/v2.2.3",
        "name": "OrthoFinder v2.2.3",
        "release_id": 10493479,
        "tag": "v2.2.3",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/v2.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/10493479",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/10493479",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/v2.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-03-09T10:48:01Z",
        "date_published": "2018-03-09T11:24:12Z",
        "description": "**OrthoFinder version 2** \r\nThe next paper describing the new functionality will be out soon. \r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- The species tree inference method has been updated, \"STAG: Species Tree Inference from All Genes\"\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n\r\n**New to this release**\r\n- Fixes to allow fewer than 4 species and to deal with species trees that are not fully resolved",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.2.1",
        "name": "OrthoFinder v2.2.1",
        "release_id": 10014464,
        "tag": "2.2.1",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/10014464",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/10014464",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2018-02-19T16:05:22Z",
        "date_published": "2018-02-19T16:07:01Z",
        "description": "**OrthoFinder version 2** \r\nThe next paper describing the new functionality will be out soon. \r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- The species tree inference method has been updated, \"STAG: Species Tree Inference from All Genes\"\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n\r\n**New to this release**\r\n- Performance and RAM improvements for large datasets\r\n- Identify horizontally transferred genes\r\n- Improved rooting of gene trees\r\n- Improved identification of orthologues from gene trees",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.2.0",
        "name": "OrthoFinder v2.2.0",
        "release_id": 9736844,
        "tag": "2.2.0",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/9736844",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/9736844",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2017-11-21T15:48:53Z",
        "date_published": "2017-11-21T15:57:50Z",
        "description": "**OrthoFinder version 2** \r\nOur next paper describing the new functionality will be out soon. Note, output files and default options could potentially change before the final version but results should stay the same\r\n\r\n**New to version 2:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n\r\n**New to this release**\r\n- Performance improvements for large datasets\r\n- Support compressed BLAST/DIAMOND results files\r\n- MSA method for species tree\r\n- Orthologue statistics\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.1.2",
        "name": "OrthoFinder v2.1.2",
        "release_id": 8605267,
        "tag": "2.1.2",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/8605267",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/8605267",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2017-10-01T17:21:09Z",
        "date_published": "2017-10-01T17:32:36Z",
        "description": "**New Version 2.0 beta release!** \r\n(Our next paper describing the new functionality will be out soon. Note, output files and default options could potentially change before the final version but all results should stay the same)\r\n\r\n**New:**\r\n- **Improved orthologues from gene trees inference method**: A new method has been implemented that replaces dlcpar as the default. The new method is both **significantly faster and more accurate**. This is achieved by focusing analysis only on nodes of the gene tree that affect orthologue inference (large trees now analysed in second rather than hours). \r\n- The **orthologue accuracy** has been benchmarked with the community [Quest for Orthologs](http://orthology.benchmarkservice.org/cgi-bin/gateway.pl) service and the results can be seen on their website. \r\n- Our newly published method, [STRIDE: Species Tree Root Inference from Gene Duplication Events](https://doi.org/10.1093/molbev/msx259), has been integrated for rooting of the species tree.\r\n- A new results table of **all gene duplication events** for each branch of the species tree is provided. The duplication events are cross-referenced to the gene trees, the support for each is quantified, and the ones meeting the stringent **STRIDE** checks are marked. \r\n- Consider using the [Diamond](https://github.com/bbuchfink/diamond) option instead of BLAST. The benchmarks show that the accuracy is similar (see link above) but DIAMOND is **incredibly fast**!\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/2.0.0-beta",
        "name": "OrthoFinder v2.0.0-beta",
        "release_id": 7956156,
        "tag": "2.0.0-beta",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/2.0.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/7956156",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/7956156",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/2.0.0-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2017-09-01T09:14:21Z",
        "date_published": "2017-09-12T10:02:37Z",
        "description": "**Recently Added Functionality:**\r\n- **New SingleCopyOrthogroups.txt** results file i.e. orthogroups containing only **one-to-one orthologues** relevant for cross-species comparisons.\r\n- **Allow any multiple sequence alignment and tree inference program** to be used for inference of gene trees\r\n- New MSA and tree inference tools can be user-added by adding a tool to the [config.json file](https://github.com/davidemms/OrthoFinder/blob/master/orthofinder/config.json).\r\n- **Allow [Diamond](http://www.nature.com/nmeth/journal/v12/n1/full/nmeth.3176.html) as a significantly faster alternative to BLAST** search. Available on [github](https://github.com/bbuchfink/diamond).\r\n- **New Orthogroups.GeneCount.csv** results file giving the number of genes per species in each orthogroup, allowing easy plotting of orthogroup results.\r\n- Updated the **manual**.\r\n\r\n**Version 1.1.10**:  Resolved some minor issues since version 1.1.8\r\n\r\nAs of version 1, automated inference of:\r\n- **Orthologues** (in addition to previously inferred orthogroups). See [Orthogroups, Orthologues & Paralogues](https://github.com/davidemms/OrthoFinder#orthogroups-orthologues--paralogues).\r\n- **Gene trees** for all orthogroups\r\n- **Rooted species tree**\r\n\r\nThere are extra dependencies need to perform the new (version 1) analyses, please see README file: https://github.com/davidemms/OrthoFinder\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.1.10",
        "name": "OrthoFinder v1.1.10",
        "release_id": 7720338,
        "tag": "1.1.10",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.1.10",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/7720338",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/7720338",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.1.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2017-06-14T15:11:38Z",
        "date_published": "2017-06-14T15:13:22Z",
        "description": "Added Functionality:\r\n- **New SingleCopyOrthogroups.txt** results file i.e. orthogroups containing only **one-to-one orthologues** relevant for cross-species comparisons.\r\n- **Allow any multiple sequence alignment and tree inference program** to be used for inference of gene trees\r\n- New MSA and tree inference tools can be user-added by adding a tool to the [config.json file](https://github.com/davidemms/OrthoFinder/blob/master/orthofinder/config.json).\r\n- **Allow [Diamond](http://www.nature.com/nmeth/journal/v12/n1/full/nmeth.3176.html) as a significantly faster alternative to BLAST** search. Available on [github](https://github.com/bbuchfink/diamond).\r\n- **New Orthogroups.GeneCount.csv** results file giving the number of genes per species in each orthogroup, allowing easy plotting of orthogroup results.\r\n- Updated the **manual**.\r\n\r\nAs of version 1, automated inference of:\r\n- **Orthologues** (in addition to previously inferred orthogroups). See [Orthogroups, Orthologues & Paralogues](https://github.com/davidemms/OrthoFinder#orthogroups-orthologues--paralogues).\r\n- **Gene trees** for all orthogroups\r\n- **Rooted species tree**\r\n\r\nThere are extra dependencies need to perform the new (version 1) analyses, please see README file: https://github.com/davidemms/OrthoFinder\r\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.1.8",
        "name": "OrthoFinder v1.1.8",
        "release_id": 6708686,
        "tag": "1.1.8",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/6708686",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/6708686",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-12-16T10:55:54Z",
        "date_published": "2017-01-27T16:30:03Z",
        "description": "Additional functionality:\n- Perform orthologue inference using gene trees inferred from multiple sequence alignments (requires MAFFT and FastTree)\n- Add extra options to control which steps of workflow to perform: e.g. write sequence files for orthogroups  \n\nAs of version 1, automated inference of:\n- orthologues (in addition to previously inferred orthogroups)\n- gene trees for all orthogroups\n- rooted species tree\n\nThere are extra dependencies need to perform the new (version 1) analyses, please see README file: https://github.com/davidemms/OrthoFinder\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.1.4",
        "name": "OrthoFinder v1.1.4",
        "release_id": 5287244,
        "tag": "1.1.4",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/5287244",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/5287244",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-11-25T17:30:36Z",
        "date_published": "2016-11-25T17:37:32Z",
        "description": "Additional functionality:\n- Orthologues inference using user-provided species tree \n- Start orthologue inference from previous orthogroups or from previous trees\n\nAs of version 1, automated inference of:\n- orthologues (in addition to previously inferred orthogroups)\n- gene trees for all orthogroups\n- rooted species tree\n\nThere are extra dependencies need to perform the new (version 1) analyses, please see README file: https://github.com/davidemms/OrthoFinder\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.1.2",
        "name": "OrthoFinder v1.1.2",
        "release_id": 4760975,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4760975",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4760975",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-11-08T14:45:37Z",
        "date_published": "2016-11-08T14:49:52Z",
        "description": "New, automated inference of:\n- orthologues (in addition to previously inferred orthogroups)\n- gene trees for all orthogroups\n- rooted species tree\n\nThere are extra dependencies need to perform the new analyses, please see README file: https://github.com/davidemms/OrthoFinder\n\n_Fix to standalone binary unable to run BLAST, DLCpar etc.._\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.0.8",
        "name": "OrthoFinder v1.0.8",
        "release_id": 4603316,
        "tag": "1.0.8",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4603316",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4603316",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-10-03T15:51:28Z",
        "date_published": "2016-10-11T08:16:19Z",
        "description": "New, automated inference of:\n- orthologues (in addition to previously inferred orthogroups)\n- gene trees for all orthogroups\n- rooted species tree\n\nThere are extra dependencies need to perform the new analyses, please see README file: https://github.com/davidemms/OrthoFinder\n\n_Fix to handle new command line format for dlcpar._\n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.0.7",
        "name": "OrthoFinder v1.0.7",
        "release_id": 4355977,
        "tag": "1.0.7",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4355977",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4355977",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-09-27T11:56:23Z",
        "date_published": "2016-09-27T11:59:31Z",
        "description": "New, automated inference of:\n- orthologues (in addition to previously inferred orthogroups)\n- gene trees for all orthogroups\n- rooted species tree\n\nThere are extra dependencies need to perform the new analyses, please see README file: https://github.com/davidemms/OrthoFinder \n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.0.6",
        "name": "OrthoFinder v1.0.6",
        "release_id": 4239519,
        "tag": "1.0.6",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4239519",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4239519",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-09-07T17:10:12Z",
        "date_published": "2016-09-07T17:15:44Z",
        "description": "New, automated inference of:\n- gene trees for all orthogroups\n- rooted species tree\n- orthologues\n  This is a beta release, if you are not interested in any of the new functionality you should download the previous non-beta version. There are two extra dependencies need to perform the new analyses (fastme & DLCpar), please see README file: https://github.com/davidemms/OrthoFinder\n\nUpdates: removed need for ete2, reduced package size, restructured output files. \n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/1.0.2-beta",
        "name": "OrthoFinder v1.0.2-beta",
        "release_id": 4068208,
        "tag": "1.0.2-beta",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/1.0.2-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4068208",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4068208",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/1.0.2-beta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "davidemms",
          "type": "User"
        },
        "date_created": "2016-08-30T22:36:01Z",
        "date_published": "2016-08-31T07:36:32Z",
        "description": "New, automated inference of:\n- gene trees for all orthogroups\n- rooted species tree\n- orthologues\n\nThis is a beta release, if you are not interested in any of the new functionality you should download the previous non-beta version. There are extra dependencies need to perform the new analyses, please see README file: https://github.com/davidemms/OrthoFinder \n",
        "html_url": "https://github.com/davidemms/OrthoFinder/releases/tag/v1.0.0-beta",
        "name": "OrthoFinder v1.0.0-beta",
        "release_id": 4013347,
        "tag": "v1.0.0-beta",
        "tarball_url": "https://api.github.com/repos/davidemms/OrthoFinder/tarball/v1.0.0-beta",
        "type": "Release",
        "url": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4013347",
        "value": "https://api.github.com/repos/davidemms/OrthoFinder/releases/4013347",
        "zipball_url": "https://api.github.com/repos/davidemms/OrthoFinder/zipball/v1.0.0-beta"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Manually Installing Dependencies",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "To perform an analysis OrthoFinder requires some dependencies. The OrthoFinder release package now contains these so you should just be able to download it and run. \n\nHere are some brief instructions if you do need to download them manually. They will need to be in the system path, which you can check by using the 'which' command, e.g. `which diamond`. Each of these packages also contains more detailed installation instructions on their websites if you need them.\n\n**Standard workflow:**\n\n1. DIAMOND **or** MMseqs2 (recommended, although BLAST+ can be used instead) \n\n2. The MCL graph clustering algorithm \n\n3. FastME (The appropriate version for your system, e.g. 'fastme-2.1.5-linux64', should be renamed `fastme', see instructions below.) \n\n**MSA workflow:**\n\n4. Multiple sequence alignment program: MAFFT recommended\n\n5. Tree inference program: FastTree* recommended\n\n* FastTree is highly recommended, especially for a first analysis. Note that even a program as fast as IQTREE will take a very large amount of time to run on a reasonable sized dataset. If you intend to do this, it is recommended to try a faster method first (e.g. the standard workflow). Once you've confirmed everything is ok, you can restart the previous analysis from the point where these workflows diverge using the `-M msa` option.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIAMOND",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/bbuchfink/diamond/releases\n\nDownload the latest release, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/bbuchfink/diamond/releases/latest/download/diamond-linux64.tar.gz`\n- `tar xzf diamond-linux64.tar.gz`\n- `sudo cp diamond /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable. \nE.g. \n- `mkdir ~/bin`\n- `cp diamond ~/bin`\n- ``export PATH=$PATH:~/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MCL",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "The mcl clustering algorithm is available in the repositories of some Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install mcl`\n\nAlternatively, it can be built from source which will likely require the 'build-essential' or equivalent package on the Linux distribution being used. Instructions are provided on the MCL webpage, http://micans.org/mcl/.  \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "FastME",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "FastME can be obtained from http://www.atgc-montpellier.fr/fastme/binaries.php. The package contains a 'binaries/' directory. Choose the appropriate one for your system and copy it to somewhere in the system path e.g. '/usr/local/bin'** and name it 'fastme'. I.e.:\n\n- `sudo cp fastme-2.1.5-linux64 /usr/local/bin/fastme`\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: BLAST+",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "BLAST may give 1-2% accuracy increase over DIAMOND, but with a runtime of approximately 20x longer. NCBI BLAST+ is available in the repositories from most Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install ncbi-blast+`\n\nAlternatively, instructions are provided for installing BLAST+ on Mac and various flavours of Linux on the \"Standalone BLAST Setup for Unix\" page of the BLAST+ Help manual currently at http://www.ncbi.nlm.nih.gov/books/NBK1762/. Follow the instructions under \"Configuration\" in the BLAST+ help manual to add BLAST+ to the PATH environment variable.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: MMseqs2",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/soedinglab/MMseqs2/releases\n\nDownload the appropriate version for your machine, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/soedinglab/MMseqs2/releases/download/3-be8f6/MMseqs2-Linux-AVX2.tar.gz`\n- `tar xzf MMseqs2-Linux-AVX2.tar.gz`\n- `sudo cp mmseqs2/bin/mmseqs /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable \n- ``export PATH=$PATH:`pwd`/mmseqs2/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running OrthoFinder",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics"
        ],
        "type": "Text_excerpt",
        "value": "To run OrthoFinder on the Example Data type:\n\n`OrthoFinder/orthofinder -f OrthoFinder/ExampleData`\n\nTo run on your own dataset, replace \"OrthoFinder/ExampleData\" with the directory containing your input fasta files, with one file per species. OrthoFinder will look for input fasta files with any of the following filename extensions:\n* .fa\n* .faa\n* .fasta\n* .fas\n* .pep\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running BLAST Searches Separately (-op option)",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "The '-op' option will prepare the files in the format required by OrthoFinder and print the set of BLAST commands that need to be run. \n- `orthofinder -f fasta_files_directory -op`\n\nThis is useful if you want to manage the BLAST searches yourself. For example, you may want to distribute them across multiple machines. Once the BLAST searches have been completed the orthogroups can be calculated using the '-b' command as described in Section \"Using Pre-Computed BLAST Results\".\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:06:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 684
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "In addition to this README there is a set of OrthoFinder tutorials here: https://davidemms.github.io/",
        "type": "Text_excerpt",
        "value": "1. Downloading and running OrthoFinder\n2. Running an example OrthoFinder analysis\n3. Exploring OrthoFinder's results\n4. OrthoFinder best practices\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting started with OrthoFinder",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics"
        ],
        "type": "Text_excerpt",
        "value": "You can find a step-by-step tutorial here: [Downloading and checking OrthoFinder](https://davidemms.github.io/orthofinder_tutorials/downloading-and-checking-orthofinder.html) including **instructions for Mac**, for which Bioconda is recommended and **Windows**, for which the Windows Subsystem for Linux is recommended. There are also tutorials on that site which guide you through running your first analysis and exploring the results files. \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Source Code Version",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "There is a standalone binary for OrthoFinder which do not require python or scipy to be installed which is therefore the easiest for many users. However, the python source code version is available from the github 'releases' page (e.g. 'OrthoFinder_source.tar.gz') and requires python 2.7 or python 3 plus scipy & numpy to be installed. Up-to-date and clear instructions for scipy/numpy are provided here: http://www.scipy.org/install.html. As websites can change, an alternative is to search online for \"install scipy\". \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "DIAMOND",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/bbuchfink/diamond/releases\n\nDownload the latest release, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/bbuchfink/diamond/releases/latest/download/diamond-linux64.tar.gz`\n- `tar xzf diamond-linux64.tar.gz`\n- `sudo cp diamond /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable. \nE.g. \n- `mkdir ~/bin`\n- `cp diamond ~/bin`\n- ``export PATH=$PATH:~/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MCL",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "The mcl clustering algorithm is available in the repositories of some Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install mcl`\n\nAlternatively, it can be built from source which will likely require the 'build-essential' or equivalent package on the Linux distribution being used. Instructions are provided on the MCL webpage, http://micans.org/mcl/.  \n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "FastME",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "FastME can be obtained from http://www.atgc-montpellier.fr/fastme/binaries.php. The package contains a 'binaries/' directory. Choose the appropriate one for your system and copy it to somewhere in the system path e.g. '/usr/local/bin'** and name it 'fastme'. I.e.:\n\n- `sudo cp fastme-2.1.5-linux64 /usr/local/bin/fastme`\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: BLAST+",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "BLAST may give 1-2% accuracy increase over DIAMOND, but with a runtime of approximately 20x longer. NCBI BLAST+ is available in the repositories from most Linux distributions and so can be installed in the same way as any other package. For example, on Ubuntu, Debian, Linux Mint:\n- `sudo apt-get install ncbi-blast+`\n\nAlternatively, instructions are provided for installing BLAST+ on Mac and various flavours of Linux on the \"Standalone BLAST Setup for Unix\" page of the BLAST+ Help manual currently at http://www.ncbi.nlm.nih.gov/books/NBK1762/. Follow the instructions under \"Configuration\" in the BLAST+ help manual to add BLAST+ to the PATH environment variable.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Optional: MMseqs2",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage",
          "Manually Installing Dependencies"
        ],
        "type": "Text_excerpt",
        "value": "Available here: https://github.com/soedinglab/MMseqs2/releases\n\nDownload the appropriate version for your machine, extract it and copy the executable to a directory in your system path, e.g.:\n- `wget https://github.com/soedinglab/MMseqs2/releases/download/3-be8f6/MMseqs2-Linux-AVX2.tar.gz`\n- `tar xzf MMseqs2-Linux-AVX2.tar.gz`\n- `sudo cp mmseqs2/bin/mmseqs /usr/local/bin`\n\nor alternatively if you don't have root privileges, instead of the last step above, add the directory containing the directory to your PATH variable \n- ``export PATH=$PATH:`pwd`/mmseqs2/bin/``\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "config.json : Adding addtional programs for tree inference, local alignment or MSA",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "You can actually use **any** alignment or tree inference program you like the best! Be careful with the method you chose, OrthoFinder typically needs to infer about 10,000-20,000 gene trees. If you have many species or if the tree/alignment method isn't super-fast then this can take a very long time! MAFFT + FastTree provides a reasonable compromise. OrthoFinder already knows how to call:\n- mafft\n- muscle\n- iqtree\n- raxml\n- raxml-ng\n- fasttree\n\nFor example, to you muscle and iqtree, the command like arguments you need to add are: `\"-M msa -A muscle -T iqtree\"`\n\nOrthoFinder also knows how to use the following local sequence alignment programs:\n- BLAST\n- DIAMOND\n- MMSeqs2\n\nIf you want to use a different program, there is a simple configuration file called **\"config.json\"** in the orthofinder directory and you can also create a file of the same format called **\"config_orthofinder_user.json\"** in your user home directory. You just need to add an entry to tell OrthoFinder what the command line looks like for the program you want to use. There are lots of examples in the file that you can follow. The \"config.json\" file is read first and then the \"config_orthofinder_user.json\", if it is present. The config_orthofinder_user.json file can be used to add user-specific options and to overwrite options from config.json. In most cases it is best to add additional options to the \"config_orthofinder_user.json\" since these will continue to apply if you update your version of OrthoFinder.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adding Extra Species",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "OrthoFinder allows you to add extra species without re-running the previously computed BLAST searches:\n\n- `orthofinder -b previous_orthofinder_directory -f new_fasta_directory`\n\nThis will add each species from the 'new_fasta_directory' to existing set of species, reuse all the previous BLAST results, perform only the new BLAST searches required for the new species and recalculate the orthogroups. The 'previous_orthofinder_directory' is the OrthoFinder 'WorkingDirectory/' containing the file 'SpeciesIDs.txt'.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Removing Species",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "OrthoFinder allows you to remove species from a previous analysis. In the 'WorkingDirectory/' from a previous analysis there is a file called 'SpeciesIDs.txt'. Comment out any species to be removed from the analysis using a '#' character and then run OrthoFinder using: \n\n- `orthofinder -b previous_orthofinder_directory`\n\nwhere 'previous_orthofinder_directory' is the OrthoFinder 'WorkingDirectory/' containing the file 'SpeciesIDs.txt'.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adding and Removing Species Simultaneously",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "The previous two options can be combined, comment out the species to be removed as described above and use the command:\n- `orthofinder -b previous_orthofinder_directory -f new_fasta_directory`\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inferring Multiple Sequence Alignment (MSA) Gene Trees",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "Trees can be inferred using  multiple sequence alignments (MSA) by using the option \"-M msa\". By default MAFFT is used to generate the MSAs and FastTree to generate the gene trees. Alternatively, any other program can be used in place of these. Many popular programs have already been configured by having an entry in the config.json file in the orthofinder directory. All options currently available can be seen by using the option \"-h\" to see the help file. The config.json file is user-editable to allow for any other desired program to be added. MAFFT, FastTree, or whatever programs are used instead need to be in the system path.\n\nOrthoFinder performs light trimming of the MSA to prevent overly long runtimes & RAM usage caused by very long, gappy alignemnts. A column is trimmed from the alignment if is it greater than 90% gaps and provided two conditions are met. 1. The length of the trimmed alignment cannot go below 500 AA 2. No more than 25% of non-gap characters can be removed from the alignment. If either of these conditions are not met then the threshold for the percentage of gaps in removed columns is progressively increased beyond 90% until both conditions are met. The trimming can be turned off using the option \"-z\".\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parallelising OrthoFinder Algorithm",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "There are two separate options for controlling the parallelisation of OrthoFinder.\n\n- **'-t number_of_threads'**:\nThis option should always be used. It specifies the number of parallel processes for the BLAST/DIAMOND searches and tree inference steps. These steps represent most of the runtime and are highly-parallelisable and so you should typically use as many threads as there are cores available on your computer. This is the value it will default to if not specified by the user.\n\n- **'-a number_of_orthofinder_threads'**\nIn addition to the above, all of the critical internal steps of the OrthoFinder algorithm have been parallelised. The number of threads for these steps is controlled using the '-a' option. These steps typically have larger RAM requirements and so using a value 4-8x smaller than that used for the '-t' option is usually a good choice. Since these steps are a small component of the overall runtime it is not important to set '-a' as high as possible in order to get good performance. Not running out of RAM is a more important consideration. If the '-a' parameter is not set it will default to 16 or one eighth of the '-t' parameter, whichever is smaller.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using Pre-Computed BLAST Results",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "It is possible to run OrthoFinder with pre-computed BLAST results provided they are in the correct format. They can be prepared in the correct format using the '-op' command and, equally, the files from a previous OrthoFinder run are also in the correct format to rerun using the '-b' option. The command is simply:\n\n- `orthofinder -b directory_with_processed_fasta_and_blast_results`\n\nIf you are running the BLAST searches yourself it is strongly recommended that you use the '-op' option to prepare the files first (see Section \"Running BLAST Searches Separately\"). Should you need to prepare them manually, the required files and their formats are described in the appendix of the PDF Manual (for example, if you already have BLAST search results from another source and it will take too much computing time to redo them).\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Regression Tests",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Advanced usage"
        ],
        "type": "Text_excerpt",
        "value": "A set of regression tests are included in the directory 'Tests' available from the github repository. They can be run by calling the script 'test_orthofinder.py'. They currently require version 2.2.28 of NCBI BLAST and the script will exit with an error message if this is not the case.\n"
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Options for starting an analysis",
        "parent_header": [
          "OrthoFinder: phylogenetic orthology inference for comparative genomics",
          "Command line options"
        ],
        "type": "Text_excerpt",
        "value": "**-f** \\<dir\\>: Start analysis from directory of FASTA files  \n**-b** \\<dir\\>: Start analysis from BLAST results in OrthoFinder directory  \n**-b** \\<dir1\\> **-f** \\<dir2\\>: Start analysis from BLAST results in OrthoFinder dir1 and add FASTA files from dir2  \n**-fg** \\<dir\\>: Start analysis from orthogroups OrthoFinder directory  \n**-ft** \\<dir\\>: Start analysis from gene trees in OrthoFinder directory\n "
      },
      "source": "https://raw.githubusercontent.com/davidemms/OrthoFinder/master/README.md",
      "technique": "header_analysis"
    }
  ]
}