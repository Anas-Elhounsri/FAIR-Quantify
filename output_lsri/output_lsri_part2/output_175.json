{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "Yong Zeng and others, MEDIPIPE: an automated and comprehensive pipeline for cfMeDIP-seq data quality control and analysis, Bioinformatics, Volume 39, Issue 7, July 2023, btad423, https://doi.org/10.1093/bioinformatics/btad423\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yzeng-lol/MEDIPIPE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-10T15:13:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-10T15:13:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)"
        ],
        "type": "Text_excerpt",
        "value": "The MEDIPIPE is designed for automated end-to-end quality control (QC) and analysis of (cf)MeDIP-seq data. The pipeline starts from the raw FASTQ files all the way to QC, alignment, methylation quantifications and aggregation. The pipeline was developed by [Yong Zeng](mailto:yzeng@uhnresearch.ca) based on some prior work of Wenbin Ye, [Eric Zhao](https://github.com/pughlab/cfMeDIP-seq-analysis-pipeline).\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Features",
        "parent_header": [
          "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "- **Portability**: MEDIPIPE was developed with [Snakemake](https://snakemake.readthedocs.io/en/stable/index.html), which will automatically deploy the execution environments. Users can also specify the version of softwares to be installed in YAML files. It can also be performed across different cluster engines (e.g. SLURM) or stand-alone machines.\n- **Flexibility**: MEDIPIPE can deal with single-end or paired-end reads, which comes along with or without spike-in/UMI sequences. It can be applied to individual samples, as well as to aggregate multiple samples from large-scale profiling.\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How it works",
        "parent_header": [
          "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "This schematic diagram shows you how pipeline works:\n<img src=\"figures/MEDIPIPE_Flowchart.png\" alt=\"Schematic_diagram\" style=\"width:100.0%\" />\n\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9422767195162692,
      "result": {
        "original_header": "Assets and Troubleshooting",
        "type": "Text_excerpt",
        "value": "There are several scripts are enclosed in the folder [assets](./assets/README.md), allowing you to download/build reference index and manifest table, to fogre BSgeome package for spike-in controls, to filter regions for fragment profiling calculation. Please also see [this document](./assets/Troubleshooting.md) for troubleshooting. I will keep updating this document for errors reported by users.\n \n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yzeng-lol/MEDIPIPE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/dependencies/ConsensusCruncher/notebooks/Figures.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/dependencies/ConsensusCruncher/notebooks/Figures.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yzeng-lol/MEDIPIPE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yzeng-lol/MEDIPIPE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/sbatch_Snakefile_template.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/dependencies/ConsensusCruncher/generate_scripts.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/assets/Reference/download_reference.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/assets/Reference/build_reference_index.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "MEDIPIPE: (cf)MeDIP-seq Data QC and Analysis Pipeline (v1.1.0)"
        ],
        "type": "Text_excerpt",
        "value": "1) Make sure that you have a Conda-based Python3 distribution(e.g.,the [Miniconda](https://docs.conda.io/en/latest/miniconda.html)). The Miniconda3-py38_23.3.1-0-Linux-x86_64.sh for Linux is preferred to avoid potential conflicts. The installation of [Mamba](https://github.com/mamba-org/mamba) is also recommended:\n\n\t```bash\n\t$ conda install -n base -c conda-forge mamba\n\t```\n\n2) Git clone this pipeline.\n\t```bash\n\t$ cd\n\t$ git clone https://github.com/pughlab/MEDIPIPE\n\t```\n\n3) Install pipeline\\'s core environment\n\t```bash\n\t$ cd MEDIPIPE\n\t$ conda activate base\n\t$ mamba env create --file conda_env.yaml\n\t```\n\n4) Test run\n\t> **IMPORTANT**: EXTRA ENVIRONMENTS WILL BE INSTALLED, MAKE SURE YOU STILL HAVE INTERNET ACCESS.\n\t* **Step 1:** Prepare reference, samples FASTQ and aggregation files according to [templates](./test/README.md).\n\t* **Step 2:** Specify input configuration file by following the instructions [here](./test/README.md).\n\t* **NOTE:** For testing run, you can simply run the SED command below to specify files in Step1, 2. This test dataset aims for a swift extra environments installation, which will fail to fit the sigmoid model for MEDStrand due to low read depth, but you can still find other results in ./test/Res.\n\n\t```bash\n    $ sed -i 's,/path/to,'\"$PWD\"',g' ./test/*template.*\n\t$ conda activate MEDIPIPE\n\t$ snakemake --snakefile ./workflow/Snakefile \\\n\t            --configfile ./test/config_template.yaml \\\n\t\t    --conda-prefix ${CONDA_PREFIX}_extra_env \\\n\t            --use-conda --cores 4 -p\n\t```\n\n\t* **Step 3 (Optional):** You can perform the full-scale test run  using another [toy dataset](./test/README.md) by following step 1, 2. \n\n5) Run on HPCs\n\n\tYou can also submit this pipeline to clusters with the template ./workflow/sbatch_Snakefile_template.sh. This template is for SLURM, however, it could be modified to different resource management systems. More details about cluster configuration can be found at [here](https://snakemake.readthedocs.io/en/stable/executing/cluster.html).\n\n\t```bash\n\t## Test run by SLURM submission\n\t$ sed -i 's,/path/to,'\"$PWD\"',g' ./workflow/sbatch_Snakefile_template.sh    # replace PATHs for testing\n\t$ sbatch ./workflow/sbatch_Snakefile_template.sh\n\t```\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9971270300861116,
      "result": {
        "original_header": "Assets and Troubleshooting",
        "type": "Text_excerpt",
        "value": "There are several scripts are enclosed in the folder [assets](./assets/README.md), allowing you to download/build reference index and manifest table, to fogre BSgeome package for spike-in controls, to filter regions for fragment profiling calculation. Please also see [this document](./assets/Troubleshooting.md) for troubleshooting. I will keep updating this document for errors reported by users.\n \n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yzeng-lol/MEDIPIPE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Yong Zeng\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/LICENSE.md",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/figures/MEDIPIPE_Flowchart.png"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MEDIPIPE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yzeng-lol"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 11769764,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 2168186,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 159238,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 102489,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 32145,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1882,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 814,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 607,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://snakemake.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:40:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/rules/fragment_profile.smk"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/rules/aggregating.smk"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/rules/reads_qc.smk"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yzeng-lol/MEDIPIPE/main/workflow/rules/meth_qc_quant.smk"
      },
      "technique": "file_exploration"
    }
  ]
}