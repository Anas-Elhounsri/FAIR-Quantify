{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "type": "Text_excerpt",
        "value": "\t@Article{Cao2022,\n\tauthor={Cao, Kai and Gong, Qiyu and Hong, Yiguang and Wan, Lin},\n\ttitle={A unified computational framework for single-cell data integration with optimal transport},\n\tjournal={Nature Communications},\n\tyear={2022},\n\tmonth={Dec},\n\tday={01},\n\tvolume={13},\n\tnumber={1},\n\tpages={7419},\n\tissn={2041-1723},\n\tdoi={10.1038/s41467-022-35094-8}}\n\nContact via caokai1073@gmail.com\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Cao, Kai and Gong, Qiyu and Hong, Yiguang and Wan, Lin",
        "doi": "10.1038/s41467-022-35094-8",
        "format": "bibtex",
        "title": "A unified computational framework for single-cell data integration with optimal transport",
        "type": "Text_excerpt",
        "value": "@article{Cao2022,\n    doi = {10.1038/s41467-022-35094-8},\n    issn = {2041-1723},\n    pages = {7419},\n    number = {1},\n    volume = {13},\n    day = {01},\n    month = {Dec},\n    year = {2022},\n    journal = {Nature Communications},\n    title = {A unified computational framework for single-cell data integration with optimal transport},\n    author = {Cao, Kai and Gong, Qiyu and Hong, Yiguang and Wan, Lin},\n}"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caokai1073/uniPort"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-02-13T12:09:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-28T17:05:32Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a unified single-cell data integration framework by optimal transport"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.847521153666497,
      "result": {
        "type": "Text_excerpt",
        "value": "\nWebsite and documentation:  \n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://uniport.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caokai1073/uniPort/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/vertical_snare_cell_line.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/vertical_snare_cell_line.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/diagonal_PBMC.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/diagonal_PBMC.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/pbmc_integration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/pbmc_integration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/mouse_spleen.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/mouse_spleen.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/pbmc_integration-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/pbmc_integration-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/pbmc_preprocess-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/pbmc_preprocess-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/mouse_spleen-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PBMC/.ipynb_checkpoints/mouse_spleen-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_predict.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_predict.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_impute.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_impute.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_and_scRNA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/MERFISH_and_scRNA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/.ipynb_checkpoints/MERFISH_preprocess-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/.ipynb_checkpoints/MERFISH_preprocess-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/.ipynb_checkpoints/MERFISH_predict-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/MERFISH/.ipynb_checkpoints/MERFISH_predict-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/vertical_snare_cell_line-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/vertical_snare_cell_line-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/pbmc_integration-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/pbmc_integration-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/pbmc_preprocess-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/.ipynb_checkpoints/pbmc_preprocess-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PDAC/PDAC_integration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/PDAC/PDAC_integration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/BRCA/BRCA.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/examples/BRCA/BRCA.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/API/.ipynb_checkpoints/Run-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/API/.ipynb_checkpoints/Run-checkpoint.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/API/.ipynb_checkpoints/load_file-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/API/.ipynb_checkpoints/load_file-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caokai1073/uniPort/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "caokai1073/uniPort"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/_static/net.png"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "The **uniport** package can be installed via pip3:\n\n```sh\npip3 install uniport\n```\n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9395699360972868,
      "result": {
        "type": "Text_excerpt",
        "value": "Source Code (MIT):  \n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caokai1073/uniPort/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 Kai Cao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/docs/source/_static/uniPort.jpg"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "uniPort"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "caokai1073"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 64388,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 52703,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2024-09-28T17:05:28Z",
        "date_published": "2024-10-01T13:27:22Z",
        "description": "fix bugs and improve performance",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.3",
        "name": "uniport-v1.3",
        "release_id": 177803374,
        "tag": "v1.3",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/177803374",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/177803374",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2023-03-07T22:21:56Z",
        "date_published": "2023-03-07T22:21:36Z",
        "description": "Change the default patience value from 10 to 30 in early-stopping strategy, and set it as a user-defined parameter. ",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.2.2",
        "name": "v1.2.2",
        "release_id": 94841948,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/94841948",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/94841948",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2023-02-28T19:08:36Z",
        "date_published": "2023-03-01T05:33:08Z",
        "description": "fix a bug in saving OT matrix. ",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.2.0",
        "name": "v1.2.0",
        "release_id": 94033219,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/94033219",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/94033219",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2022-11-26T04:07:25Z",
        "date_published": "2022-11-26T04:14:15Z",
        "description": "Fix a bug.",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.1.2",
        "name": "v1.1.2",
        "release_id": 84226729,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/84226729",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/84226729",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2022-06-07T05:49:56Z",
        "date_published": "2022-06-07T08:18:20Z",
        "description": "- add model_log parameter to *Run()* function. \r\n    + If model_log=True, show structures of encoder and decoders. Default: False.\r\n- fix bugs",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 68797489,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/68797489",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/68797489",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2022-05-13T15:45:50Z",
        "date_published": "2022-05-14T08:33:48Z",
        "description": "- *Get_label_Prior()* function changes: \r\n    + **Get_label_Prior()** -> **get_prior()**\r\n    + set **alpha=2** as default\r\n- *Run()* function parameter changes: \r\n    + **labmda_recon** -> **lambda_recon** \r\n    + **Prior** -> **prior**\r\n    + **max_iteration** -> **iteration**\r\n    + add **use_rep** for **mode=d**\r\n- add *TFIDF_LSI()* function for scATAC preprecess.\r\n- remove AnnData returns in *filter_data()* and *batch_scale()* functions.\r\n    + e.g., change **adata=up.filter_data(adata)** to **up.filter_data(adata)**.",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 66872400,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/66872400",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/66872400",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "caokai1073",
          "type": "User"
        },
        "date_created": "2022-05-12T11:55:32Z",
        "date_published": "2022-05-12T13:02:14Z",
        "description": "Here it comes ~\r\n",
        "html_url": "https://github.com/caokai1073/uniPort/releases/tag/v1.0.5",
        "name": "v1.0.5",
        "release_id": 66687307,
        "tag": "v1.0.5",
        "tarball_url": "https://api.github.com/repos/caokai1073/uniPort/tarball/v1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/caokai1073/uniPort/releases/66687307",
        "value": "https://api.github.com/repos/caokai1073/uniPort/releases/66687307",
        "zipball_url": "https://api.github.com/repos/caokai1073/uniPort/zipball/v1.0.5"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:53:23",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Main function: **uniport.Run**()",
        "parent_header": [
          "Tutorials"
        ],
        "type": "Text_excerpt",
        "value": "\n**Key parameters includes:**\n\n+ **adatas**: List of AnnData matrices for each dataset.\n+ **adata_cm**: AnnData matrix containing common genes from different datasets.\n+ **mode**: Choose from ['h', 'v', 'd'] If 'mode=h', integrate data with common genes (Horizontal integration). If 'mode=v', integrate data profiled from the same cells (Vertical integration). If 'mode=d', inetrgate data without common genes (Diagonal integration). Default: 'h'.\n+ **lambda_s**: balanced parameter for common and specific genes. Default: 0.5\n+ **lambda_recon**: balanced parameter for reconstruct term. Default: 1.0\n+ **lambda_kl**: balanced parameter for KL divergence. Default: 0.5\n+ **lambda_ot**: balanced parameter for OT. Default: 1.0\n+ **iteration**: max iterations for training. Training one batch_size samples is one iteration. Default: 30000\n+ **ref_id**: id of reference dataset. Default: The domain_id of last dataset\n+ **save_OT**: if True, output a global OT plan. Need more memory. Default: False\n+ **out**: output of uniPort. Choose from ['latent', 'project', 'predict']. If out=='latent', train the network and output cell embeddings. If out=='project', project data into the latent space and output cell embeddings. If out=='predict', project data into the latent space and output cell embeddings through a specified decoder. Default: 'latent'\n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "type": "Text_excerpt",
        "value": "```Python\nimport uniport as up\nimport scanpy as sc\n\n# HVG: highly variable genes\nadata1 = sc.read_h5ad('adata1.h5ad') # preprocessed data with data1 specific HVG\nadata2 = sc.read_h5ad('adata2.h5ad') # preprocessed data with data2 specific HVG, as reference data\nadata_cm = sc.read_h5ad('adata_cm.h5ad') # preprocesssed data with common HVG\n\n# integration with both common and dataset-specific genes\n# latent representation are stored in adata.obs['latent']\nadata = up.Run(adatas=[adata1, adata2], adata_cm=adata_cm)\n# save global optimal transport matrix: adata, OT = up.Run(adatas=[adata1, adata2], adata_cm=adata_cm, save_OT=True)\n# integration with only common genes: adata = up.Run(adata_cm=adata_cm)\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/caokai1073/uniPort/main/README.md",
      "technique": "header_analysis"
    }
  ]
}