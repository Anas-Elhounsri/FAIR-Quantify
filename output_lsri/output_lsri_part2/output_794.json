{
  "application_domain": [
    {
      "confidence": 4.42,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shijwe/DCGN"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-05-19T11:42:35Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-04-29T17:08:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 0.9909508664680945,
      "result": {
        "original_header": "DCGN",
        "type": "Text_excerpt",
        "value": "Deep learning approach for cancer subtype classification using high-dimensional gene expression data\nIt is built with **Tensorflow** and **Python 3**. \n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/shijwe/DCGN/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shijwe/DCGN/main/Comparative%20methods.ipynb"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/Comparative%20methods.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shijwe/DCGN/main/DCGN-new.ipynb"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/DCGN-new.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shijwe/DCGN/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "shijwe/DCGN"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DCGN"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9055651851747452,
      "result": {
        "original_header": "Data",
        "type": "Text_excerpt",
        "value": "  * BLCAMDAsmote.mat\n  * BLCALundsmote.mat\n  * BLCAcitsmote.mat\n  * The BRCA dataset is too large, the original dataset can be downloaded from www.acsu.buffalo.edu/~yijunsun/lab/DeepType.html \n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/shijwe/DCGN/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DCGN"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "shijwe"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 22886,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "DCGN"
        ],
        "type": "Text_excerpt",
        "value": "  * python 3.7, numpy, scipy, TensorFlow 2.4, pysam\n\n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:01:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "notebook-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Data preprocessing",
        "parent_header": [
          "DCGN",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "1. Read the data (.mat), check the data and label dimensions,\n2. Feature normalization before training\n3. Set a random seed and shuffle the dataset\n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build the model",
        "parent_header": [
          "DCGN",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "1. Change the shape according to different datasets in the model.build function\n2. The last layer of data set BLCALund data set must be greater than 10 nodes.\n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Train Model",
        "parent_header": [
          "DCGN",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "1. Set the loss function and evaluation indicators\n2. Define the training and validation steps\n3. Defining and dividing the dataset\n4. Perform training and validation steps in a loop\n5. After the training and validation steps, the model is finally evaluated on the test set.\n"
      },
      "source": "https://raw.githubusercontent.com/shijwe/DCGN/main/README.md",
      "technique": "header_analysis"
    }
  ]
}