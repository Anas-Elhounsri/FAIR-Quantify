{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/no-banana/SMFM-master"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-27T03:15:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-09-26T08:37:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "source codes for SMFM"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9513797532086558,
      "result": {
        "original_header": "SMFM-master",
        "type": "Text_excerpt",
        "value": "The repository is developed for enhancer sequences identification using Stacked Multivariate Fusion Framework (SMFM) \n \n"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/no-banana/SMFM-master/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/no-banana/SMFM-master/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "no-banana/SMFM-master"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SMFM-master"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/no-banana/SMFM-master/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SMFM-master"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "no-banana"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 24550,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rich Text Format",
        "size": 657,
        "type": "Programming_language",
        "value": "Rich Text Format"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "- python == 3.6.2\n\n- torch==1.10.0+cu113\n\n- tensorflow==2.5.1\n\n- transformers==4.12.5\n\n- deep-forest==0.1.5\n\n- Ubuntu 18.04 (64-bit)\n"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:11:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Extract dynamic semantic information using EnhancerBERT",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "You can extract dynamic semantic information by following a few steps:\n- Download EnhancerBERT models and requirement.txt in http://39.104.69.176:5010/.\n- Create virtual environment with following command:\n\n>***1)*** conda create env -n EnhancerBERT.  \n>***2)*** conda activate EnhancerBERT.  \n>***3)*** pip install requirement.txt.  \n\nRevise the path where the EnhancerBERT locate and run extract_information.py\nAfter running *__extract_information.py__*, the progress of learning implicit relations and long-distance dependicies can be performed by running *__dl_based_sequence_network.py__*\nFinally you can get a .npy file when you have finished the whole process\n"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Generate multi-source biological features",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "You can generate multi-source biological features by following a few steps:\n\n- Activate the virtual environment described above and run the *__multi-source_biological_features.py__*.\n- When run the code, you should be aware of the following points:\n\n>***1)*** The sequences should be strored as a .fasta or a .txt file.  \n>***2)*** The labels of sequences should be stored independently as a .txt file.  \n>***3)*** After the code has finished running, the features will be store as a .csv file, and please upload the fulldataset instead of optimumdataset.\n"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Predict sequences using dynamic semantic information and multi-source biological features",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Run *__ensemble_classification.py__* to get the prediction results for the sequences.\n"
      },
      "source": "https://raw.githubusercontent.com/no-banana/SMFM-master/master/README.md",
      "technique": "header_analysis"
    }
  ]
}