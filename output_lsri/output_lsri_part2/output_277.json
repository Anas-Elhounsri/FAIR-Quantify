{
  "application_domain": [
    {
      "confidence": 35.24,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dkoslicki/TAMPA"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-03-09T19:15:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-19T03:30:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A collection of tools to visualize CAMI profiling outputs"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9918427296003122,
      "result": {
        "original_header": "TAMPA: **TA**xono**M**ic **P**rofiling **A**nalysis",
        "type": "Text_excerpt",
        "value": "> This repository contains the official python implementation of the following paper:\n> Sarwal, Varuni, Jaqueline Brito, Serghei Mangul, and David J. Koslicki. **\"TAMPA: interpretable analysis and visualization of metagenomics-based taxon abundance profiles.\"** bioRxiv (2022). <br>\n> (https://www.biorxiv.org/content/10.1101/2022.04.28.489926v1.abstract) <br> \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8388448988114849,
      "result": {
        "original_header": "<img src=\"./figures/metaphyler_CAMIhigh_tree_phylum_CAMI_HIGH_S001.png\" width=\"75%\">",
        "type": "Text_excerpt",
        "value": "### Installation with Bioconda\nWaiting for pull request to get merged \n\n### Example usage\n```bash\npython src/tampa.py -i data/mad_yalow_0.profile.txt -g data/gs_marine_short.profile.txt class -s marmgCAMI2_short_read_sample_0 -b marine_test -k linear -r 1600 -c False -o .\n```\nThis should result in a plot that looks like: \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9448965170156366,
      "result": {
        "original_header": "Example usage",
        "type": "Text_excerpt",
        "value": "TAMPA provides a \"CONTRAST MODE\" to better visualize the differences between the tool and gold standard. The contrast mode can be activated by setting the parameter c to True as follows\n```bash\npython src/tampa.py -i data/mad_yalow_0.profile.txt -g data/gs_marine_short.profile.txt class -s marmgCAMI2_short_read_sample_0 -b marine_test -k linear -r 1600 -c True -o .\n```\nThis should result in a plot that looks like: \n \nA comprehensive list of visualization options can be obtained using \n```bash\npython src/tampa.py \n```\nThe options are as follows:\n```bash\n\nusage: tampa.py [-h] [-i INPUT_PROFILE] [-i1 INPUT_PROFILE1]\n                [-g GROUND_TRUTH_INPUT_PROFILE] [-b OUTPUT_BASE_NAME]\n                [-t FILE_TYPE] [-s SAMPLE_OF_INTEREST] [-k SCALING]\n                [-a LABELS] [-y LAYOUT] [-l] [-n] [-m] [-d DB_FILE] [-r RES]\n                [-p] [-top TOP] [-thr THR] [-fs FONTSIZE] [-ls LABELSIZE]\n                [-lw LABELWIDTH] [-bm BRANCHMARGIN] [-lsep LEAF_SEP]\n                [-fh FIGHEIGHT] [-fw FIGWIDTH] [-nm] [-o OUTPUT_PATH]\n                [-dt HIGHLIGHT_DIFFERENCES_THRESHOLD] [-c CONTRAST]\n                [-fir INPUT1] [-sec INPUT2]\n                taxonomic_rank\n\nPlot abundance of profile against ground truth on taxonomic tree.\n\npositional arguments:\n  taxonomic_rank        Taxonomic rank to do the plotting at\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT_PROFILE, --input_profile INPUT_PROFILE\n                        Input taxonomic profile\n  -i1 INPUT_PROFILE1, --input_profile1 INPUT_PROFILE1\n                        Second (optional) input taxonomic profile1\n  -g GROUND_TRUTH_INPUT_PROFILE, --ground_truth_input_profile GROUND_TRUTH_INPUT_PROFILE\n                        Input ground truth taxonoomic profile\n  -b OUTPUT_BASE_NAME, --output_base_name OUTPUT_BASE_NAME\n                        Base name for output\n  -t FILE_TYPE, --file_type FILE_TYPE\n                        File type for output images (svg, png, pdf, etc.\n  -s SAMPLE_OF_INTEREST, --sample_of_interest SAMPLE_OF_INTEREST\n                        If you're only interested in a single sample of\n                        interest, specify here.\n  -k SCALING, --scaling SCALING\n                        Plot scaling (log, sqrt, power etc.\n  -a LABELS, --labels LABELS\n                        Specify this otion if you want to add labels to the\n                        graph (All, Leaf, None)\n  -y LAYOUT, --layout LAYOUT\n                        Chose the layout of the graph (Pie, Bar, Circle,\n                        Rectangle\n  -l, --plot_l1         If you also want to plot the L1 error\n  -n, --normalize       specify this option if you want to normalize the node\n                        weights/relative abundances so that they sum to one\n  -m, --merge           specify this option if you to average over all the\n                        @SampleID's and plot a single tree\n  -d DB_FILE, --db_file DB_FILE\n                        specify database dump file\n  -r RES, --res RES     specify the resolution (dpi)\n  -p, --profile         specify this option to use only the input profile(s)\n                        taxID's to construct the tree\n  -top TOP, --top TOP   specify this option to display only the top nodes with\n                        highest abundance\n  -thr THR, --thr THR   specify this option to display only the nodes with\n                        abundance higher than threshold\n  -fs FONTSIZE, --fontsize FONTSIZE\n                        specify this option to change the font size of the\n                        labels\n  -ls LABELSIZE, --labelsize LABELSIZE\n                        specify this option to display only the nodes with\n                        abundance higher than threshold\n  -lw LABELWIDTH, --labelwidth LABELWIDTH\n                        specify this option to display only the nodes with\n                        abundance higher than threshold\n  -bm BRANCHMARGIN, --branchmargin BRANCHMARGIN\n                        specify this option to change the branch vertical\n                        margin\n  -lsep LEAF_SEP, --leaf_sep LEAF_SEP\n                        specify this option to change the leaf separation\n  -fh FIGHEIGHT, --figheight FIGHEIGHT\n                        specify this option to change the figure height (in)\n  -fw FIGWIDTH, --figwidth FIGWIDTH\n                        specify this option to change the figure width (in)\n  -nm, --no_monitor     If you are running on a server or other monitor-less\n                        environment, use this flag to save directly to a file\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Output path\n  -dt HIGHLIGHT_DIFFERENCES_THRESHOLD, --highlight_differences_threshold HIGHLIGHT_DIFFERENCES_THRESHOLD\n                        If at any rank the two input samples have a difference\n                        in abundance greater than or equal to N percent, this\n                        taxa will be highlighted\n  -c CONTRAST, --contrast CONTRAST\n                        contrast mode for comparison with gold standard\n  -fir INPUT1, --input1 INPUT1\n                        Name of the first input\n  -sec INPUT2, --input2 INPUT2\n                        Name of the second input\n```\n### Options to condense visualization in case of large datasets\n \n1. -thr: This option can be used to display only the nodes with abundance higher than a particular threshold\n2. -c: Contrast mode can be used to identify problematic subregions of large trees. In the contrast mode, the false positive taxas are represented as red circles, the false negative taxas as blue circles, true positives as white, and the remaining taxas in a gradient of white to green, with the color intensity proportional to the relative error.\n3. -top: This option can be used to display only the top nodes with highest abundance\n \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dkoslicki/TAMPA/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/.ipynb_checkpoints/dict-checkpoint.ipynb"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/.ipynb_checkpoints/dict-checkpoint.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dkoslicki/TAMPA/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dkoslicki/TAMPA"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TAMPA: TAxonoMic Profiling Analysis"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/./figures/metaphyler_CAMIhigh_tree_phylum_CAMI_HIGH_S001.png"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/./figures/metaphyler_CAMIhigh_normal_tree_phylum_CAMI_HIGH_S001.png"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 0.9989765440861476,
      "result": {
        "original_header": "<img src=\"./figures/metaphyler_CAMIhigh_tree_phylum_CAMI_HIGH_S001.png\" width=\"75%\">",
        "type": "Text_excerpt",
        "value": "\n## Setup Environment and Install Dependencies \n### Clone the repository\n```bash\ngit clone https://github.com/dkoslicki/TAMPA.git\ncd TAMPA\n```\n \n\n### Installation with Conda \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9994544788237566,
      "result": {
        "original_header": "Installation with Conda",
        "type": "Text_excerpt",
        "value": "Please follow the instructions at the following link to set up anaconda: [Anaconda Setup](https://docs.anaconda.com/anaconda/install/index.html) \nThe following commands create a conda environment inside the repository with the dependencies.\n```bash\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\nconda create -c etetoolkit -y -n CAMIViz python=3.7 numpy  ete3  seaborn pandas matplotlib biom-format\nconda activate CAMIViz\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.997346289072077,
      "result": {
        "original_header": "<img src=\"./figures/metaphyler_CAMIhigh_tree_phylum_CAMI_HIGH_S001.png\" width=\"75%\">",
        "type": "Text_excerpt",
        "value": "### Installation with Bioconda\nWaiting for pull request to get merged \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.9603601703624879,
      "result": {
        "original_header": "<img src=\"./figures/metaphyler_CAMIhigh_tree_phylum_CAMI_HIGH_S001.png\" width=\"75%\">",
        "type": "Text_excerpt",
        "value": "\n### Example usage\n```bash\npython src/tampa.py -i data/mad_yalow_0.profile.txt -g data/gs_marine_short.profile.txt class -s marmgCAMI2_short_read_sample_0 -b marine_test -k linear -r 1600 -c False -o .\n```\nThis should result in a plot that looks like: \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8188638736849323,
      "result": {
        "original_header": "Example usage",
        "type": "Text_excerpt",
        "value": "TAMPA provides a \"CONTRAST MODE\" to better visualize the differences between the tool and gold standard. The contrast mode can be activated by setting the parameter c to True as follows\n```bash\npython src/tampa.py -i data/mad_yalow_0.profile.txt -g data/gs_marine_short.profile.txt class -s marmgCAMI2_short_read_sample_0 -b marine_test -k linear -r 1600 -c True -o .\n```\nThis should result in a plot that looks like: \n \n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dkoslicki/TAMPA/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2018 The Python Packaging Authority\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "TAMPA"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dkoslicki"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 67401,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 32311,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dkoslicki/TAMPA/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dkoslicki",
          "type": "User"
        },
        "date_created": "2022-07-06T17:15:41Z",
        "date_published": "2022-07-06T18:37:41Z",
        "html_url": "https://github.com/dkoslicki/TAMPA/releases/tag/V1.0.0",
        "name": "V1.0.0",
        "release_id": 71401995,
        "tag": "V1.0.0",
        "tarball_url": "https://api.github.com/repos/dkoslicki/TAMPA/tarball/V1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dkoslicki/TAMPA/releases/71401995",
        "value": "https://api.github.com/repos/dkoslicki/TAMPA/releases/71401995",
        "zipball_url": "https://api.github.com/repos/dkoslicki/TAMPA/zipball/V1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 10:03:06",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ]
}