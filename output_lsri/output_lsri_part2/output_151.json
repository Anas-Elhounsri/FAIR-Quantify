{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "GenoVi: Genome Visualizer Software"
        ],
        "type": "Text_excerpt",
        "value": "If you use GenoVi in your research, please cite  [our latest paper](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1010998)\n\nCumsille A, Dur\u00e1n RE, Rodr\u00edguez-Delherbe A, Saona-Urmeneta V, C\u00e1mara B, Seeger M, et al. GenoVi, an open-source automated circular genome visualizer for bacteria and archaea. PLoS Comput Biol. 2023;19:e1010998.\n\nGenoVi is under a BY-NC-SA Creative Commons License, Please cite.\n\nYou may remix, tweak, and build upon this work even for commercial purposes, as long as you credit this work and license your new creations under the identical terms. \n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/robotoD/GenoVi"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-02T16:58:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-28T09:11:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenoVi, an automated customizable circular genome visualizer for bacteria and archaea"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9945335811601141,
      "result": {
        "original_header": "GenoVi: Genome Visualizer Software",
        "type": "Text_excerpt",
        "value": "**GenoVi** generates circular genome representations for complete, draft, and multiple bacterial and archaeal genomes. **GenoVi** pipeline combines several python scripts to automatically generate all needed files for Circos to generate circular plots, including customisable options for colour palettes, fonts, font format, background colour and scaling options for genomes comprising more than 1 replicon. Optionally, **GenoVi** built-in workflow integrates DeepNOG to annotate COG categories using alignment-free methods with user-defined thresholds, creating COG categories histograms and COG distribution plots per genome, contig or replicon, useful for further analyses. \n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.945741294202766,
      "result": {
        "original_header": "Output files",
        "type": "Text_excerpt",
        "value": "Resulting images are saved in a folder called **\\[name\\]** as **\\[name\\].svg** and **\\[name\\].png** (name being specified with `output_file` argument or, by default, genovi. In case of a complete genome, individual contig image files are stored in a **\\[name\\]** subdirectory as **\\[name\\]-contig_\\[i\\].png** with i in \\[1, the number of circles\\]. In the case of draft genomes, GenoVi displays the replicons as delivered by the initial GenBank file. \nFour additional files are stored in **\\[name\\]** folder: a histogram displaying COG categories named **\\[name\\]_COG_histogram.png**; a file with the COG classification of each replicon named **\\[name\\]_COG_Classification.csv**; a csv file named **\\[name\\]_Gral_Stats.csv** displaying general information of each replicon, including size, GC content, number of CDS, tRNA and rRNA; and a heatmap displaying the distribution of COGs within each replicon **\\[name\\]_COG_Classification.csv_percentage** \n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/robotoD/GenoVi/wiki"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/robotoD/GenoVi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/robotoD/GenoVi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "robotoD/GenoVi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenoVi: Genome Visualizer Software"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/robotoD/GenoVi/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/robotoD/GenoVi/main/Figures/Diagram.png"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "GenoVi: Genome Visualizer Software"
        ],
        "type": "Text_excerpt",
        "value": "GenoVi dependencies can be installed creating the following bioconda environment\n\n```\nconda create -n genovi python=3.7 circos \n```\nActivate the environment\n```\nconda activate genovi\n```\nGenoVi can then be installed using pip\n\n```\npip install genovi\n```\n "
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/robotoD/GenoVi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bioinformatics-visualization, genomics-visualization, visualization-tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GenoVi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "robotoD"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 167286,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 789,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "arodel21",
          "type": "User"
        },
        "date_created": "2022-11-02T20:54:38Z",
        "date_published": "2022-11-10T15:12:06Z",
        "description": "Creating Bioconda recipe",
        "html_url": "https://github.com/robotoD/GenoVi/releases/tag/0.2.16",
        "name": "Version 0.2.16",
        "release_id": 82693690,
        "tag": "0.2.16",
        "tarball_url": "https://api.github.com/repos/robotoD/GenoVi/tarball/0.2.16",
        "type": "Release",
        "url": "https://api.github.com/repos/robotoD/GenoVi/releases/82693690",
        "value": "https://api.github.com/repos/robotoD/GenoVi/releases/82693690",
        "zipball_url": "https://api.github.com/repos/robotoD/GenoVi/zipball/0.2.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "vsaona",
          "type": "User"
        },
        "date_created": "2021-12-05T18:35:16Z",
        "date_published": "2021-12-05T18:54:57Z",
        "description": "First release. Works. Still to be tested more thoroughly",
        "html_url": "https://github.com/robotoD/GenoVi/releases/tag/0.1.0",
        "name": "First release",
        "release_id": 54664677,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/robotoD/GenoVi/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/robotoD/GenoVi/releases/54664677",
        "value": "https://api.github.com/repos/robotoD/GenoVi/releases/54664677",
        "zipball_url": "https://api.github.com/repos/robotoD/GenoVi/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "GenoVi: Genome Visualizer Software"
        ],
        "type": "Text_excerpt",
        "value": "* [Circos 0.69-8](http://www.circos.ca/software/ \"Circos\")\n* Python 3.7 or later\n* [DeepNog 1.2.3](https://github.com/univieCUBE/deepnog \"DeepNOG\")\n* NumPy 1.20.2\n* MatPlotLib 3.5.2\n* Pandas 1.2.4\n* Biopython 1.79\n* CairoSVG 2.5.2\n* Seaborn 0.12\n* Perl 5\n* List::MoreUtils (Perl library)\n* Natsort 8.2.0\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:33:52",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 77
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "GenoVi: Genome Visualizer Software"
        ],
        "type": "Text_excerpt",
        "value": "\n```\ngenovi [-h] [options ..] -i input_file -s status\n```\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Main arguments",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-i`, `--input_file`. GenBank input file path.\n* `-o`, `--output_file`.  Output file name. Default: genovi.\n* `-s`, `--status`. \u201ccomplete\u201d or \u201cdraft\u201d. Complete genomes are drawn as separate circles for each contig/replicon.\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Information:",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-h`, `--help`. Shows this help message and exit.\n* `--version`. Shows the currently installed version of genovi.\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "COGs:",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-cu`, `--cogs`_unclassified. Do not classify each coding sequence into Clusters of Orthologous Groups of proteins (COGs).\n* `--cogs`, `COGS` To specify which COG categories include in the circular representation. For example 'ABJKLX'\n* `-b`, `--deepnog`_confidence_threshold. DeepNOG confidence threshold range \\[0,1\\] Default: 0. If provided, predictions below the threshold are discarded.\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Format:",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-a`, `--alignment`. When a `--status complete` is specified, this flag defines the alignment of each individual contig. Options: `center`, `top`, `bottom`, `A` (First on top), `<` (first to the left), `U` (Two on top, the rest below). By default, this is defined by contig sizes.\n* `--scale`. When using `--status complete`, whether to use a different scale format to ensure visibility. Options: `variable`, `linear`, `sqrt`. Default: `sqrt`.\n* `-k`, `--keep_temporary_files`. Keep temporary files.\n* `-r`, `-reuse_predictions`. If available, reuse DeepNog prediction result from the previous run. Useful only if --keep_temporary_files flag is enabled.\n* `-w`, `--window`. Window size (base pair) to assign a GC analysis. Default: `5000`.\n* `-v`, `--verbose`. Verbose or in-console log messages activated.\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Text:",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-c`, `--captions_not_included`.  Do not include captions in the figure.\n* `-cp`, `--captions_position`. Captions position. Options: `left`, `right`, `auto`.\n* `-t`, `--title`. Figure title.\n* `--title_position`. Title position. Options: `center`, `top`, `bottom`.\n* `--italic_words`. How many title words should be written in italic. Default: `2`.\n* `--size`. Displays the genome size of each independent circular representation.\n* `-te`, `--tracks_explain`. Adds a space break in the circular representation, including captions for each track within the ideogram. \n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Colours:",
        "parent_header": [
          "GenoVi: Genome Visualizer Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "* `-cs`, `--colour_scheme`. Prebuilt color scheme to use for CDS, RNAs, and GC analysis. Options: `strong`,`autumn`,`dawn`,`blossom`,`paradise`,`neutral`, `blue`, `purple`, `soil`, `grayscale`, `velvet`, `pastel`, `ocean`, `wood`, `beach`, `desert`, `ice`, `island`, `forest`, `toxic`, `fire`, `spring`.\n* `-bc`, `--background`. Background colour, in R, G, B format. Default: `transparent`.\n* `-fc`, `--font_colour`. Font color. Default: `black`.\n* `-pc`, `--CDS_positive_colour`. Colour for positive CDSs, in R, G, B format. Default: `'180, 205, 222'`.\n* `-nc`, `--CDS_negative_colour`. Colour for negative CDSs, in R, G, B format. Default: `'53, 176, 42'`.\n* `-tc`, `--tRNA_colour`. Colour for tRNAs, in R, G, B format. Default: `'150, 5, 50'`.\n* `-rc`, `--rRNA_colour`. Colour for rRNAs, in R, G, B format. Default: `'150, 150, 50'`.\n* `-cc`, `--GC_content_colour`. Colour for GC content, in R, G, B format. Default: `'23, 0, 115'`.\n* `-sc`, `--GC_skew_colour`. Colour scheme for positive and negative GC skew. A pair of RGB colors. Default: `'140, 150, 198 - 158, 188, 218'`.\n* `-sl`, `--GC_skew_line_colour`. Colour for GC skew line. Default: `black`.\n\nMore detailed information about the arguments can be found in the [user guide](https://github.com/robotoD/GenoVi/wiki/User-guide#arguments-).\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorials",
        "parent_header": [
          "GenoVi: Genome Visualizer Software"
        ],
        "type": "Text_excerpt",
        "value": "Check the tutorials in the [user guide tutorials](https://github.com/robotoD/GenoVi/wiki/User-guide#tutorials-).\n"
      },
      "source": "https://raw.githubusercontent.com/robotoD/GenoVi/main/README.md",
      "technique": "header_analysis"
    }
  ]
}