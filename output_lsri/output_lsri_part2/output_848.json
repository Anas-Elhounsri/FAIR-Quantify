{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "- This package was developed in the `lab of Christopher Benner at UCSD <http://homer.ucsd.edu/BennerLab/>`_.\n- This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/npdeloss/mepp"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-29T16:41:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-10T01:04:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Motif Enrichment Positional Profiling (MEPP) quantifies a positional profile of motif enrichment along the length of DNA sequences centered on e.g. transcription start sites or transcription factor binding motifs."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9870397487177415,
      "result": {
        "original_header": "Motif discovery",
        "type": "Text_excerpt",
        "value": "    Options:\n      --fa TEXT                       Path to a scored fasta file, where sequence\n                                      headers are of the form: \">sequence_name\n                                      sequence_score\".  [required]\n      --out TEXT                      Create this directory and write output to\n                                      it.  [required]\n      --dgt FLOAT                     Percentage of sequence that can be\n                                      degenerate (Not A, C, G, or T) before being\n                                      rejected from the analysis. Useful for\n                                      filtering out repeats. Default: 100\n      --batch INTEGER                 Size of batches for Tensorflow datasets.\n                                      Default: 1000\n      --val FLOAT                     Fraction of data used for validation.\n                                      Default: 0.10\n      --motifs INTEGER                Number of motifs to learn. Default: 320\n      --length INTEGER                Length of motifs to learn. Default: 8\n      --motif-prefix TEXT             Prefix motif names with this string.Default:\n                                      denovo_motif_\n      --model [deepbindlike|simpleconv]\n                                      Type of network to use for learning motifs.\n                                      Default: deepbindlike\n      --seed INTEGER                  Random seed for shuffling and\n                                      initialization. Default: 1000\n      --epochs INTEGER                Maximum number of epochs for training.\n                                      Default: 1000\n      --no-early-stopping             Disable early stopping of training, to train\n                                      for the maximum number of epochs. Default:\n                                      Enable early stopping.\n      --patience INTEGER              Number of epochs to wait for early stopping.\n                                      Default: 1000\n      --mindelta FLOAT                Minimum delta for early stopping. Default: 0\n      --jobs INTEGER                  Number of jobs for CPU multiprocessing.\n                                      Default: Use all cores\n      --nogpu                         Disable use of GPU.\n      --quiet                         Do not write combined motifs to stdout.\n                                      Default: Write combined motifs to stdout.\n      --help                          Show this message and exit.\n \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8558595265670002,
      "result": {
        "original_header": "Motif comparison",
        "type": "Text_excerpt",
        "value": "    Options:\n      --motifs TEXT        Path to a motif matrices file in JASPAR format.\n                           Preferably a denovo motif matrices file. if --known-\n                           motifs is not specified, this will be compared against\n                           itself. As a start, one can be obtained through the\n                           JASPAR website at: http://jaspar.genereg.net/downloads/\n                           [required]\n      --out TEXT           Create this directory and write output to it.\n                           [required]\n      --known-motifs TEXT  Path to a known motif matrices file in JASPAR format.As\n                           a start, one can be obtained through the JASPAR website\n                           at: http://jaspar.genereg.net/downloads/ Default: None\n      --overlap INTEGER    Minimum overlap for correlated motifs. Default: 6\n      --corrcoef FLOAT     Minimum correlation for correlated motifs. Default: 0.6\n      --combine            Combine motifs. Default: Do not combine motifs.\n      --motif-prefix TEXT  Prefix motif names with this string.Default:\n                           combined_motif_\n      --no-logos           Do not render logos. Default: Render logos.\n      --jobs INTEGER       Number of jobs for CPU multiprocessing. Default: Use\n                           all cores\n      --quiet              Do not write combined motifs to stdout. Default: Write\n                           combined motifs to stdout.\n      --help               Show this message and exit. \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8809929234899356,
      "result": {
        "type": "Text_excerpt",
        "value": "Motif Enrichment Positional Profiling (MEPP) quantifies a positional profile of motif enrichment along the length of DNA sequences centered on e.g. transcription start sites or transcription factor binding motifs. \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/npdeloss/mepp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/notebooks/Walkthrough_Motif_Centered_BigWig_Scored_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/notebooks/Walkthrough_Motif_Centered_BigWig_Scored_Analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_3/Walkthrough_Motif_Centered_BigWig_Scored_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_3/Walkthrough_Motif_Centered_BigWig_Scored_Analysis.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_6/Analyze_Natoli_ATAC-seq_LPS_Timecourse.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_6/Analyze_Natoli_ATAC-seq_LPS_Timecourse.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_6/Analyze_Duttke_csRNA-seq_KLA_Timecourse.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_6/Analyze_Duttke_csRNA-seq_KLA_Timecourse.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_5/Analyze_Nanog_ChIP-Nexus_With_Homer_Peaks.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_5/Analyze_Nanog_ChIP-Nexus_With_Homer_Peaks.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_2/Walkthrough_GATA_And_Control_ChIP-seq_Peak_Centered_BigWig_Scored_Analysis.ipynb"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_2/Walkthrough_GATA_And_Control_ChIP-seq_Peak_Centered_BigWig_Scored_Analysis.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/npdeloss/mepp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "npdeloss/mepp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_1/run_mepp_analysis_on_fly_tss.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_4/run_mepp_analysis_on_nanog_motifs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/data/figure_reconstruction/Figure_5/run_mepp_analysis_on_macs2_nanog-chip-seq_and_nanog_chip-nexus.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "To install MEPP, use pip::\n    \n    pip install git+https://github.com/npdeloss/mepp@main\n\nOr, if you only have user privileges::\n    \n    pip install git+https://github.com/npdeloss/mepp@main --user\n\nYou may need to append the following to your ~/.bashrc::\n    \n    export PATH=\"$HOME/.local/bin:$PATH\"\n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8588627066157221,
      "result": {
        "original_header": "Motif discovery",
        "type": "Text_excerpt",
        "value": "Command line help:: \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "invocation": [
    {
      "confidence": 0.8238619475722131,
      "result": {
        "original_header": "Motif discovery",
        "type": "Text_excerpt",
        "value": "Command line help:: \n    Usage: python -m mepp.learn_motifs [OPTIONS] \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8273422325652848,
      "result": {
        "original_header": "Motif comparison",
        "type": "Text_excerpt",
        "value": "    Usage: python -m mepp.compare_motifs [OPTIONS] \n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/npdeloss/mepp/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021, Nathaniel Delos Santos\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "mepp"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "npdeloss"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 318539,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 263348,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 22170,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6443,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2244,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:13:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "Motif files for use with this program can be found in the data subdirectory.\nThese are motifs from the `HOMER <http://homer.ucsd.edu/homer/>`_ suite in data/homer.motifs.txt, as well as a reduced-redundancy version with similar motifs clustered, allowing a faster analysis. The file data/ohler_motifs.txt contains Drosophila core promoter motifs from `Ohler et al. <https://pubmed.ncbi.nlm.nih.gov/12537576/>`_. To get started, see our `walkthrough notebook <https://github.com/npdeloss/mepp/blob/main/notebooks/Walkthrough_Motif_Centered_BigWig_Scored_Analysis.ipynb>`_.\n\nCommand line help::\n    \n    Usage: mepp [OPTIONS]\n\n  Profile positional enrichment of motifs in a list of scored sequences.\n  Generated MEPP (Motif Enrichment Positional Profile) plots.\n\n    Options:\n      --fa TEXT                       Path to a scored fasta file, where sequence\n                                      headers are of the form: \">sequence_name\n                                      sequence_score\".  [required]\n      --motifs TEXT                   Path to a motif matrices file in JASPAR\n                                      format. As a start, one can be obtained\n                                      through the JASPAR website at:\n                                      http://jaspar.genereg.net/downloads/\n                                      [required]\n      --out TEXT                      Create this directory and write output to\n                                      it.  [required]\n      --center INTEGER                0-based offset from the start of the\n                                      sequence to center plots on. Default: Set\n                                      the center to half the sequence length,\n                                      rounded down\n      --dgt INTEGER                   Percentage of sequence that can be\n                                      degenerate (Not A, C, G, or T) before being\n                                      rejected from the analysis. Useful for\n                                      filtering out repeats. Default: 100\n      --perms INTEGER                 Number of permutations for permutation\n                                      testing and confidence intervals. Can lead\n                                      to significant GPU memory usage. Default:\n                                      1000\n      --batch INTEGER                 Size of batches for Tensorflow datasets.\n                                      Default: 1000\n      --jobs INTEGER                  Number of jobs for CPU multiprocessing.\n                                      Default: Use all cores\n      --keepdata                      Set this flag to keep the Tensorflow dataset\n                                      after MEPP has finished. Default: Delete the\n                                      dataset after MEPP has finished.\n      --orientations TEXT             Comma-separated list of motif orientations\n                                      to analyze for CPU multiprocessing. Values\n                                      in list are limited to \"+\" (Match motif\n                                      forward orientation), \"-\" (Match motif\n                                      reverse orientation), \"+/-\" (Match to\n                                      forward or reverse). Default: +,+/-\n      --margin INTEGER                Number of bases along either side of motif\n                                      to \"blur\" motif matches for smoothing.\n                                      Default: 2\n      --pcount FLOAT                  Pseudocount for setting motif match\n                                      threshold via MOODS. Default: 0.0001\n      --pval FLOAT                    P-value for setting motif match threshold\n                                      via MOODS. Default: 0.0001\n      --bg FLOATS                     Background DNA composition, for setting\n                                      motif match threshold via MOODS, represented\n                                      as a series of 4 floats. Default: 0.25 0.25\n                                      0.25 0.25\n      --ci FLOAT                      Confidence interval for positional profile,\n                                      expressed as a percentage. Default: 95.0\n      --sigma FLOAT                   Adaptive scale for brightness of motif\n                                      matches in motif heatmaps. Maximum\n                                      brightness is achieved at sigma * std, where\n                                      std is the standard deviation of nonzero\n                                      motif match scores. Set lower for brighter\n                                      pixels. Must be a positive value. Default:\n                                      0.5\n      --cmap TEXT                     Name of a matplotlib colormap. Used to color\n                                      the central MEPP motif heatmap. Possible\n                                      values can be viewed using\n                                      matplotlib.pylot.colormaps() or at https://m\n                                      atplotlib.org/stable/tutorials/colors/colorm\n                                      aps.html . Default: gray_r. Set to gray to\n                                      invert colors (black background).\n      --smoothing INTEGER             Factor by which to smooth motif density\n                                      along ranks for visualization. This is\n                                      multiplicative to smoothing that already\n                                      occurs dependent on figure pixel resolution.\n                                      Default: 5\n      --width INTEGER                 Width of generated MEPP plot, in inches.\n                                      Default: 10\n      --height INTEGER                Height of generated MEPP plot, in inches.\n                                      Default: 10\n      --formats TEXT                  Comma-separated list of image formats for\n                                      MEPP plots. Possible formats are png and\n                                      svg. Default: png,svg\n      --dpi INTEGER                   DPI of generated MEPP plot. Default: 300\n      --gjobs INTEGER                 Number of jobs for GPU multiprocessing.\n                                      NOTE: Set this carefully to avoid jobs\n                                      crowding each other out of GPU memory,\n                                      causing profile generation to fail. If\n                                      setting --nogpu, this will be the number of\n                                      jobs used to process motifs in parallel.\n                                      Default: 1\n      --nogpu                         Disable use of GPU. If setting --nogpu,\n                                      --gjobs will be the number of jobs used to\n                                      process motifs in parallel.\n      --attempts INTEGER              Number of attempts to retry making a plot.\n                                      Default: 10\n      --minwait FLOAT                 Minimum wait between attempts to make a\n                                      plot, in seconds. Default: 1.0\n      --maxwait FLOAT                 Maximum wait between attempts to make a\n                                      plot, in seconds. Default: 1.0\n      --cmethod METHOD                Clustering method for clustering MEPP\n                                      profiles. For details, see \"method\"\n                                      parameter of\n                                      scipy.cluster.hierarchy.linkage. Default:\n                                      average\n      --cmetric METRIC                Clustering metric for clustering MEPP\n                                      profiles. For details, see \"metric\"\n                                      parameter of\n                                      scipy.cluster.hierarchy.linkage. Default:\n                                      correlation\n      --tdpi INTEGER                  DPI of inline plots for clustering table.\n                                      Default: 100\n      --tformat [png|svg]             Format of inline plots for clustering table.\n                                      Use png for speed, svg for publication\n                                      quality. Default: png\n      --mtmethod METHOD               Multiple testing method for adjusting\n                                      p-values of positional correlations listed\n                                      in the clustering table.For details, see\n                                      \"method\" parameter of\n                                      statsmodels.stats.multitest.multipletests.\n                                      Default: fdr_by\n      --mtalpha FLOAT                 Alpha (FWER, family-wise error rate) for\n                                      adjusting p-values of positional\n                                      correlations listed in the clustering\n                                      table.For details, see \"alpha\" parameter of\n                                      statsmodels.stats.multitest.multipletests.\n                                      Default: 0.01\n      --thoroughmt                    Enables thorough multiple testing of\n                                      positional correlation p-values: All\n                                      p-values for all motifs at all positions\n                                      will be adjusted simultaneously.Default:\n                                      Thorough multiple testing is enabled\n      --non-thoroughmt                Disables thorough multiple testing of\n                                      positional correlation p-values: Only\n                                      extreme p-values will be adjusted\n                                      for.Default: Thorough multiple testing is\n                                      enabled\n      --help                          Show this message and exit.\n\n"
      },
      "source": "https://raw.githubusercontent.com/npdeloss/mepp/main/README.rst",
      "technique": "header_analysis"
    }
  ]
}