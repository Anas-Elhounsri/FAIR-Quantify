{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/staylorhead/POIROT-POE"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-11-15T17:24:07Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-24T19:50:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Code for implementing POIROIT, the multi-trait test for parent-of-origin effects."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test"
        ],
        "type": "Text_excerpt",
        "value": "POIROT is a tool developed for identifying genetic variants harboring parent-of-origin effects (POEs) in unrelated samples that considers multiple quantitative phentoypes simultaneously. The method is based on a robust test for equality of phenotypic covariance matrices between heterozygotes and homozygotes at a given locus. POIROT can handle both normally-distributed and non-normal continuous phenotypes. The method also adjusts for the effects of important covariates. For more information on this method and to cite usage, please see the following article:\n\n>[*POIROT: A powerful test for parent-of-origin effects in unrelated samples leveraging multiple phenotypes.* Bioinformatics.](https://academic.oup.com/bioinformatics/article/39/4/btad199/7126417)\n\nPOIROT is implemented as a series of R functions which can be loaded and executed in an R environment and are described in this manual.\n\nFor questions or issues related to these R routines, please contact Taylor Head (<taylor.fischer@emory.edu>).\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The R Environment",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "R is a widely-used, free and open source software environment for statistical computing and graphics. The most recent version of R can be downloaded from the \n[Comprehensive R Archive Network (CRAN)](http://cran.r-project.org/)\nCRAN provides precompiled binary versions of R for Windows, MacOS, and select Linux distributions. For complete details on how to compile, install, and manage R and R packages, please refer to the manual [R Installation and Administration](http://cran.r-project.org/doc/manuals/r-release/R-admin.html).\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9855865513624873,
      "result": {
        "original_header": "1. Phenotype File",
        "type": "Text_excerpt",
        "value": "* A file containing quantitative phenotype values as in `./ExampleData/phenotypes.txt`, with one subject per row and one phenotype per column.\n* The first row of the file should contain phenotype labels.\n* No missing data is allowed. \n* It is assumed all columns are phenotypes to be analyzed, and rows (subjects) should already be sorted to match the order of rows (subjects) in the other two input files. \n \n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9863828178777602,
      "result": {
        "original_header": "2. Covariate File",
        "type": "Text_excerpt",
        "value": "* A file containing quantitative or categorical covariate values as in `./ExampleData/covariates.txt`, with one subject per row and one covariate per column. \n* The first row of the file should contain covariate labels.\n* No missing data is allowed. \n* It is assumed all phenotypes should be adjusted for each of the covariates in the file, and rows (subjects) should already be sorted to match the order of rows (subjects) in the other two input files. \n \n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.97437417768369,
      "result": {
        "original_header": "3. Individual-Level Genotype Data",
        "type": "Text_excerpt",
        "value": "* A file containing individual-level genotype data as in `./ExampleData/variants.txt`, with one subject per row and one SNP per column.\n* The first row of the file should contain variant names.\n* No missing data is allowed. \n* Rows (subjects) should already be sorted to match the order of rows (subjects) in the other two input files. \n* Variants must be coded by minor allele count (0/1/2).\n \n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/staylorhead/POIROT-POE/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/staylorhead/POIROT-POE/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staylorhead/POIROT-POE"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "POIROT: Parent-of-Origin Inference using Robust Omnibus Test"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/staylorhead/POIROT-POE/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright (c) 2023 Taylor Head\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/LICENSE",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "POIROT-POE"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "staylorhead"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 5266,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:18:55",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Analysis",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test"
        ],
        "type": "Text_excerpt",
        "value": "For the example analysis, we have provided sample files containing simulated data on 1000 unrelated subjects. We have included data on 5 phenotypes we are interested in testing for parent-of-origin effects. While the method is scalable to hundreds of thousands of SNPs, we have included data on two SNPs for this toy analysis.\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Load R Functions and Input Files",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test",
          "Example Analysis"
        ],
        "type": "Text_excerpt",
        "value": "```\n# Set working directory to that housing the POIROT functions R script and input files\n\nsource(\"POIROT-functions.R\")\n\nPHENO <- read.delim(\"phenotypes.txt\")\nGENO <- read.delim(\"variants.txt\")\nCOVAR <- read.delim(\"covariates.txt\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Covariate Adjustment",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test",
          "Example Analysis"
        ],
        "type": "Text_excerpt",
        "value": "```\n# The following function will perform covariate adjustment of all phenotypes included in the PHENO data frame for all covariates included in the COVAR data frame\n\nPHENO_ADJ <- extract_residuals(PHENO,COVAR)\n\n# It will return a dataframe in equal dimension of PHENO. Each column represents an adjusted phenotype\n```\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Perform POIROT Test for POEs",
        "parent_header": [
          "POIROT: Parent-of-Origin Inference using Robust Omnibus Test",
          "Example Analysis"
        ],
        "type": "Text_excerpt",
        "value": "```\n# The following assumes all variants in GENO will be tested for parent-of-origin effects\nout <- data.frame(t(sapply(1:ncol(GENO),\n                           FUN=do_POIROT_by_snp,\n                           phenodat=PHENO_ADJ,\n                           genodat=GENO)))\n# The returned data frame consists of two columns (\"pval\": POIROT p-value, \"stat\": POIROT test statistic)\nout$variant <- colnames(GENO)\nhead(out) # Preview data frame of final results\n```\n"
      },
      "source": "https://raw.githubusercontent.com/staylorhead/POIROT-POE/main/README.md",
      "technique": "header_analysis"
    }
  ]
}