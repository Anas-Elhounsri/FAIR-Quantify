{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference",
        "type": "Text_excerpt",
        "value": "Christian M. K. Sieber, Alexander J. Probst, Allison Sharrar, Brian C. Thomas, Matthias Hess, Susannah G. Tringe & Jillian F. Banfield (2018). [Recovery of genomes from metagenomes via a dereplication, aggregation and scoring strategy.](https://www.nature.com/articles/s41564-018-0171-1) Nature Microbiology. [https://doi.org/10.1038/s41564-018-0171-1.](https://doi.org/10.1038/s41564-018-0171-1)\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cmks/DAS_Tool"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-12-20T17:35:08Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-27T03:27:23Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DAS Tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9812485812242097,
      "result": {
        "original_header": "DAS Tool for genome resolved metagenomics",
        "type": "Text_excerpt",
        "value": "DAS Tool is an automated method that integrates the results of a flexible number of binning algorithms to calculate an optimized, non-redundant set of bins from a single assembly.\n \n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cmks/DAS_Tool/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 17
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cmks/DAS_Tool"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DAS Tool for genome resolved metagenomics"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/src/extract_bins.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/src/Contigs2Bin_to_Fasta.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/src/Fasta_to_Contig2Bin.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/src/contig_length.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/src/prodigal_parallel.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "```\n# Download and extract DASTool.zip archive:\nunzip DAS_Tool-1.x.x.zip\ncd ./DAS_Tool-1.x.x\n\n# Unzip SCG database:\nunzip ./db.zip -d db\n\n# Run DAS Tool:\n./DAS_Tool -h\n```\n\n\nInstallation of dependent R-packages:\n```\n$ R\n> repo='http://cran.us.r-project.org' #select a repository\n> install.packages('data.table', repos=repo, dependencies = T)\n> install.packages('magrittr', repos=repo, dependencies = T)\n> install.packages('docopt', repos=repo, dependencies = T)\n> q() #quit R-session\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation using conda or homebrew",
        "type": "Text_excerpt",
        "value": "DAS Tool now can also be installed via bioconda and homebrew.\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bioconda",
        "parent_header": [
          "Installation using conda or homebrew"
        ],
        "type": "Text_excerpt",
        "value": " Bioconda repository: https://bioconda.github.io/recipes/das_tool/README.html. Thanks @[keuv-grvl](\"https://github.com/keuv-grvl\") and @[silask](\"https://github.com/SilasK\")!.\n\nAdd bioconda channel:\n```\nconda config --add channels defaults\nconda config --add channels bioconda\nconda config --add channels conda-forge\n```\nInstall DAS Tool using conda:\n```\nconda install -c bioconda das_tool\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Homebrew",
        "parent_header": [
          "Installation using conda or homebrew"
        ],
        "type": "Text_excerpt",
        "value": "Homebrew-bio repository: https://github.com/brewsci/homebrew-bio. Thanks @[gaberoo](\"https://github.com/gaberoo\")!\n\nInstall DAS Tool using Homebrew:\n```\nbrew install brewsci/bio/das_tool\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Preparation of input files",
        "type": "Text_excerpt",
        "value": "Not all binning tools provide results in a tab separated file of contig-IDs and bin-IDs. A helper script can be used to convert a set of bins in fasta format to tabular contigs2bin file, which can be used as input for DAS Tool: `src/Fasta_to_Contigs2Bin.sh -h`.\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9992692284554509,
      "result": {
        "original_header": "Docker",
        "type": "Text_excerpt",
        "value": "It is also possible to run DAS Tool using Docker. A Docker image can be built using the Dockerfile included in the repository:\n```\ncd ./DAS_Tool-1.x.x\ndocker build -t cmks/das_tool .\n```\nTo test the build run:\nBASH2*\n \n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "type": "License",
        "url": null,
        "value": null
      },
      "technique": "GitHub_API"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/img/logo.png"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DAS_Tool"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cmks"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 29628,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 11747,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6307,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 2508,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2024-01-08T23:20:13Z",
        "date_published": "2024-01-08T23:22:12Z",
        "description": "Improvements for large datasets",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.7",
        "name": "DAS Tool 1.1.7",
        "release_id": 136254288,
        "tag": "1.1.7",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/136254288",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/136254288",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2023-12-18T22:10:24Z",
        "date_published": "2023-12-18T22:24:03Z",
        "description": "Bug fix for issue #99 ",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.7-b.1",
        "name": "DAS Tool 1.1.7-b.1",
        "release_id": 134391668,
        "tag": "1.1.7-b.1",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.7-b.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/134391668",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/134391668",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.7-b.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2022-12-20T02:45:08Z",
        "date_published": "2022-12-20T02:50:11Z",
        "description": "Bug fixes and optimizations",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.6",
        "name": "DAS Tool 1.1.6",
        "release_id": 86603773,
        "tag": "1.1.6",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/86603773",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/86603773",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2022-09-19T06:34:15Z",
        "date_published": "2022-09-19T06:38:17Z",
        "description": "Bug fixes and optimizations",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.5",
        "name": "DAS Tool 1.1.5",
        "release_id": 77507851,
        "tag": "1.1.5",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/77507851",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/77507851",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2022-03-07T04:37:04Z",
        "date_published": "2022-03-07T04:45:31Z",
        "description": "- major code refactoring to improve stability and maintainability\r\n- change summary file output format\r\n- command-line syntax changes due to switch to docopt R package for command-line argument parsing\r\n- set Diamond as default alignment tool\r\n- remove dependencies: DASTool, doMC R packages\r\n- add dependencies: docopt, magrittr R packages\r\n- add Dockerfile",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.4",
        "name": "DAS Tool 1.1.4",
        "release_id": 61044688,
        "tag": "1.1.4",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/61044688",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/61044688",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2021-07-16T03:26:37Z",
        "date_published": "2021-07-23T02:55:01Z",
        "description": " - fix type convert bug in SCG finder\r\n - fix bug when no SCGs of one set were detected\r\n - allow empty scaffold2bin input files\r\n - remove output plots and ggplot2 dependency\r\n - smaller bug fixes\r\n - smaller optimizations",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.3",
        "name": "DAS Tool 1.1.3",
        "release_id": 46647135,
        "tag": "1.1.3",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/46647135",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/46647135",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2019-10-16T17:39:37Z",
        "date_published": "2019-11-06T17:57:06Z",
        "description": "DAS Tool for genome-resolved metagenomics version 1.1.2",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.2",
        "name": "DAS Tool 1.1.2",
        "release_id": 21264033,
        "tag": "1.1.2",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/21264033",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/21264033",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2018-09-21T05:59:30Z",
        "date_published": "2018-10-06T02:07:25Z",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.1",
        "name": "DAS Tool for genome-resolved metagenomics version 1.1.1",
        "release_id": 13278597,
        "tag": "1.1.1",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/13278597",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/13278597",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2017-09-06T05:50:48Z",
        "date_published": "2018-01-06T23:47:42Z",
        "description": "DAS Tool for genome-resolved metagenomics version 1.1.0",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.1.0",
        "name": "DAS Tool 1.1.0",
        "release_id": 9134519,
        "tag": "1.1.0",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/9134519",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/9134519",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cmks",
          "type": "User"
        },
        "date_created": "2017-06-29T20:17:57Z",
        "date_published": "2017-08-10T02:14:52Z",
        "description": "DAS Tool for genome-resolved metagenomics version 1.0.0",
        "html_url": "https://github.com/cmks/DAS_Tool/releases/tag/1.0.0",
        "name": "DAS Tool 1.0.0",
        "release_id": 7341745,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/cmks/DAS_Tool/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/cmks/DAS_Tool/releases/7341745",
        "value": "https://api.github.com/repos/cmks/DAS_Tool/releases/7341745",
        "zipball_url": "https://api.github.com/repos/cmks/DAS_Tool/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "type": "Text_excerpt",
        "value": "- R (>= 3.2.3): https://www.r-project.org\n- R-packages: data.table (>= 1.9.6), magrittr (>= 2.0.1), docopt (>= 0.7.1)\n- ruby (>= v2.3.1): https://www.ruby-lang.org\n- Pullseq (>= 1.0.2): https://github.com/bcthomas/pullseq\n- Prodigal (>= 2.6.3): https://github.com/hyattpd/Prodigal\n- coreutils (only macOS/ OS X): https://www.gnu.org/software/coreutils\n- One of the following search engines:\n  - DIAMOND (>= 0.9.14): https://ab.inf.uni-tuebingen.de/software/diamond\n  - BLAST+ (>= 2.5.0): https://blast.ncbi.nlm.nih.gov/Blast.cgi\n  - USEARCH* (>= 8.1): http://www.drive5.com/usearch/download.html\n\n\\*) The free version of USEARCH only can use up to 4Gb RAM. Therefore, the use of DIAMOND or BLAST+ is recommended for big datasets.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies not found",
        "parent_header": [
          "Troubleshooting/ known issues"
        ],
        "type": "Text_excerpt",
        "value": "**Problem:** All dependencies are installed and the environmental variables are set but DAS Tool still claims that specific depencendies are missing.\n\n**Solution:** Make sure that the dependency executable names are correct. For example USEARCH has to be executable with the command\nIf your USEARCH binary is called differently (e.g. `usearch9.0.2132_i86linux32`) you can either rename it or add a symbolic link called usearch:\n\n```\n$ ln -s usearch9.0.2132_i86linux32 usearch\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples: Running DAS Tool on sample data.",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Example 1:**  Run DAS Tool on binning predictions of MetaBAT, MaxBin, CONCOCT and tetraESOMs. Output files will start with the prefix *DASToolRun1*:\n```\nDAS_Tool  -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,\\\nsample_data/sample.human.gut_maxbin2_contigs2bin.tsv,\\\nsample_data/sample.human.gut_metabat_contigs2bin.tsv,\\\nsample_data/sample.human.gut_tetraESOM_contigs2bin.tsv \\\n-l concoct,maxbin,metabat,tetraESOM \\\n-c sample_data/sample.human.gut_contigs.fa \\\n-o sample_output/DASToolRun1\n```\n\n**Example 2:** Run DAS Tool again with different parameters. Use the proteins predicted in Example 1 to skip the gene prediction step, output evaluations of input bins, set the number of threads to 2 and score threshold to 0.6. Output files will start with the prefix *DASToolRun2*:\n```\nDAS_Tool -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,\\\nsample_data/sample.human.gut_maxbin2_contigs2bin.tsv,\\\nsample_data/sample.human.gut_metabat_contigs2bin.tsv,\\\nsample_data/sample.human.gut_tetraESOM_contigs2bin.tsv \\\n-l concoct,maxbin,metabat,tetraESOM \\\n-c sample_data/sample.human.gut_contigs.fa \\\n-o sample_output/DASToolRun2 \\\n--proteins sample_output/DASToolRun1_proteins.faa \\\n--write_bin_evals \\\n--threads 2 \\\n--score_threshold 0.6\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 09:10:20",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 138
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "```\nDAS_Tool [options] -i <contig2bin> -c <contigs_fasta> -o <outputbasename>\n\nOptions:\n   -i --bins=<contig2bin>                   Comma separated list of tab separated contigs to bin tables.\n   -c --contigs=<contigs>                   Contigs in fasta format.\n   -o --outputbasename=<outputbasename>     Basename of output files.\n   -l --labels=<labels>                     Comma separated list of binning prediction names.\n   --search_engine=<search_engine>          Engine used for single copy gene identification (diamond/blastp/usearch) [default: diamond].\n   -p --proteins=<proteins>                 Predicted proteins (optional) in prodigal fasta format (>contigID_geneNo).\n                                            Gene prediction step will be skipped.\n   --write_bin_evals                        Write evaluation of input bin sets.\n   --write_bins                             Export bins as fasta files.\n   --write_unbinned                         Write unbinned contigs.\n   -t --threads=<threads>                   Number of threads to use [default: 1].\n   --score_threshold=<score_threshold>      Score threshold until selection algorithm will keep selecting bins (0..1) [default: 0.5].\n   --duplicate_penalty=<duplicate_penalty>  Penalty for duplicate single copy genes per bin (weight b).\n                                            Only change if you know what you are doing (0..3) [default: 0.6].\n   --megabin_penalty=<megabin_penalty>      Penalty for megabins (weight c). Only change if you know what you are doing (0..3) [default: 0.5].\n   --dbDirectory=<dbDirectory>              Directory of single copy gene database [default: db].\n   --resume                                 Use existing predicted single copy gene files from a previous run.\n   --debug                                  Write debug information to log file.\n   -v --version                             Print version number and exit.\n   -h --help                                Show this.\n\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Input file format",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "- Bins [\\--bins, -i]: Tab separated files of contig-IDs and bin-IDs.\nContigs to bin file example:\n```\nContig_1\tbin.01\nContig_8\tbin.01\nContig_42\tbin.02\nContig_49\tbin.03\n```\n- Contigs [\\--contigs, -c]: Assembled contigs in fasta format:\n```\n>Contig_1\nATCATCGTCCGCATCGACGAATTCGGCGAACGAGTACCCCTGACCATCTCCGATTA...\n>Contig_2\nGATCGTCACGCAGGCTATCGGAGCCTCGACCCGCAAGCTCTGCGCCTTGGAGCAGG...\n```\n\n- Proteins (optional) [\\--proteins]: Predicted proteins in prodigal fasta format. Header contains contig-ID and gene number:\n```\n>Contig_1_1\nMPRKNKKLPRHLLVIRTSAMGDVAMLPHALRALKEAYPEVKVTVATKSLFHPFFEG...\n>Contig_1_2\nMANKIPRVPVREQDPKVRATNFEEVCYGYNVEEATLEASRCLNCKNPRCVAACPVN...\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output files",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "- Summary of output bins including quality and completeness estimates (*_DASTool_summary.tsv).\n- Contigs to bin file of output bins (*_DASTool_contigs2bin.tsv).\n- Quality and completeness estimates of input bin sets, if ```--write_bin_evals```  is set (*_allBins.eval).\n- Bins in fasta format if ```--write_bins``` is set (DASTool_bins).\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples: Running DAS Tool on sample data.",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "**Example 1:**  Run DAS Tool on binning predictions of MetaBAT, MaxBin, CONCOCT and tetraESOMs. Output files will start with the prefix *DASToolRun1*:\n```\nDAS_Tool  -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,\\\nsample_data/sample.human.gut_maxbin2_contigs2bin.tsv,\\\nsample_data/sample.human.gut_metabat_contigs2bin.tsv,\\\nsample_data/sample.human.gut_tetraESOM_contigs2bin.tsv \\\n-l concoct,maxbin,metabat,tetraESOM \\\n-c sample_data/sample.human.gut_contigs.fa \\\n-o sample_output/DASToolRun1\n```\n\n**Example 2:** Run DAS Tool again with different parameters. Use the proteins predicted in Example 1 to skip the gene prediction step, output evaluations of input bins, set the number of threads to 2 and score threshold to 0.6. Output files will start with the prefix *DASToolRun2*:\n```\nDAS_Tool -i sample_data/sample.human.gut_concoct_contigs2bin.tsv,\\\nsample_data/sample.human.gut_maxbin2_contigs2bin.tsv,\\\nsample_data/sample.human.gut_metabat_contigs2bin.tsv,\\\nsample_data/sample.human.gut_tetraESOM_contigs2bin.tsv \\\n-l concoct,maxbin,metabat,tetraESOM \\\n-c sample_data/sample.human.gut_contigs.fa \\\n-o sample_output/DASToolRun2 \\\n--proteins sample_output/DASToolRun1_proteins.faa \\\n--write_bin_evals \\\n--threads 2 \\\n--score_threshold 0.6\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage:",
        "parent_header": [
          "Preparation of input files"
        ],
        "type": "Text_excerpt",
        "value": "```\nFasta_to_Contigs2Bin: Converts genome bins in fasta format to contigs-to-bin table.\n\nUsage: Fasta_to_Contigs2Bin.sh -e fasta > my_contigs2bin.tsv\n\n   -e, --extension            Extension of fasta files. (default: fasta)\n   -i, --input_folder         Folder with bins in fasta format. (default: ./)\n   -h, --help                 Show this message.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example: Converting MaxBin fasta output into tab separated contigs2bin file:",
        "parent_header": [
          "Preparation of input files"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ ls /maxbin/output/folder\nmaxbin.001.fasta   maxbin.002.fasta   maxbin.003.fasta...\n\n$ src/Fasta_to_Contigs2Bin.sh -i /maxbin/output/folder -e fasta > maxbin.contigs2bin.tsv\n\n$ head gut_maxbin2_contigs2bin.tsv\nNODE_10_length_127450_cov_375.783524\tmaxbin.001\nNODE_27_length_95143_cov_427.155298\tmaxbin.001\nNODE_51_length_78315_cov_504.322425\tmaxbin.001\nNODE_84_length_66931_cov_376.684775\tmaxbin.001\nNODE_87_length_65653_cov_460.202156\tmaxbin.001\n```\n\nSome binning tools (such as CONCOCT) provide a comma separated tabular output. To convert a comma separated file into a tab separated file a one liner can be used: `perl -pe \"s/,/\\t/g;\" contigs2bin.csv > contigs2bin.tsv`.\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example: Converting CONCOCT csv output into tab separated contigs2bin file:",
        "parent_header": [
          "Preparation of input files"
        ],
        "type": "Text_excerpt",
        "value": "```\n$ head concoct_clustering_gt1000.csv\nNODE_2_length_147519_cov_33.166976,42\nNODE_3_length_141012_cov_38.678171,42\nNODE_4_length_139685_cov_35.741896,42\n\n$ perl -pe \"s/,/\\tconcoct./g;\" concoct_clustering_gt1000.csv > concoct.contigs2bin.tsv\n\n$ head concoct.contigs2bin.tsv\nNODE_2_length_147519_cov_33.166976\tconcoct.42\nNODE_3_length_141012_cov_38.678171\tconcoct.42\nNODE_4_length_139685_cov_35.741896\tconcoct.42\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cmks/DAS_Tool/master/README.md",
      "technique": "header_analysis"
    }
  ]
}