{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Reference LD File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Summary-level GWAS Data Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- **Reference LD files** have to be generated by `./bin/Estep_mcmc` from either individual-level GWAS genotype VCF files of test samples or a reference cohort such as [**1000 Genome**](https://www.internationalgenome.org/category/vcf/) of the same ancestry. Reference LD files generated using a reference cohort with different ancestry from the test GWAS cohort will cause errors.\n-   **Reference LD files** are tab separated text files with 9 columns: `#ORDER CHROM POS ID REF ALT N MAF CORR`, denoting the order of variants, chromosome number, base pair coordinate, variant ID, reference allele, alternative allele, sample size, minor allele frequency, correlation between variant in the current row and variants within a specified right hand size `$LDwindow` of the current variant (separated by `,`, started with `1.0` as standardized correlation).\n-  Example files: `/Example/ExData/RefLD/`. For example, the correlation between `19:29791987:C:A` and `19:29792094:G:A` is `-0.123`.\n\n\t| #ORDER | CHROM   | POS    | ID    | REF    | ALT    | N   | MAF    | CORR   |\n\t|-------------|-------------|-------------|-------------|-------------|-------------|-------------|-------------|-------------|\n\t|0| 19    | 29791987 | 19:29791987:C:A | C |A | 1893 | 0.021 | 1.0,-0.123,-0.202,... |\n\t|1| 19   | 29792094 |  19:29792094:G:A | G | A | 1893 | 0.400 | 1.0,0.640,0.117,... |\n\t|...\t| ... |  ... |  ... |  ... |  ... |  ... |  ... |\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yanglab-emory/BFGWAS_QUANT"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-08-03T18:24:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-16T01:15:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Tool for integrating multivariate quantitative annotation in GWAS"
      },
      "technique": "GitHub_API"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yanglab-emory/BFGWAS_QUANT/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yanglab-emory/BFGWAS_QUANT/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yanglab-emory/BFGWAS_QUANT"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/test_script.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/test_script_AD.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/bfgwas_sbatch.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/script/bfGWAS_Script_ver2_loop.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/script/run_make.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/bin/GetRefLD.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/bin/run_make.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Compile **Estep_mcmc**",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Software Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Compile C++ library `./libStatGen/libStatGen.a` under your system by using the following commands:\n\n```\ncd BFGWAS_QUANT/libStatGen/;\nmake clean;\nmake\n```\n\n* Compile C++ source code for the executable file `./bin/Estep_mcmc` that will be used to run the Estep MCMC algorithm, by using the following commands under `BFGWAS_QUANT/` directory:\n\n```\ncd BFGWAS_QUANT/;\nmake clean ;\nmake\n```\n\n* Even though a compiled executable file `./bin/Estep_mcmc` from our cluster is provided on GITHUB, please still compile one for your own system. The `BFGWAS_QUANT/Makefile` might need to be adapted for one's own system.\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yanglab-emory/BFGWAS_QUANT/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v3.0",
        "spdx_id": "GPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-3.0",
        "value": "https://api.github.com/licenses/gpl-3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BFGWAS_QUANT"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "yanglab-emory"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3105617,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 96167,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 48258,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 21905,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 18353,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 10320,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Additional Requirements",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Software Installation"
        ],
        "type": "Text_excerpt",
        "value": "* [**R**](https://www.r-project.org/) library [**data.table**](https://github.com/Rdatatable/data.table/wiki/Installation), [**tidyverse**](https://www.tidyverse.org/), [**optimx**](https://cran.r-project.org/web/packages/optimx/index.html) : used in the M-step R script `./bin/Mstep.r`.\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 3. Run Makefile",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Example Usage",
          "**Example commands: `./test_script.sh`**"
        ],
        "type": "Text_excerpt",
        "value": "```\nj=4\nmake -f ${wkdir}/simu_BFGWAS.mk clean; # Clean target files\n${BFGWAS_dir}/bin/run_make.sh --wkdir ${wkdir} --mkfile ${mkfile} --njob ${j}\n```\n- Run by `sbatch`:\n\n```\nj=4\nmake -f ${wkdir}/simu_BFGWAS.mk clean; # Clean target files\nsbatch ${BFGWAS_dir}/bfgwas_sbatch.sh ${wkdir} ${mkfile} ${j}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:20:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
        "type": "Text_excerpt",
        "value": "**BFGWAS_QUANT** is developed based on our previous tool [**BFGWAS**](https://github.com/yjingj/BFGWAS_SS) tool as proposed  by [Yang J. et. al, AJHG, 2017](https://doi.org/10.1016/j.ajhg.2017.08.002). **BFGWAS_QUANT** is based on a multivariable Bayesian variable selection model, accounting for multivariate quantitative functional annotations and LD to fine-map and prioritize GWAS hits.\n\n- With **individual-level GWAS data**, **BFGWAS_QUANT** first computes single variant Z-score statistics (GWAS summary statistics) and LD correlation files from individual-level GWAS data, and then loads these two summary statistics files and known GWAS sample size to run MCMC.\n- With **summary-level GWAS data**,  **BFGWAS_QUANT** uses Z-score statistics file and LD correlation files generated from a reference panel (*by BFGWAS_QUANT*) to run MCMC.\n- **BFGWAS_QUANT** runs MCMC in parallel for multiple genome-blocks, which is handled through a `Makefile` generated by a PERL script `./bin/gen_mkf.pl`. EM-MCMC algorithm is handled based on dependency jobs in the generated `Makefile`. Users will only need to submit the generated `Makefile` as a job for the analysis results.\n\n\n---\n\n- [Software Installation](#software-installation)\n- [Input Files](#input-files)\n\t- [Individual-level GWAS Data Input Files](#individual-level-gwas-data-input-files)\n\t\t- [1. Genotype VCF Files](#1-genotype-vcf-files)\n\t\t- [2. Phenotype File](#2-phenotype-file)\n\t- [Summary-level GWAS Data Input Files](#summary-level-gwas-data-input-files)\n\t\t- [1. GWAS Zscore File](#1-gwas-zscore-file)\n\t\t- [2. Reference LD File](#2-reference-LD-file)\n\t\t- [3. Annotation File](#3-annotation-file)\n\t- [Other Input Files](#other-input-files)\n\t\t- [1. Genome Block Prefix File](#1-genome-block-prefix-file)\n\t\t- [2. Prior Parameter File](#2-prior-parameter-file)\n- [Example Usage](#example-usage)\n\t- [Step 1. Obtain GWAS Zscore and LD Files](#step-1-obtain-gwas-zscore-and-ld-files)\n\t- [Step 2. Generate Makefile](#step-2-generate-makefile)\n\t- [Step 3. Run Makefile](#step-3-run-makefile)\n- [Output Files](#output-files)\n- [Analyse BFGWAS_QUANT Results](#analyse-bfgwas_quant-results)\n- [Remarks](#remarks)\n\n---\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Compile **Estep_mcmc**",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Software Installation"
        ],
        "type": "Text_excerpt",
        "value": "* Compile C++ library `./libStatGen/libStatGen.a` under your system by using the following commands:\n\n```\ncd BFGWAS_QUANT/libStatGen/;\nmake clean;\nmake\n```\n\n* Compile C++ source code for the executable file `./bin/Estep_mcmc` that will be used to run the Estep MCMC algorithm, by using the following commands under `BFGWAS_QUANT/` directory:\n\n```\ncd BFGWAS_QUANT/;\nmake clean ;\nmake\n```\n\n* Even though a compiled executable file `./bin/Estep_mcmc` from our cluster is provided on GITHUB, please still compile one for your own system. The `BFGWAS_QUANT/Makefile` might need to be adapted for one's own system.\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Genotype VCF Files",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Individual-level GWAS Data Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- All VCF genotype files should be stored under the same parent directory.\n- Genotype files are supposed to be segmented based on LD. Genome blocks are expected to be approximately independent with ~5K -- 10K SNPs per block.\n\t- Segmentation information of **hg19** derived by [LDetect](https://bitbucket.org/nygcresearch/ldetect/src/master/) are provided in `./Example/ExData/Segmentations/lddetect_1KG_*_hg19.bed ` for EUR, AFR, and ASN populations.\n\t- Segmentation information of **GRCH38** are available from [LDblocks_GRCh38](https://github.com/jmacdon/LDblocks_GRCh38).\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Phenotype File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Individual-level GWAS Data Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- No column header is needed\n- Example file: `/Example/ExData/sim_pheno.txt`\n\n\t| ...    | ...  |\n\t|-------------|-------------|\n\t| 1000    | 0.64 |\n\t| 1005   | -0.55 |\n\t|...\t| ... |\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. GWAS Zscore File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Summary-level GWAS Data Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- The same segmentation information used to segment individual-level VCF files can also be used here to construct segmented GWAS Zscore files.\n- **GWAS Zscore files** are tab separated text files with first 8 columns: `#CHROM POS ID REF ALT N MAF Z_SCORE`, denoting chromosome number, base pair coordinate, variant ID, reference allele, alternative allele, sample size, minor allele frequency, Z-score statistic values by single variant tests. Unknown sample size and minor allele frequency values can be denoted as `NA`.\n\t- `MAF` will be used to filter out rare variant if provided.\n- Example files: `/Example/ExData/Zscore/`\n\n\t| #CHROM   | POS    | ID    | REF    | ALT    | N   | MAF    | Z_SCORE   |\n\t|-------------|-------------|-------------|-------------|-------------|-------------|-------------|-------------|\n\t| 19    | 29791987 | 19:29791987:C:A | C |A | 1893 | 0.021 | 0.505 |\n\t| 19   | 29792094 |  19:29792094:G:A | G | A | 1893 | 0.400 | 0.139 |\n\t|...\t| ... |  ... |  ... |  ... |  ... |  ... |  ... |\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Annotation File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Summary-level GWAS Data Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- **Annotation files** are tab separated text files with 6 columns: `#CHROM POS ID REF ALT Annotation`, denoting chromosome number, base pair coordinate, variant ID, reference allele, alternative allele, multivariate quantitative annotations (separated by `,`).\n- **Enrichment parameters are restricted to be positive values.** We suggest users to code their interesting annotation features as positive values.\n\n\t| #CHROM   | POS    | ID    | REF    | ALT    | Annotation   |\n\t|-------------|-------------|-------------|-------------|-------------|-------------|\t| 19    | 29791987 | 19:29791987:C:A | C |A | 0,0,0,-1.5646 |\n\t| 19   | 29792094 |  19:29792094:G:A | G | A | 0,0,0,-2.2281  |\n\t|...\t| ... |  ... |  ... |  ... |  ... |  ... |  ... |\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Genome Block Prefix File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Other Input Files"
        ],
        "type": "Text_excerpt",
        "value": "* **Genome block prefix file** of VCF genotype files as in `./Example/ExData/filehead_4block.txt` is required. Each row of the list file is the file head of the VCF file of one genome block as in `[filehead].vcf.gz`. Note that the VCF file extension suffix `.vcf.gz` should not be included.\n* The same set of file heads as in the **genome block prefix file** should be used to name **VCF, Zscore, LD, Annotation files**.\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Prior Parameter File",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Input Files",
          "Other Input Files"
        ],
        "type": "Text_excerpt",
        "value": "- The first value in the **`a`** row is for `alpha_0` with a recomended value in `[-13.8, -9]`, which controls for the benchmark of model sparsity when enrichment parameters are `0` and will not be updated during M-step. \n- Default `tau_beta` value is recommended to be set as `0.1` if individual-level GWAS data are used, and `1` if summary-level GWAS data are used.\n\n\n\t| #hyper_parameter   |   |\n\t|-------------|-------------|\n\t| **a**   | -13.8,0,0,0,0 |\n\t|tau_beta   | 0.1 |\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1. Obtain GWAS Zscore and LD Files",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Example Usage",
          "**Example commands: `./test_script.sh`**"
        ],
        "type": "Text_excerpt",
        "value": "- The following commands can be used to generate GWAS Zscore and LD files for one genome block:\n\n\t```\n\tBFGWAS_dir=\"/projects/YangLabData/Software/BFGWAS_QUANT\"\n\tpheno=${BFGWAS_dir}/Example/ExData/sim_pheno.txt\n\tgeno_dir=/home/jyang51/YangLabData/SharedData/AMP-AD/ROSMAP/WGS_JointCall/LDdetect_SegmentedVCF\n\tLDwindow=1000000\n\tmaf=0.001\n\tGTfield=GT\n\tline=\"WGS_1898_samples_CHR_19_13471127_14486347\"\n\t${BFGWAS_dir}/bin/Estep_mcmc -vcf ${geno_dir}/${line}.vcf.gz -p ${pheno} \\\n\t                    -maf ${maf} -GTfield ${GTfield} \\\n\t                    -o ${line} -LDwindow ${LDwindow} -saveSS -zipSS\n\t```\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2. Generate Makefile",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Example Usage",
          "**Example commands: `./test_script.sh`**"
        ],
        "type": "Text_excerpt",
        "value": "- In the following example commands, `Nsample` sets GWAS sample size, `Anum` sets the number of annotations, `em` sets number of EM iterations, `Nburnin` sets the number of burn-in MCMC iterations, `Nmcmc` sets the number of MCMC iterations, `anno_dir` specifies the directory of all annotation files,\n\n```\nBFGWAS_dir=\"/projects/YangLabData/Software/BFGWAS_QUANT\" # Tool directory\n\nfilehead=${BFGWAS_dir}/Example/ExData/filehead_4block.txt # Genome block prefix file\nZscore_dir=${BFGWAS_dir}/Example/ExData/Zscore # Zscore file directory\nLDdir=${BFGWAS_dir}/Example/ExData/RefLD # LD file directory\n\nNsample=1893 # GWAS sample size\nAnum=4 # Number of annotations\nem=3 # EM steps\nNburnin=10000  # Burn-in iterations in MCMC\nNmcmc=10000  # MCMC iteration number\n\nanno_dir=${BFGWAS_dir}/Example/ExData/Anno # Annotation file directory\nhfile=${BFGWAS_dir}/Example/ExData/hypval_4anno.txt #  Initial prior parameter values\n\nwkdir=${BFGWAS_dir}/Example/Test_wkdir # Working directory\ncd $wkdir\nmkfile=${wkdir}/simu_BFGWAS.mk ## Makefile directory\n\n########### Generate make file with all jobs\n${BFGWAS_dir}/bin/gen_mkf.pl \\\n--wkdir ${wkdir} --tool_dir ${BFGWAS_dir} \\\n--filehead ${filehead} --LDdir ${LDdir} --Zscore_dir ${Zscore_dir} \\\n--anno_dir ${anno_dir} --AnnoNumber ${Anum} --hfile ${hfile} \\\n--maf 0.01 --Nsample ${Nsample} \\\n--Nburnin ${Nburnin} --Nmcmc ${Nmcmc} --NmcmcLast ${Nmcmc} \\\n--em ${em} --mf ${mkfile}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Output Files",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)"
        ],
        "type": "Text_excerpt",
        "value": "\t- Column `mBeta` : marginal genetic effect size estimate by single variant regression model\n\t- Column `ChisqTest` : chisquare test statistic value by single variant test\n\t- Column `Pval_svt` : p-value by single variant test\n\t- Column \t`Rank` : rank of p-values from the smallest to the largest per genome block\n\t- Columns `Anno_*` : annotation values per variant\n- **Enrichment coefficient estimates** (column `avec`, separated by `,`) are provided in `${wkdir}/Eoutput/EM_result.txt`\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Analyse **BFGWAS_QUANT** Results",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)"
        ],
        "type": "Text_excerpt",
        "value": "- Example plots are provided under `./Example/AnalyzeResults/`\n- Example Rscript for making Manhattan plot for millions of SNPs: `./bin/mp_plot.r`\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Remarks",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)"
        ],
        "type": "Text_excerpt",
        "value": "- Around `32GB` memory might be needed to generate reference LD files.\n- GWAS sample size `Nsample` is recommended to be set as the sample size that are used to generate the `LDcorr` files.\n- GWAS `Zscore` statistics can be easily derived by using the GWAS `p-values` and effect size signs.\n- If **BFGWAS_QUANT** tool fail to complete all EM iterations, one could use the output files generated by the last success EM iteration. The failed scenarios are likely due to the lack of associations.\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 1. Obtain GWAS Zscore and LD Files",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Example Usage",
          "**Example commands: `./test_script.sh`**"
        ],
        "type": "Text_excerpt",
        "value": "- The following commands can be used to generate GWAS Zscore and LD files for one genome block:\n\n\t```\n\tBFGWAS_dir=\"/projects/YangLabData/Software/BFGWAS_QUANT\"\n\tpheno=${BFGWAS_dir}/Example/ExData/sim_pheno.txt\n\tgeno_dir=/home/jyang51/YangLabData/SharedData/AMP-AD/ROSMAP/WGS_JointCall/LDdetect_SegmentedVCF\n\tLDwindow=1000000\n\tmaf=0.001\n\tGTfield=GT\n\tline=\"WGS_1898_samples_CHR_19_13471127_14486347\"\n\t${BFGWAS_dir}/bin/Estep_mcmc -vcf ${geno_dir}/${line}.vcf.gz -p ${pheno} \\\n\t                    -maf ${maf} -GTfield ${GTfield} \\\n\t                    -o ${line} -LDwindow ${LDwindow} -saveSS -zipSS\n\t```\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Step 2. Generate Makefile",
        "parent_header": [
          "Bayesian Functional Genome-wide Association Study using Multivariate Quantitative Annotations (BFGWAS_QUANT)",
          "Example Usage",
          "**Example commands: `./test_script.sh`**"
        ],
        "type": "Text_excerpt",
        "value": "- In the following example commands, `Nsample` sets GWAS sample size, `Anum` sets the number of annotations, `em` sets number of EM iterations, `Nburnin` sets the number of burn-in MCMC iterations, `Nmcmc` sets the number of MCMC iterations, `anno_dir` specifies the directory of all annotation files,\n\n```\nBFGWAS_dir=\"/projects/YangLabData/Software/BFGWAS_QUANT\" # Tool directory\n\nfilehead=${BFGWAS_dir}/Example/ExData/filehead_4block.txt # Genome block prefix file\nZscore_dir=${BFGWAS_dir}/Example/ExData/Zscore # Zscore file directory\nLDdir=${BFGWAS_dir}/Example/ExData/RefLD # LD file directory\n\nNsample=1893 # GWAS sample size\nAnum=4 # Number of annotations\nem=3 # EM steps\nNburnin=10000  # Burn-in iterations in MCMC\nNmcmc=10000  # MCMC iteration number\n\nanno_dir=${BFGWAS_dir}/Example/ExData/Anno # Annotation file directory\nhfile=${BFGWAS_dir}/Example/ExData/hypval_4anno.txt #  Initial prior parameter values\n\nwkdir=${BFGWAS_dir}/Example/Test_wkdir # Working directory\ncd $wkdir\nmkfile=${wkdir}/simu_BFGWAS.mk ## Makefile directory\n\n########### Generate make file with all jobs\n${BFGWAS_dir}/bin/gen_mkf.pl \\\n--wkdir ${wkdir} --tool_dir ${BFGWAS_dir} \\\n--filehead ${filehead} --LDdir ${LDdir} --Zscore_dir ${Zscore_dir} \\\n--anno_dir ${anno_dir} --AnnoNumber ${Anum} --hfile ${hfile} \\\n--maf 0.01 --Nsample ${Nsample} \\\n--Nburnin ${Nburnin} --Nmcmc ${Nmcmc} --NmcmcLast ${Nmcmc} \\\n--em ${em} --mf ${mkfile}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/yanglab-emory/BFGWAS_QUANT/main/README.md",
      "technique": "header_analysis"
    }
  ]
}