{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KGerhardt/RecruitPlotEasy"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-01-06T19:36:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-01-17T00:16:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A tool for interactive Recruitment Plot generation and viewing"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8865550923216182,
      "result": {
        "original_header": "RecruitPlotEasy",
        "type": "Text_excerpt",
        "value": "A tool for interactive Recruitment Plot generation and viewing\n \n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KGerhardt/RecruitPlotEasy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KGerhardt/RecruitPlotEasy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KGerhardt/RecruitPlotEasy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RecruitPlotEasy"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "RecruitPlotEasy and its dependencies are installed via pip. Simply run:\n\n```bash\npip install RecruitPlotEasy\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KGerhardt/RecruitPlotEasy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RecruitPlotEasy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "KGerhardt"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 124133,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "type": "Text_excerpt",
        "value": "- Python >= 3.9\n- Pyrodigal >= 2.0\n- Plotly\n- Numpy \n\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 12:19:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use",
        "type": "Text_excerpt",
        "value": "RecruitPlotEasy has two interchangable ways to access its behavior:\n\n```bash\nrecruitploteasy\n\nrpe\n```\n\nThere are no differences between these methods of calling RecruitPlotEasy - rpe is just a convenient shorthand.\n\nRegardless of which prefix you use, you then have to select an action. The three actions are \"build\", \"plot\", and \"describe\". Usage of the actions looks like this:\n\n```bash\nrpe build\n\nrpe plot\n\nrpe describe\n```\n\nEach has its own set of options that will print to the screen if you use either action without any other arguments, or add --help. \n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build",
        "parent_header": [
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "The \"build\" module controls the creation and modification of a RecruitPlotEasy database. All options in build require a target -d / --database argument to specify a path to a database file to create or modify. Reads are added with the -r / --reads argument, while genomes/MAGs are added with -g / --genome. Only reads are strictly necessary to build and plot with RecruitPlotEasy.\n\nGenomes may be further modified by supplying the --mag and --predict flags. The --mag flag indicates that the file supplied with --genome is a MAG, and that all of the sequences contained within are to be concatenated and treated as part of a single genome. The --predict flag enables protein visualization behavior in the plotting module of RecruitPlotEasy by predicting gene sequences for the current --genome file and storing them in the database.\n\nTo add additional reads or genomes, just specify an already existing database with --database and add the reads or genomes with --reads or --genome as desired.\n\nSequences added with --genome will always overwrite data in a RecruitPlotEasy database, while data added with --reads never will. If the same sequence ID appears in two --genome file additions, the last file added will have its data reflected in the database. This extends to MAG goup and to predicted proteins. Please use caution: there are no warnings for this.\n\n```bash\n#example build\nrpe build -d my_db.db -r reads.sam -g genomes.fna --mag\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Plot",
        "parent_header": [
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "RecruitPlotEasy's plotting functionality is designed to produce a recruitment plot for every single genome/MAG in every single sample in the database. A directory called \"recruitment_plots\" will be created in your working directory, which will contain a subdirectory for each sample. Inside each sample directory, you will find a recruitment plot HTML file for each genome/MAG.\n\nThree decisions have to be made at the time when you are creating plots: genome bin width, percent identity bin height, and protein binning.\n\nGenome bin width, controlled by -w / --width determines how many regions a genome will be broken into. RecruitPlotEasy attempts to evenly divide contigs/genomes into segments of --width base pairs. A contig of length 3500 with the default width of 1000 would be divided into 3 bins of approximately 1166 bases each. This behavior is overwritten by the use of -p / --proteins, which determines genome bins at protein boundaries instead.\n\nPercent identity bin height, controlled by -i / --id_step, determines how many percent identity bins will be created. The range always spans 100 to 70 percent identity (inclusive), and the ID bin height determines how many steps will exist along this range. The default 0.5% identity step divides this range into 61 bins at 100, 99.5, 99.0, ... 70.0.\n\nLast, -p / --proteins instructs RecruitPlotEasy to plot proteins as the genome bins. Each protein will be a bin unto itself based on its start and stop index in the genome, and intergenic regions will be created to span any gaps in the genome uncovered by a protein. If proteins overlap, their overlap will be divided in half, and each protein will be given half of the overlapping region. -w / --width is ignored with proteins are being plotted. You cannot use --proteins if you did not add genomes with the --predict flag during database building.\n\nThe recruitment plots produced by RecruitPlotEasy are otherwise completely standalone. They are simple (albeit large) HTML files and will open in any web browser without any other kind of installation. They can be passed to other uses who do not have RecruitPlotEasy installed (or even Python) and they will still function identically.\n\nTo produce plots for only some of the MAGs in a RecruitPlotEasy database, use the --mag (for exactly one MAG) or --mag_file (for one or more MAGs) arguments! RecruitPlotEasy will plot this MAG in every sample where it's found!\n\n```bash\n#example plot\nrpe plot -d my_db.db -w 3000\n\nrpe plot -d my_db.db -w 3000 --mag just_this_mag\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Describe",
        "parent_header": [
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "RecruitPlotEasy's describe module provides a quick way of checking out the contents of a RecruitPlotEasy database as produced with the \"build\" action discussed above. \n\nGive the describe module a RecruitPlotEasy database and paths to your choices of three outputs: a MAG/genome list text file, a per-sample MAG/genome text file with read and base pair counts, and an interactive HTML heatmap of MAG/genome presence or absence in each sample in the database, colored by read counts.\n\nYou can use the mags file produced by this module as an input for RecruitPlotEasy's --mag_file argument. It's a good starting point for subsetting what you want to plot - just delete the rows from the output file with the names of MAGs you don't want, and whatever's left will be plotted.\n\n```bash\n#example describe\nrpe describe -d my_db.db --mags_file my_mags.txt --samples_file these_samples.txt --heatmap where_are_my_mags.html\n```\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Reading a Recruitment Plot",
        "parent_header": [
          "Use"
        ],
        "type": "Text_excerpt",
        "value": "A recruitment plot conists of one main panel and 5 additional panels that either summarize or annotate the data within the main panel. Check out the How-To-Read slide deck to learn all about it!\n\nhttps://docs.google.com/presentation/d/1XB7J-XDCLsvIUKzjw32PMktL2fXzNQOH61rjSCP309A/edit?usp=sharing\n"
      },
      "source": "https://raw.githubusercontent.com/KGerhardt/RecruitPlotEasy/main/README.md",
      "technique": "header_analysis"
    }
  ]
}