{
  "application_domain": [
    {
      "confidence": 109.84,
      "result": {
        "type": "String",
        "value": "Natural Language Processing"
      },
      "technique": "supervised_classification"
    },
    {
      "confidence": 11.26,
      "result": {
        "type": "String",
        "value": "Audio"
      },
      "technique": "supervised_classification"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zxw1995shawn/BioByGANS"
      },
      "technique": "GitHub_API"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact Information",
        "parent_header": [
          "BioByGANS"
        ],
        "type": "Text_excerpt",
        "value": "For help or suggestions for BioByGANS, please concact Xiangwen Zheng(`xwzheng60602@163.com`).\n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-06-08T11:39:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-01-10T19:23:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a BioBERT/SpaC-Graph Attention Network-Softmax based BioNER method"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9985399999286138,
      "result": {
        "original_header": "BioByGANS",
        "type": "Text_excerpt",
        "value": "This repository provides the code for BioByGANS, a BioBERT&SpaCy - Graph Attention Network - Softmax based method for biomedical entity recognition. This project is done by Information Center, Academy of Miliary Medical Sciences.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9733947121346163,
      "result": {
        "original_header": "Datasets",
        "type": "Text_excerpt",
        "value": "We use 8 open-source biomedical corpora covering genes, proteins, diseases, and chemicals, including BC2GM, JNLPBA, Species-800, LINNAEUS, BC5CDR, NCBI-Disease, BC4CHEMD.   \nThe NLP tool used in this project is [SpaCy](https://spacy.io/). SpaCy is a powerful and lightweight NLP tool for various languages, of which the functions include tokenizer, tagger, parser, etc. Specifically, we use the version 3.2.1, with the language package [en_core_web_trf](https://spacy.io/models/en#en_core_web_trf) to achieve our results. SpaCy with en_core_web_trf achieves the precision of 100% on tokenization, 98% on part of speech tagging, 95% on sentence segmentation, 95% on unlabeled dependencies, and 90% on general named entity recognition.\n \n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9369107259480756,
      "result": {
        "original_header": "Inplementing BioNER",
        "type": "Text_excerpt",
        "value": "We take the chemical NER on BC5CDR-disease as an example in this section. Setting several environment variables as:\n```bash\n$ export BIOBERT_DIR=./biobert_v1.1_pubmed\n$ export NER_DIR=./corpus/BC5CDR-chem\n$ export OUTPUT_DIR=./ner_outputs\n$ mkdir -p OUTPUT_DIR\n```\nFollowing command runs NER code:\nBASH2*\nAfter training, developing and testing, Use `./biocodes/ner_detokenize.py` to obtain word-level prediction file, and use `./biocodes/conlleval.pl` to get results.\nBASH3*\nThe results for BC5CDR-chem corpus is like:\nBASH4*  \n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Download",
        "parent_header": [
          "BioByGANS"
        ],
        "type": "Text_excerpt",
        "value": "The [BioBERT](https://github.com/dmis-lab/biobert) pre-trained weights are provided by Lee et al. from DMIS-Lab, of which the paper is [BioBERT: a pre-trained biomedical language representation model for biomedical text mining](http://doi.org/10.1093/bioinformatics/btz682).  \n\nThe pre-trained weights we used in this project is [BioBERT-Base v1.1 (+ PubMed 1M)](https://drive.google.com/file/d/1R84voFKHfWV9xjzeLzWBbmY1uOMYpnyD/view?usp=sharing) - based on BERT-base-Cased (same vocabulary).  \n\nFor more pre-trained weights, please visit [BioBERT](https://github.com/dmis-lab/biobert).  \n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/zxw1995shawn/BioByGANS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zxw1995shawn/BioByGANS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "zxw1995shawn/BioByGANS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioByGANS"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BioByGANS"
        ],
        "type": "Text_excerpt",
        "value": "Our project is based on Tensorflow 1.15 (python version = 3.7.11). The model can be installed by following instructions:  \n```bash\n$ git clone https://github.com/zxw1995shawn/BioByGANS.git\n$ cd BioByGANS\n$ pip install -r requirements.txt\n```\nThe model can also be implemented in CPU environment, just through changing the tensorflow as a CPU version.\n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9872837657817449,
      "result": {
        "original_header": "Inplementing BioNER",
        "type": "Text_excerpt",
        "value": "We take the chemical NER on BC5CDR-disease as an example in this section. Setting several environment variables as:\n```bash\n$ export BIOBERT_DIR=./biobert_v1.1_pubmed\n$ export NER_DIR=./corpus/BC5CDR-chem\n$ export OUTPUT_DIR=./ner_outputs\n$ mkdir -p OUTPUT_DIR\n```\nFollowing command runs NER code:\nBASH2*\nAfter training, developing and testing, Use `./biocodes/ner_detokenize.py` to obtain word-level prediction file, and use `./biocodes/conlleval.pl` to get results.\nBASH3*\nThe results for BC5CDR-chem corpus is like:\nBASH4*  \n"
      },
      "source": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/zxw1995shawn/BioByGANS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BioByGANS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "zxw1995shawn"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 304894,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 12743,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/zxw1995shawn/BioByGANS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "requirements",
    "contributors",
    "documentation",
    "license",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 11:37:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ]
}