{
  "application_domain": [
    {
      "confidence": 12.52,
      "result": {
        "type": "String",
        "value": "Computer Vision"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Reference:",
        "parent_header": [
          "Description of EGIO results"
        ],
        "type": "Text_excerpt",
        "value": "Ma J, Wu JY, Zhu L. Detection of orthologous exons and isoforms using EGIO. Bioinformatics. 2022 10;38(19):4474-4480. \n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wu-lab-egio/EGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-12-23T01:51:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-23T08:56:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Exon Group Ideogram based detection of Orthologous exons and Orthologous isoforms"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "type": "Text_excerpt",
        "value": "EGIO (Exon Group Ideogram based detection of Orthologous exons and Orthologous isoforms) is aimed to detect orthologous exons and isoforms within pre-defined orthologous gene pairs. EGIO uses a dynamic programming strategy to do isoform alignment, in which  reciprocal BLASTN results are used to guide the whole process. \n\nThe scripts have been tested on MacOS (X64) and Ubuntu (Linux).\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description of EGIO results",
        "type": "Text_excerpt",
        "value": "Two files will be generated after running EGIO: ExonGroup.txt and OrthoIso.txt.\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Explaination of ExonGroup.txt headers:",
        "parent_header": [
          "Description of EGIO results"
        ],
        "type": "Text_excerpt",
        "value": "Group: exon group number\n\nspecies1EnsemblG: gene id of species1\n\nspecies1Pos: unique exon region of a exon group in species1\n\nspecies2EnsemblG: gene id of species2\n\nspecies2Pos: unique exon region of a exon group in species2\n\nIden: identity of unique exon region in two species of a exon group\n\nType: type of exon group.\n\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Explaination of OrthoIso.txt headers:",
        "parent_header": [
          "Description of EGIO results"
        ],
        "type": "Text_excerpt",
        "value": "species1: gene id of species1\n\nspecies2: gene id of species1\n\nspecies1iso: isoform of species1\n\nspecies2iso: isoform of species2\n\nexoniden: identity of corresponding exons. The exon IDs can be found in corresponding species.exon file, which is one of the EGIO output in the \"extrainfo\" folder in the work directory.\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9774363145308451,
      "result": {
        "original_header": "September 23rd, 2022",
        "type": "Text_excerpt",
        "value": "(2) add a visualization tool to plot EGI and isoforms of two species.\n \n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/wu-lab-egio/EGIO/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 0
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wu-lab-egio/EGIO/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wu-lab-egio/EGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/_RUN_egio.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 0.9349404339548019,
      "result": {
        "original_header": "December 18th, 2022",
        "type": "Text_excerpt",
        "value": "Fix bugs\n \n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/wu-lab-egio/EGIO/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EGIO"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "wu-lab-egio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 166116,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 9110,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 4557,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirement",
        "type": "Text_excerpt",
        "value": "(1) gcc\n    \n    gcc is required to compile ___pairwisealign.c\n    \n(2) EGIO required python packages pandas and numpy, to install pandas and numpy:\n\n    pip install pandas\n  \n    pip install numpy\n\n\n(3) To increase the accuracy, the algorithm uses a BLASTN guided model, so a reciprocal BLASTN of exons is used. To run reciprocal BLASTN, BLAST+ is required before running EGIO, which could be downloaded at https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/. For linux, it is easy to install BLAST+ using:\n\n    apt-get install ncbi-blast+\n\n\n(4) A tab seperated file containing pre-defined orthologous gene pairs, which could be prepared according to Inparanoid: https://inparanoid.sbc.su.se/cgi-bin/index.cgi. The gene id provided by Inparanoid is Uniprot ID, which can be transformed to Ensembl Gene ID using gene annotations in Ensembl BioMart. An example is listed here:\n\n    hsa\tptr\n  \n    ENSG00000131018\tENSPTRG00000018717\n  \n    ENSG00000183091\tENSPTRG00000012536\n  \n    ENSG00000183091\tENSPTRG00000012536\n  \n    ... \n\nTo be noted, the header is required in the file.\n\n\n(4) Required files, which can be downloaded from Ensembl (http://asia.ensembl.org/info/data/ftp/index.html):\n\n  cDNA fasta files,\n  \n  CDS fasta files,\n  \n  reference transcriptome gtf files\n \n(5) plotnine package is required, if you want to visuzalize isoforms of two orthologous genes\n\n    pip install plotnine\n \n  "
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Run EGIO",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To test EGIO, please download example files in https://github.com/wu-lab-egio/EGIO_example_source, and unzip gtf files. Put these files in folder \"example\", and put the \"example\" folder into \"EGIO-main\". When running EGIO, it may notice that it is not permitted to run _Run_egio.sh, and it can be solved by chmod command.\n\nTo run EGIO, type following commands in Ternimal:\n\n\n    cd /path/to/EGIO-main\n    chmod 777 _RUN_egio.sh\n    ./_RUN_egio.sh -s hsa -S ptr -r example/hsa.gtf -R example/ptr.gtf -e example/hsa_mRNA_example.fa -E example/ptr_mRNA_example.fa -o example/hsa_CDS_example.fa -O example/ptr_CDS_example.fa -h example/homogene.txt -p 6 -i 0.8 -c 0.8 -m 2 -n -2 -g -1\n\n\nIt will take about 1.5 hours to complete the comparison of human and chimpanzee using 6 cores (MacOS, 2.4 GHz, 16 RAM).\n\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2024-10-04 13:19:46",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.5"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Visualization",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "plotnine package is required to visualize isoforms of two orthologous genes:\n\n    pip install plotnine\n\nVisualization:\n\n    python __plotIsoCom.py --speciespair species1-species2 --orthologpair gene_of_species1-gene_of_species2 --feature cds_or_exon --extrapath /path/to/extrainfo/folder --egpath /path/to/EGfile --outpath /path/to/store/plot\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Parameters:",
        "parent_header": [
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "-s: name of species1, to be noted, the name should be consistent with the header of the file containing pre-defined orthologous gene pairs, eg: hsa (required)\n\n-S: name of species2, to be noted, the name should be consistent with the header of the file containing pre-defined orthologous gene pairs, eg: ptr (required)\n\n-r: gtf file of species1, reference transcriptome (required)\n\n-R: gtf file of species2, reference transcriptome (required)\n\n-e: cDNA fasta file of species1, sequence of total exons (required)\n\n-E: cDNA fasta file of species2, sequence of total exons (required)\n\n-o: CDS fasta file of species1, sequence of orf (required)\n\n-O: CDS fasta file of species2, sequence of orf (required)\n\n-h: orthologous/homologous gene pair containing file (required)\n\n\n-p: multiple processing to run EGIO (optional, default is 1)\n\n-i: identity threshold to detect orthologous exons during dynamic programming (optional, default is 0.8)\n\n-c: coverage threshold to detect orthologous exons during dynamic programming (optional, default is 0.8)\n\n-m: match score during dynamic programming (optional, default is 2)\n\n-n: mismatch penalty during dynamic programming (optional, default is -2)\n\n-g: gap penalty during dynamic programming (optional, default is -1)\n\n"
      },
      "source": "https://raw.githubusercontent.com/wu-lab-egio/EGIO/main/README.md",
      "technique": "header_analysis"
    }
  ]
}